
sdk.elf:	file format ELF32-q32s

Disassembly of section .text:
text_begin:
 1e00120:    ee ff 50 18 00 00 	sp = 6224			  ## startup.S:25:0
 1e00126:    ed ff 50 18 00 00 	ssp = 6224			  ## startup.S:26:0
 1e0012c:    80 f3 26 95       	call 76364 <boot_info_init : 1e12b7c >			  ## startup.S:28:0
 1e00130:    00 70             	r0 = 0			  ## startup.S:30:0
 1e00132:    c1 ff 60 18 00 00 	r1 = 6240 <report_irq_stack_end : 1860 >			  ## startup.S:31:0
 1e00138:    c2 ff 50 19 00 00 	r2 = 6480 <report_bss_size : 1950 >			  ## startup.S:32:0
 1e0013e:    92 d0             	r2 = r2 >> 2			  ## startup.S:33:0
 1e00140:    02 18             	goto 4 <text_begin+0x26 : 1e00146 >			  ## startup.S:35:0
 1e00142:    50 f6 04 10       	[r1 ++= 4] = r0			  ## startup.S:37:0
 1e00146:    52 fb 01 29       	r2 = r2 - 1			  ## startup.S:39:0
 1e0014a:    02 e0 fa af       	ifs (r2 >= 0) goto -12 <text_begin+0x22 : 1e00142 >			  ## startup.S:40:0
 1e0014e:    00 70             	r0 = 0			  ## startup.S:42:0
 1e00150:    c1 ff 00 50 00 00 	r1 = 20480 <nvbss_begin : 5000 >			  ## startup.S:43:0
 1e00156:    c2 ff 00 6b 00 00 	r2 = 27392 <nvbss_size : 6b00 >			  ## startup.S:44:0
 1e0015c:    92 d0             	r2 = r2 >> 2			  ## startup.S:45:0
 1e0015e:    02 18             	goto 4 <text_begin+0x44 : 1e00164 >			  ## startup.S:47:0
 1e00160:    50 f6 04 10       	[r1 ++= 4] = r0			  ## startup.S:49:0
 1e00164:    52 fb 01 29       	r2 = r2 - 1			  ## startup.S:51:0
 1e00168:    02 e0 fa af       	ifs (r2 >= 0) goto -12 <text_begin+0x40 : 1e00160 >			  ## startup.S:52:0
 1e0016c:    c0 ff 40 08 00 00 	r0 = 2112 <report_data_begin : 840 >			  ## startup.S:54:0
 1e00172:    c1 ff d0 0f e2 01 	r1 = 31592400 <text_end : 1e20fd0 >			  ## startup.S:55:0
 1e00178:    c2 ff 00 08 00 00 	r2 = 2048 <report_mmu_tlb_size : 800 >			  ## startup.S:56:0
 1e0017e:    92 d0             	r2 = r2 >> 2			  ## startup.S:57:0
 1e00180:    04 18             	goto 8 <text_begin+0x6A : 1e0018a >			  ## startup.S:59:0
 1e00182:    43 f6 04 10       	r3 = [r1 ++= 4]			  ## startup.S:61:0
 1e00186:    53 f6 04 00       	[r0 ++= 4] = r3			  ## startup.S:62:0
 1e0018a:    52 fb 01 29       	r2 = r2 - 1			  ## startup.S:64:0
 1e0018e:    02 e0 f8 af       	ifs (r2 >= 0) goto -16 <text_begin+0x62 : 1e00182 >			  ## startup.S:65:0
 1e00192:    c0 ff c0 31 00 00 	r0 = 12736 <report_data_code_begin : 31c0 >			  ## startup.S:67:0
 1e00198:    c1 ff d0 17 e2 01 	r1 = 31594448 <data_code_begin : 1e217d0 >			  ## startup.S:68:0
 1e0019e:    c2 ff 28 1e 00 00 	r2 = 7720 <report_data_code_size : 1e28 >			  ## startup.S:69:0
 1e001a4:    92 d0             	r2 = r2 >> 2			  ## startup.S:70:0
 1e001a6:    04 18             	goto 8 <text_begin+0x90 : 1e001b0 >			  ## startup.S:72:0
 1e001a8:    43 f6 04 10       	r3 = [r1 ++= 4]			  ## startup.S:74:0
 1e001ac:    53 f6 04 00       	[r0 ++= 4] = r3			  ## startup.S:75:0
 1e001b0:    52 fb 01 29       	r2 = r2 - 1			  ## startup.S:77:0
 1e001b4:    02 e0 f8 af       	ifs (r2 >= 0) goto -16 <text_begin+0x88 : 1e001a8 >			  ## startup.S:78:0
 1e001b8:    28 fb 00 2b       	r2 = icfg			  ## startup.S:79:0
 1e001bc:    32 fd 03 2a       	r2 = r2 & 4294966527			  ## startup.S:80:0
 1e001c0:    29 fb 00 2b       	icfg = r2			  ## startup.S:81:0
 1e001c4:    80 f3 dd 0d       	call 7098 <update_result_get : 1e01d82 >			  ## startup.S:84:0
 1e001c8:    80 f3 3c 7d       	call 64120 <maskrom_init : 1e0fc44 >			  ## startup.S:87:0
 1e001cc:    c0 f3 eb 94       	goto 76246 <main : 1e12ba6 >			  ## startup.S:90:0


__BT_UPDATA_JUMP:
 1e001d0:    00 70             	r0 = 0			  ## startup.S:94:0
 1e001d2:    01 fb 20 08       	r1 = 2080 <report_irq_stack_size : 820 >			  ## startup.S:95:0
 1e001d6:    02 fb 00 08       	r2 = 2048 <report_mmu_tlb_size : 800 >			  ## startup.S:96:0
 1e001da:    92 d0             	r2 = r2 >> 2			  ## startup.S:97:0
 1e001dc:    02 18             	goto 4 <__BT_UPDATA_JUMP+0x12 : 1e001e2 >			  ## startup.S:99:0
 1e001de:    50 f6 04 10       	[r1 ++= 4] = r0			  ## startup.S:101:0
 1e001e2:    52 fb 01 29       	r2 = r2 - 1			  ## startup.S:103:0
 1e001e6:    02 e0 fa af       	ifs (r2 >= 0) goto -12 <__BT_UPDATA_JUMP+0xE : 1e001de >			  ## startup.S:104:0
 1e001ea:    00 70             	r0 = 0			  ## startup.S:106:0
 1e001ec:    01 fb c0 13       	r1 = 5056 <_cpu0_sstack_begin+0x370 : 13c0 >			  ## startup.S:107:0
 1e001f0:    02 fb 08 01       	r2 = 264 <DRIVER_RAM_TOTAL+0x16 : 108 >			  ## startup.S:108:0
 1e001f4:    92 d0             	r2 = r2 >> 2			  ## startup.S:109:0
 1e001f6:    02 18             	goto 4 <__BT_UPDATA_JUMP+0x2C : 1e001fc >			  ## startup.S:110:0
 1e001f8:    50 f6 04 10       	[r1 ++= 4] = r0			  ## startup.S:112:0
 1e001fc:    52 fb 01 29       	r2 = r2 - 1			  ## startup.S:114:0
 1e00200:    02 e0 fa af       	ifs (r2 >= 0) goto -12 <__BT_UPDATA_JUMP+0x28 : 1e001f8 >			  ## startup.S:115:0
 1e00204:    c1 ff 00 36 6e 01 	r1 = 24000000 <uECC_vli_cmp_unsafe+0x15DC604 : 16e3600 >			  ## startup.S:118:0
 1e0020a:    c0 ff 04 fc 00 00 	r0 = 64516 <boot_arg_list+0x4 : fc04 >			  ## startup.S:119:0
 1e00210:    09 40             	[r0 + 0] = r1			  ## startup.S:120:0
 1e00212:    ed ff 20 0c 00 00 	ssp = 3104			  ## startup.S:122:0
 1e00218:    3d 00             	sp = ssp			  ## startup.S:123:0
 1e0021a:    ec ff 20 10 00 00 	usp = 4128			  ## startup.S:124:0
 1e00220:    00 70             	r0 = 0			  ## startup.S:125:0
 1e00222:    01 70             	r1 = 0			  ## startup.S:126:0
 1e00224:    02 70             	r2 = 0			  ## startup.S:127:0
 1e00226:    03 70             	r3 = 0			  ## startup.S:128:0
 1e00228:    04 70             	r4 = 0			  ## startup.S:129:0
 1e0022a:    05 70             	r5 = 0			  ## startup.S:130:0
 1e0022c:    06 70             	r6 = 0			  ## startup.S:131:0
 1e0022e:    07 70             	r7 = 0			  ## startup.S:132:0
 1e00230:    08 70             	r8 = 0			  ## startup.S:133:0
 1e00232:    09 70             	r9 = 0			  ## startup.S:134:0
 1e00234:    0a 70             	r10 = 0			  ## startup.S:135:0
 1e00236:    0b 70             	r11 = 0			  ## startup.S:136:0
 1e00238:    0c 70             	r12 = 0			  ## startup.S:137:0
 1e0023a:    0d 70             	r13 = 0			  ## startup.S:138:0
 1e0023c:    0e 70             	r14 = 0			  ## startup.S:139:0
 1e0023e:    0f 70             	r15 = 0			  ## startup.S:140:0
 1e00240:    29 fb 00 05       	psr = r0			  ## startup.S:141:0
 1e00244:    29 fb 00 01       	rete = r0			  ## startup.S:142:0
 1e00248:    29 fb 00 02       	retx = r0			  ## startup.S:143:0
 1e0024c:    29 fb 00 03       	rets = r0			  ## startup.S:144:0
 1e00250:    29 fb 00 00       	reti = r0			  ## startup.S:145:0
 1e00254:    e0 ff 60 60 10 00 	reti = 1073248			  ## startup.S:146:0
 1e0025a:    22 00             	rti			  ## startup.S:147:0


adc_value_push:
 1e0025c:    02 50             	r2 = h[r0 + 0] (u)			  ## adc_api.c:111:0
 1e0025e:    51 f8 00 02       	h[r0+r2<<1] = r1			  ## adc_api.c:113:16
 1e00262:    12 80             	r2 += 1			  ## adc_api.c:114:8
 1e00264:    01 70             	r1 = 0			  ## adc_api.c:118:16
 1e00266:    92 e0 01 00       	if (r2 == 9) goto 2 <adc_value_push+0x10 : 1e0026c >
 1e0026a:    21 08             	r1 = r2			  ## adc_api.c:118:16
 1e0026c:    09 50             	h[r0 + 0] = r1			  ## adc_api.c:118:14
 1e0026e:    20 00             	rts			  ## adc_api.c:119:1


adc_pmu_ch_select:
 1e00270:    c1 ff 94 18 1a 00 	r1 = 1710228 <uECC_vli_cmp_unsafe+0x9A898 : 1a1894 >			  ## p33.c:101:0
 1e00276:    02 62             	r2 = b[r1 + 0] (u)			  ## p33.c:101:0
 1e00278:    32 fd 1e 29       	r2 = r2 & 4294967265			  ## p33.c:101:0
 1e0027c:    06 20             	if (r0 == 0) goto 12 <adc_pmu_ch_select+0x1A : 1e0028a >			  ## p33.c:101:0
 1e0027e:    40 c0             	r0 = r0 << 1			  ## p33.c:108:9
 1e00280:    03 fb 1e e0       	r3 = -8162 <bank_code_load_addr+0x1DAA26 : 1ffe01e >			  ## p33.c:108:9
 1e00284:    50 b7             	r0 &= r3			  ## p33.c:108:9
 1e00286:    50 b4             	r0 |= r2			  ## p33.c:108:9
 1e00288:    0a 18             	goto 20 <adc_pmu_ch_select+0x2E : 1e0029e >			  ## p33.c:108:9
 1e0028a:    0a 62             	b[r1 + 0] = r2			  ## p33.c:103:9
 1e0028c:    00 62             	r0 = b[r1 + 0] (u)			  ## p33.c:104:9
 1e0028e:    90 b2             	r0 |= 32			  ## p33.c:104:9
 1e00290:    08 62             	b[r1 + 0] = r0			  ## p33.c:104:9
 1e00292:    00 62             	r0 = b[r1 + 0] (u)			  ## p33.c:105:9
 1e00294:    10 b3             	r0 |= 64			  ## p33.c:105:9
 1e00296:    08 62             	b[r1 + 0] = r0			  ## p33.c:105:9
 1e00298:    90 62             	r0 = b[r1 + 9] (u)			  ## p33.c:106:9
 1e0029a:    91 80             	r1 += 9			  ## p33.c:106:9
 1e0029c:    90 b2             	r0 |= 32			  ## p33.c:106:9
 1e0029e:    08 62             	b[r1 + 0] = r0
 1e002a0:    20 00             	rts			  ## p33.c:110:1


adc_sample:
 1e002a2:    74 01             	[--sp] = {rets, r4}			  ## adc_api.c:263:0
 1e002a4:    c1 ff b0 20 00 00 	r1 = 8368 <gatt_client_conn_handle : 20b0 >			  ## adc_api.c:264:29
 1e002aa:    e2 52             	r2 = h[r1 + 28] (u)			  ## adc_api.c:264:29
 1e002ac:    c2 ff ff ff 00 00 	r2 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## adc_api.c:264:29
 1e002b2:    ea 52             	h[r1 + 28] = r2			  ## adc_api.c:265:14
 1e002b4:    01 c2             	r1 = r0 << 8			  ## adc_api.c:275:5
 1e002b6:    21 fd 0f 1a       	r1 = r1 & 3840			  ## adc_api.c:275:5
 1e002ba:    22 fc 6f f0       	r2 = r2 + -3985			  ## adc_api.c:275:5
 1e002be:    23 04             	r3 = r0.l (u)			  ## adc_api.c:277:13
 1e002c0:    e0 fd 20 41       	r4 = r1 | r2			  ## adc_api.c:275:5
 1e002c4:    d3 e0 02 10       	if (r3 != 13) goto 4 <adc_sample+0x2A : 1e002cc >
 1e002c8:    00 d4             	r0 = r0 >> 16			  ## adc_api.c:278:30
 1e002ca:    d2 17             	call -92 <adc_pmu_ch_select : 1e00270 >			  ## adc_api.c:278:9
 1e002cc:    c0 ff 00 31 1e 00 	r0 = 1978624 <uECC_vli_cmp_unsafe+0xDC104 : 1e3100 >
 1e002d2:    0c 40             	[r0 + 0] = r4			  ## adc_api.c:281:17
 1e002d4:    00 f4 10 09       	[r0 + 0] |= 16			  ## adc_api.c:282:17
 1e002d8:    00 f4 40 09       	[r0 + 0] |= 64			  ## adc_api.c:283:17
 1e002dc:    54 01             	{pc, r4} = [sp++]			  ## adc_api.c:283:17


adc_scan:
 1e002de:    77 01             	[--sp] = {rets, r7-r4}			  ## adc_api.c:294:0
 1e002e0:    c3 ff a0 24 00 00 	r3 = 9376 <pmu_voltage : 24a0 >			  ## adc_api.c:294:0
 1e002e6:    00 f6 c4 31       	r0 = [r3 + 452]			  ## adc_api.c:297:31
 1e002ea:    f0 ef 55 10       	if (r0 != -1) goto 170 <adc_scan+0xBA : 1e00398 >
 1e002ee:    c0 ff 00 31 1e 00 	r0 = 1978624 <uECC_vli_cmp_unsafe+0xDC104 : 1e3100 >			  ## adc_api.c:301:17
 1e002f4:    00 40             	r0 = [r0 + 0]			  ## adc_api.c:301:17
 1e002f6:    24 f3 4f 00       	if ((r0 & 16) != 0) goto 158 <adc_scan+0xBA : 1e00398 >			  ## adc_api.c:301:17
 1e002fa:    c4 ff b0 20 00 00 	r4 = 8368 <gatt_client_conn_handle : 20b0 >
 1e00300:    00 f9 2c 40       	r0 = b[r4 + 44] (u)
 1e00304:    13 20             	if (r0 == 0) goto 38 <adc_scan+0x4E : 1e0032c >
 1e00306:    e0 58             	r0 = h[r4 + 28] (u)			  ## adc_api.c:306:35
 1e00308:    05 68             	r5 = b[r4 + 0] (u)			  ## adc_api.c:306:19
 1e0030a:    29 c1             	r1 = r5 << 4			  ## adc_api.c:306:27
 1e0030c:    31 09             	r1 += r3			  ## adc_api.c:306:27
 1e0030e:    10 f7 28 11       	h[r1 + 296] = r0			  ## adc_api.c:306:33
 1e00312:    00 f6 24 11       	r0 = [r1 + 292]			  ## adc_api.c:307:31
 1e00316:    d0 e0 0b 00       	if (r0 == 13) goto 22 <adc_scan+0x52 : 1e00330 >			  ## adc_api.c:307:13
 1e0031a:    c1 ff 0d 00 05 00 	r1 = 327693 <text_size+0x2F15D : 5000d >
 1e00320:    10 f2 0a 10       	if (r0 != r1) goto 20 <adc_scan+0x5A : 1e00338 >
 1e00324:    e1 58             	r1 = h[r4 + 28] (u)			  ## adc_api.c:308:13
 1e00326:    40 fc 88 01       	r0 = r4 + 392			  ## adc_api.c:308:13
 1e0032a:    05 18             	goto 10 <adc_scan+0x58 : 1e00336 >			  ## adc_api.c:308:13
 1e0032c:    05 68             	r5 = b[r4 + 0] (u)
 1e0032e:    07 18             	goto 14 <adc_scan+0x60 : 1e0033e >
 1e00330:    e1 58             	r1 = h[r4 + 28] (u)			  ## adc_api.c:311:13
 1e00332:    40 fc 9c 01       	r0 = r4 + 412			  ## adc_api.c:311:13
 1e00336:    92 17             	call -220 <adc_value_push : 1e0025c >
 1e00338:    00 70             	r0 = 0
 1e0033a:    10 f9 2c 40       	b[r4 + 44] = r0
 1e0033e:    28 c1             	r0 = r5 << 4			  ## adc_api.c:95:10
 1e00340:    30 09             	r0 += r3			  ## adc_api.c:95:10
 1e00342:    00 fc 34 01       	r0 = r0 + 308			  ## adc_api.c:95:10
 1e00346:    15 80             	r5 += 1
 1e00348:    95 e0 05 c0       	ifs (r5 > 9) goto 10 <adc_scan+0x78 : 1e00356 >
 1e0034c:    41 f6 10 00       	r1 = [r0 ++= 16]			  ## adc_api.c:96:26
 1e00350:    f1 ef f9 0f       	if (r1 == -1) goto -14 <adc_scan+0x68 : 1e00346 >			  ## adc_api.c:96:26
 1e00354:    01 18             	goto 2 <adc_scan+0x7A : 1e00358 >			  ## adc_api.c:96:26
 1e00356:    05 70             	r5 = 0
 1e00358:    40 05             	r0 = r5.b0 (u)			  ## adc_api.c:327:9
 1e0035a:    00 c1             	r0 = r0 << 4			  ## adc_api.c:327:9
 1e0035c:    30 09             	r0 += r3			  ## adc_api.c:327:9
 1e0035e:    06 fc 24 01       	r6 = r0 + 292			  ## adc_api.c:327:9
 1e00362:    31 4c             	r1 = [r6 + 12]			  ## adc_api.c:327:28
 1e00364:    13 22             	if (r1 == 0) goto 38 <adc_scan+0xAE : 1e0038c >			  ## adc_api.c:327:9
 1e00366:    07 fc 2c 01       	r7 = r0 + 300
 1e0036a:    00 4e             	r0 = [r7 + 0]			  ## adc_api.c:328:13
 1e0036c:    c1 ff 88 08 00 00 	r1 = 2184 <jiffies : 888 >			  ## adc_api.c:328:13
 1e00372:    01 42             	r1 = [r1 + 0]			  ## adc_api.c:328:13
 1e00374:    10 f2 0f a0       	ifs (r0 >= r1) goto 30 <adc_scan+0xB8 : 1e00396 >			  ## adc_api.c:328:13
 1e00378:    00 4c             	r0 = [r6 + 0]			  ## adc_api.c:329:43
 1e0037a:    93 17             	call -218 <adc_sample : 1e002a2 >			  ## adc_api.c:329:13
 1e0037c:    30 4c             	r0 = [r6 + 12]			  ## adc_api.c:331:62
 1e0037e:    01 4e             	r1 = [r7 + 0]			  ## adc_api.c:331:40
 1e00380:    12 70             	r2 = 1			  ## adc_api.c:331:40
 1e00382:    12 f9 2c 40       	b[r4 + 44] = r2			  ## adc_api.c:331:40
 1e00386:    10 09             	r0 += r1			  ## adc_api.c:331:40
 1e00388:    08 4e             	[r7 + 0] = r0			  ## adc_api.c:331:40
 1e0038a:    05 18             	goto 10 <adc_scan+0xB8 : 1e00396 >			  ## adc_api.c:331:40
 1e0038c:    00 4c             	r0 = [r6 + 0]			  ## adc_api.c:334:39
 1e0038e:    89 17             	call -238 <adc_sample : 1e002a2 >			  ## adc_api.c:334:9
 1e00390:    10 70             	r0 = 1			  ## adc_api.c:334:9
 1e00392:    10 f9 2c 40       	b[r4 + 44] = r0			  ## adc_api.c:334:9
 1e00396:    0d 68             	b[r4 + 0] = r5			  ## adc_api.c:338:12
 1e00398:    57 01             	{pc, r7-r4} = [sp++]			  ## adc_api.c:346:1


adc_isr:
 1e0039a:    e9 01             	[--sp] = {psr, rets, reti}			  ## adc_api.c:253:0
 1e0039c:    78 f3 1f 00       	[--sp] = {r4-r0}			  ## adc_api.c:253:0
 1e003a0:    c4 ff 00 31 1e 00 	r4 = 1978624 <uECC_vli_cmp_unsafe+0xDC104 : 1e3100 >			  ## adc_api.c:253:0
 1e003a6:    10 48             	r0 = [r4 + 4]			  ## adc_api.c:254:24
 1e003a8:    c1 ff b0 20 00 00 	r1 = 8368 <gatt_client_conn_handle : 20b0 >			  ## adc_api.c:254:14
 1e003ae:    e8 52             	h[r1 + 28] = r0			  ## adc_api.c:254:14
 1e003b0:    98 f3 f4 34       	call 3172840 <local_irq_disable : 106d9c >			  ## adc_api.c:257:5
 1e003b4:    c0 f4 40 49       	[r4 + 0] = 64			  ## adc_api.c:258:17
 1e003b8:    98 f3 ee 34       	call 3172828 <local_irq_enable : 106d98 >			  ## adc_api.c:259:5
 1e003bc:    70 f3 1f 00       	{r4-r0} = [sp++]			  ## adc_api.c:260:1
 1e003c0:    a9 01             	{psr, rets, reti} = [sp++]			  ## adc_api.c:260:1
 1e003c2:    22 00             	rti			  ## adc_api.c:260:1


clock_critical_enter:
 1e003c4:    c0 ff 90 31 00 00 	r0 = 12688 <hdl.17 : 3190 >			  ## mcpwm.c:107:0
 1e003ca:    00 40             	r0 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/clock.c:1758:20
 1e003cc:    c1 ff 70 1d 00 00 	r1 = 7536 <system_bss_start : 1d70 >			  ## mcpwm.c:108:19
 1e003d2:    08 42             	[r1 + 0] = r0			  ## mcpwm.c:108:19
 1e003d4:    20 00             	rts			  ## mcpwm.c:109:1


clock_critical_exit:
 1e003d6:    7f 01             	[--sp] = {rets, r15-r4}			  ## mcpwm.c:111:0
 1e003d8:    c0 ff 70 1d 00 00 	r0 = 7536 <system_bss_start : 1d70 >			  ## mcpwm.c:113:26
 1e003de:    00 40             	r0 = [r0 + 0]			  ## mcpwm.c:113:26
 1e003e0:    c1 ff 90 31 00 00 	r1 = 12688 <hdl.17 : 3190 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/clock.c:1758:20
 1e003e6:    01 42             	r1 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/clock.c:1758:20
 1e003e8:    01 f2 48 00       	if (r1 == r0) goto 144 <.GJTIE6_0_0_+0x4E : 1e0047c >
 1e003ec:    02 70             	r2 = 0
 1e003ee:    09 fb 00 01       	r9 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >
 1e003f2:    c4 ff e4 30 1e 00 	r4 = 1978596 <uECC_vli_cmp_unsafe+0xDC0E8 : 1e30e4 >
 1e003f8:    c0 fe 00 51       	r5 = r1 / r0 (u)
 1e003fc:    c0 fe 10 60       	r6 = r0 / r1 (u)
 1e00400:    4a fc 28 ff       	r10 = r4 + -216
 1e00404:    4b fc 90 ff       	r11 = r4 + -112
 1e00408:    4c fc 34 ff       	r12 = r4 + -204
 1e0040c:    4d fc a0 ff       	r13 = r4 + -96
 1e00410:    48 fc 40 ff       	r8 = r4 + -192
 1e00414:    4f fc b0 ff       	r15 = r4 + -80
 1e00418:    2f 18             	goto 94 <.GJTIE6_0_0_+0x4A : 1e00478 >
 1e0041a:    03 48             	r3 = [r4 + 0]			  ## mcpwm.c:119:23
 1e0041c:    f8 fd 20 79       	r7 = r9 << r2			  ## mcpwm.c:119:36
 1e00420:    73 f0 29 00       	if ((r3 & r7) == 0) goto 82 <.GJTIE6_0_0_+0x48 : 1e00476 >			  ## mcpwm.c:119:36
 1e00424:    32 e0 11 80       	if (r2 > 3) goto 34 <.GJTIE6_0_0_+0x1C : 1e0044a >
 1e00428:    a2 00             	tbb [r2]


.GJTIS6_0_0_:
 1e0042a:    02     < 2 : 0x2 >
 1e0042b:    07     < 7 : 0x7 >
 1e0042c:    0a     < 10 : 0xA >
 1e0042d:    0d     < 13 : 0xD >
 1e0042e:    47 fc 80 ff       	r7 = r4 + -128
 1e00432:    4e fc 1c ff       	r14 = r4 + -228
 1e00436:    0b 18             	goto 22 <.GJTIE6_0_0_+0x20 : 1e0044e >
 1e00438:    b7 08             	r7 = r11
 1e0043a:    ae 08             	r14 = r10
 1e0043c:    08 18             	goto 16 <.GJTIE6_0_0_+0x20 : 1e0044e >
 1e0043e:    d7 08             	r7 = r13
 1e00440:    ce 08             	r14 = r12
 1e00442:    05 18             	goto 10 <.GJTIE6_0_0_+0x20 : 1e0044e >
 1e00444:    f7 08             	r7 = r15
 1e00446:    8e 08             	r14 = r8
 1e00448:    02 18             	goto 4 <.GJTIE6_0_0_+0x20 : 1e0044e >
 1e0044a:    07 70             	r7 = 0
 1e0044c:    0e 70             	r14 = 0
 1e0044e:    03 f6 08 e0       	r3 = [r14 + 8]
 1e00452:    01 f2 06 90       	if (r1 <= r0) goto 12 <.GJTIE6_0_0_+0x34 : 1e00462 >			  ## mcpwm.c:122:17
 1e00456:    eb 0e             	r3 = r5 * r3			  ## mcpwm.c:123:55
 1e00458:    13 f6 08 e0       	[r14 + 8] = r3			  ## mcpwm.c:123:35
 1e0045c:    33 4e             	r3 = [r7 + 12]			  ## mcpwm.c:124:45
 1e0045e:    eb 0e             	r3 = r5 * r3			  ## mcpwm.c:124:53
 1e00460:    07 18             	goto 14 <.GJTIE6_0_0_+0x42 : 1e00470 >			  ## mcpwm.c:124:53
 1e00462:    c0 fe 60 33       	r3 = r3 / r6 (u)			  ## mcpwm.c:126:55
 1e00466:    13 f6 08 e0       	[r14 + 8] = r3			  ## mcpwm.c:126:35
 1e0046a:    33 4e             	r3 = [r7 + 12]			  ## mcpwm.c:127:45
 1e0046c:    c0 fe 60 33       	r3 = r3 / r6 (u)			  ## mcpwm.c:127:53
 1e00470:    3b 4e             	[r7 + 12] = r3
 1e00472:    33 4e             	r3 = [r7 + 12]			  ## mcpwm.c:129:41
 1e00474:    2b 4e             	[r7 + 8] = r3			  ## mcpwm.c:129:30
 1e00476:    12 80             	r2 += 1			  ## mcpwm.c:118:31
 1e00478:    42 e0 cf 1f       	if (r2 != 4) goto -98 <clock_critical_exit+0x44 : 1e0041a >
 1e0047c:    5f 01             	{pc, r15-r4} = [sp++]			  ## mcpwm.c:132:1


usb_read:
 1e0047e:    01 08             	r1 = r0			  ## gpio.c:221:0
 1e00480:    30 71             	r0 = 19			  ## gpio.c:226:5
 1e00482:    11 e0 01 80       	if (r1 > 1) goto 2 <usb_read+0xA : 1e00488 >			  ## gpio.c:226:5
 1e00486:    10 71             	r0 = 17			  ## gpio.c:226:5
 1e00488:    62 b0             	r2 = r0 - r1
 1e0048a:    10 70             	r0 = 1
 1e0048c:    f8 fd 20 20       	r2 = r0 << r2
 1e00490:    11 e0 04 80       	if (r1 > 1) goto 8 <usb_read+0x1E : 1e0049c >
 1e00494:    c1 ff 00 18 1e 00 	r1 = 1972224 <uECC_vli_cmp_unsafe+0xDA804 : 1e1800 >			  ## gpio.c:226:5
 1e0049a:    03 18             	goto 6 <usb_read+0x24 : 1e004a2 >
 1e0049c:    c1 ff 00 5a 1e 00 	r1 = 1989120 <uECC_vli_cmp_unsafe+0xDEA04 : 1e5a00 >			  ## gpio.c:226:5
 1e004a2:    01 42             	r1 = [r1 + 0]
 1e004a4:    21 f1 01 00       	if ((r1 & r2) != 0) goto 2 <usb_read+0x2C : 1e004aa >
 1e004a8:    00 70             	r0 = 0
 1e004aa:    20 00             	rts			  ## gpio.c:230:5


gpio_read:
 1e004ac:    10 e3 02 30       	if (r0 < 49) goto 4 <gpio_read+0x8 : 1e004b4 >			  ## gpio.c:515:0
 1e004b0:    f0 8c             	r0 += -49			  ## gpio.c:521:34
 1e004b2:    e5 1f             	goto -54 <usb_read : 1e0047e >			  ## gpio.c:521:20
 1e004b4:    81 d0             	r1 = r0 >> 2			  ## gpio.c:50:31
 1e004b6:    c2 ff fc ff ff 3f 	r2 = 1073741820 <bank_code_load_addr+0x1DCA04 : 1fffffc >			  ## gpio.c:50:46
 1e004bc:    51 b5             	r1 &= r2			  ## gpio.c:50:46
 1e004be:    c2 ff bc 64 e1 01 	r2 = 31548604 <gpio_regs : 1e164bc >			  ## gpio.c:50:31
 1e004c4:    81 f6 00 12       	r1 = [r1+r2]			  ## gpio.c:50:31
 1e004c8:    0a 22             	if (r1 == 0) goto 20 <gpio_read+0x32 : 1e004de >
 1e004ca:    11 42             	r1 = [r1 + 4]			  ## gpio.c:534:19
 1e004cc:    22 fd 0f 09       	r2 = r0 & 15			  ## gpio.c:531:12
 1e004d0:    10 70             	r0 = 1			  ## gpio.c:531:12
 1e004d2:    f8 fd 20 20       	r2 = r0 << r2			  ## gpio.c:531:12
 1e004d6:    21 f1 01 00       	if ((r1 & r2) != 0) goto 2 <gpio_read+0x30 : 1e004dc >
 1e004da:    00 70             	r0 = 0
 1e004dc:    20 00             	rts			  ## gpio.c:538:1
 1e004de:    a0 06             	r0 = -22
 1e004e0:    20 00             	rts			  ## gpio.c:538:1


get_io_key_value:
 1e004e2:    e4 1f             	goto -56 <gpio_read : 1e004ac >			  ## iokey.c:73:0


usb_set_pull_down:
 1e004e4:    c2 ff 00 54 1e 00 	r2 = 1987584 <uECC_vli_cmp_unsafe+0xDE404 : 1e5400 >			  ## gpio.c:161:0
 1e004ea:    20 e0 08 30       	if (r0 < 2) goto 16 <usb_set_pull_down+0x1A : 1e004fe >			  ## gpio.c:162:9
 1e004ee:    40 80             	r0 += 4
 1e004f0:    13 70             	r3 = 1
 1e004f2:    f8 fd 00 03       	r0 = r3 << r0
 1e004f6:    0b 22             	if (r1 == 0) goto 22 <usb_set_pull_down+0x2A : 1e0050e >			  ## gpio.c:164:13
 1e004f8:    91 44             	r1 = [r2 + 36]			  ## gpio.c:165:30
 1e004fa:    50 b2             	r0 |= r1			  ## gpio.c:165:30
 1e004fc:    0b 18             	goto 22 <usb_set_pull_down+0x30 : 1e00514 >			  ## gpio.c:165:30
 1e004fe:    60 80             	r0 += 6
 1e00500:    13 70             	r3 = 1
 1e00502:    f8 fd 00 03       	r0 = r3 << r0
 1e00506:    08 22             	if (r1 == 0) goto 16 <usb_set_pull_down+0x34 : 1e00518 >			  ## gpio.c:171:13
 1e00508:    01 44             	r1 = [r2 + 0]			  ## gpio.c:172:29
 1e0050a:    50 b2             	r0 |= r1			  ## gpio.c:172:29
 1e0050c:    08 18             	goto 16 <usb_set_pull_down+0x3A : 1e0051e >			  ## gpio.c:172:29
 1e0050e:    91 44             	r1 = [r2 + 36]			  ## gpio.c:167:30
 1e00510:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:167:30
 1e00514:    98 44             	[r2 + 36] = r0
 1e00516:    20 00             	rts
 1e00518:    01 44             	r1 = [r2 + 0]			  ## gpio.c:174:29
 1e0051a:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:174:29
 1e0051e:    08 44             	[r2 + 0] = r0
 1e00520:    20 00             	rts


gpio_set_pull_down:
 1e00522:    10 e3 02 30       	if (r0 < 49) goto 4 <gpio_set_pull_down+0x8 : 1e0052a >			  ## gpio.c:657:0
 1e00526:    f0 8c             	r0 += -49			  ## gpio.c:663:36
 1e00528:    dd 1f             	goto -70 <usb_set_pull_down : 1e004e4 >			  ## gpio.c:663:13
 1e0052a:    82 d0             	r2 = r0 >> 2			  ## gpio.c:50:31
 1e0052c:    c3 ff fc ff ff 3f 	r3 = 1073741820 <bank_code_load_addr+0x1DCA04 : 1fffffc >			  ## gpio.c:50:46
 1e00532:    52 b7             	r2 &= r3			  ## gpio.c:50:46
 1e00534:    c3 ff bc 64 e1 01 	r3 = 31548604 <gpio_regs : 1e164bc >			  ## gpio.c:50:31
 1e0053a:    82 f6 00 23       	r2 = [r2+r3]			  ## gpio.c:50:31
 1e0053e:    0d 24             	if (r2 == 0) goto 26 <gpio_set_pull_down+0x38 : 1e0055a >
 1e00540:    20 fd 0f 09       	r0 = r0 & 15			  ## gpio.c:675:12
 1e00544:    13 70             	r3 = 1			  ## gpio.c:675:12
 1e00546:    f8 fd 00 03       	r0 = r3 << r0			  ## gpio.c:675:12
 1e0054a:    03 22             	if (r1 == 0) goto 6 <gpio_set_pull_down+0x30 : 1e00552 >			  ## gpio.c:677:9
 1e0054c:    51 44             	r1 = [r2 + 20]			  ## gpio.c:678:15
 1e0054e:    50 b2             	r0 |= r1			  ## gpio.c:678:15
 1e00550:    03 18             	goto 6 <gpio_set_pull_down+0x36 : 1e00558 >
 1e00552:    51 44             	r1 = [r2 + 20]			  ## gpio.c:680:15
 1e00554:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:680:15
 1e00558:    58 44             	[r2 + 20] = r0
 1e0055a:    20 00             	rts


gpio_set_pull_up:
 1e0055c:    10 e3 0f 30       	if (r0 < 49) goto 30 <.GJTIE12_0_0_+0xA : 1e0057e >			  ## gpio.c:571:0
 1e00560:    02 fc cf ff       	r2 = r0 + -49			  ## gpio.c:577:13
 1e00564:    32 e0 23 80       	if (r2 > 3) goto 70 <.GJTIE12_0_0_+0x3A : 1e005ae >			  ## gpio.c:577:13
 1e00568:    c0 ff 00 54 1e 00 	r0 = 1987584 <uECC_vli_cmp_unsafe+0xDE404 : 1e5400 >
 1e0056e:    a2 00             	tbb [r2]


.GJTIS12_0_0_:
 1e00570:    02     < 2 : 0x2 >
 1e00571:    20     < 32 : 0x20 >
 1e00572:    25     < 37 : 0x25 >
 1e00573:    2a     < 42 : 0x2A >
 1e00574:    02 40             	r2 = [r0 + 0]			  ## gpio.c:577:13
 1e00576:    c1 fd 20 21       	r2 <= insert(r1, p:4, l:1)			  ## gpio.c:577:13
 1e0057a:    0a 40             	[r0 + 0] = r2			  ## gpio.c:577:13
 1e0057c:    20 00             	rts			  ## gpio.c:577:13
 1e0057e:    82 d0             	r2 = r0 >> 2			  ## gpio.c:50:31
 1e00580:    c3 ff fc ff ff 3f 	r3 = 1073741820 <bank_code_load_addr+0x1DCA04 : 1fffffc >			  ## gpio.c:50:46
 1e00586:    52 b7             	r2 &= r3			  ## gpio.c:50:46
 1e00588:    c3 ff bc 64 e1 01 	r3 = 31548604 <gpio_regs : 1e164bc >			  ## gpio.c:50:31
 1e0058e:    82 f6 00 23       	r2 = [r2+r3]			  ## gpio.c:50:31
 1e00592:    0d 24             	if (r2 == 0) goto 26 <.GJTIE12_0_0_+0x3A : 1e005ae >
 1e00594:    20 fd 0f 09       	r0 = r0 & 15			  ## gpio.c:589:12
 1e00598:    13 70             	r3 = 1			  ## gpio.c:589:12
 1e0059a:    f8 fd 00 03       	r0 = r3 << r0			  ## gpio.c:589:12
 1e0059e:    03 22             	if (r1 == 0) goto 6 <.GJTIE12_0_0_+0x32 : 1e005a6 >			  ## gpio.c:591:9
 1e005a0:    41 44             	r1 = [r2 + 16]			  ## gpio.c:592:15
 1e005a2:    50 b2             	r0 |= r1			  ## gpio.c:592:15
 1e005a4:    03 18             	goto 6 <.GJTIE12_0_0_+0x38 : 1e005ac >
 1e005a6:    41 44             	r1 = [r2 + 16]			  ## gpio.c:594:15
 1e005a8:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:594:15
 1e005ac:    48 44             	[r2 + 16] = r0
 1e005ae:    20 00             	rts
 1e005b0:    02 40             	r2 = [r0 + 0]			  ## gpio.c:577:13
 1e005b2:    c1 fd 28 21       	r2 <= insert(r1, p:5, l:1)			  ## gpio.c:577:13
 1e005b6:    0a 40             	[r0 + 0] = r2			  ## gpio.c:577:13
 1e005b8:    20 00             	rts			  ## gpio.c:577:13
 1e005ba:    92 40             	r2 = [r0 + 36]			  ## gpio.c:577:13
 1e005bc:    c1 fd 20 21       	r2 <= insert(r1, p:4, l:1)			  ## gpio.c:577:13
 1e005c0:    9a 40             	[r0 + 36] = r2			  ## gpio.c:577:13
 1e005c2:    20 00             	rts			  ## gpio.c:577:13
 1e005c4:    92 40             	r2 = [r0 + 36]			  ## gpio.c:577:13
 1e005c6:    c1 fd 28 21       	r2 <= insert(r1, p:5, l:1)			  ## gpio.c:577:13
 1e005ca:    9a 40             	[r0 + 36] = r2			  ## gpio.c:577:13
 1e005cc:    20 00             	rts			  ## gpio.c:577:13


usb_set_direction:
 1e005ce:    74 01             	[--sp] = {rets, r4}			  ## gpio.c:99:0
 1e005d0:    c2 ff 00 54 1e 00 	r2 = 1987584 <uECC_vli_cmp_unsafe+0xDE404 : 1e5400 >			  ## gpio.c:99:0
 1e005d6:    20 e0 0e 30       	if (r0 < 2) goto 28 <usb_set_direction+0x28 : 1e005f6 >			  ## gpio.c:100:9
 1e005da:    03 f6 00 26       	r3 = [r2 + 1536]			  ## gpio.c:246:23
 1e005de:    73 b0             	r3 &= 4294967294			  ## gpio.c:246:23
 1e005e0:    13 f6 00 26       	[r2 + 1536] = r3			  ## gpio.c:246:23
 1e005e4:    09 f4 50 2a       	[r2 + 36] |= 20480			  ## gpio.c:246:23
 1e005e8:    13 70             	r3 = 1			  ## gpio.c:246:23
 1e005ea:    f8 fd 00 03       	r0 = r3 << r0			  ## gpio.c:246:23
 1e005ee:    12 22             	if (r1 == 0) goto 36 <usb_set_direction+0x46 : 1e00614 >			  ## gpio.c:103:13
 1e005f0:    91 44             	r1 = [r2 + 36]			  ## gpio.c:104:30
 1e005f2:    50 b2             	r0 |= r1			  ## gpio.c:104:30
 1e005f4:    12 18             	goto 36 <usb_set_direction+0x4C : 1e0061a >			  ## gpio.c:104:30
 1e005f6:    23 fc 00 c4       	r3 = r2 + -15360
 1e005fa:    04 46             	r4 = [r3 + 0]			  ## gpio.c:236:22
 1e005fc:    74 b0             	r4 &= 4294967294			  ## gpio.c:236:22
 1e005fe:    0c 46             	[r3 + 0] = r4			  ## gpio.c:236:22
 1e00600:    00 f4 50 2a       	[r2 + 0] |= 20480			  ## gpio.c:236:22
 1e00604:    20 80             	r0 += 2			  ## gpio.c:236:22
 1e00606:    13 70             	r3 = 1			  ## gpio.c:236:22
 1e00608:    f8 fd 00 03       	r0 = r3 << r0			  ## gpio.c:236:22
 1e0060c:    08 22             	if (r1 == 0) goto 16 <usb_set_direction+0x50 : 1e0061e >			  ## gpio.c:111:13
 1e0060e:    01 44             	r1 = [r2 + 0]			  ## gpio.c:112:29
 1e00610:    50 b2             	r0 |= r1			  ## gpio.c:112:29
 1e00612:    08 18             	goto 16 <usb_set_direction+0x56 : 1e00624 >			  ## gpio.c:112:29
 1e00614:    91 44             	r1 = [r2 + 36]			  ## gpio.c:106:30
 1e00616:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:106:30
 1e0061a:    98 44             	[r2 + 36] = r0
 1e0061c:    54 01             	{pc, r4} = [sp++]
 1e0061e:    01 44             	r1 = [r2 + 0]			  ## gpio.c:114:29
 1e00620:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:114:29
 1e00624:    08 44             	[r2 + 0] = r0
 1e00626:    54 01             	{pc, r4} = [sp++]


gpio_direction_output:
 1e00628:    75 01             	[--sp] = {rets, r5, r4}			  ## gpio.c:408:0
 1e0062a:    14 08             	r4 = r1			  ## gpio.c:408:0
 1e0062c:    10 e3 16 30       	if (r0 < 49) goto 44 <.GJTIE14_0_0_+0x12 : 1e0065c >			  ## gpio.c:412:9
 1e00630:    05 fc cf ff       	r5 = r0 + -49			  ## gpio.c:414:36
 1e00634:    01 70             	r1 = 0			  ## gpio.c:414:13
 1e00636:    50 08             	r0 = r5			  ## gpio.c:414:13
 1e00638:    ca 17             	call -108 <usb_set_direction : 1e005ce >			  ## gpio.c:414:13
 1e0063a:    35 e0 46 80       	if (r5 > 3) goto 140 <.GJTIE14_0_0_+0x80 : 1e006ca >			  ## gpio.c:414:13
 1e0063e:    c0 ff 00 54 1e 00 	r0 = 1987584 <uECC_vli_cmp_unsafe+0xDE404 : 1e5400 >
 1e00644:    a5 00             	tbb [r5]


.GJTIS14_0_0_:
 1e00646:    02     < 2 : 0x2 >
 1e00647:    21     < 33 : 0x21 >
 1e00648:    29     < 41 : 0x29 >
 1e00649:    32     < 50 : 0x32 >
 1e0064a:    01 40             	r1 = [r0 + 0]			  ## gpio.c:415:13
 1e0064c:    71 b1             	r1 &= 4294967291			  ## gpio.c:415:13
 1e0064e:    09 40             	[r0 + 0] = r1			  ## gpio.c:415:13
 1e00650:    01 40             	r1 = [r0 + 0]			  ## gpio.c:416:13
 1e00652:    49 d0             	r1 = r1 >> 1			  ## gpio.c:416:13
 1e00654:    df fd 08 41       	r4 <= insert(r1, p:1, l:31)			  ## gpio.c:416:13
 1e00658:    0c 40             	[r0 + 0] = r4			  ## gpio.c:416:13
 1e0065a:    55 01             	{pc, r5, r4} = [sp++]			  ## gpio.c:416:13
 1e0065c:    81 d0             	r1 = r0 >> 2			  ## gpio.c:50:31
 1e0065e:    c2 ff fc ff ff 3f 	r2 = 1073741820 <bank_code_load_addr+0x1DCA04 : 1fffffc >			  ## gpio.c:50:46
 1e00664:    51 b5             	r1 &= r2			  ## gpio.c:50:46
 1e00666:    c2 ff bc 64 e1 01 	r2 = 31548604 <gpio_regs : 1e164bc >			  ## gpio.c:50:31
 1e0066c:    81 f6 00 12       	r1 = [r1+r2]			  ## gpio.c:50:31
 1e00670:    2c 22             	if (r1 == 0) goto 88 <.GJTIE14_0_0_+0x80 : 1e006ca >
 1e00672:    20 fd 0f 09       	r0 = r0 & 15			  ## gpio.c:429:12
 1e00676:    12 70             	r2 = 1			  ## gpio.c:429:12
 1e00678:    f8 fd 00 02       	r0 = r2 << r0			  ## gpio.c:429:12
 1e0067c:    1e 28             	if (r4 == 0) goto 60 <.GJTIE14_0_0_+0x70 : 1e006ba >			  ## gpio.c:431:9
 1e0067e:    14 e0 20 10       	if (r4 != 1) goto 64 <.GJTIE14_0_0_+0x78 : 1e006c2 >
 1e00682:    02 42             	r2 = [r1 + 0]			  ## gpio.c:432:16
 1e00684:    52 b0             	r2 |= r0			  ## gpio.c:432:16
 1e00686:    1c 18             	goto 56 <.GJTIE14_0_0_+0x76 : 1e006c0 >			  ## gpio.c:432:16
 1e00688:    01 40             	r1 = [r0 + 0]			  ## gpio.c:415:13
 1e0068a:    f1 b1             	r1 &= 4294967287			  ## gpio.c:415:13
 1e0068c:    09 40             	[r0 + 0] = r1			  ## gpio.c:415:13
 1e0068e:    01 40             	r1 = [r0 + 0]			  ## gpio.c:416:13
 1e00690:    c1 fd 08 14       	r1 <= insert(r4, p:1, l:1)			  ## gpio.c:416:13
 1e00694:    09 40             	[r0 + 0] = r1			  ## gpio.c:416:13
 1e00696:    55 01             	{pc, r5, r4} = [sp++]			  ## gpio.c:416:13
 1e00698:    91 40             	r1 = [r0 + 36]			  ## gpio.c:415:13
 1e0069a:    71 b1             	r1 &= 4294967291			  ## gpio.c:415:13
 1e0069c:    99 40             	[r0 + 36] = r1			  ## gpio.c:415:13
 1e0069e:    91 40             	r1 = [r0 + 36]			  ## gpio.c:416:13
 1e006a0:    49 d0             	r1 = r1 >> 1			  ## gpio.c:416:13
 1e006a2:    df fd 08 41       	r4 <= insert(r1, p:1, l:31)			  ## gpio.c:416:13
 1e006a6:    9c 40             	[r0 + 36] = r4			  ## gpio.c:416:13
 1e006a8:    55 01             	{pc, r5, r4} = [sp++]			  ## gpio.c:416:13
 1e006aa:    91 40             	r1 = [r0 + 36]			  ## gpio.c:415:13
 1e006ac:    f1 b1             	r1 &= 4294967287			  ## gpio.c:415:13
 1e006ae:    99 40             	[r0 + 36] = r1			  ## gpio.c:415:13
 1e006b0:    91 40             	r1 = [r0 + 36]			  ## gpio.c:416:13
 1e006b2:    c1 fd 08 14       	r1 <= insert(r4, p:1, l:1)			  ## gpio.c:416:13
 1e006b6:    99 40             	[r0 + 36] = r1			  ## gpio.c:416:13
 1e006b8:    55 01             	{pc, r5, r4} = [sp++]			  ## gpio.c:416:13
 1e006ba:    02 42             	r2 = [r1 + 0]			  ## gpio.c:434:16
 1e006bc:    e3 fd 00 22       	r2 = r2 & ~r0			  ## gpio.c:434:16
 1e006c0:    0a 42             	[r1 + 0] = r2
 1e006c2:    22 42             	r2 = [r1 + 8]			  ## gpio.c:436:12
 1e006c4:    e3 fd 00 02       	r0 = r2 & ~r0			  ## gpio.c:436:12
 1e006c8:    28 42             	[r1 + 8] = r0			  ## gpio.c:436:12
 1e006ca:    55 01             	{pc, r5, r4} = [sp++]


gpio_direction_input:
 1e006cc:    10 e3 0d 30       	if (r0 < 49) goto 26 <gpio_direction_input+0x1E : 1e006ea >			  ## gpio.c:323:0
 1e006d0:    c1 ff 00 54 1e 00 	r1 = 1987584 <uECC_vli_cmp_unsafe+0xDE404 : 1e5400 >
 1e006d6:    30 e3 1c 30       	if (r0 < 51) goto 56 <gpio_direction_input+0x46 : 1e00712 >			  ## gpio.c:328:13
 1e006da:    02 f6 00 16       	r2 = [r1 + 1536]			  ## gpio.c:246:23
 1e006de:    72 b0             	r2 &= 4294967294			  ## gpio.c:246:23
 1e006e0:    12 f6 00 16       	[r1 + 1536] = r2			  ## gpio.c:246:23
 1e006e4:    09 f4 50 1a       	[r1 + 36] |= 20480			  ## gpio.c:246:23
 1e006e8:    1b 18             	goto 54 <gpio_direction_input+0x54 : 1e00720 >			  ## gpio.c:246:23
 1e006ea:    81 d0             	r1 = r0 >> 2			  ## gpio.c:50:31
 1e006ec:    c2 ff fc ff ff 3f 	r2 = 1073741820 <bank_code_load_addr+0x1DCA04 : 1fffffc >			  ## gpio.c:50:46
 1e006f2:    51 b5             	r1 &= r2			  ## gpio.c:50:46
 1e006f4:    c2 ff bc 64 e1 01 	r2 = 31548604 <gpio_regs : 1e164bc >			  ## gpio.c:50:31
 1e006fa:    81 f6 00 12       	r1 = [r1+r2]			  ## gpio.c:50:31
 1e006fe:    08 22             	if (r1 == 0) goto 16 <gpio_direction_input+0x44 : 1e00710 >
 1e00700:    22 42             	r2 = [r1 + 8]			  ## gpio.c:348:12
 1e00702:    20 fd 0f 09       	r0 = r0 & 15			  ## gpio.c:345:12
 1e00706:    13 70             	r3 = 1			  ## gpio.c:345:12
 1e00708:    f8 fd 00 03       	r0 = r3 << r0			  ## gpio.c:345:12
 1e0070c:    50 b4             	r0 |= r2			  ## gpio.c:348:12
 1e0070e:    28 42             	[r1 + 8] = r0			  ## gpio.c:348:12
 1e00710:    20 00             	rts
 1e00712:    12 fc 00 c4       	r2 = r1 + -15360
 1e00716:    03 44             	r3 = [r2 + 0]			  ## gpio.c:236:22
 1e00718:    73 b0             	r3 &= 4294967294			  ## gpio.c:236:22
 1e0071a:    0b 44             	[r2 + 0] = r3			  ## gpio.c:236:22
 1e0071c:    00 f4 50 1a       	[r1 + 0] |= 20480			  ## gpio.c:236:22
 1e00720:    f0 8c             	r0 += -49
 1e00722:    11 70             	r1 = 1
 1e00724:    54 1f             	goto -344 <usb_set_direction : 1e005ce >


gpio_set_die:
 1e00726:    10 e3 0f 30       	if (r0 < 49) goto 30 <.GJTIE16_0_0_+0xA : 1e00748 >			  ## gpio.c:804:0
 1e0072a:    02 fc cf ff       	r2 = r0 + -49			  ## gpio.c:810:13
 1e0072e:    32 e0 23 80       	if (r2 > 3) goto 70 <.GJTIE16_0_0_+0x3A : 1e00778 >			  ## gpio.c:810:13
 1e00732:    c0 ff 00 54 1e 00 	r0 = 1987584 <uECC_vli_cmp_unsafe+0xDE404 : 1e5400 >
 1e00738:    a2 00             	tbb [r2]


.GJTIS16_0_0_:
 1e0073a:    02     < 2 : 0x2 >
 1e0073b:    20     < 32 : 0x20 >
 1e0073c:    25     < 37 : 0x25 >
 1e0073d:    2a     < 42 : 0x2A >
 1e0073e:    02 40             	r2 = [r0 + 0]			  ## gpio.c:810:13
 1e00740:    c1 fd 40 21       	r2 <= insert(r1, p:8, l:1)			  ## gpio.c:810:13
 1e00744:    0a 40             	[r0 + 0] = r2			  ## gpio.c:810:13
 1e00746:    20 00             	rts			  ## gpio.c:810:13
 1e00748:    82 d0             	r2 = r0 >> 2			  ## gpio.c:50:31
 1e0074a:    c3 ff fc ff ff 3f 	r3 = 1073741820 <bank_code_load_addr+0x1DCA04 : 1fffffc >			  ## gpio.c:50:46
 1e00750:    52 b7             	r2 &= r3			  ## gpio.c:50:46
 1e00752:    c3 ff bc 64 e1 01 	r3 = 31548604 <gpio_regs : 1e164bc >			  ## gpio.c:50:31
 1e00758:    82 f6 00 23       	r2 = [r2+r3]			  ## gpio.c:50:31
 1e0075c:    0d 24             	if (r2 == 0) goto 26 <.GJTIE16_0_0_+0x3A : 1e00778 >
 1e0075e:    20 fd 0f 09       	r0 = r0 & 15			  ## gpio.c:822:12
 1e00762:    13 70             	r3 = 1			  ## gpio.c:822:12
 1e00764:    f8 fd 00 03       	r0 = r3 << r0			  ## gpio.c:822:12
 1e00768:    03 22             	if (r1 == 0) goto 6 <.GJTIE16_0_0_+0x32 : 1e00770 >			  ## gpio.c:824:9
 1e0076a:    31 44             	r1 = [r2 + 12]			  ## gpio.c:825:16
 1e0076c:    50 b2             	r0 |= r1			  ## gpio.c:825:16
 1e0076e:    03 18             	goto 6 <.GJTIE16_0_0_+0x38 : 1e00776 >
 1e00770:    31 44             	r1 = [r2 + 12]			  ## gpio.c:827:16
 1e00772:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:827:16
 1e00776:    38 44             	[r2 + 12] = r0
 1e00778:    20 00             	rts
 1e0077a:    02 40             	r2 = [r0 + 0]			  ## gpio.c:810:13
 1e0077c:    c1 fd 48 21       	r2 <= insert(r1, p:9, l:1)			  ## gpio.c:810:13
 1e00780:    0a 40             	[r0 + 0] = r2			  ## gpio.c:810:13
 1e00782:    20 00             	rts			  ## gpio.c:810:13
 1e00784:    92 40             	r2 = [r0 + 36]			  ## gpio.c:810:13
 1e00786:    c1 fd 40 21       	r2 <= insert(r1, p:8, l:1)			  ## gpio.c:810:13
 1e0078a:    9a 40             	[r0 + 36] = r2			  ## gpio.c:810:13
 1e0078c:    20 00             	rts			  ## gpio.c:810:13
 1e0078e:    92 40             	r2 = [r0 + 36]			  ## gpio.c:810:13
 1e00790:    c1 fd 48 21       	r2 <= insert(r1, p:9, l:1)			  ## gpio.c:810:13
 1e00794:    9a 40             	[r0 + 36] = r2			  ## gpio.c:810:13
 1e00796:    20 00             	rts			  ## gpio.c:810:13


key_io_pull_up_input:
 1e00798:    74 01             	[--sp] = {rets, r4}			  ## iokey.c:51:0
 1e0079a:    04 08             	r4 = r0			  ## iokey.c:51:0
 1e0079c:    97 17             	call -210 <gpio_direction_input : 1e006cc >			  ## iokey.c:52:5
 1e0079e:    01 70             	r1 = 0			  ## iokey.c:53:5
 1e007a0:    40 08             	r0 = r4			  ## iokey.c:53:5
 1e007a2:    bf 16             	call -642 <gpio_set_pull_down : 1e00522 >			  ## iokey.c:53:5
 1e007a4:    11 70             	r1 = 1			  ## iokey.c:54:5
 1e007a6:    40 08             	r0 = r4			  ## iokey.c:54:5
 1e007a8:    d9 16             	call -590 <gpio_set_pull_up : 1e0055c >			  ## iokey.c:54:5
 1e007aa:    11 70             	r1 = 1			  ## iokey.c:55:5
 1e007ac:    40 08             	r0 = r4			  ## iokey.c:55:5
 1e007ae:    14 01             	{rets, r4} = [sp++]			  ## iokey.c:55:5
 1e007b0:    ba 1f             	goto -140 <gpio_set_die : 1e00726 >			  ## iokey.c:55:5


key_io_reset:
 1e007b2:    76 01             	[--sp] = {rets, r6-r4}			  ## iokey.c:79:0
 1e007b4:    05 70             	r5 = 0			  ## iokey.c:79:0
 1e007b6:    c6 ff e4 5f e1 01 	r6 = 31547364 <iokey_list : 1e15fe4 >			  ## iokey.c:79:0
 1e007bc:    1c 18             	goto 56 <key_io_reset+0x44 : 1e007f6 >			  ## iokey.c:79:0
 1e007be:    80 bb             	r0 = r5 + r6			  ## iokey.c:83:33
 1e007c0:    20 60             	r0 = b[r0 + 2] (u)			  ## iokey.c:83:33
 1e007c2:    12 20             	if (r0 == 0) goto 36 <key_io_reset+0x36 : 1e007e8 >			  ## iokey.c:83:9
 1e007c4:    20 e0 16 00       	if (r0 == 2) goto 44 <key_io_reset+0x42 : 1e007f4 >
 1e007c8:    10 e0 12 10       	if (r0 != 1) goto 36 <key_io_reset+0x3E : 1e007f0 >
 1e007cc:    04 fa 00 56       	r4 = b[r5+r6] (u)			  ## iokey.c:43:26
 1e007d0:    40 08             	r0 = r4			  ## iokey.c:43:5
 1e007d2:    7c 17             	call -264 <gpio_direction_input : 1e006cc >			  ## iokey.c:43:5
 1e007d4:    11 70             	r1 = 1			  ## iokey.c:44:5
 1e007d6:    40 08             	r0 = r4			  ## iokey.c:44:5
 1e007d8:    a4 16             	call -696 <gpio_set_pull_down : 1e00522 >			  ## iokey.c:44:5
 1e007da:    01 70             	r1 = 0			  ## iokey.c:45:5
 1e007dc:    40 08             	r0 = r4			  ## iokey.c:45:5
 1e007de:    be 16             	call -644 <gpio_set_pull_up : 1e0055c >			  ## iokey.c:45:5
 1e007e0:    11 70             	r1 = 1			  ## iokey.c:46:5
 1e007e2:    40 08             	r0 = r4			  ## iokey.c:46:5
 1e007e4:    a0 17             	call -192 <gpio_set_die : 1e00726 >			  ## iokey.c:46:5
 1e007e6:    06 18             	goto 12 <key_io_reset+0x42 : 1e007f4 >			  ## iokey.c:46:5
 1e007e8:    00 fa 00 56       	r0 = b[r5+r6] (u)			  ## iokey.c:95:13
 1e007ec:    d5 17             	call -86 <key_io_pull_up_input : 1e00798 >			  ## iokey.c:95:13
 1e007ee:    02 18             	goto 4 <key_io_reset+0x42 : 1e007f4 >			  ## iokey.c:95:13
 1e007f0:    90 f3 f6 15       	call 2108396 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e007f4:    45 80             	r5 += 4			  ## iokey.c:82:5
 1e007f6:    85 e0 e2 1f       	if (r5 != 8) goto -60 <key_io_reset+0xC : 1e007be >
 1e007fa:    56 01             	{pc, r6-r4} = [sp++]			  ## iokey.c:107:1


io_get_key_value:
 1e007fc:    78 01             	[--sp] = {rets, r8-r4}			  ## iokey.c:162:0
 1e007fe:    c8 ff b0 20 00 00 	r8 = 8368 <gatt_client_conn_handle : 20b0 >			  ## iokey.c:162:0
 1e00804:    00 f6 30 80       	r0 = [r8 + 48]			  ## iokey.c:173:10
 1e00808:    03 70             	r3 = 0			  ## iokey.c:173:10
 1e0080a:    07 70             	r7 = 0			  ## iokey.c:173:10
 1e0080c:    13 18             	goto 38 <io_get_key_value+0x38 : 1e00834 >			  ## iokey.c:173:10
 1e0080e:    11 40             	r1 = [r0 + 4]			  ## iokey.c:179:31
 1e00810:    c2 b2             	r2 = r1 + r3			  ## iokey.c:179:39
 1e00812:    22 64             	r2 = b[r2 + 2] (u)			  ## iokey.c:179:39
 1e00814:    12 e0 03 00       	if (r2 == 1) goto 6 <io_get_key_value+0x22 : 1e0081e >			  ## iokey.c:179:39
 1e00818:    0b 34             	if (r2 != 0) goto 22 <io_get_key_value+0x34 : 1e00830 >
 1e0081a:    04 70             	r4 = 0
 1e0081c:    01 18             	goto 2 <io_get_key_value+0x24 : 1e00820 >
 1e0081e:    14 70             	r4 = 1
 1e00820:    00 fa 00 13       	r0 = b[r1+r3] (u)			  ## iokey.c:198:22
 1e00824:    5e 16             	call -836 <get_io_key_value : 1e004e2 >			  ## iokey.c:198:22
 1e00826:    00 04             	r0 = r0.b0 (u)			  ## iokey.c:217:13
 1e00828:    40 f2 2d 00       	if (r0 == r4) goto 90 <io_get_key_value+0x8A : 1e00886 >			  ## iokey.c:217:13
 1e0082c:    00 f6 30 80       	r0 = [r8 + 48]
 1e00830:    43 80             	r3 += 4			  ## iokey.c:178:5
 1e00832:    17 80             	r7 += 1			  ## iokey.c:178:35
 1e00834:    11 60             	r1 = b[r0 + 1] (u)			  ## iokey.c:178:29
 1e00836:    17 f2 ea bf       	ifs (r7 < r1) goto -44 <io_get_key_value+0x12 : 1e0080e >			  ## iokey.c:178:5
 1e0083a:    06 70             	r6 = 0
 1e0083c:    07 70             	r7 = 0
 1e0083e:    1e 18             	goto 60 <io_get_key_value+0x80 : 1e0087c >
 1e00840:    12 40             	r2 = [r0 + 4]			  ## iokey.c:229:31
 1e00842:    62 09             	r2 += r6			  ## iokey.c:229:39
 1e00844:    23 64             	r3 = b[r2 + 2] (u)			  ## iokey.c:229:39
 1e00846:    23 e0 17 10       	if (r3 != 2) goto 46 <io_get_key_value+0x7C : 1e00878 >			  ## iokey.c:229:39
 1e0084a:    04 64             	r4 = b[r2 + 0] (u)			  ## iokey.c:234:13
 1e0084c:    15 64             	r5 = b[r2 + 1] (u)			  ## iokey.c:67:24
 1e0084e:    01 70             	r1 = 0			  ## iokey.c:67:5
 1e00850:    50 08             	r0 = r5			  ## iokey.c:67:5
 1e00852:    67 16             	call -818 <gpio_set_pull_down : 1e00522 >			  ## iokey.c:67:5
 1e00854:    01 70             	r1 = 0			  ## iokey.c:68:5
 1e00856:    50 08             	r0 = r5			  ## iokey.c:68:5
 1e00858:    81 16             	call -766 <gpio_set_pull_up : 1e0055c >			  ## iokey.c:68:5
 1e0085a:    01 70             	r1 = 0			  ## iokey.c:69:5
 1e0085c:    50 08             	r0 = r5			  ## iokey.c:69:5
 1e0085e:    e4 16             	call -568 <gpio_direction_output : 1e00628 >			  ## iokey.c:69:5
 1e00860:    40 08             	r0 = r4			  ## iokey.c:234:13
 1e00862:    9a 17             	call -204 <key_io_pull_up_input : 1e00798 >			  ## iokey.c:234:13
 1e00864:    40 08             	r0 = r4			  ## iokey.c:235:26
 1e00866:    3d 16             	call -902 <get_io_key_value : 1e004e2 >			  ## iokey.c:235:26
 1e00868:    04 08             	r4 = r0			  ## iokey.c:235:26
 1e0086a:    a3 17             	call -186 <key_io_reset : 1e007b2 >			  ## iokey.c:236:13
 1e0086c:    60 ff ff 49 0a 00 	if ((r4 & 255) == 0) goto 20 <io_get_key_value+0x8A : 1e00886 >			  ## iokey.c:236:13
 1e00872:    00 f6 30 80       	r0 = [r8 + 48]
 1e00876:    21 70             	r1 = 2
 1e00878:    46 80             	r6 += 4			  ## iokey.c:228:5
 1e0087a:    17 80             	r7 += 1			  ## iokey.c:228:35
 1e0087c:    42 04             	r2 = r1.b0 (u)			  ## iokey.c:228:21
 1e0087e:    27 f2 df bf       	ifs (r7 < r2) goto -66 <io_get_key_value+0x44 : 1e00840 >
 1e00882:    f0 7f             	r0 = 255
 1e00884:    58 01             	{pc, r8-r4} = [sp++]			  ## iokey.c:255:1
 1e00886:    b8 c0             	r0 = r7 << 2
 1e00888:    c1 ff e4 5f e1 01 	r1 = 31547364 <iokey_list : 1e15fe4 >
 1e0088e:    10 09             	r0 += r1
 1e00890:    30 60             	r0 = b[r0 + 3] (u)
 1e00892:    58 01             	{pc, r8-r4} = [sp++]			  ## iokey.c:255:1


key_idle_query:
 1e00894:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## key_driver.c:374:0
 1e0089a:    11 60             	r1 = b[r0 + 1] (u)			  ## key_driver.c:375:13
 1e0089c:    10 70             	r0 = 1			  ## key_driver.c:375:13
 1e0089e:    01 22             	if (r1 == 0) goto 2 <key_idle_query+0xE : 1e008a2 >			  ## key_driver.c:375:13
 1e008a0:    00 70             	r0 = 0			  ## key_driver.c:375:12
 1e008a2:    20 00             	rts			  ## key_driver.c:375:5


timer_get_ms:
 1e008a4:    c0 ff 88 08 00 00 	r0 = 2184 <jiffies : 888 >			  ## timer.c:86:0
 1e008aa:    00 40             	r0 = [r0 + 0]			  ## timer.c:87:12
 1e008ac:    00 fe 0a 09       	r0 = r0 * 10			  ## timer.c:87:12
 1e008b0:    20 00             	rts			  ## timer.c:87:5


key_driver_scan:
 1e008b2:    76 01             	[--sp] = {rets, r6-r4}			  ## key_driver.c:86:0
 1e008b4:    f4 0b             	sp += -24			  ## key_driver.c:86:0
 1e008b6:    04 08             	r4 = r0			  ## key_driver.c:86:0
 1e008b8:    40 48             	r0 = [r4 + 16]			  ## key_driver.c:101:32
 1e008ba:    80 00             	call r0			  ## key_driver.c:101:21
 1e008bc:    05 08             	r5 = r0			  ## key_driver.c:101:21
 1e008be:    30 72             	r0 = 35			  ## key_driver.c:101:21
 1e008c0:    c1 ff b0 20 00 00 	r1 = 8368 <gatt_client_conn_handle : 20b0 >			  ## key_driver.c:101:21
 1e008c6:    01 ff ff 50 04 00 	if (r5 != 255) goto 8 <key_driver_scan+0x22 : 1e008d4 >			  ## key_driver.c:101:21
 1e008cc:    10 62             	r0 = b[r1 + 1] (u)			  ## key_driver.c:108:16
 1e008ce:    03 20             	if (r0 == 0) goto 6 <key_driver_scan+0x24 : 1e008d6 >			  ## key_driver.c:108:16
 1e008d0:    10 62             	r0 = b[r1 + 1] (u)			  ## key_driver.c:109:23
 1e008d2:    f0 8f             	r0 += -1			  ## key_driver.c:109:23
 1e008d4:    18 62             	b[r1 + 1] = r0
 1e008d6:    52 68             	r2 = b[r4 + 5] (u)			  ## key_driver.c:112:37
 1e008d8:    70 68             	r0 = b[r4 + 7] (u)			  ## key_driver.c:112:37
 1e008da:    25 f2 06 00       	if (r5 == r2) goto 12 <key_driver_scan+0x38 : 1e008ea >			  ## key_driver.c:112:37
 1e008de:    04 20             	if (r0 == 0) goto 8 <key_driver_scan+0x36 : 1e008e8 >
 1e008e0:    00 70             	r0 = 0			  ## key_driver.c:113:31
 1e008e2:    68 68             	b[r4 + 6] = r0			  ## key_driver.c:113:31
 1e008e4:    5d 68             	b[r4 + 5] = r5			  ## key_driver.c:114:33
 1e008e6:    71 18             	goto 226 <key_driver_scan+0x118 : 1e009ca >			  ## key_driver.c:114:33
 1e008e8:    00 70             	r0 = 0
 1e008ea:    62 68             	r2 = b[r4 + 6] (u)			  ## key_driver.c:117:20
 1e008ec:    02 f2 03 20       	if (r2 >= r0) goto 6 <key_driver_scan+0x44 : 1e008f6 >			  ## key_driver.c:117:9
 1e008f0:    10 94             	r0 = r2 + 1			  ## key_driver.c:118:30
 1e008f2:    68 68             	b[r4 + 6] = r0			  ## key_driver.c:118:30
 1e008f4:    6a 18             	goto 212 <key_driver_scan+0x118 : 1e009ca >			  ## key_driver.c:118:30
 1e008f6:    40 68             	r0 = b[r4 + 4] (u)			  ## key_driver.c:126:37
 1e008f8:    05 f2 13 10       	if (r5 != r0) goto 38 <key_driver_scan+0x70 : 1e00922 >			  ## key_driver.c:126:37
 1e008fc:    00 ff ff 50 1c 00 	if (r5 == 255) goto 56 <key_driver_scan+0x88 : 1e0093a >
 1e00902:    a0 68             	r0 = b[r4 + 10] (u)			  ## key_driver.c:195:33
 1e00904:    10 80             	r0 += 1			  ## key_driver.c:195:33
 1e00906:    a8 68             	b[r4 + 10] = r0			  ## key_driver.c:195:33
 1e00908:    83 68             	r3 = b[r4 + 8] (u)			  ## key_driver.c:196:52
 1e0090a:    06 04             	r6 = r0.b0 (u)			  ## key_driver.c:195:33
 1e0090c:    12 70             	r2 = 1			  ## key_driver.c:195:33
 1e0090e:    50 08             	r0 = r5			  ## key_driver.c:195:33
 1e00910:    36 f2 38 00       	if (r6 == r3) goto 112 <key_driver_scan+0xD2 : 1e00984 >			  ## key_driver.c:195:33
 1e00914:    90 68             	r0 = b[r4 + 9] (u)			  ## key_driver.c:198:59
 1e00916:    06 f2 57 10       	if (r6 != r0) goto 174 <key_driver_scan+0x116 : 1e009c8 >			  ## key_driver.c:198:59
 1e0091a:    ab 68             	b[r4 + 10] = r3			  ## key_driver.c:200:38
 1e0091c:    22 70             	r2 = 2			  ## key_driver.c:200:38
 1e0091e:    50 08             	r0 = r5			  ## key_driver.c:200:38
 1e00920:    31 18             	goto 98 <key_driver_scan+0xD2 : 1e00984 >			  ## key_driver.c:200:38
 1e00922:    00 ff ff 50 22 00 	if (r5 == 255) goto 68 <key_driver_scan+0xBA : 1e0096c >
 1e00928:    10 70             	r0 = 1
 1e0092a:    a8 68             	b[r4 + 10] = r0			  ## key_driver.c:145:34
 1e0092c:    e1 68             	r1 = b[r4 + 14] (u)			  ## key_driver.c:146:45
 1e0092e:    15 f2 25 10       	if (r5 != r1) goto 74 <key_driver_scan+0xCA : 1e0097c >			  ## key_driver.c:146:45
 1e00932:    b0 68             	r0 = b[r4 + 11] (u)			  ## key_driver.c:150:37
 1e00934:    10 80             	r0 += 1			  ## key_driver.c:150:37
 1e00936:    b8 68             	b[r4 + 11] = r0			  ## key_driver.c:150:37
 1e00938:    47 18             	goto 142 <key_driver_scan+0x116 : 1e009c8 >			  ## key_driver.c:150:37
 1e0093a:    b3 68             	r3 = b[r4 + 11] (u)			  ## key_driver.c:156:28
 1e0093c:    45 26             	if (r3 == 0) goto 138 <key_driver_scan+0x116 : 1e009c8 >			  ## key_driver.c:156:28
 1e0093e:    20 f9 0e 40       	r0 = b[r4 + 14] (s)			  ## key_driver.c:166:32
 1e00942:    00 e0 1e b0       	ifs (r0 < 0) goto 60 <key_driver_scan+0xD0 : 1e00982 >			  ## key_driver.c:166:32
 1e00946:    c2 68             	r2 = b[r4 + 12] (u)			  ## key_driver.c:172:32
 1e00948:    d6 68             	r6 = b[r4 + 13] (u)			  ## key_driver.c:172:61
 1e0094a:    62 f2 40 90       	if (r2 <= r6) goto 128 <key_driver_scan+0x11C : 1e009ce >			  ## key_driver.c:172:21
 1e0094e:    72 70             	r2 = 7
 1e00950:    43 e0 18 80       	if (r3 > 4) goto 48 <key_driver_scan+0xD2 : 1e00984 >
 1e00954:    62 70             	r2 = 6
 1e00956:    43 e0 15 00       	if (r3 == 4) goto 42 <key_driver_scan+0xD2 : 1e00984 >
 1e0095a:    52 70             	r2 = 5
 1e0095c:    23 e0 12 80       	if (r3 > 2) goto 36 <key_driver_scan+0xD2 : 1e00984 >
 1e00960:    12 70             	r2 = 1			  ## key_driver.c:180:53
 1e00962:    23 e0 01 00       	if (r3 == 2) goto 2 <key_driver_scan+0xB6 : 1e00968 >			  ## key_driver.c:180:53
 1e00966:    02 70             	r2 = 0			  ## key_driver.c:180:53
 1e00968:    92 c0             	r2 = r2 << 2			  ## key_driver.c:182:21
 1e0096a:    0c 18             	goto 24 <key_driver_scan+0xD2 : 1e00984 >			  ## key_driver.c:182:21
 1e0096c:    83 68             	r3 = b[r4 + 8] (u)			  ## key_driver.c:136:52
 1e0096e:    a6 68             	r6 = b[r4 + 10] (u)			  ## key_driver.c:136:28
 1e00970:    32 70             	r2 = 3			  ## key_driver.c:136:28
 1e00972:    36 f2 07 20       	if (r6 >= r3) goto 14 <key_driver_scan+0xD2 : 1e00984 >			  ## key_driver.c:136:28
 1e00976:    10 70             	r0 = 1			  ## key_driver.c:143:40
 1e00978:    c8 68             	b[r4 + 12] = r0			  ## key_driver.c:143:40
 1e0097a:    26 18             	goto 76 <key_driver_scan+0x116 : 1e009c8 >			  ## key_driver.c:143:40
 1e0097c:    b8 68             	b[r4 + 11] = r0			  ## key_driver.c:147:38
 1e0097e:    ed 68             	b[r4 + 14] = r5			  ## key_driver.c:148:41
 1e00980:    23 18             	goto 70 <key_driver_scan+0x116 : 1e009c8 >			  ## key_driver.c:148:41
 1e00982:    02 70             	r2 = 0
 1e00984:    13 70             	r3 = 1
 1e00986:    93 f5 00 00       	h[sp] = r3			  ## key_driver.c:217:12
 1e0098a:    d3 f5 08 00       	b[sp+8] = r3			  ## key_driver.c:218:18
 1e0098e:    f3 68             	r3 = b[r4 + 15] (u)			  ## key_driver.c:219:31
 1e00990:    d3 f5 09 00       	b[sp+9] = r3			  ## key_driver.c:219:18
 1e00994:    83 04             	r3 = r2.b0 (u)			  ## key_driver.c:220:21
 1e00996:    93 f5 0a 00       	h[sp+10] = r3			  ## key_driver.c:220:19
 1e0099a:    20 fd 7f 09       	r0 = r0 & 127			  ## key_driver.c:221:21
 1e0099e:    38 02             	[sp+12] = r0			  ## key_driver.c:221:19
 1e009a0:    81 17             	call -254 <timer_get_ms : 1e008a4 >			  ## key_driver.c:222:19
 1e009a2:    48 02             	[sp+16] = r0			  ## key_driver.c:222:17
 1e009a4:    00 70             	r0 = 0			  ## key_driver.c:225:26
 1e009a6:    b8 68             	b[r4 + 11] = r0			  ## key_driver.c:225:26
 1e009a8:    f0 7f             	r0 = 255			  ## key_driver.c:225:26
 1e009aa:    e8 68             	b[r4 + 14] = r0			  ## key_driver.c:226:29
 1e009ac:    c0 ff 00 59 45 4b 	r0 = 1262835968 <uECC_vli_cmp_unsafe+0x134E904 : 1455900 >			  ## key_driver.c:228:12
 1e009b2:    18 02             	[sp+4] = r0			  ## key_driver.c:228:12
 1e009b4:    20 62             	r0 = b[r1 + 2] (u)			  ## key_driver.c:230:9
 1e009b6:    05 20             	if (r0 == 0) goto 10 <key_driver_scan+0x110 : 1e009c2 >			  ## key_driver.c:230:9
 1e009b8:    32 e0 07 10       	if (r2 != 3) goto 14 <key_driver_scan+0x118 : 1e009ca >
 1e009bc:    00 70             	r0 = 0			  ## key_driver.c:79:22
 1e009be:    28 62             	b[r1 + 2] = r0			  ## key_driver.c:79:22
 1e009c0:    04 18             	goto 8 <key_driver_scan+0x118 : 1e009ca >			  ## key_driver.c:79:22
 1e009c2:    00 a0             	r0 = sp + 0
 1e009c4:    80 f3 5b 80       	call 65718 <sys_event_notify : 1e10a7e >			  ## key_driver.c:238:9
 1e009c8:    4d 68             	b[r4 + 4] = r5			  ## key_driver.c:244:25
 1e009ca:    0c 0a             	sp += 24
 1e009cc:    56 01             	{pc, r6-r4} = [sp++]			  ## key_driver.c:246:1
 1e009ce:    10 94             	r0 = r2 + 1			  ## key_driver.c:188:47
 1e009d0:    c8 68             	b[r4 + 12] = r0			  ## key_driver.c:188:47
 1e009d2:    fa 1f             	goto -12 <key_driver_scan+0x116 : 1e009c8 >			  ## key_driver.c:188:47


__just_conn_handle_role:
 1e009d4:    34 00             	[--sp] = rets			  ## le_gatt_common.c:408:0
 1e009d6:    fe 0b             	sp += -4			  ## le_gatt_common.c:408:0
 1e009d8:    01 08             	r1 = r0			  ## le_gatt_common.c:408:0
 1e009da:    03 70             	r3 = 0			  ## le_gatt_common.c:410:5
 1e009dc:    c2 ff 60 30 e1 01 	r2 = 31535200 <update_target_end+0x1D8 : 1e13060 >			  ## le_gatt_common.c:410:5
 1e009e2:    20 70             	r0 = 2			  ## le_gatt_common.c:410:5
 1e009e4:    0b 02             	[sp] = r3			  ## le_gatt_common.c:410:5
 1e009e6:    13 08             	r3 = r1			  ## le_gatt_common.c:410:5
 1e009e8:    80 f3 9f 73       	call 59198 <log_print : 1e0f12a >			  ## le_gatt_common.c:410:5
 1e009ec:    02 0a             	sp += 4			  ## le_gatt_common.c:410:5
 1e009ee:    30 00             	pc = [sp++]			  ## le_gatt_common.c:410:5


__gatt_server_event_callback_handler:
 1e009f0:    74 01             	[--sp] = {rets, r4}			  ## le_gatt_server.c:98:0
 1e009f2:    c4 ff a0 22 00 00 	r4 = 8864 <_sdfile_handl : 22a0 >			  ## le_gatt_server.c:99:17
 1e009f8:    04 f6 a4 40       	r4 = [r4 + 164]			  ## le_gatt_server.c:99:17
 1e009fc:    24 48             	r4 = [r4 + 8]			  ## le_gatt_server.c:99:32
 1e009fe:    01 28             	if (r4 == 0) goto 2 <__gatt_server_event_callback_handler+0x12 : 1e00a02 >			  ## le_gatt_server.c:99:32
 1e00a00:    84 00             	call r4			  ## le_gatt_server.c:101:16
 1e00a02:    54 01             	{pc, r4} = [sp++]


ble_gatt_server_passkey_input:
 1e00a04:    76 01             	[--sp] = {rets, r6-r4}			  ## le_gatt_server.c:245:0
 1e00a06:    fa 0b             	sp += -12			  ## le_gatt_server.c:245:0
 1e00a08:    14 08             	r4 = r1			  ## le_gatt_server.c:245:0
 1e00a0a:    05 08             	r5 = r0			  ## le_gatt_server.c:245:0
 1e00a0c:    c0 ff 40 e2 01 00 	r0 = 123456 <_IRQ_MEM_ADDR+0xE340 : 1e240 >			  ## le_gatt_server.c:247:10
 1e00a12:    08 4a             	[r5 + 0] = r0			  ## le_gatt_server.c:247:10
 1e00a14:    94 f5 06 00       	h[sp+6] = r4			  ## le_gatt_server.c:248:16
 1e00a18:    66 a0             	r6 = sp + 6			  ## le_gatt_server.c:248:16
 1e00a1a:    21 70             	r1 = 2			  ## le_gatt_server.c:249:5
 1e00a1c:    60 08             	r0 = r6			  ## le_gatt_server.c:249:5
 1e00a1e:    52 08             	r2 = r5			  ## le_gatt_server.c:249:5
 1e00a20:    80 f3 22 3c       	call 30788 <little_endian_store_32 : 1e08268 >			  ## le_gatt_server.c:249:5
 1e00a24:    00 79             	r0 = 144			  ## le_gatt_server.c:250:5
 1e00a26:    62 70             	r2 = 6			  ## le_gatt_server.c:250:5
 1e00a28:    03 70             	r3 = 0			  ## le_gatt_server.c:250:5
 1e00a2a:    61 08             	r1 = r6			  ## le_gatt_server.c:250:5
 1e00a2c:    e1 17             	call -62 <__gatt_server_event_callback_handler : 1e009f0 >			  ## le_gatt_server.c:250:5
 1e00a2e:    01 4a             	r1 = [r5 + 0]			  ## le_gatt_server.c:251:5
 1e00a30:    c2 ff 98 34 e1 01 	r2 = 31536280 <update_target_end+0x610 : 1e13498 >			  ## le_gatt_server.c:251:5
 1e00a36:    20 70             	r0 = 2			  ## le_gatt_server.c:251:5
 1e00a38:    09 02             	[sp] = r1			  ## le_gatt_server.c:251:5
 1e00a3a:    43 08             	r3 = r4			  ## le_gatt_server.c:251:5
 1e00a3c:    80 f3 75 73       	call 59114 <log_print : 1e0f12a >			  ## le_gatt_server.c:251:5
 1e00a40:    06 0a             	sp += 12			  ## le_gatt_server.c:251:5
 1e00a42:    56 01             	{pc, r6-r4} = [sp++]			  ## le_gatt_server.c:252:1


__ble_comm_cbk_sm_packet_handler:
 1e00a44:    77 01             	[--sp] = {rets, r7-r4}			  ## le_gatt_common.c:427:0
 1e00a46:    fc 0b             	sp += -8			  ## le_gatt_common.c:427:0
 1e00a48:    36 08             	r6 = r3			  ## le_gatt_common.c:427:0
 1e00a4a:    24 08             	r4 = r2			  ## le_gatt_common.c:427:0
 1e00a4c:    c5 ff b0 20 00 00 	r5 = 8368 <gatt_client_conn_handle : 20b0 >			  ## le_gatt_common.c:427:0
 1e00a52:    01 70             	r1 = 0			  ## le_gatt_common.c:431:9
 1e00a54:    49 6a             	b[r5 + 4] = r1			  ## le_gatt_common.c:431:9
 1e00a56:    40 e0 82 10       	if (r0 != 4) goto 260 <__ble_comm_cbk_sm_packet_handler+0x11A : 1e00b5e >			  ## le_gatt_common.c:431:9
 1e00a5a:    03 68             	r3 = b[r4 + 0] (u)			  ## btstack_event.h:40:16
 1e00a5c:    30 fc 30 ff       	r0 = r3 + -208			  ## le_gatt_common.c:441:13
 1e00a60:    f0 e0 7d 80       	if (r0 > 15) goto 250 <__ble_comm_cbk_sm_packet_handler+0x11A : 1e00b5e >
 1e00a64:    11 70             	r1 = 1
 1e00a66:    f8 fd 00 01       	r0 = r1 << r0
 1e00a6a:    c1 ff 15 80 00 00 	r1 = 32789 <nvbss_size+0x1515 : 8015 >
 1e00a70:    10 f0 75 00       	if ((r0 & r1) == 0) goto 234 <__ble_comm_cbk_sm_packet_handler+0x11A : 1e00b5e >
 1e00a74:    c2 ff 27 30 e1 01 	r2 = 31535143 <update_target_end+0x19F : 1e13027 >			  ## le_gatt_common.c:446:17
 1e00a7a:    20 70             	r0 = 2			  ## le_gatt_common.c:446:17
 1e00a7c:    0c 02             	[sp] = r4			  ## le_gatt_common.c:446:17
 1e00a7e:    80 f3 54 73       	call 59048 <log_print : 1e0f12a >			  ## le_gatt_common.c:446:17
 1e00a82:    01 71             	r1 = 16			  ## le_gatt_common.c:447:17
 1e00a84:    40 08             	r0 = r4			  ## le_gatt_common.c:447:17
 1e00a86:    80 f3 25 74       	call 59466 <put_buf : 1e0f2d4 >			  ## le_gatt_common.c:447:17
 1e00a8a:    10 58             	r0 = h[r4 + 2] (u)			  ## le_gatt_common.c:449:17
 1e00a8c:    a3 17             	call -186 <__just_conn_handle_role : 1e009d4 >			  ## le_gatt_common.c:449:17
 1e00a8e:    40 6a             	r0 = b[r5 + 4] (u)			  ## le_gatt_common.c:449:17
 1e00a90:    10 b0             	r0 |= 1			  ## le_gatt_common.c:449:17
 1e00a92:    48 6a             	b[r5 + 4] = r0			  ## le_gatt_common.c:449:17
 1e00a94:    00 68             	r0 = b[r4 + 0] (u)			  ## btstack_event.h:40:16
 1e00a96:    c7 ff a0 22 00 00 	r7 = 8864 <_sdfile_handl : 22a0 >			  ## btstack_event.h:40:16
 1e00a9c:    00 ff df 00 4b 00 	if (r0 == 223) goto 150 <__ble_comm_cbk_sm_packet_handler+0xF4 : 1e00b38 >			  ## le_gatt_server.c:271:9
 1e00aa2:    25 98             	r5 = r4 + 2			  ## le_gatt_common.c:449:17
 1e00aa4:    00 ff d2 00 17 00 	if (r0 == 210) goto 46 <__ble_comm_cbk_sm_packet_handler+0x94 : 1e00ad8 >			  ## le_gatt_common.c:449:17
 1e00aaa:    00 ff d4 00 2d 00 	if (r0 == 212) goto 90 <__ble_comm_cbk_sm_packet_handler+0xC6 : 1e00b0a >
 1e00ab0:    01 ff d0 00 54 00 	if (r0 != 208) goto 168 <__ble_comm_cbk_sm_packet_handler+0x11A : 1e00b5e >
 1e00ab6:    21 70             	r1 = 2			  ## btstack_event.h:2572:16
 1e00ab8:    40 08             	r0 = r4			  ## btstack_event.h:2572:16
 1e00aba:    80 f3 00 39       	call 29184 <little_endian_read_16 : 1e07cbe >			  ## btstack_event.h:2572:16
 1e00abe:    80 f3 8f 5b       	call 46878 <sm_just_works_confirm : 1e0c1e0 >			  ## le_gatt_server.c:274:13
 1e00ac2:    13 58             	r3 = h[r4 + 2] (u)			  ## le_gatt_server.c:275:13
 1e00ac4:    c2 ff d4 34 e1 01 	r2 = 31536340 <update_target_end+0x64C : 1e134d4 >			  ## le_gatt_server.c:275:13
 1e00aca:    20 70             	r0 = 2			  ## le_gatt_server.c:275:13
 1e00acc:    80 f3 2d 73       	call 58970 <log_print : 1e0f12a >			  ## le_gatt_server.c:275:13
 1e00ad0:    10 70             	r0 = 1			  ## le_gatt_server.c:276:44
 1e00ad2:    10 f9 b9 70       	b[r7 + 185] = r0			  ## le_gatt_server.c:276:44
 1e00ad6:    12 18             	goto 36 <__ble_comm_cbk_sm_packet_handler+0xB8 : 1e00afc >			  ## le_gatt_server.c:276:44
 1e00ad8:    40 08             	r0 = r4			  ## le_gatt_server.c:281:13
 1e00ada:    61 08             	r1 = r6			  ## le_gatt_server.c:281:13
 1e00adc:    80 f3 79 74       	call 59634 <printf_buf : 1e0f3d2 >			  ## le_gatt_server.c:281:13
 1e00ae0:    b1 98             	r1 = r4 + 11			  ## le_gatt_server.c:282:35
 1e00ae2:    40 a0             	r0 = sp + 4			  ## le_gatt_server.c:282:35
 1e00ae4:    42 70             	r2 = 4			  ## le_gatt_server.c:282:13
 1e00ae6:    98 f3 fd 31       	call 3171322 <memcpy : 106ee4 >			  ## le_gatt_server.c:282:13
 1e00aea:    13 58             	r3 = h[r4 + 2] (u)			  ## le_gatt_server.c:283:13
 1e00aec:    11 02             	r1 = [sp+4]			  ## le_gatt_server.c:283:13
 1e00aee:    c2 ff 08 35 e1 01 	r2 = 31536392 <update_target_end+0x680 : 1e13508 >			  ## le_gatt_server.c:283:13
 1e00af4:    20 70             	r0 = 2			  ## le_gatt_server.c:283:13
 1e00af6:    09 02             	[sp] = r1			  ## le_gatt_server.c:283:13
 1e00af8:    80 f3 17 73       	call 58926 <log_print : 1e0f12a >			  ## le_gatt_server.c:283:13
 1e00afc:    73 fc b9 00       	r3 = r7 + 185
 1e00b00:    40 70             	r0 = 4
 1e00b02:    22 70             	r2 = 2
 1e00b04:    51 08             	r1 = r5
 1e00b06:    74 17             	call -280 <__gatt_server_event_callback_handler : 1e009f0 >
 1e00b08:    2a 18             	goto 84 <__ble_comm_cbk_sm_packet_handler+0x11A : 1e00b5e >
 1e00b0a:    73 fc b9 00       	r3 = r7 + 185			  ## le_gatt_server.c:289:13
 1e00b0e:    40 70             	r0 = 4			  ## le_gatt_server.c:289:13
 1e00b10:    22 70             	r2 = 2			  ## le_gatt_server.c:289:13
 1e00b12:    51 08             	r1 = r5			  ## le_gatt_server.c:289:13
 1e00b14:    6d 17             	call -294 <__gatt_server_event_callback_handler : 1e009f0 >			  ## le_gatt_server.c:289:13
 1e00b16:    11 58             	r1 = h[r4 + 2] (u)			  ## le_gatt_server.c:290:13
 1e00b18:    40 a0             	r0 = sp + 4			  ## le_gatt_server.c:290:13
 1e00b1a:    74 17             	call -280 <ble_gatt_server_passkey_input : 1e00a04 >			  ## le_gatt_server.c:290:13
 1e00b1c:    13 58             	r3 = h[r4 + 2] (u)			  ## le_gatt_server.c:291:13
 1e00b1e:    11 02             	r1 = [sp+4]			  ## le_gatt_server.c:291:13
 1e00b20:    c2 ff 3d 35 e1 01 	r2 = 31536445 <update_target_end+0x6B5 : 1e1353d >			  ## le_gatt_server.c:291:13
 1e00b26:    20 70             	r0 = 2			  ## le_gatt_server.c:291:13
 1e00b28:    09 02             	[sp] = r1			  ## le_gatt_server.c:291:13
 1e00b2a:    80 f3 fe 72       	call 58876 <log_print : 1e0f12a >			  ## le_gatt_server.c:291:13
 1e00b2e:    10 58             	r0 = h[r4 + 2] (u)			  ## le_gatt_server.c:292:13
 1e00b30:    11 02             	r1 = [sp+4]			  ## le_gatt_server.c:292:49
 1e00b32:    80 f3 73 5b       	call 46822 <sm_passkey_input : 1e0c21c >			  ## le_gatt_server.c:292:13
 1e00b36:    13 18             	goto 38 <__ble_comm_cbk_sm_packet_handler+0x11A : 1e00b5e >
 1e00b38:    13 58             	r3 = h[r4 + 2] (u)			  ## le_gatt_server.c:296:13
 1e00b3a:    b1 68             	r1 = b[r4 + 11] (u)			  ## le_gatt_server.c:296:13
 1e00b3c:    c2 ff 70 35 e1 01 	r2 = 31536496 <update_target_end+0x6E8 : 1e13570 >			  ## le_gatt_server.c:296:13
 1e00b42:    20 70             	r0 = 2			  ## le_gatt_server.c:296:13
 1e00b44:    09 02             	[sp] = r1			  ## le_gatt_server.c:296:13
 1e00b46:    80 f3 f0 72       	call 58848 <log_print : 1e0f12a >			  ## le_gatt_server.c:296:13
 1e00b4a:    b0 98             	r0 = r4 + 11			  ## le_gatt_server.c:296:13
 1e00b4c:    41 70             	r1 = 4			  ## le_gatt_server.c:297:13
 1e00b4e:    80 f3 c1 73       	call 59266 <put_buf : 1e0f2d4 >			  ## le_gatt_server.c:297:13
 1e00b52:    b0 68             	r0 = b[r4 + 11] (u)			  ## le_gatt_server.c:298:21
 1e00b54:    10 e0 03 10       	if (r0 != 1) goto 6 <__ble_comm_cbk_sm_packet_handler+0x11A : 1e00b5e >			  ## le_gatt_server.c:298:21
 1e00b58:    f0 70             	r0 = 15			  ## le_gatt_server.c:300:48
 1e00b5a:    10 f9 b9 70       	b[r7 + 185] = r0			  ## le_gatt_server.c:300:48
 1e00b5e:    04 0a             	sp += 8
 1e00b60:    57 01             	{pc, r7-r4} = [sp++]			  ## le_gatt_common.c:468:1


__ble_comm_cbk_passkey_input:
 1e00b62:    75 01             	[--sp] = {rets, r5, r4}			  ## le_gatt_common.c:672:0
 1e00b64:    14 08             	r4 = r1			  ## le_gatt_common.c:672:0
 1e00b66:    05 08             	r5 = r0			  ## le_gatt_common.c:672:0
 1e00b68:    40 08             	r0 = r4			  ## le_gatt_common.c:673:5
 1e00b6a:    34 17             	call -408 <__just_conn_handle_role : 1e009d4 >			  ## le_gatt_common.c:673:5
 1e00b6c:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## le_gatt_common.c:673:5
 1e00b72:    41 60             	r1 = b[r0 + 4] (u)			  ## le_gatt_common.c:673:5
 1e00b74:    11 b0             	r1 |= 1			  ## le_gatt_common.c:673:5
 1e00b76:    49 60             	b[r0 + 4] = r1			  ## le_gatt_common.c:673:5
 1e00b78:    50 08             	r0 = r5			  ## le_gatt_common.c:677:13
 1e00b7a:    41 08             	r1 = r4			  ## le_gatt_common.c:677:13
 1e00b7c:    15 01             	{rets, r5, r4} = [sp++]			  ## le_gatt_common.c:677:13
 1e00b7e:    42 1f             	goto -380 <ble_gatt_server_passkey_input : 1e00a04 >			  ## le_gatt_common.c:677:13


ble_comm_dev_get_idle_index:
 1e00b80:    74 01             	[--sp] = {rets, r4}			  ## le_gatt_common.c:126:0
 1e00b82:    01 70             	r1 = 0			  ## le_gatt_common.c:126:0
 1e00b84:    12 70             	r2 = 1			  ## le_gatt_common.c:131:26
 1e00b86:    01 20             	if (r0 == 0) goto 2 <ble_comm_dev_get_idle_index+0xA : 1e00b8a >			  ## le_gatt_common.c:131:26
 1e00b88:    02 70             	r2 = 0			  ## le_gatt_common.c:131:26
 1e00b8a:    c4 ff b0 20 00 00 	r4 = 8368 <gatt_client_conn_handle : 20b0 >			  ## le_gatt_common.c:134:5
 1e00b90:    e3 99             	r3 = r4 + 30			  ## le_gatt_common.c:134:5
 1e00b92:    06 20             	if (r0 == 0) goto 12 <ble_comm_dev_get_idle_index+0x20 : 1e00ba0 >			  ## le_gatt_common.c:134:5
 1e00b94:    43 08             	r3 = r4			  ## le_gatt_common.c:134:5
 1e00b96:    04 18             	goto 8 <ble_comm_dev_get_idle_index+0x20 : 1e00ba0 >			  ## le_gatt_common.c:134:5
 1e00b98:    40 f8 00 30       	r0 = h[r3+r0<<1] (u)			  ## le_gatt_common.c:140:18
 1e00b9c:    05 20             	if (r0 == 0) goto 10 <ble_comm_dev_get_idle_index+0x28 : 1e00ba8 >			  ## le_gatt_common.c:140:18
 1e00b9e:    11 80             	r1 += 1			  ## le_gatt_common.c:139:29
 1e00ba0:    50 04             	r0 = r1.b0 (s)			  ## le_gatt_common.c:139:17
 1e00ba2:    20 f2 f9 bf       	ifs (r0 < r2) goto -14 <ble_comm_dev_get_idle_index+0x18 : 1e00b98 >
 1e00ba6:    f1 7f             	r1 = 255
 1e00ba8:    50 04             	r0 = r1.b0 (s)			  ## le_gatt_common.c:145:1
 1e00baa:    54 01             	{pc, r4} = [sp++]			  ## le_gatt_common.c:145:1


__comm_set_dev_handle_value:
 1e00bac:    52 c0             	r2 = r2 << 1			  ## le_gatt_common.c:337:0
 1e00bae:    c3 ff b0 20 00 00 	r3 = 8368 <gatt_client_conn_handle : 20b0 >			  ## le_gatt_common.c:341:9
 1e00bb4:    32 09             	r2 += r3			  ## le_gatt_common.c:341:9
 1e00bb6:    e3 95             	r3 = r2 + 30			  ## le_gatt_common.c:341:9
 1e00bb8:    11 e0 01 00       	if (r1 == 1) goto 2 <__comm_set_dev_handle_value+0x12 : 1e00bbe >			  ## le_gatt_common.c:341:9
 1e00bbc:    32 08             	r2 = r3			  ## le_gatt_common.c:338:9
 1e00bbe:    08 54             	h[r2 + 0] = r0
 1e00bc0:    20 00             	rts			  ## le_gatt_common.c:343:1


ble_comm_dev_get_index:
 1e00bc2:    c2 ff ce 20 00 00 	r2 = 8398 <gatt_server_conn_handle : 20ce >			  ## le_gatt_common.c:93:0
 1e00bc8:    01 70             	r1 = 0			  ## le_gatt_common.c:93:0
 1e00bca:    05 18             	goto 10 <ble_comm_dev_get_index+0x14 : 1e00bd6 >			  ## le_gatt_common.c:93:0
 1e00bcc:    83 f7 02 20       	r3 = h[r2 ++= 2] (u)			  ## le_gatt_common.c:107:23
 1e00bd0:    03 f2 05 00       	if (r3 == r0) goto 10 <ble_comm_dev_get_index+0x1C : 1e00bde >
 1e00bd4:    11 80             	r1 += 1			  ## le_gatt_common.c:106:29
 1e00bd6:    53 04             	r3 = r1.b0 (s)			  ## le_gatt_common.c:106:19
 1e00bd8:    03 e0 f8 df       	ifs (r3 <= 0) goto -16 <ble_comm_dev_get_index+0xA : 1e00bcc >			  ## le_gatt_common.c:106:19
 1e00bdc:    f1 7f             	r1 = 255
 1e00bde:    50 04             	r0 = r1.b0 (s)			  ## le_gatt_common.c:112:1
 1e00be0:    20 00             	rts			  ## le_gatt_common.c:112:1


__gatt_server_set_work_state:
 1e00be2:    77 01             	[--sp] = {rets, r7-r4}			  ## le_gatt_server.c:146:0
 1e00be4:    fc 0b             	sp += -8			  ## le_gatt_server.c:146:0
 1e00be6:    c7 ff a0 22 00 00 	r7 = 8864 <_sdfile_handl : 22a0 >			  ## le_gatt_server.c:146:0
 1e00bec:    03 f6 c4 70       	r3 = [r7 + 196]			  ## le_gatt_server.c:149:17
 1e00bf0:    26 08             	r6 = r2
 1e00bf2:    15 08             	r5 = r1
 1e00bf4:    04 08             	r4 = r0
 1e00bf6:    02 26             	if (r3 == 0) goto 4 <__gatt_server_set_work_state+0x1A : 1e00bfc >
 1e00bf8:    00 70             	r0 = 0			  ## le_gatt_server.c:150:9
 1e00bfa:    83 00             	call r3			  ## le_gatt_server.c:150:9
 1e00bfc:    12 38             	if (r4 != 0) goto 36 <__gatt_server_set_work_state+0x40 : 1e00c22 >
 1e00bfe:    03 f9 b2 70       	r3 = b[r7 + 178] (u)			  ## le_gatt_server.c:156:25
 1e00c02:    53 f2 1c 00       	if (r3 == r5) goto 56 <__gatt_server_set_work_state+0x5C : 1e00c3e >			  ## le_gatt_server.c:156:25
 1e00c06:    c2 ff 85 3b e1 01 	r2 = 31538053 <update_target_end+0xCFD : 1e13b85 >			  ## le_gatt_server.c:157:9
 1e00c0c:    20 70             	r0 = 2			  ## le_gatt_server.c:157:9
 1e00c0e:    0d 02             	[sp] = r5			  ## le_gatt_server.c:157:9
 1e00c10:    80 f3 8b 72       	call 58646 <log_print : 1e0f12a >			  ## le_gatt_server.c:157:9
 1e00c14:    15 f9 b2 70       	b[r7 + 178] = r5			  ## le_gatt_server.c:158:35
 1e00c18:    40 a0             	r0 = sp + 4			  ## le_gatt_server.c:158:35
 1e00c1a:    11 70             	r1 = 1			  ## le_gatt_server.c:159:9
 1e00c1c:    02 70             	r2 = 0			  ## le_gatt_server.c:159:9
 1e00c1e:    80 f3 3e 3b       	call 30332 <little_endian_store_16 : 1e0829e >			  ## le_gatt_server.c:159:9
 1e00c22:    0d 2c             	if (r6 == 0) goto 26 <__gatt_server_set_work_state+0x5C : 1e00c3e >
 1e00c24:    d5 f5 04 00       	b[sp+4] = r5			  ## le_gatt_server.c:165:23
 1e00c28:    45 a0             	r5 = sp + 4			  ## le_gatt_server.c:165:23
 1e00c2a:    11 70             	r1 = 1			  ## le_gatt_server.c:166:9
 1e00c2c:    50 08             	r0 = r5			  ## le_gatt_server.c:166:9
 1e00c2e:    42 08             	r2 = r4			  ## le_gatt_server.c:166:9
 1e00c30:    80 f3 35 3b       	call 30314 <little_endian_store_16 : 1e0829e >			  ## le_gatt_server.c:166:9
 1e00c34:    00 74             	r0 = 64			  ## le_gatt_server.c:167:9
 1e00c36:    32 70             	r2 = 3			  ## le_gatt_server.c:167:9
 1e00c38:    03 70             	r3 = 0			  ## le_gatt_server.c:167:9
 1e00c3a:    51 08             	r1 = r5			  ## le_gatt_server.c:167:9
 1e00c3c:    d9 16             	call -590 <__gatt_server_event_callback_handler : 1e009f0 >			  ## le_gatt_server.c:167:9
 1e00c3e:    04 0a             	sp += 8
 1e00c40:    57 01             	{pc, r7-r4} = [sp++]			  ## le_gatt_server.c:169:1


ble_gatt_server_get_work_state:
 1e00c42:    c0 ff a0 22 00 00 	r0 = 8864 <_sdfile_handl : 22a0 >			  ## le_gatt_server.c:210:0
 1e00c48:    00 f9 b2 00       	r0 = b[r0 + 178] (u)			  ## le_gatt_server.c:211:12
 1e00c4c:    20 00             	rts			  ## le_gatt_server.c:211:5


ble_gatt_server_adv_enable:
 1e00c4e:    76 01             	[--sp] = {rets, r6-r4}			  ## le_gatt_server.c:654:0
 1e00c50:    fc 0b             	sp += -8			  ## le_gatt_server.c:654:0
 1e00c52:    04 08             	r4 = r0			  ## le_gatt_server.c:654:0
 1e00c54:    c6 ff a0 22 00 00 	r6 = 8864 <_sdfile_handl : 22a0 >			  ## le_gatt_server.c:654:0
 1e00c5a:    05 28             	if (r4 == 0) goto 10 <ble_gatt_server_adv_enable+0x18 : 1e00c66 >			  ## le_gatt_server.c:654:0
 1e00c5c:    00 f9 b3 60       	r0 = b[r6 + 179] (u)			  ## le_gatt_server.c:657:18
 1e00c60:    60 ff 0f 09 6b 00 	if ((r0 & 15) == 0) goto 214 <ble_gatt_server_adv_enable+0xEE : 1e00d3c >			  ## le_gatt_server.c:657:18
 1e00c66:    1f 28             	if (r4 == 0) goto 62 <ble_gatt_server_adv_enable+0x58 : 1e00ca6 >
 1e00c68:    c2 ff b6 3a e1 01 	r2 = 31537846 <update_target_end+0xC2E : 1e13ab6 >			  ## le_gatt_server.c:618:5
 1e00c6e:    c3 ff d1 3a e1 01 	r3 = 31537873 <update_target_end+0xC49 : 1e13ad1 >			  ## le_gatt_server.c:618:5
 1e00c74:    20 70             	r0 = 2			  ## le_gatt_server.c:618:5
 1e00c76:    80 f3 58 72       	call 58544 <log_print : 1e0f12a >			  ## le_gatt_server.c:618:5
 1e00c7a:    e3 17             	call -58 <ble_gatt_server_get_work_state : 1e00c42 >			  ## le_gatt_server.c:619:16
 1e00c7c:    00 04             	r0 = r0.b0 (u)			  ## le_gatt_server.c:627:30
 1e00c7e:    50 e0 57 80       	if (r0 > 5) goto 174 <ble_gatt_server_adv_enable+0xE2 : 1e00d30 >			  ## le_gatt_server.c:627:30
 1e00c82:    11 70             	r1 = 1
 1e00c84:    f8 fd 00 01       	r0 = r1 << r0
 1e00c88:    60 ff 26 09 51 00 	if ((r0 & 38) == 0) goto 162 <ble_gatt_server_adv_enable+0xE2 : 1e00d30 >
 1e00c8e:    00 70             	r0 = 0			  ## le_gatt_server.c:632:18
 1e00c90:    77 17             	call -274 <ble_comm_dev_get_idle_index : 1e00b80 >			  ## le_gatt_server.c:632:18
 1e00c92:    f0 ef 49 00       	if (r0 == -1) goto 146 <ble_gatt_server_adv_enable+0xDA : 1e00d28 >			  ## le_gatt_server.c:632:18
 1e00c96:    c2 ff 3f 3b e1 01 	r2 = 31537983 <update_target_end+0xCB7 : 1e13b3f >			  ## le_gatt_server.c:638:5
 1e00c9c:    20 70             	r0 = 2			  ## le_gatt_server.c:638:5
 1e00c9e:    80 f3 44 72       	call 58504 <log_print : 1e0f12a >			  ## le_gatt_server.c:638:5
 1e00ca2:    05 72             	r5 = 32			  ## le_gatt_server.c:638:5
 1e00ca4:    01 18             	goto 2 <ble_gatt_server_adv_enable+0x5A : 1e00ca8 >			  ## le_gatt_server.c:638:5
 1e00ca6:    25 70             	r5 = 2
 1e00ca8:    cc 17             	call -104 <ble_gatt_server_get_work_state : 1e00c42 >			  ## le_gatt_server.c:670:18
 1e00caa:    30 e0 04 30       	if (r0 < 3) goto 8 <ble_gatt_server_adv_enable+0x68 : 1e00cb6 >
 1e00cae:    00 e2 02 00       	if (r0 == 32) goto 4 <ble_gatt_server_adv_enable+0x68 : 1e00cb6 >
 1e00cb2:    50 e0 43 10       	if (r0 != 5) goto 134 <ble_gatt_server_adv_enable+0xEE : 1e00d3c >
 1e00cb6:    50 f2 41 00       	if (r0 == r5) goto 130 <ble_gatt_server_adv_enable+0xEE : 1e00d3c >
 1e00cba:    c2 ff 63 3b e1 01 	r2 = 31538019 <update_target_end+0xCDB : 1e13b63 >			  ## le_gatt_server.c:687:5
 1e00cc0:    20 70             	r0 = 2			  ## le_gatt_server.c:687:5
 1e00cc2:    43 08             	r3 = r4			  ## le_gatt_server.c:687:5
 1e00cc4:    80 f3 31 72       	call 58466 <log_print : 1e0f12a >			  ## le_gatt_server.c:687:5
 1e00cc8:    00 70             	r0 = 0			  ## le_gatt_server.c:688:5
 1e00cca:    12 70             	r2 = 1			  ## le_gatt_server.c:688:5
 1e00ccc:    51 08             	r1 = r5			  ## le_gatt_server.c:688:5
 1e00cce:    89 17             	call -238 <__gatt_server_set_work_state : 1e00be2 >			  ## le_gatt_server.c:688:5
 1e00cd0:    25 28             	if (r4 == 0) goto 74 <ble_gatt_server_adv_enable+0xCE : 1e00d1c >			  ## le_gatt_server.c:688:5
 1e00cd2:    00 f6 a8 60       	r0 = [r6 + 168]			  ## le_gatt_server.c:701:21
 1e00cd6:    51 61             	r1 = b[r0 + 21] (u)			  ## le_gatt_server.c:701:33
 1e00cd8:    a1 e5 05 10       	if (r1 != 90) goto 10 <ble_gatt_server_adv_enable+0x98 : 1e00ce6 >			  ## le_gatt_server.c:701:33
 1e00cdc:    70 81             	r0 += 23			  ## le_gatt_server.c:702:36
 1e00cde:    80 f3 d8 e8       	call 119216 <le_controller_set_mac : 1e1de92 >			  ## le_gatt_server.c:702:13
 1e00ce2:    00 f6 a8 60       	r0 = [r6 + 168]			  ## le_gatt_server.c:702:13
 1e00ce6:    52 50             	r2 = h[r0 + 10] (u)			  ## le_gatt_server.c:705:9
 1e00ce8:    c1 60             	r1 = b[r0 + 12] (u)			  ## le_gatt_server.c:705:9
 1e00cea:    d5 60             	r5 = b[r0 + 13] (u)			  ## le_gatt_server.c:705:9
 1e00cec:    e0 80             	r0 += 14			  ## le_gatt_server.c:705:9
 1e00cee:    18 02             	[sp+4] = r0			  ## le_gatt_server.c:705:9
 1e00cf0:    0b d1             	r3 = r1 >> 4			  ## le_gatt_server.c:705:9
 1e00cf2:    10 71             	r0 = 17			  ## le_gatt_server.c:705:9
 1e00cf4:    41 70             	r1 = 4			  ## le_gatt_server.c:705:9
 1e00cf6:    0d 02             	[sp] = r5			  ## le_gatt_server.c:705:9
 1e00cf8:    80 f3 bf 39       	call 29566 <ble_user_cmd_prepare : 1e0807a >			  ## le_gatt_server.c:705:9
 1e00cfc:    00 f6 a8 60       	r0 = [r6 + 168]			  ## le_gatt_server.c:707:9
 1e00d00:    03 40             	r3 = [r0 + 0]			  ## le_gatt_server.c:707:9
 1e00d02:    82 60             	r2 = b[r0 + 8] (u)			  ## le_gatt_server.c:707:9
 1e00d04:    30 70             	r0 = 3			  ## le_gatt_server.c:707:9
 1e00d06:    21 70             	r1 = 2			  ## le_gatt_server.c:707:9
 1e00d08:    80 f3 b7 39       	call 29550 <ble_user_cmd_prepare : 1e0807a >			  ## le_gatt_server.c:707:9
 1e00d0c:    00 f6 a8 60       	r0 = [r6 + 168]			  ## le_gatt_server.c:708:9
 1e00d10:    13 40             	r3 = [r0 + 4]			  ## le_gatt_server.c:708:9
 1e00d12:    92 60             	r2 = b[r0 + 9] (u)			  ## le_gatt_server.c:708:9
 1e00d14:    40 70             	r0 = 4			  ## le_gatt_server.c:708:9
 1e00d16:    21 70             	r1 = 2			  ## le_gatt_server.c:708:9
 1e00d18:    80 f3 af 39       	call 29534 <ble_user_cmd_prepare : 1e0807a >			  ## le_gatt_server.c:708:9
 1e00d1c:    10 70             	r0 = 1			  ## le_gatt_server.c:710:5
 1e00d1e:    11 70             	r1 = 1			  ## le_gatt_server.c:710:5
 1e00d20:    42 08             	r2 = r4			  ## le_gatt_server.c:710:5
 1e00d22:    80 f3 aa 39       	call 29524 <ble_user_cmd_prepare : 1e0807a >			  ## le_gatt_server.c:710:5
 1e00d26:    0a 18             	goto 20 <ble_gatt_server_adv_enable+0xEE : 1e00d3c >			  ## le_gatt_server.c:710:5
 1e00d28:    c2 ff 12 3b e1 01 	r2 = 31537938 <update_target_end+0xC8A : 1e13b12 >			  ## le_gatt_server.c:634:9
 1e00d2e:    03 18             	goto 6 <ble_gatt_server_adv_enable+0xE8 : 1e00d36 >			  ## le_gatt_server.c:634:9
 1e00d30:    c2 ff f0 3a e1 01 	r2 = 31537904 <update_target_end+0xC68 : 1e13af0 >			  ## le_gatt_server.c:628:9
 1e00d36:    20 70             	r0 = 2
 1e00d38:    80 f3 f7 71       	call 58350 <log_print : 1e0f12a >
 1e00d3c:    04 0a             	sp += 8
 1e00d3e:    56 01             	{pc, r6-r4} = [sp++]


__gatt_server_check_auto_adv:
 1e00d40:    34 00             	[--sp] = rets			  ## le_gatt_server.c:599:0
 1e00d42:    c0 ff a0 22 00 00 	r0 = 8864 <_sdfile_handl : 22a0 >			  ## le_gatt_server.c:600:17
 1e00d48:    00 f6 a8 00       	r0 = [r0 + 168]			  ## le_gatt_server.c:600:17
 1e00d4c:    c0 60             	r0 = b[r0 + 12] (u)			  ## le_gatt_server.c:600:29
 1e00d4e:    60 ff 0f 09 02 00 	if ((r0 & 15) == 0) goto 4 <__gatt_server_check_auto_adv+0x18 : 1e00d58 >			  ## le_gatt_server.c:600:29
 1e00d54:    10 70             	r0 = 1			  ## le_gatt_server.c:601:9
 1e00d56:    7b 17             	call -266 <ble_gatt_server_adv_enable : 1e00c4e >			  ## le_gatt_server.c:601:9
 1e00d58:    30 00             	pc = [sp++]			  ## le_gatt_server.c:603:1


ble_vendor_get_peer_rssi:
 1e00d5a:    74 01             	[--sp] = {rets, r4}			  ## ll_vendor.c:21:0
 1e00d5c:    14 78             	r4 = 129			  ## ll_vendor.c:21:0
 1e00d5e:    05 20             	if (r0 == 0) goto 10 <ble_vendor_get_peer_rssi+0x10 : 1e00d6a >			  ## ll_vendor.c:21:0
 1e00d60:    80 f3 a4 d8       	call 110920 <ll_link_for_handle : 1e1beac >			  ## ll_vendor.c:28:12
 1e00d64:    02 20             	if (r0 == 0) goto 4 <ble_vendor_get_peer_rssi+0x10 : 1e00d6a >
 1e00d66:    04 f9 88 01       	r4 = b[r0 + 392] (u)			  ## ll_vendor.c:32:18
 1e00d6a:    10 05             	r0 = r4.b0 (s)			  ## ll_vendor.c:33:1
 1e00d6c:    54 01             	{pc, r4} = [sp++]			  ## ll_vendor.c:33:1


ble_comm_dev_set_handle_state:
 1e00d6e:    74 01             	[--sp] = {rets, r4}			  ## le_gatt_common.c:285:0
 1e00d70:    14 08             	r4 = r1			  ## le_gatt_common.c:285:0
 1e00d72:    27 17             	call -434 <ble_comm_dev_get_index : 1e00bc2 >			  ## le_gatt_common.c:286:16
 1e00d74:    f0 ef 05 00       	if (r0 == -1) goto 10 <ble_comm_dev_set_handle_state+0x14 : 1e00d82 >			  ## le_gatt_common.c:286:16
 1e00d78:    c1 ff b0 20 00 00 	r1 = 8368 <gatt_client_conn_handle : 20b0 >			  ## le_gatt_common.c:293:9
 1e00d7e:    10 09             	r0 += r1			  ## le_gatt_common.c:288:9
 1e00d80:    3c 60             	b[r0 + 3] = r4			  ## le_gatt_common.c:288:9
 1e00d82:    54 01             	{pc, r4} = [sp++]			  ## le_gatt_common.c:297:1


__gatt_server_connection_update_request_send:
 1e00d84:    77 01             	[--sp] = {rets, r7-r4}			  ## le_gatt_server.c:118:0
 1e00d86:    f8 0b             	sp += -16			  ## le_gatt_server.c:118:0
 1e00d88:    c0 ff a0 22 00 00 	r0 = 8864 <_sdfile_handl : 22a0 >			  ## le_gatt_server.c:118:0
 1e00d8e:    03 f7 ba 00       	r3 = h[r0 + 186] (u)			  ## le_gatt_server.c:119:17
 1e00d92:    04 70             	r4 = 0			  ## le_gatt_server.c:119:17
 1e00d94:    2c 26             	if (r3 == 0) goto 88 <__gatt_server_connection_update_request_send+0x6A : 1e00dee >			  ## le_gatt_server.c:119:17
 1e00d96:    02 f9 b8 00       	r2 = b[r0 + 184] (u)			  ## le_gatt_server.c:120:21
 1e00d9a:    21 fd 0f 29       	r1 = r2 & 15			  ## le_gatt_server.c:120:21
 1e00d9e:    15 d1             	r5 = r2 >> 4			  ## le_gatt_server.c:120:62
 1e00da0:    51 f2 21 20       	if (r1 >= r5) goto 66 <__gatt_server_connection_update_request_send+0x62 : 1e00de6 >			  ## le_gatt_server.c:120:13
 1e00da4:    25 fd f0 29       	r5 = r2 & 240			  ## le_gatt_server.c:122:51
 1e00da8:    12 80             	r2 += 1			  ## le_gatt_server.c:122:51
 1e00daa:    22 fd 0f 29       	r2 = r2 & 15			  ## le_gatt_server.c:122:51
 1e00dae:    06 fc b4 00       	r6 = r0 + 180			  ## le_gatt_server.c:122:51
 1e00db2:    00 4c             	r0 = [r6 + 0]			  ## le_gatt_server.c:121:64
 1e00db4:    52 ba             	r2 |= r5			  ## le_gatt_server.c:122:51
 1e00db6:    4a 6c             	b[r6 + 4] = r2			  ## le_gatt_server.c:122:51
 1e00db8:    c9 c0             	r1 = r1 << 3			  ## le_gatt_server.c:121:56
 1e00dba:    45 b0             	r5 = r0 + r1			  ## le_gatt_server.c:121:56
 1e00dbc:    01 5a             	r1 = h[r5 + 0] (u)			  ## le_gatt_server.c:123:13
 1e00dbe:    10 5a             	r0 = h[r5 + 2] (u)			  ## le_gatt_server.c:123:13
 1e00dc0:    22 5a             	r2 = h[r5 + 4] (u)			  ## le_gatt_server.c:123:13
 1e00dc2:    37 5a             	r7 = h[r5 + 6] (u)			  ## le_gatt_server.c:123:13
 1e00dc4:    3f 02             	[sp+12] = r7			  ## le_gatt_server.c:123:13
 1e00dc6:    2a 02             	[sp+8] = r2			  ## le_gatt_server.c:123:13
 1e00dc8:    18 02             	[sp+4] = r0			  ## le_gatt_server.c:123:13
 1e00dca:    c2 ff 5e 3a e1 01 	r2 = 31537758 <update_target_end+0xBD6 : 1e13a5e >			  ## le_gatt_server.c:123:13
 1e00dd0:    20 70             	r0 = 2			  ## le_gatt_server.c:123:13
 1e00dd2:    09 02             	[sp] = r1			  ## le_gatt_server.c:123:13
 1e00dd4:    80 f3 a9 71       	call 58194 <log_print : 1e0f12a >			  ## le_gatt_server.c:123:13
 1e00dd8:    32 5c             	r2 = h[r6 + 6] (u)			  ## le_gatt_server.c:125:13
 1e00dda:    b0 70             	r0 = 11			  ## le_gatt_server.c:125:13
 1e00ddc:    21 70             	r1 = 2			  ## le_gatt_server.c:125:13
 1e00dde:    53 08             	r3 = r5			  ## le_gatt_server.c:125:13
 1e00de0:    80 f3 4b 39       	call 29334 <ble_user_cmd_prepare : 1e0807a >			  ## le_gatt_server.c:125:13
 1e00de4:    04 18             	goto 8 <__gatt_server_connection_update_request_send+0x6A : 1e00dee >			  ## le_gatt_server.c:125:13
 1e00de6:    01 70             	r1 = 0			  ## le_gatt_server.c:127:45
 1e00de8:    11 f7 ba 00       	h[r0 + 186] = r1			  ## le_gatt_server.c:127:45
 1e00dec:    e4 89             	r4 += -98			  ## le_gatt_server.c:127:45
 1e00dee:    40 08             	r0 = r4			  ## le_gatt_server.c:132:1
 1e00df0:    08 0a             	sp += 16			  ## le_gatt_server.c:132:1
 1e00df2:    57 01             	{pc, r7-r4} = [sp++]			  ## le_gatt_server.c:132:1


__ble_comm_cbk_packet_handler:
 1e00df4:    7a 01             	[--sp] = {rets, r10-r4}			  ## le_gatt_common.c:483:0
 1e00df6:    fa 0b             	sp += -12			  ## le_gatt_common.c:483:0
 1e00df8:    29 08             	r9 = r2			  ## le_gatt_common.c:483:0
 1e00dfa:    05 08             	r5 = r0			  ## le_gatt_common.c:483:0
 1e00dfc:    c4 ff b0 20 00 00 	r4 = 8368 <gatt_client_conn_handle : 20b0 >			  ## le_gatt_common.c:483:0
 1e00e02:    00 70             	r0 = 0			  ## le_gatt_common.c:488:5
 1e00e04:    48 68             	b[r4 + 4] = r0			  ## le_gatt_common.c:488:5
 1e00e06:    45 e0 c2 10       	if (r5 != 4) goto 388 <__ble_comm_cbk_packet_handler+0x19A : 1e00f8e >			  ## le_gatt_common.c:488:5
 1e00e0a:    00 64             	r0 = b[r2 + 0] (u)			  ## btstack_event.h:40:16
 1e00e0c:    50 e0 1c 00       	if (r0 == 5) goto 56 <__ble_comm_cbk_packet_handler+0x54 : 1e00e48 >			  ## le_gatt_common.c:492:9
 1e00e10:    80 e0 30 00       	if (r0 == 8) goto 96 <__ble_comm_cbk_packet_handler+0x80 : 1e00e74 >
 1e00e14:    e0 e3 43 00       	if (r0 == 62) goto 134 <__ble_comm_cbk_packet_handler+0xAA : 1e00e9e >
 1e00e18:    70 e7 14 00       	if (r0 == 119) goto 40 <__ble_comm_cbk_packet_handler+0x50 : 1e00e44 >
 1e00e1c:    00 ff b5 00 6f 00 	if (r0 == 181) goto 222 <__ble_comm_cbk_packet_handler+0x10C : 1e00f00 >
 1e00e22:    00 ff b6 00 6a 00 	if (r0 == 182) goto 212 <__ble_comm_cbk_packet_handler+0x108 : 1e00efc >
 1e00e28:    00 ff fe 00 81 00 	if (r0 == 254) goto 258 <__ble_comm_cbk_packet_handler+0x13C : 1e00f30 >
 1e00e2e:    00 ff e2 00 06 00 	if (r0 == 226) goto 12 <__ble_comm_cbk_packet_handler+0x4C : 1e00e40 >
 1e00e34:    01 ff b7 00 aa 00 	if (r0 != 183) goto 340 <__ble_comm_cbk_packet_handler+0x19A : 1e00f8e >
 1e00e3a:    11 64             	r1 = b[r2 + 1] (u)			  ## le_gatt_common.c:494:22
 1e00e3c:    10 70             	r0 = 1
 1e00e3e:    a6 22             	if (r1 == 0) goto 332 <__ble_comm_cbk_packet_handler+0x198 : 1e00f8c >
 1e00e40:    20 70             	r0 = 2
 1e00e42:    a4 18             	goto 328 <__ble_comm_cbk_packet_handler+0x198 : 1e00f8c >
 1e00e44:    21 70             	r1 = 2			  ## le_gatt_common.c:626:26
 1e00e46:    9c 18             	goto 312 <__ble_comm_cbk_packet_handler+0x18C : 1e00f80 >
 1e00e48:    31 70             	r1 = 3			  ## le_gatt_common.c:608:26
 1e00e4a:    90 08             	r0 = r9			  ## le_gatt_common.c:608:26
 1e00e4c:    80 f3 37 37       	call 28270 <little_endian_read_16 : 1e07cbe >			  ## le_gatt_common.c:608:26
 1e00e50:    06 08             	r6 = r0			  ## le_gatt_common.c:608:26
 1e00e52:    c0 15             	call -1152 <__just_conn_handle_role : 1e009d4 >			  ## le_gatt_common.c:609:13
 1e00e54:    40 68             	r0 = b[r4 + 4] (u)			  ## le_gatt_common.c:609:13
 1e00e56:    10 b0             	r0 |= 1			  ## le_gatt_common.c:609:13
 1e00e58:    48 68             	b[r4 + 4] = r0			  ## le_gatt_common.c:609:13
 1e00e5a:    e1 99             	r1 = r4 + 30			  ## le_gatt_common.c:609:13
 1e00e5c:    00 70             	r0 = 0
 1e00e5e:    07 70             	r7 = 0
 1e00e60:    06 18             	goto 12 <__ble_comm_cbk_packet_handler+0x7A : 1e00e6e >
 1e00e62:    02 52             	r2 = h[r1 + 0] (u)			  ## le_gatt_common.c:174:23
 1e00e64:    62 f2 6c 00       	if (r2 == r6) goto 216 <__ble_comm_cbk_packet_handler+0x14C : 1e00f40 >			  ## le_gatt_common.c:174:13
 1e00e68:    21 80             	r1 += 2			  ## le_gatt_common.c:173:5
 1e00e6a:    f0 8f             	r0 += -1			  ## le_gatt_common.c:173:5
 1e00e6c:    17 80             	r7 += 1			  ## le_gatt_common.c:173:29
 1e00e6e:    07 e0 f8 df       	ifs (r7 <= 0) goto -16 <__ble_comm_cbk_packet_handler+0x6E : 1e00e62 >
 1e00e72:    6c 18             	goto 216 <__ble_comm_cbk_packet_handler+0x158 : 1e00f4c >
 1e00e74:    31 70             	r1 = 3			  ## le_gatt_common.c:631:26
 1e00e76:    90 08             	r0 = r9			  ## le_gatt_common.c:631:26
 1e00e78:    80 f3 21 37       	call 28226 <little_endian_read_16 : 1e07cbe >			  ## le_gatt_common.c:631:26
 1e00e7c:    06 08             	r6 = r0			  ## le_gatt_common.c:631:26
 1e00e7e:    aa 15             	call -1196 <__just_conn_handle_role : 1e009d4 >			  ## le_gatt_common.c:632:13
 1e00e80:    40 68             	r0 = b[r4 + 4] (u)			  ## le_gatt_common.c:632:13
 1e00e82:    10 b0             	r0 |= 1			  ## le_gatt_common.c:632:13
 1e00e84:    48 68             	b[r4 + 4] = r0			  ## le_gatt_common.c:632:13
 1e00e86:    60 08             	r0 = r6			  ## le_gatt_common.c:633:25
 1e00e88:    9c 16             	call -712 <ble_comm_dev_get_index : 1e00bc2 >			  ## le_gatt_common.c:633:25
 1e00e8a:    f0 ef 80 00       	if (r0 == -1) goto 256 <__ble_comm_cbk_packet_handler+0x19A : 1e00f8e >			  ## le_gatt_common.c:633:25
 1e00e8e:    03 f9 02 90       	r3 = b[r9 + 2] (u)			  ## le_gatt_common.c:635:17
 1e00e92:    c2 ff 57 32 e1 01 	r2 = 31535703 <update_target_end+0x3CF : 1e13257 >			  ## le_gatt_common.c:635:17
 1e00e98:    20 70             	r0 = 2			  ## le_gatt_common.c:635:17
 1e00e9a:    0e 02             	[sp] = r6			  ## le_gatt_common.c:635:17
 1e00e9c:    5c 18             	goto 184 <__ble_comm_cbk_packet_handler+0x162 : 1e00f56 >			  ## le_gatt_common.c:635:17
 1e00e9e:    20 64             	r0 = b[r2 + 2] (u)			  ## btstack_event.h:122:16
 1e00ea0:    c0 e0 5c 00       	if (r0 == 12) goto 184 <__ble_comm_cbk_packet_handler+0x168 : 1e00f5c >			  ## btstack_event.h:122:16
 1e00ea4:    30 e0 5a 00       	if (r0 == 3) goto 180 <__ble_comm_cbk_packet_handler+0x168 : 1e00f5c >
 1e00ea8:    70 e0 69 00       	if (r0 == 7) goto 210 <__ble_comm_cbk_packet_handler+0x18A : 1e00f7e >
 1e00eac:    10 e0 6f 10       	if (r0 != 1) goto 222 <__ble_comm_cbk_packet_handler+0x19A : 1e00f8e >
 1e00eb0:    30 64             	r0 = b[r2 + 3] (u)			  ## le_gatt_common.c:557:38
 1e00eb2:    c0 e3 23 00       	if (r0 == 60) goto 70 <__ble_comm_cbk_packet_handler+0x108 : 1e00efc >			  ## le_gatt_common.c:557:38
 1e00eb6:    00 e0 bc 11       	if (r0 != 0) goto 888 <__ble_comm_cbk_packet_handler+0x43E : 1e01232 >
 1e00eba:    41 70             	r1 = 4			  ## btstack_event.h:3351:16
 1e00ebc:    90 08             	r0 = r9			  ## btstack_event.h:3351:16
 1e00ebe:    80 f3 fe 36       	call 28156 <little_endian_read_16 : 1e07cbe >			  ## btstack_event.h:3351:16
 1e00ec2:    67 64             	r7 = b[r2 + 6] (u)			  ## btstack_event.h:3361:16
 1e00ec4:    08 08             	r8 = r0			  ## btstack_event.h:3351:16
 1e00ec6:    1a 70             	r10 = 1			  ## btstack_event.h:3351:16
 1e00ec8:    20 70             	r0 = 2			  ## le_gatt_common.c:559:25
 1e00eca:    01 2e             	if (r7 == 0) goto 2 <__ble_comm_cbk_packet_handler+0xDA : 1e00ece >			  ## le_gatt_common.c:559:25
 1e00ecc:    10 70             	r0 = 1			  ## le_gatt_common.c:559:25
 1e00ece:    48 68             	b[r4 + 4] = r0			  ## le_gatt_common.c:560:25
 1e00ed0:    01 2e             	if (r7 == 0) goto 2 <__ble_comm_cbk_packet_handler+0xE0 : 1e00ed4 >			  ## le_gatt_common.c:560:25
 1e00ed2:    0a 70             	r10 = 0
 1e00ed4:    a0 08             	r0 = r10			  ## le_gatt_common.c:567:33
 1e00ed6:    54 16             	call -856 <ble_comm_dev_get_idle_index : 1e00b80 >			  ## le_gatt_common.c:567:33
 1e00ed8:    06 08             	r6 = r0			  ## le_gatt_common.c:567:33
 1e00eda:    f6 ef 2d 02       	if (r6 == -1) goto 1114 <__ble_comm_cbk_packet_handler+0x544 : 1e01338 >			  ## le_gatt_common.c:567:33
 1e00ede:    82 05             	r2 = r6.b0 (u)			  ## le_gatt_common.c:574:25
 1e00ee0:    80 08             	r0 = r8			  ## le_gatt_common.c:574:25
 1e00ee2:    a1 08             	r1 = r10			  ## le_gatt_common.c:574:25
 1e00ee4:    63 16             	call -826 <__comm_set_dev_handle_value : 1e00bac >			  ## le_gatt_common.c:574:25
 1e00ee6:    12 70             	r2 = 1			  ## le_gatt_common.c:559:25
 1e00ee8:    01 2e             	if (r7 == 0) goto 2 <__ble_comm_cbk_packet_handler+0xF8 : 1e00eec >			  ## le_gatt_common.c:559:25
 1e00eea:    02 70             	r2 = 0
 1e00eec:    90 71             	r0 = 25			  ## le_gatt_common.c:575:25
 1e00eee:    31 70             	r1 = 3			  ## le_gatt_common.c:575:25
 1e00ef0:    0a 02             	[sp] = r2			  ## le_gatt_common.c:575:25
 1e00ef2:    82 08             	r2 = r8			  ## le_gatt_common.c:575:25
 1e00ef4:    63 08             	r3 = r6			  ## le_gatt_common.c:575:25
 1e00ef6:    80 f3 c0 38       	call 29056 <ble_user_cmd_prepare : 1e0807a >			  ## le_gatt_common.c:575:25
 1e00efa:    49 18             	goto 146 <__ble_comm_cbk_packet_handler+0x19A : 1e00f8e >			  ## le_gatt_common.c:575:25
 1e00efc:    10 70             	r0 = 1
 1e00efe:    46 18             	goto 140 <__ble_comm_cbk_packet_handler+0x198 : 1e00f8c >
 1e00f00:    21 70             	r1 = 2			  ## le_gatt_common.c:506:26
 1e00f02:    90 08             	r0 = r9			  ## le_gatt_common.c:506:26
 1e00f04:    80 f3 db 36       	call 28086 <little_endian_read_16 : 1e07cbe >			  ## le_gatt_common.c:506:26
 1e00f08:    06 08             	r6 = r0			  ## le_gatt_common.c:506:26
 1e00f0a:    41 70             	r1 = 4			  ## btstack_event.h:2313:16
 1e00f0c:    90 08             	r0 = r9			  ## btstack_event.h:2313:16
 1e00f0e:    80 f3 d6 36       	call 28076 <little_endian_read_16 : 1e07cbe >			  ## btstack_event.h:2313:16
 1e00f12:    07 08             	r7 = r0			  ## btstack_event.h:2313:16
 1e00f14:    60 08             	r0 = r6			  ## le_gatt_common.c:509:13
 1e00f16:    5e 15             	call -1348 <__just_conn_handle_role : 1e009d4 >			  ## le_gatt_common.c:509:13
 1e00f18:    40 68             	r0 = b[r4 + 4] (u)			  ## le_gatt_common.c:509:13
 1e00f1a:    10 b0             	r0 |= 1			  ## le_gatt_common.c:509:13
 1e00f1c:    48 68             	b[r4 + 4] = r0			  ## le_gatt_common.c:509:13
 1e00f1e:    70 fc fd ff       	r0 = r7 + -3			  ## le_gatt_common.c:508:71
 1e00f22:    23 04             	r3 = r0.l (u)			  ## le_gatt_common.c:511:13
 1e00f24:    b0 71             	r0 = 27			  ## le_gatt_common.c:511:13
 1e00f26:    21 70             	r1 = 2			  ## le_gatt_common.c:511:13
 1e00f28:    62 08             	r2 = r6			  ## le_gatt_common.c:511:13
 1e00f2a:    80 f3 a6 38       	call 29004 <ble_user_cmd_prepare : 1e0807a >			  ## le_gatt_common.c:511:13
 1e00f2e:    2f 18             	goto 94 <__ble_comm_cbk_packet_handler+0x19A : 1e00f8e >			  ## le_gatt_common.c:511:13
 1e00f30:    13 64             	r3 = b[r2 + 1] (u)			  ## le_gatt_common.c:622:13
 1e00f32:    21 64             	r1 = b[r2 + 2] (u)			  ## le_gatt_common.c:622:13
 1e00f34:    c2 ff 1d 32 e1 01 	r2 = 31535645 <update_target_end+0x395 : 1e1321d >			  ## le_gatt_common.c:622:13
 1e00f3a:    20 70             	r0 = 2			  ## le_gatt_common.c:622:13
 1e00f3c:    09 02             	[sp] = r1			  ## le_gatt_common.c:622:13
 1e00f3e:    0b 18             	goto 22 <__ble_comm_cbk_packet_handler+0x162 : 1e00f56 >			  ## le_gatt_common.c:622:13
 1e00f40:    08 70             	r8 = 0			  ## le_gatt_common.c:175:29
 1e00f42:    02 04             	r2 = r0.b0 (u)			  ## le_gatt_common.c:175:29
 1e00f44:    18 f7 00 10       	h[r1 + 0] = r8			  ## le_gatt_common.c:175:29
 1e00f48:    12 e0 0a 10       	if (r2 != 1) goto 20 <__ble_comm_cbk_packet_handler+0x16C : 1e00f60 >			  ## le_gatt_common.c:175:29
 1e00f4c:    c2 ff f6 31 e1 01 	r2 = 31535606 <update_target_end+0x36E : 1e131f6 >			  ## le_gatt_common.c:617:17
 1e00f52:    20 70             	r0 = 2			  ## le_gatt_common.c:617:17
 1e00f54:    63 08             	r3 = r6			  ## le_gatt_common.c:617:17
 1e00f56:    80 f3 e8 70       	call 57808 <log_print : 1e0f12a >
 1e00f5a:    19 18             	goto 50 <__ble_comm_cbk_packet_handler+0x19A : 1e00f8e >
 1e00f5c:    41 70             	r1 = 4
 1e00f5e:    10 18             	goto 32 <__ble_comm_cbk_packet_handler+0x18C : 1e00f80 >
 1e00f60:    60 fb 00 09       	r0 = 0 - r0			  ## le_gatt_common.c:175:29
 1e00f64:    02 04             	r2 = r0.b0 (u)			  ## le_gatt_common.c:614:17
 1e00f66:    00 70             	r0 = 0			  ## le_gatt_common.c:614:17
 1e00f68:    01 70             	r1 = 0			  ## le_gatt_common.c:614:17
 1e00f6a:    20 16             	call -960 <__comm_set_dev_handle_value : 1e00bac >			  ## le_gatt_common.c:614:17
 1e00f6c:    90 71             	r0 = 25			  ## le_gatt_common.c:615:17
 1e00f6e:    31 70             	r1 = 3			  ## le_gatt_common.c:615:17
 1e00f70:    02 70             	r2 = 0			  ## le_gatt_common.c:615:17
 1e00f72:    18 f5 00 00       	[sp] = r8			  ## le_gatt_common.c:615:17
 1e00f76:    73 08             	r3 = r7			  ## le_gatt_common.c:615:17
 1e00f78:    80 f3 7f 38       	call 28926 <ble_user_cmd_prepare : 1e0807a >			  ## le_gatt_common.c:615:17
 1e00f7c:    08 18             	goto 16 <__ble_comm_cbk_packet_handler+0x19A : 1e00f8e >			  ## le_gatt_common.c:615:17
 1e00f7e:    31 70             	r1 = 3			  ## le_gatt_common.c:598:17
 1e00f80:    90 08             	r0 = r9
 1e00f82:    80 f3 9c 36       	call 27960 <little_endian_read_16 : 1e07cbe >
 1e00f86:    26 15             	call -1460 <__just_conn_handle_role : 1e009d4 >
 1e00f88:    40 68             	r0 = b[r4 + 4] (u)
 1e00f8a:    10 b0             	r0 |= 1
 1e00f8c:    48 68             	b[r4 + 4] = r0
 1e00f8e:    40 68             	r0 = b[r4 + 4] (u)			  ## le_gatt_common.c:647:13
 1e00f90:    00 f3 be 01       	if ((r0 & 1) == 0) goto 892 <__ble_comm_cbk_packet_handler+0x51C : 1e01310 >			  ## le_gatt_common.c:647:13
 1e00f94:    45 e0 bc 11       	if (r5 != 4) goto 888 <__ble_comm_cbk_packet_handler+0x51C : 1e01310 >
 1e00f98:    00 f9 00 90       	r0 = b[r9 + 0] (u)			  ## btstack_event.h:40:16
 1e00f9c:    c6 ff a0 22 00 00 	r6 = 8864 <_sdfile_handl : 22a0 >			  ## btstack_event.h:40:16
 1e00fa2:    50 e0 1a 00       	if (r0 == 5) goto 52 <__ble_comm_cbk_packet_handler+0x1E6 : 1e00fda >			  ## le_gatt_server.c:348:9
 1e00fa6:    80 e0 47 00       	if (r0 == 8) goto 142 <__ble_comm_cbk_packet_handler+0x244 : 1e01038 >
 1e00faa:    e0 e3 5d 00       	if (r0 == 62) goto 186 <__ble_comm_cbk_packet_handler+0x274 : 1e01068 >
 1e00fae:    70 e7 7a 00       	if (r0 == 119) goto 244 <__ble_comm_cbk_packet_handler+0x2B2 : 1e010a6 >
 1e00fb2:    00 ff b5 00 9c 00 	if (r0 == 181) goto 312 <__ble_comm_cbk_packet_handler+0x2FC : 1e010f0 >
 1e00fb8:    00 ff b6 00 b2 00 	if (r0 == 182) goto 356 <__ble_comm_cbk_packet_handler+0x32E : 1e01122 >
 1e00fbe:    00 ff fe 00 d0 00 	if (r0 == 254) goto 416 <__ble_comm_cbk_packet_handler+0x370 : 1e01164 >
 1e00fc4:    01 ff b7 00 a3 01 	if (r0 != 183) goto 838 <__ble_comm_cbk_packet_handler+0x51C : 1e01310 >
 1e00fca:    00 f6 cc 60       	r0 = [r6 + 204]			  ## le_gatt_server.c:192:17
 1e00fce:    01 20             	if (r0 == 0) goto 2 <__ble_comm_cbk_packet_handler+0x1DE : 1e00fd2 >			  ## le_gatt_server.c:192:17
 1e00fd0:    80 00             	call r0			  ## le_gatt_server.c:193:9
 1e00fd2:    60 70             	r0 = 6			  ## le_gatt_server.c:195:5
 1e00fd4:    01 70             	r1 = 0			  ## le_gatt_server.c:195:5
 1e00fd6:    02 70             	r2 = 0			  ## le_gatt_server.c:195:5
 1e00fd8:    2a 19             	goto 596 <__ble_comm_cbk_packet_handler+0x43A : 1e0122e >			  ## le_gatt_server.c:195:5
 1e00fda:    31 70             	r1 = 3			  ## le_gatt_server.c:471:26
 1e00fdc:    90 08             	r0 = r9			  ## le_gatt_server.c:471:26
 1e00fde:    80 f3 6e 36       	call 27868 <little_endian_read_16 : 1e07cbe >			  ## le_gatt_server.c:471:26
 1e00fe2:    05 08             	r5 = r0			  ## le_gatt_server.c:471:26
 1e00fe4:    95 f5 04 00       	h[sp+4] = r5			  ## le_gatt_server.c:471:24
 1e00fe8:    01 f9 05 90       	r1 = b[r9 + 5] (u)			  ## le_gatt_server.c:472:26
 1e00fec:    00 f7 ba 60       	r0 = h[r6 + 186] (u)			  ## le_gatt_server.c:473:25
 1e00ff0:    91 f5 06 00       	h[sp+6] = r1			  ## le_gatt_server.c:472:24
 1e00ff4:    50 f2 05 10       	if (r0 != r5) goto 10 <__ble_comm_cbk_packet_handler+0x20E : 1e01002 >			  ## le_gatt_server.c:472:24
 1e00ff8:    00 70             	r0 = 0			  ## le_gatt_server.c:474:49
 1e00ffa:    10 f7 ba 60       	h[r6 + 186] = r0			  ## le_gatt_server.c:474:49
 1e00ffe:    01 f9 05 90       	r1 = b[r9 + 5] (u)			  ## le_gatt_server.c:474:49
 1e01002:    c2 ff e4 38 e1 01 	r2 = 31537380 <update_target_end+0xA5C : 1e138e4 >			  ## le_gatt_server.c:476:13
 1e01008:    20 70             	r0 = 2			  ## le_gatt_server.c:476:13
 1e0100a:    09 02             	[sp] = r1			  ## le_gatt_server.c:476:13
 1e0100c:    53 08             	r3 = r5			  ## le_gatt_server.c:476:13
 1e0100e:    80 f3 8c 70       	call 57624 <log_print : 1e0f12a >			  ## le_gatt_server.c:476:13
 1e01012:    50 08             	r0 = r5			  ## le_gatt_server.c:486:13
 1e01014:    80 f3 4b 39       	call 29334 <multi_att_clear_ccc_config : 1e082ae >			  ## le_gatt_server.c:486:13
 1e01018:    51 70             	r1 = 5			  ## le_gatt_server.c:487:13
 1e0101a:    a9 16             	call -686 <ble_comm_dev_set_handle_state : 1e00d6e >			  ## le_gatt_server.c:487:13
 1e0101c:    51 70             	r1 = 5			  ## le_gatt_server.c:488:13
 1e0101e:    12 70             	r2 = 1			  ## le_gatt_server.c:488:13
 1e01020:    50 08             	r0 = r5			  ## le_gatt_server.c:488:13
 1e01022:    df 15             	call -1090 <__gatt_server_set_work_state : 1e00be2 >			  ## le_gatt_server.c:488:13
 1e01024:    41 a0             	r1 = sp + 4			  ## le_gatt_server.c:488:13
 1e01026:    20 70             	r0 = 2			  ## le_gatt_server.c:489:13
 1e01028:    42 70             	r2 = 4			  ## le_gatt_server.c:489:13
 1e0102a:    93 08             	r3 = r9			  ## le_gatt_server.c:489:13
 1e0102c:    e1 14             	call -1598 <__gatt_server_event_callback_handler : 1e009f0 >			  ## le_gatt_server.c:489:13
 1e0102e:    00 f9 3c 40       	r0 = b[r4 + 60] (u)			  ## le_gatt_server.c:489:13
 1e01032:    00 e0 6d 11       	if (r0 != 0) goto 730 <__ble_comm_cbk_packet_handler+0x51C : 1e01310 >			  ## le_gatt_server.c:489:13
 1e01036:    7e 19             	goto 764 <__ble_comm_cbk_packet_handler+0x540 : 1e01334 >			  ## le_gatt_server.c:489:13
 1e01038:    31 70             	r1 = 3			  ## le_gatt_server.c:530:26
 1e0103a:    90 08             	r0 = r9			  ## le_gatt_server.c:530:26
 1e0103c:    80 f3 3f 36       	call 27774 <little_endian_read_16 : 1e07cbe >			  ## le_gatt_server.c:530:26
 1e01040:    90 f5 04 00       	h[sp+4] = r0			  ## le_gatt_server.c:530:24
 1e01044:    03 f9 02 90       	r3 = b[r9 + 2] (u)			  ## le_gatt_server.c:531:26
 1e01048:    00 f9 b9 60       	r0 = b[r6 + 185] (u)			  ## le_gatt_server.c:531:39
 1e0104c:    31 08             	r1 = r3			  ## le_gatt_server.c:531:36
 1e0104e:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## le_gatt_server.c:531:36
 1e01052:    91 f5 06 00       	h[sp+6] = r1			  ## le_gatt_server.c:531:24
 1e01056:    c2 ff 26 3a e1 01 	r2 = 31537702 <update_target_end+0xB9E : 1e13a26 >			  ## le_gatt_server.c:532:13
 1e0105c:    20 70             	r0 = 2			  ## le_gatt_server.c:532:13
 1e0105e:    80 f3 64 70       	call 57544 <log_print : 1e0f12a >			  ## le_gatt_server.c:532:13
 1e01062:    41 a0             	r1 = sp + 4			  ## le_gatt_server.c:532:13
 1e01064:    50 70             	r0 = 5			  ## le_gatt_server.c:533:13
 1e01066:    e2 18             	goto 452 <__ble_comm_cbk_packet_handler+0x438 : 1e0122c >			  ## le_gatt_server.c:533:13
 1e01068:    00 f9 02 90       	r0 = b[r9 + 2] (u)			  ## btstack_event.h:122:16
 1e0106c:    c2 ff f0 37 e1 01 	r2 = 31537136 <update_target_end+0x968 : 1e137f0 >			  ## btstack_event.h:122:16
 1e01072:    c0 e0 7e 00       	if (r0 == 12) goto 252 <__ble_comm_cbk_packet_handler+0x37E : 1e01172 >			  ## le_gatt_server.c:363:13
 1e01076:    30 e0 8c 00       	if (r0 == 3) goto 280 <__ble_comm_cbk_packet_handler+0x39E : 1e01192 >
 1e0107a:    70 e0 bf 00       	if (r0 == 7) goto 382 <__ble_comm_cbk_packet_handler+0x408 : 1e011fc >
 1e0107e:    10 e0 47 11       	if (r0 != 1) goto 654 <__ble_comm_cbk_packet_handler+0x51C : 1e01310 >
 1e01082:    03 f9 03 90       	r3 = b[r9 + 3] (u)			  ## le_gatt_server.c:404:38
 1e01086:    fb 26             	if (r3 == 0) goto 502 <__ble_comm_cbk_packet_handler+0x48A : 1e0127e >			  ## le_gatt_server.c:404:21
 1e01088:    c3 e3 44 11       	if (r3 != 60) goto 648 <__ble_comm_cbk_packet_handler+0x520 : 1e01314 >
 1e0108c:    c2 ff fa 35 e1 01 	r2 = 31536634 <update_target_end+0x772 : 1e135fa >			  ## le_gatt_server.c:407:25
 1e01092:    20 70             	r0 = 2			  ## le_gatt_server.c:407:25
 1e01094:    80 f3 49 70       	call 57490 <log_print : 1e0f12a >			  ## le_gatt_server.c:407:25
 1e01098:    00 70             	r0 = 0			  ## le_gatt_server.c:408:25
 1e0109a:    21 70             	r1 = 2			  ## le_gatt_server.c:408:25
 1e0109c:    12 70             	r2 = 1			  ## le_gatt_server.c:408:25
 1e0109e:    a1 15             	call -1214 <__gatt_server_set_work_state : 1e00be2 >			  ## le_gatt_server.c:408:25
 1e010a0:    41 a0             	r1 = sp + 4			  ## le_gatt_server.c:408:25
 1e010a2:    10 73             	r0 = 49			  ## le_gatt_server.c:409:25
 1e010a4:    43 19             	goto 646 <__ble_comm_cbk_packet_handler+0x538 : 1e0132c >			  ## le_gatt_server.c:409:25
 1e010a6:    21 70             	r1 = 2			  ## le_gatt_server.c:510:26
 1e010a8:    90 08             	r0 = r9			  ## le_gatt_server.c:510:26
 1e010aa:    80 f3 08 36       	call 27664 <little_endian_read_16 : 1e07cbe >			  ## le_gatt_server.c:510:26
 1e010ae:    05 08             	r5 = r0			  ## le_gatt_server.c:510:26
 1e010b0:    95 f5 04 00       	h[sp+4] = r5			  ## le_gatt_server.c:510:24
 1e010b4:    41 70             	r1 = 4			  ## le_gatt_server.c:511:26
 1e010b6:    90 08             	r0 = r9			  ## le_gatt_server.c:511:26
 1e010b8:    80 f3 01 36       	call 27650 <little_endian_read_16 : 1e07cbe >			  ## le_gatt_server.c:511:26
 1e010bc:    04 08             	r4 = r0			  ## le_gatt_server.c:511:26
 1e010be:    94 f5 06 00       	h[sp+6] = r4			  ## le_gatt_server.c:511:24
 1e010c2:    c2 ff a8 39 e1 01 	r2 = 31537576 <update_target_end+0xB20 : 1e139a8 >			  ## le_gatt_server.c:512:13
 1e010c8:    20 70             	r0 = 2			  ## le_gatt_server.c:512:13
 1e010ca:    0c 02             	[sp] = r4			  ## le_gatt_server.c:512:13
 1e010cc:    53 08             	r3 = r5			  ## le_gatt_server.c:512:13
 1e010ce:    80 f3 2c 70       	call 57432 <log_print : 1e0f12a >			  ## le_gatt_server.c:512:13
 1e010d2:    00 f7 ba 60       	r0 = h[r6 + 186] (u)			  ## le_gatt_server.c:514:25
 1e010d6:    50 f2 1b 11       	if (r0 != r5) goto 566 <__ble_comm_cbk_packet_handler+0x51C : 1e01310 >			  ## le_gatt_server.c:514:25
 1e010da:    9d 28             	if (r4 == 0) goto 314 <__ble_comm_cbk_packet_handler+0x422 : 1e01216 >			  ## le_gatt_server.c:515:21
 1e010dc:    c2 ff d7 39 e1 01 	r2 = 31537623 <update_target_end+0xB4F : 1e139d7 >			  ## le_gatt_server.c:516:21
 1e010e2:    20 70             	r0 = 2			  ## le_gatt_server.c:516:21
 1e010e4:    80 f3 21 70       	call 57410 <log_print : 1e0f12a >			  ## le_gatt_server.c:516:21
 1e010e8:    4d 16             	call -870 <__gatt_server_connection_update_request_send : 1e00d84 >			  ## le_gatt_server.c:517:25
 1e010ea:    00 e0 11 11       	if (r0 != 0) goto 546 <__ble_comm_cbk_packet_handler+0x51C : 1e01310 >			  ## le_gatt_server.c:517:25
 1e010ee:    9c 18             	goto 312 <__ble_comm_cbk_packet_handler+0x434 : 1e01228 >			  ## le_gatt_server.c:517:25
 1e010f0:    21 70             	r1 = 2			  ## le_gatt_server.c:498:26
 1e010f2:    90 08             	r0 = r9			  ## le_gatt_server.c:498:26
 1e010f4:    80 f3 e3 35       	call 27590 <little_endian_read_16 : 1e07cbe >			  ## le_gatt_server.c:498:26
 1e010f8:    03 08             	r3 = r0			  ## le_gatt_server.c:498:26
 1e010fa:    93 f5 04 00       	h[sp+4] = r3			  ## le_gatt_server.c:498:24
 1e010fe:    41 70             	r1 = 4			  ## btstack_event.h:2313:16
 1e01100:    90 08             	r0 = r9			  ## btstack_event.h:2313:16
 1e01102:    80 f3 dc 35       	call 27576 <little_endian_read_16 : 1e07cbe >			  ## btstack_event.h:2313:16
 1e01106:    d0 8f             	r0 += -3			  ## le_gatt_server.c:499:74
 1e01108:    90 f5 06 00       	h[sp+6] = r0			  ## le_gatt_server.c:499:24
 1e0110c:    21 04             	r1 = r0.l (u)			  ## le_gatt_server.c:500:13
 1e0110e:    c2 ff 3d 39 e1 01 	r2 = 31537469 <update_target_end+0xAB5 : 1e1393d >			  ## le_gatt_server.c:500:13
 1e01114:    20 70             	r0 = 2			  ## le_gatt_server.c:500:13
 1e01116:    09 02             	[sp] = r1			  ## le_gatt_server.c:500:13
 1e01118:    80 f3 07 70       	call 57358 <log_print : 1e0f12a >			  ## le_gatt_server.c:500:13
 1e0111c:    41 a0             	r1 = sp + 4			  ## le_gatt_server.c:500:13
 1e0111e:    00 72             	r0 = 32			  ## le_gatt_server.c:501:13
 1e01120:    85 18             	goto 266 <__ble_comm_cbk_packet_handler+0x438 : 1e0122c >			  ## le_gatt_server.c:501:13
 1e01122:    31 70             	r1 = 3			  ## le_gatt_server.c:355:13
 1e01124:    90 08             	r0 = r9			  ## le_gatt_server.c:355:13
 1e01126:    80 f3 ca 35       	call 27540 <little_endian_read_16 : 1e07cbe >			  ## le_gatt_server.c:355:13
 1e0112a:    03 08             	r3 = r0			  ## le_gatt_server.c:355:13
 1e0112c:    51 70             	r1 = 5			  ## le_gatt_server.c:355:13
 1e0112e:    90 08             	r0 = r9			  ## le_gatt_server.c:355:13
 1e01130:    80 f3 c5 35       	call 27530 <little_endian_read_16 : 1e07cbe >			  ## le_gatt_server.c:355:13
 1e01134:    01 08             	r1 = r0			  ## le_gatt_server.c:355:13
 1e01136:    c2 ff a8 35 e1 01 	r2 = 31536552 <update_target_end+0x720 : 1e135a8 >			  ## le_gatt_server.c:355:13
 1e0113c:    20 70             	r0 = 2			  ## le_gatt_server.c:355:13
 1e0113e:    09 02             	[sp] = r1			  ## le_gatt_server.c:355:13
 1e01140:    80 f3 f3 6f       	call 57318 <log_print : 1e0f12a >			  ## le_gatt_server.c:355:13
 1e01144:    31 70             	r1 = 3			  ## le_gatt_server.c:357:26
 1e01146:    90 08             	r0 = r9			  ## le_gatt_server.c:357:26
 1e01148:    80 f3 b9 35       	call 27506 <little_endian_read_16 : 1e07cbe >			  ## le_gatt_server.c:357:26
 1e0114c:    90 f5 04 00       	h[sp+4] = r0			  ## le_gatt_server.c:357:24
 1e01150:    51 70             	r1 = 5			  ## le_gatt_server.c:358:26
 1e01152:    90 08             	r0 = r9			  ## le_gatt_server.c:358:26
 1e01154:    80 f3 b3 35       	call 27494 <little_endian_read_16 : 1e07cbe >			  ## le_gatt_server.c:358:26
 1e01158:    90 f5 06 00       	h[sp+6] = r0			  ## le_gatt_server.c:358:24
 1e0115c:    41 a0             	r1 = sp + 4			  ## le_gatt_server.c:358:24
 1e0115e:    10 74             	r0 = 65			  ## le_gatt_server.c:359:13
 1e01160:    42 70             	r2 = 4			  ## le_gatt_server.c:359:13
 1e01162:    d3 18             	goto 422 <__ble_comm_cbk_packet_handler+0x516 : 1e0130a >			  ## le_gatt_server.c:359:13
 1e01164:    c2 ff 70 39 e1 01 	r2 = 31537520 <update_target_end+0xAE8 : 1e13970 >			  ## le_gatt_server.c:506:13
 1e0116a:    20 70             	r0 = 2
 1e0116c:    80 f3 dd 6f       	call 57274 <log_print : 1e0f12a >
 1e01170:    cf 18             	goto 414 <__ble_comm_cbk_packet_handler+0x51C : 1e01310 >
 1e01172:    31 70             	r1 = 3			  ## le_gatt_server.c:462:17
 1e01174:    90 08             	r0 = r9			  ## le_gatt_server.c:462:17
 1e01176:    80 f3 a2 35       	call 27460 <little_endian_read_16 : 1e07cbe >			  ## le_gatt_server.c:462:17
 1e0117a:    01 08             	r1 = r0			  ## le_gatt_server.c:462:17
 1e0117c:    20 70             	r0 = 2			  ## le_gatt_server.c:462:17
 1e0117e:    13 08             	r3 = r1			  ## le_gatt_server.c:462:17
 1e01180:    80 f3 d3 6f       	call 57254 <log_print : 1e0f12a >			  ## le_gatt_server.c:462:17
 1e01184:    00 f9 03 90       	r0 = b[r9 + 3] (u)			  ## btstack_event.h:6607:16
 1e01188:    59 30             	if (r0 != 0) goto 178 <__ble_comm_cbk_packet_handler+0x448 : 1e0123c >			  ## btstack_event.h:6607:16
 1e0118a:    c3 ff 5f 38 e1 01 	r3 = 31537247 <update_target_end+0x9D7 : 1e1385f >			  ## le_gatt_server.c:463:17
 1e01190:    58 18             	goto 176 <__ble_comm_cbk_packet_handler+0x44E : 1e01242 >			  ## le_gatt_server.c:463:17
 1e01192:    41 70             	r1 = 4			  ## le_gatt_server.c:447:30
 1e01194:    90 08             	r0 = r9			  ## le_gatt_server.c:447:30
 1e01196:    80 f3 92 35       	call 27428 <little_endian_read_16 : 1e07cbe >			  ## le_gatt_server.c:447:30
 1e0119a:    01 08             	r1 = r0			  ## le_gatt_server.c:447:30
 1e0119c:    91 f5 04 00       	h[sp+4] = r1			  ## le_gatt_server.c:447:28
 1e011a0:    c2 ff 26 37 e1 01 	r2 = 31536934 <update_target_end+0x89E : 1e13726 >			  ## le_gatt_server.c:448:17
 1e011a6:    20 70             	r0 = 2			  ## le_gatt_server.c:448:17
 1e011a8:    13 08             	r3 = r1			  ## le_gatt_server.c:448:17
 1e011aa:    80 f3 be 6f       	call 57212 <log_print : 1e0f12a >			  ## le_gatt_server.c:448:17
 1e011ae:    61 70             	r1 = 6			  ## btstack_event.h:3452:16
 1e011b0:    90 08             	r0 = r9			  ## btstack_event.h:3452:16
 1e011b2:    80 f3 84 35       	call 27400 <little_endian_read_16 : 1e07cbe >			  ## btstack_event.h:3452:16
 1e011b6:    01 08             	r1 = r0			  ## btstack_event.h:3452:16
 1e011b8:    c2 ff 5a 37 e1 01 	r2 = 31536986 <update_target_end+0x8D2 : 1e1375a >			  ## le_gatt_server.c:449:17
 1e011be:    20 70             	r0 = 2			  ## le_gatt_server.c:449:17
 1e011c0:    13 08             	r3 = r1			  ## le_gatt_server.c:449:17
 1e011c2:    80 f3 b2 6f       	call 57188 <log_print : 1e0f12a >			  ## le_gatt_server.c:449:17
 1e011c6:    81 70             	r1 = 8			  ## btstack_event.h:3462:16
 1e011c8:    90 08             	r0 = r9			  ## btstack_event.h:3462:16
 1e011ca:    80 f3 78 35       	call 27376 <little_endian_read_16 : 1e07cbe >			  ## btstack_event.h:3462:16
 1e011ce:    01 08             	r1 = r0			  ## btstack_event.h:3462:16
 1e011d0:    c2 ff 8c 37 e1 01 	r2 = 31537036 <update_target_end+0x904 : 1e1378c >			  ## le_gatt_server.c:450:17
 1e011d6:    20 70             	r0 = 2			  ## le_gatt_server.c:450:17
 1e011d8:    13 08             	r3 = r1			  ## le_gatt_server.c:450:17
 1e011da:    80 f3 a6 6f       	call 57164 <log_print : 1e0f12a >			  ## le_gatt_server.c:450:17
 1e011de:    a1 70             	r1 = 10			  ## btstack_event.h:3472:16
 1e011e0:    90 08             	r0 = r9			  ## btstack_event.h:3472:16
 1e011e2:    80 f3 6c 35       	call 27352 <little_endian_read_16 : 1e07cbe >			  ## btstack_event.h:3472:16
 1e011e6:    01 08             	r1 = r0			  ## btstack_event.h:3472:16
 1e011e8:    c2 ff be 37 e1 01 	r2 = 31537086 <update_target_end+0x936 : 1e137be >			  ## le_gatt_server.c:451:17
 1e011ee:    20 70             	r0 = 2			  ## le_gatt_server.c:451:17
 1e011f0:    13 08             	r3 = r1			  ## le_gatt_server.c:451:17
 1e011f2:    80 f3 9a 6f       	call 57140 <log_print : 1e0f12a >			  ## le_gatt_server.c:451:17
 1e011f6:    41 a0             	r1 = sp + 4			  ## le_gatt_server.c:451:17
 1e011f8:    70 70             	r0 = 7			  ## le_gatt_server.c:452:17
 1e011fa:    86 18             	goto 268 <__ble_comm_cbk_packet_handler+0x514 : 1e01308 >			  ## le_gatt_server.c:452:17
 1e011fc:    41 70             	r1 = 4			  ## le_gatt_server.c:457:17
 1e011fe:    90 08             	r0 = r9			  ## le_gatt_server.c:457:17
 1e01200:    80 f3 5d 35       	call 27322 <little_endian_read_16 : 1e07cbe >			  ## le_gatt_server.c:457:17
 1e01204:    01 08             	r1 = r0			  ## le_gatt_server.c:457:17
 1e01206:    20 70             	r0 = 2			  ## le_gatt_server.c:457:17
 1e01208:    13 08             	r3 = r1			  ## le_gatt_server.c:457:17
 1e0120a:    80 f3 8e 6f       	call 57116 <log_print : 1e0f12a >			  ## le_gatt_server.c:457:17
 1e0120e:    c2 ff 1b 38 e1 01 	r2 = 31537179 <update_target_end+0x993 : 1e1381b >			  ## le_gatt_server.c:458:17
 1e01214:    aa 1f             	goto -172 <__ble_comm_cbk_packet_handler+0x376 : 1e0116a >			  ## le_gatt_server.c:458:17
 1e01216:    c2 ff fe 39 e1 01 	r2 = 31537662 <update_target_end+0xB76 : 1e139fe >			  ## le_gatt_server.c:521:21
 1e0121c:    20 70             	r0 = 2			  ## le_gatt_server.c:521:21
 1e0121e:    80 f3 84 6f       	call 57096 <log_print : 1e0f12a >			  ## le_gatt_server.c:521:21
 1e01222:    00 70             	r0 = 0			  ## le_gatt_server.c:522:53
 1e01224:    10 f7 ba 60       	h[r6 + 186] = r0			  ## le_gatt_server.c:522:53
 1e01228:    41 a0             	r1 = sp + 4
 1e0122a:    00 73             	r0 = 48			  ## le_gatt_server.c:524:17
 1e0122c:    42 70             	r2 = 4
 1e0122e:    03 70             	r3 = 0
 1e01230:    6d 18             	goto 218 <__ble_comm_cbk_packet_handler+0x518 : 1e0130c >
 1e01232:    61 64             	r1 = b[r2 + 6] (u)			  ## btstack_event.h:3361:16
 1e01234:    10 70             	r0 = 1
 1e01236:    01 e0 03 0e       	if (r1 == 0) goto -1018 <__ble_comm_cbk_packet_handler+0x4C : 1e00e40 >
 1e0123a:    a8 1e             	goto -688 <__ble_comm_cbk_packet_handler+0x198 : 1e00f8c >
 1e0123c:    c3 ff 5a 38 e1 01 	r3 = 31537242 <update_target_end+0x9D2 : 1e1385a >			  ## le_gatt_server.c:463:17
 1e01242:    c2 ff 64 38 e1 01 	r2 = 31537252 <update_target_end+0x9DC : 1e13864 >			  ## le_gatt_server.c:463:17
 1e01248:    20 70             	r0 = 2			  ## le_gatt_server.c:463:17
 1e0124a:    80 f3 6e 6f       	call 57052 <log_print : 1e0f12a >			  ## le_gatt_server.c:463:17
 1e0124e:    00 f9 06 90       	r0 = b[r9 + 6] (u)			  ## le_gatt_server.c:464:17
 1e01252:    c4 ff e8 5a e1 01 	r4 = 31546088 <server_phy_result : 1e15ae8 >			  ## le_gatt_server.c:464:17
 1e01258:    a3 f6 00 40       	r3 = [r4+r0<<2]			  ## le_gatt_server.c:464:17
 1e0125c:    c2 ff 9e 38 e1 01 	r2 = 31537310 <update_target_end+0xA16 : 1e1389e >			  ## le_gatt_server.c:464:17
 1e01262:    20 70             	r0 = 2			  ## le_gatt_server.c:464:17
 1e01264:    80 f3 61 6f       	call 57026 <log_print : 1e0f12a >			  ## le_gatt_server.c:464:17
 1e01268:    00 f9 07 90       	r0 = b[r9 + 7] (u)			  ## le_gatt_server.c:465:17
 1e0126c:    a3 f6 00 40       	r3 = [r4+r0<<2]			  ## le_gatt_server.c:465:17
 1e01270:    c2 ff c1 38 e1 01 	r2 = 31537345 <update_target_end+0xA39 : 1e138c1 >			  ## le_gatt_server.c:465:17
 1e01276:    20 70             	r0 = 2			  ## le_gatt_server.c:465:17
 1e01278:    80 f3 57 6f       	call 57006 <log_print : 1e0f12a >			  ## le_gatt_server.c:465:17
 1e0127c:    49 18             	goto 146 <__ble_comm_cbk_packet_handler+0x51C : 1e01310 >			  ## le_gatt_server.c:465:17
 1e0127e:    41 70             	r1 = 4			  ## btstack_event.h:3351:16
 1e01280:    90 08             	r0 = r9			  ## btstack_event.h:3351:16
 1e01282:    80 f3 1c 35       	call 27192 <little_endian_read_16 : 1e07cbe >			  ## btstack_event.h:3351:16
 1e01286:    05 08             	r5 = r0			  ## btstack_event.h:3351:16
 1e01288:    95 f5 04 00       	h[sp+4] = r5			  ## le_gatt_server.c:422:28
 1e0128c:    66 15             	call -1332 <ble_vendor_get_peer_rssi : 1e00d5a >			  ## le_gatt_server.c:423:17
 1e0128e:    01 08             	r1 = r0			  ## le_gatt_server.c:423:17
 1e01290:    c2 ff 50 36 e1 01 	r2 = 31536720 <update_target_end+0x7C8 : 1e13650 >			  ## le_gatt_server.c:423:17
 1e01296:    20 70             	r0 = 2			  ## le_gatt_server.c:423:17
 1e01298:    09 02             	[sp] = r1			  ## le_gatt_server.c:423:17
 1e0129a:    53 08             	r3 = r5			  ## le_gatt_server.c:423:17
 1e0129c:    80 f3 45 6f       	call 56970 <log_print : 1e0f12a >			  ## le_gatt_server.c:423:17
 1e012a0:    e1 70             	r1 = 14			  ## btstack_event.h:3391:16
 1e012a2:    90 08             	r0 = r9			  ## btstack_event.h:3391:16
 1e012a4:    80 f3 0b 35       	call 27158 <little_endian_read_16 : 1e07cbe >			  ## btstack_event.h:3391:16
 1e012a8:    01 08             	r1 = r0			  ## btstack_event.h:3391:16
 1e012aa:    c2 ff a7 36 e1 01 	r2 = 31536807 <update_target_end+0x81F : 1e136a7 >			  ## le_gatt_server.c:424:17
 1e012b0:    20 70             	r0 = 2			  ## le_gatt_server.c:424:17
 1e012b2:    13 08             	r3 = r1			  ## le_gatt_server.c:424:17
 1e012b4:    80 f3 39 6f       	call 56946 <log_print : 1e0f12a >			  ## le_gatt_server.c:424:17
 1e012b8:    01 71             	r1 = 16			  ## btstack_event.h:3401:16
 1e012ba:    90 08             	r0 = r9			  ## btstack_event.h:3401:16
 1e012bc:    80 f3 ff 34       	call 27134 <little_endian_read_16 : 1e07cbe >			  ## btstack_event.h:3401:16
 1e012c0:    01 08             	r1 = r0			  ## btstack_event.h:3401:16
 1e012c2:    c2 ff d2 36 e1 01 	r2 = 31536850 <update_target_end+0x84A : 1e136d2 >			  ## le_gatt_server.c:425:17
 1e012c8:    20 70             	r0 = 2			  ## le_gatt_server.c:425:17
 1e012ca:    13 08             	r3 = r1			  ## le_gatt_server.c:425:17
 1e012cc:    80 f3 2d 6f       	call 56922 <log_print : 1e0f12a >			  ## le_gatt_server.c:425:17
 1e012d0:    21 71             	r1 = 18			  ## btstack_event.h:3411:16
 1e012d2:    90 08             	r0 = r9			  ## btstack_event.h:3411:16
 1e012d4:    80 f3 f3 34       	call 27110 <little_endian_read_16 : 1e07cbe >			  ## btstack_event.h:3411:16
 1e012d8:    01 08             	r1 = r0			  ## btstack_event.h:3411:16
 1e012da:    c2 ff fc 36 e1 01 	r2 = 31536892 <update_target_end+0x874 : 1e136fc >			  ## le_gatt_server.c:426:17
 1e012e0:    20 70             	r0 = 2			  ## le_gatt_server.c:426:17
 1e012e2:    13 08             	r3 = r1			  ## le_gatt_server.c:426:17
 1e012e4:    80 f3 21 6f       	call 56898 <log_print : 1e0f12a >			  ## le_gatt_server.c:426:17
 1e012e8:    31 70             	r1 = 3			  ## le_gatt_server.c:438:17
 1e012ea:    50 08             	r0 = r5			  ## le_gatt_server.c:438:17
 1e012ec:    40 15             	call -1408 <ble_comm_dev_set_handle_state : 1e00d6e >			  ## le_gatt_server.c:438:17
 1e012ee:    00 70             	r0 = 0			  ## le_gatt_server.c:438:17
 1e012f0:    10 f9 b9 60       	b[r6 + 185] = r0			  ## le_gatt_server.c:439:48
 1e012f4:    31 70             	r1 = 3			  ## le_gatt_server.c:440:17
 1e012f6:    12 70             	r2 = 1			  ## le_gatt_server.c:440:17
 1e012f8:    50 08             	r0 = r5			  ## le_gatt_server.c:440:17
 1e012fa:    73 14             	call -1818 <__gatt_server_set_work_state : 1e00be2 >			  ## le_gatt_server.c:440:17
 1e012fc:    00 70             	r0 = 0			  ## le_gatt_server.c:441:17
 1e012fe:    21 70             	r1 = 2			  ## le_gatt_server.c:441:17
 1e01300:    02 70             	r2 = 0			  ## le_gatt_server.c:441:17
 1e01302:    6f 14             	call -1826 <__gatt_server_set_work_state : 1e00be2 >			  ## le_gatt_server.c:441:17
 1e01304:    41 a0             	r1 = sp + 4			  ## le_gatt_server.c:441:17
 1e01306:    10 70             	r0 = 1			  ## le_gatt_server.c:442:17
 1e01308:    22 70             	r2 = 2
 1e0130a:    93 08             	r3 = r9
 1e0130c:    bf f3 70 fb       	call -2336 <__gatt_server_event_callback_handler : 1e009f0 >
 1e01310:    06 0a             	sp += 12
 1e01312:    5a 01             	{pc, r10-r4} = [sp++]			  ## le_gatt_common.c:657:1
 1e01314:    c2 ff 21 36 e1 01 	r2 = 31536673 <update_target_end+0x799 : 1e13621 >			  ## le_gatt_server.c:413:25
 1e0131a:    20 70             	r0 = 2			  ## le_gatt_server.c:413:25
 1e0131c:    80 f3 05 6f       	call 56842 <log_print : 1e0f12a >			  ## le_gatt_server.c:413:25
 1e01320:    00 70             	r0 = 0			  ## le_gatt_server.c:414:25
 1e01322:    21 70             	r1 = 2			  ## le_gatt_server.c:414:25
 1e01324:    12 70             	r2 = 1			  ## le_gatt_server.c:414:25
 1e01326:    5d 14             	call -1862 <__gatt_server_set_work_state : 1e00be2 >			  ## le_gatt_server.c:414:25
 1e01328:    41 a0             	r1 = sp + 4			  ## le_gatt_server.c:414:25
 1e0132a:    30 70             	r0 = 3			  ## le_gatt_server.c:415:25
 1e0132c:    22 70             	r2 = 2
 1e0132e:    93 08             	r3 = r9
 1e01330:    bf f3 5e fb       	call -2372 <__gatt_server_event_callback_handler : 1e009f0 >
 1e01334:    05 15             	call -1526 <__gatt_server_check_auto_adv : 1e00d40 >
 1e01336:    ec 1f             	goto -40 <__ble_comm_cbk_packet_handler+0x51C : 1e01310 >
 1e01338:    06 70             	r6 = 0			  ## le_gatt_common.c:559:25
 1e0133a:    13 70             	r3 = 1			  ## le_gatt_common.c:559:25
 1e0133c:    01 2e             	if (r7 == 0) goto 2 <__ble_comm_cbk_packet_handler+0x54C : 1e01340 >			  ## le_gatt_common.c:559:25
 1e0133e:    03 70             	r3 = 0			  ## le_gatt_common.c:559:25
 1e01340:    c2 ff ce 31 e1 01 	r2 = 31535566 <update_target_end+0x346 : 1e131ce >			  ## le_gatt_common.c:569:25
 1e01346:    20 70             	r0 = 2			  ## le_gatt_common.c:569:25
 1e01348:    80 f3 ef 6e       	call 56798 <log_print : 1e0f12a >			  ## le_gatt_common.c:569:25
 1e0134c:    f0 71             	r0 = 31			  ## le_gatt_common.c:571:25
 1e0134e:    21 70             	r1 = 2			  ## le_gatt_common.c:571:25
 1e01350:    33 71             	r3 = 19			  ## le_gatt_common.c:571:25
 1e01352:    82 08             	r2 = r8			  ## le_gatt_common.c:571:25
 1e01354:    80 f3 91 36       	call 27938 <ble_user_cmd_prepare : 1e0807a >			  ## le_gatt_common.c:571:25
 1e01358:    4e 68             	b[r4 + 4] = r6			  ## le_gatt_common.c:572:25
 1e0135a:    19 1e             	goto -974 <__ble_comm_cbk_packet_handler+0x19A : 1e00f8e >			  ## le_gatt_common.c:572:25


norflash_origin_read:
 1e0135c:    d0 f3 4e 12       	goto 2106524 <_norflash_read : 37fc >			  ## vm_sfc.c:890:0


doe:
 1e01360:    76 01             	[--sp] = {rets, r6-r4}			  ## encryption.c:68:0
 1e01362:    02 26             	if (r3 == 0) goto 4 <doe+0x8 : 1e01368 >			  ## encryption.c:68:0
 1e01364:    9b d0             	r3 = r3 >> 2			  ## encryption.c:70:19
 1e01366:    d0 b6             	r0 ^= r3			  ## encryption.c:70:25
 1e01368:    03 62             	r3 = b[r1 + 0] (u)
 1e0136a:    d3 b0             	r3 ^= r0
 1e0136c:    f2 8f             	r2 += -1			  ## encryption.c:75:12
 1e0136e:    93 f9 01 10       	b[r1 ++= 1] = r3
 1e01372:    1a 24             	if (r2 == 0) goto 52 <doe+0x48 : 1e013a8 >
 1e01374:    03 fb de ef       	r3 = -4130 <bank_code_load_addr+0x1DB9E6 : 1ffefde >
 1e01378:    44 c0             	r4 = r0 << 1			  ## encryption.c:57:24
 1e0137a:    54 b7             	r4 &= r3			  ## encryption.c:58:19
 1e0137c:    20 04             	r0 = r0.l (u)			  ## encryption.c:55:33
 1e0137e:    c5 d3             	r5 = r0 >> 15			  ## encryption.c:55:33
 1e01380:    54 ba             	r4 |= r5			  ## encryption.c:58:19
 1e01382:    c6 d2             	r6 = r0 >> 11			  ## encryption.c:58:31
 1e01384:    d6 ba             	r6 ^= r5			  ## encryption.c:58:35
 1e01386:    36 c3             	r6 = r6 << 12			  ## encryption.c:58:19
 1e01388:    26 fd 10 6a       	r6 = r6 & 4096			  ## encryption.c:58:19
 1e0138c:    54 bc             	r4 |= r6			  ## encryption.c:59:18
 1e0138e:    00 d1             	r0 = r0 >> 4			  ## encryption.c:59:29
 1e01390:    d0 ba             	r0 ^= r5			  ## encryption.c:59:32
 1e01392:    05 62             	r5 = b[r1 + 0] (u)			  ## encryption.c:59:32
 1e01394:    40 c1             	r0 = r0 << 5			  ## encryption.c:59:18
 1e01396:    20 fd 20 09       	r0 = r0 & 32			  ## encryption.c:59:18
 1e0139a:    50 b8             	r0 |= r4			  ## encryption.c:60:18
 1e0139c:    e1 fd 00 45       	r4 = r5 ^ r0			  ## encryption.c:60:18
 1e013a0:    f2 8f             	r2 += -1			  ## encryption.c:75:12
 1e013a2:    94 f9 01 10       	b[r1 ++= 1] = r4
 1e013a6:    e8 35             	if (r2 != 0) goto -48 <doe+0x18 : 1e01378 >
 1e013a8:    56 01             	{pc, r6-r4} = [sp++]			  ## encryption.c:78:1


CRC16:
 1e013aa:    77 01             	[--sp] = {rets, r7-r4}			  ## crc16.c:21:0
 1e013ac:    15 08             	r5 = r1			  ## crc16.c:21:0
 1e013ae:    06 08             	r6 = r0			  ## crc16.c:21:0
 1e013b0:    c4 ff 7c 1d 00 00 	r4 = 7548 <mutex : 1d7c >			  ## crc16.c:21:0
 1e013b6:    01 70             	r1 = 0			  ## crc16.c:25:5
 1e013b8:    07 70             	r7 = 0			  ## crc16.c:25:5
 1e013ba:    40 08             	r0 = r4			  ## crc16.c:25:5
 1e013bc:    98 f3 32 2d       	call 3168868 <os_mutex_pend : 106e24 >			  ## crc16.c:25:5
 1e013c0:    c0 ff 00 35 1e 00 	r0 = 1979648 <uECC_vli_cmp_unsafe+0xDC504 : 1e3500 >			  ## crc16.c:25:5
 1e013c6:    1f 40             	[r0 + 4] = r7			  ## crc16.c:27:17
 1e013c8:    05 2a             	if (r5 == 0) goto 10 <CRC16+0x2A : 1e013d4 >			  ## crc16.c:27:17
 1e013ca:    81 f9 01 60       	r1 = b[r6 ++= 1] (u)			  ## crc16.c:29:24
 1e013ce:    f5 8f             	r5 += -1			  ## crc16.c:28:15
 1e013d0:    09 40             	[r0 + 0] = r1			  ## crc16.c:29:22
 1e013d2:    fb 3b             	if (r5 != 0) goto -10 <CRC16+0x20 : 1e013ca >
 1e013d4:    08 00             	csync			  ## crc16.c:31:5
 1e013d6:    15 40             	r5 = [r0 + 4]			  ## crc16.c:32:19
 1e013d8:    40 08             	r0 = r4			  ## crc16.c:35:5
 1e013da:    98 f3 25 2d       	call 3168842 <os_mutex_post : 106e28 >			  ## crc16.c:35:5
 1e013de:    60 05             	r0 = r5.l (u)			  ## crc16.c:37:5
 1e013e0:    57 01             	{pc, r7-r4} = [sp++]			  ## crc16.c:37:5


norflash_read:
 1e013e2:    77 01             	[--sp] = {rets, r7-r4}			  ## vm_sfc.c:956:0
 1e013e4:    c3 ff a0 22 00 00 	r3 = 8864 <_sdfile_handl : 22a0 >			  ## vm_sfc.c:956:0
 1e013ea:    07 f6 00 31       	r7 = [r3 + 256]			  ## vm_sfc.c:959:33
 1e013ee:    26 08             	r6 = r2			  ## vm_sfc.c:959:33
 1e013f0:    14 08             	r4 = r1			  ## vm_sfc.c:959:33
 1e013f2:    05 08             	r5 = r0			  ## vm_sfc.c:959:33
 1e013f4:    67 f2 16 90       	if (r7 <= r6) goto 44 <norflash_read+0x42 : 1e01424 >			  ## vm_sfc.c:959:9
 1e013f8:    37 fc 08 01       	r7 = r3 + 264			  ## vm_sfc.c:960:9
 1e013fc:    f1 07             	r1 = -1			  ## vm_sfc.c:960:9
 1e013fe:    70 08             	r0 = r7			  ## vm_sfc.c:960:9
 1e01400:    98 f3 10 2d       	call 3168800 <os_mutex_pend : 106e24 >			  ## vm_sfc.c:960:9
 1e01404:    50 08             	r0 = r5			  ## vm_sfc.c:961:9
 1e01406:    61 08             	r1 = r6			  ## vm_sfc.c:961:9
 1e01408:    42 08             	r2 = r4			  ## vm_sfc.c:961:9
 1e0140a:    90 f3 f7 11       	call 2106350 <_norflash_read : 37fc >			  ## vm_sfc.c:961:9
 1e0140e:    c0 ff ff ff 00 00 	r0 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## vm_sfc.c:962:9
 1e01414:    03 70             	r3 = 0			  ## vm_sfc.c:962:9
 1e01416:    51 08             	r1 = r5			  ## vm_sfc.c:962:9
 1e01418:    42 08             	r2 = r4			  ## vm_sfc.c:962:9
 1e0141a:    a2 17             	call -188 <doe : 1e01360 >			  ## vm_sfc.c:962:9
 1e0141c:    70 08             	r0 = r7			  ## vm_sfc.c:963:9
 1e0141e:    98 f3 03 2d       	call 3168774 <os_mutex_post : 106e28 >			  ## vm_sfc.c:963:9
 1e01422:    08 18             	goto 16 <norflash_read+0x52 : 1e01434 >			  ## vm_sfc.c:963:9
 1e01424:    60 08             	r0 = r6			  ## vm_sfc.c:965:35
 1e01426:    90 f3 0d 12       	call 2106394 <flash_addr2cpu_addr : 3844 >			  ## vm_sfc.c:965:35
 1e0142a:    01 08             	r1 = r0			  ## vm_sfc.c:965:35
 1e0142c:    50 08             	r0 = r5			  ## vm_sfc.c:965:9
 1e0142e:    42 08             	r2 = r4			  ## vm_sfc.c:965:9
 1e01430:    98 f3 58 2d       	call 3168944 <memcpy : 106ee4 >			  ## vm_sfc.c:965:9
 1e01434:    40 08             	r0 = r4			  ## vm_sfc.c:968:5
 1e01436:    57 01             	{pc, r7-r4} = [sp++]			  ## vm_sfc.c:968:5


jl_file_head_valid_check:
 1e01438:    74 01             	[--sp] = {rets, r4}			  ## flash_fs_api.c:36:0
 1e0143a:    04 08             	r4 = r0			  ## flash_fs_api.c:36:0
 1e0143c:    0a 28             	if (r4 == 0) goto 20 <jl_file_head_valid_check+0x1A : 1e01452 >			  ## flash_fs_api.c:39:9
 1e0143e:    20 98             	r0 = r4 + 2			  ## flash_fs_api.c:44:42
 1e01440:    e1 71             	r1 = 30			  ## flash_fs_api.c:44:20
 1e01442:    b3 17             	call -154 <CRC16 : 1e013aa >			  ## flash_fs_api.c:44:20
 1e01444:    02 58             	r2 = h[r4 + 0] (u)			  ## flash_fs_api.c:45:15
 1e01446:    01 08             	r1 = r0			  ## flash_fs_api.c:44:20
 1e01448:    f0 07             	r0 = -1			  ## flash_fs_api.c:45:9
 1e0144a:    12 f2 01 10       	if (r2 != r1) goto 2 <jl_file_head_valid_check+0x18 : 1e01450 >
 1e0144e:    00 70             	r0 = 0
 1e01450:    54 01             	{pc, r4} = [sp++]			  ## flash_fs_api.c:45:9
 1e01452:    e0 07             	r0 = -2			  ## flash_fs_api.c:51:5
 1e01454:    54 01             	{pc, r4} = [sp++]			  ## flash_fs_api.c:51:5


norflash_ioctl:
 1e01456:    78 01             	[--sp] = {rets, r8-r4}			  ## vm_sfc.c:1384:0
 1e01458:    16 08             	r6 = r1			  ## vm_sfc.c:1384:0
 1e0145a:    07 08             	r7 = r0			  ## vm_sfc.c:1384:0
 1e0145c:    c8 ff a0 22 00 00 	r8 = 8864 <_sdfile_handl : 22a0 >			  ## vm_sfc.c:1384:0
 1e01462:    84 fc 08 01       	r4 = r8 + 264			  ## vm_sfc.c:1385:5
 1e01466:    f1 07             	r1 = -1			  ## vm_sfc.c:1385:5
 1e01468:    40 08             	r0 = r4			  ## vm_sfc.c:1385:5
 1e0146a:    98 f3 db 2c       	call 3168694 <os_mutex_pend : 106e24 >			  ## vm_sfc.c:1385:5
 1e0146e:    05 70             	r5 = 0
 1e01470:    0c ff ca 70 19 00 	ifs (r7 > 202) goto 50 <.GJTIE128_0_0_+0x24 : 1e014a8 >			  ## vm_sfc.c:1388:5
 1e01476:    70 fc 9c ff       	r0 = r7 + -100
 1e0147a:    30 e0 21 80       	if (r0 > 3) goto 66 <.GJTIE128_0_0_+0x3C : 1e014c0 >
 1e0147e:    a0 00             	tbb [r0]


.GJTIS128_0_0_:
 1e01480:    02     < 2 : 0x2 >
 1e01481:    37     < 55 : 0x37 >
 1e01482:    3a     < 58 : 0x3A >
 1e01483:    3d     < 61 : 0x3D >
 1e01484:    00 f6 ec 80       	r0 = [r8 + 236]			  ## vm_sfc.c:1405:24
 1e01488:    77 30             	if (r0 != 0) goto 238 <.GJTIE128_0_0_+0xF4 : 1e01578 >			  ## vm_sfc.c:1405:24
 1e0148a:    90 f3 1b 12       	call 2106422 <read_flash_id : 38c4 >			  ## vm_sfc.c:1406:13
 1e0148e:    00 f6 ec 80       	r0 = [r8 + 236]			  ## vm_sfc.c:1407:66
 1e01492:    01 04             	r1 = r0.b0 (u)			  ## vm_sfc.c:1407:75
 1e01494:    01 8f             	r1 += -16			  ## vm_sfc.c:1407:83
 1e01496:    11 e0 66 b0       	ifs (r1 < 1) goto 204 <.GJTIE128_0_0_+0xE2 : 1e01566 >
 1e0149a:    13 70             	r3 = 1
 1e0149c:    32 08             	r2 = r3
 1e0149e:    53 c0             	r3 = r2 << 1			  ## vm_sfc.c:1355:16
 1e014a0:    51 f3 fc ff       	if (--r1 != 0) goto -8 <.GJTIE128_0_0_+0x18 : 1e0149c >			  ## vm_sfc.c:1354:5
 1e014a4:    51 c4             	r1 = r2 << 17			  ## vm_sfc.c:1407:91
 1e014a6:    61 18             	goto 194 <.GJTIE128_0_0_+0xE6 : 1e0156a >			  ## vm_sfc.c:1407:91
 1e014a8:    c0 ff 00 56 04 40 	r0 = 1074025984 <text_size+0x24750 : 45600 >
 1e014ae:    07 f2 11 c0       	ifs (r7 > r0) goto 34 <.GJTIE128_0_0_+0x50 : 1e014d4 >
 1e014b2:    00 ff cb 70 61 00 	if (r7 == 203) goto 194 <.GJTIE128_0_0_+0xF6 : 1e0157a >
 1e014b8:    00 ff cc 70 05 00 	if (r7 == 204) goto 10 <.GJTIE128_0_0_+0x44 : 1e014c8 >
 1e014be:    51 18             	goto 162 <.GJTIE128_0_0_+0xDE : 1e01562 >
 1e014c0:    70 fc 38 ff       	r0 = r7 + -200
 1e014c4:    20 e0 4d 20       	if (r0 >= 2) goto 154 <.GJTIE128_0_0_+0xDE : 1e01562 >
 1e014c8:    70 08             	r0 = r7			  ## vm_sfc.c:1415:15
 1e014ca:    61 08             	r1 = r6			  ## vm_sfc.c:1415:15
 1e014cc:    90 f3 a1 12       	call 2106690 <norflash_erase : 3a12 >			  ## vm_sfc.c:1415:15
 1e014d0:    05 08             	r5 = r0			  ## vm_sfc.c:1415:15
 1e014d2:    53 18             	goto 166 <.GJTIE128_0_0_+0xF6 : 1e0157a >
 1e014d4:    10 80             	r0 += 1
 1e014d6:    07 f2 21 00       	if (r7 == r0) goto 66 <.GJTIE128_0_0_+0x98 : 1e0151c >
 1e014da:    10 80             	r0 += 1
 1e014dc:    07 f2 41 10       	if (r7 != r0) goto 130 <.GJTIE128_0_0_+0xDE : 1e01562 >
 1e014e0:    81 fc f0 00       	r1 = r8 + 240			  ## vm_sfc.c:1432:9
 1e014e4:    02 71             	r2 = 16			  ## vm_sfc.c:1432:9
 1e014e6:    60 08             	r0 = r6			  ## vm_sfc.c:1432:9
 1e014e8:    98 f3 fc 2c       	call 3168760 <memcpy : 106ee4 >			  ## vm_sfc.c:1432:9
 1e014ec:    46 18             	goto 140 <.GJTIE128_0_0_+0xF6 : 1e0157a >			  ## vm_sfc.c:1432:9
 1e014ee:    c0 f4 01 6a       	[r6 + 0] = 256			  ## vm_sfc.c:1390:23
 1e014f2:    43 18             	goto 134 <.GJTIE128_0_0_+0xF6 : 1e0157a >			  ## vm_sfc.c:1390:23
 1e014f4:    c0 f4 01 6b       	[r6 + 0] = 65536			  ## vm_sfc.c:1393:23
 1e014f8:    40 18             	goto 128 <.GJTIE128_0_0_+0xF6 : 1e0157a >			  ## vm_sfc.c:1393:23
 1e014fa:    00 f6 e8 80       	r0 = [r8 + 232]			  ## vm_sfc.c:1397:24
 1e014fe:    3c 30             	if (r0 != 0) goto 120 <.GJTIE128_0_0_+0xF4 : 1e01578 >			  ## vm_sfc.c:1397:24
 1e01500:    90 f3 e0 11       	call 2106304 <read_flash_id : 38c4 >			  ## vm_sfc.c:1398:13
 1e01504:    00 f9 ec 80       	r0 = b[r8 + 236] (u)			  ## vm_sfc.c:1399:66
 1e01508:    00 8f             	r0 += -16			  ## vm_sfc.c:1399:83
 1e0150a:    10 e0 31 b0       	ifs (r0 < 1) goto 98 <.GJTIE128_0_0_+0xEC : 1e01570 >
 1e0150e:    12 70             	r2 = 1
 1e01510:    21 08             	r1 = r2
 1e01512:    4a c0             	r2 = r1 << 1			  ## vm_sfc.c:1355:16
 1e01514:    50 f3 fc ff       	if (--r0 != 0) goto -8 <.GJTIE128_0_0_+0x8C : 1e01510 >			  ## vm_sfc.c:1354:5
 1e01518:    48 c4             	r0 = r1 << 17			  ## vm_sfc.c:1399:91
 1e0151a:    2c 18             	goto 88 <.GJTIE128_0_0_+0xF0 : 1e01574 >			  ## vm_sfc.c:1399:91
 1e0151c:    02 3c             	if (r6 != 0) goto 4 <.GJTIE128_0_0_+0x9E : 1e01522 >
 1e0151e:    90 f3 5f 0f       	call 2105022 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e01522:    87 fc e4 00       	r7 = r8 + 228
 1e01526:    c0 9e             	r0 = r7 + 12			  ## vm_sfc.c:1366:5
 1e01528:    02 71             	r2 = 16			  ## vm_sfc.c:1366:5
 1e0152a:    61 08             	r1 = r6			  ## vm_sfc.c:1366:5
 1e0152c:    98 f3 da 2c       	call 3168692 <memcpy : 106ee4 >			  ## vm_sfc.c:1366:5
 1e01530:    50 4c             	r0 = [r6 + 20]			  ## vm_sfc.c:1367:5
 1e01532:    41 4c             	r1 = [r6 + 16]			  ## vm_sfc.c:1367:5
 1e01534:    88 4e             	[r7 + 32] = r0			  ## vm_sfc.c:1367:5
 1e01536:    79 4e             	[r7 + 28] = r1			  ## vm_sfc.c:1367:5
 1e01538:    60 4c             	r0 = [r6 + 24]			  ## vm_sfc.c:1369:35
 1e0153a:    08 4e             	[r7 + 0] = r0			  ## vm_sfc.c:1369:27
 1e0153c:    43 4e             	r3 = [r7 + 16]			  ## vm_sfc.c:1371:60
 1e0153e:    30 08             	r0 = r3			  ## vm_sfc.c:1371:26
 1e01540:    90 f3 80 11       	call 2106112 <flash_addr2cpu_addr : 3844 >			  ## vm_sfc.c:1371:26
 1e01544:    c1 ff 14 02 1f 00 	r1 = 2032148 <uECC_vli_cmp_unsafe+0xE9218 : 1f0214 >			  ## vm_sfc.c:1371:26
 1e0154a:    38 42             	[r1 + 12] = r0			  ## vm_sfc.c:1371:24
 1e0154c:    c0 ff ff ff ff 01 	r0 = 33554431 <bank_code_load_addr+0x1DCA07 : 1ffffff >			  ## vm_sfc.c:1372:24
 1e01552:    28 42             	[r1 + 8] = r0			  ## vm_sfc.c:1372:24
 1e01554:    00 f4 02 19       	[r1 + 0] |= 2			  ## vm_sfc.c:1377:21
 1e01558:    01 72             	r1 = 32			  ## vm_sfc.c:1379:5
 1e0155a:    30 08             	r0 = r3			  ## vm_sfc.c:1379:5
 1e0155c:    90 f3 c3 12       	call 2106758 <flushinv_dcache_api : 3ae6 >			  ## vm_sfc.c:1379:5
 1e01560:    0c 18             	goto 24 <.GJTIE128_0_0_+0xF6 : 1e0157a >			  ## vm_sfc.c:1379:5
 1e01562:    75 06             	r5 = -25
 1e01564:    0a 18             	goto 20 <.GJTIE128_0_0_+0xF6 : 1e0157a >
 1e01566:    20 fb 01 1b       	r1 = 65536
 1e0156a:    11 f6 e8 80       	[r8 + 232] = r1			  ## vm_sfc.c:1407:39
 1e0156e:    04 18             	goto 8 <.GJTIE128_0_0_+0xF4 : 1e01578 >			  ## vm_sfc.c:1407:39
 1e01570:    20 fb 01 0b       	r0 = 65536
 1e01574:    10 f6 e8 80       	[r8 + 232] = r0			  ## vm_sfc.c:1399:39
 1e01578:    08 4c             	[r6 + 0] = r0
 1e0157a:    40 08             	r0 = r4			  ## vm_sfc.c:1440:5
 1e0157c:    98 f3 54 2c       	call 3168424 <os_mutex_post : 106e28 >			  ## vm_sfc.c:1440:5
 1e01580:    50 08             	r0 = r5			  ## vm_sfc.c:1441:5
 1e01582:    58 01             	{pc, r8-r4} = [sp++]			  ## vm_sfc.c:1441:5


__jl_fs_sector_align:
 1e01584:    34 00             	[--sp] = rets			  ## flash_fs_api.c:619:0
 1e01586:    c1 ff b0 20 00 00 	r1 = 8368 <gatt_client_conn_handle : 20b0 >			  ## flash_fs_api.c:619:0
 1e0158c:    a3 63             	r3 = b[r1 + 26] (u)			  ## flash_fs_api.c:619:0
 1e0158e:    02 08             	r2 = r0			  ## flash_fs_api.c:619:0
 1e01590:    02 36             	if (r3 != 0) goto 4 <__jl_fs_sector_align+0x12 : 1e01596 >			  ## flash_fs_api.c:619:0
 1e01592:    90 f3 25 0f       	call 2104906 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e01596:    10 70             	r0 = 1			  ## flash_fs_api.c:624:9
 1e01598:    03 e1 01 00       	if (r3 == 16) goto 2 <__jl_fs_sector_align+0x1A : 1e0159e >			  ## flash_fs_api.c:624:9
 1e0159c:    00 70             	r0 = 0			  ## flash_fs_api.c:624:9
 1e0159e:    01 c3             	r1 = r0 << 12			  ## flash_fs_api.c:624:9
 1e015a0:    00 fb 00 01       	r0 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## flash_fs_api.c:624:9
 1e015a4:    13 e0 01 00       	if (r3 == 1) goto 2 <__jl_fs_sector_align+0x26 : 1e015aa >			  ## flash_fs_api.c:624:9
 1e015a8:    10 08             	r0 = r1			  ## flash_fs_api.c:624:9
 1e015aa:    06 20             	if (r0 == 0) goto 12 <__jl_fs_sector_align+0x34 : 1e015b8 >
 1e015ac:    01 b4             	r1 = r2 + r0			  ## flash_fs_api.c:633:27
 1e015ae:    f1 8f             	r1 += -1			  ## flash_fs_api.c:633:41
 1e015b0:    60 fb 00 09       	r0 = 0 - r0			  ## flash_fs_api.c:633:61
 1e015b4:    e2 fd 00 21       	r2 = r1 & r0			  ## flash_fs_api.c:633:61
 1e015b8:    20 08             	r0 = r2			  ## flash_fs_api.c:638:5
 1e015ba:    30 00             	pc = [sp++]			  ## flash_fs_api.c:638:5


clr_wdt:
 1e015bc:    c0 ff 88 1f 1a 00 	r0 = 1712008 <uECC_vli_cmp_unsafe+0x9AF8C : 1a1f88 >			  ## wdt.c:34:0
 1e015c2:    01 60             	r1 = b[r0 + 0] (u)			  ## wdt.c:30:18
 1e015c4:    11 b3             	r1 |= 64			  ## wdt.c:30:18
 1e015c6:    09 60             	b[r0 + 0] = r1			  ## wdt.c:30:18
 1e015c8:    20 00             	rts			  ## wdt.c:36:1


sfc_erase:
 1e015ca:    34 00             	[--sp] = rets			  ## vm.c:1430:0
 1e015cc:    02 fc ff ff       	r2 = r0 + -1			  ## vm.c:1436:9
 1e015d0:    00 70             	r0 = 0			  ## vm.c:1436:9
 1e015d2:    22 e0 0d 80       	if (r2 > 2) goto 26 <sfc_erase+0x26 : 1e015f0 >
 1e015d6:    c0 ff 54 64 e1 01 	r0 = 31548500 <PD_map_tbl+0x11 : 1e16454 >			  ## vm.c:1436:9
 1e015dc:    c3 ff 48 64 e1 01 	r3 = 31548488 <PD_map_tbl+0x5 : 1e16448 >			  ## vm.c:1436:9
 1e015e2:    a3 f6 00 32       	r3 = [r3+r2<<2]			  ## vm.c:1436:9
 1e015e6:    a0 f6 00 02       	r0 = [r0+r2<<2]			  ## vm.c:1436:9
 1e015ea:    51 b7             	r1 &= r3
 1e015ec:    34 17             	call -408 <norflash_ioctl : 1e01456 >			  ## vm.c:1458:5
 1e015ee:    10 70             	r0 = 1
 1e015f0:    30 00             	pc = [sp++]			  ## vm.c:1461:1


flash_erase_by_blcok_n_sector:
 1e015f2:    7a 01             	[--sp] = {rets, r10-r4}			  ## flash_fs_api.c:150:0
 1e015f4:    15 08             	r5 = r1			  ## flash_fs_api.c:150:0
 1e015f6:    04 08             	r4 = r0			  ## flash_fs_api.c:150:0
 1e015f8:    84 fd 60 84       	r8 = uextra(r4, p:12, l:4)			  ## flash_fs_api.c:157:41
 1e015fc:    03 ff 00 51 20 00 	if (r5 < 256) goto 64 <flash_erase_by_blcok_n_sector+0x50 : 1e01642 >
 1e01602:    84 fd 40 04       	r0 = uextra(r4, p:8, l:4)			  ## flash_fs_api.c:163:39
 1e01606:    1d 20             	if (r0 == 0) goto 58 <flash_erase_by_blcok_n_sector+0x50 : 1e01642 >
 1e01608:    69 fb 10 09       	r9 = 16 - r0			  ## flash_fs_api.c:166:44
 1e0160c:    09 e0 18 00       	if (r9 == 0) goto 48 <flash_erase_by_blcok_n_sector+0x4E : 1e01640 >
 1e01610:    07 70             	r7 = 0
 1e01612:    46 08             	r6 = r4
 1e01614:    54 08             	r4 = r5
 1e01616:    d2 17             	call -92 <clr_wdt : 1e015bc >			  ## flash_fs_api.c:172:13
 1e01618:    30 70             	r0 = 3			  ## flash_fs_api.c:174:17
 1e0161a:    61 08             	r1 = r6			  ## flash_fs_api.c:174:17
 1e0161c:    d6 17             	call -84 <sfc_erase : 1e015ca >			  ## flash_fs_api.c:174:17
 1e0161e:    45 fc 00 ff       	r5 = r4 + -256			  ## flash_fs_api.c:177:50
 1e01622:    50 08             	r0 = r5			  ## flash_fs_api.c:177:19
 1e01624:    f4 ef 01 80       	if (r4 > 255) goto 2 <flash_erase_by_blcok_n_sector+0x38 : 1e0162a >			  ## flash_fs_api.c:177:19
 1e01628:    00 70             	r0 = 0			  ## flash_fs_api.c:177:19
 1e0162a:    f0 ef 06 90       	if (r0 <= 255) goto 12 <flash_erase_by_blcok_n_sector+0x48 : 1e0163a >
 1e0162e:    17 80             	r7 += 1			  ## flash_fs_api.c:171:42
 1e01630:    64 fc 00 01       	r4 = r6 + 256			  ## flash_fs_api.c:176:24
 1e01634:    50 08             	r0 = r5
 1e01636:    97 f2 ec 3f       	if (r7 < r9) goto -40 <flash_erase_by_blcok_n_sector+0x20 : 1e01612 >
 1e0163a:    64 fc 00 01       	r4 = r6 + 256			  ## flash_fs_api.c:149:56
 1e0163e:    05 08             	r5 = r0			  ## flash_fs_api.c:149:56
 1e01640:    18 80             	r8 += 1			  ## flash_fs_api.c:183:25
 1e01642:    08 e0 1f 00       	if (r8 == 0) goto 62 <flash_erase_by_blcok_n_sector+0x92 : 1e01684 >
 1e01646:    23 ff 10 5a 1c 00 	if (r5 < 4096) goto 56 <flash_erase_by_blcok_n_sector+0x92 : 1e01684 >
 1e0164c:    68 fb 10 89       	r8 = 16 - r8			  ## flash_fs_api.c:189:48
 1e01650:    08 e0 18 00       	if (r8 == 0) goto 48 <flash_erase_by_blcok_n_sector+0x92 : 1e01684 >
 1e01654:    50 fc 00 f0       	r0 = r5 + -4096			  ## flash_fs_api.c:196:13
 1e01658:    07 70             	r7 = 0			  ## flash_fs_api.c:196:13
 1e0165a:    46 08             	r6 = r4
 1e0165c:    05 08             	r5 = r0
 1e0165e:    ae 17             	call -164 <clr_wdt : 1e015bc >			  ## flash_fs_api.c:196:13
 1e01660:    20 70             	r0 = 2			  ## flash_fs_api.c:198:17
 1e01662:    61 08             	r1 = r6			  ## flash_fs_api.c:198:17
 1e01664:    b2 17             	call -156 <sfc_erase : 1e015ca >			  ## flash_fs_api.c:198:17
 1e01666:    23 ff 10 5a 0a 00 	if (r5 < 4096) goto 20 <flash_erase_by_blcok_n_sector+0x8E : 1e01680 >			  ## flash_fs_api.c:198:17
 1e0166c:    64 fc 00 10       	r4 = r6 + 4096			  ## flash_fs_api.c:200:24
 1e01670:    10 70             	r0 = 1			  ## flash_fs_api.c:205:13
 1e01672:    98 f3 a1 2b       	call 3168066 <os_time_dly : 106db8 >			  ## flash_fs_api.c:205:13
 1e01676:    17 80             	r7 += 1			  ## flash_fs_api.c:195:44
 1e01678:    50 fc 00 f0       	r0 = r5 + -4096			  ## flash_fs_api.c:195:23
 1e0167c:    87 f2 ed 3f       	if (r7 < r8) goto -38 <flash_erase_by_blcok_n_sector+0x68 : 1e0165a >			  ## flash_fs_api.c:195:23
 1e01680:    64 fc 00 10       	r4 = r6 + 4096			  ## flash_fs_api.c:149:56
 1e01684:    19 70             	r9 = 1			  ## flash_fs_api.c:135:9
 1e01686:    61 ff ff 59 01 00 	if ((r5 & 255) != 0) goto 2 <flash_erase_by_blcok_n_sector+0x9C : 1e0168e >			  ## flash_fs_api.c:135:9
 1e0168c:    09 70             	r9 = 0			  ## flash_fs_api.c:135:9
 1e0168e:    84 fd 40 85       	r8 = uextra(r5, p:8, l:4)			  ## flash_fs_api.c:134:30
 1e01692:    2f d4             	r7 = r5 >> 16			  ## flash_fs_api.c:124:22
 1e01694:    84 fd 60 a5       	r10 = uextra(r5, p:12, l:4)			  ## flash_fs_api.c:126:32
 1e01698:    12 2e             	if (r7 == 0) goto 36 <flash_erase_by_blcok_n_sector+0xCC : 1e016be >
 1e0169a:    06 70             	r6 = 0
 1e0169c:    45 08             	r5 = r4
 1e0169e:    8e 17             	call -228 <clr_wdt : 1e015bc >			  ## flash_fs_api.c:221:9
 1e016a0:    10 70             	r0 = 1			  ## flash_fs_api.c:223:13
 1e016a2:    51 08             	r1 = r5			  ## flash_fs_api.c:223:13
 1e016a4:    92 17             	call -220 <sfc_erase : 1e015ca >			  ## flash_fs_api.c:223:13
 1e016a6:    16 80             	r6 += 1			  ## flash_fs_api.c:226:15
 1e016a8:    76 f2 03 20       	if (r6 >= r7) goto 6 <flash_erase_by_blcok_n_sector+0xC0 : 1e016b2 >
 1e016ac:    10 70             	r0 = 1			  ## flash_fs_api.c:227:13
 1e016ae:    98 f3 83 2b       	call 3168006 <os_time_dly : 106db8 >			  ## flash_fs_api.c:227:13
 1e016b2:    45 fb 01 5b       	r5 = r5 + 65536			  ## flash_fs_api.c:225:20
 1e016b6:    67 f2 f2 1f       	if (r7 != r6) goto -28 <flash_erase_by_blcok_n_sector+0xAC : 1e0169e >
 1e016ba:    38 c4             	r0 = r7 << 16			  ## flash_fs_api.c:220:5
 1e016bc:    04 09             	r4 += r0			  ## flash_fs_api.c:220:5
 1e016be:    80 fb 80 79       	r7 = r9 + r8			  ## flash_fs_api.c:135:9
 1e016c2:    0a e0 13 00       	if (r10 == 0) goto 38 <flash_erase_by_blcok_n_sector+0xFA : 1e016ec >
 1e016c6:    06 70             	r6 = 0
 1e016c8:    45 08             	r5 = r4
 1e016ca:    78 17             	call -272 <clr_wdt : 1e015bc >			  ## flash_fs_api.c:236:9
 1e016cc:    20 70             	r0 = 2			  ## flash_fs_api.c:238:13
 1e016ce:    51 08             	r1 = r5			  ## flash_fs_api.c:238:13
 1e016d0:    7c 17             	call -264 <sfc_erase : 1e015ca >			  ## flash_fs_api.c:238:13
 1e016d2:    16 80             	r6 += 1			  ## flash_fs_api.c:241:15
 1e016d4:    a6 f2 03 20       	if (r6 >= r10) goto 6 <flash_erase_by_blcok_n_sector+0xEC : 1e016de >
 1e016d8:    10 70             	r0 = 1			  ## flash_fs_api.c:242:13
 1e016da:    98 f3 6d 2b       	call 3167962 <os_time_dly : 106db8 >			  ## flash_fs_api.c:242:13
 1e016de:    55 fc 00 10       	r5 = r5 + 4096			  ## flash_fs_api.c:240:20
 1e016e2:    6a f2 f2 1f       	if (r10 != r6) goto -28 <flash_erase_by_blcok_n_sector+0xD8 : 1e016ca >
 1e016e6:    f0 fd 60 0a       	r0 = r10 << 12			  ## flash_fs_api.c:235:5
 1e016ea:    04 09             	r4 += r0			  ## flash_fs_api.c:235:5
 1e016ec:    08 2e             	if (r7 == 0) goto 16 <flash_erase_by_blcok_n_sector+0x10C : 1e016fe >
 1e016ee:    66 17             	call -308 <clr_wdt : 1e015bc >			  ## flash_fs_api.c:251:9
 1e016f0:    30 70             	r0 = 3			  ## flash_fs_api.c:253:13
 1e016f2:    41 08             	r1 = r4			  ## flash_fs_api.c:253:13
 1e016f4:    6a 17             	call -300 <sfc_erase : 1e015ca >			  ## flash_fs_api.c:253:13
 1e016f6:    44 fc 00 01       	r4 = r4 + 256			  ## flash_fs_api.c:255:20
 1e016fa:    57 f3 f8 ff       	if (--r7 != 0) goto -16 <flash_erase_by_blcok_n_sector+0xFC : 1e016ee >
 1e016fe:    5a 01             	{pc, r10-r4} = [sp++]			  ## flash_fs_api.c:258:1


flash_erase_by_first_unit:
 1e01700:    74 01             	[--sp] = {rets, r4}			  ## flash_fs_api.c:647:0
 1e01702:    c1 ff b0 20 00 00 	r1 = 8368 <gatt_client_conn_handle : 20b0 >			  ## flash_fs_api.c:643:12
 1e01708:    a1 63             	r1 = b[r1 + 26] (u)			  ## flash_fs_api.c:643:12
 1e0170a:    12 70             	r2 = 1			  ## flash_fs_api.c:643:12
 1e0170c:    01 e1 01 00       	if (r1 == 16) goto 2 <flash_erase_by_first_unit+0x12 : 1e01712 >			  ## flash_fs_api.c:643:12
 1e01710:    02 70             	r2 = 0			  ## flash_fs_api.c:643:12
 1e01712:    12 c3             	r2 = r2 << 12			  ## flash_fs_api.c:652:16
 1e01714:    04 fb 00 01       	r4 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## flash_fs_api.c:650:9
 1e01718:    11 e0 01 00       	if (r1 == 1) goto 2 <flash_erase_by_first_unit+0x1E : 1e0171e >			  ## flash_fs_api.c:650:9
 1e0171c:    24 08             	r4 = r2			  ## flash_fs_api.c:650:9
 1e0171e:    41 08             	r1 = r4			  ## flash_fs_api.c:657:5
 1e01720:    68 17             	call -304 <flash_erase_by_blcok_n_sector : 1e015f2 >			  ## flash_fs_api.c:657:5
 1e01722:    40 08             	r0 = r4			  ## flash_fs_api.c:659:5
 1e01724:    54 01             	{pc, r4} = [sp++]			  ## flash_fs_api.c:659:5


norflash_write:
 1e01726:    79 01             	[--sp] = {rets, r9-r4}			  ## vm_sfc.c:1009:0
 1e01728:    c3 ff a0 22 00 00 	r3 = 8864 <_sdfile_handl : 22a0 >			  ## vm_sfc.c:1009:0
 1e0172e:    04 f6 e8 30       	r4 = [r3 + 232]			  ## vm_sfc.c:1012:37
 1e01732:    26 08             	r6 = r2			  ## vm_sfc.c:1012:37
 1e01734:    19 08             	r9 = r1			  ## vm_sfc.c:1012:37
 1e01736:    07 08             	r7 = r0			  ## vm_sfc.c:1012:37
 1e01738:    61 09             	r1 += r6			  ## vm_sfc.c:1012:17
 1e0173a:    00 70             	r0 = 0			  ## vm_sfc.c:1012:17
 1e0173c:    41 f2 29 80       	if (r1 > r4) goto 82 <norflash_write+0x6C : 1e01792 >			  ## vm_sfc.c:1012:17
 1e01740:    38 fc 08 01       	r8 = r3 + 264			  ## vm_sfc.c:1023:5
 1e01744:    f1 07             	r1 = -1			  ## vm_sfc.c:1023:5
 1e01746:    80 08             	r0 = r8			  ## vm_sfc.c:1023:5
 1e01748:    98 f3 6c 2b       	call 3167960 <os_mutex_pend : 106e24 >			  ## vm_sfc.c:1023:5
 1e0174c:    80 05             	r0 = r6.b0 (u)			  ## vm_sfc.c:1026:40
 1e0174e:    64 fb 01 0a       	r4 = 256 - r0			  ## vm_sfc.c:1026:30
 1e01752:    94 f2 01 30       	if (r4 < r9) goto 2 <norflash_write+0x32 : 1e01758 >
 1e01756:    94 08             	r4 = r9			  ## vm_sfc.c:1028:22
 1e01758:    70 08             	r0 = r7			  ## vm_sfc.c:1029:5
 1e0175a:    61 08             	r1 = r6			  ## vm_sfc.c:1029:5
 1e0175c:    42 08             	r2 = r4			  ## vm_sfc.c:1029:5
 1e0175e:    90 f3 eb 11       	call 2106326 <_norflash_write : 3b38 >			  ## vm_sfc.c:1029:5
 1e01762:    90 fb 40 59       	r5 = r9 - r4			  ## vm_sfc.c:1031:10
 1e01766:    11 2a             	if (r5 == 0) goto 34 <norflash_write+0x64 : 1e0178a >
 1e01768:    47 09             	r7 += r4			  ## vm_sfc.c:1032:10
 1e0176a:    46 09             	r6 += r4			  ## vm_sfc.c:1033:12
 1e0176c:    54 08             	r4 = r5			  ## vm_sfc.c:1036:19
 1e0176e:    0b ff 00 51 02 00 	ifs (r5 < 256) goto 4 <norflash_write+0x52 : 1e01778 >
 1e01774:    04 fb 00 01       	r4 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## vm_sfc.c:1036:19
 1e01778:    70 08             	r0 = r7			  ## vm_sfc.c:1037:9
 1e0177a:    61 08             	r1 = r6			  ## vm_sfc.c:1037:9
 1e0177c:    42 08             	r2 = r4			  ## vm_sfc.c:1037:9
 1e0177e:    90 f3 db 11       	call 2106294 <_norflash_write : 3b38 >			  ## vm_sfc.c:1037:9
 1e01782:    47 09             	r7 += r4			  ## vm_sfc.c:1040:14
 1e01784:    25 bb             	r5 = r5 - r4			  ## vm_sfc.c:1038:14
 1e01786:    46 09             	r6 += r4			  ## vm_sfc.c:1039:16
 1e01788:    f1 3b             	if (r5 != 0) goto -30 <norflash_write+0x46 : 1e0176c >
 1e0178a:    80 08             	r0 = r8			  ## vm_sfc.c:1042:5
 1e0178c:    98 f3 4c 2b       	call 3167896 <os_mutex_post : 106e28 >			  ## vm_sfc.c:1042:5
 1e01790:    90 08             	r0 = r9			  ## vm_sfc.c:1042:5
 1e01792:    59 01             	{pc, r9-r4} = [sp++]			  ## vm_sfc.c:1044:1


sfc_write:
 1e01794:    74 01             	[--sp] = {rets, r4}			  ## vm.c:1494:0
 1e01796:    24 08             	r4 = r2			  ## vm.c:1494:0
 1e01798:    12 08             	r2 = r1			  ## vm.c:1494:0
 1e0179a:    41 08             	r1 = r4			  ## vm.c:1504:5
 1e0179c:    c4 17             	call -120 <norflash_write : 1e01726 >			  ## vm.c:1504:5
 1e0179e:    40 08             	r0 = r4			  ## vm.c:1507:1
 1e017a0:    54 01             	{pc, r4} = [sp++]			  ## vm.c:1507:1


sfc_read:
 1e017a2:    74 01             	[--sp] = {rets, r4}			  ## vm.c:1519:0
 1e017a4:    24 08             	r4 = r2			  ## vm.c:1519:0
 1e017a6:    12 08             	r2 = r1			  ## vm.c:1519:0
 1e017a8:    41 08             	r1 = r4			  ## vm.c:1522:5
 1e017aa:    1b 16             	call -970 <norflash_read : 1e013e2 >			  ## vm.c:1522:5
 1e017ac:    40 08             	r0 = r4			  ## vm.c:1523:5
 1e017ae:    54 01             	{pc, r4} = [sp++]			  ## vm.c:1523:5


testbox_update_msg_handle:
 1e017b0:    74 01             	[--sp] = {rets, r4}			  ## testbox_update.c:207:0
 1e017b2:    f0 0b             	sp += -32			  ## testbox_update.c:207:0
 1e017b4:    04 08             	r4 = r0			  ## testbox_update.c:207:0
 1e017b6:    c2 ff 4f 3c e1 01 	r2 = 31538255 <update_target_end+0xDC7 : 1e13c4f >			  ## testbox_update.c:208:5
 1e017bc:    20 70             	r0 = 2			  ## testbox_update.c:208:5
 1e017be:    43 08             	r3 = r4			  ## testbox_update.c:208:5
 1e017c0:    80 f3 b3 6c       	call 55654 <log_print : 1e0f12a >			  ## testbox_update.c:208:5
 1e017c4:    c0 ff 0b 00 40 00 	r0 = 4194315 <uECC_vli_cmp_unsafe+0x2F900F : 40000b >			  ## testbox_update.c:210:5
 1e017ca:    04 f2 08 00       	if (r4 == r0) goto 16 <testbox_update_msg_handle+0x2E : 1e017de >			  ## testbox_update.c:210:5
 1e017ce:    e0 8f             	r0 += -2
 1e017d0:    04 f2 10 10       	if (r4 != r0) goto 32 <testbox_update_msg_handle+0x44 : 1e017f4 >
 1e017d4:    04 a1             	r4 = sp + 16
 1e017d6:    c1 ff 04 5b e1 01 	r1 = 31546116 <default_profile_data+0xC : 1e15b04 >			  ## testbox_update.c:216:32
 1e017dc:    04 18             	goto 8 <testbox_update_msg_handle+0x36 : 1e017e6 >			  ## testbox_update.c:216:32
 1e017de:    04 a0             	r4 = sp + 0
 1e017e0:    c1 ff 14 5b e1 01 	r1 = 31546132 <default_profile_data+0x1C : 1e15b14 >			  ## testbox_update.c:228:32
 1e017e6:    02 71             	r2 = 16
 1e017e8:    40 08             	r0 = r4
 1e017ea:    98 f3 7b 2b       	call 3167990 <memcpy : 106ee4 >
 1e017ee:    40 08             	r0 = r4
 1e017f0:    80 f3 d2 f5       	call 125860 <app_active_update_task_init : 1e20398 >
 1e017f4:    10 0a             	sp += 32
 1e017f6:    54 01             	{pc, r4} = [sp++]			  ## testbox_update.c:243:1


ble_comm_dev_get_handle_state:
 1e017f8:    34 00             	[--sp] = rets			  ## le_gatt_common.c:311:0
 1e017fa:    bf f3 e2 f9       	call -3132 <ble_comm_dev_get_index : 1e00bc2 >			  ## le_gatt_common.c:312:16
 1e017fe:    f0 ef 06 00       	if (r0 == -1) goto 12 <ble_comm_dev_get_handle_state+0x16 : 1e0180e >			  ## le_gatt_common.c:312:16
 1e01802:    c1 ff b0 20 00 00 	r1 = 8368 <gatt_client_conn_handle : 20b0 >			  ## le_gatt_common.c:319:16
 1e01808:    10 09             	r0 += r1			  ## le_gatt_common.c:314:9
 1e0180a:    30 60             	r0 = b[r0 + 3] (u)			  ## le_gatt_common.c:314:9
 1e0180c:    30 00             	pc = [sp++]			  ## le_gatt_common.c:323:1
 1e0180e:    00 70             	r0 = 0
 1e01810:    30 00             	pc = [sp++]			  ## le_gatt_common.c:323:1


ble_gatt_server_module_enable:
 1e01812:    75 01             	[--sp] = {rets, r5, r4}			  ## le_gatt_server.c:771:0
 1e01814:    04 08             	r4 = r0			  ## le_gatt_server.c:771:0
 1e01816:    c2 ff b3 3b e1 01 	r2 = 31538099 <update_target_end+0xD2B : 1e13bb3 >			  ## le_gatt_server.c:772:5
 1e0181c:    20 70             	r0 = 2			  ## le_gatt_server.c:772:5
 1e0181e:    43 08             	r3 = r4			  ## le_gatt_server.c:772:5
 1e01820:    80 f3 83 6c       	call 55558 <log_print : 1e0f12a >			  ## le_gatt_server.c:772:5
 1e01824:    c5 ff a0 22 00 00 	r5 = 8864 <_sdfile_handl : 22a0 >			  ## le_gatt_server.c:772:5
 1e0182a:    0a 28             	if (r4 == 0) goto 20 <ble_gatt_server_module_enable+0x2E : 1e01840 >			  ## le_gatt_server.c:773:9
 1e0182c:    00 f9 b3 50       	r0 = b[r5 + 179] (u)			  ## le_gatt_server.c:774:29
 1e01830:    20 fd f0 09       	r0 = r0 & 240			  ## le_gatt_server.c:774:29
 1e01834:    10 b0             	r0 |= 1			  ## le_gatt_server.c:774:29
 1e01836:    10 f9 b3 50       	b[r5 + 179] = r0			  ## le_gatt_server.c:774:29
 1e0183a:    15 01             	{rets, r5, r4} = [sp++]			  ## le_gatt_server.c:775:9
 1e0183c:    ff f3 80 fa       	goto -2816 <__gatt_server_check_auto_adv : 1e00d40 >			  ## le_gatt_server.c:775:9
 1e01840:    00 70             	r0 = 0			  ## le_gatt_server.c:777:9
 1e01842:    bf f3 04 fa       	call -3064 <ble_gatt_server_adv_enable : 1e00c4e >			  ## le_gatt_server.c:777:9
 1e01846:    00 f9 b3 50       	r0 = b[r5 + 179] (u)			  ## le_gatt_server.c:778:29
 1e0184a:    c1 ff b0 20 00 00 	r1 = 8368 <gatt_client_conn_handle : 20b0 >			  ## le_gatt_common.c:242:16
 1e01850:    f4 52             	r4 = h[r1 + 30] (u)			  ## le_gatt_common.c:242:16
 1e01852:    20 fd f0 09       	r0 = r0 & 240			  ## le_gatt_server.c:778:29
 1e01856:    10 f9 b3 50       	b[r5 + 179] = r0			  ## le_gatt_server.c:778:29
 1e0185a:    20 28             	if (r4 == 0) goto 64 <ble_gatt_server_module_enable+0x8A : 1e0189c >			  ## le_gatt_server.c:778:29
 1e0185c:    40 08             	r0 = r4			  ## le_gatt_common.c:841:36
 1e0185e:    cc 17             	call -104 <ble_comm_dev_get_handle_state : 1e017f8 >			  ## le_gatt_common.c:841:36
 1e01860:    40 e0 08 10       	if (r0 != 4) goto 16 <ble_gatt_server_module_enable+0x62 : 1e01874 >			  ## le_gatt_common.c:841:36
 1e01864:    c2 ff ea 32 e1 01 	r2 = 31535850 <update_target_end+0x462 : 1e132ea >			  ## le_gatt_common.c:847:13
 1e0186a:    20 70             	r0 = 2			  ## le_gatt_common.c:847:13
 1e0186c:    43 08             	r3 = r4			  ## le_gatt_common.c:847:13
 1e0186e:    80 f3 5c 6c       	call 55480 <log_print : 1e0f12a >			  ## le_gatt_common.c:847:13
 1e01872:    11 18             	goto 34 <ble_gatt_server_module_enable+0x84 : 1e01896 >			  ## le_gatt_common.c:847:13
 1e01874:    41 70             	r1 = 4			  ## le_gatt_common.c:842:13
 1e01876:    40 08             	r0 = r4			  ## le_gatt_common.c:842:13
 1e01878:    bf f3 79 fa       	call -2830 <ble_comm_dev_set_handle_state : 1e00d6e >			  ## le_gatt_common.c:842:13
 1e0187c:    c2 ff bb 32 e1 01 	r2 = 31535803 <update_target_end+0x433 : 1e132bb >			  ## le_gatt_common.c:843:13
 1e01882:    20 70             	r0 = 2			  ## le_gatt_common.c:843:13
 1e01884:    43 08             	r3 = r4			  ## le_gatt_common.c:843:13
 1e01886:    80 f3 50 6c       	call 55456 <log_print : 1e0f12a >			  ## le_gatt_common.c:843:13
 1e0188a:    f0 71             	r0 = 31			  ## le_gatt_common.c:845:13
 1e0188c:    21 70             	r1 = 2			  ## le_gatt_common.c:845:13
 1e0188e:    33 71             	r3 = 19			  ## le_gatt_common.c:845:13
 1e01890:    42 08             	r2 = r4			  ## le_gatt_common.c:845:13
 1e01892:    80 f3 f2 33       	call 26596 <ble_user_cmd_prepare : 1e0807a >			  ## le_gatt_common.c:845:13
 1e01896:    10 70             	r0 = 1			  ## le_gatt_server.c:735:13
 1e01898:    98 f3 8e 2a       	call 3167516 <os_time_dly : 106db8 >			  ## le_gatt_server.c:735:13
 1e0189c:    00 70             	r0 = 0			  ## le_gatt_server.c:780:9
 1e0189e:    21 70             	r1 = 2			  ## le_gatt_server.c:780:9
 1e018a0:    02 70             	r2 = 0			  ## le_gatt_server.c:780:9
 1e018a2:    15 01             	{rets, r5, r4} = [sp++]			  ## le_gatt_server.c:780:9
 1e018a4:    ff f3 9d f9       	goto -3270 <__gatt_server_set_work_state : 1e00be2 >			  ## le_gatt_server.c:780:9


ble_module_enable:
 1e018a8:    74 01             	[--sp] = {rets, r4}			  ## ble_hogp.c:1226:0
 1e018aa:    04 08             	r4 = r0			  ## ble_hogp.c:1226:0
 1e018ac:    c0 ff 56 4b e1 01 	r0 = 31542102 <update_target_end+0x1CCE : 1e14b56 >			  ## ble_hogp.c:1227:5
 1e018b2:    41 08             	r1 = r4			  ## ble_hogp.c:1227:5
 1e018b4:    80 f3 09 6c       	call 55314 <printf : 1e0f0ca >			  ## ble_hogp.c:1227:5
 1e018b8:    c2 ff 9a 32 e1 01 	r2 = 31535770 <update_target_end+0x412 : 1e1329a >			  ## le_gatt_common.c:814:5
 1e018be:    20 70             	r0 = 2			  ## le_gatt_common.c:814:5
 1e018c0:    43 08             	r3 = r4			  ## le_gatt_common.c:814:5
 1e018c2:    80 f3 32 6c       	call 55396 <log_print : 1e0f12a >			  ## le_gatt_common.c:814:5
 1e018c6:    40 08             	r0 = r4			  ## le_gatt_common.c:817:9
 1e018c8:    14 01             	{rets, r4} = [sp++]			  ## le_gatt_common.c:817:9
 1e018ca:    a3 1f             	goto -186 <ble_gatt_server_module_enable : 1e01812 >			  ## le_gatt_common.c:817:9


update_mode_api_v2:
 1e018cc:    7b 01             	[--sp] = {rets, r11-r4}			  ## update.c:426:0
 1e018ce:    fa 0b             	sp += -12			  ## update.c:426:0
 1e018d0:    29 08             	r9 = r2			  ## update.c:426:0
 1e018d2:    17 08             	r7 = r1			  ## update.c:426:0
 1e018d4:    0b 08             	r11 = r0			  ## update.c:426:0
 1e018d6:    00 77             	r0 = 112			  ## update.c:429:22
 1e018d8:    80 f3 6d 70       	call 57562 <malloc : 1e0f9b6 >			  ## update.c:429:22
 1e018dc:    06 08             	r6 = r0			  ## update.c:429:22
 1e018de:    49 2c             	if (r6 == 0) goto 146 <update_mode_api_v2+0xA6 : 1e01972 >			  ## update.c:431:9
 1e018e0:    01 70             	r1 = 0			  ## update.c:370:5
 1e018e2:    02 75             	r2 = 80			  ## update.c:370:5
 1e018e4:    98 f3 04 2b       	call 3167752 <memset : 106ef0 >			  ## update.c:370:5
 1e018e8:    1b f7 02 60       	h[r6 + 2] = r11			  ## update.c:376:22
 1e018ec:    00 fb 01 5a       	r0 = 23041 <report_overlay_end+0x6B9 : 5a01 >			  ## update.c:379:20
 1e018f0:    28 5c             	h[r6 + 4] = r0			  ## update.c:379:20
 1e018f2:    00 fb 41 54       	r0 = 21569 <report_overlay_end+0xF9 : 5441 >			  ## update.c:380:14
 1e018f6:    38 5c             	h[r6 + 6] = r0			  ## update.c:380:14
 1e018f8:    ca ff b0 20 00 00 	r10 = 8368 <gatt_client_conn_handle : 20b0 >			  ## update.c:380:14
 1e018fe:    00 f6 40 a1       	r0 = [r10 + 320]			  ## update.c:381:31
 1e01902:    28 4d             	[r6 + 72] = r0			  ## update.c:381:17
 1e01904:    39 20             	if (r0 == 0) goto 114 <update_mode_api_v2+0xAC : 1e01978 >			  ## update.c:381:17
 1e01906:    28 9c             	r8 = r6 + 2			  ## update.c:376:12
 1e01908:    02 2e             	if (r7 == 0) goto 4 <update_mode_api_v2+0x42 : 1e0190e >
 1e0190a:    60 08             	r0 = r6			  ## update.c:390:9
 1e0190c:    87 00             	call r7			  ## update.c:390:9
 1e0190e:    00 70             	r0 = 0			  ## update.c:406:8
 1e01910:    d0 f5 03 00       	b[sp+3] = r0			  ## update.c:406:8
 1e01914:    10 70             	r0 = 1			  ## update.c:406:8
 1e01916:    d0 f5 04 00       	b[sp+4] = r0			  ## update.c:323:18
 1e0191a:    d0 f5 05 00       	b[sp+5] = r0			  ## update.c:324:18
 1e0191e:    34 a0             	r4 = sp + 3			  ## update.c:324:18
 1e01920:    2c 02             	[sp+8] = r4			  ## update.c:325:18
 1e01922:    65 fc 4c 00       	r5 = r6 + 76			  ## update.c:325:18
 1e01926:    00 5a             	r0 = h[r5 + 0] (u)			  ## update.c:327:44
 1e01928:    67 fc 50 00       	r7 = r6 + 80			  ## update.c:327:20
 1e0192c:    70 09             	r0 += r7			  ## update.c:327:42
 1e0192e:    41 a0             	r1 = sp + 4			  ## update.c:327:42
 1e01930:    22 70             	r2 = 2			  ## update.c:327:5
 1e01932:    98 f3 d7 2a       	call 3167662 <memcpy : 106ee4 >			  ## update.c:327:5
 1e01936:    00 5a             	r0 = h[r5 + 0] (u)			  ## update.c:328:44
 1e01938:    70 09             	r0 += r7			  ## update.c:328:42
 1e0193a:    20 80             	r0 += 2			  ## update.c:328:59
 1e0193c:    12 70             	r2 = 1			  ## update.c:328:5
 1e0193e:    41 08             	r1 = r4			  ## update.c:328:5
 1e01940:    98 f3 d0 2a       	call 3167648 <memcpy : 106ee4 >			  ## update.c:328:5
 1e01944:    c2 ff 41 3e e1 01 	r2 = 31538753 <update_target_end+0xFB9 : 1e13e41 >			  ## update.c:329:5
 1e0194a:    20 70             	r0 = 2			  ## update.c:329:5
 1e0194c:    80 f3 ed 6b       	call 55258 <log_print : 1e0f12a >			  ## update.c:329:5
 1e01950:    00 5a             	r0 = h[r5 + 0] (u)			  ## update.c:330:5
 1e01952:    70 09             	r0 += r7			  ## update.c:330:5
 1e01954:    31 70             	r1 = 3			  ## update.c:330:5
 1e01956:    80 f3 3c 6d       	call 55928 <printf_buf : 1e0f3d2 >			  ## update.c:330:5
 1e0195a:    00 5a             	r0 = h[r5 + 0] (u)			  ## update.c:331:20
 1e0195c:    30 80             	r0 += 3			  ## update.c:331:20
 1e0195e:    08 5a             	h[r5 + 0] = r0			  ## update.c:331:20
 1e01960:    21 04             	r1 = r0.l (u)			  ## update.c:332:59
 1e01962:    70 08             	r0 = r7			  ## update.c:332:22
 1e01964:    22 15             	call -1468 <CRC16 : 1e013aa >			  ## update.c:332:22
 1e01966:    18 5a             	h[r5 + 2] = r0			  ## update.c:332:20
 1e01968:    e1 74             	r1 = 78			  ## update.c:416:19
 1e0196a:    80 08             	r0 = r8			  ## update.c:416:19
 1e0196c:    1e 15             	call -1476 <CRC16 : 1e013aa >			  ## update.c:416:19
 1e0196e:    08 5c             	h[r6 + 0] = r0			  ## update.c:416:17
 1e01970:    09 18             	goto 18 <update_mode_api_v2+0xB8 : 1e01984 >
 1e01972:    90 f3 35 0d       	call 2103914 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e01976:    20 18             	goto 64 <update_mode_api_v2+0xEC : 1e019b8 >			  ## cpu.h:148:5
 1e01978:    c2 ff 62 3e e1 01 	r2 = 31538786 <update_target_end+0xFDA : 1e13e62 >			  ## update.c:385:9
 1e0197e:    40 70             	r0 = 4			  ## update.c:385:9
 1e01980:    80 f3 d3 6b       	call 55206 <log_print : 1e0f12a >			  ## update.c:385:9
 1e01984:    03 f6 48 a1       	r3 = [r10 + 328]			  ## update.c:434:25
 1e01988:    05 26             	if (r3 == 0) goto 10 <update_mode_api_v2+0xC8 : 1e01994 >			  ## update.c:434:25
 1e0198a:    00 f6 44 a1       	r0 = [r10 + 324]			  ## update.c:435:60
 1e0198e:    02 77             	r2 = 112			  ## update.c:435:13
 1e01990:    61 08             	r1 = r6			  ## update.c:435:13
 1e01992:    83 00             	call r3			  ## update.c:435:13
 1e01994:    c0 ff 68 fb 00 00 	r0 = 64360 <report_heap_end+0x8 : fb68 >			  ## update.c:422:5
 1e0199a:    02 77             	r2 = 112			  ## update.c:422:5
 1e0199c:    61 08             	r1 = r6			  ## update.c:422:5
 1e0199e:    98 f3 a1 2a       	call 3167554 <memcpy : 106ee4 >			  ## update.c:422:5
 1e019a2:    98 f3 fb 29       	call 3167222 <local_irq_disable : 106d9c >			  ## update.c:295:5
 1e019a6:    80 f3 bf 70       	call 57726 <hwi_all_close : 1e0fb28 >			  ## update.c:298:5
 1e019aa:    09 e0 02 00       	if (r9 == 0) goto 4 <update_mode_api_v2+0xE6 : 1e019b2 >			  ## update.c:298:5
 1e019ae:    b0 08             	r0 = r11			  ## update.c:456:13
 1e019b0:    89 00             	call r9			  ## update.c:456:13
 1e019b2:    60 08             	r0 = r6			  ## update.c:458:9
 1e019b4:    80 f3 2a 70       	call 57428 <free : 1e0fa0c >			  ## update.c:458:9
 1e019b8:    06 0a             	sp += 12
 1e019ba:    5b 01             	{pc, r11-r4} = [sp++]			  ## update.c:462:1


cpu_reset.211:
 1e019bc:    d0 f3 10 0d       	goto 2103840 <p33_soft_reset : 33e0 >			  ## cpu.h:146:0


testbox_ble_update_state_cbk:
 1e019c0:    75 01             	[--sp] = {rets, r5, r4}			  ## testbox_update.c:143:0
 1e019c2:    25 08             	r5 = r2			  ## testbox_update.c:143:0
 1e019c4:    14 08             	r4 = r1			  ## testbox_update.c:143:0
 1e019c6:    07 2a             	if (r5 == 0) goto 14 <testbox_ble_update_state_cbk+0x16 : 1e019d6 >			  ## testbox_update.c:143:0
 1e019c8:    42 6a             	r2 = b[r5 + 4] (u)			  ## testbox_update.c:147:65
 1e019ca:    01 4a             	r1 = [r5 + 0]			  ## testbox_update.c:147:60
 1e019cc:    c0 ff 6e 3c e1 01 	r0 = 31538286 <update_target_end+0xDE6 : 1e13c6e >			  ## testbox_update.c:147:9
 1e019d2:    80 f3 7a 6b       	call 55028 <printf : 1e0f0ca >			  ## testbox_update.c:147:9
 1e019d6:    34 e0 3c 10       	if (r4 != 3) goto 120 <testbox_ble_update_state_cbk+0x92 : 1e01a52 >
 1e019da:    00 4a             	r0 = [r5 + 0]
 1e019dc:    c4 ff 8c 3c e1 01 	r4 = 31538316 <update_target_end+0xE04 : 1e13c8c >
 1e019e2:    10 e0 24 00       	if (r0 == 1) goto 72 <testbox_ble_update_state_cbk+0x6E : 1e01a2e >			  ## testbox_update.c:161:38
 1e019e6:    35 30             	if (r0 != 0) goto 106 <testbox_ble_update_state_cbk+0x92 : 1e01a52 >
 1e019e8:    40 6a             	r0 = b[r5 + 4] (u)			  ## testbox_update.c:161:57
 1e019ea:    33 30             	if (r0 != 0) goto 102 <testbox_ble_update_state_cbk+0x92 : 1e01a52 >			  ## testbox_update.c:161:57
 1e019ec:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >
 1e019f2:    11 70             	r1 = 1
 1e019f4:    11 f9 3c 00       	b[r0 + 60] = r1
 1e019f8:    00 70             	r0 = 0			  ## testbox_update.c:169:17
 1e019fa:    56 17             	call -340 <ble_module_enable : 1e018a8 >			  ## testbox_update.c:169:17
 1e019fc:    f5 7f             	r5 = 255
 1e019fe:    80 f3 6a 34       	call 26836 <check_le_conn_disconnet_flag : 1e082d6 >			  ## testbox_update.c:171:25
 1e01a02:    0b 30             	if (r0 != 0) goto 22 <testbox_ble_update_state_cbk+0x5A : 1e01a1a >			  ## testbox_update.c:171:25
 1e01a04:    20 70             	r0 = 2			  ## testbox_update.c:172:21
 1e01a06:    42 08             	r2 = r4			  ## testbox_update.c:172:21
 1e01a08:    80 f3 8f 6b       	call 55070 <log_print : 1e0f12a >			  ## testbox_update.c:172:21
 1e01a0c:    20 70             	r0 = 2			  ## testbox_update.c:173:21
 1e01a0e:    98 f3 d3 29       	call 3167142 <os_time_dly : 106db8 >			  ## testbox_update.c:173:21
 1e01a12:    15 80             	r5 += 1			  ## testbox_update.c:174:31
 1e01a14:    40 05             	r0 = r5.b0 (u)			  ## testbox_update.c:174:31
 1e01a16:    60 e0 f2 3f       	if (r0 < 6) goto -28 <testbox_ble_update_state_cbk+0x3E : 1e019fe >			  ## testbox_update.c:174:31
 1e01a1a:    c1 ff 54 1a e0 01 	r1 = 31464020 <testbox_ble_update_private_param_fill : 1e01a54 >			  ## testbox_update.c:180:17
 1e01a20:    c2 ff 8e 1b e0 01 	r2 = 31464334 <testbox_ble_update_before_jump_handle : 1e01b8e >			  ## testbox_update.c:180:17
 1e01a26:    00 fb 09 5a       	r0 = 23049 <report_overlay_end+0x6C1 : 5a09 >			  ## testbox_update.c:180:17
 1e01a2a:    15 01             	{rets, r5, r4} = [sp++]			  ## testbox_update.c:180:17
 1e01a2c:    4f 1f             	goto -354 <update_mode_api_v2 : 1e018cc >			  ## testbox_update.c:180:17
 1e01a2e:    00 70             	r0 = 0			  ## testbox_update.c:189:17
 1e01a30:    3b 17             	call -394 <ble_module_enable : 1e018a8 >			  ## testbox_update.c:189:17
 1e01a32:    f5 7f             	r5 = 255
 1e01a34:    80 f3 4f 34       	call 26782 <check_le_conn_disconnet_flag : 1e082d6 >			  ## testbox_update.c:191:25
 1e01a38:    0b 30             	if (r0 != 0) goto 22 <testbox_ble_update_state_cbk+0x90 : 1e01a50 >			  ## testbox_update.c:191:25
 1e01a3a:    20 70             	r0 = 2			  ## testbox_update.c:192:21
 1e01a3c:    42 08             	r2 = r4			  ## testbox_update.c:192:21
 1e01a3e:    80 f3 74 6b       	call 55016 <log_print : 1e0f12a >			  ## testbox_update.c:192:21
 1e01a42:    20 70             	r0 = 2			  ## testbox_update.c:193:21
 1e01a44:    98 f3 b8 29       	call 3167088 <os_time_dly : 106db8 >			  ## testbox_update.c:193:21
 1e01a48:    15 80             	r5 += 1			  ## testbox_update.c:194:31
 1e01a4a:    40 05             	r0 = r5.b0 (u)			  ## testbox_update.c:194:31
 1e01a4c:    60 e0 f2 3f       	if (r0 < 6) goto -28 <testbox_ble_update_state_cbk+0x74 : 1e01a34 >			  ## testbox_update.c:194:31
 1e01a50:    b5 17             	call -150 <cpu_reset.211 : 1e019bc >			  ## testbox_update.c:199:17
 1e01a52:    55 01             	{pc, r5, r4} = [sp++]			  ## testbox_update.c:204:1


testbox_ble_update_private_param_fill:
 1e01a54:    75 01             	[--sp] = {rets, r5, r4}			  ## testbox_update.c:106:0
 1e01a56:    fc 0b             	sp += -8			  ## testbox_update.c:106:0
 1e01a58:    04 08             	r4 = r0			  ## testbox_update.c:106:0
 1e01a5a:    25 a0             	r5 = sp + 2			  ## testbox_update.c:106:0
 1e01a5c:    50 08             	r0 = r5			  ## testbox_update.c:110:9
 1e01a5e:    80 f3 1f e2       	call 115774 <le_controller_get_mac : 1e1dea0 >			  ## testbox_update.c:110:9
 1e01a62:    84 82             	r4 += 40			  ## update.c:316:25
 1e01a64:    62 70             	r2 = 6			  ## update.c:316:5
 1e01a66:    40 08             	r0 = r4			  ## update.c:316:5
 1e01a68:    51 08             	r1 = r5			  ## update.c:316:5
 1e01a6a:    98 f3 3b 2a       	call 3167350 <memcpy : 106ee4 >			  ## update.c:316:5
 1e01a6e:    c0 ff b0 3c e1 01 	r0 = 31538352 <update_target_end+0xE28 : 1e13cb0 >			  ## testbox_update.c:113:9
 1e01a74:    80 f3 7f 6c       	call 55550 <puts : 1e0f376 >			  ## testbox_update.c:113:9
 1e01a78:    61 70             	r1 = 6			  ## testbox_update.c:114:9
 1e01a7a:    40 08             	r0 = r4			  ## testbox_update.c:114:9
 1e01a7c:    80 f3 2a 6c       	call 55380 <put_buf : 1e0f2d4 >			  ## testbox_update.c:114:9
 1e01a80:    04 0a             	sp += 8			  ## testbox_update.c:114:9
 1e01a82:    55 01             	{pc, r5, r4} = [sp++]			  ## testbox_update.c:116:1


lbuf_free_btctrler:
 1e01a84:    75 01             	[--sp] = {rets, r5, r4}			  ## lbuf.c:273:0
 1e01a86:    04 08             	r4 = r0			  ## lbuf.c:273:0
 1e01a88:    41 28             	if (r4 == 0) goto 130 <lbuf_free_btctrler+0x88 : 1e01b0c >			  ## lbuf.c:273:0
 1e01a8a:    98 f3 87 29       	call 3166990 <local_irq_disable : 106d9c >			  ## lbuf.c:287:5
 1e01a8e:    41 fc f0 ff       	r1 = r4 + -16			  ## lbuf.c:287:5
 1e01a92:    00 42             	r0 = [r1 + 0]			  ## list.h:165:36
 1e01a94:    12 42             	r2 = [r1 + 4]			  ## list.h:165:23
 1e01a96:    23 42             	r3 = [r1 + 8]			  ## lbuf.c:299:19
 1e01a98:    1a 40             	[r0 + 4] = r2			  ## list.h:159:16
 1e01a9a:    08 44             	[r2 + 0] = r0			  ## list.h:160:16
 1e01a9c:    60 52             	r0 = h[r1 + 12] (u)			  ## lbuf.c:303:23
 1e01a9e:    48 52             	h[r1 + 8] = r0			  ## lbuf.c:303:14
 1e01aa0:    22 46             	r2 = [r3 + 8]			  ## lbuf.c:303:14
 1e01aa2:    80 96             	r0 = r3 + 8			  ## lbuf.c:307:5
 1e01aa4:    02 f2 09 00       	if (r2 == r0) goto 18 <lbuf_free_btctrler+0x36 : 1e01aba >
 1e01aa8:    12 f2 0a 80       	if (r2 > r1) goto 20 <lbuf_free_btctrler+0x3C : 1e01ac0 >			  ## lbuf.c:308:24
 1e01aac:    45 54             	r5 = h[r2 + 8] (u)			  ## lbuf.c:308:38
 1e01aae:    25 09             	r5 += r2			  ## lbuf.c:308:36
 1e01ab0:    15 f2 23 80       	if (r5 > r1) goto 70 <lbuf_free_btctrler+0x76 : 1e01afa >			  ## lbuf.c:308:36
 1e01ab4:    02 44             	r2 = [r2 + 0]
 1e01ab6:    02 f2 f7 1f       	if (r2 != r0) goto -18 <lbuf_free_btctrler+0x24 : 1e01aa8 >
 1e01aba:    c3 80             	r3 += 12			  ## list.h:154:28
 1e01abc:    02 08             	r2 = r0
 1e01abe:    01 18             	goto 2 <lbuf_free_btctrler+0x3E : 1e01ac2 >
 1e01ac0:    43 94             	r3 = r2 + 4			  ## lbuf.c:313:46
 1e01ac2:    04 46             	r4 = [r3 + 0]
 1e01ac4:    09 46             	[r3 + 0] = r1			  ## list.h:137:16
 1e01ac6:    0a 42             	[r1 + 0] = r2			  ## list.h:138:16
 1e01ac8:    1c 42             	[r1 + 4] = r4			  ## list.h:139:16
 1e01aca:    09 48             	[r4 + 0] = r1			  ## list.h:140:16
 1e01acc:    01 40             	r1 = [r0 + 0]			  ## list.h:140:16
 1e01ace:    01 f2 1b 00       	if (r1 == r0) goto 54 <lbuf_free_btctrler+0x84 : 1e01b08 >
 1e01ad2:    02 70             	r2 = 0
 1e01ad4:    13 08             	r3 = r1
 1e01ad6:    0c 24             	if (r2 == 0) goto 24 <lbuf_free_btctrler+0x6C : 1e01af0 >
 1e01ad8:    44 54             	r4 = h[r2 + 8] (u)			  ## lbuf.c:328:31
 1e01ada:    85 b8             	r5 = r4 + r2			  ## lbuf.c:328:23
 1e01adc:    15 f2 08 10       	if (r5 != r1) goto 16 <lbuf_free_btctrler+0x6C : 1e01af0 >			  ## lbuf.c:328:23
 1e01ae0:    43 52             	r3 = h[r1 + 8] (u)			  ## lbuf.c:330:29
 1e01ae2:    43 09             	r3 += r4			  ## lbuf.c:330:23
 1e01ae4:    4b 54             	h[r2 + 8] = r3			  ## lbuf.c:330:23
 1e01ae6:    03 42             	r3 = [r1 + 0]			  ## list.h:165:36
 1e01ae8:    14 42             	r4 = [r1 + 4]			  ## list.h:165:23
 1e01aea:    1c 46             	[r3 + 4] = r4			  ## list.h:159:16
 1e01aec:    0b 48             	[r4 + 0] = r3			  ## list.h:160:16
 1e01aee:    23 08             	r3 = r2			  ## list.h:160:16
 1e01af0:    01 42             	r1 = [r1 + 0]
 1e01af2:    32 08             	r2 = r3
 1e01af4:    01 f2 ee 1f       	if (r1 != r0) goto -36 <lbuf_free_btctrler+0x50 : 1e01ad4 >
 1e01af8:    07 18             	goto 14 <lbuf_free_btctrler+0x84 : 1e01b08 >
 1e01afa:    c2 ff be 59 e1 01 	r2 = 31545790 <update_target_end+0x2B36 : 1e159be >			  ## lbuf.c:309:13
 1e01b00:    40 70             	r0 = 4			  ## lbuf.c:309:13
 1e01b02:    43 08             	r3 = r4			  ## lbuf.c:309:13
 1e01b04:    80 f3 11 6b       	call 54818 <log_print : 1e0f12a >			  ## lbuf.c:309:13
 1e01b08:    98 f3 46 29       	call 3166860 <local_irq_enable : 106d98 >			  ## lbuf.c:339:5
 1e01b0c:    55 01             	{pc, r5, r4} = [sp++]			  ## lbuf.c:340:1


hw_dma_free:
 1e01b0e:    ba 1f             	goto -140 <lbuf_free_btctrler : 1e01a84 >			  ## hw_dma.c:62:0


hw_dma_clear:
 1e01b10:    75 01             	[--sp] = {rets, r5, r4}			  ## hw_dma.c:116:0
 1e01b12:    04 08             	r4 = r0			  ## hw_dma.c:116:0
 1e01b14:    00 48             	r0 = [r4 + 0]			  ## hw_dma.c:119:5
 1e01b16:    40 f2 0a 00       	if (r0 == r4) goto 20 <hw_dma_clear+0x1E : 1e01b2e >
 1e01b1a:    11 40             	r1 = [r0 + 4]			  ## list.h:171:23
 1e01b1c:    05 40             	r5 = [r0 + 0]
 1e01b1e:    19 4a             	[r5 + 4] = r1			  ## list.h:159:16
 1e01b20:    0d 42             	[r1 + 0] = r5			  ## list.h:160:16
 1e01b22:    08 40             	[r0 + 0] = r0			  ## list.h:172:17
 1e01b24:    18 40             	[r0 + 4] = r0			  ## list.h:173:17
 1e01b26:    ae 17             	call -164 <lbuf_free_btctrler : 1e01a84 >			  ## hw_dma.c:121:9
 1e01b28:    50 08             	r0 = r5
 1e01b2a:    45 f2 f6 1f       	if (r5 != r4) goto -20 <hw_dma_clear+0xA : 1e01b1a >
 1e01b2e:    55 01             	{pc, r5, r4} = [sp++]			  ## hw_dma.c:123:1


btctler_nv_memory_free:
 1e01b30:    34 00             	[--sp] = rets			  ## btcontroller_heap.c:244:0
 1e01b32:    02 20             	if (r0 == 0) goto 4 <btctler_nv_memory_free+0x8 : 1e01b38 >			  ## btcontroller_heap.c:244:0
 1e01b34:    80 f3 6a 6f       	call 57044 <free : 1e0fa0c >			  ## btcontroller_heap.c:249:9
 1e01b38:    30 00             	pc = [sp++]			  ## btcontroller_heap.c:251:1


sys_timer_remove:
 1e01b3a:    20 04             	r0 = r0.l (u)			  ## sys_timer.c:40:0
 1e01b3c:    c0 f3 a2 79       	goto 62276 <sys_timeout_del : 1e10e84 >			  ## sys_timer.c:43:5


__bt_free:
 1e01b40:    34 00             	[--sp] = rets			  ## btcontroller_heap.c:269:0
 1e01b42:    02 20             	if (r0 == 0) goto 4 <__bt_free+0x8 : 1e01b48 >			  ## btcontroller_heap.c:269:0
 1e01b44:    80 f3 62 6f       	call 57028 <free : 1e0fa0c >			  ## btcontroller_heap.c:249:9
 1e01b48:    30 00             	pc = [sp++]			  ## btcontroller_heap.c:271:1


thread_delete:
 1e01b4a:    34 00             	[--sp] = rets			  ## thread.c:161:0
 1e01b4c:    01 40             	r1 = [r0 + 0]			  ## list.h:171:36
 1e01b4e:    13 40             	r3 = [r0 + 4]			  ## list.h:171:23
 1e01b50:    22 40             	r2 = [r0 + 8]			  ## thread.c:163:35
 1e01b52:    1b 42             	[r1 + 4] = r3			  ## list.h:159:16
 1e01b54:    09 46             	[r3 + 0] = r1			  ## list.h:160:16
 1e01b56:    08 40             	[r0 + 0] = r0			  ## list.h:172:17
 1e01b58:    18 40             	[r0 + 4] = r0			  ## list.h:173:17
 1e01b5a:    03 44             	r3 = [r2 + 0]			  ## list.h:124:18
 1e01b5c:    01 70             	r1 = 0
 1e01b5e:    23 f2 04 10       	if (r3 != r2) goto 8 <thread_delete+0x20 : 1e01b6a >
 1e01b62:    40 61             	r0 = b[r0 + 20] (u)			  ## thread.c:168:15
 1e01b64:    31 44             	r1 = [r2 + 12]			  ## thread.c:168:26
 1e01b66:    81 00             	call r1			  ## thread.c:168:15
 1e01b68:    01 08             	r1 = r0			  ## thread.c:168:15
 1e01b6a:    10 08             	r0 = r1			  ## thread.c:171:5
 1e01b6c:    30 00             	pc = [sp++]			  ## thread.c:171:5


lbuf_clear_btctrler:
 1e01b6e:    75 01             	[--sp] = {rets, r5, r4}			  ## lbuf.c:182:0
 1e01b70:    04 08             	r4 = r0			  ## lbuf.c:182:0
 1e01b72:    98 f3 13 29       	call 3166758 <local_irq_disable : 106d9c >			  ## lbuf.c:186:5
 1e01b76:    00 48             	r0 = [r4 + 0]			  ## lbuf.c:188:5
 1e01b78:    40 f2 06 00       	if (r0 == r4) goto 12 <lbuf_clear_btctrler+0x1A : 1e01b88 >
 1e01b7c:    45 f6 10 00       	r5 = [r0 ++= 16]
 1e01b80:    81 17             	call -254 <lbuf_free_btctrler : 1e01a84 >			  ## lbuf.c:189:9
 1e01b82:    50 08             	r0 = r5			  ## lbuf.c:189:9
 1e01b84:    45 f2 fa 1f       	if (r5 != r4) goto -12 <lbuf_clear_btctrler+0xE : 1e01b7c >
 1e01b88:    15 01             	{rets, r5, r4} = [sp++]			  ## lbuf.c:192:5
 1e01b8a:    d8 f3 05 29       	goto 3166730 <local_irq_enable : 106d98 >			  ## lbuf.c:192:5


testbox_ble_update_before_jump_handle:
 1e01b8e:    34 00             	[--sp] = rets			  ## testbox_update.c:119:0
 1e01b90:    80 f3 8c e1       	call 115480 <ll_hci_destory : 1e1deac >			  ## testbox_update.c:121:9
 1e01b94:    88 01             	{rets} = [sp++]			  ## testbox_update.c:138:5
 1e01b96:    12 1f             	goto -476 <cpu_reset.211 : 1e019bc >			  ## testbox_update.c:138:5


testbox_bt_classic_update_state_cbk:
 1e01b98:    75 01             	[--sp] = {rets, r5, r4}			  ## testbox_update.c:69:0
 1e01b9a:    fe 0b             	sp += -4			  ## testbox_update.c:69:0
 1e01b9c:    24 08             	r4 = r2			  ## testbox_update.c:69:0
 1e01b9e:    15 08             	r5 = r1			  ## testbox_update.c:69:0
 1e01ba0:    09 28             	if (r4 == 0) goto 18 <testbox_bt_classic_update_state_cbk+0x1C : 1e01bb4 >			  ## testbox_update.c:69:0
 1e01ba2:    03 48             	r3 = [r4 + 0]			  ## testbox_update.c:73:9
 1e01ba4:    41 68             	r1 = b[r4 + 4] (u)			  ## testbox_update.c:73:9
 1e01ba6:    c2 ff bb 3c e1 01 	r2 = 31538363 <update_target_end+0xE33 : 1e13cbb >			  ## testbox_update.c:73:9
 1e01bac:    20 70             	r0 = 2			  ## testbox_update.c:73:9
 1e01bae:    09 02             	[sp] = r1			  ## testbox_update.c:73:9
 1e01bb0:    80 f3 bb 6a       	call 54646 <log_print : 1e0f12a >			  ## testbox_update.c:73:9
 1e01bb4:    35 e0 11 10       	if (r5 != 3) goto 34 <testbox_bt_classic_update_state_cbk+0x42 : 1e01bda >
 1e01bb8:    00 48             	r0 = [r4 + 0]
 1e01bba:    10 e0 0d 00       	if (r0 == 1) goto 26 <testbox_bt_classic_update_state_cbk+0x40 : 1e01bd8 >			  ## testbox_update.c:87:38
 1e01bbe:    0d 30             	if (r0 != 0) goto 26 <testbox_bt_classic_update_state_cbk+0x42 : 1e01bda >
 1e01bc0:    40 68             	r0 = b[r4 + 4] (u)			  ## testbox_update.c:87:57
 1e01bc2:    0b 30             	if (r0 != 0) goto 22 <testbox_bt_classic_update_state_cbk+0x42 : 1e01bda >			  ## testbox_update.c:87:57
 1e01bc4:    c1 ff de 1b e0 01 	r1 = 31464414 <testbox_bt_classic_update_private_param_fill : 1e01bde >			  ## testbox_update.c:89:17
 1e01bca:    c2 ff 70 1c e0 01 	r2 = 31464560 <testbox_bt_classic_update_before_jump_handle : 1e01c70 >			  ## testbox_update.c:89:17
 1e01bd0:    00 fb 05 5a       	r0 = 23045 <report_overlay_end+0x6BD : 5a05 >			  ## testbox_update.c:89:17
 1e01bd4:    7b 16             	call -778 <update_mode_api_v2 : 1e018cc >			  ## testbox_update.c:89:17
 1e01bd6:    01 18             	goto 2 <testbox_bt_classic_update_state_cbk+0x42 : 1e01bda >			  ## testbox_update.c:89:17
 1e01bd8:    f1 16             	call -542 <cpu_reset.211 : 1e019bc >			  ## testbox_update.c:93:17
 1e01bda:    02 0a             	sp += 4
 1e01bdc:    55 01             	{pc, r5, r4} = [sp++]			  ## testbox_update.c:98:1


testbox_bt_classic_update_private_param_fill:
 1e01bde:    20 00             	rts			  ## testbox_update.c:41:0


ram_protect_close:
 1e01be0:    77 01             	[--sp] = {rets, r7-r4}			  ## debug.c:1568:0
 1e01be2:    02 70             	r2 = 0			  ## debug.c:1568:0
 1e01be4:    c0 ff 00 e2 1b 00 	r0 = 1827328 <uECC_vli_cmp_unsafe+0xB7204 : 1be200 >			  ## debug.c:1568:0
 1e01bea:    7a 40             	[r0 + 28] = r2			  ## debug.c:586:19
 1e01bec:    c1 ff ff ff ff 01 	r1 = 33554431 <bank_code_load_addr+0x1DCA07 : 1ffffff >			  ## debug.c:587:19
 1e01bf2:    69 40             	[r0 + 24] = r1			  ## debug.c:587:19
 1e01bf4:    9a 40             	[r0 + 36] = r2			  ## debug.c:592:19
 1e01bf6:    89 40             	[r0 + 32] = r1			  ## debug.c:593:19
 1e01bf8:    c1 ff fc 03 1b 00 	r1 = 1770492 <uECC_vli_cmp_unsafe+0xA9400 : 1b03fc >			  ## debug.c:593:19
 1e01bfe:    02 18             	goto 4 <ram_protect_close+0x24 : 1e01c04 >			  ## debug.c:593:19
 1e01c00:    c0 f4 e7 19       	[r1 + 0] = 231			  ## debug.c:573:9
 1e01c04:    03 42             	r3 = [r1 + 0]
 1e01c06:    00 f3 fb 3f       	if ((r3 & 1) == 0) goto -10 <ram_protect_close+0x20 : 1e01c00 >
 1e01c0a:    c3 ff c0 c0 06 00 	r3 = 442560 <text_size+0x4B210 : 6c0c0 >
 1e01c10:    04 97             	r4 = r3 + 16
 1e01c12:    05 99             	r5 = r4 + 16
 1e01c14:    06 9b             	r6 = r5 + 16
 1e01c16:    07 70             	r7 = 0
 1e01c18:    b2 f6 00 73       	[r7+r3<<2] = r2			  ## debug.c:1551:26
 1e01c1c:    b2 f6 00 74       	[r7+r4<<2] = r2			  ## debug.c:1552:26
 1e01c20:    b2 f6 00 75       	[r7+r5<<2] = r2			  ## debug.c:1554:26
 1e01c24:    b2 f6 00 76       	[r7+r6<<2] = r2			  ## debug.c:1555:26
 1e01c28:    47 80             	r7 += 4			  ## debug.c:1550:23
 1e01c2a:    c7 e0 f5 1f       	if (r7 != 12) goto -22 <ram_protect_close+0x38 : 1e01c18 >			  ## debug.c:1550:23
 1e01c2e:    02 18             	goto 4 <ram_protect_close+0x54 : 1e01c34 >			  ## debug.c:1550:23
 1e01c30:    c0 f4 e7 19       	[r1 + 0] = 231			  ## debug.c:580:9
 1e01c34:    02 42             	r2 = [r1 + 0]
 1e01c36:    20 f3 fb 2f       	if ((r2 & 1) != 0) goto -10 <ram_protect_close+0x50 : 1e01c30 >
 1e01c3a:    c0 f4 03 09       	[r0 + 0] = 3			  ## debug.c:1582:14
 1e01c3e:    57 01             	{pc, r7-r4} = [sp++]			  ## debug.c:1584:1


power_set_mode:
 1e01c40:    34 00             	[--sp] = rets			  ## power_hw.c:1414:0
 1e01c42:    c0 ff 00 50 00 00 	r0 = 20480 <nvbss_begin : 5000 >			  ## power_hw.c:1414:0
 1e01c48:    81 61             	r1 = b[r0 + 24] (u)			  ## power_hw.c:1416:17
 1e01c4a:    21 e0 10 00       	if (r1 == 2) goto 32 <power_set_mode+0x2E : 1e01c6e >			  ## power_hw.c:1416:17
 1e01c4e:    21 70             	r1 = 2			  ## power_hw.c:1427:18
 1e01c50:    89 61             	b[r0 + 24] = r1			  ## power_hw.c:1427:18
 1e01c52:    c0 ff 90 18 1a 00 	r0 = 1710224 <uECC_vli_cmp_unsafe+0x9A894 : 1a1890 >
 1e01c58:    01 60             	r1 = b[r0 + 0] (u)			  ## pmu_analog.c:81:5
 1e01c5a:    11 b1             	r1 |= 4			  ## pmu_analog.c:81:5
 1e01c5c:    09 60             	b[r0 + 0] = r1			  ## pmu_analog.c:81:5
 1e01c5e:    01 60             	r1 = b[r0 + 0] (u)			  ## pmu_analog.c:82:5
 1e01c60:    f1 b1             	r1 &= 4294967287			  ## pmu_analog.c:82:5
 1e01c62:    09 60             	b[r0 + 0] = r1			  ## pmu_analog.c:82:5
 1e01c64:    61 60             	r1 = b[r0 + 6] (u)			  ## pmu_analog.c:84:5
 1e01c66:    71 b3             	r1 &= 4294967231			  ## pmu_analog.c:84:5
 1e01c68:    69 60             	b[r0 + 6] = r1			  ## pmu_analog.c:84:5
 1e01c6a:    90 f3 b9 0f       	call 2105202 <delay_nus : 3be0 >			  ## pmu_analog.c:86:5
 1e01c6e:    30 00             	pc = [sp++]			  ## power_hw.c:1440:1


testbox_bt_classic_update_before_jump_handle:
 1e01c70:    78 01             	[--sp] = {rets, r8-r4}			  ## testbox_update.c:46:0
 1e01c72:    c2 ff e3 3c e1 01 	r2 = 31538403 <update_target_end+0xE5B : 1e13ce3 >			  ## testbox_update.c:50:9
 1e01c78:    20 70             	r0 = 2			  ## testbox_update.c:50:9
 1e01c7a:    80 f3 56 6a       	call 54444 <log_print : 1e0f12a >			  ## testbox_update.c:50:9
 1e01c7e:    80 f3 15 e1       	call 115242 <ll_hci_destory : 1e1deac >			  ## testbox_update.c:51:9
 1e01c82:    c7 ff 80 2e e1 01 	r7 = 31534720 <update_target_begin : 1e12e80 >
 1e01c88:    c5 ff 88 2e e1 01 	r5 = 31534728 <update_target_end : 1e12e88 >
 1e01c8e:    c4 ff 08 3d e1 01 	r4 = 31538440 <update_target_end+0xE80 : 1e13d08 >
 1e01c94:    c8 ff 2d 3e e1 01 	r8 = 31538733 <update_target_end+0xFA5 : 1e13e2d >
 1e01c9a:    11 18             	goto 34 <testbox_bt_classic_update_before_jump_handle+0x4E : 1e01cbe >
 1e01c9c:    06 4e             	r6 = [r7 + 0]			  ## update.c:278:36
 1e01c9e:    40 08             	r0 = r4			  ## update.c:278:42
 1e01ca0:    98 f3 2c 29       	call 3166808 <strlen : 106efc >			  ## update.c:278:42
 1e01ca4:    02 08             	r2 = r0			  ## update.c:278:42
 1e01ca6:    40 08             	r0 = r4			  ## update.c:278:13
 1e01ca8:    61 08             	r1 = r6			  ## update.c:278:13
 1e01caa:    98 f3 1f 29       	call 3166782 <memcmp : 106eec >			  ## update.c:278:13
 1e01cae:    06 20             	if (r0 == 0) goto 12 <testbox_bt_classic_update_before_jump_handle+0x4C : 1e01cbc >			  ## update.c:278:13
 1e01cb0:    80 08             	r0 = r8			  ## update.c:279:13
 1e01cb2:    61 08             	r1 = r6			  ## update.c:279:13
 1e01cb4:    80 f3 09 6a       	call 54290 <printf : 1e0f0ca >			  ## update.c:279:13
 1e01cb8:    10 4e             	r0 = [r7 + 4]			  ## update.c:280:16
 1e01cba:    80 00             	call r0			  ## update.c:280:13
 1e01cbc:    87 80             	r7 += 8			  ## update.c:277:5
 1e01cbe:    57 f2 ed 3f       	if (r7 < r5) goto -38 <testbox_bt_classic_update_before_jump_handle+0x2C : 1e01c9c >
 1e01cc2:    80 f3 fe e4       	call 117244 <__bt_updata_save_connection_info : 1e1e6c2 >			  ## testbox_update.c:56:13
 1e01cc6:    07 20             	if (r0 == 0) goto 14 <testbox_bt_classic_update_before_jump_handle+0x66 : 1e01cd6 >			  ## testbox_update.c:56:13
 1e01cc8:    c2 ff 0e 3d e1 01 	r2 = 31538446 <update_target_end+0xE86 : 1e13d0e >			  ## testbox_update.c:57:13
 1e01cce:    40 70             	r0 = 4			  ## testbox_update.c:57:13
 1e01cd0:    18 01             	{rets, r8-r4} = [sp++]			  ## testbox_update.c:57:13
 1e01cd2:    c0 f3 2a 6a       	goto 54356 <log_print : 1e0f12a >			  ## testbox_update.c:57:13
 1e01cd6:    84 17             	call -248 <ram_protect_close : 1e01be0 >			  ## testbox_update.c:61:9
 1e01cd8:    b3 17             	call -154 <power_set_mode : 1e01c40 >			  ## testbox_update.c:63:9
 1e01cda:    18 01             	{rets, r8-r4} = [sp++]			  ## testbox_update.c:64:9
 1e01cdc:    c0 f3 84 ea       	goto 120072 <update_code_start : 1e1f1e8 >			  ## testbox_update.c:64:9


ota_idle_query:
 1e01ce0:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## update.c:490:0
 1e01ce6:    51 60             	r1 = b[r0 + 5] (u)			  ## update.c:491:13
 1e01ce8:    10 70             	r0 = 1			  ## update.c:491:12
 1e01cea:    01 22             	if (r1 == 0) goto 2 <ota_idle_query+0xE : 1e01cee >			  ## update.c:491:12
 1e01cec:    00 70             	r0 = 0			  ## update.c:491:12
 1e01cee:    20 00             	rts			  ## update.c:491:5


app_update_init:
 1e01cf0:    34 00             	[--sp] = rets			  ## update.c:574:0
 1e01cf2:    80 f3 76 f3       	call 124652 <update_module_init : 1e203e2 >			  ## update.c:575:5
 1e01cf6:    c2 ff 3f 3d e1 01 	r2 = 31538495 <update_target_end+0xEB7 : 1e13d3f >			  ## testbox_update.c:248:9
 1e01cfc:    c3 ff b0 17 e0 01 	r3 = 31463344 <testbox_update_msg_handle : 1e017b0 >			  ## testbox_update.c:248:9
 1e01d02:    20 70             	r0 = 2			  ## testbox_update.c:248:9
 1e01d04:    80 f3 11 6a       	call 54306 <log_print : 1e0f12a >			  ## testbox_update.c:248:9
 1e01d08:    80 f3 3e b9       	call 94844 <btctrler_testbox_update_msg_handle_register : 1e18f88 >			  ## testbox_update.c:249:9
 1e01d0c:    00 70             	r0 = 0			  ## update.c:577:5
 1e01d0e:    30 00             	pc = [sp++]			  ## update.c:577:5


update_common_state_cbk:
 1e01d10:    78 01             	[--sp] = {rets, r8-r4}			  ## update.c:544:0
 1e01d12:    fc 0b             	sp += -8			  ## update.c:544:0
 1e01d14:    07 08             	r7 = r0			  ## update.c:544:0
 1e01d16:    06 4e             	r6 = [r7 + 0]			  ## update.c:545:22
 1e01d18:    25 08             	r5 = r2
 1e01d1a:    14 08             	r4 = r1
 1e01d1c:    1d 02             	[sp+4] = r5			  ## update.c:547:5
 1e01d1e:    c2 ff 75 3d e1 01 	r2 = 31538549 <update_target_end+0xEED : 1e13d75 >			  ## update.c:547:5
 1e01d24:    20 70             	r0 = 2			  ## update.c:547:5
 1e01d26:    0c 02             	[sp] = r4			  ## update.c:547:5
 1e01d28:    63 08             	r3 = r6			  ## update.c:547:5
 1e01d2a:    80 f3 fe 69       	call 54268 <log_print : 1e0f12a >			  ## update.c:547:5
 1e01d2e:    c8 ff b0 20 00 00 	r8 = 8368 <gatt_client_conn_handle : 20b0 >			  ## update.c:547:5
 1e01d34:    24 e0 0c 00       	if (r4 == 2) goto 24 <update_common_state_cbk+0x40 : 1e01d50 >			  ## update.c:549:5
 1e01d38:    14 e0 16 10       	if (r4 != 1) goto 44 <update_common_state_cbk+0x58 : 1e01d68 >
 1e01d3c:    80 fc 40 01       	r0 = r8 + 320			  ## update.c:551:9
 1e01d40:    01 70             	r1 = 0			  ## update.c:551:9
 1e01d42:    c2 70             	r2 = 12			  ## update.c:551:9
 1e01d44:    98 f3 d4 28       	call 3166632 <memset : 106ef0 >			  ## update.c:551:9
 1e01d48:    10 70             	r0 = 1			  ## update.c:512:16
 1e01d4a:    10 f9 05 80       	b[r8 + 5] = r0			  ## update.c:512:16
 1e01d4e:    0c 18             	goto 24 <update_common_state_cbk+0x58 : 1e01d68 >			  ## update.c:512:16
 1e01d50:    c2 ff a5 3d e1 01 	r2 = 31538597 <update_target_end+0xF1D : 1e13da5 >			  ## update.c:556:9
 1e01d56:    20 70             	r0 = 2			  ## update.c:556:9
 1e01d58:    80 f3 e7 69       	call 54222 <log_print : 1e0f12a >			  ## update.c:556:9
 1e01d5c:    80 fc 40 01       	r0 = r8 + 320			  ## update.c:557:9
 1e01d60:    c2 70             	r2 = 12			  ## update.c:557:9
 1e01d62:    51 08             	r1 = r5			  ## update.c:557:9
 1e01d64:    98 f3 be 28       	call 3166588 <memcpy : 106ee4 >			  ## update.c:557:9
 1e01d68:    13 4e             	r3 = [r7 + 4]			  ## update.c:561:15
 1e01d6a:    04 26             	if (r3 == 0) goto 8 <update_common_state_cbk+0x64 : 1e01d74 >			  ## update.c:561:15
 1e01d6c:    60 08             	r0 = r6			  ## update.c:562:9
 1e01d6e:    41 08             	r1 = r4			  ## update.c:562:9
 1e01d70:    52 08             	r2 = r5			  ## update.c:562:9
 1e01d72:    83 00             	call r3			  ## update.c:562:9
 1e01d74:    34 e0 03 10       	if (r4 != 3) goto 6 <update_common_state_cbk+0x6E : 1e01d7e >
 1e01d78:    00 70             	r0 = 0			  ## update.c:540:16
 1e01d7a:    10 f9 05 80       	b[r8 + 5] = r0			  ## update.c:540:16
 1e01d7e:    04 0a             	sp += 8
 1e01d80:    58 01             	{pc, r8-r4} = [sp++]			  ## update.c:570:1


update_result_get:
 1e01d82:    75 01             	[--sp] = {rets, r5, r4}			  ## update.c:92:0
 1e01d84:    c5 ff 60 fb 00 00 	r5 = 64352 <report_heap_end : fb60 >			  ## update.c:92:0
 1e01d8a:    a0 9a             	r0 = r5 + 10			  ## update.c:98:19
 1e01d8c:    e1 74             	r1 = 78			  ## update.c:98:19
 1e01d8e:    bf f3 0c fb       	call -2536 <CRC16 : 1e013aa >			  ## update.c:98:19
 1e01d92:    04 fb 00 5a       	r4 = 23040 <report_overlay_end+0x6B8 : 5a00 >			  ## update.c:98:19
 1e01d96:    04 20             	if (r0 == 0) goto 8 <update_result_get+0x1E : 1e01da0 >			  ## update.c:98:19
 1e01d98:    41 5a             	r1 = h[r5 + 8] (u)			  ## update.c:99:38
 1e01d9a:    10 f2 01 10       	if (r0 != r1) goto 2 <update_result_get+0x1E : 1e01da0 >			  ## update.c:99:38
 1e01d9e:    64 5a             	r4 = h[r5 + 12] (u)			  ## update.c:100:23
 1e01da0:    70 5a             	r0 = h[r5 + 14] (u)			  ## update.c:103:27
 1e01da2:    41 08             	r1 = r4			  ## update.c:103:23
 1e01da4:    d0 fd 80 10       	r1 <= insert(r0, p:16, l:16)			  ## update.c:103:23
 1e01da8:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## update.c:103:23
 1e01dae:    09 41             	[r0 + 64] = r1			  ## update.c:103:23
 1e01db0:    80 9a             	r0 = r5 + 8			  ## update.c:103:36
 1e01db2:    01 70             	r1 = 0			  ## update.c:105:9
 1e01db4:    02 75             	r2 = 80			  ## update.c:105:9
 1e01db6:    98 f3 9b 28       	call 3166518 <memset : 106ef0 >			  ## update.c:105:9
 1e01dba:    40 08             	r0 = r4			  ## update.c:108:5
 1e01dbc:    55 01             	{pc, r5, r4} = [sp++]			  ## update.c:108:5


__errno:
 1e01dbe:    c0 ff 74 1d 00 00 	r0 = 7540 <__errno.err : 1d74 >			  ## app_main.c:231:0
 1e01dc4:    20 00             	rts			  ## app_main.c:233:5


app_keyfob_idle_query:
 1e01dc6:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## app_keyfob.c:995:0
 1e01dcc:    61 60             	r1 = b[r0 + 6] (u)			  ## app_keyfob.c:996:13
 1e01dce:    10 70             	r0 = 1			  ## app_keyfob.c:996:12
 1e01dd0:    01 22             	if (r1 == 0) goto 2 <app_keyfob_idle_query+0xE : 1e01dd4 >			  ## app_keyfob.c:996:12
 1e01dd2:    00 70             	r0 = 0			  ## app_keyfob.c:996:12
 1e01dd4:    20 00             	rts			  ## app_keyfob.c:996:5


led_timer_stop:
 1e01dd6:    74 01             	[--sp] = {rets, r4}			  ## app_keyfob.c:428:0
 1e01dd8:    c4 ff 78 1d 00 00 	r4 = 7544 <led_timer_id : 1d78 >			  ## app_keyfob.c:428:0
 1e01dde:    00 48             	r0 = [r4 + 0]			  ## app_keyfob.c:429:9
 1e01de0:    0b 20             	if (r0 == 0) goto 22 <led_timer_stop+0x22 : 1e01df8 >			  ## app_keyfob.c:429:9
 1e01de2:    c2 ff 65 43 e1 01 	r2 = 31540069 <update_target_end+0x14DD : 1e14365 >			  ## app_keyfob.c:430:9
 1e01de8:    20 70             	r0 = 2			  ## app_keyfob.c:430:9
 1e01dea:    80 f3 9e 69       	call 54076 <log_print : 1e0f12a >			  ## app_keyfob.c:430:9
 1e01dee:    00 58             	r0 = h[r4 + 0] (u)			  ## app_keyfob.c:431:9
 1e01df0:    80 f3 49 78       	call 61586 <sys_timer_del : 1e10e86 >			  ## app_keyfob.c:431:9
 1e01df4:    c0 f4 00 49       	[r4 + 0] = 0			  ## app_keyfob.c:432:22
 1e01df8:    54 01             	{pc, r4} = [sp++]			  ## app_keyfob.c:434:1


timer1_resume:
 1e01dfa:    76 01             	[--sp] = {rets, r6-r4}			  ## timer.c:142:0
 1e01dfc:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## timer.c:142:0
 1e01e02:    01 f9 88 00       	r1 = b[r0 + 136] (u)			  ## timer.c:142:0
 1e01e06:    21 22             	if (r1 == 0) goto 66 <timer1_resume+0x50 : 1e01e4a >			  ## timer.c:142:0
 1e01e08:    f1 41             	r1 = [r0 + 124]			  ## timer.c:142:0
 1e01e0a:    02 fb e0 2e       	r2 = 12000 <lmp_acl_link+0xA8 : 2ee0 >			  ## timer.c:142:0
 1e01e0e:    8a 0e             	r2 = r1 * r2			  ## timer.c:142:0
 1e01e10:    01 70             	r1 = 0			  ## timer.c:142:0
 1e01e12:    c3 ff fc 5f e1 01 	r3 = 31547388 <timer_div.636 : 1e15ffc >			  ## timer.c:142:0
 1e01e18:    04 fb fd 7e       	r4 = 32509 <nvbss_size+0x13FD : 7efd >			  ## timer.c:142:0
 1e01e1c:    45 f6 04 30       	r5 = [r3 ++= 4]			  ## timer.c:151:64
 1e01e20:    c0 fe 50 52       	r5 = r2 / r5 (u)			  ## timer.c:151:62
 1e01e24:    56 fc ff fe       	r6 = r5 + -257			  ## timer.c:152:36
 1e01e28:    46 f2 03 90       	if (r6 <= r4) goto 6 <timer1_resume+0x38 : 1e01e32 >			  ## timer.c:152:36
 1e01e2c:    11 80             	r1 += 1			  ## timer.c:150:78
 1e01e2e:    f1 e0 f5 9f       	if (r1 <= 15) goto -22 <timer1_resume+0x22 : 1e01e1c >			  ## timer.c:150:78
 1e01e32:    00 f6 8c 00       	r0 = [r0 + 140]			  ## timer.c:159:30
 1e01e36:    c2 ff 00 05 1e 00 	r2 = 1967360 <uECC_vli_cmp_unsafe+0xD9504 : 1e0500 >			  ## timer.c:159:30
 1e01e3c:    18 44             	[r2 + 4] = r0			  ## timer.c:159:20
 1e01e3e:    2d 44             	[r2 + 8] = r5			  ## timer.c:161:20
 1e01e40:    08 c1             	r0 = r1 << 4			  ## timer.c:165:41
 1e01e42:    01 fb 01 14       	r1 = 5121 <_cpu0_sstack_begin+0x3B1 : 1401 >			  ## timer.c:165:47
 1e01e46:    50 b2             	r0 |= r1			  ## timer.c:165:47
 1e01e48:    08 44             	[r2 + 0] = r0			  ## timer.c:165:20
 1e01e4a:    56 01             	{pc, r6-r4} = [sp++]			  ## timer.c:169:1


timer1_run:
 1e01e4c:    34 00             	[--sp] = rets			  ## timer.c:221:0
 1e01e4e:    c1 ff b0 20 00 00 	r1 = 8368 <gatt_client_conn_handle : 20b0 >			  ## timer.c:221:0
 1e01e54:    f2 43             	r2 = [r1 + 124]			  ## timer.c:222:17
 1e01e56:    02 f2 0d 00       	if (r2 == r0) goto 26 <timer1_run+0x28 : 1e01e74 >			  ## timer.c:222:17
 1e01e5a:    c2 ff 00 05 1e 00 	r2 = 1967360 <uECC_vli_cmp_unsafe+0xD9504 : 1e0500 >			  ## timer.c:228:20
 1e01e60:    c0 f4 40 2a       	[r2 + 0] = 16384			  ## timer.c:228:20
 1e01e64:    f8 43             	[r1 + 124] = r0			  ## timer.c:230:25
 1e01e66:    10 70             	r0 = 1			  ## timer.c:230:25
 1e01e68:    10 f9 88 10       	b[r1 + 136] = r0
 1e01e6c:    00 70             	r0 = 0
 1e01e6e:    10 f6 8c 10       	[r1 + 140] = r0			  ## timer.c:234:25
 1e01e72:    c3 17             	call -122 <timer1_resume : 1e01dfa >			  ## timer.c:236:5
 1e01e74:    30 00             	pc = [sp++]			  ## timer.c:237:1


led_timer_start:
 1e01e76:    74 01             	[--sp] = {rets, r4}			  ## app_keyfob.c:437:0
 1e01e78:    04 08             	r4 = r0			  ## app_keyfob.c:437:0
 1e01e7a:    ad 17             	call -166 <led_timer_stop : 1e01dd6 >			  ## app_keyfob.c:438:5
 1e01e7c:    c2 ff 86 43 e1 01 	r2 = 31540102 <update_target_end+0x14FE : 1e14386 >			  ## app_keyfob.c:439:5
 1e01e82:    20 70             	r0 = 2			  ## app_keyfob.c:439:5
 1e01e84:    43 08             	r3 = r4			  ## app_keyfob.c:439:5
 1e01e86:    80 f3 50 69       	call 53920 <log_print : 1e0f12a >			  ## app_keyfob.c:439:5
 1e01e8a:    c1 ff 08 2c e0 01 	r1 = 31468552 <led_timer_handle : 1e02c08 >			  ## app_keyfob.c:441:20
 1e01e90:    00 70             	r0 = 0			  ## app_keyfob.c:441:20
 1e01e92:    42 08             	r2 = r4			  ## app_keyfob.c:441:20
 1e01e94:    80 f3 af 78       	call 61790 <sys_timer_add : 1e10ff6 >			  ## app_keyfob.c:441:20
 1e01e98:    c1 ff 78 1d 00 00 	r1 = 7544 <led_timer_id : 1d78 >			  ## app_keyfob.c:441:18
 1e01e9e:    08 42             	[r1 + 0] = r0			  ## app_keyfob.c:441:18
 1e01ea0:    54 01             	{pc, r4} = [sp++]			  ## app_keyfob.c:442:1


usb_output:
 1e01ea2:    c2 ff 00 54 1e 00 	r2 = 1987584 <uECC_vli_cmp_unsafe+0xDE404 : 1e5400 >			  ## gpio.c:121:0
 1e01ea8:    20 e0 08 30       	if (r0 < 2) goto 16 <usb_output+0x1A : 1e01ebc >			  ## gpio.c:122:9
 1e01eac:    e0 8f             	r0 += -2			  ## gpio.c:123:14
 1e01eae:    13 70             	r3 = 1			  ## gpio.c:123:14
 1e01eb0:    f8 fd 00 03       	r0 = r3 << r0			  ## gpio.c:123:14
 1e01eb4:    0a 22             	if (r1 == 0) goto 20 <usb_output+0x28 : 1e01eca >			  ## gpio.c:124:13
 1e01eb6:    91 44             	r1 = [r2 + 36]			  ## gpio.c:125:30
 1e01eb8:    50 b2             	r0 |= r1			  ## gpio.c:125:30
 1e01eba:    0a 18             	goto 20 <usb_output+0x2E : 1e01ed0 >			  ## gpio.c:125:30
 1e01ebc:    13 70             	r3 = 1
 1e01ebe:    f8 fd 00 03       	r0 = r3 << r0
 1e01ec2:    08 22             	if (r1 == 0) goto 16 <usb_output+0x32 : 1e01ed4 >			  ## gpio.c:131:13
 1e01ec4:    01 44             	r1 = [r2 + 0]			  ## gpio.c:132:29
 1e01ec6:    50 b2             	r0 |= r1			  ## gpio.c:132:29
 1e01ec8:    08 18             	goto 16 <usb_output+0x38 : 1e01eda >			  ## gpio.c:132:29
 1e01eca:    91 44             	r1 = [r2 + 36]			  ## gpio.c:127:30
 1e01ecc:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:127:30
 1e01ed0:    98 44             	[r2 + 36] = r0
 1e01ed2:    20 00             	rts
 1e01ed4:    01 44             	r1 = [r2 + 0]			  ## gpio.c:134:29
 1e01ed6:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:134:29
 1e01eda:    08 44             	[r2 + 0] = r0
 1e01edc:    20 00             	rts


gpio_set_output_value:
 1e01ede:    10 e3 02 30       	if (r0 < 49) goto 4 <gpio_set_output_value+0x8 : 1e01ee6 >			  ## gpio.c:289:0
 1e01ee2:    f0 8c             	r0 += -49			  ## gpio.c:295:29
 1e01ee4:    de 1f             	goto -68 <usb_output : 1e01ea2 >			  ## gpio.c:295:13
 1e01ee6:    82 d0             	r2 = r0 >> 2			  ## gpio.c:50:31
 1e01ee8:    c3 ff fc ff ff 3f 	r3 = 1073741820 <bank_code_load_addr+0x1DCA04 : 1fffffc >			  ## gpio.c:50:46
 1e01eee:    52 b7             	r2 &= r3			  ## gpio.c:50:46
 1e01ef0:    c3 ff bc 64 e1 01 	r3 = 31548604 <gpio_regs : 1e164bc >			  ## gpio.c:50:31
 1e01ef6:    82 f6 00 23       	r2 = [r2+r3]			  ## gpio.c:50:31
 1e01efa:    0e 24             	if (r2 == 0) goto 28 <gpio_set_output_value+0x3A : 1e01f18 >
 1e01efc:    20 fd 0f 09       	r0 = r0 & 15			  ## gpio.c:307:12
 1e01f00:    13 70             	r3 = 1			  ## gpio.c:307:12
 1e01f02:    f8 fd 00 03       	r0 = r3 << r0			  ## gpio.c:307:12
 1e01f06:    11 e0 03 10       	if (r1 != 1) goto 6 <gpio_set_output_value+0x32 : 1e01f10 >			  ## gpio.c:310:9
 1e01f0a:    01 44             	r1 = [r2 + 0]			  ## gpio.c:311:16
 1e01f0c:    50 b2             	r0 |= r1			  ## gpio.c:311:16
 1e01f0e:    03 18             	goto 6 <gpio_set_output_value+0x38 : 1e01f16 >
 1e01f10:    01 44             	r1 = [r2 + 0]			  ## gpio.c:313:16
 1e01f12:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:313:16
 1e01f16:    08 44             	[r2 + 0] = r0
 1e01f18:    20 00             	rts


led_pin_set_disable:
 1e01f1a:    74 01             	[--sp] = {rets, r4}			  ## pwm_led.c:281:0
 1e01f1c:    04 08             	r4 = r0			  ## pwm_led.c:281:0
 1e01f1e:    01 70             	r1 = 0			  ## pwm_led.c:283:5
 1e01f20:    bf f3 1c f3       	call -6600 <gpio_set_pull_up : 1e0055c >			  ## pwm_led.c:283:5
 1e01f24:    40 08             	r0 = r4			  ## pwm_led.c:284:5
 1e01f26:    bf f3 d1 f3       	call -6238 <gpio_direction_input : 1e006cc >			  ## pwm_led.c:284:5
 1e01f2a:    01 70             	r1 = 0			  ## pwm_led.c:285:5
 1e01f2c:    40 08             	r0 = r4			  ## pwm_led.c:285:5
 1e01f2e:    bf f3 f8 f2       	call -6672 <gpio_set_pull_down : 1e00522 >			  ## pwm_led.c:285:5
 1e01f32:    01 70             	r1 = 0			  ## pwm_led.c:286:5
 1e01f34:    40 08             	r0 = r4			  ## pwm_led.c:286:5
 1e01f36:    d3 17             	call -90 <gpio_set_output_value : 1e01ede >			  ## pwm_led.c:286:5
 1e01f38:    01 70             	r1 = 0			  ## pwm_led.c:287:5
 1e01f3a:    40 08             	r0 = r4			  ## pwm_led.c:287:5
 1e01f3c:    14 01             	{rets, r4} = [sp++]			  ## pwm_led.c:287:5
 1e01f3e:    ff f3 f2 f3       	goto -6172 <gpio_set_die : 1e00726 >			  ## pwm_led.c:287:5


gpio_set_direction:
 1e01f42:    10 e3 03 30       	if (r0 < 49) goto 6 <gpio_set_direction+0xA : 1e01f4c >			  ## gpio.c:256:0
 1e01f46:    f0 8c             	r0 += -49			  ## gpio.c:262:36
 1e01f48:    ff f3 41 f3       	goto -6526 <usb_set_direction : 1e005ce >			  ## gpio.c:262:13
 1e01f4c:    82 d0             	r2 = r0 >> 2			  ## gpio.c:50:31
 1e01f4e:    c3 ff fc ff ff 3f 	r3 = 1073741820 <bank_code_load_addr+0x1DCA04 : 1fffffc >			  ## gpio.c:50:46
 1e01f54:    52 b7             	r2 &= r3			  ## gpio.c:50:46
 1e01f56:    c3 ff bc 64 e1 01 	r3 = 31548604 <gpio_regs : 1e164bc >			  ## gpio.c:50:31
 1e01f5c:    82 f6 00 23       	r2 = [r2+r3]			  ## gpio.c:50:31
 1e01f60:    0d 24             	if (r2 == 0) goto 26 <gpio_set_direction+0x3A : 1e01f7c >
 1e01f62:    20 fd 0f 09       	r0 = r0 & 15			  ## gpio.c:274:12
 1e01f66:    13 70             	r3 = 1			  ## gpio.c:274:12
 1e01f68:    f8 fd 00 03       	r0 = r3 << r0			  ## gpio.c:274:12
 1e01f6c:    03 22             	if (r1 == 0) goto 6 <gpio_set_direction+0x32 : 1e01f74 >			  ## gpio.c:277:9
 1e01f6e:    21 44             	r1 = [r2 + 8]			  ## gpio.c:278:16
 1e01f70:    50 b2             	r0 |= r1			  ## gpio.c:278:16
 1e01f72:    03 18             	goto 6 <gpio_set_direction+0x38 : 1e01f7a >
 1e01f74:    21 44             	r1 = [r2 + 8]			  ## gpio.c:280:16
 1e01f76:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:280:16
 1e01f7a:    28 44             	[r2 + 8] = r0
 1e01f7c:    20 00             	rts


led_pin_set_enable:
 1e01f7e:    76 01             	[--sp] = {rets, r6-r4}			  ## pwm_led.c:263:0
 1e01f80:    04 08             	r4 = r0			  ## pwm_led.c:263:0
 1e01f82:    98 f3 0b 27       	call 3165718 <local_irq_disable : 106d9c >			  ## pwm_led.c:265:5
 1e01f86:    08 00             	csync			  ## pwm_led.c:265:5
 1e01f88:    c5 ff 00 55 1e 00 	r5 = 1987840 <uECC_vli_cmp_unsafe+0xDE504 : 1e5500 >			  ## pwm_led.c:265:5
 1e01f8e:    06 4a             	r6 = [r5 + 0]			  ## pwm_led.c:266:14
 1e01f90:    00 4a             	r0 = [r5 + 0]			  ## pwm_led.c:267:5
 1e01f92:    70 b0             	r0 &= 4294967294			  ## pwm_led.c:267:5
 1e01f94:    08 4a             	[r5 + 0] = r0			  ## pwm_led.c:267:5
 1e01f96:    11 70             	r1 = 1			  ## pwm_led.c:268:5
 1e01f98:    40 08             	r0 = r4			  ## pwm_led.c:268:5
 1e01f9a:    bf f3 c2 f2       	call -6780 <gpio_set_pull_down : 1e00522 >			  ## pwm_led.c:268:5
 1e01f9e:    11 70             	r1 = 1			  ## pwm_led.c:269:5
 1e01fa0:    40 08             	r0 = r4			  ## pwm_led.c:269:5
 1e01fa2:    bf f3 c0 f3       	call -6272 <gpio_set_die : 1e00726 >			  ## pwm_led.c:269:5
 1e01fa6:    01 70             	r1 = 0			  ## pwm_led.c:270:5
 1e01fa8:    40 08             	r0 = r4			  ## pwm_led.c:270:5
 1e01faa:    cb 17             	call -106 <gpio_set_direction : 1e01f42 >			  ## pwm_led.c:270:5
 1e01fac:    11 70             	r1 = 1			  ## pwm_led.c:271:5
 1e01fae:    40 08             	r0 = r4			  ## pwm_led.c:271:5
 1e01fb0:    bf f3 d4 f2       	call -6744 <gpio_set_pull_up : 1e0055c >			  ## pwm_led.c:271:5
 1e01fb4:    11 70             	r1 = 1			  ## pwm_led.c:272:5
 1e01fb6:    40 08             	r0 = r4			  ## pwm_led.c:272:5
 1e01fb8:    92 17             	call -220 <gpio_set_output_value : 1e01ede >			  ## pwm_led.c:272:5
 1e01fba:    00 f3 02 60       	if ((r6 & 1) == 0) goto 4 <led_pin_set_enable+0x44 : 1e01fc2 >			  ## pwm_led.c:272:5
 1e01fbe:    00 f4 01 59       	[r5 + 0] |= 1			  ## pwm_led.c:274:9
 1e01fc2:    16 01             	{rets, r6-r4} = [sp++]			  ## pwm_led.c:276:5
 1e01fc4:    d8 f3 e8 26       	goto 3165648 <local_irq_enable : 106d98 >			  ## pwm_led.c:276:5


_led_pwm0_clk_set:
 1e01fc8:    c1 ff b0 20 00 00 	r1 = 8368 <gatt_client_conn_handle : 20b0 >			  ## pwm_led.c:405:0
 1e01fce:    02 f9 c6 11       	r2 = b[r1 + 454] (u)			  ## pwm_led.c:408:17
 1e01fd2:    22 e0 04 00       	if (r2 == 2) goto 8 <_led_pwm0_clk_set+0x16 : 1e01fde >			  ## pwm_led.c:408:9
 1e01fd6:    01 70             	r1 = 0
 1e01fd8:    09 34             	if (r2 != 0) goto 18 <_led_pwm0_clk_set+0x24 : 1e01fec >
 1e01fda:    10 30             	if (r0 != 0) goto 32 <_led_pwm0_clk_set+0x34 : 1e01ffc >
 1e01fdc:    07 18             	goto 14 <_led_pwm0_clk_set+0x24 : 1e01fec >
 1e01fde:    10 e0 04 00       	if (r0 == 1) goto 8 <_led_pwm0_clk_set+0x22 : 1e01fea >
 1e01fe2:    20 e0 0b 10       	if (r0 != 2) goto 22 <_led_pwm0_clk_set+0x34 : 1e01ffc >
 1e01fe6:    01 79             	r1 = 144
 1e01fe8:    01 18             	goto 2 <_led_pwm0_clk_set+0x24 : 1e01fec >
 1e01fea:    01 7c             	r1 = 192
 1e01fec:    c0 ff 00 55 1e 00 	r0 = 1987840 <uECC_vli_cmp_unsafe+0xDE504 : 1e5500 >
 1e01ff2:    02 40             	r2 = [r0 + 0]			  ## pwm_led.c:441:5
 1e01ff4:    32 fd f0 29       	r2 = r2 & 4294967055			  ## pwm_led.c:441:5
 1e01ff8:    51 b4             	r1 |= r2			  ## pwm_led.c:441:5
 1e01ffa:    09 40             	[r0 + 0] = r1			  ## pwm_led.c:441:5
 1e01ffc:    20 00             	rts


keyfob_set_soft_poweroff:
 1e01ffe:    75 01             	[--sp] = {rets, r5, r4}			  ## app_keyfob.c:636:0
 1e02000:    fe 0b             	sp += -4			  ## app_keyfob.c:636:0
 1e02002:    c2 ff 54 42 e1 01 	r2 = 31539796 <update_target_end+0x13CC : 1e14254 >			  ## app_keyfob.c:637:5
 1e02008:    20 70             	r0 = 2			  ## app_keyfob.c:637:5
 1e0200a:    80 f3 8e 68       	call 53532 <log_print : 1e0f12a >			  ## app_keyfob.c:637:5
 1e0200e:    c4 ff b0 20 00 00 	r4 = 8368 <gatt_client_conn_handle : 20b0 >			  ## app_keyfob.c:637:5
 1e02014:    10 70             	r0 = 1			  ## app_keyfob.c:638:19
 1e02016:    68 68             	b[r4 + 6] = r0			  ## app_keyfob.c:638:19
 1e02018:    00 70             	r0 = 0			  ## app_comm_ble.c:126:5
 1e0201a:    05 70             	r5 = 0			  ## app_comm_ble.c:126:5
 1e0201c:    45 14             	call -1910 <ble_module_enable : 1e018a8 >			  ## app_comm_ble.c:126:5
 1e0201e:    c0 ff 6d 4b e1 01 	r0 = 31542125 <update_target_end+0x1CE5 : 1e14b6d >			  ## ble_hogp.c:1204:5
 1e02024:    80 f3 51 68       	call 53410 <printf : 1e0f0ca >			  ## ble_hogp.c:1204:5
 1e02028:    c0 ff d3 4a e1 01 	r0 = 31541971 <update_target_end+0x1C4B : 1e14ad3 >			  ## ble_hogp.c:1209:5
 1e0202e:    c1 ff 8e 4b e1 01 	r1 = 31542158 <update_target_end+0x1D06 : 1e14b8e >			  ## ble_hogp.c:1209:5
 1e02034:    80 f3 49 68       	call 53394 <printf : 1e0f0ca >			  ## ble_hogp.c:1209:5
 1e02038:    00 70             	r0 = 0			  ## ble_hogp.c:1210:5
 1e0203a:    36 14             	call -1940 <ble_module_enable : 1e018a8 >			  ## ble_hogp.c:1210:5
 1e0203c:    c2 ff 90 30 e1 01 	r2 = 31535248 <update_target_end+0x208 : 1e13090 >			  ## le_gatt_common.c:919:5
 1e02042:    c3 ff c5 33 e1 01 	r3 = 31536069 <update_target_end+0x53D : 1e133c5 >			  ## le_gatt_common.c:919:5
 1e02048:    20 70             	r0 = 2			  ## le_gatt_common.c:919:5
 1e0204a:    80 f3 6e 68       	call 53468 <log_print : 1e0f12a >			  ## le_gatt_common.c:919:5
 1e0204e:    c2 ff b6 3a e1 01 	r2 = 31537846 <update_target_end+0xC2E : 1e13ab6 >			  ## le_gatt_server.c:969:5
 1e02054:    c3 ff 3a 3c e1 01 	r3 = 31538234 <update_target_end+0xDB2 : 1e13c3a >			  ## le_gatt_server.c:969:5
 1e0205a:    20 70             	r0 = 2			  ## le_gatt_server.c:969:5
 1e0205c:    80 f3 65 68       	call 53450 <log_print : 1e0f12a >			  ## le_gatt_server.c:969:5
 1e02060:    00 70             	r0 = 0			  ## le_gatt_server.c:970:5
 1e02062:    bf f3 d6 fb       	call -2132 <ble_gatt_server_module_enable : 1e01812 >			  ## le_gatt_server.c:970:5
 1e02066:    e0 48             	r0 = [r4 + 56]			  ## le_gatt_common.c:929:9
 1e02068:    0b 20             	if (r0 == 0) goto 22 <keyfob_set_soft_poweroff+0x82 : 1e02080 >			  ## le_gatt_common.c:929:9
 1e0206a:    80 71             	r0 = 24			  ## le_gatt_common.c:930:9
 1e0206c:    31 70             	r1 = 3			  ## le_gatt_common.c:930:9
 1e0206e:    02 70             	r2 = 0			  ## le_gatt_common.c:930:9
 1e02070:    03 70             	r3 = 0			  ## le_gatt_common.c:930:9
 1e02072:    0d 02             	[sp] = r5			  ## le_gatt_common.c:930:9
 1e02074:    80 f3 01 30       	call 24578 <ble_user_cmd_prepare : 1e0807a >			  ## le_gatt_common.c:930:9
 1e02078:    e0 48             	r0 = [r4 + 56]			  ## le_gatt_common.c:931:14
 1e0207a:    80 f3 c7 6c       	call 55694 <free : 1e0fa0c >			  ## le_gatt_common.c:931:9
 1e0207e:    ed 48             	[r4 + 56] = r5			  ## le_gatt_common.c:932:25
 1e02080:    c2 ff 8b 44 e1 01 	r2 = 31540363 <update_target_end+0x1603 : 1e1448b >			  ## app_comm_ble.c:130:5
 1e02086:    20 70             	r0 = 2			  ## app_comm_ble.c:130:5
 1e02088:    80 f3 4f 68       	call 53406 <log_print : 1e0f12a >			  ## app_comm_ble.c:130:5
 1e0208c:    80 f3 9b 31       	call 25398 <btstack_exit : 1e083c6 >			  ## app_comm_ble.c:131:5
 1e02090:    c1 ff 56 38 e0 01 	r1 = 31471702 <power_set_soft_poweroff : 1e03856 >			  ## app_keyfob.c:648:5
 1e02096:    00 70             	r0 = 0			  ## app_keyfob.c:648:5
 1e02098:    02 fb 2c 01       	r2 = 300 <DRIVER_RAM_TOTAL+0x3A : 12c >			  ## app_keyfob.c:648:5
 1e0209c:    80 f3 44 78       	call 61576 <sys_timeout_add : 1e11128 >			  ## app_keyfob.c:648:5
 1e020a0:    02 0a             	sp += 4			  ## app_keyfob.c:648:5
 1e020a2:    55 01             	{pc, r5, r4} = [sp++]			  ## app_keyfob.c:652:1


led_on_off:
 1e020a4:    76 01             	[--sp] = {rets, r6-r4}			  ## app_keyfob.c:289:0
 1e020a6:    fe 0b             	sp += -4			  ## app_keyfob.c:289:0
 1e020a8:    c5 ff b0 20 00 00 	r5 = 8368 <gatt_client_conn_handle : 20b0 >			  ## app_keyfob.c:289:0
 1e020ae:    83 6a             	r3 = b[r5 + 8] (u)			  ## app_keyfob.c:293:9
 1e020b0:    04 08             	r4 = r0			  ## app_keyfob.c:293:9
 1e020b2:    c2 ff 19 43 e1 01 	r2 = 31539993 <update_target_end+0x1491 : 1e14319 >			  ## app_keyfob.c:293:9
 1e020b8:    20 70             	r0 = 2			  ## app_keyfob.c:293:9
 1e020ba:    0c 02             	[sp] = r4			  ## app_keyfob.c:293:9
 1e020bc:    80 f3 35 68       	call 53354 <log_print : 1e0f12a >			  ## app_keyfob.c:293:9
 1e020c0:    8c 6a             	b[r5 + 8] = r4			  ## app_keyfob.c:294:19
 1e020c2:    01 70             	r1 = 0			  ## app_keyfob.c:294:19
 1e020c4:    40 fc ff ff       	r0 = r4 + -1			  ## app_keyfob.c:297:9
 1e020c8:    99 6a             	b[r5 + 9] = r1			  ## app_keyfob.c:295:22
 1e020ca:    70 e0 2e 80       	if (r0 > 7) goto 92 <.GJTIE246_0_0_+0x42 : 1e0212a >			  ## app_keyfob.c:297:9
 1e020ce:    41 c0             	r1 = r0 << 1
 1e020d0:    c4 ff 00 50 1e 00 	r4 = 1986560 <uECC_vli_cmp_unsafe+0xDE004 : 1e5000 >
 1e020d6:    b1 00             	tbh [r1]


.GJTIL246_0_0_:
 1e020d8:    08 00     < 8 : 0x8 >
 1e020da:    31 00     < 49 : 0x31 >
 1e020dc:    5e 00     < 94 : 0x5E >
 1e020de:    66 00     < 102 : 0x66 >
 1e020e0:    6b 00     < 107 : 0x6B >
 1e020e2:    70 00     < 112 : 0x70 >
 1e020e4:    7c 00     < 124 : 0x7C >
 1e020e6:    86 00     < 134 : 0x86 >
 1e020e8:    80 48             	r0 = [r4 + 32]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:858:17
 1e020ea:    f0 b4             	r0 &= 4294966783			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:858:17
 1e020ec:    88 48             	[r4 + 32] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:858:17
 1e020ee:    03 f4 02 4a       	[r4 + 12] |= 512			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:825:16
 1e020f2:    50 48             	r0 = [r4 + 20]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:680:15
 1e020f4:    f0 b4             	r0 &= 4294966783			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:680:15
 1e020f6:    58 48             	[r4 + 20] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:680:15
 1e020f8:    40 48             	r0 = [r4 + 16]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:594:15
 1e020fa:    f0 b4             	r0 &= 4294966783			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:594:15
 1e020fc:    48 48             	[r4 + 16] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:594:15
 1e020fe:    26 70             	r6 = 2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:594:15
 1e02100:    2e 4b             	[r5 + 72] = r6			  ## app_keyfob.c:300:31
 1e02102:    00 fb e8 03       	r0 = 1000 <BTCTLER_LE_RAM_TOTAL+0xA : 3e8 >			  ## app_keyfob.c:301:13
 1e02106:    b7 16             	call -658 <led_timer_start : 1e01e76 >			  ## app_keyfob.c:301:13
 1e02108:    ae 6a             	b[r5 + 10] = r6			  ## app_keyfob.c:302:28
 1e0210a:    00 f4 02 4a       	[r4 + 0] |= 512			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:432:16
 1e0210e:    20 48             	r0 = [r4 + 8]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:436:12
 1e02110:    f0 b4             	r0 &= 4294966783			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:436:12
 1e02112:    28 48             	[r4 + 8] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:436:12
 1e02114:    10 5b             	r0 = h[r5 + 34] (u)			  ## app_keyfob.c:304:18
 1e02116:    5a 30             	if (r0 != 0) goto 180 <.GJTIE246_0_0_+0xE4 : 1e021cc >			  ## app_keyfob.c:304:18
 1e02118:    c1 ff b8 2b e0 01 	r1 = 31468472 <io_check_timer_handle : 1e02bb8 >			  ## app_keyfob.c:305:34
 1e0211e:    00 70             	r0 = 0			  ## app_keyfob.c:305:34
 1e02120:    f2 70             	r2 = 15			  ## app_keyfob.c:305:34
 1e02122:    80 f3 f6 77       	call 61420 <usr_timer_add : 1e11112 >			  ## app_keyfob.c:305:34
 1e02126:    18 5b             	h[r5 + 34] = r0			  ## app_keyfob.c:305:32
 1e02128:    51 18             	goto 162 <.GJTIE246_0_0_+0xE4 : 1e021cc >			  ## app_keyfob.c:305:32
 1e0212a:    c2 ff 3e 43 e1 01 	r2 = 31540030 <update_target_end+0x14B6 : 1e1433e >			  ## app_keyfob.c:390:13
 1e02130:    40 70             	r0 = 4			  ## app_keyfob.c:390:13
 1e02132:    43 08             	r3 = r4			  ## app_keyfob.c:390:13
 1e02134:    80 f3 f9 67       	call 53234 <log_print : 1e0f12a >			  ## app_keyfob.c:390:13
 1e02138:    49 18             	goto 146 <.GJTIE246_0_0_+0xE4 : 1e021cc >			  ## app_keyfob.c:390:13
 1e0213a:    00 fb 40 01       	r0 = 320 <DRIVER_RAM_TOTAL+0x4E : 140 >			  ## app_keyfob.c:312:31
 1e0213e:    28 4b             	[r5 + 72] = r0			  ## app_keyfob.c:312:31
 1e02140:    00 fb f4 01       	r0 = 500 <BTCTLER_CL_RAM_TOTAL+0x10 : 1f4 >			  ## app_keyfob.c:313:13
 1e02144:    98 16             	call -720 <led_timer_start : 1e01e76 >			  ## app_keyfob.c:313:13
 1e02146:    10 78             	r0 = 129			  ## app_keyfob.c:320:26
 1e02148:    98 6a             	b[r5 + 9] = r0			  ## app_keyfob.c:320:26
 1e0214a:    00 70             	r0 = 0			  ## app_keyfob.c:320:26
 1e0214c:    51 fc c8 01       	r1 = r5 + 456
 1e02150:    18 42             	[r1 + 4] = r0			  ## pwm_led.c:325:32
 1e02152:    28 42             	[r1 + 8] = r0			  ## pwm_led.c:326:31
 1e02154:    44 fc 00 05       	r4 = r4 + 1280			  ## pwm_led.c:326:31
 1e02158:    30 48             	r0 = [r4 + 12]			  ## pwm_led.c:327:5
 1e0215a:    f0 b2             	r0 &= 4294967263			  ## pwm_led.c:327:5
 1e0215c:    38 48             	[r4 + 12] = r0			  ## pwm_led.c:327:5
 1e0215e:    00 42             	r0 = [r1 + 0]			  ## pwm_led.c:1551:17
 1e02160:    01 40             	r1 = [r0 + 0]			  ## pwm_led.c:1551:28
 1e02162:    11 e0 10 10       	if (r1 != 1) goto 32 <.GJTIE246_0_0_+0x9E : 1e02186 >			  ## pwm_led.c:1551:28
 1e02166:    01 48             	r1 = [r4 + 0]			  ## pwm_led.c:450:5
 1e02168:    71 b0             	r1 &= 4294967294			  ## pwm_led.c:450:5
 1e0216a:    09 48             	[r4 + 0] = r1			  ## pwm_led.c:450:5
 1e0216c:    01 48             	r1 = [r4 + 0]			  ## pwm_led.c:451:5
 1e0216e:    f1 b0             	r1 &= 4294967293			  ## pwm_led.c:451:5
 1e02170:    09 48             	[r4 + 0] = r1			  ## pwm_led.c:451:5
 1e02172:    40 60             	r0 = b[r0 + 4] (u)			  ## pwm_led.c:770:5
 1e02174:    d2 16             	call -604 <led_pin_set_disable : 1e01f1a >			  ## pwm_led.c:770:5
 1e02176:    00 f6 c8 51       	r0 = [r5 + 456]			  ## pwm_led.c:771:33
 1e0217a:    50 60             	r0 = b[r0 + 5] (u)			  ## pwm_led.c:771:5
 1e0217c:    ce 16             	call -612 <led_pin_set_disable : 1e01f1a >			  ## pwm_led.c:771:5
 1e0217e:    00 f6 c8 51       	r0 = [r5 + 456]			  ## pwm_led.c:776:36
 1e02182:    50 60             	r0 = b[r0 + 5] (u)			  ## pwm_led.c:776:9
 1e02184:    fc 16             	call -520 <led_pin_set_enable : 1e01f7e >			  ## pwm_led.c:776:9
 1e02186:    00 f9 c6 51       	r0 = b[r5 + 454] (u)			  ## pwm_led.c:1029:17
 1e0218a:    3c 20             	if (r0 == 0) goto 120 <.GJTIE246_0_0_+0x11C : 1e02204 >			  ## pwm_led.c:1029:17
 1e0218c:    10 70             	r0 = 1			  ## pwm_led.c:1034:13
 1e0218e:    1c 17             	call -456 <_led_pwm0_clk_set : 1e01fc8 >			  ## pwm_led.c:1034:13
 1e02190:    60 7b             	r0 = 182			  ## pwm_led.c:1034:13
 1e02192:    3b 18             	goto 118 <.GJTIE246_0_0_+0x122 : 1e0220a >			  ## pwm_led.c:1034:13
 1e02194:    d2 f4 01 59       	[r5 + 72] = 1			  ## app_keyfob.c:326:31
 1e02198:    00 fb 40 1f       	r0 = 8000 <timer_pool+0x9C : 1f40 >			  ## app_keyfob.c:327:13
 1e0219c:    6c 16             	call -808 <led_timer_start : 1e01e76 >			  ## app_keyfob.c:327:13
 1e0219e:    20 70             	r0 = 2			  ## app_keyfob.c:328:28
 1e021a0:    a8 6a             	b[r5 + 10] = r0			  ## app_keyfob.c:328:28
 1e021a2:    0f 18             	goto 30 <.GJTIE246_0_0_+0xDA : 1e021c2 >			  ## app_keyfob.c:328:28
 1e021a4:    d2 f4 01 59       	[r5 + 72] = 1			  ## app_keyfob.c:333:31
 1e021a8:    00 fb 2c 01       	r0 = 300 <DRIVER_RAM_TOTAL+0x3A : 12c >			  ## app_keyfob.c:334:13
 1e021ac:    09 18             	goto 18 <.GJTIE246_0_0_+0xD8 : 1e021c0 >			  ## app_keyfob.c:334:13
 1e021ae:    d2 f4 04 59       	[r5 + 72] = 4			  ## app_keyfob.c:360:31
 1e021b2:    00 fb f4 01       	r0 = 500 <BTCTLER_CL_RAM_TOTAL+0x10 : 1f4 >			  ## app_keyfob.c:361:13
 1e021b6:    04 18             	goto 8 <.GJTIE246_0_0_+0xD8 : 1e021c0 >			  ## app_keyfob.c:361:13
 1e021b8:    d2 f4 01 59       	[r5 + 72] = 1			  ## app_keyfob.c:346:31
 1e021bc:    00 fb 8a 02       	r0 = 650 <BTCTLER_CL_RAM_TOTAL+0xA6 : 28a >			  ## app_keyfob.c:347:13
 1e021c0:    5a 16             	call -844 <led_timer_start : 1e01e76 >
 1e021c2:    00 f4 02 4a       	[r4 + 0] |= 512
 1e021c6:    20 48             	r0 = [r4 + 8]
 1e021c8:    f0 b4             	r0 &= 4294966783
 1e021ca:    28 48             	[r4 + 8] = r0
 1e021cc:    02 0a             	sp += 4
 1e021ce:    56 01             	{pc, r6-r4} = [sp++]			  ## app_keyfob.c:395:1
 1e021d0:    00 48             	r0 = [r4 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:434:16
 1e021d2:    f0 b4             	r0 &= 4294966783			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:434:16
 1e021d4:    08 48             	[r4 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:434:16
 1e021d6:    20 48             	r0 = [r4 + 8]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:436:12
 1e021d8:    f0 b4             	r0 &= 4294966783			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:436:12
 1e021da:    28 48             	[r4 + 8] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:436:12
 1e021dc:    d2 f4 00 59       	[r5 + 72] = 0			  ## app_keyfob.c:374:31
 1e021e0:    fa 15             	call -1036 <led_timer_stop : 1e01dd6 >			  ## app_keyfob.c:375:13
 1e021e2:    f4 1f             	goto -24 <.GJTIE246_0_0_+0xE4 : 1e021cc >			  ## app_keyfob.c:375:13
 1e021e4:    00 48             	r0 = [r4 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:434:16
 1e021e6:    f0 b4             	r0 &= 4294966783			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:434:16
 1e021e8:    08 48             	[r4 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:434:16
 1e021ea:    20 48             	r0 = [r4 + 8]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:436:12
 1e021ec:    f0 b4             	r0 &= 4294966783			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:436:12
 1e021ee:    28 48             	[r4 + 8] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:436:12
 1e021f0:    04 70             	r4 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:436:12
 1e021f2:    2c 4b             	[r5 + 72] = r4			  ## app_keyfob.c:380:31
 1e021f4:    f0 15             	call -1056 <led_timer_stop : 1e01dd6 >			  ## app_keyfob.c:381:13
 1e021f6:    03 17             	call -506 <keyfob_set_soft_poweroff : 1e01ffe >			  ## app_keyfob.c:382:13
 1e021f8:    10 5b             	r0 = h[r5 + 34] (u)			  ## app_keyfob.c:383:17
 1e021fa:    e8 21             	if (r0 == 0) goto -48 <.GJTIE246_0_0_+0xE4 : 1e021cc >			  ## app_keyfob.c:383:17
 1e021fc:    80 f3 9b 77       	call 61238 <usr_timer_del : 1e11136 >			  ## app_keyfob.c:384:17
 1e02200:    1c 5b             	h[r5 + 34] = r4			  ## app_keyfob.c:385:32
 1e02202:    e4 1f             	goto -56 <.GJTIE246_0_0_+0xE4 : 1e021cc >			  ## app_keyfob.c:385:32
 1e02204:    00 70             	r0 = 0			  ## pwm_led.c:1030:9
 1e02206:    e0 16             	call -576 <_led_pwm0_clk_set : 1e01fc8 >			  ## pwm_led.c:1030:9
 1e02208:    c0 77             	r0 = 124			  ## pwm_led.c:1030:9
 1e0220a:    a8 48             	[r4 + 40] = r0			  ## pwm_led.c:941:5
 1e0220c:    30 48             	r0 = [r4 + 12]			  ## pwm_led.c:941:5
 1e0220e:    30 fd 0f 09       	r0 = r0 & 4294967280			  ## pwm_led.c:941:5
 1e02212:    38 48             	[r4 + 12] = r0			  ## pwm_led.c:941:5
 1e02214:    30 48             	r0 = [r4 + 12]			  ## pwm_led.c:941:5
 1e02216:    38 48             	[r4 + 12] = r0			  ## pwm_led.c:941:5
 1e02218:    c4 f4 f4 49       	[r4 + 16] = 244			  ## pwm_led.c:821:5
 1e0221c:    c5 f4 01 49       	[r4 + 20] = 1			  ## pwm_led.c:821:5
 1e02220:    00 70             	r0 = 0			  ## pwm_led.c:821:5
 1e02222:    88 48             	[r4 + 32] = r0			  ## pwm_led.c:822:5
 1e02224:    98 48             	[r4 + 36] = r0			  ## pwm_led.c:822:5
 1e02226:    c6 f4 c8 49       	[r4 + 24] = 200			  ## pwm_led.c:823:5
 1e0222a:    78 48             	[r4 + 28] = r0			  ## pwm_led.c:823:5
 1e0222c:    10 48             	r0 = [r4 + 4]
 1e0222e:    70 b1             	r0 &= 4294967291			  ## pwm_led.c:847:9
 1e02230:    18 48             	[r4 + 4] = r0			  ## pwm_led.c:847:9
 1e02232:    03 f4 10 49       	[r4 + 12] |= 16			  ## pwm_led.c:849:5
 1e02236:    20 48             	r0 = [r4 + 8]			  ## pwm_led.c:850:5
 1e02238:    30 fd f0 09       	r0 = r0 & 4294967055			  ## pwm_led.c:850:5
 1e0223c:    28 48             	[r4 + 8] = r0			  ## pwm_led.c:850:5
 1e0223e:    10 48             	r0 = [r4 + 4]			  ## pwm_led.c:883:9
 1e02240:    f0 b1             	r0 &= 4294967287			  ## pwm_led.c:883:9
 1e02242:    18 48             	[r4 + 4] = r0			  ## pwm_led.c:883:9
 1e02244:    10 48             	r0 = [r4 + 4]			  ## pwm_led.c:884:9
 1e02246:    f0 b3             	r0 &= 4294967167			  ## pwm_led.c:884:9
 1e02248:    18 48             	[r4 + 4] = r0			  ## pwm_led.c:884:9
 1e0224a:    cb f4 80 49       	[r4 + 44] = 128			  ## pwm_led.c:887:9
 1e0224e:    01 f4 10 49       	[r4 + 4] |= 16			  ## pwm_led.c:887:9
 1e02252:    10 48             	r0 = [r4 + 4]			  ## pwm_led.c:896:9
 1e02254:    f0 b2             	r0 &= 4294967263			  ## pwm_led.c:896:9
 1e02256:    18 48             	[r4 + 4] = r0			  ## pwm_led.c:896:9
 1e02258:    10 48             	r0 = [r4 + 4]			  ## pwm_led.c:902:9
 1e0225a:    70 b3             	r0 &= 4294967231			  ## pwm_led.c:902:9
 1e0225c:    18 48             	[r4 + 4] = r0			  ## pwm_led.c:902:9
 1e0225e:    00 48             	r0 = [r4 + 0]
 1e02260:    f0 b0             	r0 &= 4294967293			  ## pwm_led.c:920:9
 1e02262:    08 48             	[r4 + 0] = r0			  ## pwm_led.c:920:9
 1e02264:    00 f4 01 49       	[r4 + 0] |= 1			  ## pwm_led.c:920:9
 1e02268:    e0 7f             	r0 = 254			  ## pwm_led.c:1562:23
 1e0226a:    10 f9 c7 51       	b[r5 + 455] = r0			  ## pwm_led.c:1562:23
 1e0226e:    80 70             	r0 = 8			  ## app_keyfob.c:322:28
 1e02270:    a8 6a             	b[r5 + 10] = r0			  ## app_keyfob.c:322:28
 1e02272:    ac 1f             	goto -168 <.GJTIE246_0_0_+0xE4 : 1e021cc >			  ## app_keyfob.c:322:28


keyfob_state_machine:
 1e02274:    78 01             	[--sp] = {rets, r8-r4}			  ## app_keyfob.c:703:0
 1e02276:    f6 0b             	sp += -20			  ## app_keyfob.c:703:0
 1e02278:    51 e0 c0 00       	if (r1 == 5) goto 384 <keyfob_state_machine+0x188 : 1e023fc >			  ## app_keyfob.c:704:5
 1e0227c:    11 e0 c4 10       	if (r1 != 1) goto 392 <keyfob_state_machine+0x194 : 1e02408 >
 1e02280:    c3 24             	if (r2 == 0) goto 390 <keyfob_state_machine+0x194 : 1e02408 >
 1e02282:    10 44             	r0 = [r2 + 4]			  ## app_keyfob.c:711:21
 1e02284:    40 e0 c0 10       	if (r0 != 4) goto 384 <keyfob_state_machine+0x194 : 1e02408 >
 1e02288:    c4 ff ae 43 e1 01 	r4 = 31540142 <update_target_end+0x1526 : 1e143ae >			  ## app_keyfob.c:665:5
 1e0228e:    20 70             	r0 = 2			  ## app_keyfob.c:665:5
 1e02290:    42 08             	r2 = r4			  ## app_keyfob.c:665:5
 1e02292:    80 f3 4a 67       	call 52884 <log_print : 1e0f12a >			  ## app_keyfob.c:665:5
 1e02296:    c2 ff e8 43 e1 01 	r2 = 31540200 <update_target_end+0x1560 : 1e143e8 >			  ## app_keyfob.c:666:5
 1e0229c:    20 70             	r0 = 2			  ## app_keyfob.c:666:5
 1e0229e:    80 f3 44 67       	call 52872 <log_print : 1e0f12a >			  ## app_keyfob.c:666:5
 1e022a2:    20 70             	r0 = 2			  ## app_keyfob.c:667:5
 1e022a4:    42 08             	r2 = r4			  ## app_keyfob.c:667:5
 1e022a6:    80 f3 40 67       	call 52864 <log_print : 1e0f12a >			  ## app_keyfob.c:667:5
 1e022aa:    c2 ff 24 44 e1 01 	r2 = 31540260 <update_target_end+0x159C : 1e14424 >			  ## app_keyfob.c:668:5
 1e022b0:    c3 ff fc 3f e1 01 	r3 = 31539196 <update_target_end+0x1174 : 1e13ffc >			  ## app_keyfob.c:668:5
 1e022b6:    20 70             	r0 = 2			  ## app_keyfob.c:668:5
 1e022b8:    80 f3 37 67       	call 52846 <log_print : 1e0f12a >			  ## app_keyfob.c:668:5
 1e022bc:    80 f3 26 f5       	call 125516 <clk_set : 1e20d0c >			  ## app_keyfob.c:669:5
 1e022c0:    c0 ff 8c 31 00 00 	r0 = 12684 <hdl.15 : 318c >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/clock.c:1753:20
 1e022c6:    00 40             	r0 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/clock.c:1753:20
 1e022c8:    80 f3 96 a4       	call 84268 <bt_pll_para : 1e16bf8 >			  ## app_keyfob.c:673:5
 1e022cc:    10 70             	r0 = 1			  ## app_keyfob.c:674:5
 1e022ce:    17 70             	r7 = 1			  ## app_keyfob.c:674:5
 1e022d0:    e9 16             	call -558 <led_on_off : 1e020a4 >			  ## app_keyfob.c:674:5
 1e022d2:    c4 a0             	r4 = sp + 12
 1e022d4:    40 08             	r0 = r4			  ## app_comm_ble.c:72:9
 1e022d6:    80 f3 fa 30       	call 25076 <lib_make_ble_address : 1e084ce >			  ## app_comm_ble.c:72:9
 1e022da:    40 08             	r0 = r4			  ## app_comm_ble.c:75:5
 1e022dc:    80 f3 d9 dd       	call 113586 <le_controller_set_mac : 1e1de92 >			  ## app_comm_ble.c:75:5
 1e022e0:    00 fb c1 03       	r0 = 961 <NVRAM_DATA_SIZE+0x7D : 3c1 >			  ## app_comm_ble.c:75:5
 1e022e4:    90 f5 12 00       	h[sp+18] = r0
 1e022e8:    c6 ff a0 08 00 00 	r6 = 2208 <ble_device_name_len : 8a0 >
 1e022ee:    20 9c             	r0 = r6 + 2
 1e022f0:    21 a1             	r1 = sp + 18
 1e022f2:    22 70             	r2 = 2			  ## ble_hogp.c:1265:5
 1e022f4:    98 f3 f6 25       	call 3165164 <memcpy : 106ee4 >			  ## ble_hogp.c:1265:5
 1e022f8:    c5 ff b0 20 00 00 	r5 = 8368 <gatt_client_conn_handle : 20b0 >			  ## app_keyfob.c:697:27
 1e022fe:    c0 ff 9e 5b e1 01 	r0 = 31546270 <keyfob_report_map : 1e15b9e >			  ## ble_hogp.c:1281:16
 1e02304:    78 4b             	[r5 + 92] = r0			  ## ble_hogp.c:1281:16
 1e02306:    17 f9 58 50       	b[r5 + 88] = r7			  ## ble_hogp.c:1281:16
 1e0230a:    c0 ff e6 2c e0 01 	r0 = 31468774 <get_vbat_percent : 1e02ce6 >			  ## ble_hogp.c:1349:27
 1e02310:    58 4b             	[r5 + 84] = r0			  ## ble_hogp.c:1349:27
 1e02312:    c2 ff 66 44 e1 01 	r2 = 31540326 <update_target_end+0x15DE : 1e14466 >			  ## app_comm_ble.c:81:5
 1e02318:    20 70             	r0 = 2			  ## app_comm_ble.c:81:5
 1e0231a:    80 f3 06 67       	call 52748 <log_print : 1e0f12a >			  ## app_comm_ble.c:81:5
 1e0231e:    61 70             	r1 = 6			  ## app_comm_ble.c:82:5
 1e02320:    40 08             	r0 = r4			  ## app_comm_ble.c:82:5
 1e02322:    80 f3 56 68       	call 53420 <printf_buf : 1e0f3d2 >			  ## app_comm_ble.c:82:5
 1e02326:    c0 ff 4d 46 e1 01 	r0 = 31540813 <update_target_end+0x17C5 : 1e1464d >			  ## ble_hogp.c:1150:5
 1e0232c:    c1 ff 5b 46 e1 01 	r1 = 31540827 <update_target_end+0x17D3 : 1e1465b >			  ## ble_hogp.c:1150:5
 1e02332:    80 f3 ca 66       	call 52628 <printf : 1e0f0ca >			  ## ble_hogp.c:1150:5
 1e02336:    01 fb 68 03       	r1 = 872 <NVRAM_DATA_SIZE+0x24 : 368 >			  ## le_gatt_common.c:872:5
 1e0233a:    c2 ff 1e 33 e1 01 	r2 = 31535902 <update_target_end+0x496 : 1e1331e >			  ## le_gatt_common.c:872:5
 1e02340:    c8 ff 3a 33 e1 01 	r8 = 31535930 <update_target_end+0x4B2 : 1e1333a >			  ## le_gatt_common.c:872:5
 1e02346:    20 70             	r0 = 2			  ## le_gatt_common.c:872:5
 1e02348:    09 02             	[sp] = r1			  ## le_gatt_common.c:872:5
 1e0234a:    83 08             	r3 = r8			  ## le_gatt_common.c:872:5
 1e0234c:    80 f3 ed 66       	call 52698 <log_print : 1e0f12a >			  ## le_gatt_common.c:872:5
 1e02350:    c2 ff 48 33 e1 01 	r2 = 31535944 <update_target_end+0x4C0 : 1e13348 >			  ## le_gatt_common.c:873:5
 1e02356:    c3 ff ef 30 e1 01 	r3 = 31535343 <update_target_end+0x267 : 1e130ef >			  ## le_gatt_common.c:873:5
 1e0235c:    20 70             	r0 = 2			  ## le_gatt_common.c:873:5
 1e0235e:    80 f3 e4 66       	call 52680 <log_print : 1e0f12a >			  ## le_gatt_common.c:873:5
 1e02362:    04 70             	r4 = 0			  ## le_gatt_common.c:873:5
 1e02364:    c2 ff 6a 33 e1 01 	r2 = 31535978 <update_target_end+0x4E2 : 1e1336a >			  ## le_gatt_common.c:875:5
 1e0236a:    20 70             	r0 = 2			  ## le_gatt_common.c:875:5
 1e0236c:    13 70             	r3 = 1			  ## le_gatt_common.c:875:5
 1e0236e:    0c 02             	[sp] = r4			  ## le_gatt_common.c:875:5
 1e02370:    80 f3 db 66       	call 52662 <log_print : 1e0f12a >			  ## le_gatt_common.c:875:5
 1e02374:    2c 02             	[sp+8] = r4			  ## le_gatt_common.c:876:5
 1e02376:    1f 02             	[sp+4] = r7			  ## le_gatt_common.c:876:5
 1e02378:    c2 ff 93 33 e1 01 	r2 = 31536019 <update_target_end+0x50B : 1e13393 >			  ## le_gatt_common.c:876:5
 1e0237e:    20 70             	r0 = 2			  ## le_gatt_common.c:876:5
 1e02380:    13 70             	r3 = 1			  ## le_gatt_common.c:876:5
 1e02382:    0f 02             	[sp] = r7			  ## le_gatt_common.c:876:5
 1e02384:    80 f3 d1 66       	call 52642 <log_print : 1e0f12a >			  ## le_gatt_common.c:876:5
 1e02388:    60 fc 24 00       	r0 = r6 + 36			  ## le_gatt_common.c:889:24
 1e0238c:    d8 4a             	[r5 + 52] = r0			  ## le_gatt_common.c:889:24
 1e0238e:    e0 9b             	r0 = r5 + 30			  ## le_gatt_common.c:892:9
 1e02390:    01 70             	r1 = 0			  ## le_gatt_common.c:892:9
 1e02392:    22 70             	r2 = 2			  ## le_gatt_common.c:892:9
 1e02394:    98 f3 ac 25       	call 3165016 <memset : 106ef0 >			  ## le_gatt_common.c:892:9
 1e02398:    30 9a             	r0 = r5 + 3			  ## le_gatt_common.c:893:9
 1e0239a:    01 70             	r1 = 0			  ## le_gatt_common.c:893:9
 1e0239c:    12 70             	r2 = 1			  ## le_gatt_common.c:893:9
 1e0239e:    98 f3 a7 25       	call 3165006 <memset : 106ef0 >			  ## le_gatt_common.c:893:9
 1e023a2:    b4 4c             	r4 = [r6 + 44]			  ## le_gatt_common.c:894:50
 1e023a4:    c2 ff b6 3a e1 01 	r2 = 31537846 <update_target_end+0xC2E : 1e13ab6 >			  ## le_gatt_server.c:951:5
 1e023aa:    c3 ff 25 3c e1 01 	r3 = 31538213 <update_target_end+0xD9D : 1e13c25 >			  ## le_gatt_server.c:951:5
 1e023b0:    20 70             	r0 = 2			  ## le_gatt_server.c:951:5
 1e023b2:    80 f3 ba 66       	call 52596 <log_print : 1e0f12a >			  ## le_gatt_server.c:951:5
 1e023b6:    c6 ff a0 22 00 00 	r6 = 8864 <_sdfile_handl : 22a0 >			  ## le_gatt_server.c:952:5
 1e023bc:    60 fc a4 00       	r0 = r6 + 164			  ## le_gatt_server.c:952:5
 1e023c0:    01 70             	r1 = 0			  ## le_gatt_server.c:952:5
 1e023c2:    c2 72             	r2 = 44			  ## le_gatt_server.c:952:5
 1e023c4:    98 f3 94 25       	call 3164968 <memset : 106ef0 >			  ## le_gatt_server.c:952:5
 1e023c8:    14 f6 a4 60       	[r6 + 164] = r4			  ## le_gatt_server.c:953:27
 1e023cc:    c2 ff b1 31 e1 01 	r2 = 31535537 <update_target_end+0x329 : 1e131b1 >			  ## le_gatt_common.c:903:5
 1e023d2:    20 70             	r0 = 2			  ## le_gatt_common.c:903:5
 1e023d4:    83 08             	r3 = r8			  ## le_gatt_common.c:903:5
 1e023d6:    80 f3 a8 66       	call 52560 <log_print : 1e0f12a >			  ## le_gatt_common.c:903:5
 1e023da:    80 f3 97 30       	call 24878 <btstack_init : 1e0850c >			  ## app_keyfob.c:685:5
 1e023de:    80 f3 a7 73       	call 59214 <sys_key_event_enable : 1e10b30 >			  ## app_keyfob.c:693:5
 1e023e2:    c1 ff fe 1f e0 01 	r1 = 31465470 <keyfob_set_soft_poweroff : 1e01ffe >			  ## app_keyfob.c:697:29
 1e023e8:    c2 ff 20 bf 02 00 	r2 = 180000 <text_size+0xB070 : 2bf20 >			  ## app_keyfob.c:697:29
 1e023ee:    00 70             	r0 = 0			  ## app_keyfob.c:697:29
 1e023f0:    80 f3 9a 76       	call 60724 <sys_timeout_add : 1e11128 >			  ## app_keyfob.c:697:29
 1e023f4:    08 5b             	h[r5 + 32] = r0			  ## app_keyfob.c:697:27
 1e023f6:    80 f3 0d a4       	call 83994 <bredr_set_fix_pwr : 1e16c14 >			  ## app_keyfob.c:699:5
 1e023fa:    06 18             	goto 12 <keyfob_state_machine+0x194 : 1e02408 >
 1e023fc:    c2 ff 43 44 e1 01 	r2 = 31540291 <update_target_end+0x15BB : 1e14443 >			  ## app_keyfob.c:724:9
 1e02402:    20 70             	r0 = 2			  ## app_keyfob.c:724:9
 1e02404:    80 f3 91 66       	call 52514 <log_print : 1e0f12a >			  ## app_keyfob.c:724:9
 1e02408:    00 70             	r0 = 0			  ## app_keyfob.c:728:5
 1e0240a:    0a 0a             	sp += 20			  ## app_keyfob.c:728:5
 1e0240c:    58 01             	{pc, r8-r4} = [sp++]			  ## app_keyfob.c:728:5


key_value_send:
 1e0240e:    75 01             	[--sp] = {rets, r5, r4}			  ## app_keyfob.c:462:0
 1e02410:    c2 ff b0 20 00 00 	r2 = 8368 <gatt_client_conn_handle : 20b0 >			  ## app_keyfob.c:465:9
 1e02416:    12 45             	r2 = [r2 + 68]			  ## app_keyfob.c:465:9
 1e02418:    14 08             	r4 = r1			  ## app_keyfob.c:465:9
 1e0241a:    05 70             	r5 = 0
 1e0241c:    12 e0 03 00       	if (r2 == 1) goto 6 <key_value_send+0x18 : 1e02426 >
 1e02420:    c5 ff 78 24 e0 01 	r5 = 31466616 <ble_hid_data_send : 1e02478 >			  ## app_keyfob.c:465:9
 1e02426:    12 e0 26 00       	if (r2 == 1) goto 76 <key_value_send+0x68 : 1e02476 >
 1e0242a:    20 e0 12 00       	if (r0 == 2) goto 36 <key_value_send+0x44 : 1e02452 >			  ## app_keyfob.c:479:9
 1e0242e:    10 e0 22 10       	if (r0 != 1) goto 68 <key_value_send+0x68 : 1e02476 >
 1e02432:    14 e0 06 80       	if (r4 > 1) goto 12 <key_value_send+0x34 : 1e02442 >
 1e02436:    c1 ff 92 5b e1 01 	r1 = 31546258 <key_a_big_press : 1e15b92 >			  ## app_keyfob.c:481:13
 1e0243c:    30 70             	r0 = 3			  ## app_keyfob.c:481:13
 1e0243e:    32 70             	r2 = 3			  ## app_keyfob.c:481:13
 1e02440:    85 00             	call r5			  ## app_keyfob.c:481:13
 1e02442:    00 fd 02 49       	r0 = r4 | 2			  ## app_keyfob.c:483:23
 1e02446:    20 e0 16 10       	if (r0 != 2) goto 44 <key_value_send+0x68 : 1e02476 >			  ## app_keyfob.c:483:23
 1e0244a:    c1 ff 95 5b e1 01 	r1 = 31546261 <key_a_big_null : 1e15b95 >			  ## app_keyfob.c:484:13
 1e02450:    0f 18             	goto 30 <key_value_send+0x62 : 1e02470 >			  ## app_keyfob.c:484:13
 1e02452:    14 e0 06 80       	if (r4 > 1) goto 12 <key_value_send+0x54 : 1e02462 >
 1e02456:    c1 ff 98 5b e1 01 	r1 = 31546264 <key_a_small_press : 1e15b98 >			  ## app_keyfob.c:489:13
 1e0245c:    30 70             	r0 = 3			  ## app_keyfob.c:489:13
 1e0245e:    32 70             	r2 = 3			  ## app_keyfob.c:489:13
 1e02460:    85 00             	call r5			  ## app_keyfob.c:489:13
 1e02462:    00 fd 02 49       	r0 = r4 | 2			  ## app_keyfob.c:491:23
 1e02466:    20 e0 06 10       	if (r0 != 2) goto 12 <key_value_send+0x68 : 1e02476 >			  ## app_keyfob.c:491:23
 1e0246a:    c1 ff 9b 5b e1 01 	r1 = 31546267 <key_a_small_null : 1e15b9b >			  ## app_keyfob.c:493:13
 1e02470:    30 70             	r0 = 3
 1e02472:    32 70             	r2 = 3
 1e02474:    85 00             	call r5
 1e02476:    55 01             	{pc, r5, r4} = [sp++]			  ## app_keyfob.c:497:1


ble_hid_data_send:
 1e02478:    77 01             	[--sp] = {rets, r7-r4}			  ## ble_hogp.c:1495:0
 1e0247a:    fa 0b             	sp += -12			  ## ble_hogp.c:1495:0
 1e0247c:    04 08             	r4 = r0			  ## ble_hogp.c:1495:0
 1e0247e:    40 fc ff ff       	r0 = r4 + -1			  ## ble_hogp.c:1496:24
 1e02482:    00 04             	r0 = r0.b0 (u)			  ## ble_hogp.c:1496:24
 1e02484:    27 08             	r7 = r2			  ## ble_hogp.c:1496:24
 1e02486:    16 08             	r6 = r1
 1e02488:    60 e0 08 30       	if (r0 < 6) goto 16 <ble_hid_data_send+0x24 : 1e0249c >			  ## ble_hogp.c:1496:24
 1e0248c:    c0 ff 9a 4b e1 01 	r0 = 31542170 <update_target_end+0x1D12 : 1e14b9a >			  ## ble_hogp.c:1497:9
 1e02492:    41 08             	r1 = r4			  ## ble_hogp.c:1497:9
 1e02494:    80 f3 19 66       	call 52274 <printf : 1e0f0ca >			  ## ble_hogp.c:1497:9
 1e02498:    f5 07             	r5 = -1			  ## ble_hogp.c:1497:9
 1e0249a:    22 18             	goto 68 <ble_hid_data_send+0x68 : 1e024e0 >			  ## ble_hogp.c:1497:9
 1e0249c:    00 74             	r0 = 64			  ## ble_hogp.c:1501:5
 1e0249e:    80 f3 99 67       	call 53042 <putchar : 1e0f3d4 >			  ## ble_hogp.c:1501:5
 1e024a2:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## ble_hogp.c:1502:35
 1e024a8:    22 51             	r2 = h[r0 + 36] (u)			  ## ble_hogp.c:1502:35
 1e024aa:    18 24             	if (r2 == 0) goto 48 <ble_hid_data_send+0x64 : 1e024dc >
 1e024ac:    05 70             	r5 = 0
 1e024ae:    2d 02             	[sp+8] = r5			  ## le_gatt_common.c:1092:15
 1e024b0:    c0 ff 70 5f e1 01 	r0 = 31547248 <report_id_handle_table : 1e15f70 >			  ## ble_hogp.c:1502:52
 1e024b6:    43 f8 00 04       	r3 = h[r0+r4<<1] (u)			  ## le_gatt_common.c:1092:15
 1e024ba:    1f 02             	[sp+4] = r7			  ## le_gatt_common.c:1092:15
 1e024bc:    a0 71             	r0 = 26			  ## le_gatt_common.c:1092:15
 1e024be:    51 70             	r1 = 5			  ## le_gatt_common.c:1092:15
 1e024c0:    0e 02             	[sp] = r6			  ## le_gatt_common.c:1092:15
 1e024c2:    80 f3 da 2d       	call 23476 <ble_user_cmd_prepare : 1e0807a >			  ## le_gatt_common.c:1092:15
 1e024c6:    04 08             	r4 = r0			  ## le_gatt_common.c:1092:15
 1e024c8:    0b 28             	if (r4 == 0) goto 22 <ble_hid_data_send+0x68 : 1e024e0 >
 1e024ca:    c2 ff 6c 34 e1 01 	r2 = 31536236 <update_target_end+0x5E4 : 1e1346c >			  ## le_gatt_common.c:1097:9
 1e024d0:    40 70             	r0 = 4			  ## le_gatt_common.c:1097:9
 1e024d2:    43 08             	r3 = r4			  ## le_gatt_common.c:1097:9
 1e024d4:    80 f3 29 66       	call 52306 <log_print : 1e0f12a >			  ## le_gatt_common.c:1097:9
 1e024d8:    45 08             	r5 = r4			  ## le_gatt_common.c:1097:9
 1e024da:    02 18             	goto 4 <ble_hid_data_send+0x68 : 1e024e0 >			  ## le_gatt_common.c:1097:9
 1e024dc:    05 fb a1 ff       	r5 = -95 <bank_code_load_addr+0x1DC9A9 : 1ffffa1 >
 1e024e0:    50 08             	r0 = r5			  ## ble_hogp.c:1503:1
 1e024e2:    06 0a             	sp += 12			  ## ble_hogp.c:1503:1
 1e024e4:    57 01             	{pc, r7-r4} = [sp++]			  ## ble_hogp.c:1503:1


keyfob_vm_deal:
 1e024e6:    76 01             	[--sp] = {rets, r6-r4}			  ## app_keyfob.c:584:0
 1e024e8:    fe 0b             	sp += -4			  ## app_keyfob.c:584:0
 1e024ea:    04 08             	r4 = r0			  ## app_keyfob.c:584:0
 1e024ec:    c2 ff 80 42 e1 01 	r2 = 31539840 <update_target_end+0x13F8 : 1e14280 >			  ## app_keyfob.c:589:5
 1e024f2:    20 70             	r0 = 2			  ## app_keyfob.c:589:5
 1e024f4:    43 08             	r3 = r4			  ## app_keyfob.c:589:5
 1e024f6:    80 f3 18 66       	call 52272 <log_print : 1e0f12a >			  ## app_keyfob.c:589:5
 1e024fa:    00 a0             	r0 = sp + 0			  ## app_keyfob.c:589:5
 1e024fc:    01 70             	r1 = 0			  ## app_keyfob.c:590:5
 1e024fe:    42 70             	r2 = 4			  ## app_keyfob.c:590:5
 1e02500:    06 70             	r6 = 0			  ## app_keyfob.c:590:5
 1e02502:    98 f3 f5 24       	call 3164650 <memset : 106ef0 >			  ## app_keyfob.c:590:5
 1e02506:    c5 ff b0 20 00 00 	r5 = 8368 <gatt_client_conn_handle : 20b0 >			  ## app_keyfob.c:590:5
 1e0250c:    19 28             	if (r4 == 0) goto 50 <keyfob_vm_deal+0x5A : 1e02540 >			  ## app_keyfob.c:590:5
 1e0250e:    10 4b             	r0 = [r5 + 68]			  ## app_keyfob.c:627:21
 1e02510:    d0 f5 02 00       	b[sp+2] = r0			  ## app_keyfob.c:627:19
 1e02514:    00 fb a3 3a       	r0 = 15011 <norflash_erase+0x91 : 3aa3 >			  ## app_keyfob.c:628:23
 1e02518:    90 f5 00 00       	h[sp] = r0			  ## app_keyfob.c:628:23
 1e0251c:    04 a0             	r4 = sp + 0			  ## app_keyfob.c:628:23
 1e0251e:    c0 71             	r0 = 28			  ## app_keyfob.c:629:9
 1e02520:    42 70             	r2 = 4			  ## app_keyfob.c:629:9
 1e02522:    41 08             	r1 = r4			  ## app_keyfob.c:629:9
 1e02524:    80 f3 90 78       	call 61728 <syscfg_write : 1e11648 >			  ## app_keyfob.c:629:9
 1e02528:    c2 ff fb 42 e1 01 	r2 = 31539963 <update_target_end+0x1473 : 1e142fb >			  ## app_keyfob.c:630:9
 1e0252e:    20 70             	r0 = 2			  ## app_keyfob.c:630:9
 1e02530:    80 f3 fb 65       	call 52214 <log_print : 1e0f12a >			  ## app_keyfob.c:630:9
 1e02534:    41 70             	r1 = 4			  ## app_keyfob.c:631:9
 1e02536:    40 08             	r0 = r4			  ## app_keyfob.c:631:9
 1e02538:    80 f3 4b 67       	call 52886 <printf_buf : 1e0f3d2 >			  ## app_keyfob.c:631:9
 1e0253c:    02 0a             	sp += 4
 1e0253e:    56 01             	{pc, r6-r4} = [sp++]			  ## app_keyfob.c:633:1
 1e02540:    1e 4b             	[r5 + 68] = r6			  ## app_keyfob.c:593:21
 1e02542:    01 a0             	r1 = sp + 0			  ## app_keyfob.c:593:21
 1e02544:    c0 71             	r0 = 28			  ## app_keyfob.c:594:15
 1e02546:    42 70             	r2 = 4			  ## app_keyfob.c:594:15
 1e02548:    80 f3 12 78       	call 61476 <syscfg_read : 1e11570 >			  ## app_keyfob.c:594:15
 1e0254c:    14 20             	if (r0 == 0) goto 40 <keyfob_vm_deal+0x90 : 1e02576 >
 1e0254e:    80 f5 00 00       	r0 = h[sp] (u)			  ## app_keyfob.c:598:41
 1e02552:    01 fb a3 3a       	r1 = 15011 <norflash_erase+0x91 : 3aa3 >			  ## app_keyfob.c:598:33
 1e02556:    10 f2 14 10       	if (r0 != r1) goto 40 <keyfob_vm_deal+0x9C : 1e02582 >			  ## app_keyfob.c:598:33
 1e0255a:    c2 ff c1 42 e1 01 	r2 = 31539905 <update_target_end+0x1439 : 1e142c1 >			  ## app_keyfob.c:599:17
 1e02560:    20 70             	r0 = 2			  ## app_keyfob.c:599:17
 1e02562:    80 f3 e2 65       	call 52164 <log_print : 1e0f12a >			  ## app_keyfob.c:599:17
 1e02566:    00 a0             	r0 = sp + 0			  ## app_keyfob.c:599:17
 1e02568:    41 70             	r1 = 4			  ## app_keyfob.c:600:17
 1e0256a:    80 f3 32 67       	call 52836 <printf_buf : 1e0f3d2 >			  ## app_keyfob.c:600:17
 1e0256e:    c0 f5 02 00       	r0 = b[sp+2] (u)			  ## app_keyfob.c:601:31
 1e02572:    18 4b             	[r5 + 68] = r0			  ## app_keyfob.c:601:29
 1e02574:    07 18             	goto 14 <keyfob_vm_deal+0x9E : 1e02584 >			  ## app_keyfob.c:601:29
 1e02576:    c2 ff a6 42 e1 01 	r2 = 31539878 <update_target_end+0x141E : 1e142a6 >			  ## app_keyfob.c:596:13
 1e0257c:    20 70             	r0 = 2			  ## app_keyfob.c:596:13
 1e0257e:    80 f3 d4 65       	call 52136 <log_print : 1e0f12a >			  ## app_keyfob.c:596:13
 1e02582:    10 4b             	r0 = [r5 + 68]			  ## app_keyfob.c:605:30
 1e02584:    d1 f4 02 59       	[r5 + 68] = 2
 1e02588:    d9 21             	if (r0 == 0) goto -78 <keyfob_vm_deal+0x56 : 1e0253c >
 1e0258a:    c0 f5 02 00       	r0 = b[sp+2] (u)			  ## app_keyfob.c:620:37
 1e0258e:    20 e0 d5 0f       	if (r0 == 2) goto -86 <keyfob_vm_deal+0x56 : 1e0253c >			  ## app_keyfob.c:620:37
 1e02592:    c2 ff dd 42 e1 01 	r2 = 31539933 <update_target_end+0x1455 : 1e142dd >			  ## app_keyfob.c:621:17
 1e02598:    20 70             	r0 = 2			  ## app_keyfob.c:621:17
 1e0259a:    80 f3 c6 65       	call 52108 <log_print : 1e0f12a >			  ## app_keyfob.c:621:17
 1e0259e:    10 4b             	r0 = [r5 + 68]			  ## app_keyfob.c:621:17
 1e025a0:    d0 f5 02 00       	b[sp+2] = r0			  ## app_keyfob.c:622:27
 1e025a4:    01 a0             	r1 = sp + 0			  ## app_keyfob.c:622:27
 1e025a6:    c0 71             	r0 = 28			  ## app_keyfob.c:623:17
 1e025a8:    42 70             	r2 = 4			  ## app_keyfob.c:623:17
 1e025aa:    80 f3 4d 78       	call 61594 <syscfg_write : 1e11648 >			  ## app_keyfob.c:623:17
 1e025ae:    c6 1f             	goto -116 <keyfob_vm_deal+0x56 : 1e0253c >			  ## app_keyfob.c:623:17


__hogp_conn_pair_vm_do:
 1e025b0:    76 01             	[--sp] = {rets, r6-r4}			  ## ble_hogp.c:328:0
 1e025b2:    04 08             	r4 = r0			  ## ble_hogp.c:328:0
 1e025b4:    c0 ff e7 45 e1 01 	r0 = 31540711 <update_target_end+0x175F : 1e145e7 >			  ## ble_hogp.c:332:5
 1e025ba:    41 08             	r1 = r4			  ## ble_hogp.c:332:5
 1e025bc:    80 f3 85 65       	call 51978 <printf : 1e0f0ca >			  ## ble_hogp.c:332:5
 1e025c0:    c5 ff b0 20 00 00 	r5 = 8368 <gatt_client_conn_handle : 20b0 >			  ## ble_hogp.c:332:5
 1e025c6:    07 28             	if (r4 == 0) goto 14 <__hogp_conn_pair_vm_do+0x26 : 1e025d6 >			  ## ble_hogp.c:332:5
 1e025c8:    51 fc 58 01       	r1 = r5 + 344			  ## ble_hogp.c:356:13
 1e025cc:    10 70             	r0 = 1			  ## ble_hogp.c:356:13
 1e025ce:    e2 70             	r2 = 14			  ## ble_hogp.c:356:13
 1e025d0:    80 f3 3a 78       	call 61556 <syscfg_write : 1e11648 >			  ## ble_hogp.c:356:13
 1e025d4:    36 18             	goto 108 <__hogp_conn_pair_vm_do+0x92 : 1e02642 >
 1e025d6:    54 fc 58 01       	r4 = r5 + 344			  ## ble_hogp.c:337:19
 1e025da:    10 70             	r0 = 1			  ## ble_hogp.c:337:19
 1e025dc:    e2 70             	r2 = 14			  ## ble_hogp.c:337:19
 1e025de:    41 08             	r1 = r4			  ## ble_hogp.c:337:19
 1e025e0:    80 f3 c6 77       	call 61324 <syscfg_read : 1e11570 >			  ## ble_hogp.c:337:19
 1e025e4:    e0 e0 0a 00       	if (r0 == 14) goto 20 <__hogp_conn_pair_vm_do+0x4C : 1e025fc >
 1e025e8:    c0 ff 0c 46 e1 01 	r0 = 31540748 <update_target_end+0x1784 : 1e1460c >			  ## ble_hogp.c:340:13
 1e025ee:    80 f3 6c 65       	call 51928 <printf : 1e0f0ca >			  ## ble_hogp.c:340:13
 1e025f2:    01 70             	r1 = 0			  ## ble_hogp.c:341:13
 1e025f4:    e2 70             	r2 = 14			  ## ble_hogp.c:341:13
 1e025f6:    40 08             	r0 = r4			  ## ble_hogp.c:341:13
 1e025f8:    98 f3 7a 24       	call 3164404 <memset : 106ef0 >			  ## ble_hogp.c:341:13
 1e025fc:    00 f7 58 51       	r0 = h[r5 + 344] (u)			  ## ble_hogp.c:344:39
 1e02600:    c6 ff 5c b3 00 00 	r6 = 45916 <report_heap_size+0xB44 : b35c >			  ## ble_hogp.c:344:30
 1e02606:    60 f2 0c 10       	if (r0 != r6) goto 24 <__hogp_conn_pair_vm_do+0x72 : 1e02622 >			  ## ble_hogp.c:344:30
 1e0260a:    00 f7 64 51       	r0 = h[r5 + 356] (u)			  ## ble_hogp.c:344:49
 1e0260e:    01 fb b3 5c       	r1 = 23731 <report_overlay_end+0x96B : 5cb3 >			  ## ble_hogp.c:344:49
 1e02612:    10 f2 06 10       	if (r0 != r1) goto 12 <__hogp_conn_pair_vm_do+0x72 : 1e02622 >			  ## ble_hogp.c:344:49
 1e02616:    c0 ff 20 46 e1 01 	r0 = 31540768 <update_target_end+0x1798 : 1e14620 >			  ## ble_hogp.c:345:13
 1e0261c:    80 f3 55 65       	call 51882 <printf : 1e0f0ca >			  ## ble_hogp.c:345:13
 1e02620:    10 18             	goto 32 <__hogp_conn_pair_vm_do+0x92 : 1e02642 >			  ## ble_hogp.c:345:13
 1e02622:    c0 ff 35 46 e1 01 	r0 = 31540789 <update_target_end+0x17AD : 1e14635 >			  ## ble_hogp.c:347:13
 1e02628:    80 f3 4f 65       	call 51870 <printf : 1e0f0ca >			  ## ble_hogp.c:347:13
 1e0262c:    54 fc 58 01       	r4 = r5 + 344			  ## ble_hogp.c:347:13
 1e02630:    01 70             	r1 = 0			  ## ble_hogp.c:348:13
 1e02632:    e2 70             	r2 = 14			  ## ble_hogp.c:348:13
 1e02634:    40 08             	r0 = r4			  ## ble_hogp.c:348:13
 1e02636:    98 f3 5b 24       	call 3164342 <memset : 106ef0 >			  ## ble_hogp.c:348:13
 1e0263a:    0e 58             	h[r4 + 0] = r6			  ## ble_hogp.c:349:28
 1e0263c:    00 fb b3 5c       	r0 = 23731 <report_overlay_end+0x96B : 5cb3 >			  ## ble_hogp.c:350:28
 1e02640:    68 58             	h[r4 + 12] = r0			  ## ble_hogp.c:350:28
 1e02642:    50 fc 58 01       	r0 = r5 + 344			  ## ble_hogp.c:359:5
 1e02646:    e1 70             	r1 = 14			  ## ble_hogp.c:359:5
 1e02648:    16 01             	{rets, r6-r4} = [sp++]			  ## ble_hogp.c:359:5
 1e0264a:    c0 f3 43 66       	goto 52358 <put_buf : 1e0f2d4 >			  ## ble_hogp.c:359:5


make_eir_packet_val:
 1e0264e:    76 01             	[--sp] = {rets, r6-r4}			  ## le_common_define.h:137:0
 1e02650:    fe 0b             	sp += -4			  ## le_common_define.h:137:0
 1e02652:    54 02             	r4 = [sp+20]			  ## le_common_define.h:137:0
 1e02654:    25 98             	r5 = r4 + 2			  ## le_common_define.h:138:48
 1e02656:    66 fb 1f 19       	r6 = 31 - r1			  ## le_common_define.h:138:28
 1e0265a:    0b 02             	[sp] = r3			  ## le_common_define.h:138:28
 1e0265c:    56 f2 03 a0       	ifs (r6 >= r5) goto 6 <make_eir_packet_val+0x18 : 1e02666 >			  ## le_common_define.h:138:9
 1e02660:    00 b3             	r0 = r1 + r4			  ## le_common_define.h:139:23
 1e02662:    25 90             	r5 = r0 + 2			  ## le_common_define.h:139:34
 1e02664:    08 18             	goto 16 <make_eir_packet_val+0x28 : 1e02676 >			  ## le_common_define.h:139:34
 1e02666:    11 98             	r1 = r4 + 1			  ## le_common_define.h:142:23
 1e02668:    09 60             	b[r0 + 0] = r1			  ## le_common_define.h:142:12
 1e0266a:    1a 60             	b[r0 + 1] = r2			  ## le_common_define.h:143:12
 1e0266c:    20 80             	r0 += 2			  ## le_common_define.h:144:16
 1e0266e:    01 a0             	r1 = sp + 0
 1e02670:    42 08             	r2 = r4			  ## le_common_define.h:144:5
 1e02672:    98 f3 37 24       	call 3164270 <memcpy : 106ee4 >			  ## le_common_define.h:144:5
 1e02676:    40 05             	r0 = r5.b0 (u)			  ## le_common_define.h:146:1
 1e02678:    02 0a             	sp += 4			  ## le_common_define.h:146:1
 1e0267a:    56 01             	{pc, r6-r4} = [sp++]			  ## le_common_define.h:146:1


make_eir_packet_data:
 1e0267c:    76 01             	[--sp] = {rets, r6-r4}			  ## le_common_define.h:124:0
 1e0267e:    44 02             	r4 = [sp+16]			  ## le_common_define.h:124:0
 1e02680:    25 98             	r5 = r4 + 2			  ## le_common_define.h:125:48
 1e02682:    66 fb 1f 19       	r6 = 31 - r1			  ## le_common_define.h:125:28
 1e02686:    56 f2 03 a0       	ifs (r6 >= r5) goto 6 <make_eir_packet_data+0x14 : 1e02690 >			  ## le_common_define.h:125:9
 1e0268a:    00 b3             	r0 = r1 + r4			  ## le_common_define.h:126:23
 1e0268c:    25 90             	r5 = r0 + 2			  ## le_common_define.h:126:34
 1e0268e:    08 18             	goto 16 <make_eir_packet_data+0x24 : 1e026a0 >			  ## le_common_define.h:126:34
 1e02690:    11 98             	r1 = r4 + 1			  ## le_common_define.h:129:23
 1e02692:    09 60             	b[r0 + 0] = r1			  ## le_common_define.h:129:12
 1e02694:    1a 60             	b[r0 + 1] = r2			  ## le_common_define.h:130:12
 1e02696:    20 80             	r0 += 2			  ## le_common_define.h:131:16
 1e02698:    31 08             	r1 = r3			  ## le_common_define.h:131:5
 1e0269a:    42 08             	r2 = r4			  ## le_common_define.h:131:5
 1e0269c:    98 f3 22 24       	call 3164228 <memcpy : 106ee4 >			  ## le_common_define.h:131:5
 1e026a0:    40 05             	r0 = r5.b0 (u)			  ## le_common_define.h:133:1
 1e026a2:    56 01             	{pc, r6-r4} = [sp++]			  ## le_common_define.h:133:1


hogp_adv_config_set:
 1e026a4:    7c 01             	[--sp] = {rets, r12-r4}			  ## ble_hogp.c:1018:0
 1e026a6:    fe 0b             	sp += -4			  ## ble_hogp.c:1018:0
 1e026a8:    cc ff a0 22 00 00 	r12 = 8864 <_sdfile_handl : 22a0 >			  ## ble_hogp.c:1018:0
 1e026ae:    00 fb 20 03       	r0 = 800 <BTCTLER_LE_CONTROLLER_BSS_SIZE+0x14 : 320 >			  ## ble_hogp.c:1022:41
 1e026b2:    c1 fc 66 00       	r1 = r12 + 102			  ## ble_hogp.c:1022:41
 1e026b6:    08 52             	h[r1 + 0] = r0			  ## ble_hogp.c:1022:41
 1e026b8:    20 62             	r0 = b[r1 + 2] (u)			  ## ble_hogp.c:1023:40
 1e026ba:    22 fd f0 09       	r2 = r0 & 240			  ## ble_hogp.c:1023:40
 1e026be:    c8 ff b0 20 00 00 	r8 = 8368 <gatt_client_conn_handle : 20b0 >			  ## ble_hogp.c:1023:40
 1e026c4:    00 f7 5a 81       	r0 = h[r8 + 346] (u)			  ## ble_hogp.c:1026:49
 1e026c8:    12 b0             	r2 |= 1			  ## ble_hogp.c:1023:40
 1e026ca:    2a 62             	b[r1 + 2] = r2			  ## ble_hogp.c:1023:40
 1e026cc:    72 70             	r2 = 7			  ## ble_hogp.c:1024:40
 1e026ce:    3a 62             	b[r1 + 3] = r2			  ## ble_hogp.c:1024:40
 1e026d0:    60 ff 03 09 19 00 	if ((r0 & 3) == 0) goto 50 <hogp_adv_config_set+0x64 : 1e02708 >			  ## ble_hogp.c:1024:40
 1e026d6:    60 ff fc 09 16 00 	if ((r0 & 252) == 0) goto 44 <hogp_adv_config_set+0x64 : 1e02708 >
 1e026dc:    10 71             	r0 = 17			  ## ble_hogp.c:1027:41
 1e026de:    10 f9 68 c0       	b[r12 + 104] = r0			  ## ble_hogp.c:1027:41
 1e026e2:    c4 fc 6a 00       	r4 = r12 + 106			  ## ble_hogp.c:1028:9
 1e026e6:    81 fc 5c 01       	r1 = r8 + 348			  ## ble_hogp.c:1028:9
 1e026ea:    40 08             	r0 = r4			  ## ble_hogp.c:1028:9
 1e026ec:    98 f3 fa 23       	call 3164148 <memcpy : 106ee4 >			  ## ble_hogp.c:1028:9
 1e026f0:    c0 ff bd 45 e1 01 	r0 = 31540669 <update_target_end+0x1735 : 1e145bd >			  ## ble_hogp.c:1039:9
 1e026f6:    11 70             	r1 = 1			  ## ble_hogp.c:1039:9
 1e026f8:    19 70             	r9 = 1			  ## ble_hogp.c:1039:9
 1e026fa:    80 f3 e6 64       	call 51660 <printf : 1e0f0ca >			  ## ble_hogp.c:1039:9
 1e026fe:    71 70             	r1 = 7			  ## ble_hogp.c:1040:9
 1e02700:    40 08             	r0 = r4			  ## ble_hogp.c:1040:9
 1e02702:    80 f3 e7 65       	call 52174 <put_buf : 1e0f2d4 >			  ## ble_hogp.c:1040:9
 1e02706:    09 18             	goto 18 <hogp_adv_config_set+0x76 : 1e0271a >
 1e02708:    10 70             	r0 = 1			  ## ble_hogp.c:1043:41
 1e0270a:    10 f9 68 c0       	b[r12 + 104] = r0			  ## ble_hogp.c:1043:41
 1e0270e:    c0 fc 6a 00       	r0 = r12 + 106			  ## ble_hogp.c:1044:9
 1e02712:    01 70             	r1 = 0			  ## ble_hogp.c:1044:9
 1e02714:    09 70             	r9 = 0			  ## ble_hogp.c:1044:9
 1e02716:    98 f3 eb 23       	call 3164118 <memset : 106ef0 >			  ## ble_hogp.c:1044:9
 1e0271a:    02 f9 69 c0       	r2 = b[r12 + 105] (u)			  ## ble_hogp.c:1047:5
 1e0271e:    00 f9 68 c0       	r0 = b[r12 + 104] (u)			  ## ble_hogp.c:1047:5
 1e02722:    01 d1             	r1 = r0 >> 4			  ## ble_hogp.c:1047:5
 1e02724:    c0 ff 01 45 e1 01 	r0 = 31540481 <update_target_end+0x1679 : 1e14501 >			  ## ble_hogp.c:1047:5
 1e0272a:    80 f3 ce 64       	call 51612 <printf : 1e0f0ca >			  ## ble_hogp.c:1047:5
 1e0272e:    10 70             	r0 = 1			  ## ble_hogp.c:1047:5
 1e02730:    08 02             	[sp] = r0			  ## ble_hogp.c:901:15
 1e02732:    c4 fc 3b 00       	r4 = r12 + 59			  ## ble_hogp.c:901:15
 1e02736:    01 70             	r1 = 0			  ## ble_hogp.c:901:15
 1e02738:    12 70             	r2 = 1			  ## ble_hogp.c:901:15
 1e0273a:    63 70             	r3 = 6			  ## ble_hogp.c:901:15
 1e0273c:    0a 70             	r10 = 0			  ## ble_hogp.c:901:15
 1e0273e:    40 08             	r0 = r4			  ## ble_hogp.c:901:15
 1e02740:    86 17             	call -244 <make_eir_packet_val : 1e0264e >			  ## ble_hogp.c:901:15
 1e02742:    05 08             	r5 = r0			  ## ble_hogp.c:901:15
 1e02744:    26 70             	r6 = 2			  ## ble_hogp.c:901:15
 1e02746:    00 bb             	r0 = r5 + r4			  ## ble_hogp.c:902:36
 1e02748:    32 70             	r2 = 3			  ## ble_hogp.c:902:15
 1e0274a:    03 fb 12 18       	r3 = 6162 <UPDATE_CODE_TOTAL_SIZE+0x1B0 : 1812 >			  ## ble_hogp.c:902:15
 1e0274e:    0e 02             	[sp] = r6			  ## ble_hogp.c:902:15
 1e02750:    51 08             	r1 = r5			  ## ble_hogp.c:902:15
 1e02752:    7d 17             	call -262 <make_eir_packet_val : 1e0264e >			  ## ble_hogp.c:902:15
 1e02754:    05 09             	r5 += r0			  ## ble_hogp.c:902:12
 1e02756:    41 05             	r1 = r5.b0 (u)			  ## ble_hogp.c:903:37
 1e02758:    00 b3             	r0 = r1 + r4			  ## ble_hogp.c:903:37
 1e0275a:    cb ff a2 08 00 00 	r11 = 2210 <Appearance : 8a2 >			  ## ble_hogp.c:903:37
 1e02760:    92 71             	r2 = 25			  ## ble_hogp.c:903:15
 1e02762:    0e 02             	[sp] = r6			  ## ble_hogp.c:903:15
 1e02764:    b3 08             	r3 = r11			  ## ble_hogp.c:903:15
 1e02766:    8a 17             	call -236 <make_eir_packet_data : 1e0267c >			  ## ble_hogp.c:903:15
 1e02768:    05 09             	r5 += r0			  ## ble_hogp.c:903:12
 1e0276a:    09 e0 17 10       	if (r9 != 0) goto 46 <hogp_adv_config_set+0xF8 : 1e0279c >			  ## ble_hogp.c:903:12
 1e0276e:    b6 fc 3a 00       	r6 = r11 + 58			  ## ble_hogp.c:907:23
 1e02772:    60 08             	r0 = r6			  ## ble_hogp.c:907:23
 1e02774:    98 f3 c2 23       	call 3164036 <strlen : 106efc >			  ## ble_hogp.c:907:23
 1e02778:    61 fb 1d 59       	r1 = 29 - r5			  ## ble_hogp.c:908:43
 1e0277c:    41 04             	r1 = r1.b0 (u)			  ## ble_hogp.c:909:24
 1e0277e:    03 04             	r3 = r0.b0 (u)			  ## ble_hogp.c:909:13
 1e02780:    13 f2 0a 20       	if (r3 >= r1) goto 20 <hogp_adv_config_set+0xF4 : 1e02798 >			  ## ble_hogp.c:909:13
 1e02784:    41 05             	r1 = r5.b0 (u)			  ## ble_hogp.c:908:46
 1e02786:    80 fb c0 01       	r0 = r1 + r12			  ## ble_hogp.c:908:46
 1e0278a:    b0 83             	r0 += 59			  ## ble_hogp.c:910:45
 1e0278c:    92 70             	r2 = 9			  ## ble_hogp.c:910:23
 1e0278e:    0b 02             	[sp] = r3			  ## ble_hogp.c:910:23
 1e02790:    63 08             	r3 = r6			  ## ble_hogp.c:910:23
 1e02792:    74 17             	call -280 <make_eir_packet_data : 1e0267c >			  ## ble_hogp.c:910:23
 1e02794:    05 09             	r5 += r0			  ## ble_hogp.c:910:20
 1e02796:    1a 70             	r10 = 1			  ## ble_hogp.c:910:20
 1e02798:    1a f9 0b 80       	b[r8 + 11] = r10
 1e0279c:    46 05             	r6 = r5.b0 (u)			  ## ble_hogp.c:917:9
 1e0279e:    06 e2 07 30       	if (r6 < 32) goto 14 <hogp_adv_config_set+0x10C : 1e027b0 >			  ## ble_hogp.c:917:9
 1e027a2:    c0 ff 7e 45 e1 01 	r0 = 31540606 <update_target_end+0x16F6 : 1e1457e >			  ## ble_hogp.c:918:9
 1e027a8:    80 f3 e5 65       	call 52170 <puts : 1e0f376 >			  ## ble_hogp.c:918:9
 1e027ac:    fa 07             	r10 = -1			  ## ble_hogp.c:918:9
 1e027ae:    0f 18             	goto 30 <hogp_adv_config_set+0x12A : 1e027ce >			  ## ble_hogp.c:918:9
 1e027b0:    c0 ff 9f 45 e1 01 	r0 = 31540639 <update_target_end+0x1717 : 1e1459f >			  ## ble_hogp.c:921:5
 1e027b6:    61 08             	r1 = r6			  ## ble_hogp.c:921:5
 1e027b8:    80 f3 87 64       	call 51470 <printf : 1e0f0ca >			  ## ble_hogp.c:921:5
 1e027bc:    40 08             	r0 = r4			  ## ble_hogp.c:922:5
 1e027be:    61 08             	r1 = r6			  ## ble_hogp.c:922:5
 1e027c0:    80 f3 88 65       	call 51984 <put_buf : 1e0f2d4 >			  ## ble_hogp.c:922:5
 1e027c4:    15 f9 64 c0       	b[r12 + 100] = r5			  ## ble_hogp.c:923:41
 1e027c8:    14 f6 5c c0       	[r12 + 92] = r4			  ## ble_hogp.c:924:37
 1e027cc:    0a 70             	r10 = 0			  ## ble_hogp.c:924:37
 1e027ce:    00 f9 0b 80       	r0 = b[r8 + 11] (u)			  ## ble_hogp.c:950:14
 1e027d2:    e0 fd 90 00       	r0 = r0 | r9			  ## ble_hogp.c:949:9
 1e027d6:    06 70             	r6 = 0			  ## ble_hogp.c:949:9
 1e027d8:    04 70             	r4 = 0			  ## ble_hogp.c:949:9
 1e027da:    07 70             	r7 = 0			  ## ble_hogp.c:949:9
 1e027dc:    61 ff ff 09 1e 00 	if ((r0 & 255) != 0) goto 60 <hogp_adv_config_set+0x17A : 1e0281e >			  ## ble_hogp.c:949:9
 1e027e2:    b4 fc 3a 00       	r4 = r11 + 58			  ## ble_hogp.c:952:27
 1e027e6:    40 08             	r0 = r4			  ## ble_hogp.c:952:27
 1e027e8:    98 f3 88 23       	call 3163920 <strlen : 106efc >			  ## ble_hogp.c:952:27
 1e027ec:    22 fd fe 09       	r2 = r0 & 254			  ## ble_hogp.c:954:17
 1e027f0:    d1 71             	r1 = 29			  ## ble_hogp.c:954:17
 1e027f2:    d2 e1 01 80       	if (r2 > 29) goto 2 <hogp_adv_config_set+0x154 : 1e027f8 >
 1e027f6:    01 08             	r1 = r0			  ## ble_hogp.c:954:17
 1e027f8:    43 04             	r3 = r1.b0 (u)			  ## ble_hogp.c:957:23
 1e027fa:    c0 fc 1c 00       	r0 = r12 + 28			  ## ble_hogp.c:957:23
 1e027fe:    01 70             	r1 = 0			  ## ble_hogp.c:957:23
 1e02800:    92 70             	r2 = 9			  ## ble_hogp.c:957:23
 1e02802:    0b 02             	[sp] = r3			  ## ble_hogp.c:957:23
 1e02804:    43 08             	r3 = r4			  ## ble_hogp.c:957:23
 1e02806:    3a 17             	call -396 <make_eir_packet_data : 1e0267c >			  ## ble_hogp.c:957:23
 1e02808:    04 08             	r4 = r0			  ## ble_hogp.c:957:23
 1e0280a:    04 e2 07 30       	if (r4 < 32) goto 14 <hogp_adv_config_set+0x178 : 1e0281c >
 1e0280e:    c0 ff 49 45 e1 01 	r0 = 31540553 <update_target_end+0x16C1 : 1e14549 >			  ## ble_hogp.c:962:9
 1e02814:    80 f3 af 65       	call 52062 <puts : 1e0f376 >			  ## ble_hogp.c:962:9
 1e02818:    f6 07             	r6 = -1			  ## ble_hogp.c:962:9
 1e0281a:    11 18             	goto 34 <hogp_adv_config_set+0x19A : 1e0283e >			  ## ble_hogp.c:962:9
 1e0281c:    47 08             	r7 = r4
 1e0281e:    c0 ff 65 45 e1 01 	r0 = 31540581 <update_target_end+0x16DD : 1e14565 >			  ## ble_hogp.c:966:5
 1e02824:    41 08             	r1 = r4			  ## ble_hogp.c:966:5
 1e02826:    80 f3 50 64       	call 51360 <printf : 1e0f0ca >			  ## ble_hogp.c:966:5
 1e0282a:    c5 fc 1c 00       	r5 = r12 + 28			  ## ble_hogp.c:967:5
 1e0282e:    50 08             	r0 = r5			  ## ble_hogp.c:967:5
 1e02830:    41 08             	r1 = r4			  ## ble_hogp.c:967:5
 1e02832:    80 f3 4f 65       	call 51870 <put_buf : 1e0f2d4 >			  ## ble_hogp.c:967:5
 1e02836:    17 f9 65 c0       	b[r12 + 101] = r7			  ## ble_hogp.c:968:41
 1e0283a:    15 f6 60 c0       	[r12 + 96] = r5			  ## ble_hogp.c:969:37
 1e0283e:    e0 fd a0 06       	r0 = r6 | r10			  ## ble_hogp.c:1050:9
 1e02842:    06 20             	if (r0 == 0) goto 12 <hogp_adv_config_set+0x1AC : 1e02850 >			  ## ble_hogp.c:1052:9
 1e02844:    c0 ff 26 45 e1 01 	r0 = 31540518 <update_target_end+0x169E : 1e14526 >			  ## ble_hogp.c:1053:9
 1e0284a:    80 f3 3e 64       	call 51324 <printf : 1e0f0ca >			  ## ble_hogp.c:1053:9
 1e0284e:    04 18             	goto 8 <hogp_adv_config_set+0x1B4 : 1e02858 >			  ## ble_hogp.c:1053:9
 1e02850:    c0 fc 5c 00       	r0 = r12 + 92			  ## le_gatt_server.c:894:24
 1e02854:    10 f6 a8 c0       	[r12 + 168] = r0			  ## le_gatt_server.c:894:24
 1e02858:    02 0a             	sp += 4
 1e0285a:    5c 01             	{pc, r12-r4} = [sp++]			  ## ble_hogp.c:1058:1


btstack_ble_start_after_init:
 1e0285c:    77 01             	[--sp] = {rets, r7-r4}			  ## app_comm_ble.c:103:0
 1e0285e:    fe 0b             	sp += -4			  ## app_comm_ble.c:103:0
 1e02860:    c0 ff d3 4a e1 01 	r0 = 31541971 <update_target_end+0x1C4B : 1e14ad3 >			  ## ble_hogp.c:1168:5
 1e02866:    c1 ff e2 4a e1 01 	r1 = 31541986 <update_target_end+0x1C5A : 1e14ae2 >			  ## ble_hogp.c:1168:5
 1e0286c:    80 f3 2d 64       	call 51290 <printf : 1e0f0ca >			  ## ble_hogp.c:1168:5
 1e02870:    c0 ff ee 4a e1 01 	r0 = 31541998 <update_target_end+0x1C66 : 1e14aee >			  ## ble_hogp.c:1169:5
 1e02876:    c1 ff 06 4b e1 01 	r1 = 31542022 <update_target_end+0x1C7E : 1e14b06 >			  ## ble_hogp.c:1169:5
 1e0287c:    80 f3 25 64       	call 51274 <printf : 1e0f0ca >			  ## ble_hogp.c:1169:5
 1e02880:    c4 ff b0 20 00 00 	r4 = 8368 <gatt_client_conn_handle : 20b0 >			  ## ble_hogp.c:1169:5
 1e02886:    00 70             	r0 = 0			  ## ble_hogp.c:1169:5
 1e02888:    28 59             	h[r4 + 36] = r0			  ## ble_hogp.c:1171:21
 1e0288a:    92 16             	call -732 <__hogp_conn_pair_vm_do : 1e025b0 >			  ## ble_hogp.c:1172:5
 1e0288c:    00 f7 5a 41       	r0 = h[r4 + 346] (u)			  ## ble_hogp.c:1173:24
 1e02890:    60 ff 03 09 05 00 	if ((r0 & 3) == 0) goto 10 <btstack_ble_start_after_init+0x44 : 1e028a0 >			  ## ble_hogp.c:1173:24
 1e02896:    30 fd fc 09       	r0 = r0 & 4294967043			  ## ble_hogp.c:1174:39
 1e0289a:    90 b1             	r0 |= 8			  ## ble_hogp.c:1174:39
 1e0289c:    10 f7 5a 41       	h[r4 + 346] = r0			  ## ble_hogp.c:1174:39
 1e028a0:    c2 ff 90 30 e1 01 	r2 = 31535248 <update_target_end+0x208 : 1e13090 >			  ## le_gatt_common.c:952:5
 1e028a6:    c3 ff d3 33 e1 01 	r3 = 31536083 <update_target_end+0x54B : 1e133d3 >			  ## le_gatt_common.c:952:5
 1e028ac:    20 70             	r0 = 2			  ## le_gatt_common.c:952:5
 1e028ae:    80 f3 3c 64       	call 51320 <log_print : 1e0f12a >			  ## le_gatt_common.c:952:5
 1e028b2:    c7 ff a0 08 00 00 	r7 = 2208 <ble_device_name_len : 8a0 >			  ## le_gatt_common.c:952:5
 1e028b8:    75 fc 5a 00       	r5 = r7 + 90			  ## le_gatt_common.c:959:27
 1e028bc:    50 08             	r0 = r5			  ## le_gatt_common.c:959:27
 1e028be:    98 f3 1d 23       	call 3163706 <strlen : 106efc >			  ## le_gatt_common.c:959:27
 1e028c2:    21 fd fe 09       	r1 = r0 & 254			  ## le_gatt_common.c:960:9
 1e028c6:    08 6e             	b[r7 + 0] = r0			  ## le_gatt_common.c:959:25
 1e028c8:    e1 e1 08 30       	if (r1 < 30) goto 16 <btstack_ble_start_after_init+0x80 : 1e028dc >			  ## le_gatt_common.c:959:25
 1e028cc:    c2 ff ec 33 e1 01 	r2 = 31536108 <update_target_end+0x564 : 1e133ec >			  ## le_gatt_common.c:961:9
 1e028d2:    40 70             	r0 = 4			  ## le_gatt_common.c:961:9
 1e028d4:    80 f3 29 64       	call 51282 <log_print : 1e0f12a >			  ## le_gatt_common.c:961:9
 1e028d8:    d0 71             	r0 = 29			  ## le_gatt_common.c:961:9
 1e028da:    08 6e             	b[r7 + 0] = r0			  ## le_gatt_common.c:962:29
 1e028dc:    74 fc 3c 00       	r4 = r7 + 60			  ## le_gatt_common.c:964:5
 1e028e0:    02 04             	r2 = r0.b0 (u)			  ## le_gatt_common.c:964:37
 1e028e2:    40 08             	r0 = r4			  ## le_gatt_common.c:964:5
 1e028e4:    51 08             	r1 = r5			  ## le_gatt_common.c:964:5
 1e028e6:    98 f3 fd 22       	call 3163642 <memcpy : 106ee4 >			  ## le_gatt_common.c:964:5
 1e028ea:    c5 ff e0 5a e1 01 	r5 = 31546080 <ble_ext_name : 1e15ae0 >			  ## le_gatt_common.c:964:5
 1e028f0:    50 08             	r0 = r5			  ## le_gatt_common.c:967:27
 1e028f2:    98 f3 03 23       	call 3163654 <strlen : 106efc >			  ## le_gatt_common.c:967:27
 1e028f6:    01 6e             	r1 = b[r7 + 0] (u)			  ## le_gatt_common.c:968:28
 1e028f8:    06 08             	r6 = r0			  ## le_gatt_common.c:967:27
 1e028fa:    82 05             	r2 = r6.b0 (u)			  ## le_gatt_common.c:968:13
 1e028fc:    80 b2             	r0 = r1 + r2			  ## le_gatt_common.c:968:26
 1e028fe:    e0 e1 08 30       	if (r0 < 30) goto 16 <btstack_ble_start_after_init+0xB6 : 1e02912 >			  ## le_gatt_common.c:968:13
 1e02902:    c2 ff 18 34 e1 01 	r2 = 31536152 <update_target_end+0x590 : 1e13418 >			  ## le_gatt_common.c:969:13
 1e02908:    40 70             	r0 = 4			  ## le_gatt_common.c:969:13
 1e0290a:    80 f3 0e 64       	call 51228 <log_print : 1e0f12a >			  ## le_gatt_common.c:969:13
 1e0290e:    00 6e             	r0 = b[r7 + 0] (u)			  ## le_gatt_common.c:969:13
 1e02910:    08 18             	goto 16 <btstack_ble_start_after_init+0xC6 : 1e02922 >			  ## le_gatt_common.c:969:13
 1e02912:    c0 b3             	r0 = r1 + r7			  ## le_gatt_common.c:971:21
 1e02914:    c0 83             	r0 += 60			  ## le_gatt_common.c:971:21
 1e02916:    51 08             	r1 = r5			  ## le_gatt_common.c:971:13
 1e02918:    98 f3 e4 22       	call 3163592 <memcpy : 106ee4 >			  ## le_gatt_common.c:971:13
 1e0291c:    00 6e             	r0 = b[r7 + 0] (u)			  ## le_gatt_common.c:972:33
 1e0291e:    60 09             	r0 += r6			  ## le_gatt_common.c:972:33
 1e02920:    08 6e             	b[r7 + 0] = r0			  ## le_gatt_common.c:972:33
 1e02922:    03 04             	r3 = r0.b0 (u)			  ## le_gatt_common.c:976:5
 1e02924:    00 70             	r0 = 0			  ## le_gatt_common.c:976:5
 1e02926:    10 fa 00 34       	b[r3+r4] = r0			  ## le_gatt_common.c:976:42
 1e0292a:    c2 ff 44 34 e1 01 	r2 = 31536196 <update_target_end+0x5BC : 1e13444 >			  ## le_gatt_common.c:977:5
 1e02930:    20 70             	r0 = 2			  ## le_gatt_common.c:977:5
 1e02932:    0c 02             	[sp] = r4			  ## le_gatt_common.c:977:5
 1e02934:    80 f3 f9 63       	call 51186 <log_print : 1e0f12a >			  ## le_gatt_common.c:977:5
 1e02938:    c0 ff 4d 46 e1 01 	r0 = 31540813 <update_target_end+0x17C5 : 1e1464d >			  ## ble_hogp.c:1132:5
 1e0293e:    c1 ff 45 4b e1 01 	r1 = 31542085 <update_target_end+0x1CBD : 1e14b45 >			  ## ble_hogp.c:1132:5
 1e02944:    80 f3 c1 63       	call 51074 <printf : 1e0f0ca >			  ## ble_hogp.c:1132:5
 1e02948:    c0 ff a0 22 00 00 	r0 = 8864 <_sdfile_handl : 22a0 >			  ## le_gatt_server.c:911:30
 1e0294e:    c1 ff 3b 5c e1 01 	r1 = 31546427 <hogp_profile_data : 1e15c3b >			  ## le_gatt_server.c:910:26
 1e02954:    11 f6 ac 00       	[r0 + 172] = r1			  ## le_gatt_server.c:910:26
 1e02958:    01 fb 35 03       	r1 = 821 <BTCTLER_LE_CONTROLLER_BSS_SIZE+0x29 : 335 >			  ## le_gatt_server.c:911:30
 1e0295c:    11 f7 b0 00       	h[r0 + 176] = r1			  ## le_gatt_server.c:911:30
 1e02960:    80 f3 fe 5c       	call 47612 <att_server_change_profile : 1e0e360 >			  ## le_gatt_server.c:912:5
 1e02964:    9f 16             	call -706 <hogp_adv_config_set : 1e026a4 >			  ## ble_hogp.c:1134:5
 1e02966:    10 70             	r0 = 1			  ## ble_hogp.c:1187:5
 1e02968:    bf f3 9e f7       	call -4292 <ble_module_enable : 1e018a8 >			  ## ble_hogp.c:1187:5
 1e0296c:    02 0a             	sp += 4			  ## ble_hogp.c:1187:5
 1e0296e:    57 01             	{pc, r7-r4} = [sp++]			  ## app_comm_ble.c:111:1


keyfob_event_handler:
 1e02970:    76 01             	[--sp] = {rets, r6-r4}			  ## app_keyfob.c:877:0
 1e02972:    fc 0b             	sp += -8			  ## app_keyfob.c:877:0
 1e02974:    14 08             	r4 = r1			  ## app_keyfob.c:877:0
 1e02976:    00 58             	r0 = h[r4 + 0] (u)			  ## app_keyfob.c:881:16
 1e02978:    40 e0 06 10       	if (r0 != 4) goto 12 <keyfob_event_handler+0x18 : 1e02988 >
 1e0297c:    10 48             	r0 = [r4 + 4]			  ## app_keyfob.c:881:78
 1e0297e:    c1 ff 00 57 4f 50 	r1 = 1347376896 <uECC_vli_cmp_unsafe+0x3EE704 : 4f5700 >			  ## app_keyfob.c:881:68
 1e02984:    10 f2 15 01       	if (r0 == r1) goto 554 <.GJTIE272_0_0_+0x1DE : 1e02bb2 >			  ## app_keyfob.c:881:68
 1e02988:    c6 ff b0 20 00 00 	r6 = 8368 <gatt_client_conn_handle : 20b0 >
 1e0298e:    00 5d             	r0 = h[r6 + 32] (u)			  ## app_keyfob.c:882:9
 1e02990:    c1 ff 20 bf 02 00 	r1 = 180000 <text_size+0xB070 : 2bf20 >			  ## app_keyfob.c:882:9
 1e02996:    80 f3 ed 73       	call 59354 <sys_timer_modify : 1e11174 >			  ## app_keyfob.c:882:9
 1e0299a:    00 58             	r0 = h[r4 + 0] (u)			  ## app_keyfob.c:882:9
 1e0299c:    00 e1 1d 00       	if (r0 == 16) goto 58 <.GJTIE272_0_0_+0x6 : 1e029da >			  ## app_keyfob.c:890:5
 1e029a0:    10 e0 07 11       	if (r0 != 1) goto 526 <.GJTIE272_0_0_+0x1DE : 1e02bb2 >
 1e029a4:    10 48             	r0 = [r4 + 4]			  ## app_keyfob.c:867:16
 1e029a6:    c1 ff 00 59 45 4b 	r1 = 1262835968 <uECC_vli_cmp_unsafe+0x134E904 : 1455900 >			  ## app_keyfob.c:867:20
 1e029ac:    10 f2 01 11       	if (r0 != r1) goto 514 <.GJTIE272_0_0_+0x1DE : 1e02bb2 >			  ## app_keyfob.c:867:20
 1e029b0:    c5 68             	r5 = b[r4 + 12] (u)			  ## app_keyfob.c:869:34
 1e029b2:    a4 68             	r4 = b[r4 + 10] (u)			  ## app_keyfob.c:868:35
 1e029b4:    c0 ff 0b 3f e1 01 	r0 = 31538955 <update_target_end+0x1083 : 1e13f0b >			  ## app_keyfob.c:870:9
 1e029ba:    41 08             	r1 = r4			  ## app_keyfob.c:870:9
 1e029bc:    52 08             	r2 = r5			  ## app_keyfob.c:870:9
 1e029be:    80 f3 84 63       	call 50952 <printf : 1e0f0ca >			  ## app_keyfob.c:870:9
 1e029c2:    44 e0 f6 80       	if (r4 > 4) goto 492 <.GJTIE272_0_0_+0x1DE : 1e02bb2 >
 1e029c6:    60 c0             	r0 = r4 << 1
 1e029c8:    b0 00             	tbh [r0]


.GJTIL272_0_0_:
 1e029ca:    05 00     < 5 : 0x5 >
 1e029cc:    c3 00     < 195 : 0xC3 >
 1e029ce:    a7 00     < 167 : 0xA7 >
 1e029d0:    ac 00     < 172 : 0xAC >
 1e029d2:    b2 00     < 178 : 0xB2 >
 1e029d4:    01 70             	r1 = 0			  ## app_keyfob.c:514:9
 1e029d6:    50 08             	r0 = r5			  ## app_keyfob.c:514:9
 1e029d8:    a8 18             	goto 336 <.GJTIE272_0_0_+0x156 : 1e02b2a >			  ## app_keyfob.c:514:9
 1e029da:    10 48             	r0 = [r4 + 4]			  ## app_keyfob.c:898:25
 1e029dc:    c1 ff 00 45 4c 42 	r1 = 1112294656 <uECC_vli_cmp_unsafe+0x3BD504 : 4c4500 >			  ## app_keyfob.c:898:13
 1e029e2:    10 f2 3d 00       	if (r0 == r1) goto 122 <.GJTIE272_0_0_+0x8C : 1e02a60 >			  ## app_keyfob.c:898:13
 1e029e6:    c1 ff 00 4d 4d 43 	r1 = 1129139456 <uECC_vli_cmp_unsafe+0x13CDD04 : 14d4d00 >
 1e029ec:    10 f2 4f 00       	if (r0 == r1) goto 158 <.GJTIE272_0_0_+0xBA : 1e02a8e >
 1e029f0:    c1 ff 00 49 43 48 	r1 = 1212369152 <uECC_vli_cmp_unsafe+0x32D904 : 434900 >
 1e029f6:    10 f2 62 00       	if (r0 == r1) goto 196 <.GJTIE272_0_0_+0xEA : 1e02abe >
 1e029fa:    c1 ff 00 4e 4f 43 	r1 = 1129270784 <uECC_vli_cmp_unsafe+0x13EDE04 : 14f4e00 >
 1e02a00:    10 f2 d7 10       	if (r0 != r1) goto 430 <.GJTIE272_0_0_+0x1DE : 1e02bb2 >
 1e02a04:    83 68             	r3 = b[r4 + 8] (u)			  ## app_keyfob.c:797:5
 1e02a06:    c2 ff 21 3f e1 01 	r2 = 31538977 <update_target_end+0x1099 : 1e13f21 >			  ## app_keyfob.c:797:5
 1e02a0c:    20 70             	r0 = 2			  ## app_keyfob.c:797:5
 1e02a0e:    80 f3 8c 63       	call 50968 <log_print : 1e0f12a >			  ## app_keyfob.c:797:5
 1e02a12:    80 68             	r0 = b[r4 + 8] (u)			  ## app_keyfob.c:799:17
 1e02a14:    30 e0 cd 10       	if (r0 != 3) goto 410 <.GJTIE272_0_0_+0x1DE : 1e02bb2 >			  ## app_keyfob.c:799:17
 1e02a18:    c2 ff 67 3f e1 01 	r2 = 31539047 <update_target_end+0x10DF : 1e13f67 >			  ## app_keyfob.c:804:9
 1e02a1e:    20 70             	r0 = 2			  ## app_keyfob.c:804:9
 1e02a20:    80 f3 83 63       	call 50950 <log_print : 1e0f12a >			  ## app_keyfob.c:804:9
 1e02a24:    00 70             	r0 = 0			  ## app_keyfob.c:806:9
 1e02a26:    5f 15             	call -1346 <keyfob_vm_deal : 1e024e6 >			  ## app_keyfob.c:806:9
 1e02a28:    10 4d             	r0 = [r6 + 68]			  ## app_keyfob.c:808:13
 1e02a2a:    20 e0 02 10       	if (r0 != 2) goto 4 <.GJTIE272_0_0_+0x5E : 1e02a32 >			  ## app_keyfob.c:808:13
 1e02a2e:    16 17             	call -468 <btstack_ble_start_after_init : 1e0285c >			  ## app_keyfob.c:810:13
 1e02a30:    10 4d             	r0 = [r6 + 68]			  ## app_keyfob.c:810:13
 1e02a32:    18 02             	[sp+4] = r0			  ## app_keyfob.c:940:5
 1e02a34:    f1 7f             	r1 = 255			  ## app_keyfob.c:940:5
 1e02a36:    c2 ff 8c 3f e1 01 	r2 = 31539084 <update_target_end+0x1104 : 1e13f8c >			  ## app_keyfob.c:940:5
 1e02a3c:    c3 ff b0 3f e1 01 	r3 = 31539120 <update_target_end+0x1128 : 1e13fb0 >			  ## app_keyfob.c:940:5
 1e02a42:    20 70             	r0 = 2			  ## app_keyfob.c:940:5
 1e02a44:    09 02             	[sp] = r1			  ## app_keyfob.c:940:5
 1e02a46:    80 f3 70 63       	call 50912 <log_print : 1e0f12a >			  ## app_keyfob.c:940:5
 1e02a4a:    10 4d             	r0 = [r6 + 68]			  ## app_keyfob.c:942:9
 1e02a4c:    20 e0 85 10       	if (r0 != 2) goto 266 <.GJTIE272_0_0_+0x186 : 1e02b5a >			  ## app_keyfob.c:942:9
 1e02a50:    c2 ff c9 3f e1 01 	r2 = 31539145 <update_target_end+0x1141 : 1e13fc9 >			  ## app_keyfob.c:944:9
 1e02a56:    20 70             	r0 = 2			  ## app_keyfob.c:944:9
 1e02a58:    80 f3 67 63       	call 50894 <log_print : 1e0f12a >			  ## app_keyfob.c:944:9
 1e02a5c:    10 70             	r0 = 1			  ## app_keyfob.c:958:13
 1e02a5e:    8c 18             	goto 280 <.GJTIE272_0_0_+0x1A4 : 1e02b78 >			  ## app_keyfob.c:958:13
 1e02a60:    85 68             	r5 = b[r4 + 8] (u)			  ## app_keyfob.c:903:57
 1e02a62:    04 69             	r4 = b[r4 + 16] (u)			  ## app_keyfob.c:903:76
 1e02a64:    c2 ff 01 41 e1 01 	r2 = 31539457 <update_target_end+0x1279 : 1e14101 >			  ## app_keyfob.c:740:5
 1e02a6a:    20 70             	r0 = 2			  ## app_keyfob.c:740:5
 1e02a6c:    0c 02             	[sp] = r4			  ## app_keyfob.c:740:5
 1e02a6e:    53 08             	r3 = r5			  ## app_keyfob.c:740:5
 1e02a70:    80 f3 5b 63       	call 50870 <log_print : 1e0f12a >			  ## app_keyfob.c:740:5
 1e02a74:    55 e0 45 00       	if (r5 == 5) goto 138 <.GJTIE272_0_0_+0x12E : 1e02b02 >			  ## app_keyfob.c:741:5
 1e02a78:    35 e0 9b 10       	if (r5 != 3) goto 310 <.GJTIE272_0_0_+0x1DE : 1e02bb2 >
 1e02a7c:    70 6c             	r0 = b[r6 + 7] (u)			  ## app_keyfob.c:747:20
 1e02a7e:    10 80             	r0 += 1			  ## app_keyfob.c:747:20
 1e02a80:    78 6c             	b[r6 + 7] = r0			  ## app_keyfob.c:747:20
 1e02a82:    70 70             	r0 = 7			  ## app_keyfob.c:748:9
 1e02a84:    bf f3 0e fb       	call -2532 <led_on_off : 1e020a4 >			  ## app_keyfob.c:748:9
 1e02a88:    d1 f4 02 69       	[r6 + 68] = 2			  ## app_keyfob.c:749:21
 1e02a8c:    92 18             	goto 292 <.GJTIE272_0_0_+0x1DE : 1e02bb2 >			  ## app_keyfob.c:749:21
 1e02a8e:    81 68             	r1 = b[r4 + 8] (u)			  ## app_keyfob.c:839:5
 1e02a90:    40 48             	r0 = [r4 + 16]			  ## app_keyfob.c:839:5
 1e02a92:    18 02             	[sp+4] = r0			  ## app_keyfob.c:839:5
 1e02a94:    c2 ff 75 41 e1 01 	r2 = 31539573 <update_target_end+0x12ED : 1e14175 >			  ## app_keyfob.c:839:5
 1e02a9a:    c3 ff 9b 41 e1 01 	r3 = 31539611 <update_target_end+0x1313 : 1e1419b >			  ## app_keyfob.c:839:5
 1e02aa0:    20 70             	r0 = 2			  ## app_keyfob.c:839:5
 1e02aa2:    09 02             	[sp] = r1			  ## app_keyfob.c:839:5
 1e02aa4:    80 f3 41 63       	call 50818 <log_print : 1e0f12a >			  ## app_keyfob.c:839:5
 1e02aa8:    80 68             	r0 = b[r4 + 8] (u)			  ## app_keyfob.c:841:17
 1e02aaa:    40 e0 6a 00       	if (r0 == 4) goto 212 <.GJTIE272_0_0_+0x1AE : 1e02b82 >			  ## app_keyfob.c:841:5
 1e02aae:    20 e0 76 00       	if (r0 == 2) goto 236 <.GJTIE272_0_0_+0x1CA : 1e02b9e >
 1e02ab2:    10 e0 7e 10       	if (r0 != 1) goto 252 <.GJTIE272_0_0_+0x1DE : 1e02bb2 >
 1e02ab6:    c2 ff ba 41 e1 01 	r2 = 31539642 <update_target_end+0x1332 : 1e141ba >			  ## app_keyfob.c:843:9
 1e02abc:    73 18             	goto 230 <.GJTIE272_0_0_+0x1D0 : 1e02ba4 >			  ## app_keyfob.c:843:9
 1e02abe:    83 68             	r3 = b[r4 + 8] (u)			  ## app_keyfob.c:772:5
 1e02ac0:    41 48             	r1 = [r4 + 16]			  ## app_keyfob.c:772:5
 1e02ac2:    c2 ff ae 40 e1 01 	r2 = 31539374 <update_target_end+0x1226 : 1e140ae >			  ## app_keyfob.c:772:5
 1e02ac8:    20 70             	r0 = 2			  ## app_keyfob.c:772:5
 1e02aca:    09 02             	[sp] = r1			  ## app_keyfob.c:772:5
 1e02acc:    80 f3 2d 63       	call 50778 <log_print : 1e0f12a >			  ## app_keyfob.c:772:5
 1e02ad0:    80 68             	r0 = b[r4 + 8] (u)			  ## app_comm_ble.c:184:13
 1e02ad2:    01 ff fe 00 6d 00 	if (r0 != 254) goto 218 <.GJTIE272_0_0_+0x1DE : 1e02bb2 >			  ## app_comm_ble.c:184:13
 1e02ad8:    43 48             	r3 = [r4 + 16]			  ## app_comm_ble.c:185:9
 1e02ada:    c2 ff b0 44 e1 01 	r2 = 31540400 <update_target_end+0x1628 : 1e144b0 >			  ## app_comm_ble.c:185:9
 1e02ae0:    20 70             	r0 = 2			  ## app_comm_ble.c:185:9
 1e02ae2:    80 f3 22 63       	call 50756 <log_print : 1e0f12a >			  ## app_comm_ble.c:185:9
 1e02ae6:    40 48             	r0 = [r4 + 16]			  ## app_comm_ble.c:186:21
 1e02ae8:    64 30             	if (r0 != 0) goto 200 <.GJTIE272_0_0_+0x1DE : 1e02bb2 >			  ## app_comm_ble.c:186:21
 1e02aea:    00 70             	r0 = 0			  ## app_comm_ble.c:188:13
 1e02aec:    80 f3 3d 2d       	call 23162 <set_remote_test_flag : 1e0856a >			  ## app_comm_ble.c:188:13
 1e02af0:    c2 ff d0 44 e1 01 	r2 = 31540432 <update_target_end+0x1648 : 1e144d0 >			  ## app_comm_ble.c:189:13
 1e02af6:    20 70             	r0 = 2			  ## app_comm_ble.c:189:13
 1e02af8:    80 f3 17 63       	call 50734 <log_print : 1e0f12a >			  ## app_comm_ble.c:189:13
 1e02afc:    90 f3 70 04       	call 2099424 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e02b00:    58 18             	goto 176 <.GJTIE272_0_0_+0x1DE : 1e02bb2 >			  ## cpu.h:148:5
 1e02b02:    64 e1 53 10       	if (r4 != 22) goto 166 <.GJTIE272_0_0_+0x1D8 : 1e02bac >			  ## app_keyfob.c:754:13
 1e02b06:    70 70             	r0 = 7			  ## app_keyfob.c:755:13
 1e02b08:    bf f3 cc fa       	call -2664 <led_on_off : 1e020a4 >			  ## app_keyfob.c:755:13
 1e02b0c:    c0 ff 59 41 e1 01 	r0 = 31539545 <update_target_end+0x12D1 : 1e14159 >			  ## app_keyfob.c:756:13
 1e02b12:    80 f3 da 62       	call 50612 <printf : 1e0f0ca >			  ## app_keyfob.c:756:13
 1e02b16:    4d 18             	goto 154 <.GJTIE272_0_0_+0x1DE : 1e02bb2 >			  ## app_keyfob.c:756:13
 1e02b18:    15 e0 1d 10       	if (r5 != 1) goto 58 <.GJTIE272_0_0_+0x182 : 1e02b56 >
 1e02b1c:    10 70             	r0 = 1			  ## app_keyfob.c:543:13
 1e02b1e:    11 70             	r1 = 1			  ## app_keyfob.c:543:13
 1e02b20:    19 18             	goto 50 <.GJTIE272_0_0_+0x180 : 1e02b54 >			  ## app_keyfob.c:543:13
 1e02b22:    15 e0 13 10       	if (r5 != 1) goto 38 <.GJTIE272_0_0_+0x178 : 1e02b4c >
 1e02b26:    10 70             	r0 = 1			  ## app_keyfob.c:551:13
 1e02b28:    21 70             	r1 = 2			  ## app_keyfob.c:551:13
 1e02b2a:    71 14             	call -1822 <key_value_send : 1e0240e >
 1e02b2c:    0f 18             	goto 30 <.GJTIE272_0_0_+0x178 : 1e02b4c >
 1e02b2e:    c1 ff 8c 5b e1 01 	r1 = 31546252 <key_a_power_press : 1e15b8c >			  ## app_keyfob.c:524:5
 1e02b34:    30 70             	r0 = 3			  ## app_keyfob.c:524:5
 1e02b36:    32 70             	r2 = 3			  ## app_keyfob.c:524:5
 1e02b38:    9f 14             	call -1730 <ble_hid_data_send : 1e02478 >			  ## app_keyfob.c:524:5
 1e02b3a:    20 70             	r0 = 2			  ## app_keyfob.c:525:5
 1e02b3c:    98 f3 3c 21       	call 3162744 <os_time_dly : 106db8 >			  ## app_keyfob.c:525:5
 1e02b40:    c1 ff 8f 5b e1 01 	r1 = 31546255 <key_a_power_null : 1e15b8f >			  ## app_keyfob.c:526:5
 1e02b46:    30 70             	r0 = 3			  ## app_keyfob.c:526:5
 1e02b48:    32 70             	r2 = 3			  ## app_keyfob.c:526:5
 1e02b4a:    96 14             	call -1748 <ble_hid_data_send : 1e02478 >			  ## app_keyfob.c:526:5
 1e02b4c:    40 70             	r0 = 4
 1e02b4e:    2f 18             	goto 94 <.GJTIE272_0_0_+0x1DA : 1e02bae >
 1e02b50:    01 70             	r1 = 0			  ## app_keyfob.c:532:9
 1e02b52:    50 08             	r0 = r5			  ## app_keyfob.c:532:9
 1e02b54:    5c 14             	call -1864 <key_value_send : 1e0240e >
 1e02b56:    50 70             	r0 = 5
 1e02b58:    2a 18             	goto 84 <.GJTIE272_0_0_+0x1DA : 1e02bae >
 1e02b5a:    c2 ff 42 40 e1 01 	r2 = 31539266 <update_target_end+0x11BA : 1e14042 >			  ## app_keyfob.c:964:9
 1e02b60:    20 70             	r0 = 2			  ## app_keyfob.c:964:9
 1e02b62:    80 f3 e2 62       	call 50628 <log_print : 1e0f12a >			  ## app_keyfob.c:964:9
 1e02b66:    c2 ff 75 40 e1 01 	r2 = 31539317 <update_target_end+0x11ED : 1e14075 >			  ## app_keyfob.c:966:13
 1e02b6c:    20 70             	r0 = 2			  ## app_keyfob.c:966:13
 1e02b6e:    80 f3 dc 62       	call 50616 <log_print : 1e0f12a >			  ## app_keyfob.c:966:13
 1e02b72:    90 f3 35 04       	call 2099306 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e02b76:    00 70             	r0 = 0			  ## app_keyfob.c:973:9
 1e02b78:    bf f3 96 f6       	call -4820 <ble_module_enable : 1e018a8 >
 1e02b7c:    10 70             	r0 = 1			  ## app_keyfob.c:988:5
 1e02b7e:    b3 14             	call -1690 <keyfob_vm_deal : 1e024e6 >			  ## app_keyfob.c:988:5
 1e02b80:    18 18             	goto 48 <.GJTIE272_0_0_+0x1DE : 1e02bb2 >			  ## app_keyfob.c:988:5
 1e02b82:    c2 ff 1e 42 e1 01 	r2 = 31539742 <update_target_end+0x1396 : 1e1421e >			  ## app_keyfob.c:160:5
 1e02b88:    c3 ff 37 42 e1 01 	r3 = 31539767 <update_target_end+0x13AF : 1e14237 >			  ## app_keyfob.c:160:5
 1e02b8e:    20 70             	r0 = 2			  ## app_keyfob.c:160:5
 1e02b90:    80 f3 cb 62       	call 50582 <log_print : 1e0f12a >			  ## app_keyfob.c:160:5
 1e02b94:    00 5d             	r0 = h[r6 + 32] (u)			  ## app_keyfob.c:161:9
 1e02b96:    0d 20             	if (r0 == 0) goto 26 <.GJTIE272_0_0_+0x1DE : 1e02bb2 >			  ## app_keyfob.c:161:9
 1e02b98:    80 f3 74 71       	call 58088 <sys_timeout_del : 1e10e84 >			  ## app_keyfob.c:162:9
 1e02b9c:    0a 18             	goto 20 <.GJTIE272_0_0_+0x1DE : 1e02bb2 >			  ## app_keyfob.c:162:9
 1e02b9e:    c2 ff ec 41 e1 01 	r2 = 31539692 <update_target_end+0x1364 : 1e141ec >			  ## app_keyfob.c:847:9
 1e02ba4:    20 70             	r0 = 2
 1e02ba6:    80 f3 c0 62       	call 50560 <log_print : 1e0f12a >
 1e02baa:    03 18             	goto 6 <.GJTIE272_0_0_+0x1DE : 1e02bb2 >
 1e02bac:    20 70             	r0 = 2			  ## app_keyfob.c:758:13
 1e02bae:    bf f3 79 fa       	call -2830 <led_on_off : 1e020a4 >
 1e02bb2:    00 70             	r0 = 0			  ## app_keyfob.c:926:1
 1e02bb4:    04 0a             	sp += 8			  ## app_keyfob.c:926:1
 1e02bb6:    56 01             	{pc, r6-r4} = [sp++]			  ## app_keyfob.c:926:1


io_check_timer_handle:
 1e02bb8:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## app_keyfob.c:256:0
 1e02bbe:    81 60             	r1 = b[r0 + 8] (u)			  ## app_keyfob.c:273:9
 1e02bc0:    71 e0 16 80       	if (r1 > 7) goto 44 <io_check_timer_handle+0x38 : 1e02bf0 >			  ## app_keyfob.c:273:9
 1e02bc4:    12 70             	r2 = 1
 1e02bc6:    f8 fd 10 12       	r1 = r2 << r1
 1e02bca:    60 ff c4 19 10 00 	if ((r1 & 196) == 0) goto 32 <io_check_timer_handle+0x38 : 1e02bf0 >
 1e02bd0:    c1 ff 04 51 1e 00 	r1 = 1986820 <uECC_vli_cmp_unsafe+0xDE108 : 1e5104 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:534:19
 1e02bd6:    01 42             	r1 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:534:19
 1e02bd8:    c2 ff 00 18 1e 00 	r2 = 1972224 <uECC_vli_cmp_unsafe+0xDA804 : 1e1800 >
 1e02bde:    02 44             	r2 = [r2 + 0]
 1e02be0:    81 fd 08 11       	r1 = uextra(r1, p:1, l:1)			  ## board_ac6328a_keyfob.c:232:5
 1e02be4:    d2 d3             	r2 = r2 >> 15			  ## board_ac6328a_keyfob.c:238:5
 1e02be6:    22 fd 02 29       	r2 = r2 & 2			  ## board_ac6328a_keyfob.c:238:5
 1e02bea:    51 b4             	r1 |= r2			  ## board_ac6328a_keyfob.c:238:5
 1e02bec:    31 e0 03 10       	if (r1 != 3) goto 6 <io_check_timer_handle+0x3E : 1e02bf6 >			  ## board_ac6328a_keyfob.c:238:5
 1e02bf0:    d3 f4 00 09       	[r0 + 76] = 0
 1e02bf4:    20 00             	rts			  ## app_keyfob.c:286:1
 1e02bf6:    31 41             	r1 = [r0 + 76]			  ## app_keyfob.c:279:13
 1e02bf8:    11 80             	r1 += 1			  ## app_keyfob.c:279:13
 1e02bfa:    39 41             	[r0 + 76] = r1			  ## app_keyfob.c:279:13
 1e02bfc:    21 e0 03 30       	if (r1 < 2) goto 6 <io_check_timer_handle+0x4E : 1e02c06 >			  ## app_keyfob.c:279:13
 1e02c00:    60 70             	r0 = 6			  ## app_keyfob.c:280:13
 1e02c02:    ff f3 4f fa       	goto -2914 <led_on_off : 1e020a4 >			  ## app_keyfob.c:280:13
 1e02c06:    20 00             	rts			  ## app_keyfob.c:286:1


led_timer_handle:
 1e02c08:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## app_keyfob.c:398:0
 1e02c0e:    21 41             	r1 = [r0 + 72]			  ## app_keyfob.c:404:9
 1e02c10:    11 e0 03 80       	if (r1 > 1) goto 6 <led_timer_handle+0x12 : 1e02c1a >			  ## app_keyfob.c:404:9
 1e02c14:    a0 60             	r0 = b[r0 + 10] (u)			  ## app_keyfob.c:410:9
 1e02c16:    ff f3 45 fa       	goto -2934 <led_on_off : 1e020a4 >			  ## app_keyfob.c:410:9
 1e02c1a:    f1 8f             	r1 += -1			  ## app_keyfob.c:413:22
 1e02c1c:    29 41             	[r0 + 72] = r1			  ## app_keyfob.c:413:22
 1e02c1e:    21 f9 09 00       	r1 = b[r0 + 9] (s)			  ## app_keyfob.c:416:9
 1e02c22:    f1 ef 12 c0       	ifs (r1 > -1) goto 36 <led_timer_handle+0x42 : 1e02c4a >			  ## app_keyfob.c:416:9
 1e02c26:    12 fd 01 19       	r2 = r1 ^ 1			  ## app_keyfob.c:417:22
 1e02c2a:    9a 60             	b[r0 + 9] = r2			  ## app_keyfob.c:417:22
 1e02c2c:    c0 ff 00 50 1e 00 	r0 = 1986560 <uECC_vli_cmp_unsafe+0xDE004 : 1e5000 >
 1e02c32:    02 40             	r2 = [r0 + 0]
 1e02c34:    00 f3 03 10       	if ((r1 & 1) == 0) goto 6 <led_timer_handle+0x36 : 1e02c3e >
 1e02c38:    31 fd 02 2a       	r1 = r2 & 4294966783			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:434:16
 1e02c3c:    02 18             	goto 4 <led_timer_handle+0x3A : 1e02c42 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:434:16
 1e02c3e:    01 fd 02 2a       	r1 = r2 | 512			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:432:16
 1e02c42:    09 40             	[r0 + 0] = r1
 1e02c44:    21 40             	r1 = [r0 + 8]
 1e02c46:    f1 b4             	r1 &= 4294966783
 1e02c48:    29 40             	[r0 + 8] = r1
 1e02c4a:    20 00             	rts			  ## app_keyfob.c:425:1


hogp_idle_query:
 1e02c4c:    10 70             	r0 = 1			  ## ble_hogp.c:1243:0
 1e02c4e:    20 00             	rts			  ## ble_hogp.c:1244:5


adc_value_avg:
 1e02c50:    20 80             	r0 += 2			  ## adc_api.c:122:0
 1e02c52:    01 70             	r1 = 0
 1e02c54:    02 70             	r2 = 0
 1e02c56:    04 18             	goto 8 <adc_value_avg+0x10 : 1e02c60 >
 1e02c58:    03 f8 00 01       	r3 = h[r0+r1] (u)			  ## adc_api.c:125:16
 1e02c5c:    32 09             	r2 += r3			  ## adc_api.c:125:13
 1e02c5e:    21 80             	r1 += 2			  ## adc_api.c:124:5
 1e02c60:    01 e1 fa 1f       	if (r1 != 16) goto -12 <adc_value_avg+0x8 : 1e02c58 >
 1e02c64:    90 fd 18 02       	r0 = uextra(r2, p:3, l:16)			  ## adc_api.c:127:5
 1e02c68:    20 00             	rts			  ## adc_api.c:127:5


adc_get_value:
 1e02c6a:    c1 ff 38 22 00 00 	r1 = 8760 <vbat_value_array : 2238 >			  ## adc_api.c:131:0
 1e02c70:    d0 e0 14 00       	if (r0 == 13) goto 40 <adc_get_value+0x32 : 1e02c9c >			  ## adc_api.c:131:0
 1e02c74:    c2 ff 0d 00 05 00 	r2 = 327693 <text_size+0x2F15D : 5000d >			  ## adc_api.c:131:0
 1e02c7a:    20 f2 10 00       	if (r0 == r2) goto 32 <adc_get_value+0x34 : 1e02c9e >			  ## adc_api.c:131:0
 1e02c7e:    c1 ff c8 25 00 00 	r1 = 9672 <adc_queue+0x4 : 25c8 >			  ## adc_api.c:131:0
 1e02c84:    02 70             	r2 = 0			  ## adc_api.c:131:0
 1e02c86:    06 18             	goto 12 <adc_get_value+0x2A : 1e02c94 >			  ## adc_api.c:131:0
 1e02c88:    03 f6 fc 1f       	r3 = [r1 + -4]			  ## adc_api.c:139:26
 1e02c8c:    03 f2 09 00       	if (r3 == r0) goto 18 <adc_get_value+0x38 : 1e02ca2 >			  ## adc_api.c:139:13
 1e02c90:    01 81             	r1 += 16			  ## adc_api.c:138:5
 1e02c92:    12 80             	r2 += 1			  ## adc_api.c:138:38
 1e02c94:    92 e0 f8 df       	ifs (r2 <= 9) goto -16 <adc_get_value+0x1E : 1e02c88 >
 1e02c98:    10 70             	r0 = 1
 1e02c9a:    20 00             	rts
 1e02c9c:    41 81             	r1 += 20
 1e02c9e:    10 08             	r0 = r1			  ## adc_api.c:135:16
 1e02ca0:    d7 1f             	goto -82 <adc_value_avg : 1e02c50 >			  ## adc_api.c:135:16
 1e02ca2:    00 52             	r0 = h[r1 + 0] (u)			  ## adc_api.c:140:20
 1e02ca4:    20 00             	rts


adc_value_to_voltage:
 1e02ca6:    74 01             	[--sp] = {rets, r4}			  ## adc_api.c:148:0
 1e02ca8:    c2 ff 00 08 00 00 	r2 = 2048 <report_mmu_tlb_size : 800 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/efuse.c:21:23
 1e02cae:    f2 54             	r2 = h[r2 + 30] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/efuse.c:21:23
 1e02cb0:    14 d1             	r4 = r2 >> 4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/efuse.c:21:34
 1e02cb2:    22 fd 0f 49       	r2 = r4 & 15			  ## adc_api.c:153:21
 1e02cb6:    03 fe 03 29       	r3 = r2 * 3
 1e02cba:    62 fb 00 39       	r2 = 0 - r3			  ## adc_api.c:154:11
 1e02cbe:    24 f3 01 40       	if ((r4 & 16) != 0) goto 2 <adc_value_to_voltage+0x1E : 1e02cc4 >
 1e02cc2:    32 08             	r2 = r3			  ## adc_api.c:154:11
 1e02cc4:    22 fc 21 03       	r2 = r2 + 801			  ## adc_api.c:154:11
 1e02cc8:    51 0e             	r1 = r2 * r1			  ## adc_api.c:155:23
 1e02cca:    c0 fe 00 01       	r0 = r1 / r0 (u)			  ## adc_api.c:155:29
 1e02cce:    54 01             	{pc, r4} = [sp++]			  ## adc_api.c:157:5


adc_get_voltage:
 1e02cd0:    75 01             	[--sp] = {rets, r5, r4}			  ## adc_api.c:161:0
 1e02cd2:    04 08             	r4 = r0			  ## adc_api.c:161:0
 1e02cd4:    d0 70             	r0 = 13			  ## adc_api.c:166:19
 1e02cd6:    c9 17             	call -110 <adc_get_value : 1e02c6a >			  ## adc_api.c:166:19
 1e02cd8:    05 08             	r5 = r0			  ## adc_api.c:166:19
 1e02cda:    40 08             	r0 = r4			  ## adc_api.c:167:19
 1e02cdc:    c6 17             	call -116 <adc_get_value : 1e02c6a >			  ## adc_api.c:167:19
 1e02cde:    01 08             	r1 = r0			  ## adc_api.c:167:19
 1e02ce0:    50 08             	r0 = r5			  ## adc_api.c:168:12
 1e02ce2:    15 01             	{rets, r5, r4} = [sp++]			  ## adc_api.c:168:12
 1e02ce4:    e0 1f             	goto -64 <adc_value_to_voltage : 1e02ca6 >			  ## adc_api.c:168:12


get_vbat_percent:
 1e02ce6:    34 00             	[--sp] = rets			  ## app_power_manage.c:118:0
 1e02ce8:    c0 ff 0d 00 05 00 	r0 = 327693 <text_size+0x2F15D : 5000d >			  ## app_power_manage.c:104:13
 1e02cee:    f0 17             	call -32 <adc_get_voltage : 1e02cd0 >			  ## app_power_manage.c:104:13
 1e02cf0:    c1 ff b0 20 00 00 	r1 = 8368 <gatt_client_conn_handle : 20b0 >			  ## app_power_manage.c:104:13
 1e02cf6:    02 f9 60 10       	r2 = b[r1 + 96] (u)			  ## app_power_manage.c:104:13
 1e02cfa:    80 c0             	r0 = r0 << 2			  ## app_power_manage.c:104:41
 1e02cfc:    a3 70             	r3 = 10			  ## app_power_manage.c:104:45
 1e02cfe:    c0 fe 30 00       	r0 = r0 / r3 (u)			  ## app_power_manage.c:104:45
 1e02d02:    03 34             	if (r2 != 0) goto 6 <get_vbat_percent+0x24 : 1e02d0a >			  ## app_power_manage.c:104:45
 1e02d04:    12 70             	r2 = 1
 1e02d06:    12 f9 60 10       	b[r1 + 96] = r2
 1e02d0a:    c1 ff a0 22 00 00 	r1 = 8864 <_sdfile_handl : 22a0 >			  ## app_power_manage.c:129:28
 1e02d10:    01 f7 98 10       	r1 = h[r1 + 152] (u)			  ## app_power_manage.c:129:28
 1e02d14:    22 04             	r2 = r0.l (u)			  ## app_power_manage.c:129:28
 1e02d16:    00 70             	r0 = 0			  ## app_power_manage.c:129:28
 1e02d18:    12 f2 0d 90       	if (r2 <= r1) goto 26 <get_vbat_percent+0x50 : 1e02d36 >			  ## app_power_manage.c:129:28
 1e02d1c:    00 fb a4 01       	r0 = 420 <DRIVER_RAM_TOTAL+0xB2 : 1a4 >			  ## app_power_manage.c:135:92
 1e02d20:    60 b0             	r0 = r0 - r1			  ## app_power_manage.c:135:92
 1e02d22:    61 b4             	r1 = r2 - r1			  ## app_power_manage.c:135:37
 1e02d24:    01 fe 64 19       	r1 = r1 * 100			  ## app_power_manage.c:135:64
 1e02d28:    c0 fe 00 11       	r1 = r1 / r0 (u)			  ## app_power_manage.c:135:70
 1e02d2c:    62 04             	r2 = r1.l (u)			  ## app_power_manage.c:136:13
 1e02d2e:    40 76             	r0 = 100			  ## app_power_manage.c:136:13
 1e02d30:    42 e6 01 80       	if (r2 > 100) goto 2 <get_vbat_percent+0x50 : 1e02d36 >			  ## app_power_manage.c:136:13
 1e02d34:    10 08             	r0 = r1			  ## app_power_manage.c:136:13
 1e02d36:    00 04             	r0 = r0.b0 (u)			  ## app_power_manage.c:141:1
 1e02d38:    30 00             	pc = [sp++]			  ## app_power_manage.c:141:1


hogp_att_read_callback:
 1e02d3a:    79 01             	[--sp] = {rets, r9-r4}			  ## ble_hogp.c:594:0
 1e02d3c:    35 08             	r5 = r3			  ## ble_hogp.c:594:0
 1e02d3e:    27 08             	r7 = r2			  ## ble_hogp.c:594:0
 1e02d40:    14 08             	r4 = r1			  ## ble_hogp.c:594:0
 1e02d42:    c0 ff ff 49 e1 01 	r0 = 31541759 <update_target_end+0x1B77 : 1e149ff >			  ## ble_hogp.c:599:5
 1e02d48:    52 08             	r2 = r5			  ## ble_hogp.c:599:5
 1e02d4a:    80 f3 be 61       	call 50044 <printf : 1e0f0ca >			  ## ble_hogp.c:599:5
 1e02d4e:    08 f5 1c 00       	r8 = [sp+28]			  ## ble_hogp.c:599:5
 1e02d52:    41 fc fd ff       	r1 = r4 + -3			  ## ble_hogp.c:601:5
 1e02d56:    06 70             	r6 = 0			  ## ble_hogp.c:601:5
 1e02d58:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## ble_hogp.c:601:5
 1e02d5e:    f1 e1 3f 80       	if (r1 > 31) goto 126 <.GJTIE281_0_0_+0x34 : 1e02de0 >			  ## ble_hogp.c:601:5
 1e02d62:    4a c0             	r2 = r1 << 1
 1e02d64:    c9 ff a0 08 00 00 	r9 = 2208 <ble_device_name_len : 8a0 >
 1e02d6a:    b2 00             	tbh [r2]


.GJTIL281_0_0_:
 1e02d6c:    20 00     < 32 : 0x20 >
 1e02d6e:    de 00     < 222 : 0xDE >
 1e02d70:    62 00     < 98 : 0x62 >
 1e02d72:    de 00     < 222 : 0xDE >
 1e02d74:    6e 00     < 110 : 0x6E >
 1e02d76:    de 00     < 222 : 0xDE >
 1e02d78:    de 00     < 222 : 0xDE >
 1e02d7a:    de 00     < 222 : 0xDE >
 1e02d7c:    45 00     < 69 : 0x45 >
 1e02d7e:    de 00     < 222 : 0xDE >
 1e02d80:    de 00     < 222 : 0xDE >
 1e02d82:    7f 00     < 127 : 0x7F >
 1e02d84:    de 00     < 222 : 0xDE >
 1e02d86:    83 00     < 131 : 0x83 >
 1e02d88:    de 00     < 222 : 0xDE >
 1e02d8a:    87 00     < 135 : 0x87 >
 1e02d8c:    de 00     < 222 : 0xDE >
 1e02d8e:    8b 00     < 139 : 0x8B >
 1e02d90:    de 00     < 222 : 0xDE >
 1e02d92:    8f 00     < 143 : 0x8F >
 1e02d94:    de 00     < 222 : 0xDE >
 1e02d96:    93 00     < 147 : 0x93 >
 1e02d98:    de 00     < 222 : 0xDE >
 1e02d9a:    a4 00     < 164 : 0xA4 >
 1e02d9c:    de 00     < 222 : 0xDE >
 1e02d9e:    de 00     < 222 : 0xDE >
 1e02da0:    de 00     < 222 : 0xDE >
 1e02da2:    b0 00     < 176 : 0xB0 >
 1e02da4:    de 00     < 222 : 0xDE >
 1e02da6:    de 00     < 222 : 0xDE >
 1e02da8:    c2 00     < 194 : 0xC2 >
 1e02daa:    45 00     < 69 : 0x45 >
 1e02dac:    94 fc 3c 00       	r4 = r9 + 60			  ## ble_hogp.c:604:25
 1e02db0:    40 08             	r0 = r4			  ## ble_hogp.c:604:25
 1e02db2:    98 f3 a3 20       	call 3162438 <strlen : 106efc >			  ## ble_hogp.c:604:25
 1e02db6:    06 08             	r6 = r0			  ## ble_hogp.c:604:25
 1e02db8:    a0 05             	r0 = r6.l (u)			  ## ble_hogp.c:606:24
 1e02dba:    07 f2 b5 20       	if (r7 >= r0) goto 362 <.GJTIE281_0_0_+0x17C : 1e02f28 >			  ## ble_hogp.c:606:24
 1e02dbe:    b4 2a             	if (r5 == 0) goto 360 <.GJTIE281_0_0_+0x17C : 1e02f28 >
 1e02dc0:    80 fb 70 18       	r1 = r8 + r7			  ## ble_hogp.c:606:50
 1e02dc4:    01 f2 b0 80       	if (r1 > r0) goto 352 <.GJTIE281_0_0_+0x17C : 1e02f28 >			  ## ble_hogp.c:606:50
 1e02dc8:    01 bf             	r1 = r7 + r4			  ## ble_hogp.c:611:29
 1e02dca:    50 08             	r0 = r5			  ## ble_hogp.c:611:13
 1e02dcc:    82 08             	r2 = r8			  ## ble_hogp.c:611:13
 1e02dce:    98 f3 89 20       	call 3162386 <memcpy : 106ee4 >			  ## ble_hogp.c:611:13
 1e02dd2:    c0 ff 36 4a e1 01 	r0 = 31541814 <update_target_end+0x1BAE : 1e14a36 >			  ## ble_hogp.c:613:13
 1e02dd8:    41 08             	r1 = r4			  ## ble_hogp.c:613:13
 1e02dda:    80 f3 76 61       	call 49900 <printf : 1e0f0ca >			  ## ble_hogp.c:613:13
 1e02dde:    a3 18             	goto 326 <.GJTIE281_0_0_+0x17A : 1e02f26 >			  ## ble_hogp.c:613:13
 1e02de0:    41 fc d8 ff       	r1 = r4 + -40
 1e02de4:    f1 e1 21 80       	if (r1 > 31) goto 66 <.GJTIE281_0_0_+0x7E : 1e02e2a >
 1e02de8:    12 70             	r2 = 1
 1e02dea:    42 0c             	r2 <<= r1
 1e02dec:    c3 ff 11 88 88 00 	r3 = 8947729 <uECC_vli_cmp_unsafe+0x781815 : 888811 >
 1e02df2:    32 f0 0a 00       	if ((r2 & r3) == 0) goto 20 <.GJTIE281_0_0_+0x5E : 1e02e0a >
 1e02df6:    26 70             	r6 = 2
 1e02df8:    97 2a             	if (r5 == 0) goto 302 <.GJTIE281_0_0_+0x17C : 1e02f28 >
 1e02dfa:    20 51             	r0 = h[r0 + 36] (u)			  ## le_gatt_server.c:861:12
 1e02dfc:    41 08             	r1 = r4			  ## le_gatt_server.c:861:12
 1e02dfe:    80 f3 9a 27       	call 20276 <multi_att_get_ccc_config : 1e07d36 >			  ## le_gatt_server.c:861:12
 1e02e02:    08 6a             	b[r5 + 0] = r0			  ## ble_hogp.c:772:23
 1e02e04:    00 70             	r0 = 0			  ## ble_hogp.c:773:23
 1e02e06:    18 6a             	b[r5 + 1] = r0			  ## ble_hogp.c:773:23
 1e02e08:    8f 18             	goto 286 <.GJTIE281_0_0_+0x17C : 1e02f28 >			  ## ble_hogp.c:773:23
 1e02e0a:    a1 e1 79 00       	if (r1 == 26) goto 242 <.GJTIE281_0_0_+0x154 : 1e02f00 >
 1e02e0e:    f1 e1 0c 10       	if (r1 != 31) goto 24 <.GJTIE281_0_0_+0x7E : 1e02e2a >
 1e02e12:    46 70             	r6 = 4
 1e02e14:    37 e0 88 80       	if (r7 > 3) goto 272 <.GJTIE281_0_0_+0x17C : 1e02f28 >
 1e02e18:    87 2a             	if (r5 == 0) goto 270 <.GJTIE281_0_0_+0x17C : 1e02f28 >
 1e02e1a:    80 fb 70 08       	r0 = r8 + r7			  ## ble_hogp.c:753:50
 1e02e1e:    40 e0 83 80       	if (r0 > 4) goto 262 <.GJTIE281_0_0_+0x17C : 1e02f28 >			  ## ble_hogp.c:753:50
 1e02e22:    c0 ff 37 5c e1 01 	r0 = 31546423 <hid_information : 1e15c37 >			  ## ble_hogp.c:757:29
 1e02e28:    61 18             	goto 194 <.GJTIE281_0_0_+0x140 : 1e02eec >			  ## ble_hogp.c:757:29
 1e02e2a:    f4 e4 e4 0f       	if (r4 == 79) goto -56 <.GJTIE281_0_0_+0x4A : 1e02df6 >
 1e02e2e:    7c 18             	goto 248 <.GJTIE281_0_0_+0x17C : 1e02f28 >
 1e02e30:    26 70             	r6 = 2
 1e02e32:    17 e0 79 80       	if (r7 > 1) goto 242 <.GJTIE281_0_0_+0x17C : 1e02f28 >
 1e02e36:    78 2a             	if (r5 == 0) goto 240 <.GJTIE281_0_0_+0x17C : 1e02f28 >
 1e02e38:    80 fb 70 08       	r0 = r8 + r7			  ## ble_hogp.c:620:50
 1e02e3c:    20 e0 74 80       	if (r0 > 2) goto 232 <.GJTIE281_0_0_+0x17C : 1e02f28 >			  ## ble_hogp.c:620:50
 1e02e40:    80 fb 90 07       	r0 = r7 + r9			  ## ble_hogp.c:624:29
 1e02e44:    21 90             	r1 = r0 + 2			  ## ble_hogp.c:624:29
 1e02e46:    6b 18             	goto 214 <.GJTIE281_0_0_+0x172 : 1e02f1e >			  ## ble_hogp.c:624:29
 1e02e48:    86 70             	r6 = 8
 1e02e4a:    77 e0 6d 80       	if (r7 > 7) goto 218 <.GJTIE281_0_0_+0x17C : 1e02f28 >
 1e02e4e:    6c 2a             	if (r5 == 0) goto 216 <.GJTIE281_0_0_+0x17C : 1e02f28 >
 1e02e50:    80 fb 70 08       	r0 = r8 + r7			  ## ble_hogp.c:631:50
 1e02e54:    80 e0 68 80       	if (r0 > 8) goto 208 <.GJTIE281_0_0_+0x17C : 1e02f28 >			  ## ble_hogp.c:631:50
 1e02e58:    c0 ff 5b 4a e1 01 	r0 = 31541851 <update_target_end+0x1BD3 : 1e14a5b >			  ## ble_hogp.c:635:13
 1e02e5e:    80 f3 34 61       	call 49768 <printf : 1e0f0ca >			  ## ble_hogp.c:635:13
 1e02e62:    c1 ff e8 5b e1 01 	r1 = 31546344 <Peripheral_Preferred_Connection_Parameters : 1e15be8 >			  ## ble_hogp.c:636:13
 1e02e68:    5a 18             	goto 180 <.GJTIE281_0_0_+0x172 : 1e02f1e >			  ## ble_hogp.c:636:13
 1e02e6a:    c4 ff f8 5b e1 01 	r4 = 31546360 <Manufacturer_Name_String : 1e15bf8 >
 1e02e70:    13 18             	goto 38 <.GJTIE281_0_0_+0xEC : 1e02e98 >
 1e02e72:    c4 ff 05 5c e1 01 	r4 = 31546373 <Model_Number_String : 1e15c05 >
 1e02e78:    0f 18             	goto 30 <.GJTIE281_0_0_+0xEC : 1e02e98 >
 1e02e7a:    c4 ff 0f 5c e1 01 	r4 = 31546383 <Serial_Number_String : 1e15c0f >
 1e02e80:    0b 18             	goto 22 <.GJTIE281_0_0_+0xEC : 1e02e98 >
 1e02e82:    c4 ff 16 5c e1 01 	r4 = 31546390 <Hardware_Revision_String : 1e15c16 >
 1e02e88:    07 18             	goto 14 <.GJTIE281_0_0_+0xEC : 1e02e98 >
 1e02e8a:    c4 ff 1c 5c e1 01 	r4 = 31546396 <Firmware_Revision_String : 1e15c1c >
 1e02e90:    03 18             	goto 6 <.GJTIE281_0_0_+0xEC : 1e02e98 >
 1e02e92:    c4 ff 22 5c e1 01 	r4 = 31546402 <Software_Revision_String : 1e15c22 >
 1e02e98:    40 08             	r0 = r4
 1e02e9a:    98 f3 2f 20       	call 3162206 <strlen : 106efc >
 1e02e9e:    06 08             	r6 = r0
 1e02ea0:    a0 05             	r0 = r6.l (u)
 1e02ea2:    07 f2 41 20       	if (r7 >= r0) goto 130 <.GJTIE281_0_0_+0x17C : 1e02f28 >
 1e02ea6:    40 2a             	if (r5 == 0) goto 128 <.GJTIE281_0_0_+0x17C : 1e02f28 >
 1e02ea8:    80 fb 70 18       	r1 = r8 + r7
 1e02eac:    01 f2 3c 80       	if (r1 > r0) goto 120 <.GJTIE281_0_0_+0x17C : 1e02f28 >
 1e02eb0:    01 bf             	r1 = r7 + r4
 1e02eb2:    35 18             	goto 106 <.GJTIE281_0_0_+0x172 : 1e02f1e >
 1e02eb4:    86 70             	r6 = 8
 1e02eb6:    77 e0 37 80       	if (r7 > 7) goto 110 <.GJTIE281_0_0_+0x17C : 1e02f28 >
 1e02eba:    36 2a             	if (r5 == 0) goto 108 <.GJTIE281_0_0_+0x17C : 1e02f28 >
 1e02ebc:    80 fb 70 08       	r0 = r8 + r7			  ## ble_hogp.c:709:50
 1e02ec0:    80 e0 32 80       	if (r0 > 8) goto 100 <.GJTIE281_0_0_+0x17C : 1e02f28 >			  ## ble_hogp.c:709:50
 1e02ec4:    c0 ff 28 5c e1 01 	r0 = 31546408 <System_ID : 1e15c28 >			  ## ble_hogp.c:713:29
 1e02eca:    10 18             	goto 32 <.GJTIE281_0_0_+0x140 : 1e02eec >			  ## ble_hogp.c:713:29
 1e02ecc:    c0 ff 9d 4a e1 01 	r0 = 31541917 <update_target_end+0x1C15 : 1e14a9d >			  ## ble_hogp.c:719:9
 1e02ed2:    80 f3 fa 60       	call 49652 <printf : 1e0f0ca >			  ## ble_hogp.c:719:9
 1e02ed6:    76 70             	r6 = 7
 1e02ed8:    67 e0 26 80       	if (r7 > 6) goto 76 <.GJTIE281_0_0_+0x17C : 1e02f28 >
 1e02edc:    25 2a             	if (r5 == 0) goto 74 <.GJTIE281_0_0_+0x17C : 1e02f28 >
 1e02ede:    80 fb 70 08       	r0 = r8 + r7			  ## ble_hogp.c:721:50
 1e02ee2:    70 e0 21 80       	if (r0 > 7) goto 66 <.GJTIE281_0_0_+0x17C : 1e02f28 >			  ## ble_hogp.c:721:50
 1e02ee6:    c0 ff 30 5c e1 01 	r0 = 31546416 <PnP_ID : 1e15c30 >			  ## ble_hogp.c:725:29
 1e02eec:    01 be             	r1 = r7 + r0
 1e02eee:    17 18             	goto 46 <.GJTIE281_0_0_+0x172 : 1e02f1e >
 1e02ef0:    16 70             	r6 = 1
 1e02ef2:    1a 2a             	if (r5 == 0) goto 52 <.GJTIE281_0_0_+0x17C : 1e02f28 >
 1e02ef4:    50 41             	r0 = [r0 + 84]			  ## ble_hogp.c:733:17
 1e02ef6:    21 20             	if (r0 == 0) goto 66 <.GJTIE281_0_0_+0x18E : 1e02f3a >			  ## ble_hogp.c:733:17
 1e02ef8:    f6 16             	call -532 <get_vbat_percent : 1e02ce6 >			  ## ble_hogp.c:734:37
 1e02efa:    10 f9 01 90       	b[r9 + 1] = r0			  ## ble_hogp.c:734:35
 1e02efe:    1f 18             	goto 62 <.GJTIE281_0_0_+0x192 : 1e02f3e >			  ## ble_hogp.c:734:35
 1e02f00:    01 f9 58 00       	r1 = b[r0 + 88] (u)
 1e02f04:    56 73             	r6 = 53
 1e02f06:    01 32             	if (r1 != 0) goto 2 <.GJTIE281_0_0_+0x15E : 1e02f0a >
 1e02f08:    06 70             	r6 = 0
 1e02f0a:    76 f2 0d 90       	if (r6 <= r7) goto 26 <.GJTIE281_0_0_+0x17C : 1e02f28 >
 1e02f0e:    0c 2a             	if (r5 == 0) goto 24 <.GJTIE281_0_0_+0x17C : 1e02f28 >
 1e02f10:    80 fb 70 18       	r1 = r8 + r7			  ## ble_hogp.c:742:50
 1e02f14:    a2 05             	r2 = r6.l (u)			  ## ble_hogp.c:742:24
 1e02f16:    21 f2 07 80       	if (r1 > r2) goto 14 <.GJTIE281_0_0_+0x17C : 1e02f28 >			  ## ble_hogp.c:742:24
 1e02f1a:    70 41             	r0 = [r0 + 92]			  ## ble_hogp.c:746:29
 1e02f1c:    c1 b1             	r1 = r0 + r7			  ## ble_hogp.c:746:29
 1e02f1e:    50 08             	r0 = r5
 1e02f20:    82 08             	r2 = r8
 1e02f22:    98 f3 df 1f       	call 3162046 <memcpy : 106ee4 >
 1e02f26:    86 08             	r6 = r8
 1e02f28:    a4 05             	r4 = r6.l (u)			  ## ble_hogp.c:782:5
 1e02f2a:    c0 ff b5 4a e1 01 	r0 = 31541941 <update_target_end+0x1C2D : 1e14ab5 >			  ## ble_hogp.c:782:5
 1e02f30:    41 08             	r1 = r4			  ## ble_hogp.c:782:5
 1e02f32:    80 f3 ca 60       	call 49556 <printf : 1e0f0ca >			  ## ble_hogp.c:782:5
 1e02f36:    40 08             	r0 = r4			  ## ble_hogp.c:783:5
 1e02f38:    59 01             	{pc, r9-r4} = [sp++]			  ## ble_hogp.c:783:5
 1e02f3a:    00 f9 01 90       	r0 = b[r9 + 1] (u)
 1e02f3e:    08 6a             	b[r5 + 0] = r0			  ## ble_hogp.c:736:23
 1e02f40:    f3 1f             	goto -26 <.GJTIE281_0_0_+0x17C : 1e02f28 >			  ## ble_hogp.c:736:23


ble_gatt_server_characteristic_ccc_set:
 1e02f42:    74 01             	[--sp] = {rets, r4}			  ## le_gatt_server.c:831:0
 1e02f44:    04 08             	r4 = r0			  ## le_gatt_server.c:831:0
 1e02f46:    80 f3 32 2b       	call 22116 <multi_att_set_ccc_config : 1e085ae >			  ## le_gatt_server.c:832:5
 1e02f4a:    40 08             	r0 = r4			  ## le_gatt_server.c:833:34
 1e02f4c:    bf f3 54 f4       	call -5976 <ble_comm_dev_get_handle_state : 1e017f8 >			  ## le_gatt_server.c:833:34
 1e02f50:    10 e2 09 00       	if (r0 == 33) goto 18 <ble_gatt_server_characteristic_ccc_set+0x24 : 1e02f66 >			  ## le_gatt_server.c:833:34
 1e02f54:    11 72             	r1 = 33			  ## le_gatt_server.c:834:9
 1e02f56:    40 08             	r0 = r4			  ## le_gatt_server.c:834:9
 1e02f58:    bf f3 09 ef       	call -8686 <ble_comm_dev_set_handle_state : 1e00d6e >			  ## le_gatt_server.c:834:9
 1e02f5c:    11 72             	r1 = 33			  ## le_gatt_server.c:835:9
 1e02f5e:    12 70             	r2 = 1			  ## le_gatt_server.c:835:9
 1e02f60:    40 08             	r0 = r4			  ## le_gatt_server.c:835:9
 1e02f62:    bf f3 3e ee       	call -9092 <__gatt_server_set_work_state : 1e00be2 >			  ## le_gatt_server.c:835:9
 1e02f66:    54 01             	{pc, r4} = [sp++]


__hogp_send_connetion_update_deal:
 1e02f68:    74 01             	[--sp] = {rets, r4}			  ## ble_hogp.c:308:0
 1e02f6a:    c4 ff 40 08 00 00 	r4 = 2112 <report_data_begin : 840 >			  ## ble_hogp.c:308:0
 1e02f70:    01 68             	r1 = b[r4 + 0] (u)			  ## ble_hogp.c:309:9
 1e02f72:    1b 22             	if (r1 == 0) goto 54 <__hogp_send_connetion_update_deal+0x42 : 1e02faa >
 1e02f74:    1a 20             	if (r0 == 0) goto 52 <__hogp_send_connetion_update_deal+0x42 : 1e02faa >
 1e02f76:    c1 ff a0 22 00 00 	r1 = 8864 <_sdfile_handl : 22a0 >
 1e02f7c:    02 f7 ba 10       	r2 = h[r1 + 186] (u)			  ## le_gatt_server.c:801:17
 1e02f80:    07 24             	if (r2 == 0) goto 14 <__hogp_send_connetion_update_deal+0x28 : 1e02f90 >			  ## le_gatt_server.c:801:9
 1e02f82:    c2 ff d6 3b e1 01 	r2 = 31538134 <update_target_end+0xD4E : 1e13bd6 >			  ## le_gatt_server.c:802:9
 1e02f88:    20 70             	r0 = 2			  ## le_gatt_server.c:802:9
 1e02f8a:    14 01             	{rets, r4} = [sp++]			  ## le_gatt_server.c:802:9
 1e02f8c:    c0 f3 cd 60       	goto 49562 <log_print : 1e0f12a >			  ## le_gatt_server.c:802:9
 1e02f90:    11 fc b4 00       	r1 = r1 + 180
 1e02f94:    38 52             	h[r1 + 6] = r0			  ## le_gatt_server.c:811:37
 1e02f96:    c0 ff e8 5b e1 01 	r0 = 31546344 <Peripheral_Preferred_Connection_Parameters : 1e15be8 >			  ## le_gatt_server.c:812:43
 1e02f9c:    08 42             	[r1 + 0] = r0			  ## le_gatt_server.c:812:43
 1e02f9e:    00 72             	r0 = 32			  ## le_gatt_server.c:814:44
 1e02fa0:    48 62             	b[r1 + 4] = r0			  ## le_gatt_server.c:814:44
 1e02fa2:    bf f3 ef ee       	call -8738 <__gatt_server_connection_update_request_send : 1e00d84 >			  ## le_gatt_server.c:815:5
 1e02fa6:    00 70             	r0 = 0			  ## ble_hogp.c:311:43
 1e02fa8:    08 68             	b[r4 + 0] = r0			  ## ble_hogp.c:311:43
 1e02faa:    54 01             	{pc, r4} = [sp++]			  ## ble_hogp.c:314:1


hogp_att_write_callback:
 1e02fac:    78 01             	[--sp] = {rets, r8-r4}			  ## ble_hogp.c:811:0
 1e02fae:    14 08             	r4 = r1			  ## ble_hogp.c:811:0
 1e02fb0:    08 08             	r8 = r0			  ## ble_hogp.c:811:0
 1e02fb2:    76 02             	r6 = [sp+28]			  ## ble_hogp.c:811:0
 1e02fb4:    c0 ff 87 49 e1 01 	r0 = 31541639 <update_target_end+0x1AFF : 1e14987 >			  ## ble_hogp.c:817:5
 1e02fba:    62 08             	r2 = r6			  ## ble_hogp.c:817:5
 1e02fbc:    80 f3 85 60       	call 49418 <printf : 1e0f0ca >			  ## ble_hogp.c:817:5
 1e02fc0:    65 02             	r5 = [sp+24]
 1e02fc2:    40 fc de ff       	r0 = r4 + -34			  ## ble_hogp.c:819:5
 1e02fc6:    c7 ff b0 20 00 00 	r7 = 8368 <gatt_client_conn_handle : 20b0 >
 1e02fcc:    d0 e1 1f 80       	if (r0 > 29) goto 62 <hogp_att_write_callback+0x62 : 1e0300e >
 1e02fd0:    11 70             	r1 = 1
 1e02fd2:    01 0c             	r1 <<= r0
 1e02fd4:    c2 ff 40 04 22 22 	r2 = 572654656 <uECC_vli_cmp_unsafe+0x119444 : 220440 >
 1e02fda:    21 f0 15 00       	if ((r1 & r2) == 0) goto 42 <hogp_att_write_callback+0x5C : 1e03008 >
 1e02fde:    22 5f             	r2 = h[r7 + 36] (u)			  ## ble_hogp.c:858:9
 1e02fe0:    30 71             	r0 = 19			  ## ble_hogp.c:858:9
 1e02fe2:    21 70             	r1 = 2			  ## ble_hogp.c:858:9
 1e02fe4:    33 70             	r3 = 3			  ## ble_hogp.c:858:9
 1e02fe6:    80 f3 48 28       	call 20624 <ble_user_cmd_prepare : 1e0807a >			  ## ble_hogp.c:858:9
 1e02fea:    20 5f             	r0 = h[r7 + 36] (u)			  ## ble_hogp.c:860:9
 1e02fec:    bd 17             	call -134 <__hogp_send_connetion_update_deal : 1e02f68 >			  ## ble_hogp.c:860:9
 1e02fee:    02 6a             	r2 = b[r5 + 0] (u)			  ## ble_hogp.c:861:9
 1e02ff0:    c0 ff bc 49 e1 01 	r0 = 31541692 <update_target_end+0x1B34 : 1e149bc >			  ## ble_hogp.c:861:9
 1e02ff6:    41 08             	r1 = r4			  ## ble_hogp.c:861:9
 1e02ff8:    80 f3 67 60       	call 49358 <printf : 1e0f0ca >			  ## ble_hogp.c:861:9
 1e02ffc:    20 5f             	r0 = h[r7 + 36] (u)			  ## ble_hogp.c:862:9
 1e02ffe:    02 6a             	r2 = b[r5 + 0] (u)			  ## ble_hogp.c:862:73
 1e03000:    41 08             	r1 = r4			  ## ble_hogp.c:862:9
 1e03002:    9f 17             	call -194 <ble_gatt_server_characteristic_ccc_set : 1e02f42 >
 1e03004:    00 70             	r0 = 0			  ## ble_hogp.c:881:5
 1e03006:    58 01             	{pc, r8-r4} = [sp++]			  ## ble_hogp.c:881:5
 1e03008:    f0 21             	if (r0 == 0) goto -32 <hogp_att_write_callback+0x3E : 1e02fea >
 1e0300a:    d0 e0 11 00       	if (r0 == 13) goto 34 <hogp_att_write_callback+0x84 : 1e03030 >
 1e0300e:    b4 e0 05 00       	if (r4 == 11) goto 10 <hogp_att_write_callback+0x70 : 1e0301c >
 1e03012:    c4 e4 07 00       	if (r4 == 76) goto 14 <hogp_att_write_callback+0x78 : 1e03024 >
 1e03016:    f4 e4 e2 0f       	if (r4 == 79) goto -60 <hogp_att_write_callback+0x32 : 1e02fde >
 1e0301a:    f4 1f             	goto -24 <hogp_att_write_callback+0x58 : 1e03004 >
 1e0301c:    02 6a             	r2 = b[r5 + 0] (u)			  ## ble_hogp.c:832:75
 1e0301e:    b1 70             	r1 = 11			  ## ble_hogp.c:832:9
 1e03020:    80 08             	r0 = r8			  ## ble_hogp.c:832:9
 1e03022:    ef 1f             	goto -34 <hogp_att_write_callback+0x56 : 1e03002 >			  ## ble_hogp.c:832:9
 1e03024:    c0 ff e3 49 e1 01 	r0 = 31541731 <update_target_end+0x1B5B : 1e149e3 >			  ## ble_hogp.c:1556:5
 1e0302a:    61 08             	r1 = r6			  ## ble_hogp.c:1556:5
 1e0302c:    80 f3 4d 60       	call 49306 <printf : 1e0f0ca >			  ## ble_hogp.c:1556:5
 1e03030:    50 08             	r0 = r5
 1e03032:    61 08             	r1 = r6
 1e03034:    80 f3 4e 61       	call 49820 <put_buf : 1e0f2d4 >
 1e03038:    e5 1f             	goto -54 <hogp_att_write_callback+0x58 : 1e03004 >


aes128_start:
 1e0303a:    77 01             	[--sp] = {rets, r7-r4}			  ## aes128.c:18:0
 1e0303c:    24 08             	r4 = r2			  ## aes128.c:18:0
 1e0303e:    15 08             	r5 = r1			  ## aes128.c:18:0
 1e03040:    06 08             	r6 = r0			  ## aes128.c:18:0
 1e03042:    98 f3 ab 1e       	call 3161430 <local_irq_disable : 106d9c >			  ## aes128.c:19:5
 1e03046:    c0 6c             	r0 = b[r6 + 12] (u)			  ## aes_hw.c:46:12
 1e03048:    d1 6c             	r1 = b[r6 + 13] (u)			  ## aes_hw.c:46:12
 1e0304a:    e2 6c             	r2 = b[r6 + 14] (u)			  ## aes_hw.c:46:12
 1e0304c:    f3 6c             	r3 = b[r6 + 15] (u)			  ## aes_hw.c:46:12
 1e0304e:    00 c6             	r0 = r0 << 24			  ## aes_hw.c:46:12
 1e03050:    c8 fd 80 01       	r0 <= insert(r1, p:16, l:8)			  ## aes_hw.c:46:12
 1e03054:    c8 fd 40 02       	r0 <= insert(r2, p:8, l:8)			  ## aes_hw.c:46:12
 1e03058:    e0 fd 30 10       	r1 = r0 | r3			  ## aes_hw.c:46:12
 1e0305c:    c0 ff 00 43 1e 00 	r0 = 1983232 <uECC_vli_cmp_unsafe+0xDD304 : 1e4300 >
 1e03062:    29 40             	[r0 + 8] = r1			  ## aes_hw.c:47:17
 1e03064:    81 6c             	r1 = b[r6 + 8] (u)			  ## aes_hw.c:49:12
 1e03066:    92 6c             	r2 = b[r6 + 9] (u)			  ## aes_hw.c:49:12
 1e03068:    a3 6c             	r3 = b[r6 + 10] (u)			  ## aes_hw.c:49:12
 1e0306a:    b7 6c             	r7 = b[r6 + 11] (u)			  ## aes_hw.c:49:12
 1e0306c:    09 c6             	r1 = r1 << 24			  ## aes_hw.c:49:12
 1e0306e:    c8 fd 80 12       	r1 <= insert(r2, p:16, l:8)			  ## aes_hw.c:49:12
 1e03072:    c8 fd 40 13       	r1 <= insert(r3, p:8, l:8)			  ## aes_hw.c:49:12
 1e03076:    51 be             	r1 |= r7			  ## aes_hw.c:49:12
 1e03078:    29 40             	[r0 + 8] = r1			  ## aes_hw.c:50:17
 1e0307a:    41 6c             	r1 = b[r6 + 4] (u)			  ## aes_hw.c:52:12
 1e0307c:    52 6c             	r2 = b[r6 + 5] (u)			  ## aes_hw.c:52:12
 1e0307e:    63 6c             	r3 = b[r6 + 6] (u)			  ## aes_hw.c:52:12
 1e03080:    77 6c             	r7 = b[r6 + 7] (u)			  ## aes_hw.c:52:12
 1e03082:    09 c6             	r1 = r1 << 24			  ## aes_hw.c:52:12
 1e03084:    c8 fd 80 12       	r1 <= insert(r2, p:16, l:8)			  ## aes_hw.c:52:12
 1e03088:    c8 fd 40 13       	r1 <= insert(r3, p:8, l:8)			  ## aes_hw.c:52:12
 1e0308c:    51 be             	r1 |= r7			  ## aes_hw.c:52:12
 1e0308e:    29 40             	[r0 + 8] = r1			  ## aes_hw.c:53:17
 1e03090:    01 6c             	r1 = b[r6 + 0] (u)			  ## aes_hw.c:55:12
 1e03092:    12 6c             	r2 = b[r6 + 1] (u)			  ## aes_hw.c:55:12
 1e03094:    23 6c             	r3 = b[r6 + 2] (u)			  ## aes_hw.c:55:12
 1e03096:    36 6c             	r6 = b[r6 + 3] (u)			  ## aes_hw.c:55:12
 1e03098:    09 c6             	r1 = r1 << 24			  ## aes_hw.c:55:12
 1e0309a:    c8 fd 80 12       	r1 <= insert(r2, p:16, l:8)			  ## aes_hw.c:55:12
 1e0309e:    c8 fd 40 13       	r1 <= insert(r3, p:8, l:8)			  ## aes_hw.c:55:12
 1e030a2:    51 bc             	r1 |= r6			  ## aes_hw.c:55:12
 1e030a4:    29 40             	[r0 + 8] = r1			  ## aes_hw.c:56:17
 1e030a6:    c0 f4 10 09       	[r0 + 0] = 16			  ## aes_hw.c:59:17
 1e030aa:    01 40             	r1 = [r0 + 0]			  ## aes_hw.c:60:21
 1e030ac:    25 f3 fd 1f       	if ((r1 & 32) != 0) goto -6 <aes128_start+0x70 : 1e030aa >			  ## aes_hw.c:60:5
 1e030b0:    c1 6a             	r1 = b[r5 + 12] (u)			  ## aes_hw.c:65:12
 1e030b2:    d2 6a             	r2 = b[r5 + 13] (u)			  ## aes_hw.c:65:12
 1e030b4:    e3 6a             	r3 = b[r5 + 14] (u)			  ## aes_hw.c:65:12
 1e030b6:    f6 6a             	r6 = b[r5 + 15] (u)			  ## aes_hw.c:65:12
 1e030b8:    09 c6             	r1 = r1 << 24			  ## aes_hw.c:65:12
 1e030ba:    c8 fd 80 12       	r1 <= insert(r2, p:16, l:8)			  ## aes_hw.c:65:12
 1e030be:    c8 fd 40 13       	r1 <= insert(r3, p:8, l:8)			  ## aes_hw.c:65:12
 1e030c2:    51 bc             	r1 |= r6			  ## aes_hw.c:65:12
 1e030c4:    19 40             	[r0 + 4] = r1			  ## aes_hw.c:66:19
 1e030c6:    81 6a             	r1 = b[r5 + 8] (u)			  ## aes_hw.c:68:12
 1e030c8:    92 6a             	r2 = b[r5 + 9] (u)			  ## aes_hw.c:68:12
 1e030ca:    a3 6a             	r3 = b[r5 + 10] (u)			  ## aes_hw.c:68:12
 1e030cc:    b6 6a             	r6 = b[r5 + 11] (u)			  ## aes_hw.c:68:12
 1e030ce:    09 c6             	r1 = r1 << 24			  ## aes_hw.c:68:12
 1e030d0:    c8 fd 80 12       	r1 <= insert(r2, p:16, l:8)			  ## aes_hw.c:68:12
 1e030d4:    c8 fd 40 13       	r1 <= insert(r3, p:8, l:8)			  ## aes_hw.c:68:12
 1e030d8:    51 bc             	r1 |= r6			  ## aes_hw.c:68:12
 1e030da:    19 40             	[r0 + 4] = r1			  ## aes_hw.c:69:19
 1e030dc:    41 6a             	r1 = b[r5 + 4] (u)			  ## aes_hw.c:71:12
 1e030de:    52 6a             	r2 = b[r5 + 5] (u)			  ## aes_hw.c:71:12
 1e030e0:    63 6a             	r3 = b[r5 + 6] (u)			  ## aes_hw.c:71:12
 1e030e2:    76 6a             	r6 = b[r5 + 7] (u)			  ## aes_hw.c:71:12
 1e030e4:    09 c6             	r1 = r1 << 24			  ## aes_hw.c:71:12
 1e030e6:    c8 fd 80 12       	r1 <= insert(r2, p:16, l:8)			  ## aes_hw.c:71:12
 1e030ea:    c8 fd 40 13       	r1 <= insert(r3, p:8, l:8)			  ## aes_hw.c:71:12
 1e030ee:    51 bc             	r1 |= r6			  ## aes_hw.c:71:12
 1e030f0:    19 40             	[r0 + 4] = r1			  ## aes_hw.c:72:19
 1e030f2:    01 6a             	r1 = b[r5 + 0] (u)			  ## aes_hw.c:74:12
 1e030f4:    12 6a             	r2 = b[r5 + 1] (u)			  ## aes_hw.c:74:12
 1e030f6:    23 6a             	r3 = b[r5 + 2] (u)			  ## aes_hw.c:74:12
 1e030f8:    35 6a             	r5 = b[r5 + 3] (u)			  ## aes_hw.c:74:12
 1e030fa:    09 c6             	r1 = r1 << 24			  ## aes_hw.c:74:12
 1e030fc:    c8 fd 80 12       	r1 <= insert(r2, p:16, l:8)			  ## aes_hw.c:74:12
 1e03100:    c8 fd 40 13       	r1 <= insert(r3, p:8, l:8)			  ## aes_hw.c:74:12
 1e03104:    51 ba             	r1 |= r5			  ## aes_hw.c:74:12
 1e03106:    19 40             	[r0 + 4] = r1			  ## aes_hw.c:75:19
 1e03108:    c0 f4 01 09       	[r0 + 0] = 1			  ## aes_hw.c:78:18
 1e0310c:    01 40             	r1 = [r0 + 0]			  ## aes_hw.c:79:20
 1e0310e:    22 f3 fd 1f       	if ((r1 & 4) != 0) goto -6 <aes128_start+0xD2 : 1e0310c >			  ## aes_hw.c:79:5
 1e03112:    31 40             	r1 = [r0 + 12]			  ## aes_hw.c:81:5
 1e03114:    09 68             	b[r4 + 0] = r1			  ## aes_hw.c:81:5
 1e03116:    31 40             	r1 = [r0 + 12]			  ## aes_hw.c:81:5
 1e03118:    09 d2             	r1 = r1 >> 8			  ## aes_hw.c:81:5
 1e0311a:    19 68             	b[r4 + 1] = r1			  ## aes_hw.c:81:5
 1e0311c:    31 40             	r1 = [r0 + 12]			  ## aes_hw.c:81:5
 1e0311e:    09 d4             	r1 = r1 >> 16			  ## aes_hw.c:81:5
 1e03120:    29 68             	b[r4 + 2] = r1			  ## aes_hw.c:81:5
 1e03122:    31 40             	r1 = [r0 + 12]			  ## aes_hw.c:81:5
 1e03124:    09 d6             	r1 = r1 >> 24			  ## aes_hw.c:81:5
 1e03126:    39 68             	b[r4 + 3] = r1			  ## aes_hw.c:81:5
 1e03128:    41 40             	r1 = [r0 + 16]			  ## aes_hw.c:82:5
 1e0312a:    49 68             	b[r4 + 4] = r1			  ## aes_hw.c:82:5
 1e0312c:    41 40             	r1 = [r0 + 16]			  ## aes_hw.c:82:5
 1e0312e:    09 d2             	r1 = r1 >> 8			  ## aes_hw.c:82:5
 1e03130:    59 68             	b[r4 + 5] = r1			  ## aes_hw.c:82:5
 1e03132:    41 40             	r1 = [r0 + 16]			  ## aes_hw.c:82:5
 1e03134:    09 d4             	r1 = r1 >> 16			  ## aes_hw.c:82:5
 1e03136:    69 68             	b[r4 + 6] = r1			  ## aes_hw.c:82:5
 1e03138:    41 40             	r1 = [r0 + 16]			  ## aes_hw.c:82:5
 1e0313a:    09 d6             	r1 = r1 >> 24			  ## aes_hw.c:82:5
 1e0313c:    79 68             	b[r4 + 7] = r1			  ## aes_hw.c:82:5
 1e0313e:    51 40             	r1 = [r0 + 20]			  ## aes_hw.c:83:5
 1e03140:    89 68             	b[r4 + 8] = r1			  ## aes_hw.c:83:5
 1e03142:    51 40             	r1 = [r0 + 20]			  ## aes_hw.c:83:5
 1e03144:    09 d2             	r1 = r1 >> 8			  ## aes_hw.c:83:5
 1e03146:    99 68             	b[r4 + 9] = r1			  ## aes_hw.c:83:5
 1e03148:    51 40             	r1 = [r0 + 20]			  ## aes_hw.c:83:5
 1e0314a:    09 d4             	r1 = r1 >> 16			  ## aes_hw.c:83:5
 1e0314c:    a9 68             	b[r4 + 10] = r1			  ## aes_hw.c:83:5
 1e0314e:    51 40             	r1 = [r0 + 20]			  ## aes_hw.c:83:5
 1e03150:    09 d6             	r1 = r1 >> 24			  ## aes_hw.c:83:5
 1e03152:    b9 68             	b[r4 + 11] = r1			  ## aes_hw.c:83:5
 1e03154:    61 40             	r1 = [r0 + 24]			  ## aes_hw.c:84:5
 1e03156:    c9 68             	b[r4 + 12] = r1			  ## aes_hw.c:84:5
 1e03158:    61 40             	r1 = [r0 + 24]			  ## aes_hw.c:84:5
 1e0315a:    09 d2             	r1 = r1 >> 8			  ## aes_hw.c:84:5
 1e0315c:    d9 68             	b[r4 + 13] = r1			  ## aes_hw.c:84:5
 1e0315e:    61 40             	r1 = [r0 + 24]			  ## aes_hw.c:84:5
 1e03160:    09 d4             	r1 = r1 >> 16			  ## aes_hw.c:84:5
 1e03162:    e9 68             	b[r4 + 14] = r1			  ## aes_hw.c:84:5
 1e03164:    60 40             	r0 = [r0 + 24]			  ## aes_hw.c:84:5
 1e03166:    00 d6             	r0 = r0 >> 24			  ## aes_hw.c:84:5
 1e03168:    f8 68             	b[r4 + 15] = r0			  ## aes_hw.c:84:5
 1e0316a:    17 01             	{rets, r7-r4} = [sp++]			  ## aes128.c:21:5
 1e0316c:    d8 f3 14 1e       	goto 3161128 <local_irq_enable : 106d98 >			  ## aes128.c:21:5


__ble_bt_evnet_post:
 1e03170:    34 00             	[--sp] = rets			  ## ble_hogp.c:263:0
 1e03172:    f4 0b             	sp += -24			  ## ble_hogp.c:263:0
 1e03174:    03 71             	r3 = 16			  ## ble_hogp.c:263:0
 1e03176:    93 f5 00 00       	h[sp] = r3			  ## ble_hogp.c:265:12
 1e0317a:    18 02             	[sp+4] = r0			  ## ble_hogp.c:266:12
 1e0317c:    d1 f5 08 00       	b[sp+8] = r1			  ## ble_hogp.c:267:18
 1e03180:    4a 02             	[sp+16] = r2			  ## ble_hogp.c:271:18
 1e03182:    00 a0             	r0 = sp + 0			  ## ble_hogp.c:271:18
 1e03184:    80 f3 7b 6c       	call 55542 <sys_event_notify : 1e10a7e >			  ## ble_hogp.c:272:5
 1e03188:    0c 0a             	sp += 24
 1e0318a:    30 00             	pc = [sp++]			  ## ble_hogp.c:273:1


__att_check_remote_result:
 1e0318c:    74 01             	[--sp] = {rets, r4}			  ## ble_hogp.c:425:0
 1e0318e:    14 08             	r4 = r1			  ## ble_hogp.c:425:0
 1e03190:    01 08             	r1 = r0			  ## ble_hogp.c:425:0
 1e03192:    c0 ff 5c 49 e1 01 	r0 = 31541596 <update_target_end+0x1AD4 : 1e1495c >			  ## ble_hogp.c:426:5
 1e03198:    42 08             	r2 = r4			  ## ble_hogp.c:426:5
 1e0319a:    80 f3 96 5f       	call 48940 <printf : 1e0f0ca >			  ## ble_hogp.c:426:5
 1e0319e:    c0 ff 00 4d 4d 43 	r0 = 1129139456 <uECC_vli_cmp_unsafe+0x13CDD04 : 14d4d00 >			  ## ble_hogp.c:427:5
 1e031a4:    21 70             	r1 = 2			  ## ble_hogp.c:427:5
 1e031a6:    42 08             	r2 = r4			  ## ble_hogp.c:427:5
 1e031a8:    14 01             	{rets, r4} = [sp++]			  ## ble_hogp.c:427:5
 1e031aa:    e2 1f             	goto -60 <__ble_bt_evnet_post : 1e03170 >			  ## ble_hogp.c:427:5


__ble_state_to_user:
 1e031ac:    76 01             	[--sp] = {rets, r6-r4}			  ## ble_hogp.c:287:0
 1e031ae:    c6 ff 41 08 00 00 	r6 = 2113 <__ble_state_to_user.ble_state : 841 >			  ## ble_hogp.c:287:0
 1e031b4:    02 6c             	r2 = b[r6 + 0] (u)			  ## ble_hogp.c:289:18
 1e031b6:    14 08             	r4 = r1			  ## ble_hogp.c:289:18
 1e031b8:    05 08             	r5 = r0
 1e031ba:    52 f2 0e 00       	if (r2 == r5) goto 28 <__ble_state_to_user+0x2E : 1e031da >
 1e031be:    c0 ff 39 49 e1 01 	r0 = 31541561 <update_target_end+0x1AB1 : 1e14939 >			  ## ble_hogp.c:290:9
 1e031c4:    21 08             	r1 = r2			  ## ble_hogp.c:290:9
 1e031c6:    52 08             	r2 = r5			  ## ble_hogp.c:290:9
 1e031c8:    80 f3 7f 5f       	call 48894 <printf : 1e0f0ca >			  ## ble_hogp.c:290:9
 1e031cc:    0d 6c             	b[r6 + 0] = r5			  ## ble_hogp.c:291:19
 1e031ce:    c0 ff 00 45 4c 42 	r0 = 1112294656 <uECC_vli_cmp_unsafe+0x3BD504 : 4c4500 >			  ## ble_hogp.c:292:9
 1e031d4:    51 08             	r1 = r5			  ## ble_hogp.c:292:9
 1e031d6:    42 08             	r2 = r4			  ## ble_hogp.c:292:9
 1e031d8:    cb 17             	call -106 <__ble_bt_evnet_post : 1e03170 >			  ## ble_hogp.c:292:9
 1e031da:    56 01             	{pc, r6-r4} = [sp++]			  ## ble_hogp.c:294:1


hogp_event_packet_handler:
 1e031dc:    77 01             	[--sp] = {rets, r7-r4}			  ## ble_hogp.c:443:0
 1e031de:    fc 0b             	sp += -8			  ## ble_hogp.c:443:0
 1e031e0:    34 08             	r4 = r3			  ## ble_hogp.c:443:0
 1e031e2:    15 08             	r5 = r1			  ## ble_hogp.c:443:0
 1e031e4:    01 fc ff ff       	r1 = r0 + -1			  ## ble_hogp.c:446:5
 1e031e8:    c7 ff b0 20 00 00 	r7 = 8368 <gatt_client_conn_handle : 20b0 >			  ## ble_hogp.c:446:5
 1e031ee:    61 e0 56 80       	if (r1 > 6) goto 172 <.GJTIE298_0_0_+0x9A : 1e0329e >			  ## ble_hogp.c:446:5
 1e031f2:    48 c0             	r0 = r1 << 1
 1e031f4:    b0 00             	tbh [r0]


.GJTIL298_0_0_:
 1e031f6:    07 00     < 7 : 0x7 >
 1e031f8:    6c 00     < 108 : 0x6C >
 1e031fa:    79 01     < 377 : 0x179 >
 1e031fc:    85 00     < 133 : 0x85 >
 1e031fe:    96 00     < 150 : 0x96 >
 1e03200:    79 01     < 377 : 0x179 >
 1e03202:    0e 01     < 270 : 0x10E >
 1e03204:    01 70             	r1 = 0			  ## ble_hogp.c:461:27
 1e03206:    02 70             	r2 = 0			  ## ble_hogp.c:461:27
 1e03208:    50 08             	r0 = r5			  ## ble_hogp.c:461:27
 1e0320a:    80 f3 58 25       	call 19120 <little_endian_read_16 : 1e07cbe >			  ## ble_hogp.c:461:27
 1e0320e:    28 5f             	h[r7 + 36] = r0			  ## ble_hogp.c:461:25
 1e03210:    12 f9 50 70       	b[r7 + 80] = r2			  ## ble_hogp.c:461:25
 1e03214:    75 fc 2e 01       	r5 = r7 + 302			  ## ble_hogp.c:463:9
 1e03218:    71 98             	r1 = r4 + 7			  ## ble_hogp.c:463:46
 1e0321a:    72 70             	r2 = 7			  ## ble_hogp.c:463:9
 1e0321c:    50 08             	r0 = r5			  ## ble_hogp.c:463:9
 1e0321e:    98 f3 61 1e       	call 3161282 <memcpy : 106ee4 >			  ## ble_hogp.c:463:9
 1e03222:    26 5f             	r6 = h[r7 + 36] (u)			  ## ble_hogp.c:465:9
 1e03224:    20 5f             	r0 = h[r7 + 36] (u)			  ## ble_hogp.c:465:9
 1e03226:    bf f3 98 ed       	call -9424 <ble_vendor_get_peer_rssi : 1e00d5a >			  ## ble_hogp.c:465:9
 1e0322a:    02 08             	r2 = r0			  ## ble_hogp.c:465:9
 1e0322c:    c0 ff b6 46 e1 01 	r0 = 31540918 <update_target_end+0x182E : 1e146b6 >			  ## ble_hogp.c:465:9
 1e03232:    61 08             	r1 = r6			  ## ble_hogp.c:465:9
 1e03234:    80 f3 49 5f       	call 48786 <printf : 1e0f0ca >			  ## ble_hogp.c:465:9
 1e03238:    c0 ff e3 46 e1 01 	r0 = 31540963 <update_target_end+0x185B : 1e146e3 >			  ## ble_hogp.c:466:9
 1e0323e:    80 f3 44 5f       	call 48776 <printf : 1e0f0ca >			  ## ble_hogp.c:466:9
 1e03242:    71 70             	r1 = 7			  ## ble_hogp.c:467:9
 1e03244:    50 08             	r0 = r5			  ## ble_hogp.c:467:9
 1e03246:    80 f3 45 60       	call 49290 <put_buf : 1e0f2d4 >			  ## ble_hogp.c:467:9
 1e0324a:    e1 70             	r1 = 14			  ## ble_hogp.c:468:9
 1e0324c:    40 08             	r0 = r4			  ## ble_hogp.c:468:9
 1e0324e:    80 f3 36 25       	call 19052 <little_endian_read_16 : 1e07cbe >			  ## ble_hogp.c:468:9
 1e03252:    01 08             	r1 = r0			  ## ble_hogp.c:468:9
 1e03254:    c0 ff 01 47 e1 01 	r0 = 31540993 <update_target_end+0x1879 : 1e14701 >			  ## ble_hogp.c:468:9
 1e0325a:    80 f3 36 5f       	call 48748 <printf : 1e0f0ca >			  ## ble_hogp.c:468:9
 1e0325e:    01 71             	r1 = 16			  ## ble_hogp.c:469:9
 1e03260:    40 08             	r0 = r4			  ## ble_hogp.c:469:9
 1e03262:    80 f3 2c 25       	call 19032 <little_endian_read_16 : 1e07cbe >			  ## ble_hogp.c:469:9
 1e03266:    01 08             	r1 = r0			  ## ble_hogp.c:469:9
 1e03268:    c0 ff 1f 47 e1 01 	r0 = 31541023 <update_target_end+0x1897 : 1e1471f >			  ## ble_hogp.c:469:9
 1e0326e:    80 f3 2c 5f       	call 48728 <printf : 1e0f0ca >			  ## ble_hogp.c:469:9
 1e03272:    21 71             	r1 = 18			  ## ble_hogp.c:470:9
 1e03274:    40 08             	r0 = r4			  ## ble_hogp.c:470:9
 1e03276:    80 f3 22 25       	call 19012 <little_endian_read_16 : 1e07cbe >			  ## ble_hogp.c:470:9
 1e0327a:    01 08             	r1 = r0			  ## ble_hogp.c:470:9
 1e0327c:    c0 ff 3c 47 e1 01 	r0 = 31541052 <update_target_end+0x18B4 : 1e1473c >			  ## ble_hogp.c:470:9
 1e03282:    80 f3 22 5f       	call 48708 <printf : 1e0f0ca >			  ## ble_hogp.c:470:9
 1e03286:    01 71             	r1 = 16			  ## ble_hogp.c:472:13
 1e03288:    40 08             	r0 = r4			  ## ble_hogp.c:472:13
 1e0328a:    80 f3 18 25       	call 18992 <little_endian_read_16 : 1e07cbe >			  ## ble_hogp.c:472:13
 1e0328e:    11 70             	r1 = 1			  ## ble_hogp.c:472:13
 1e03290:    01 20             	if (r0 == 0) goto 2 <.GJTIE298_0_0_+0x90 : 1e03294 >			  ## ble_hogp.c:472:13
 1e03292:    01 70             	r1 = 0			  ## ble_hogp.c:472:13
 1e03294:    c0 ff 40 08 00 00 	r0 = 2112 <report_data_begin : 840 >
 1e0329a:    09 60             	b[r0 + 0] = r1
 1e0329c:    25 19             	goto 586 <.GJTIE298_0_0_+0x2E4 : 1e034e8 >
 1e0329e:    10 e3 e1 00       	if (r0 == 49) goto 450 <.GJTIE298_0_0_+0x260 : 1e03464 >
 1e032a2:    00 e4 f6 00       	if (r0 == 64) goto 492 <.GJTIE298_0_0_+0x28E : 1e03492 >
 1e032a6:    10 e4 1f 11       	if (r0 != 65) goto 574 <.GJTIE298_0_0_+0x2E4 : 1e034e8 >
 1e032aa:    01 70             	r1 = 0			  ## ble_hogp.c:455:9
 1e032ac:    50 08             	r0 = r5			  ## ble_hogp.c:455:9
 1e032ae:    80 f3 06 25       	call 18956 <little_endian_read_16 : 1e07cbe >			  ## ble_hogp.c:455:9
 1e032b2:    02 08             	r2 = r0			  ## ble_hogp.c:455:9
 1e032b4:    21 70             	r1 = 2			  ## ble_hogp.c:455:9
 1e032b6:    50 08             	r0 = r5			  ## ble_hogp.c:455:9
 1e032b8:    80 f3 01 25       	call 18946 <little_endian_read_16 : 1e07cbe >			  ## ble_hogp.c:455:9
 1e032bc:    03 08             	r3 = r0			  ## ble_hogp.c:455:9
 1e032be:    c0 ff 74 46 e1 01 	r0 = 31540852 <update_target_end+0x17EC : 1e14674 >			  ## ble_hogp.c:455:9
 1e032c4:    21 08             	r1 = r2			  ## ble_hogp.c:455:9
 1e032c6:    32 08             	r2 = r3			  ## ble_hogp.c:455:9
 1e032c8:    80 f3 ff 5e       	call 48638 <printf : 1e0f0ca >			  ## ble_hogp.c:455:9
 1e032cc:    0d 19             	goto 538 <.GJTIE298_0_0_+0x2E4 : 1e034e8 >			  ## ble_hogp.c:455:9
 1e032ce:    01 70             	r1 = 0			  ## ble_hogp.c:487:9
 1e032d0:    04 70             	r4 = 0			  ## ble_hogp.c:487:9
 1e032d2:    50 08             	r0 = r5			  ## ble_hogp.c:487:9
 1e032d4:    80 f3 f3 24       	call 18918 <little_endian_read_16 : 1e07cbe >			  ## ble_hogp.c:487:9
 1e032d8:    22 6a             	r2 = b[r5 + 2] (u)			  ## ble_hogp.c:487:9
 1e032da:    01 08             	r1 = r0			  ## ble_hogp.c:487:9
 1e032dc:    c0 ff 59 47 e1 01 	r0 = 31541081 <update_target_end+0x18D1 : 1e14759 >			  ## ble_hogp.c:487:9
 1e032e2:    80 f3 f2 5e       	call 48612 <printf : 1e0f0ca >			  ## ble_hogp.c:487:9
 1e032e6:    2c 5f             	h[r7 + 36] = r4			  ## ble_hogp.c:488:25
 1e032e8:    20 6a             	r0 = b[r5 + 2] (u)			  ## ble_hogp.c:489:18
 1e032ea:    80 e0 fd 10       	if (r0 != 8) goto 506 <.GJTIE298_0_0_+0x2E4 : 1e034e8 >			  ## ble_hogp.c:489:18
 1e032ee:    00 f7 5a 71       	r0 = h[r7 + 346] (u)			  ## ble_hogp.c:489:46
 1e032f2:    60 ff 03 09 f8 00 	if ((r0 & 3) == 0) goto 496 <.GJTIE298_0_0_+0x2E4 : 1e034e8 >			  ## ble_hogp.c:489:46
 1e032f8:    30 fd fc 09       	r0 = r0 & 4294967043			  ## ble_hogp.c:491:43
 1e032fc:    90 b1             	r0 |= 8			  ## ble_hogp.c:491:43
 1e032fe:    c4 18             	goto 392 <.GJTIE298_0_0_+0x284 : 1e03488 >			  ## ble_hogp.c:491:43
 1e03300:    10 70             	r0 = 1
 1e03302:    10 f9 50 70       	b[r7 + 80] = r0
 1e03306:    74 fc 5a 01       	r4 = r7 + 346
 1e0330a:    20 98             	r0 = r4 + 2
 1e0330c:    41 9a             	r1 = r5 + 4			  ## ble_hogp.c:550:51
 1e0330e:    72 70             	r2 = 7			  ## ble_hogp.c:550:9
 1e03310:    98 f3 e8 1d       	call 3161040 <memcpy : 106ee4 >			  ## ble_hogp.c:550:9
 1e03314:    00 58             	r0 = h[r4 + 0] (u)			  ## ble_hogp.c:551:34
 1e03316:    30 fd 03 09       	r0 = r0 & 4294967292			  ## ble_hogp.c:551:34
 1e0331a:    08 58             	h[r4 + 0] = r0			  ## ble_hogp.c:551:34
 1e0331c:    00 7f             	r0 = 240			  ## ble_hogp.c:552:9
 1e0331e:    01 70             	r1 = 0			  ## ble_hogp.c:552:9
 1e03320:    e2 18             	goto 452 <.GJTIE298_0_0_+0x2E2 : 1e034e6 >			  ## ble_hogp.c:552:9
 1e03322:    01 70             	r1 = 0			  ## ble_hogp.c:497:9
 1e03324:    50 08             	r0 = r5			  ## ble_hogp.c:497:9
 1e03326:    80 f3 ca 24       	call 18836 <little_endian_read_16 : 1e07cbe >			  ## ble_hogp.c:497:9
 1e0332a:    33 6a             	r3 = b[r5 + 3] (u)			  ## ble_hogp.c:497:9
 1e0332c:    22 6a             	r2 = b[r5 + 2] (u)			  ## ble_hogp.c:497:9
 1e0332e:    01 08             	r1 = r0			  ## ble_hogp.c:497:9
 1e03330:    c0 ff 89 47 e1 01 	r0 = 31541129 <update_target_end+0x1901 : 1e14789 >			  ## ble_hogp.c:497:9
 1e03336:    80 f3 c8 5e       	call 48528 <printf : 1e0f0ca >			  ## ble_hogp.c:497:9
 1e0333a:    30 6a             	r0 = b[r5 + 3] (u)			  ## ble_hogp.c:498:13
 1e0333c:    f0 e0 b8 10       	if (r0 != 15) goto 368 <.GJTIE298_0_0_+0x2AC : 1e034b0 >			  ## ble_hogp.c:498:13
 1e03340:    c0 ff c9 47 e1 01 	r0 = 31541193 <update_target_end+0x1941 : 1e147c9 >			  ## ble_hogp.c:499:13
 1e03346:    80 f3 c0 5e       	call 48512 <printf : 1e0f0ca >			  ## ble_hogp.c:499:13
 1e0334a:    00 f9 5a 71       	r0 = b[r7 + 346] (u)			  ## ble_hogp.c:500:19
 1e0334e:    60 ff 03 09 08 00 	if ((r0 & 3) == 0) goto 16 <.GJTIE298_0_0_+0x160 : 1e03364 >			  ## ble_hogp.c:500:19
 1e03354:    70 fc 2e 01       	r0 = r7 + 302			  ## ble_hogp.c:500:48
 1e03358:    71 fc 5c 01       	r1 = r7 + 348			  ## ble_hogp.c:500:48
 1e0335c:    72 70             	r2 = 7			  ## ble_hogp.c:500:48
 1e0335e:    98 f3 c5 1d       	call 3160970 <memcmp : 106eec >			  ## ble_hogp.c:500:48
 1e03362:    19 20             	if (r0 == 0) goto 50 <.GJTIE298_0_0_+0x192 : 1e03396 >			  ## ble_hogp.c:500:48
 1e03364:    c0 ff e2 47 e1 01 	r0 = 31541218 <update_target_end+0x195A : 1e147e2 >			  ## ble_hogp.c:501:17
 1e0336a:    80 f3 ae 5e       	call 48476 <printf : 1e0f0ca >			  ## ble_hogp.c:501:17
 1e0336e:    74 fc 2e 01       	r4 = r7 + 302			  ## ble_hogp.c:501:17
 1e03372:    71 70             	r1 = 7			  ## ble_hogp.c:502:17
 1e03374:    40 08             	r0 = r4			  ## ble_hogp.c:502:17
 1e03376:    80 f3 ad 5f       	call 48986 <put_buf : 1e0f2d4 >			  ## ble_hogp.c:502:17
 1e0337a:    40 fc 2e 00       	r0 = r4 + 46			  ## ble_hogp.c:503:17
 1e0337e:    72 70             	r2 = 7			  ## ble_hogp.c:503:17
 1e03380:    41 08             	r1 = r4			  ## ble_hogp.c:503:17
 1e03382:    98 f3 af 1d       	call 3160926 <memcpy : 106ee4 >			  ## ble_hogp.c:503:17
 1e03386:    60 59             	r0 = h[r4 + 44] (u)			  ## ble_hogp.c:504:42
 1e03388:    30 fd 03 09       	r0 = r0 & 4294967292			  ## ble_hogp.c:504:42
 1e0338c:    10 b0             	r0 |= 1			  ## ble_hogp.c:504:42
 1e0338e:    68 59             	h[r4 + 44] = r0			  ## ble_hogp.c:504:42
 1e03390:    10 70             	r0 = 1			  ## ble_hogp.c:505:17
 1e03392:    bf f3 0d f9       	call -3558 <__hogp_conn_pair_vm_do : 1e025b0 >			  ## ble_hogp.c:505:17
 1e03396:    c0 ff 04 48 e1 01 	r0 = 31541252 <update_target_end+0x197C : 1e14804 >			  ## ble_hogp.c:399:5
 1e0339c:    80 f3 95 5e       	call 48426 <printf : 1e0f0ca >			  ## ble_hogp.c:399:5
 1e033a0:    20 5f             	r0 = h[r7 + 36] (u)			  ## ble_hogp.c:400:5
 1e033a2:    81 72             	r1 = 40			  ## ble_hogp.c:400:5
 1e033a4:    12 70             	r2 = 1			  ## ble_hogp.c:400:5
 1e033a6:    cd 15             	call -1126 <ble_gatt_server_characteristic_ccc_set : 1e02f42 >			  ## ble_hogp.c:400:5
 1e033a8:    20 5f             	r0 = h[r7 + 36] (u)			  ## ble_hogp.c:401:5
 1e033aa:    c1 72             	r1 = 44			  ## ble_hogp.c:401:5
 1e033ac:    12 70             	r2 = 1			  ## ble_hogp.c:401:5
 1e033ae:    c9 15             	call -1134 <ble_gatt_server_characteristic_ccc_set : 1e02f42 >			  ## ble_hogp.c:401:5
 1e033b0:    20 5f             	r0 = h[r7 + 36] (u)			  ## ble_hogp.c:402:5
 1e033b2:    31 73             	r1 = 51			  ## ble_hogp.c:402:5
 1e033b4:    12 70             	r2 = 1			  ## ble_hogp.c:402:5
 1e033b6:    c5 15             	call -1142 <ble_gatt_server_characteristic_ccc_set : 1e02f42 >			  ## ble_hogp.c:402:5
 1e033b8:    20 5f             	r0 = h[r7 + 36] (u)			  ## ble_hogp.c:403:5
 1e033ba:    71 73             	r1 = 55			  ## ble_hogp.c:403:5
 1e033bc:    12 70             	r2 = 1			  ## ble_hogp.c:403:5
 1e033be:    c1 15             	call -1150 <ble_gatt_server_characteristic_ccc_set : 1e02f42 >			  ## ble_hogp.c:403:5
 1e033c0:    20 5f             	r0 = h[r7 + 36] (u)			  ## ble_hogp.c:404:5
 1e033c2:    b1 73             	r1 = 59			  ## ble_hogp.c:404:5
 1e033c4:    12 70             	r2 = 1			  ## ble_hogp.c:404:5
 1e033c6:    bd 15             	call -1158 <ble_gatt_server_characteristic_ccc_set : 1e02f42 >			  ## ble_hogp.c:404:5
 1e033c8:    20 5f             	r0 = h[r7 + 36] (u)			  ## ble_hogp.c:405:5
 1e033ca:    f1 73             	r1 = 63			  ## ble_hogp.c:405:5
 1e033cc:    12 70             	r2 = 1			  ## ble_hogp.c:405:5
 1e033ce:    b9 15             	call -1166 <ble_gatt_server_characteristic_ccc_set : 1e02f42 >			  ## ble_hogp.c:405:5
 1e033d0:    20 5f             	r0 = h[r7 + 36] (u)			  ## ble_hogp.c:406:5
 1e033d2:    f1 74             	r1 = 79			  ## ble_hogp.c:406:5
 1e033d4:    12 70             	r2 = 1			  ## ble_hogp.c:406:5
 1e033d6:    b5 15             	call -1174 <ble_gatt_server_characteristic_ccc_set : 1e02f42 >			  ## ble_hogp.c:406:5
 1e033d8:    20 5f             	r0 = h[r7 + 36] (u)			  ## ble_hogp.c:409:9
 1e033da:    c6 15             	call -1140 <__hogp_send_connetion_update_deal : 1e02f68 >			  ## ble_hogp.c:409:9
 1e033dc:    00 70             	r0 = 0			  ## ble_hogp.c:511:16
 1e033de:    d0 f5 01 00       	b[sp+1] = r0			  ## ble_hogp.c:511:16
 1e033e2:    70 fc 2f 01       	r0 = r7 + 303			  ## ble_hogp.c:511:16
 1e033e6:    21 a0             	r1 = sp + 2			  ## ble_hogp.c:511:16
 1e033e8:    80 f3 14 29       	call 21032 <swapX : 1e08614 >			  ## ble_hogp.c:512:13
 1e033ec:    03 f9 2e 71       	r3 = b[r7 + 302] (u)			  ## ble_hogp.c:513:13
 1e033f0:    12 a0             	r2 = sp + 1			  ## ble_hogp.c:513:13
 1e033f2:    10 08             	r0 = r1			  ## ble_hogp.c:513:13
 1e033f4:    31 08             	r1 = r3			  ## ble_hogp.c:513:13
 1e033f6:    80 f3 98 29       	call 21296 <ble_list_get_remote_type : 1e0872a >			  ## ble_hogp.c:513:13
 1e033fa:    c4 f5 01 00       	r4 = b[sp+1] (u)			  ## ble_hogp.c:514:13
 1e033fe:    c0 ff 2d 48 e1 01 	r0 = 31541293 <update_target_end+0x19A5 : 1e1482d >			  ## ble_hogp.c:514:13
 1e03404:    41 08             	r1 = r4			  ## ble_hogp.c:514:13
 1e03406:    80 f3 60 5e       	call 48320 <printf : 1e0f0ca >			  ## ble_hogp.c:514:13
 1e0340a:    20 5f             	r0 = h[r7 + 36] (u)			  ## ble_hogp.c:515:13
 1e0340c:    41 08             	r1 = r4			  ## ble_hogp.c:515:13
 1e0340e:    be 16             	call -644 <__att_check_remote_result : 1e0318c >			  ## ble_hogp.c:515:13
 1e03410:    67 18             	goto 206 <.GJTIE298_0_0_+0x2DC : 1e034e0 >			  ## ble_hogp.c:515:13
 1e03412:    01 70             	r1 = 0			  ## ble_hogp.c:528:9
 1e03414:    50 08             	r0 = r5			  ## ble_hogp.c:528:9
 1e03416:    80 f3 52 24       	call 18596 <little_endian_read_16 : 1e07cbe >			  ## ble_hogp.c:528:9
 1e0341a:    01 08             	r1 = r0			  ## ble_hogp.c:528:9
 1e0341c:    c0 ff 69 48 e1 01 	r0 = 31541353 <update_target_end+0x19E1 : 1e14869 >			  ## ble_hogp.c:528:9
 1e03422:    80 f3 52 5e       	call 48292 <printf : 1e0f0ca >			  ## ble_hogp.c:528:9
 1e03426:    61 70             	r1 = 6			  ## ble_hogp.c:529:9
 1e03428:    40 08             	r0 = r4			  ## ble_hogp.c:529:9
 1e0342a:    80 f3 48 24       	call 18576 <little_endian_read_16 : 1e07cbe >			  ## ble_hogp.c:529:9
 1e0342e:    01 08             	r1 = r0			  ## ble_hogp.c:529:9
 1e03430:    c0 ff 95 48 e1 01 	r0 = 31541397 <update_target_end+0x1A0D : 1e14895 >			  ## ble_hogp.c:529:9
 1e03436:    80 f3 48 5e       	call 48272 <printf : 1e0f0ca >			  ## ble_hogp.c:529:9
 1e0343a:    81 70             	r1 = 8			  ## ble_hogp.c:530:9
 1e0343c:    40 08             	r0 = r4			  ## ble_hogp.c:530:9
 1e0343e:    80 f3 3e 24       	call 18556 <little_endian_read_16 : 1e07cbe >			  ## ble_hogp.c:530:9
 1e03442:    01 08             	r1 = r0			  ## ble_hogp.c:530:9
 1e03444:    c0 ff b6 48 e1 01 	r0 = 31541430 <update_target_end+0x1A2E : 1e148b6 >			  ## ble_hogp.c:530:9
 1e0344a:    80 f3 3e 5e       	call 48252 <printf : 1e0f0ca >			  ## ble_hogp.c:530:9
 1e0344e:    a1 70             	r1 = 10			  ## ble_hogp.c:531:9
 1e03450:    40 08             	r0 = r4			  ## ble_hogp.c:531:9
 1e03452:    80 f3 34 24       	call 18536 <little_endian_read_16 : 1e07cbe >			  ## ble_hogp.c:531:9
 1e03456:    01 08             	r1 = r0			  ## ble_hogp.c:531:9
 1e03458:    c0 ff d6 48 e1 01 	r0 = 31541462 <update_target_end+0x1A4E : 1e148d6 >			  ## ble_hogp.c:531:9
 1e0345e:    80 f3 34 5e       	call 48232 <printf : 1e0f0ca >			  ## ble_hogp.c:531:9
 1e03462:    42 18             	goto 132 <.GJTIE298_0_0_+0x2E4 : 1e034e8 >			  ## ble_hogp.c:531:9
 1e03464:    c0 ff f6 48 e1 01 	r0 = 31541494 <update_target_end+0x1A6E : 1e148f6 >			  ## ble_hogp.c:541:9
 1e0346a:    80 f3 2e 5e       	call 48220 <printf : 1e0f0ca >			  ## ble_hogp.c:541:9
 1e0346e:    00 f7 5a 71       	r0 = h[r7 + 346] (u)			  ## ble_hogp.c:542:28
 1e03472:    81 d0             	r1 = r0 >> 2			  ## ble_hogp.c:542:28
 1e03474:    60 ff 3f 19 09 00 	if ((r1 & 63) == 0) goto 18 <.GJTIE298_0_0_+0x288 : 1e0348c >			  ## ble_hogp.c:542:28
 1e0347a:    30 fd fc 09       	r0 = r0 & 4294967043			  ## ble_hogp.c:543:42
 1e0347e:    89 c0             	r1 = r1 << 2			  ## ble_hogp.c:543:42
 1e03480:    11 fc fc 00       	r1 = r1 + 252			  ## ble_hogp.c:543:42
 1e03484:    41 04             	r1 = r1.b0 (u)			  ## ble_hogp.c:543:42
 1e03486:    50 b2             	r0 |= r1			  ## ble_hogp.c:543:42
 1e03488:    10 f7 5a 71       	h[r7 + 346] = r0
 1e0348c:    bf f3 0a f9       	call -3564 <hogp_adv_config_set : 1e026a4 >
 1e03490:    2b 18             	goto 86 <.GJTIE298_0_0_+0x2E4 : 1e034e8 >
 1e03492:    11 70             	r1 = 1			  ## ble_hogp.c:556:9
 1e03494:    50 08             	r0 = r5			  ## ble_hogp.c:556:9
 1e03496:    80 f3 12 24       	call 18468 <little_endian_read_16 : 1e07cbe >			  ## ble_hogp.c:556:9
 1e0349a:    02 6a             	r2 = b[r5 + 0] (u)			  ## ble_hogp.c:556:9
 1e0349c:    01 08             	r1 = r0			  ## ble_hogp.c:556:9
 1e0349e:    c0 ff 15 49 e1 01 	r0 = 31541525 <update_target_end+0x1A8D : 1e14915 >			  ## ble_hogp.c:556:9
 1e034a4:    80 f3 11 5e       	call 48162 <printf : 1e0f0ca >			  ## ble_hogp.c:556:9
 1e034a8:    00 6a             	r0 = b[r5 + 0] (u)			  ## ble_hogp.c:557:9
 1e034aa:    21 5f             	r1 = h[r7 + 36] (u)			  ## ble_hogp.c:557:40
 1e034ac:    41 04             	r1 = r1.b0 (u)			  ## ble_hogp.c:557:9
 1e034ae:    1b 18             	goto 54 <.GJTIE298_0_0_+0x2E2 : 1e034e6 >			  ## ble_hogp.c:557:9
 1e034b0:    c0 ff 4f 48 e1 01 	r0 = 31541327 <update_target_end+0x19C7 : 1e1484f >			  ## ble_hogp.c:518:13
 1e034b6:    80 f3 08 5e       	call 48144 <printf : 1e0f0ca >			  ## ble_hogp.c:518:13
 1e034ba:    74 fc 2e 01       	r4 = r7 + 302			  ## ble_hogp.c:518:13
 1e034be:    40 fc 2e 00       	r0 = r4 + 46			  ## ble_hogp.c:519:13
 1e034c2:    72 70             	r2 = 7			  ## ble_hogp.c:519:13
 1e034c4:    41 08             	r1 = r4			  ## ble_hogp.c:519:13
 1e034c6:    98 f3 0d 1d       	call 3160602 <memcpy : 106ee4 >			  ## ble_hogp.c:519:13
 1e034ca:    20 5f             	r0 = h[r7 + 36] (u)			  ## ble_hogp.c:520:13
 1e034cc:    80 f3 5a 57       	call 44724 <att_server_set_check_remote : 1e0e384 >			  ## ble_hogp.c:520:13
 1e034d0:    60 59             	r0 = h[r4 + 44] (u)			  ## ble_hogp.c:521:38
 1e034d2:    30 fd 03 09       	r0 = r0 & 4294967292			  ## ble_hogp.c:521:38
 1e034d6:    10 b0             	r0 |= 1			  ## ble_hogp.c:521:38
 1e034d8:    68 59             	h[r4 + 44] = r0			  ## ble_hogp.c:521:38
 1e034da:    10 70             	r0 = 1			  ## ble_hogp.c:522:13
 1e034dc:    bf f3 68 f8       	call -3888 <__hogp_conn_pair_vm_do : 1e025b0 >			  ## ble_hogp.c:522:13
 1e034e0:    01 f9 50 70       	r1 = b[r7 + 80] (u)
 1e034e4:    10 7f             	r0 = 241			  ## ble_hogp.c:524:9
 1e034e6:    62 16             	call -828 <__ble_state_to_user : 1e031ac >
 1e034e8:    00 70             	r0 = 0			  ## ble_hogp.c:567:5
 1e034ea:    04 0a             	sp += 8			  ## ble_hogp.c:567:5
 1e034ec:    57 01             	{pc, r7-r4} = [sp++]			  ## ble_hogp.c:567:5


lib_btstack_version:
 1e034ee:    00 70             	r0 = 0			  ## version.c:24:0
 1e034f0:    20 00             	rts			  ## version.c:25:5


lib_media_version:
 1e034f2:    00 70             	r0 = 0			  ## version.c:28:0
 1e034f4:    20 00             	rts			  ## version.c:29:5


close_gpio:
 1e034f6:    c0 ff 08 50 1e 00 	r0 = 1986568 <uECC_vli_cmp_unsafe+0xDE00C : 1e5008 >			  ## board_ac6328a_keyfob.c:348:0
 1e034fc:    01 40             	r1 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:386:18
 1e034fe:    02 fb ff 01       	r2 = 511 <BTCTLER_CL_RAM_TOTAL+0x1B : 1ff >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:395:13
 1e03502:    51 b4             	r1 |= r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:395:13
 1e03504:    09 40             	[r0 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:401:12
 1e03506:    21 40             	r1 = [r0 + 8]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:634:18
 1e03508:    02 fb 00 fe       	r2 = -512 <bank_code_load_addr+0x1DC808 : 1fffe00 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:640:13
 1e0350c:    51 b5             	r1 &= r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:640:13
 1e0350e:    29 40             	[r0 + 8] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:650:11
 1e03510:    31 40             	r1 = [r0 + 12]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:720:18
 1e03512:    51 b5             	r1 &= r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:726:13
 1e03514:    39 40             	[r0 + 12] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:735:11
 1e03516:    11 40             	r1 = [r0 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:898:18
 1e03518:    51 b5             	r1 &= r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:904:13
 1e0351a:    19 40             	[r0 + 4] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:913:12
 1e0351c:    61 40             	r1 = [r0 + 24]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:954:18
 1e0351e:    51 b5             	r1 &= r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:960:13
 1e03520:    69 40             	[r0 + 24] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:969:13
 1e03522:    00 fc 00 01       	r0 = r0 + 256
 1e03526:    01 40             	r1 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:386:18
 1e03528:    02 fb fd 03       	r2 = 1021 <BTCTLER_LE_RAM_TOTAL+0x1F : 3fd >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:395:13
 1e0352c:    51 b4             	r1 |= r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:395:13
 1e0352e:    09 40             	[r0 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:401:12
 1e03530:    21 40             	r1 = [r0 + 8]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:634:18
 1e03532:    02 fb 02 fc       	r2 = -1022 <bank_code_load_addr+0x1DC60A : 1fffc02 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:640:13
 1e03536:    51 b5             	r1 &= r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:640:13
 1e03538:    29 40             	[r0 + 8] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:650:11
 1e0353a:    31 40             	r1 = [r0 + 12]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:720:18
 1e0353c:    51 b5             	r1 &= r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:726:13
 1e0353e:    39 40             	[r0 + 12] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:735:11
 1e03540:    11 40             	r1 = [r0 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:898:18
 1e03542:    51 b5             	r1 &= r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:904:13
 1e03544:    19 40             	[r0 + 4] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:913:12
 1e03546:    61 40             	r1 = [r0 + 24]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:954:18
 1e03548:    51 b5             	r1 &= r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:960:13
 1e0354a:    69 40             	[r0 + 24] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:969:13
 1e0354c:    00 fc f8 c6       	r0 = r0 + -14600
 1e03550:    01 40             	r1 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e03552:    71 b0             	r1 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e03554:    09 40             	[r0 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e03556:    00 fc 00 3c       	r0 = r0 + 15360			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e0355a:    00 f4 50 0a       	[r0 + 0] |= 20480			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e0355e:    01 fc 00 06       	r1 = r0 + 1536
 1e03562:    02 42             	r2 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:246:23
 1e03564:    72 b0             	r2 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:246:23
 1e03566:    0a 42             	[r1 + 0] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:246:23
 1e03568:    09 f4 50 0a       	[r0 + 36] |= 20480			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:246:23
 1e0356c:    92 40             	r2 = [r0 + 36]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:577:13
 1e0356e:    72 b2             	r2 &= 4294967279			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:577:13
 1e03570:    9a 40             	[r0 + 36] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:577:13
 1e03572:    92 40             	r2 = [r0 + 36]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:167:30
 1e03574:    72 b3             	r2 &= 4294967231			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:167:30
 1e03576:    9a 40             	[r0 + 36] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:167:30
 1e03578:    02 42             	r2 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:246:23
 1e0357a:    72 b0             	r2 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:246:23
 1e0357c:    0a 42             	[r1 + 0] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:246:23
 1e0357e:    09 f4 50 0a       	[r0 + 36] |= 20480			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:246:23
 1e03582:    09 f4 04 09       	[r0 + 36] |= 4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:246:23
 1e03586:    92 40             	r2 = [r0 + 36]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:810:13
 1e03588:    72 b4             	r2 &= 4294967039			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:810:13
 1e0358a:    9a 40             	[r0 + 36] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:810:13
 1e0358c:    92 40             	r2 = [r0 + 36]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:207:30
 1e0358e:    72 b5             	r2 &= 4294966271			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:207:30
 1e03590:    9a 40             	[r0 + 36] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:207:30
 1e03592:    92 40             	r2 = [r0 + 36]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:577:13
 1e03594:    f2 b2             	r2 &= 4294967263			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:577:13
 1e03596:    9a 40             	[r0 + 36] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:577:13
 1e03598:    92 40             	r2 = [r0 + 36]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:167:30
 1e0359a:    f2 b3             	r2 &= 4294967167			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:167:30
 1e0359c:    9a 40             	[r0 + 36] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:167:30
 1e0359e:    02 42             	r2 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:246:23
 1e035a0:    72 b0             	r2 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:246:23
 1e035a2:    0a 42             	[r1 + 0] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:246:23
 1e035a4:    09 f4 50 0a       	[r0 + 36] |= 20480			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:246:23
 1e035a8:    09 f4 08 09       	[r0 + 36] |= 8			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:246:23
 1e035ac:    91 40             	r1 = [r0 + 36]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:810:13
 1e035ae:    f1 b4             	r1 &= 4294966783			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:810:13
 1e035b0:    99 40             	[r0 + 36] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:810:13
 1e035b2:    91 40             	r1 = [r0 + 36]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:207:30
 1e035b4:    f1 b5             	r1 &= 4294965247			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:207:30
 1e035b6:    99 40             	[r0 + 36] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:207:30
 1e035b8:    20 00             	rts			  ## board_ac6328a_keyfob.c:399:1


sleep_enter_callback:
 1e035ba:    10 e0 03 10       	if (r0 != 1) goto 6 <sleep_enter_callback+0xA : 1e035c4 >			  ## board_ac6328a_keyfob.c:496:0
 1e035be:    c0 73             	r0 = 60			  ## board_ac6328a_keyfob.c:499:3
 1e035c0:    c0 f3 08 5f       	goto 48656 <putchar : 1e0f3d4 >			  ## board_ac6328a_keyfob.c:499:3
 1e035c4:    98 1f             	goto -208 <close_gpio : 1e034f6 >			  ## board_ac6328a_keyfob.c:503:3


sleep_exit_callback:
 1e035c6:    e0 73             	r0 = 62			  ## board_ac6328a_keyfob.c:490:0
 1e035c8:    c0 f3 04 5f       	goto 48648 <putchar : 1e0f3d4 >			  ## board_ac6328a_keyfob.c:491:2


mask_softflag_config:
 1e035cc:    c1 ff 30 18 1a 00 	r1 = 1710128 <uECC_vli_cmp_unsafe+0x9A834 : 1a1830 >			  ## power_hw.c:1274:0
 1e035d2:    02 62             	r2 = b[r1 + 0] (u)			  ## power_hw.c:1275:17
 1e035d4:    12 b3             	r2 |= 64			  ## power_hw.c:1275:17
 1e035d6:    0a 62             	b[r1 + 0] = r2			  ## power_hw.c:1275:17
 1e035d8:    02 60             	r2 = b[r0 + 0] (u)			  ## power_hw.c:1276:38
 1e035da:    8a 62             	b[r1 + 8] = r2			  ## power_hw.c:1276:20
 1e035dc:    12 60             	r2 = b[r0 + 1] (u)			  ## power_hw.c:1277:38
 1e035de:    9a 62             	b[r1 + 9] = r2			  ## power_hw.c:1277:20
 1e035e0:    22 60             	r2 = b[r0 + 2] (u)			  ## power_hw.c:1278:38
 1e035e2:    aa 63             	b[r1 + 26] = r2			  ## power_hw.c:1278:20
 1e035e4:    30 60             	r0 = b[r0 + 3] (u)			  ## power_hw.c:1279:38
 1e035e6:    b8 63             	b[r1 + 27] = r0			  ## power_hw.c:1279:20
 1e035e8:    20 00             	rts			  ## power_hw.c:1280:1


board_set_soft_poweroff:
 1e035ea:    34 00             	[--sp] = rets			  ## board_ac6328a_keyfob.c:474:0
 1e035ec:    fe 0b             	sp += -4			  ## board_ac6328a_keyfob.c:474:0
 1e035ee:    c2 ff c8 4d e1 01 	r2 = 31542728 <update_target_end+0x1F40 : 1e14dc8 >			  ## board_ac6328a_keyfob.c:475:2
 1e035f4:    c3 ff dc 4d e1 01 	r3 = 31542748 <update_target_end+0x1F54 : 1e14ddc >			  ## board_ac6328a_keyfob.c:475:2
 1e035fa:    20 70             	r0 = 2			  ## board_ac6328a_keyfob.c:475:2
 1e035fc:    80 f3 95 5d       	call 47914 <log_print : 1e0f12a >			  ## board_ac6328a_keyfob.c:475:2
 1e03600:    c0 ff 14 54 1e 00 	r0 = 1987604 <uECC_vli_cmp_unsafe+0xDE418 : 1e5414 >			  ## board_ac6328a_keyfob.c:288:58
 1e03606:    00 40             	r0 = [r0 + 0]			  ## board_ac6328a_keyfob.c:288:58
 1e03608:    80 d3             	r0 = r0 >> 14			  ## board_ac6328a_keyfob.c:288:46
 1e0360a:    20 fd 04 09       	r0 = r0 & 4			  ## board_ac6328a_keyfob.c:288:46
 1e0360e:    d0 f5 00 00       	b[sp] = r0			  ## board_ac6328a_keyfob.c:288:46
 1e03612:    00 70             	r0 = 0			  ## board_ac6328a_keyfob.c:294:37
 1e03614:    d0 f5 01 00       	b[sp+1] = r0			  ## board_ac6328a_keyfob.c:294:37
 1e03618:    d0 f5 02 00       	b[sp+2] = r0			  ## board_ac6328a_keyfob.c:297:38
 1e0361c:    d0 f5 03 00       	b[sp+3] = r0			  ## board_ac6328a_keyfob.c:300:38
 1e03620:    00 a0             	r0 = sp + 0			  ## board_ac6328a_keyfob.c:300:38
 1e03622:    d4 17             	call -88 <mask_softflag_config : 1e035cc >			  ## board_ac6328a_keyfob.c:301:5
 1e03624:    68 17             	call -304 <close_gpio : 1e034f6 >			  ## board_ac6328a_keyfob.c:482:2
 1e03626:    02 0a             	sp += 4			  ## board_ac6328a_keyfob.c:482:2
 1e03628:    30 00             	pc = [sp++]			  ## board_ac6328a_keyfob.c:483:1


aport_wakeup_callback:
 1e0362a:    20 00             	rts			  ## board_ac6328a_keyfob.c:527:0


port_wakeup_callback:
 1e0362c:    20 00             	rts			  ## board_ac6328a_keyfob.c:513:0


uart_enter_deepsleep:
 1e0362e:    c0 ff 14 56 1e 00 	r0 = 1988116 <uECC_vli_cmp_unsafe+0xDE618 : 1e5614 >			  ## uart.c:384:0
 1e03634:    00 40             	r0 = [r0 + 0]			  ## uart.c:385:28
 1e03636:    c1 ff b0 20 00 00 	r1 = 8368 <gatt_client_conn_handle : 20b0 >			  ## uart.c:386:17
 1e0363c:    98 43             	[r1 + 100] = r0			  ## uart.c:385:17
 1e0363e:    20 fb 71 04       	r0 = 1974272			  ## uart.c:386:29
 1e03642:    00 40             	r0 = [r0 + 0]			  ## uart.c:386:29
 1e03644:    a8 43             	[r1 + 104] = r0			  ## uart.c:386:17
 1e03646:    20 00             	rts			  ## uart.c:387:1


uart_exit_deepsleep:
 1e03648:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## uart.c:390:0
 1e0364e:    91 41             	r1 = [r0 + 100]			  ## uart.c:391:24
 1e03650:    c2 ff 08 50 1e 00 	r2 = 1986568 <uECC_vli_cmp_unsafe+0xDE00C : 1e5008 >			  ## uart.c:391:24
 1e03656:    11 f6 0c 26       	[r2 + 1548] = r1			  ## uart.c:391:22
 1e0365a:    01 44             	r1 = [r2 + 0]			  ## uart.c:392:19
 1e0365c:    f1 b2             	r1 &= 4294967263			  ## uart.c:392:19
 1e0365e:    09 44             	[r2 + 0] = r1			  ## uart.c:392:19
 1e03660:    20 fb 71 14       	r1 = 1974272			  ## uart.c:392:19
 1e03664:    c2 f4 ff 1f       	[r1 + 8] = 4294967295			  ## uart.c:393:20
 1e03668:    a0 41             	r0 = [r0 + 104]			  ## uart.c:394:22
 1e0366a:    08 42             	[r1 + 0] = r0			  ## uart.c:394:20
 1e0366c:    00 f4 34 1a       	[r1 + 0] |= 13312			  ## uart.c:395:20
 1e03670:    20 00             	rts			  ## uart.c:398:1


clock_critical_enter.484:
 1e03672:    20 00             	rts			  ## uart.c:197:0


clock_critical_exit.485:
 1e03674:    20 00             	rts			  ## uart.c:200:0


tmr_enter_deepsleep:
 1e03676:    c0 ff 00 05 1e 00 	r0 = 1967360 <uECC_vli_cmp_unsafe+0xD9504 : 1e0500 >			  ## timer.c:256:0
 1e0367c:    11 40             	r1 = [r0 + 4]			  ## timer.c:257:29
 1e0367e:    c2 ff b0 20 00 00 	r2 = 8368 <gatt_client_conn_handle : 20b0 >			  ## timer.c:259:16
 1e03684:    b9 45             	[r2 + 108] = r1			  ## timer.c:257:16
 1e03686:    21 40             	r1 = [r0 + 8]			  ## timer.c:258:29
 1e03688:    c9 45             	[r2 + 112] = r1			  ## timer.c:258:16
 1e0368a:    00 40             	r0 = [r0 + 0]			  ## timer.c:259:29
 1e0368c:    d8 45             	[r2 + 116] = r0			  ## timer.c:259:16
 1e0368e:    20 00             	rts			  ## timer.c:260:1


timer1_isr:
 1e03690:    e9 01             	[--sp] = {psr, rets, reti}			  ## timer.c:100:0
 1e03692:    78 f3 3f 00       	[--sp] = {r5-r0}			  ## timer.c:106:20
 1e03696:    c0 ff 00 05 1e 00 	r0 = 1967360 <uECC_vli_cmp_unsafe+0xD9504 : 1e0500 >			  ## timer.c:106:20
 1e0369c:    00 f4 40 0a       	[r0 + 0] |= 16384			  ## timer.c:106:20
 1e036a0:    c4 ff b0 20 00 00 	r4 = 8368 <gatt_client_conn_handle : 20b0 >			  ## timer.c:106:20
 1e036a6:    45 fc 78 00       	r5 = r4 + 120			  ## timer.c:106:20
 1e036aa:    00 4a             	r0 = [r5 + 0]			  ## timer.c:111:5
 1e036ac:    10 80             	r0 += 1			  ## timer.c:111:5
 1e036ae:    08 4a             	[r5 + 0] = r0			  ## timer.c:111:5
 1e036b0:    10 4a             	r0 = [r5 + 4]			  ## timer.c:113:28
 1e036b2:    21 4a             	r1 = [r5 + 8]			  ## timer.c:113:17
 1e036b4:    10 09             	r0 += r1			  ## timer.c:113:17
 1e036b6:    28 4a             	[r5 + 8] = r0			  ## timer.c:113:17
 1e036b8:    80 f3 a2 6d       	call 56132 <usr_timer_schedule : 1e11200 >			  ## timer.c:115:5
 1e036bc:    30 4a             	r0 = [r5 + 12]			  ## timer.c:119:9
 1e036be:    05 20             	if (r0 == 0) goto 10 <timer1_isr+0x3A : 1e036ca >			  ## timer.c:119:9
 1e036c0:    00 f6 84 40       	r0 = [r4 + 132]			  ## timer.c:120:18
 1e036c4:    f0 8f             	r0 += -1			  ## timer.c:120:18
 1e036c6:    10 f6 84 40       	[r4 + 132] = r0			  ## timer.c:120:18
 1e036ca:    70 f3 3f 00       	{r5-r0} = [sp++]			  ## timer.c:125:1
 1e036ce:    a9 01             	{psr, rets, reti} = [sp++]			  ## timer.c:125:1
 1e036d0:    22 00             	rti			  ## timer.c:125:1


clock_critical_enter.633:
 1e036d2:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## timer.c:241:0
 1e036d8:    01 f9 88 00       	r1 = b[r0 + 136] (u)			  ## timer.c:241:0
 1e036dc:    08 22             	if (r1 == 0) goto 16 <clock_critical_enter.633+0x1C : 1e036ee >			  ## timer.c:241:0
 1e036de:    c1 ff 00 05 1e 00 	r1 = 1967360 <uECC_vli_cmp_unsafe+0xD9504 : 1e0500 >			  ## timer.c:241:0
 1e036e4:    12 42             	r2 = [r1 + 4]			  ## timer.c:136:36
 1e036e6:    12 f6 8c 00       	[r0 + 140] = r2			  ## timer.c:136:23
 1e036ea:    c0 f4 00 19       	[r1 + 0] = 0			  ## timer.c:137:24
 1e036ee:    20 00             	rts			  ## timer.c:243:1


clock_critical_exit.634:
 1e036f0:    ff f3 83 f3       	goto -6394 <timer1_resume : 1e01dfa >			  ## timer.c:246:0


__power_suspend_post:
 1e036f4:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## timer.c:172:0
 1e036fa:    01 f9 88 00       	r1 = b[r0 + 136] (u)			  ## timer.c:172:0
 1e036fe:    08 22             	if (r1 == 0) goto 16 <__power_suspend_post+0x1C : 1e03710 >			  ## timer.c:172:0
 1e03700:    c1 ff 00 05 1e 00 	r1 = 1967360 <uECC_vli_cmp_unsafe+0xD9504 : 1e0500 >			  ## timer.c:172:0
 1e03706:    12 42             	r2 = [r1 + 4]			  ## timer.c:136:36
 1e03708:    12 f6 8c 00       	[r0 + 140] = r2			  ## timer.c:136:23
 1e0370c:    c0 f4 00 19       	[r1 + 0] = 0			  ## timer.c:137:24
 1e03710:    20 00             	rts			  ## timer.c:174:1


__power_resume:
 1e03712:    34 00             	[--sp] = rets			  ## timer.c:177:0
 1e03714:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## timer.c:179:17
 1e0371a:    02 f6 80 00       	r2 = [r0 + 128]			  ## timer.c:179:17
 1e0371e:    03 fb e8 03       	r3 = 1000 <BTCTLER_LE_RAM_TOTAL+0xA : 3e8 >			  ## timer.c:179:25
 1e03722:    c0 fe 30 11       	r1 = r1 / r3 (u)			  ## timer.c:179:25
 1e03726:    21 09             	r1 += r2			  ## timer.c:179:17
 1e03728:    11 f6 80 00       	[r0 + 128] = r1			  ## timer.c:179:17
 1e0372c:    bf f3 65 f3       	call -6454 <timer1_resume : 1e01dfa >			  ## timer.c:182:5
 1e03730:    88 01             	{rets} = [sp++]			  ## timer.c:184:5
 1e03732:    c0 f3 65 6d       	goto 56010 <usr_timer_schedule : 1e11200 >			  ## timer.c:184:5


exception_analyze:
 1e03736:    60 f3 00 00       	trigger			  ## debug.c:896:0
 1e0373a:    c0 ff 4a 18 1a 00 	r0 = 1710154 <uECC_vli_cmp_unsafe+0x9A84E : 1a184a >			  ## debug.c:888:18
 1e03740:    b1 7a             	r1 = 171			  ## debug.c:888:18
 1e03742:    09 60             	b[r0 + 0] = r1			  ## debug.c:888:18
 1e03744:    cf f3 4c fe       	goto 2096280 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5


power_set_soft_poweroff_prepare:
 1e03748:    75 01             	[--sp] = {rets, r5, r4}			  ## pmu_analog.c:863:0
 1e0374a:    98 f3 27 1b       	call 3159630 <local_irq_disable : 106d9c >			  ## pmu_analog.c:864:5
 1e0374e:    08 00             	csync			  ## pmu_analog.c:864:5
 1e03750:    c4 ff 00 50 00 00 	r4 = 20480 <nvbss_begin : 5000 >			  ## pmu_analog.c:864:5
 1e03756:    00 f6 40 43       	r0 = [r4 + 832]			  ## pmu_analog.c:866:20
 1e0375a:    01 20             	if (r0 == 0) goto 2 <power_set_soft_poweroff_prepare+0x16 : 1e0375e >			  ## pmu_analog.c:866:20
 1e0375c:    80 00             	call r0			  ## pmu_analog.c:868:9
 1e0375e:    c0 ff 45 18 1a 00 	r0 = 1710149 <uECC_vli_cmp_unsafe+0x9A849 : 1a1845 >
 1e03764:    01 60             	r1 = b[r0 + 0] (u)			  ## pmu_analog.c:873:17
 1e03766:    01 fd 07 19       	r1 = r1 | 7			  ## pmu_analog.c:873:17
 1e0376a:    09 60             	b[r0 + 0] = r1			  ## pmu_analog.c:873:17
 1e0376c:    01 fc d0 ff       	r1 = r0 + -48			  ## pmu_analog.c:873:17
 1e03770:    50 62             	r0 = b[r1 + 5] (u)			  ## pmu_analog.c:876:5
 1e03772:    70 b0             	r0 &= 4294967294			  ## pmu_analog.c:876:5
 1e03774:    58 62             	b[r1 + 5] = r0			  ## pmu_analog.c:876:5
 1e03776:    10 fc 7c 00       	r0 = r1 + 124			  ## pmu_analog.c:876:5
 1e0377a:    02 61             	r2 = b[r0 + 16] (u)			  ## pmu_analog.c:879:5
 1e0377c:    72 b0             	r2 &= 4294967294			  ## pmu_analog.c:879:5
 1e0377e:    0a 61             	b[r0 + 16] = r2			  ## pmu_analog.c:879:5
 1e03780:    12 61             	r2 = b[r0 + 17] (u)			  ## pmu_analog.c:881:5
 1e03782:    22 fd fc 29       	r2 = r2 & 252			  ## pmu_analog.c:881:5
 1e03786:    1a 61             	b[r0 + 17] = r2			  ## pmu_analog.c:881:5
 1e03788:    02 62             	r2 = b[r1 + 0] (u)			  ## pmu_analog.c:884:5
 1e0378a:    92 b2             	r2 |= 32			  ## pmu_analog.c:884:5
 1e0378c:    0a 62             	b[r1 + 0] = r2			  ## pmu_analog.c:884:5
 1e0378e:    31 60             	r1 = b[r0 + 3] (u)			  ## pmu_analog.c:887:5
 1e03790:    21 fd e1 19       	r1 = r1 & 225			  ## pmu_analog.c:887:5
 1e03794:    39 60             	b[r0 + 3] = r1			  ## pmu_analog.c:887:5
 1e03796:    31 60             	r1 = b[r0 + 3] (u)			  ## pmu_analog.c:888:5
 1e03798:    71 b0             	r1 &= 4294967294			  ## pmu_analog.c:888:5
 1e0379a:    39 60             	b[r0 + 3] = r1			  ## pmu_analog.c:888:5
 1e0379c:    31 60             	r1 = b[r0 + 3] (u)			  ## pmu_analog.c:889:5
 1e0379e:    f1 b2             	r1 &= 4294967263			  ## pmu_analog.c:889:5
 1e037a0:    39 60             	b[r0 + 3] = r1			  ## pmu_analog.c:889:5
 1e037a2:    01 60             	r1 = b[r0 + 0] (u)			  ## pmu_analog.c:892:5
 1e037a4:    f1 b1             	r1 &= 4294967287			  ## pmu_analog.c:892:5
 1e037a6:    09 60             	b[r0 + 0] = r1			  ## pmu_analog.c:892:5
 1e037a8:    c1 ff 0c 00 1e 00 	r1 = 1966092 <uECC_vli_cmp_unsafe+0xD9010 : 1e000c >			  ## pmu_analog.c:892:5
 1e037ae:    00 f4 01 19       	[r1 + 0] |= 1			  ## pmu_analog.c:824:24
 1e037b2:    12 42             	r2 = [r1 + 4]			  ## pmu_analog.c:825:5
 1e037b4:    32 fd 07 2a       	r2 = r2 & 4294965503			  ## pmu_analog.c:825:5
 1e037b8:    02 fd 03 2a       	r2 = r2 | 768			  ## pmu_analog.c:825:5
 1e037bc:    1a 42             	[r1 + 4] = r2			  ## pmu_analog.c:825:5
 1e037be:    08 00             	csync			  ## pmu_analog.c:826:5
 1e037c0:    11 fc f4 30       	r1 = r1 + 12532			  ## pmu_analog.c:833:17
 1e037c4:    02 70             	r2 = 0			  ## pmu_analog.c:833:17
 1e037c6:    0a 42             	[r1 + 0] = r2			  ## pmu_analog.c:833:17
 1e037c8:    11 fc 00 e7       	r1 = r1 + -6400			  ## pmu_analog.c:843:18
 1e037cc:    0a 42             	[r1 + 0] = r2			  ## pmu_analog.c:843:18
 1e037ce:    11 fc 00 3d       	r1 = r1 + 15616			  ## pmu_analog.c:843:18
 1e037d2:    12 f6 00 15       	[r1 + 1280] = r2			  ## pmu_analog.c:845:19
 1e037d6:    13 fc 00 f2       	r3 = r1 + -3584			  ## pmu_analog.c:845:19
 1e037da:    0a 46             	[r3 + 0] = r2			  ## pmu_analog.c:848:22
 1e037dc:    1a 46             	[r3 + 4] = r2			  ## pmu_analog.c:849:22
 1e037de:    c3 ff c0 95 07 00 	r3 = 497088 <text_size+0x58710 : 795c0 >			  ## pmu_analog.c:849:22
 1e037e4:    05 70             	r5 = 0			  ## pmu_analog.c:849:22
 1e037e6:    b2 f6 00 53       	[r5+r3<<2] = r2			  ## pmu_analog.c:853:39
 1e037ea:    45 80             	r5 += 4			  ## pmu_analog.c:852:23
 1e037ec:    01 ff e4 50 fa ff 	if (r5 != 228) goto -12 <power_set_soft_poweroff_prepare+0x9E : 1e037e6 >			  ## pmu_analog.c:852:5
 1e037f2:    03 8c             	r3 += -64
 1e037f4:    05 70             	r5 = 0
 1e037f6:    b2 f6 00 53       	[r5+r3<<2] = r2			  ## pmu_analog.c:857:36
 1e037fa:    45 80             	r5 += 4			  ## pmu_analog.c:856:23
 1e037fc:    85 e7 fb 1f       	if (r5 != 120) goto -10 <power_set_soft_poweroff_prepare+0xAE : 1e037f6 >			  ## pmu_analog.c:856:5
 1e03800:    12 fc 00 c7       	r2 = r1 + -14592			  ## pmu_analog.c:898:18
 1e03804:    03 70             	r3 = 0			  ## pmu_analog.c:898:18
 1e03806:    0b 44             	[r2 + 0] = r3			  ## pmu_analog.c:898:18
 1e03808:    12 fc 00 c8       	r2 = r1 + -14336			  ## pmu_analog.c:899:18
 1e0380c:    0b 44             	[r2 + 0] = r3			  ## pmu_analog.c:899:18
 1e0380e:    12 fc 00 c9       	r2 = r1 + -14080			  ## pmu_analog.c:900:18
 1e03812:    0b 44             	[r2 + 0] = r3			  ## pmu_analog.c:900:18
 1e03814:    12 fc 00 cf       	r2 = r1 + -12544			  ## pmu_analog.c:904:18
 1e03818:    0b 44             	[r2 + 0] = r3			  ## pmu_analog.c:904:18
 1e0381a:    0b 42             	[r1 + 0] = r3			  ## pmu_analog.c:906:19
 1e0381c:    51 60             	r1 = b[r0 + 5] (u)			  ## pmu_analog.c:909:5
 1e0381e:    21 fd f8 19       	r1 = r1 & 248			  ## pmu_analog.c:909:5
 1e03822:    01 fd 06 19       	r1 = r1 | 6			  ## pmu_analog.c:909:5
 1e03826:    59 60             	b[r0 + 5] = r1			  ## pmu_analog.c:909:5
 1e03828:    a1 60             	r1 = b[r0 + 10] (u)			  ## pmu_analog.c:910:5
 1e0382a:    21 fd f0 19       	r1 = r1 & 240			  ## pmu_analog.c:910:5
 1e0382e:    01 fd 09 19       	r1 = r1 | 9			  ## pmu_analog.c:910:5
 1e03832:    a9 60             	b[r0 + 10] = r1			  ## pmu_analog.c:910:5
 1e03834:    b1 60             	r1 = b[r0 + 11] (u)			  ## pmu_analog.c:911:5
 1e03836:    21 fd f0 19       	r1 = r1 & 240			  ## pmu_analog.c:911:5
 1e0383a:    01 fd 09 19       	r1 = r1 | 9			  ## pmu_analog.c:911:5
 1e0383e:    b9 60             	b[r0 + 11] = r1			  ## pmu_analog.c:911:5
 1e03840:    41 60             	r1 = b[r0 + 4] (u)			  ## pmu_analog.c:914:5
 1e03842:    02 f9 2c 43       	r2 = b[r4 + 812] (u)			  ## pmu_analog.c:914:5
 1e03846:    21 fd c7 19       	r1 = r1 & 199			  ## pmu_analog.c:914:5
 1e0384a:    d2 c0             	r2 = r2 << 3			  ## pmu_analog.c:914:5
 1e0384c:    22 fd 38 29       	r2 = r2 & 56			  ## pmu_analog.c:914:5
 1e03850:    51 b4             	r1 |= r2			  ## pmu_analog.c:914:5
 1e03852:    49 60             	b[r0 + 4] = r1			  ## pmu_analog.c:914:5
 1e03854:    55 01             	{pc, r5, r4} = [sp++]			  ## pmu_analog.c:915:1


power_set_soft_poweroff:
 1e03856:    c0 ff 00 50 00 00 	r0 = 20480 <nvbss_begin : 5000 >			  ## power_hw.c:1381:0
 1e0385c:    01 f9 37 00       	r1 = b[r0 + 55] (u)			  ## power_hw.c:1385:30
 1e03860:    c4 ff b1 0f 1a 00 	r4 = 1707953 <uECC_vli_cmp_unsafe+0x99FB5 : 1a0fb1 >			  ## power_hw.c:1385:30
 1e03866:    09 68             	b[r4 + 0] = r1			  ## power_hw.c:1385:20
 1e03868:    01 70             	r1 = 0			  ## power_hw.c:1386:18
 1e0386a:    19 68             	b[r4 + 1] = r1			  ## power_hw.c:1386:18
 1e0386c:    39 69             	b[r4 + 19] = r1			  ## power_hw.c:1388:18
 1e0386e:    00 f9 40 00       	r0 = b[r0 + 64] (u)			  ## power_hw.c:1390:17
 1e03872:    02 20             	if (r0 == 0) goto 4 <power_set_soft_poweroff+0x22 : 1e03878 >			  ## power_hw.c:1390:17
 1e03874:    10 70             	r0 = 1			  ## power_hw.c:1391:22
 1e03876:    38 69             	b[r4 + 19] = r0			  ## power_hw.c:1391:22
 1e03878:    30 69             	r0 = b[r4 + 19] (u)			  ## power_hw.c:1394:9
 1e0387a:    02 30             	if (r0 != 0) goto 4 <power_set_soft_poweroff+0x2A : 1e03880 >			  ## power_hw.c:1394:9
 1e0387c:    10 68             	r0 = b[r4 + 1] (u)			  ## power_hw.c:1394:25
 1e0387e:    02 20             	if (r0 == 0) goto 4 <power_set_soft_poweroff+0x2E : 1e03884 >			  ## power_hw.c:1394:25
 1e03880:    10 70             	r0 = 1			  ## power_hw.c:1395:22
 1e03882:    18 68             	b[r4 + 1] = r0			  ## power_hw.c:1395:22
 1e03884:    01 68             	r1 = b[r4 + 0] (u)			  ## power_hw.c:1398:36
 1e03886:    c0 ff a1 4e e1 01 	r0 = 31542945 <update_target_end+0x2019 : 1e14ea1 >			  ## power_hw.c:1398:5
 1e0388c:    80 f3 1d 5c       	call 47162 <printf : 1e0f0ca >			  ## power_hw.c:1398:5
 1e03890:    11 68             	r1 = b[r4 + 1] (u)			  ## power_hw.c:1399:34
 1e03892:    c0 ff b5 4e e1 01 	r0 = 31542965 <update_target_end+0x202D : 1e14eb5 >			  ## power_hw.c:1399:5
 1e03898:    80 f3 17 5c       	call 47150 <printf : 1e0f0ca >			  ## power_hw.c:1399:5
 1e0389c:    11 68             	r1 = b[r4 + 1] (u)			  ## power_hw.c:1400:34
 1e0389e:    c0 ff c7 4e e1 01 	r0 = 31542983 <update_target_end+0x203F : 1e14ec7 >			  ## power_hw.c:1400:5
 1e038a4:    80 f3 11 5c       	call 47138 <printf : 1e0f0ca >			  ## power_hw.c:1400:5
 1e038a8:    30 69             	r0 = b[r4 + 19] (u)			  ## power_hw.c:1402:9
 1e038aa:    03 30             	if (r0 != 0) goto 6 <power_set_soft_poweroff+0x5C : 1e038b2 >			  ## power_hw.c:1402:9
 1e038ac:    00 68             	r0 = b[r4 + 0] (u)			  ## power_hw.c:1407:9
 1e038ae:    90 f3 9e 02       	call 2098492 <power_set_soft_poweroff_legacy : 3dee >			  ## power_hw.c:1407:9
 1e038b2:    90 f3 7b 02       	call 2098422 <power_set_soft_poweroff_advance : 3dac >			  ## power_hw.c:1403:9


key_active_set:
 1e038b6:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## key_driver.c:251:0
 1e038bc:    31 72             	r1 = 35			  ## key_driver.c:254:19
 1e038be:    19 60             	b[r0 + 1] = r1			  ## key_driver.c:254:19
 1e038c0:    20 00             	rts			  ## key_driver.c:256:1


set_alarm_ctrl:
 1e038c2:    77 01             	[--sp] = {rets, r7-r4}			  ## rtc.c:296:0
 1e038c4:    d0 70             	r0 = 13			  ## rtc.c:297:17
 1e038c6:    00 60             	r0 = b[r0 + 0] (u)			  ## rtc.c:297:17
 1e038c8:    40 e0 2b 10       	if (r0 != 4) goto 86 <set_alarm_ctrl+0x60 : 1e03922 >			  ## rtc.c:297:9
 1e038cc:    98 f3 66 1a       	call 3159244 <local_irq_disable : 106d9c >			  ## rtc.c:298:9
 1e038d0:    50 70             	r0 = 5			  ## rtc.c:298:9
 1e038d2:    c6 ff b3 0f 1a 00 	r6 = 1707955 <uECC_vli_cmp_unsafe+0x99FB7 : 1a0fb3 >			  ## rtc.c:298:9
 1e038d8:    08 6c             	b[r6 + 0] = r0			  ## rtc.c:298:9
 1e038da:    00 71             	r0 = 16			  ## rtc.c:298:9
 1e038dc:    64 fc 40 10       	r4 = r6 + 4160			  ## rtc.c:298:9
 1e038e0:    78 68             	b[r4 + 7] = r0			  ## rtc.c:298:9
 1e038e2:    45 fc 7c ef       	r5 = r4 + -4228			  ## rtc.c:298:9
 1e038e6:    08 00             	csync			  ## rtc.c:298:9
 1e038e8:    10 68             	r0 = b[r4 + 1] (u)			  ## rtc.c:298:9
 1e038ea:    04 f3 fc 0f       	if ((r0 & 16) == 0) goto -8 <set_alarm_ctrl+0x24 : 1e038e6 >			  ## rtc.c:298:9
 1e038ee:    00 6a             	r0 = b[r5 + 0] (u)			  ## rtc.c:298:9
 1e038f0:    50 e0 f9 1f       	if (r0 != 5) goto -14 <set_alarm_ctrl+0x24 : 1e038e6 >			  ## rtc.c:298:9
 1e038f4:    07 71             	r7 = 16			  ## rtc.c:298:9
 1e038f6:    0f 68             	b[r4 + 0] = r7			  ## rtc.c:298:9
 1e038f8:    98 f3 4e 1a       	call 3159196 <local_irq_enable : 106d98 >			  ## rtc.c:298:9
 1e038fc:    00 70             	r0 = 0			  ## rtc.c:299:26
 1e038fe:    d8 6c             	b[r6 + 13] = r0			  ## rtc.c:299:26
 1e03900:    98 f3 4c 1a       	call 3159192 <local_irq_disable : 106d9c >			  ## rtc.c:300:9
 1e03904:    40 70             	r0 = 4			  ## rtc.c:300:9
 1e03906:    08 6c             	b[r6 + 0] = r0			  ## rtc.c:300:9
 1e03908:    7f 68             	b[r4 + 7] = r7			  ## rtc.c:300:9
 1e0390a:    08 00             	csync			  ## rtc.c:300:9
 1e0390c:    10 68             	r0 = b[r4 + 1] (u)			  ## rtc.c:300:9
 1e0390e:    04 f3 fc 0f       	if ((r0 & 16) == 0) goto -8 <set_alarm_ctrl+0x48 : 1e0390a >			  ## rtc.c:300:9
 1e03912:    00 6a             	r0 = b[r5 + 0] (u)			  ## rtc.c:300:9
 1e03914:    40 e0 f9 1f       	if (r0 != 4) goto -14 <set_alarm_ctrl+0x48 : 1e0390a >			  ## rtc.c:300:9
 1e03918:    00 71             	r0 = 16			  ## rtc.c:300:9
 1e0391a:    08 68             	b[r4 + 0] = r0			  ## rtc.c:300:9
 1e0391c:    17 01             	{rets, r7-r4} = [sp++]			  ## rtc.c:300:9
 1e0391e:    d8 f3 3b 1a       	goto 3159158 <local_irq_enable : 106d98 >			  ## rtc.c:300:9
 1e03922:    c0 ff 80 14 1a 00 	r0 = 1709184 <uECC_vli_cmp_unsafe+0x9A484 : 1a1480 >
 1e03928:    01 60             	r1 = b[r0 + 0] (u)
 1e0392a:    71 b0             	r1 &= 4294967294			  ## rtc.c:305:24
 1e0392c:    09 60             	b[r0 + 0] = r1			  ## rtc.c:305:24
 1e0392e:    57 01             	{pc, r7-r4} = [sp++]			  ## rtc.c:308:1


alm_wakeup_isr:
 1e03930:    34 00             	[--sp] = rets			  ## rtc.c:334:0
 1e03932:    80 70             	r0 = 8			  ## rtc.c:335:17
 1e03934:    01 40             	r1 = [r0 + 0]			  ## rtc.c:335:17
 1e03936:    02 22             	if (r1 == 0) goto 4 <alm_wakeup_isr+0xC : 1e0393c >			  ## rtc.c:335:17
 1e03938:    00 70             	r0 = 0			  ## rtc.c:336:9
 1e0393a:    81 00             	call r1			  ## rtc.c:336:9
 1e0393c:    30 00             	pc = [sp++]			  ## rtc.c:338:1


__hw_p2m_irq:
 1e0393e:    e9 01             	[--sp] = {psr, rets, reti}			  ## power_hw.c:1500:0
 1e03940:    78 f3 ff 03       	[--sp] = {r9-r0}			  ## power_hw.c:1500:0
 1e03944:    c9 ff f3 1f 1a 00 	r9 = 1712115 <uECC_vli_cmp_unsafe+0x9AFF7 : 1a1ff3 >			  ## power_hw.c:1500:0
 1e0394a:    08 f9 01 90       	r8 = b[r9 + 1] (u)			  ## power_hw.c:1501:14
 1e0394e:    00 f9 00 90       	r0 = b[r9 + 0] (u)			  ## power_hw.c:1506:21
 1e03952:    e0 fd 80 00       	r0 = r0 | r8			  ## power_hw.c:1506:21
 1e03956:    10 f9 00 90       	b[r9 + 0] = r0			  ## power_hw.c:1506:21
 1e0395a:    90 fc b5 f8       	r0 = r9 + -1867			  ## power_wakeup.c:691:16
 1e0395e:    04 60             	r4 = b[r0 + 0] (u)
 1e03960:    03 fc a1 ff       	r3 = r0 + -95
 1e03964:    00 f3 03 40       	if ((r4 & 1) == 0) goto 6 <__hw_p2m_irq+0x30 : 1e0396e >
 1e03968:    00 66             	r0 = b[r3 + 0] (u)			  ## power_wakeup.c:696:21
 1e0396a:    10 b3             	r0 |= 64			  ## power_wakeup.c:696:21
 1e0396c:    08 66             	b[r3 + 0] = r0			  ## power_wakeup.c:696:21
 1e0396e:    01 f3 18 40       	if ((r4 & 2) == 0) goto 48 <__hw_p2m_irq+0x64 : 1e039a2 >
 1e03972:    d0 66             	r0 = b[r3 + 13] (u)			  ## power_wakeup.c:700:21
 1e03974:    e1 66             	r1 = b[r3 + 14] (u)			  ## power_wakeup.c:701:21
 1e03976:    f8 66             	b[r3 + 15] = r0			  ## power_wakeup.c:702:23
 1e03978:    d8 fd 40 01       	r0 <= insert(r1, p:8, l:24)			  ## power_wakeup.c:704:45
 1e0397c:    26 04             	r6 = r0.l (u)			  ## power_wakeup.c:620:9
 1e0397e:    09 67             	b[r3 + 16] = r1			  ## power_wakeup.c:703:23
 1e03980:    10 2c             	if (r6 == 0) goto 32 <__hw_p2m_irq+0x64 : 1e039a2 >			  ## power_wakeup.c:703:23
 1e03982:    07 70             	r7 = 0
 1e03984:    12 70             	r2 = 1
 1e03986:    35 fc 77 00       	r5 = r3 + 119
 1e0398a:    f8 fd 70 02       	r0 = r2 << r7			  ## power_wakeup.c:622:23
 1e0398e:    60 f0 05 00       	if ((r0 & r6) == 0) goto 10 <__hw_p2m_irq+0x5E : 1e0399c >			  ## power_wakeup.c:622:23
 1e03992:    00 fa 00 75       	r0 = b[r7+r5] (u)			  ## power_wakeup.c:624:21
 1e03996:    e0 e1 01 80       	if (r0 > 30) goto 2 <__hw_p2m_irq+0x5E : 1e0399c >			  ## power_wakeup.c:624:21
 1e0399a:    8d 17             	call -230 <key_active_set : 1e038b6 >			  ## power_wakeup.c:625:21
 1e0399c:    17 80             	r7 += 1			  ## power_wakeup.c:621:47
 1e0399e:    c7 e0 f4 1f       	if (r7 != 12) goto -24 <__hw_p2m_irq+0x4C : 1e0398a >			  ## power_wakeup.c:621:47
 1e039a2:    02 f3 10 40       	if ((r4 & 4) == 0) goto 32 <__hw_p2m_irq+0x88 : 1e039c6 >
 1e039a6:    c0 67             	r0 = b[r3 + 28] (u)			  ## power_wakeup.c:708:23
 1e039a8:    d1 67             	r1 = b[r3 + 29] (u)			  ## power_wakeup.c:709:23
 1e039aa:    e8 67             	b[r3 + 30] = r0			  ## power_wakeup.c:710:25
 1e039ac:    f0 97             	r0 = r3 + 31			  ## power_wakeup.c:711:25
 1e039ae:    09 60             	b[r0 + 0] = r1			  ## power_wakeup.c:711:25
 1e039b0:    00 70             	r0 = 0
 1e039b2:    02 18             	goto 4 <__hw_p2m_irq+0x7A : 1e039b8 >
 1e039b4:    81 67             	r1 = b[r3 + 24] (u)			  ## power_wakeup.c:597:28
 1e039b6:    10 80             	r0 += 1			  ## power_wakeup.c:591:29
 1e039b8:    21 04             	r1 = r0.l (u)			  ## power_wakeup.c:592:13
 1e039ba:    fc 23             	if (r1 == 0) goto -8 <__hw_p2m_irq+0x76 : 1e039b4 >			  ## power_wakeup.c:592:13
 1e039bc:    91 67             	r1 = b[r3 + 25] (u)			  ## power_wakeup.c:594:28
 1e039be:    10 80             	r0 += 1			  ## power_wakeup.c:591:29
 1e039c0:    21 04             	r1 = r0.l (u)			  ## power_wakeup.c:591:29
 1e039c2:    21 e0 f9 1f       	if (r1 != 2) goto -14 <__hw_p2m_irq+0x7A : 1e039b8 >			  ## power_wakeup.c:591:29
 1e039c6:    22 f3 16 80       	if ((r8 & 4) != 0) goto 44 <__hw_p2m_irq+0xB8 : 1e039f6 >
 1e039ca:    05 f3 79 80       	if ((r8 & 32) == 0) goto 242 <__hw_p2m_irq+0x182 : 1e03ac0 >
 1e039ce:    d0 70             	r0 = 13			  ## rtc.c:361:17
 1e039d0:    00 60             	r0 = b[r0 + 0] (u)			  ## rtc.c:361:17
 1e039d2:    40 e0 3b 10       	if (r0 != 4) goto 118 <__hw_p2m_irq+0x10E : 1e03a4c >			  ## rtc.c:361:9
 1e039d6:    36 fc 26 f7       	r6 = r3 + -2266
 1e039da:    14 6c             	r4 = b[r6 + 1] (u)			  ## rtc.c:362:18
 1e039dc:    c0 ff 41 53 e1 01 	r0 = 31544129 <update_target_end+0x24B9 : 1e15341 >			  ## rtc.c:363:9
 1e039e2:    41 08             	r1 = r4			  ## rtc.c:363:9
 1e039e4:    80 f3 71 5b       	call 46818 <printf : 1e0f0ca >			  ## rtc.c:363:9
 1e039e8:    14 e0 4d 00       	if (r4 == 1) goto 154 <__hw_p2m_irq+0x148 : 1e03a86 >			  ## rtc.c:364:13
 1e039ec:    24 e0 52 10       	if (r4 != 2) goto 164 <__hw_p2m_irq+0x156 : 1e03a94 >
 1e039f0:    68 17             	call -304 <set_alarm_ctrl : 1e038c2 >			  ## rtc.c:365:13
 1e039f2:    9e 17             	call -196 <alm_wakeup_isr : 1e03930 >			  ## rtc.c:366:13
 1e039f4:    4f 18             	goto 158 <__hw_p2m_irq+0x156 : 1e03a94 >			  ## rtc.c:366:13
 1e039f6:    28 fb 00 43       	r4 = rets			  ## wdt.c:60:5
 1e039fa:    28 fb 00 50       	r5 = reti			  ## wdt.c:61:5
 1e039fe:    c0 ff d0 64 e1 01 	r0 = 31548624 <gpio_regs+0x14 : 1e164d0 >			  ## wdt.c:63:5
 1e03a04:    80 f3 b7 5c       	call 47470 <puts : 1e0f376 >			  ## wdt.c:63:5
 1e03a08:    c0 ff 82 59 e1 01 	r0 = 31545730 <update_target_end+0x2AFA : 1e15982 >			  ## wdt.c:64:5
 1e03a0e:    41 08             	r1 = r4			  ## wdt.c:64:5
 1e03a10:    80 f3 5b 5b       	call 46774 <printf : 1e0f0ca >			  ## wdt.c:64:5
 1e03a14:    c0 ff 04 4e e1 01 	r0 = 31542788 <update_target_end+0x1F7C : 1e14e04 >			  ## wdt.c:65:5
 1e03a1a:    51 08             	r1 = r5			  ## wdt.c:65:5
 1e03a1c:    80 f3 55 5b       	call 46762 <printf : 1e0f0ca >			  ## wdt.c:65:5
 1e03a20:    28 fb 00 1e       	r1 = sp			  ## wdt.c:67:5
 1e03a24:    c0 ff 22 4e e1 01 	r0 = 31542818 <update_target_end+0x1F9A : 1e14e22 >			  ## wdt.c:68:5
 1e03a2a:    80 f3 4e 5b       	call 46748 <printf : 1e0f0ca >			  ## wdt.c:68:5
 1e03a2e:    28 fb 00 1c       	r1 = usp			  ## wdt.c:69:5
 1e03a32:    c0 ff 13 4e e1 01 	r0 = 31542803 <update_target_end+0x1F8B : 1e14e13 >			  ## wdt.c:70:5
 1e03a38:    80 f3 47 5b       	call 46734 <printf : 1e0f0ca >			  ## wdt.c:70:5
 1e03a3c:    28 fb 00 1d       	r1 = ssp			  ## wdt.c:71:5
 1e03a40:    c0 ff 21 4e e1 01 	r0 = 31542817 <update_target_end+0x1F99 : 1e14e21 >			  ## wdt.c:72:5
 1e03a46:    80 f3 40 5b       	call 46720 <printf : 1e0f0ca >			  ## wdt.c:72:5
 1e03a4a:    ff 1f             	goto -2 <__hw_p2m_irq+0x10C : 1e03a4a >			  ## wdt.c:73:5
 1e03a4c:    34 fc 58 fc       	r4 = r3 + -936
 1e03a50:    75 68             	r5 = b[r4 + 7] (u)			  ## rtc.c:374:18
 1e03a52:    00 f3 02 50       	if ((r5 & 1) == 0) goto 4 <__hw_p2m_irq+0x11C : 1e03a5a >			  ## rtc.c:374:18
 1e03a56:    35 17             	call -406 <set_alarm_ctrl : 1e038c2 >			  ## rtc.c:378:13
 1e03a58:    6b 17             	call -298 <alm_wakeup_isr : 1e03930 >			  ## rtc.c:379:13
 1e03a5a:    04 f3 03 50       	if ((r5 & 16) == 0) goto 6 <__hw_p2m_irq+0x126 : 1e03a64 >
 1e03a5e:    00 68             	r0 = b[r4 + 0] (u)			  ## rtc.c:383:13
 1e03a60:    10 b0             	r0 |= 1			  ## rtc.c:383:13
 1e03a62:    08 68             	b[r4 + 0] = r0			  ## rtc.c:383:13
 1e03a64:    05 f3 03 50       	if ((r5 & 32) == 0) goto 6 <__hw_p2m_irq+0x130 : 1e03a6e >
 1e03a68:    00 68             	r0 = b[r4 + 0] (u)			  ## rtc.c:387:13
 1e03a6a:    90 b0             	r0 |= 2			  ## rtc.c:387:13
 1e03a6c:    08 68             	b[r4 + 0] = r0			  ## rtc.c:387:13
 1e03a6e:    50 05             	r0 = r5.b0 (s)			  ## rtc.c:374:18
 1e03a70:    06 f3 03 50       	if ((r5 & 64) == 0) goto 6 <__hw_p2m_irq+0x13C : 1e03a7a >			  ## rtc.c:374:18
 1e03a74:    01 68             	r1 = b[r4 + 0] (u)			  ## rtc.c:391:13
 1e03a76:    11 b1             	r1 |= 4			  ## rtc.c:391:13
 1e03a78:    09 68             	b[r4 + 0] = r1			  ## rtc.c:391:13
 1e03a7a:    f0 ef 21 c0       	ifs (r0 > -1) goto 66 <__hw_p2m_irq+0x182 : 1e03ac0 >
 1e03a7e:    00 68             	r0 = b[r4 + 0] (u)			  ## rtc.c:395:13
 1e03a80:    90 b1             	r0 |= 8			  ## rtc.c:395:13
 1e03a82:    08 68             	b[r4 + 0] = r0			  ## rtc.c:395:13
 1e03a84:    1d 18             	goto 58 <__hw_p2m_irq+0x182 : 1e03ac0 >			  ## rtc.c:395:13
 1e03a86:    c1 ff cc 3a e0 01 	r1 = 31472332 <p2m_rtc_cmd_trim : 1e03acc >			  ## rtc.c:368:13
 1e03a8c:    00 70             	r0 = 0			  ## rtc.c:368:13
 1e03a8e:    a2 70             	r2 = 10			  ## rtc.c:368:13
 1e03a90:    80 f3 4a 6b       	call 54932 <sys_timeout_add : 1e11128 >			  ## rtc.c:368:13
 1e03a94:    98 f3 82 19       	call 3158788 <local_irq_disable : 106d9c >			  ## rtc.c:371:9
 1e03a98:    60 fc 44 00       	r0 = r6 + 68			  ## rtc.c:371:9
 1e03a9c:    41 70             	r1 = 4			  ## rtc.c:371:9
 1e03a9e:    09 60             	b[r0 + 0] = r1			  ## rtc.c:371:9
 1e03aa0:    00 71             	r0 = 16			  ## rtc.c:371:9
 1e03aa2:    10 f9 07 90       	b[r9 + 7] = r0			  ## rtc.c:371:9
 1e03aa6:    08 00             	csync			  ## rtc.c:371:9
 1e03aa8:    00 f9 01 90       	r0 = b[r9 + 1] (u)			  ## rtc.c:371:9
 1e03aac:    04 f3 fb 0f       	if ((r0 & 16) == 0) goto -10 <__hw_p2m_irq+0x168 : 1e03aa6 >			  ## rtc.c:371:9
 1e03ab0:    00 6c             	r0 = b[r6 + 0] (u)			  ## rtc.c:371:9
 1e03ab2:    40 e0 f8 1f       	if (r0 != 4) goto -16 <__hw_p2m_irq+0x168 : 1e03aa6 >			  ## rtc.c:371:9
 1e03ab6:    00 71             	r0 = 16			  ## rtc.c:371:9
 1e03ab8:    10 f9 00 90       	b[r9 + 0] = r0			  ## rtc.c:371:9
 1e03abc:    98 f3 6c 19       	call 3158744 <local_irq_enable : 106d98 >			  ## rtc.c:371:9
 1e03ac0:    70 f3 ff 03       	{r9-r0} = [sp++]			  ## power_hw.c:1519:1
 1e03ac4:    a9 01             	{psr, rets, reti} = [sp++]			  ## power_hw.c:1519:1
 1e03ac6:    22 00             	rti			  ## power_hw.c:1519:1


__wakeup_is_idle:
 1e03ac8:    10 70             	r0 = 1			  ## power_wakeup.c:107:0
 1e03aca:    20 00             	rts			  ## power_wakeup.c:111:5


p2m_rtc_cmd_trim:
 1e03acc:    77 01             	[--sp] = {rets, r7-r4}			  ## rtc.c:346:0
 1e03ace:    c0 ff 4a 53 e1 01 	r0 = 31544138 <update_target_end+0x24C2 : 1e1534a >			  ## rtc.c:347:5
 1e03ad4:    80 f3 4f 5c       	call 47262 <puts : 1e0f376 >			  ## rtc.c:347:5
 1e03ad8:    98 f3 60 19       	call 3158720 <local_irq_disable : 106d9c >			  ## rtc.c:348:5
 1e03adc:    50 70             	r0 = 5			  ## rtc.c:348:5
 1e03ade:    c6 ff b3 0f 1a 00 	r6 = 1707955 <uECC_vli_cmp_unsafe+0x99FB7 : 1a0fb3 >			  ## rtc.c:348:5
 1e03ae4:    08 6c             	b[r6 + 0] = r0			  ## rtc.c:348:5
 1e03ae6:    00 71             	r0 = 16			  ## rtc.c:348:5
 1e03ae8:    65 fc 40 10       	r5 = r6 + 4160			  ## rtc.c:348:5
 1e03aec:    78 6a             	b[r5 + 7] = r0			  ## rtc.c:348:5
 1e03aee:    54 fc 7c ef       	r4 = r5 + -4228			  ## rtc.c:348:5
 1e03af2:    08 00             	csync			  ## rtc.c:348:5
 1e03af4:    10 6a             	r0 = b[r5 + 1] (u)			  ## rtc.c:348:5
 1e03af6:    04 f3 fc 0f       	if ((r0 & 16) == 0) goto -8 <p2m_rtc_cmd_trim+0x26 : 1e03af2 >			  ## rtc.c:348:5
 1e03afa:    00 68             	r0 = b[r4 + 0] (u)			  ## rtc.c:348:5
 1e03afc:    50 e0 f9 1f       	if (r0 != 5) goto -14 <p2m_rtc_cmd_trim+0x26 : 1e03af2 >			  ## rtc.c:348:5
 1e03b00:    07 71             	r7 = 16			  ## rtc.c:348:5
 1e03b02:    0f 6a             	b[r5 + 0] = r7			  ## rtc.c:348:5
 1e03b04:    98 f3 48 19       	call 3158672 <local_irq_enable : 106d98 >			  ## rtc.c:348:5
 1e03b08:    90 f3 c3 01       	call 2098054 <__get_lrc_hz : 3e92 >			  ## rtc.c:349:18
 1e03b0c:    f8 6c             	b[r6 + 15] = r0			  ## rtc.c:350:18
 1e03b0e:    00 d2             	r0 = r0 >> 8			  ## rtc.c:351:38
 1e03b10:    08 6d             	b[r6 + 16] = r0			  ## rtc.c:351:18
 1e03b12:    98 f3 43 19       	call 3158662 <local_irq_disable : 106d9c >			  ## rtc.c:352:5
 1e03b16:    40 70             	r0 = 4			  ## rtc.c:352:5
 1e03b18:    08 6c             	b[r6 + 0] = r0			  ## rtc.c:352:5
 1e03b1a:    7f 6a             	b[r5 + 7] = r7			  ## rtc.c:352:5
 1e03b1c:    08 00             	csync			  ## rtc.c:352:5
 1e03b1e:    10 6a             	r0 = b[r5 + 1] (u)			  ## rtc.c:352:5
 1e03b20:    04 f3 fc 0f       	if ((r0 & 16) == 0) goto -8 <p2m_rtc_cmd_trim+0x50 : 1e03b1c >			  ## rtc.c:352:5
 1e03b24:    00 68             	r0 = b[r4 + 0] (u)			  ## rtc.c:352:5
 1e03b26:    40 e0 f9 1f       	if (r0 != 4) goto -14 <p2m_rtc_cmd_trim+0x50 : 1e03b1c >			  ## rtc.c:352:5
 1e03b2a:    00 71             	r0 = 16			  ## rtc.c:352:5
 1e03b2c:    08 6a             	b[r5 + 0] = r0			  ## rtc.c:352:5
 1e03b2e:    98 f3 33 19       	call 3158630 <local_irq_enable : 106d98 >			  ## rtc.c:352:5
 1e03b32:    20 68             	r0 = b[r4 + 2] (u)			  ## rtc.c:353:9
 1e03b34:    01 30             	if (r0 != 0) goto 2 <p2m_rtc_cmd_trim+0x6C : 1e03b38 >			  ## rtc.c:353:9
 1e03b36:    57 01             	{pc, r7-r4} = [sp++]			  ## rtc.c:356:1
 1e03b38:    8e 16             	call -740 <power_set_soft_poweroff : 1e03856 >			  ## rtc.c:354:9


usb_dev_idle_query:
 1e03b3a:    10 70             	r0 = 1			  ## otg.c:593:0
 1e03b3c:    20 00             	rts			  ## otg.c:602:1


_vm_area_erase:
 1e03b3e:    78 01             	[--sp] = {rets, r8-r4}			  ## vm.c:268:0
 1e03b40:    08 08             	r8 = r0			  ## vm.c:268:0
 1e03b42:    10 40             	r0 = [r0 + 4]			  ## vm.c:268:0
 1e03b44:    c1 ff 50 27 00 00 	r1 = 10064 <vm_obj : 2750 >			  ## vm.c:273:9
 1e03b4a:    01 f9 6d 11       	r1 = b[r1 + 365] (u)			  ## vm.c:273:9
 1e03b4e:    05 f6 00 80       	r5 = [r8 + 0]			  ## vm.c:269:33
 1e03b52:    22 f3 12 10       	if ((r1 & 4) != 0) goto 36 <_vm_area_erase+0x3C : 1e03b7a >
 1e03b56:    00 d3             	r0 = r0 >> 12			  ## vm.c:284:30
 1e03b58:    26 04             	r6 = r0.l (u)			  ## vm.c:285:29
 1e03b5a:    1e 2c             	if (r6 == 0) goto 60 <_vm_area_erase+0x5A : 1e03b98 >			  ## vm.c:285:29
 1e03b5c:    17 70             	r7 = 1
 1e03b5e:    04 fb 00 f0       	r4 = -4096 <bank_code_load_addr+0x1DBA08 : 1fff000 >
 1e03b62:    e2 fd 40 15       	r1 = r5 & r4
 1e03b66:    80 7c             	r0 = 200			  ## vm.c:1458:5
 1e03b68:    bf f3 75 ec       	call -10006 <norflash_ioctl : 1e01456 >			  ## vm.c:1458:5
 1e03b6c:    e0 05             	r0 = r7.l (u)			  ## vm.c:285:23
 1e03b6e:    17 80             	r7 += 1			  ## vm.c:285:9
 1e03b70:    55 fc 00 10       	r5 = r5 + 4096			  ## vm.c:291:24
 1e03b74:    60 f2 f5 3f       	if (r0 < r6) goto -22 <_vm_area_erase+0x24 : 1e03b62 >
 1e03b78:    0f 18             	goto 30 <_vm_area_erase+0x5A : 1e03b98 >
 1e03b7a:    00 d2             	r0 = r0 >> 8			  ## vm.c:274:30
 1e03b7c:    26 04             	r6 = r0.l (u)			  ## vm.c:275:29
 1e03b7e:    0c 2c             	if (r6 == 0) goto 24 <_vm_area_erase+0x5A : 1e03b98 >			  ## vm.c:275:29
 1e03b80:    14 70             	r4 = 1
 1e03b82:    31 fd ff 59       	r1 = r5 & 4294967040
 1e03b86:    c0 7c             	r0 = 204			  ## vm.c:1458:5
 1e03b88:    bf f3 65 ec       	call -10038 <norflash_ioctl : 1e01456 >			  ## vm.c:1458:5
 1e03b8c:    20 05             	r0 = r4.l (u)			  ## vm.c:275:23
 1e03b8e:    14 80             	r4 += 1			  ## vm.c:275:9
 1e03b90:    55 fc 00 01       	r5 = r5 + 256			  ## vm.c:281:24
 1e03b94:    60 f2 f5 3f       	if (r0 < r6) goto -22 <_vm_area_erase+0x44 : 1e03b82 >
 1e03b98:    00 70             	r0 = 0			  ## vm.c:295:30
 1e03b9a:    10 f7 08 80       	h[r8 + 8] = r0			  ## vm.c:295:30
 1e03b9e:    58 01             	{pc, r8-r4} = [sp++]			  ## vm.c:295:30


vm_reset:
 1e03ba0:    75 01             	[--sp] = {rets, r5, r4}			  ## vm.c:596:0
 1e03ba2:    fe 0b             	sp += -4			  ## vm.c:596:0
 1e03ba4:    c0 ff 55 aa aa 55 	r0 = 1437248085 <uECC_vli_cmp_unsafe+0x19A3A59 : 1aaaa55 >			  ## vm.c:599:9
 1e03baa:    08 02             	[sp] = r0			  ## vm.c:599:9
 1e03bac:    c4 ff 50 27 00 00 	r4 = 10064 <vm_obj : 2750 >			  ## vm.c:609:5
 1e03bb2:    40 08             	r0 = r4			  ## vm.c:601:5
 1e03bb4:    c4 17             	call -120 <_vm_area_erase : 1e03b3e >			  ## vm.c:601:5
 1e03bb6:    c0 98             	r0 = r4 + 12			  ## vm.c:602:5
 1e03bb8:    c2 17             	call -124 <_vm_area_erase : 1e03b3e >			  ## vm.c:602:5
 1e03bba:    45 fc 68 01       	r5 = r4 + 360			  ## vm.c:602:5
 1e03bbe:    50 6a             	r0 = b[r5 + 5] (u)			  ## vm.c:604:19
 1e03bc0:    f0 b0             	r0 &= 4294967293			  ## vm.c:604:19
 1e03bc2:    58 6a             	b[r5 + 5] = r0			  ## vm.c:604:19
 1e03bc4:    02 48             	r2 = [r4 + 0]			  ## vm.c:606:38
 1e03bc6:    00 a0             	r0 = sp + 0
 1e03bc8:    41 70             	r1 = 4			  ## vm.c:1504:5
 1e03bca:    bf f3 ac ed       	call -9384 <norflash_write : 1e01726 >			  ## vm.c:1504:5
 1e03bce:    50 6a             	r0 = b[r5 + 5] (u)			  ## vm.c:607:19
 1e03bd0:    81 fd 08 00       	r0 = uextra(r0, p:1, l:1)			  ## vm.c:607:19
 1e03bd4:    00 fe 0c 09       	r0 = r0 * 12			  ## vm.c:607:19
 1e03bd8:    80 f6 00 04       	r0 = [r0+r4]			  ## vm.c:607:19
 1e03bdc:    40 80             	r0 += 4			  ## vm.c:607:46
 1e03bde:    08 4a             	[r5 + 0] = r0			  ## vm.c:607:17
 1e03be0:    80 99             	r0 = r4 + 24			  ## vm.c:609:5
 1e03be2:    01 70             	r1 = 0			  ## vm.c:609:5
 1e03be4:    02 fb 00 01       	r2 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## vm.c:609:5
 1e03be8:    98 f3 82 19       	call 3158788 <memset : 106ef0 >			  ## vm.c:609:5
 1e03bec:    02 0a             	sp += 4			  ## vm.c:609:5
 1e03bee:    55 01             	{pc, r5, r4} = [sp++]			  ## vm.c:609:5


vm_area_check:
 1e03bf0:    34 00             	[--sp] = rets			  ## vm.c:549:0
 1e03bf2:    13 08             	r3 = r1			  ## vm.c:549:0
 1e03bf4:    8f f3 26 fe       	call 2096204 <flash_addr2cpu_addr : 3844 >			  ## vm.c:550:20
 1e03bf8:    08 26             	if (r3 == 0) goto 16 <vm_area_check+0x1A : 1e03c0a >
 1e03bfa:    01 60             	r1 = b[r0 + 0] (u)			  ## vm_commom.c:7:13
 1e03bfc:    10 80             	r0 += 1			  ## vm_commom.c:7:15
 1e03bfe:    f3 8f             	r3 += -1			  ## vm_commom.c:6:15
 1e03c00:    00 ff ff 10 f9 ff 	if (r1 == 255) goto -14 <vm_area_check+0x8 : 1e03bf8 >
 1e03c06:    00 70             	r0 = 0
 1e03c08:    30 00             	pc = [sp++]			  ## vm.c:557:1
 1e03c0a:    10 70             	r0 = 1
 1e03c0c:    30 00             	pc = [sp++]			  ## vm.c:557:1


_vm_defrag:
 1e03c0e:    7f 01             	[--sp] = {rets, r15-r4}			  ## vm.c:428:0
 1e03c10:    fc 0b             	sp += -8			  ## vm.c:428:0
 1e03c12:    c8 ff 50 27 00 00 	r8 = 10064 <vm_obj : 2750 >			  ## vm.c:428:0
 1e03c18:    00 f9 6d 81       	r0 = b[r8 + 365] (u)			  ## vm.c:437:9
 1e03c1c:    40 d0             	r0 = r0 >> 1			  ## vm.c:437:9
 1e03c1e:    19 70             	r9 = 1			  ## vm.c:437:9
 1e03c20:    e3 fd 00 09       	r0 = r9 & ~r0			  ## vm.c:437:9
 1e03c24:    ca 70             	r10 = 12			  ## vm.c:437:9
 1e03c26:    81 08             	r1 = r8			  ## vm.c:437:9
 1e03c28:    80 fe a0 10       	r1 += r0 * r10			  ## vm.c:437:9
 1e03c2c:    41 52             	r1 = h[r1 + 8] (u)			  ## vm.c:437:9
 1e03c2e:    b2 32             	if (r1 != 0) goto 356 <_vm_defrag+0x186 : 1e03d94 >			  ## vm.c:437:9
 1e03c30:    00 fe 0c 09       	r0 = r0 * 12			  ## vm.c:446:19
 1e03c34:    81 f6 00 08       	r1 = [r0+r8]			  ## vm.c:446:19
 1e03c38:    41 80             	r1 += 4			  ## vm.c:446:47
 1e03c3a:    11 f6 68 81       	[r8 + 360] = r1			  ## vm.c:446:17
 1e03c3e:    82 f6 00 08       	r2 = [r0+r8]			  ## vm.c:449:38
 1e03c42:    c0 ff 77 bb ee dd 	r0 = 3723410295 <bank_code_load_addr+0xC857F : 1eebb77 >			  ## vm.c:448:14
 1e03c48:    08 02             	[sp] = r0			  ## vm.c:448:14
 1e03c4a:    00 a0             	r0 = sp + 0			  ## vm.c:448:14
 1e03c4c:    41 70             	r1 = 4			  ## vm.c:1504:5
 1e03c4e:    bf f3 6a ed       	call -9516 <norflash_write : 1e01726 >			  ## vm.c:1504:5
 1e03c52:    0b 70             	r11 = 0
 1e03c54:    f0 fd 08 0b       	r0 = r11 << 1			  ## vm.c:481:17
 1e03c58:    80 fb 80 c0       	r12 = r0 + r8			  ## vm.c:481:17
 1e03c5c:    00 f7 18 c0       	r0 = h[r12 + 24] (u)			  ## vm.c:481:17
 1e03c60:    67 20             	if (r0 == 0) goto 206 <_vm_defrag+0x122 : 1e03d30 >			  ## vm.c:481:17
 1e03c62:    8d fc 68 01       	r13 = r8 + 360
 1e03c66:    01 f9 05 d0       	r1 = b[r13 + 5] (u)			  ## vm.c:483:54
 1e03c6a:    81 fd 08 11       	r1 = uextra(r1, p:1, l:1)			  ## vm.c:483:54
 1e03c6e:    01 fe 0c 19       	r1 = r1 * 12			  ## vm.c:483:54
 1e03c72:    81 f6 00 18       	r1 = [r1+r8]			  ## vm.c:483:54
 1e03c76:    02 b2             	r2 = r1 + r0			  ## vm.c:483:52
 1e03c78:    40 a0             	r0 = sp + 4
 1e03c7a:    41 70             	r1 = 4			  ## vm.c:1522:5
 1e03c7c:    bf f3 b1 eb       	call -10398 <norflash_read : 1e013e2 >			  ## vm.c:1522:5
 1e03c80:    00 f9 05 d0       	r0 = b[r13 + 5] (u)			  ## vm.c:486:68
 1e03c84:    81 fd 08 00       	r0 = uextra(r0, p:1, l:1)			  ## vm.c:486:68
 1e03c88:    11 fd 01 09       	r1 = r0 ^ 1			  ## vm.c:486:68
 1e03c8c:    82 08             	r2 = r8			  ## vm.c:486:68
 1e03c8e:    80 fe a0 21       	r2 += r1 * r10			  ## vm.c:486:68
 1e03c92:    01 44             	r1 = [r2 + 0]			  ## vm.c:486:68
 1e03c94:    12 44             	r2 = [r2 + 4]			  ## vm.c:486:98
 1e03c96:    c3 f5 07 00       	r3 = b[sp+7] (u)			  ## vm.c:484:23
 1e03c9a:    c5 f5 06 00       	r5 = b[sp+6] (u)			  ## vm.c:484:23
 1e03c9e:    04 f6 00 d0       	r4 = [r13 + 0]			  ## vm.c:486:21
 1e03ca2:    12 09             	r2 += r1			  ## vm.c:486:96
 1e03ca4:    c8 fd 40 53       	r5 <= insert(r3, p:8, l:8)			  ## vm.c:484:23
 1e03ca8:    29 d1             	r1 = r5 >> 4			  ## vm.c:484:23
 1e03caa:    43 b8             	r3 = r4 + r1			  ## vm.c:486:33
 1e03cac:    43 80             	r3 += 4			  ## vm.c:486:60
 1e03cae:    23 f2 70 80       	if (r3 > r2) goto 224 <_vm_defrag+0x184 : 1e03d92 >			  ## vm.c:486:60
 1e03cb2:    00 fe 0c 09       	r0 = r0 * 12			  ## vm.c:499:43
 1e03cb6:    85 f6 00 08       	r5 = [r0+r8]			  ## vm.c:499:43
 1e03cba:    07 f7 18 c0       	r7 = h[r12 + 24] (u)			  ## vm.c:499:72
 1e03cbe:    00 fb 00 01       	r0 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## vm.c:344:15
 1e03cc2:    4e 92             	r14 = r1 + 4			  ## vm.c:499:114
 1e03cc4:    80 f3 77 5e       	call 48366 <malloc : 1e0f9b6 >			  ## vm.c:344:15
 1e03cc8:    0f 08             	r15 = r0			  ## vm.c:344:15
 1e03cca:    1f 20             	if (r0 == 0) goto 62 <_vm_defrag+0xFC : 1e03d0a >
 1e03ccc:    e6 08             	r6 = r14			  ## vm.c:348:21
 1e03cce:    03 ff 00 61 02 00 	if (r6 < 256) goto 4 <_vm_defrag+0xCA : 1e03cd8 >			  ## vm.c:348:21
 1e03cd4:    06 fb 00 01       	r6 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## vm.c:348:21
 1e03cd8:    57 09             	r7 += r5			  ## vm.c:499:70
 1e03cda:    e5 08             	r5 = r14
 1e03cdc:    f0 08             	r0 = r15			  ## vm.c:1522:5
 1e03cde:    61 08             	r1 = r6			  ## vm.c:1522:5
 1e03ce0:    72 08             	r2 = r7			  ## vm.c:1522:5
 1e03ce2:    bf f3 7e eb       	call -10500 <norflash_read : 1e013e2 >			  ## vm.c:1522:5
 1e03ce6:    f0 08             	r0 = r15			  ## vm.c:1504:5
 1e03ce8:    61 08             	r1 = r6			  ## vm.c:1504:5
 1e03cea:    42 08             	r2 = r4			  ## vm.c:1504:5
 1e03cec:    bf f3 1b ed       	call -9674 <norflash_write : 1e01726 >			  ## vm.c:1504:5
 1e03cf0:    67 09             	r7 += r6			  ## vm.c:357:22
 1e03cf2:    64 09             	r4 += r6			  ## vm.c:356:22
 1e03cf4:    a5 bb             	r5 = r5 - r6			  ## vm.c:355:17
 1e03cf6:    56 08             	r6 = r5			  ## vm.c:348:21
 1e03cf8:    03 ff 00 51 02 00 	if (r5 < 256) goto 4 <_vm_defrag+0xF4 : 1e03d02 >
 1e03cfe:    06 fb 00 01       	r6 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## vm.c:348:21
 1e03d02:    ec 3d             	if (r6 != 0) goto -40 <_vm_defrag+0xCE : 1e03cdc >
 1e03d04:    f0 08             	r0 = r15			  ## vm.c:359:9
 1e03d06:    80 f3 81 5e       	call 48386 <free : 1e0fa0c >			  ## vm.c:359:9
 1e03d0a:    00 f9 05 d0       	r0 = b[r13 + 5] (u)			  ## vm.c:500:49
 1e03d0e:    40 d0             	r0 = r0 >> 1			  ## vm.c:500:49
 1e03d10:    e3 fd 00 09       	r0 = r9 & ~r0			  ## vm.c:500:49
 1e03d14:    00 fe 0c 09       	r0 = r0 * 12			  ## vm.c:500:49
 1e03d18:    80 f6 00 08       	r0 = [r0+r8]			  ## vm.c:500:49
 1e03d1c:    01 f6 00 d0       	r1 = [r13 + 0]			  ## vm.c:500:35
 1e03d20:    20 b2             	r0 = r1 - r0			  ## vm.c:500:47
 1e03d22:    10 f7 18 c0       	h[r12 + 24] = r0			  ## vm.c:500:33
 1e03d26:    00 f6 00 d0       	r0 = [r13 + 0]			  ## vm.c:501:29
 1e03d2a:    e0 09             	r0 += r14			  ## vm.c:501:29
 1e03d2c:    10 f6 00 d0       	[r13 + 0] = r0			  ## vm.c:501:29
 1e03d30:    1b 80             	r11 += 1			  ## vm.c:451:46
 1e03d32:    0b e8 8f 3f       	if (r11 < 128) goto -226 <_vm_defrag+0x46 : 1e03c54 >			  ## vm.c:451:46
 1e03d36:    85 fc 6d 01       	r5 = r8 + 365
 1e03d3a:    00 6a             	r0 = b[r5 + 0] (u)			  ## vm.c:514:38
 1e03d3c:    40 d0             	r0 = r0 >> 1			  ## vm.c:514:38
 1e03d3e:    11 70             	r1 = 1			  ## vm.c:514:38
 1e03d40:    e3 fd 00 01       	r0 = r1 & ~r0			  ## vm.c:514:38
 1e03d44:    00 fe 0c 09       	r0 = r0 * 12			  ## vm.c:514:38
 1e03d48:    82 f6 00 08       	r2 = [r0+r8]			  ## vm.c:514:38
 1e03d4c:    c0 ff 55 aa ee dd 	r0 = 3723405909 <bank_code_load_addr+0xC745D : 1eeaa55 >			  ## vm.c:513:14
 1e03d52:    08 02             	[sp] = r0			  ## vm.c:513:14
 1e03d54:    04 a0             	r4 = sp + 0			  ## vm.c:513:14
 1e03d56:    41 70             	r1 = 4			  ## vm.c:1504:5
 1e03d58:    40 08             	r0 = r4			  ## vm.c:1504:5
 1e03d5a:    bf f3 e4 ec       	call -9784 <norflash_write : 1e01726 >			  ## vm.c:1504:5
 1e03d5e:    00 6a             	r0 = b[r5 + 0] (u)			  ## vm.c:517:37
 1e03d60:    81 fd 08 10       	r1 = uextra(r0, p:1, l:1)			  ## vm.c:517:37
 1e03d64:    c2 70             	r2 = 12			  ## vm.c:517:37
 1e03d66:    80 08             	r0 = r8			  ## vm.c:517:25
 1e03d68:    80 fe 20 01       	r0 += r1 * r2			  ## vm.c:517:25
 1e03d6c:    e8 16             	call -560 <_vm_area_erase : 1e03b3e >			  ## vm.c:517:9
 1e03d6e:    00 6a             	r0 = b[r5 + 0] (u)			  ## vm.c:530:21
 1e03d70:    b0 b0             	r0 ^= 2			  ## vm.c:530:19
 1e03d72:    08 6a             	b[r5 + 0] = r0			  ## vm.c:530:19
 1e03d74:    81 fd 08 00       	r0 = uextra(r0, p:1, l:1)			  ## vm.c:533:38
 1e03d78:    00 fe 0c 09       	r0 = r0 * 12			  ## vm.c:533:38
 1e03d7c:    82 f6 00 08       	r2 = [r0+r8]			  ## vm.c:533:38
 1e03d80:    c0 ff 55 aa aa 55 	r0 = 1437248085 <uECC_vli_cmp_unsafe+0x19A3A59 : 1aaaa55 >			  ## vm.c:532:14
 1e03d86:    08 02             	[sp] = r0			  ## vm.c:532:14
 1e03d88:    41 70             	r1 = 4			  ## vm.c:1504:5
 1e03d8a:    40 08             	r0 = r4			  ## vm.c:1504:5
 1e03d8c:    bf f3 cb ec       	call -9834 <norflash_write : 1e01726 >			  ## vm.c:1504:5
 1e03d90:    01 18             	goto 2 <_vm_defrag+0x186 : 1e03d94 >
 1e03d92:    06 17             	call -500 <vm_reset : 1e03ba0 >			  ## vm.c:489:21
 1e03d94:    04 0a             	sp += 8
 1e03d96:    5f 01             	{pc, r15-r4} = [sp++]


vm_warning_line_check:
 1e03d98:    c0 ff 50 27 00 00 	r0 = 10064 <vm_obj : 2750 >			  ## vm.c:567:0
 1e03d9e:    01 fc 68 01       	r1 = r0 + 360			  ## vm.c:570:33
 1e03da2:    52 62             	r2 = b[r1 + 5] (u)			  ## vm.c:570:33
 1e03da4:    81 fd 08 22       	r2 = uextra(r2, p:1, l:1)			  ## vm.c:570:33
 1e03da8:    c3 70             	r3 = 12			  ## vm.c:570:33
 1e03daa:    80 fe 30 02       	r0 += r2 * r3			  ## vm.c:570:33
 1e03dae:    12 40             	r2 = [r0 + 4]			  ## vm.c:570:33
 1e03db0:    43 62             	r3 = b[r1 + 4] (u)			  ## vm.c:570:23
 1e03db2:    d2 0e             	r2 = r2 * r3			  ## vm.c:570:31
 1e03db4:    00 40             	r0 = [r0 + 0]			  ## vm.c:580:24
 1e03db6:    01 42             	r1 = [r1 + 0]			  ## vm.c:580:9
 1e03db8:    43 76             	r3 = 100			  ## vm.c:571:17
 1e03dba:    c0 fe 30 22       	r2 = r2 / r3 (u)			  ## vm.c:571:17
 1e03dbe:    02 09             	r2 += r0			  ## vm.c:580:51
 1e03dc0:    10 70             	r0 = 1			  ## vm.c:580:51
 1e03dc2:    21 f2 01 80       	if (r1 > r2) goto 2 <vm_warning_line_check+0x30 : 1e03dc8 >			  ## vm.c:580:51
 1e03dc6:    00 70             	r0 = 0			  ## vm.c:580:21
 1e03dc8:    20 00             	rts			  ## vm.c:585:1


syscfg_vm_init:
 1e03dca:    7c 01             	[--sp] = {rets, r12-r4}			  ## vm.c:1645:0
 1e03dcc:    f8 0b             	sp += -16			  ## vm.c:1645:0
 1e03dce:    c6 ff 90 23 00 00 	r6 = 9104 <flash_info+0x20 : 2390 >			  ## vm_sfc.c:1432:9
 1e03dd4:    84 9d             	r4 = r6 + 24			  ## vm_sfc.c:1385:5
 1e03dd6:    f1 07             	r1 = -1			  ## vm_sfc.c:1385:5
 1e03dd8:    40 08             	r0 = r4			  ## vm_sfc.c:1385:5
 1e03dda:    98 f3 23 18       	call 3158086 <os_mutex_pend : 106e24 >			  ## vm_sfc.c:1385:5
 1e03dde:    15 4c             	r5 = [r6 + 4]			  ## vm_sfc.c:1432:9
 1e03de0:    07 6c             	r7 = b[r6 + 0] (u)			  ## vm_sfc.c:1432:9
 1e03de2:    36 4c             	r6 = [r6 + 12]			  ## vm_sfc.c:1432:9
 1e03de4:    40 08             	r0 = r4			  ## vm_sfc.c:1440:5
 1e03de6:    98 f3 1f 18       	call 3158078 <os_mutex_post : 106e28 >			  ## vm_sfc.c:1440:5
 1e03dea:    23 ff 40 6a 02 00 	if (r6 < 16384) goto 4 <syscfg_vm_init+0x2A : 1e03df4 >			  ## vm_sfc.c:1440:5
 1e03df0:    06 fb 00 40       	r6 = 16384 <ze_entry_tm+0xAE : 4000 >
 1e03df4:    c8 ff 50 27 00 00 	r8 = 10064 <vm_obj : 2750 >
 1e03dfa:    00 f9 6d 81       	r0 = b[r8 + 365] (u)			  ## vm.c:234:9
 1e03dfe:    20 f3 24 00       	if ((r0 & 1) != 0) goto 72 <syscfg_vm_init+0x80 : 1e03e4a >			  ## vm.c:234:9
 1e03e02:    03 ff 00 62 21 00 	if (r6 < 512) goto 66 <syscfg_vm_init+0x80 : 1e03e4a >
 1e03e08:    01 70             	r1 = 0
 1e03e0a:    12 70             	r2 = 1
 1e03e0c:    17 e0 01 00       	if (r7 == 1) goto 2 <syscfg_vm_init+0x48 : 1e03e12 >
 1e03e10:    02 70             	r2 = 0			  ## vm.c:1657:18
 1e03e12:    92 c0             	r2 = r2 << 2			  ## vm.c:849:18
 1e03e14:    17 e0 01 00       	if (r7 == 1) goto 2 <syscfg_vm_init+0x50 : 1e03e1a >			  ## vm.c:849:18
 1e03e18:    21 08             	r1 = r2			  ## vm.c:856:29
 1e03e1a:    b3 d3             	r3 = r6 >> 14			  ## vm.c:856:40
 1e03e1c:    01 36             	if (r3 != 0) goto 2 <syscfg_vm_init+0x56 : 1e03e20 >			  ## vm.c:856:40
 1e03e1e:    21 08             	r1 = r2			  ## vm.c:856:29
 1e03e20:    70 b1             	r0 &= 4294967291			  ## vm.c:849:18
 1e03e22:    50 b2             	r0 |= r1			  ## vm.c:856:29
 1e03e24:    10 f9 6d 81       	b[r8 + 365] = r0			  ## vm.c:849:18
 1e03e28:    40 bd             	r0 = r6 + r5			  ## vm.c:873:30
 1e03e2a:    12 22             	if (r1 == 0) goto 36 <syscfg_vm_init+0x86 : 1e03e50 >			  ## vm.c:873:30
 1e03e2c:    51 fc ff 00       	r1 = r5 + 255			  ## vm.c:872:28
 1e03e30:    34 fd ff 19       	r4 = r1 & 4294967040			  ## vm.c:872:28
 1e03e34:    20 b1             	r0 = r0 - r4			  ## vm.c:873:30
 1e03e36:    01 fb 00 fe       	r1 = -512 <bank_code_load_addr+0x1DC808 : 1fffe00 >			  ## vm.c:874:55
 1e03e3a:    e2 fd 10 50       	r5 = r0 & r1			  ## vm.c:874:55
 1e03e3e:    23 ff 20 5a 16 00 	if (r5 < 8192) goto 44 <syscfg_vm_init+0xA6 : 1e03e70 >
 1e03e44:    05 fb 00 20       	r5 = 8192 <btif_cfg+0x4 : 2000 >			  ## vm.c:877:13
 1e03e48:    13 18             	goto 38 <syscfg_vm_init+0xA6 : 1e03e70 >
 1e03e4a:    8f f3 c9 fa       	call 2094482 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e03e4e:    db 18             	goto 438 <syscfg_vm_init+0x23C : 1e04006 >			  ## cpu.h:148:5
 1e03e50:    51 fc ff 0f       	r1 = r5 + 4095			  ## vm.c:862:28
 1e03e54:    02 fb 00 f0       	r2 = -4096 <bank_code_load_addr+0x1DBA08 : 1fff000 >			  ## vm.c:862:28
 1e03e58:    e2 fd 20 41       	r4 = r1 & r2			  ## vm.c:862:28
 1e03e5c:    20 b1             	r0 = r0 - r4			  ## vm.c:863:30
 1e03e5e:    01 fb 00 e0       	r1 = -8192 <bank_code_load_addr+0x1DAA08 : 1ffe000 >			  ## vm.c:864:57
 1e03e62:    e2 fd 10 50       	r5 = r0 & r1			  ## vm.c:864:57
 1e03e66:    23 ff 02 5b 02 00 	if (r5 < 131072) goto 4 <syscfg_vm_init+0xA6 : 1e03e70 >
 1e03e6c:    20 fb 02 5b       	r5 = 131072			  ## vm.c:867:13
 1e03e70:    80 fc 18 00       	r0 = r8 + 24			  ## vm.c:889:5
 1e03e74:    01 70             	r1 = 0			  ## vm.c:889:5
 1e03e76:    02 fb 00 01       	r2 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## vm.c:889:5
 1e03e7a:    98 f3 39 18       	call 3158130 <memset : 106ef0 >			  ## vm.c:889:5
 1e03e7e:    68 d0             	r0 = r5 >> 1			  ## vm.c:891:12
 1e03e80:    10 f6 04 80       	[r8 + 4] = r0			  ## vm.c:892:25
 1e03e84:    14 f6 00 80       	[r8 + 0] = r4			  ## vm.c:893:25
 1e03e88:    10 f6 10 80       	[r8 + 16] = r0			  ## vm.c:894:25
 1e03e8c:    40 09             	r0 += r4			  ## vm.c:895:35
 1e03e8e:    10 f6 0c 80       	[r8 + 12] = r0			  ## vm.c:895:25
 1e03e92:    00 75             	r0 = 80			  ## vm.c:896:13
 1e03e94:    10 f9 6c 81       	b[r8 + 364] = r0			  ## vm.c:896:13
 1e03e98:    40 a0             	r0 = sp + 4			  ## vm.c:896:13
 1e03e9a:    41 70             	r1 = 4			  ## vm.c:1522:5
 1e03e9c:    42 08             	r2 = r4			  ## vm.c:1522:5
 1e03e9e:    bf f3 a0 ea       	call -10944 <norflash_read : 1e013e2 >			  ## vm.c:1522:5
 1e03ea2:    02 f6 0c 80       	r2 = [r8 + 12]			  ## vm.c:915:33
 1e03ea6:    00 a0             	r0 = sp + 0
 1e03ea8:    41 70             	r1 = 4			  ## vm.c:1522:5
 1e03eaa:    bf f3 9a ea       	call -10956 <norflash_read : 1e013e2 >			  ## vm.c:1522:5
 1e03eae:    10 02             	r0 = [sp+4]			  ## vm.c:919:13
 1e03eb0:    e0 ef 1a d0       	ifs (r0 <= -2) goto 52 <syscfg_vm_init+0x11E : 1e03ee8 >
 1e03eb4:    11 90             	r1 = r0 + 1
 1e03eb6:    21 e0 20 30       	if (r1 < 2) goto 64 <syscfg_vm_init+0x130 : 1e03efa >
 1e03eba:    c1 ff 55 aa aa 55 	r1 = 1437248085 <uECC_vli_cmp_unsafe+0x19A3A59 : 1aaaa55 >
 1e03ec0:    10 f2 25 10       	if (r0 != r1) goto 74 <syscfg_vm_init+0x144 : 1e03f0e >
 1e03ec4:    01 02             	r1 = [sp]			  ## vm.c:921:13
 1e03ec6:    00 f9 6d 81       	r0 = b[r8 + 365] (u)
 1e03eca:    c2 ff 55 aa ee dd 	r2 = 3723405909 <bank_code_load_addr+0xC745D : 1eeaa55 >			  ## vm.c:921:24
 1e03ed0:    21 f2 2f 10       	if (r1 != r2) goto 94 <syscfg_vm_init+0x168 : 1e03f32 >			  ## vm.c:921:13
 1e03ed4:    02 f6 0c 80       	r2 = [r8 + 12]			  ## vm.c:923:46
 1e03ed8:    81 fd 08 00       	r0 = uextra(r0, p:1, l:1)			  ## vm.c:922:24
 1e03edc:    28 02             	[sp+8] = r0			  ## vm.c:922:22
 1e03ede:    80 a0             	r0 = sp + 8			  ## vm.c:922:22
 1e03ee0:    41 70             	r1 = 4			  ## vm.c:1504:5
 1e03ee2:    bf f3 20 ec       	call -10176 <norflash_write : 1e01726 >			  ## vm.c:1504:5
 1e03ee6:    0f 18             	goto 30 <syscfg_vm_init+0x13C : 1e03f06 >
 1e03ee8:    c1 ff 55 aa ee dd 	r1 = 3723405909 <bank_code_load_addr+0xC745D : 1eeaa55 >
 1e03eee:    10 f2 10 00       	if (r0 == r1) goto 32 <syscfg_vm_init+0x148 : 1e03f12 >
 1e03ef2:    11 fc 22 11       	r1 = r1 + 4386
 1e03ef6:    10 f2 0a 10       	if (r0 != r1) goto 20 <syscfg_vm_init+0x144 : 1e03f0e >
 1e03efa:    00 02             	r0 = [sp]			  ## vm.c:940:13
 1e03efc:    c1 ff 55 aa aa 55 	r1 = 1437248085 <uECC_vli_cmp_unsafe+0x19A3A59 : 1aaaa55 >			  ## vm.c:940:24
 1e03f02:    10 f2 04 10       	if (r0 != r1) goto 8 <syscfg_vm_init+0x144 : 1e03f0e >			  ## vm.c:940:24
 1e03f06:    00 f9 6d 81       	r0 = b[r8 + 365] (u)
 1e03f0a:    90 b0             	r0 |= 2
 1e03f0c:    13 18             	goto 38 <syscfg_vm_init+0x16A : 1e03f34 >
 1e03f0e:    48 16             	call -880 <vm_reset : 1e03ba0 >
 1e03f10:    13 18             	goto 38 <syscfg_vm_init+0x16E : 1e03f38 >
 1e03f12:    84 fc 6c 01       	r4 = r8 + 364
 1e03f16:    10 68             	r0 = b[r4 + 1] (u)			  ## vm.c:932:20
 1e03f18:    02 f6 00 80       	r2 = [r8 + 0]			  ## vm.c:933:42
 1e03f1c:    81 fd 08 00       	r0 = uextra(r0, p:1, l:1)			  ## vm.c:932:20
 1e03f20:    28 02             	[sp+8] = r0			  ## vm.c:932:18
 1e03f22:    80 a0             	r0 = sp + 8			  ## vm.c:932:18
 1e03f24:    41 70             	r1 = 4			  ## vm.c:1504:5
 1e03f26:    bf f3 fe eb       	call -10244 <norflash_write : 1e01726 >			  ## vm.c:1504:5
 1e03f2a:    10 68             	r0 = b[r4 + 1] (u)			  ## vm.c:934:23
 1e03f2c:    f0 b0             	r0 &= 4294967293			  ## vm.c:934:23
 1e03f2e:    18 68             	b[r4 + 1] = r0			  ## vm.c:934:23
 1e03f30:    03 18             	goto 6 <syscfg_vm_init+0x16E : 1e03f38 >
 1e03f32:    f0 b0             	r0 &= 4294967293			  ## vm.c:926:27
 1e03f34:    10 f9 6d 81       	b[r8 + 365] = r0
 1e03f38:    06 f9 6d 81       	r6 = b[r8 + 365] (u)			  ## vm.c:958:45
 1e03f3c:    70 d0             	r0 = r6 >> 1			  ## vm.c:958:45
 1e03f3e:    11 70             	r1 = 1			  ## vm.c:958:45
 1e03f40:    e3 fd 00 01       	r0 = r1 & ~r0			  ## vm.c:958:45
 1e03f44:    c5 70             	r5 = 12			  ## vm.c:958:45
 1e03f46:    84 08             	r4 = r8			  ## vm.c:958:62
 1e03f48:    80 fe 50 40       	r4 += r0 * r5			  ## vm.c:958:62
 1e03f4c:    11 48             	r1 = [r4 + 4]			  ## vm.c:958:91
 1e03f4e:    00 48             	r0 = [r4 + 0]			  ## vm.c:958:62
 1e03f50:    4f 16             	call -866 <vm_area_check : 1e03bf0 >			  ## vm.c:958:18
 1e03f52:    04 30             	if (r0 != 0) goto 8 <syscfg_vm_init+0x192 : 1e03f5c >			  ## vm.c:958:18
 1e03f54:    40 08             	r0 = r4			  ## vm.c:960:9
 1e03f56:    f3 15             	call -1050 <_vm_area_erase : 1e03b3e >			  ## vm.c:960:9
 1e03f58:    06 f9 6d 81       	r6 = b[r8 + 365] (u)			  ## vm.c:960:9
 1e03f5c:    81 fd 08 06       	r0 = uextra(r6, p:1, l:1)			  ## vm.c:964:69
 1e03f60:    81 08             	r1 = r8			  ## vm.c:376:33
 1e03f62:    80 fe 50 10       	r1 += r0 * r5			  ## vm.c:376:33
 1e03f66:    0a f6 00 10       	r10 = [r1 + 0]			  ## vm.c:376:33
 1e03f6a:    10 42             	r0 = [r1 + 4]			  ## vm.c:379:50
 1e03f6c:    ab fc 04 00       	r11 = r10 + 4			  ## vm.c:376:38
 1e03f70:    80 fb 00 9b       	r9 = r11 + r0			  ## vm.c:379:37
 1e03f74:    c0 a0             	r0 = sp + 12
 1e03f76:    41 70             	r1 = 4			  ## vm.c:1522:5
 1e03f78:    b2 08             	r2 = r11			  ## vm.c:1522:5
 1e03f7a:    bf f3 32 ea       	call -11164 <norflash_read : 1e013e2 >			  ## vm.c:1522:5
 1e03f7e:    c7 f5 0e 00       	r7 = b[sp+14] (u)			  ## vm.c:394:18
 1e03f82:    c0 f5 0f 00       	r0 = b[sp+15] (u)			  ## vm.c:394:18
 1e03f86:    cc f5 0c 00       	r12 = b[sp+12] (u)			  ## vm.c:400:13
 1e03f8a:    c4 f5 0d 00       	r4 = b[sp+13] (u)			  ## vm.c:395:18
 1e03f8e:    71 08             	r1 = r7			  ## vm.c:394:18
 1e03f90:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## vm.c:394:18
 1e03f94:    0d d1             	r5 = r1 >> 4			  ## vm.c:394:18
 1e03f96:    b6 fc 04 00       	r6 = r11 + 4			  ## vm.c:398:46
 1e03f9a:    60 08             	r0 = r6			  ## vm.c:398:46
 1e03f9c:    8f f3 52 fc       	call 2095268 <flash_addr2cpu_addr : 3844 >			  ## vm.c:398:46
 1e03fa0:    51 08             	r1 = r5			  ## vm.c:398:26
 1e03fa2:    bf f3 02 ea       	call -11260 <CRC16 : 1e013aa >			  ## vm.c:398:26
 1e03fa6:    00 04             	r0 = r0.b0 (u)			  ## vm.c:400:23
 1e03fa8:    0c f2 0e 10       	if (r12 != r0) goto 28 <syscfg_vm_init+0x1FE : 1e03fc8 >			  ## vm.c:400:23
 1e03fac:    90 fb a0 0b       	r0 = r11 - r10			  ## vm.c:401:45
 1e03fb0:    39 c2             	r1 = r7 << 8			  ## vm.c:395:18
 1e03fb2:    21 fd 0f 1a       	r1 = r1 & 3840			  ## vm.c:395:18
 1e03fb6:    51 b8             	r1 |= r4			  ## vm.c:395:18
 1e03fb8:    49 c0             	r1 = r1 << 1			  ## vm.c:401:13
 1e03fba:    81 09             	r1 += r8			  ## vm.c:401:13
 1e03fbc:    8b bb             	r11 = r5 + r6			  ## vm.c:403:24
 1e03fbe:    b2 fc 04 00       	r2 = r11 + 4			  ## vm.c:405:28
 1e03fc2:    c8 52             	h[r1 + 24] = r0			  ## vm.c:401:32
 1e03fc4:    92 f2 d6 3f       	if (r2 < r9) goto -84 <syscfg_vm_init+0x1AA : 1e03f74 >			  ## vm.c:401:32
 1e03fc8:    1b f6 68 81       	[r8 + 360] = r11			  ## vm.c:964:17
 1e03fcc:    00 f9 6d 81       	r0 = b[r8 + 365] (u)			  ## vm.c:966:45
 1e03fd0:    81 fd 08 00       	r0 = uextra(r0, p:1, l:1)			  ## vm.c:966:45
 1e03fd4:    c1 70             	r1 = 12			  ## vm.c:966:45
 1e03fd6:    82 08             	r2 = r8			  ## vm.c:966:74
 1e03fd8:    80 fe 10 20       	r2 += r0 * r1			  ## vm.c:966:74
 1e03fdc:    00 44             	r0 = [r2 + 0]			  ## vm.c:966:74
 1e03fde:    11 44             	r1 = [r2 + 4]			  ## vm.c:966:103
 1e03fe0:    90 fb b0 00       	r0 = r0 - r11			  ## vm.c:966:101
 1e03fe4:    01 09             	r1 += r0			  ## vm.c:966:130
 1e03fe6:    b0 08             	r0 = r11			  ## vm.c:966:18
 1e03fe8:    03 16             	call -1018 <vm_area_check : 1e03bf0 >			  ## vm.c:966:18
 1e03fea:    01 30             	if (r0 != 0) goto 2 <syscfg_vm_init+0x224 : 1e03fee >			  ## vm.c:966:18
 1e03fec:    10 16             	call -992 <_vm_defrag : 1e03c0e >			  ## vm.c:968:9
 1e03fee:    d4 16             	call -600 <vm_warning_line_check : 1e03d98 >			  ## vm.c:972:9
 1e03ff0:    01 20             	if (r0 == 0) goto 2 <syscfg_vm_init+0x22A : 1e03ff4 >			  ## vm.c:972:9
 1e03ff2:    0d 16             	call -998 <_vm_defrag : 1e03c0e >			  ## vm.c:974:9
 1e03ff4:    80 fc 18 01       	r0 = r8 + 280			  ## vm.c:977:5
 1e03ff8:    98 f3 10 17       	call 3157536 <os_mutex_create : 106e1c >			  ## vm.c:977:5
 1e03ffc:    00 f9 6d 81       	r0 = b[r8 + 365] (u)			  ## vm.c:979:18
 1e04000:    10 b0             	r0 |= 1			  ## vm.c:979:18
 1e04002:    10 f9 6d 81       	b[r8 + 365] = r0			  ## vm.c:979:18
 1e04006:    00 70             	r0 = 0			  ## vm.c:1682:5
 1e04008:    08 0a             	sp += 16			  ## vm.c:1682:5
 1e0400a:    5c 01             	{pc, r12-r4} = [sp++]			  ## vm.c:1682:5


vm_check_id:
 1e0400c:    f0 8f             	r0 += -1			  ## vm.c:1636:0
 1e0400e:    21 04             	r1 = r0.l (u)			  ## vm.c:1637:44
 1e04010:    10 70             	r0 = 1			  ## vm.c:1637:44
 1e04012:    f1 e7 01 30       	if (r1 < 127) goto 2 <vm_check_id+0xC : 1e04018 >			  ## vm.c:1637:44
 1e04016:    00 70             	r0 = 0			  ## vm.c:1637:44
 1e04018:    20 00             	rts			  ## vm.c:1642:1


vm_read:
 1e0401a:    7b 01             	[--sp] = {rets, r11-r4}			  ## vm.c:1173:0
 1e0401c:    fe 0b             	sp += -4			  ## vm.c:1173:0
 1e0401e:    c4 ff 50 27 00 00 	r4 = 10064 <vm_obj : 2750 >			  ## vm.c:1173:0
 1e04024:    03 f9 6d 41       	r3 = b[r4 + 365] (u)			  ## vm.c:234:9
 1e04028:    26 08             	r6 = r2			  ## vm.c:234:9
 1e0402a:    19 08             	r9 = r1
 1e0402c:    05 08             	r5 = r0
 1e0402e:    07 fb 06 ff       	r7 = -250 <bank_code_load_addr+0x1DC90E : 1ffff06 >
 1e04032:    00 f3 55 30       	if ((r3 & 1) == 0) goto 170 <vm_read+0xC6 : 1e040e0 >
 1e04036:    a7 8f             	r7 += -6
 1e04038:    f5 e7 52 80       	if (r5 > 127) goto 164 <vm_read+0xC6 : 1e040e0 >
 1e0403c:    50 2c             	if (r6 == 0) goto 160 <vm_read+0xC4 : 1e040de >
 1e0403e:    48 fc 18 01       	r8 = r4 + 280			  ## vm.c:1196:5
 1e04042:    f1 07             	r1 = -1			  ## vm.c:1196:5
 1e04044:    80 08             	r0 = r8			  ## vm.c:1196:5
 1e04046:    98 f3 ed 16       	call 3157466 <os_mutex_pend : 106e24 >			  ## vm.c:1196:5
 1e0404a:    68 c0             	r0 = r5 << 1			  ## vm.c:1224:13
 1e0404c:    0a b1             	r10 = r0 + r4			  ## vm.c:1224:13
 1e0404e:    00 f7 18 a0       	r0 = h[r10 + 24] (u)			  ## vm.c:1224:13
 1e04052:    47 80             	r7 += 4			  ## vm.c:1224:13
 1e04054:    40 20             	if (r0 == 0) goto 128 <vm_read+0xBC : 1e040d6 >			  ## vm.c:1224:13
 1e04056:    01 f9 6d 41       	r1 = b[r4 + 365] (u)			  ## vm.c:1227:32
 1e0405a:    81 fd 08 11       	r1 = uextra(r1, p:1, l:1)			  ## vm.c:1227:32
 1e0405e:    01 fe 0c 19       	r1 = r1 * 12			  ## vm.c:1227:32
 1e04062:    81 f6 00 14       	r1 = [r1+r4]			  ## vm.c:1227:32
 1e04066:    02 b2             	r2 = r1 + r0			  ## vm.c:1227:59
 1e04068:    00 a0             	r0 = sp + 0
 1e0406a:    41 70             	r1 = 4			  ## vm.c:1522:5
 1e0406c:    bf f3 b9 e9       	call -11406 <norflash_read : 1e013e2 >			  ## vm.c:1522:5
 1e04070:    00 f9 6d 41       	r0 = b[r4 + 365] (u)			  ## vm.c:1232:50
 1e04074:    c1 f5 03 00       	r1 = b[sp+3] (u)			  ## vm.c:1229:22
 1e04078:    c3 f5 02 00       	r3 = b[sp+2] (u)			  ## vm.c:1229:22
 1e0407c:    81 fd 08 00       	r0 = uextra(r0, p:1, l:1)			  ## vm.c:1232:50
 1e04080:    00 fe 0c 09       	r0 = r0 * 12			  ## vm.c:1232:50
 1e04084:    80 f6 00 04       	r0 = [r0+r4]			  ## vm.c:1232:50
 1e04088:    02 f7 18 a0       	r2 = h[r10 + 24] (u)			  ## vm.c:1232:50
 1e0408c:    cb f5 00 00       	r11 = b[sp] (u)			  ## vm.c:1234:17
 1e04090:    d8 fd 40 31       	r3 <= insert(r1, p:8, l:24)			  ## vm.c:1229:22
 1e04094:    20 09             	r0 += r2			  ## vm.c:1232:50
 1e04096:    40 80             	r0 += 4			  ## vm.c:1232:50
 1e04098:    8f f3 d4 fb       	call 2095016 <flash_addr2cpu_addr : 3844 >			  ## vm.c:1232:50
 1e0409c:    8c fd 20 53       	r5 = uextra(r3, p:4, l:12)			  ## vm.c:1229:22
 1e040a0:    51 08             	r1 = r5			  ## vm.c:1232:30
 1e040a2:    bf f3 82 e9       	call -11516 <CRC16 : 1e013aa >			  ## vm.c:1232:30
 1e040a6:    00 04             	r0 = r0.b0 (u)			  ## vm.c:1234:27
 1e040a8:    0b f2 15 10       	if (r11 != r0) goto 42 <vm_read+0xBC : 1e040d6 >			  ## vm.c:1234:27
 1e040ac:    60 05             	r0 = r5.l (u)			  ## vm.c:1235:28
 1e040ae:    60 f2 01 80       	if (r0 > r6) goto 2 <vm_read+0x9A : 1e040b4 >			  ## vm.c:1235:28
 1e040b2:    56 08             	r6 = r5			  ## vm.c:1235:21
 1e040b4:    00 f9 6d 41       	r0 = b[r4 + 365] (u)			  ## vm.c:1239:36
 1e040b8:    81 fd 08 00       	r0 = uextra(r0, p:1, l:1)			  ## vm.c:1239:36
 1e040bc:    00 fe 0c 09       	r0 = r0 * 12			  ## vm.c:1239:36
 1e040c0:    80 f6 00 04       	r0 = [r0+r4]			  ## vm.c:1239:36
 1e040c4:    01 f7 18 a0       	r1 = h[r10 + 24] (u)			  ## vm.c:1239:92
 1e040c8:    a7 05             	r7 = r6.l (u)			  ## vm.c:1238:23
 1e040ca:    10 09             	r0 += r1			  ## vm.c:1239:63
 1e040cc:    42 90             	r2 = r0 + 4			  ## vm.c:1239:90
 1e040ce:    90 08             	r0 = r9			  ## vm.c:1522:5
 1e040d0:    71 08             	r1 = r7			  ## vm.c:1522:5
 1e040d2:    bf f3 86 e9       	call -11508 <norflash_read : 1e013e2 >			  ## vm.c:1522:5
 1e040d6:    80 08             	r0 = r8			  ## vm.c:1254:5
 1e040d8:    98 f3 a6 16       	call 3157324 <os_mutex_post : 106e28 >			  ## vm.c:1254:5
 1e040dc:    01 18             	goto 2 <vm_read+0xC6 : 1e040e0 >			  ## vm.c:1254:5
 1e040de:    07 70             	r7 = 0
 1e040e0:    70 08             	r0 = r7			  ## vm.c:1256:1
 1e040e2:    02 0a             	sp += 4			  ## vm.c:1256:1
 1e040e4:    5b 01             	{pc, r11-r4} = [sp++]			  ## vm.c:1256:1


vm_write:
 1e040e6:    7a 01             	[--sp] = {rets, r10-r4}			  ## vm.c:1063:0
 1e040e8:    fe 0b             	sp += -4			  ## vm.c:1063:0
 1e040ea:    c7 ff 50 27 00 00 	r7 = 10064 <vm_obj : 2750 >			  ## vm.c:1063:0
 1e040f0:    03 f9 6d 71       	r3 = b[r7 + 365] (u)			  ## vm.c:234:9
 1e040f4:    24 08             	r4 = r2			  ## vm.c:234:9
 1e040f6:    19 08             	r9 = r1
 1e040f8:    05 08             	r5 = r0
 1e040fa:    06 fb 06 ff       	r6 = -250 <bank_code_load_addr+0x1DC90E : 1ffff06 >
 1e040fe:    00 f3 a7 30       	if ((r3 & 1) == 0) goto 334 <vm_write+0x16A : 1e04250 >
 1e04102:    a6 8f             	r6 += -6
 1e04104:    f5 e7 a4 80       	if (r5 > 127) goto 328 <vm_write+0x16A : 1e04250 >
 1e04108:    20 d3             	r0 = r4 >> 12			  ## vm.c:1076:13
 1e0410a:    26 80             	r6 += 2			  ## vm.c:1076:13
 1e0410c:    a1 30             	if (r0 != 0) goto 322 <vm_write+0x16A : 1e04250 >			  ## vm.c:1076:13
 1e0410e:    78 fc 18 01       	r8 = r7 + 280			  ## vm.c:1289:5
 1e04112:    f1 07             	r1 = -1			  ## vm.c:1289:5
 1e04114:    80 08             	r0 = r8			  ## vm.c:1289:5
 1e04116:    98 f3 85 16       	call 3157258 <os_mutex_pend : 106e24 >			  ## vm.c:1289:5
 1e0411a:    00 f9 6d 71       	r0 = b[r7 + 365] (u)			  ## vm.c:1289:5
 1e0411e:    40 d0             	r0 = r0 >> 1			  ## vm.c:1289:5
 1e04120:    11 70             	r1 = 1			  ## vm.c:1289:5
 1e04122:    e3 fd 00 11       	r1 = r1 & ~r0			  ## vm.c:1289:5
 1e04126:    c2 70             	r2 = 12			  ## vm.c:1289:5
 1e04128:    70 08             	r0 = r7			  ## vm.c:1289:5
 1e0412a:    80 fe 20 01       	r0 += r1 * r2			  ## vm.c:1289:5
 1e0412e:    41 50             	r1 = h[r0 + 8] (u)			  ## vm.c:1289:5
 1e04130:    01 22             	if (r1 == 0) goto 2 <vm_write+0x4E : 1e04134 >			  ## vm.c:1289:5
 1e04132:    05 15             	call -1526 <_vm_area_erase : 1e03b3e >			  ## vm.c:1293:13
 1e04134:    80 08             	r0 = r8			  ## vm.c:1335:5
 1e04136:    98 f3 77 16       	call 3157230 <os_mutex_post : 106e28 >			  ## vm.c:1335:5
 1e0413a:    00 f9 6d 71       	r0 = b[r7 + 365] (u)			  ## vm.c:1335:5
 1e0413e:    00 f3 0b 00       	if ((r0 & 1) == 0) goto 22 <vm_write+0x72 : 1e04158 >
 1e04142:    f1 07             	r1 = -1			  ## vm.c:1354:5
 1e04144:    80 08             	r0 = r8			  ## vm.c:1354:5
 1e04146:    98 f3 6d 16       	call 3157210 <os_mutex_pend : 106e24 >			  ## vm.c:1354:5
 1e0414a:    26 16             	call -948 <vm_warning_line_check : 1e03d98 >			  ## vm.c:1355:17
 1e0414c:    10 e0 01 10       	if (r0 != 1) goto 2 <vm_write+0x6C : 1e04152 >			  ## vm.c:1355:17
 1e04150:    5e 15             	call -1348 <_vm_defrag : 1e03c0e >			  ## vm.c:1356:15
 1e04152:    80 08             	r0 = r8			  ## vm.c:1365:5
 1e04154:    98 f3 68 16       	call 3157200 <os_mutex_post : 106e28 >			  ## vm.c:1365:5
 1e04158:    40 08             	r0 = r4			  ## vm.c:1084:20
 1e0415a:    80 f3 2c 5c       	call 47192 <malloc : 1e0f9b6 >			  ## vm.c:1084:20
 1e0415e:    06 08             	r6 = r0			  ## vm.c:1084:20
 1e04160:    10 2c             	if (r6 == 0) goto 32 <vm_write+0x9C : 1e04182 >
 1e04162:    50 08             	r0 = r5			  ## vm.c:1087:20
 1e04164:    61 08             	r1 = r6			  ## vm.c:1087:20
 1e04166:    42 08             	r2 = r4			  ## vm.c:1087:20
 1e04168:    58 17             	call -336 <vm_read : 1e0401a >			  ## vm.c:1087:20
 1e0416a:    20 04             	r0 = r0.l (u)			  ## vm.c:1088:13
 1e0416c:    40 f2 06 10       	if (r0 != r4) goto 12 <vm_write+0x96 : 1e0417c >			  ## vm.c:1088:13
 1e04170:    60 08             	r0 = r6			  ## vm.c:1089:22
 1e04172:    91 08             	r1 = r9			  ## vm.c:1089:22
 1e04174:    42 08             	r2 = r4			  ## vm.c:1089:22
 1e04176:    98 f3 b9 16       	call 3157362 <memcmp : 106eec >			  ## vm.c:1089:22
 1e0417a:    6d 20             	if (r0 == 0) goto 218 <vm_write+0x170 : 1e04256 >			  ## vm.c:1089:22
 1e0417c:    60 08             	r0 = r6			  ## vm.c:1095:9
 1e0417e:    80 f3 45 5c       	call 47242 <free : 1e0fa0c >			  ## vm.c:1095:9
 1e04182:    f1 07             	r1 = -1			  ## vm.c:1099:5
 1e04184:    80 08             	r0 = r8			  ## vm.c:1099:5
 1e04186:    98 f3 4d 16       	call 3157146 <os_mutex_pend : 106e24 >			  ## vm.c:1099:5
 1e0418a:    90 08             	r0 = r9			  ## vm.c:1102:33
 1e0418c:    41 08             	r1 = r4			  ## vm.c:1102:33
 1e0418e:    bf f3 0c e9       	call -11752 <CRC16 : 1e013aa >			  ## vm.c:1102:33
 1e04192:    01 f9 6d 71       	r1 = b[r7 + 365] (u)			  ## vm.c:1102:33
 1e04196:    d0 f5 00 00       	b[sp] = r0			  ## vm.c:1104:17
 1e0419a:    d5 f5 01 00       	b[sp+1] = r5			  ## vm.c:1105:17
 1e0419e:    84 fd 40 05       	r0 = uextra(r5, p:8, l:4)			  ## vm.c:1106:65
 1e041a2:    81 fd 08 21       	r2 = uextra(r1, p:1, l:1)			  ## vm.c:1106:65
 1e041a6:    02 fe 0c 29       	r2 = r2 * 12			  ## vm.c:1106:65
 1e041aa:    83 f6 00 27       	r3 = [r2+r7]			  ## vm.c:1106:65
 1e041ae:    02 f6 68 71       	r2 = [r7 + 360]			  ## vm.c:1106:65
 1e041b2:    d0 fd 20 04       	r0 <= insert(r4, p:4, l:16)			  ## vm.c:1106:47
 1e041b6:    d0 f5 02 00       	b[sp+2] = r0			  ## vm.c:1106:17
 1e041ba:    20 d1             	r0 = r4 >> 4			  ## vm.c:1107:19
 1e041bc:    d0 f5 03 00       	b[sp+3] = r0			  ## vm.c:1107:17
 1e041c0:    32 f2 06 80       	if (r2 > r3) goto 12 <vm_write+0xEA : 1e041d0 >			  ## vm.c:1107:17
 1e041c4:    8f f3 0c f9       	call 2093592 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e041c8:    02 f6 68 71       	r2 = [r7 + 360]			  ## cpu.h:148:5
 1e041cc:    01 f9 6d 71       	r1 = b[r7 + 365] (u)			  ## cpu.h:148:5
 1e041d0:    81 fd 08 01       	r0 = uextra(r1, p:1, l:1)
 1e041d4:    c3 70             	r3 = 12
 1e041d6:    76 08             	r6 = r7
 1e041d8:    80 fe 30 60       	r6 += r0 * r3
 1e041dc:    00 4c             	r0 = [r6 + 0]
 1e041de:    16 4c             	r6 = [r6 + 4]
 1e041e0:    20 b4             	r0 = r2 - r0
 1e041e2:    60 f2 06 30       	if (r0 < r6) goto 12 <vm_write+0x10C : 1e041f2 >
 1e041e6:    8f f3 fb f8       	call 2093558 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e041ea:    02 f6 68 71       	r2 = [r7 + 360]			  ## cpu.h:148:5
 1e041ee:    01 f9 6d 71       	r1 = b[r7 + 365] (u)			  ## cpu.h:148:5
 1e041f2:    81 fd 08 01       	r0 = uextra(r1, p:1, l:1)			  ## vm.c:1112:46
 1e041f6:    71 08             	r1 = r7			  ## vm.c:1112:46
 1e041f8:    80 fe 30 10       	r1 += r0 * r3			  ## vm.c:1112:46
 1e041fc:    00 42             	r0 = [r1 + 0]			  ## vm.c:1112:46
 1e041fe:    11 42             	r1 = [r1 + 4]			  ## vm.c:1112:75
 1e04200:    10 09             	r0 += r1			  ## vm.c:1112:73
 1e04202:    a0 b0             	r0 = r0 - r2			  ## vm.c:1112:102
 1e04204:    4a 98             	r10 = r4 + 4			  ## vm.c:1112:34
 1e04206:    06 fb 05 ff       	r6 = -251 <bank_code_load_addr+0x1DC90D : 1ffff05 >			  ## vm.c:1112:34
 1e0420a:    0a f2 1e 80       	if (r10 > r0) goto 60 <vm_write+0x164 : 1e0424a >			  ## vm.c:1112:34
 1e0420e:    00 a0             	r0 = sp + 0
 1e04210:    41 70             	r1 = 4			  ## vm.c:1504:5
 1e04212:    bf f3 88 ea       	call -10992 <norflash_write : 1e01726 >			  ## vm.c:1504:5
 1e04216:    07 28             	if (r4 == 0) goto 14 <vm_write+0x140 : 1e04226 >
 1e04218:    00 f6 68 71       	r0 = [r7 + 360]			  ## vm.c:1115:33
 1e0421c:    42 90             	r2 = r0 + 4			  ## vm.c:1115:45
 1e0421e:    90 08             	r0 = r9			  ## vm.c:1504:5
 1e04220:    41 08             	r1 = r4			  ## vm.c:1504:5
 1e04222:    bf f3 80 ea       	call -11008 <norflash_write : 1e01726 >			  ## vm.c:1504:5
 1e04226:    70 fc 68 01       	r0 = r7 + 360
 1e0422a:    51 60             	r1 = b[r0 + 5] (u)			  ## vm.c:1117:41
 1e0422c:    81 fd 08 11       	r1 = uextra(r1, p:1, l:1)			  ## vm.c:1117:41
 1e04230:    01 fe 0c 19       	r1 = r1 * 12			  ## vm.c:1117:41
 1e04234:    81 f6 00 17       	r1 = [r1+r7]			  ## vm.c:1117:41
 1e04238:    02 40             	r2 = [r0 + 0]			  ## vm.c:1117:27
 1e0423a:    6b c0             	r3 = r5 << 1			  ## vm.c:1117:9
 1e0423c:    73 09             	r3 += r7			  ## vm.c:1117:9
 1e0423e:    61 b4             	r1 = r2 - r1			  ## vm.c:1117:39
 1e04240:    c9 56             	h[r3 + 24] = r1			  ## vm.c:1117:25
 1e04242:    01 40             	r1 = [r0 + 0]			  ## vm.c:1123:21
 1e04244:    a1 09             	r1 += r10			  ## vm.c:1123:21
 1e04246:    09 40             	[r0 + 0] = r1			  ## vm.c:1123:21
 1e04248:    46 08             	r6 = r4			  ## vm.c:1123:21
 1e0424a:    80 08             	r0 = r8			  ## vm.c:1167:5
 1e0424c:    98 f3 ec 15       	call 3156952 <os_mutex_post : 106e28 >			  ## vm.c:1167:5
 1e04250:    60 08             	r0 = r6			  ## vm.c:1170:1
 1e04252:    02 0a             	sp += 4			  ## vm.c:1170:1
 1e04254:    5a 01             	{pc, r10-r4} = [sp++]			  ## vm.c:1170:1
 1e04256:    60 08             	r0 = r6			  ## vm.c:1091:17
 1e04258:    80 f3 d8 5b       	call 47024 <free : 1e0fa0c >			  ## vm.c:1091:17
 1e0425c:    46 08             	r6 = r4			  ## vm.c:1091:17
 1e0425e:    f8 1f             	goto -16 <vm_write+0x16A : 1e04250 >


lrc_critical_enter:
 1e04260:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## lrc_hw.c:186:0
 1e04266:    00 f9 9c 00       	r0 = b[r0 + 156] (u)			  ## lrc_hw.c:186:0
 1e0426a:    08 20             	if (r0 == 0) goto 16 <lrc_critical_enter+0x1C : 1e0427c >			  ## lrc_hw.c:186:0
 1e0426c:    c0 ff 00 36 1e 00 	r0 = 1979904 <uECC_vli_cmp_unsafe+0xDC604 : 1e3600 >			  ## lrc_hw.c:186:0
 1e04272:    01 40             	r1 = [r0 + 0]			  ## lrc_hw.c:98:18
 1e04274:    71 b0             	r1 &= 4294967294			  ## lrc_hw.c:98:18
 1e04276:    09 40             	[r0 + 0] = r1			  ## lrc_hw.c:98:18
 1e04278:    00 f4 40 09       	[r0 + 0] |= 64			  ## lrc_hw.c:100:18
 1e0427c:    20 00             	rts			  ## lrc_hw.c:188:1


__hw_lrc_enable:
 1e0427e:    c1 ff b0 20 00 00 	r1 = 8368 <gatt_client_conn_handle : 20b0 >			  ## lrc_hw.c:93:0
 1e04284:    01 f9 9c 10       	r1 = b[r1 + 156] (u)			  ## lrc_hw.c:93:0
 1e04288:    0b 22             	if (r1 == 0) goto 22 <__hw_lrc_enable+0x22 : 1e042a0 >			  ## lrc_hw.c:93:0
 1e0428a:    c1 ff 00 36 1e 00 	r1 = 1979904 <uECC_vli_cmp_unsafe+0xDC604 : 1e3600 >			  ## lrc_hw.c:93:0
 1e04290:    02 42             	r2 = [r1 + 0]			  ## lrc_hw.c:98:18
 1e04292:    72 b0             	r2 &= 4294967294			  ## lrc_hw.c:98:18
 1e04294:    0a 42             	[r1 + 0] = r2			  ## lrc_hw.c:98:18
 1e04296:    00 f4 40 19       	[r1 + 0] |= 64			  ## lrc_hw.c:100:18
 1e0429a:    02 20             	if (r0 == 0) goto 4 <__hw_lrc_enable+0x22 : 1e042a0 >			  ## lrc_hw.c:100:18
 1e0429c:    00 f4 01 19       	[r1 + 0] |= 1			  ## lrc_hw.c:103:22
 1e042a0:    20 00             	rts			  ## lrc_hw.c:105:1


lrc_critical_exit:
 1e042a2:    10 70             	r0 = 1			  ## lrc_hw.c:191:0
 1e042a4:    ec 1f             	goto -40 <__hw_lrc_enable : 1e0427e >			  ## lrc_hw.c:192:5


lrc_timeout_handler:
 1e042a6:    78 01             	[--sp] = {rets, r8-r4}			  ## lrc_hw.c:134:0
 1e042a8:    c0 ff 00 36 1e 00 	r0 = 1979904 <uECC_vli_cmp_unsafe+0xDC604 : 1e3600 >			  ## lrc_hw.c:134:0
 1e042ae:    01 40             	r1 = [r0 + 0]			  ## lrc_hw.c:137:19
 1e042b0:    00 f3 77 10       	if ((r1 & 1) == 0) goto 238 <system_code_size+0x60 : 1e043a2 >			  ## lrc_hw.c:137:19
 1e042b4:    01 40             	r1 = [r0 + 0]			  ## lrc_hw.c:141:22
 1e042b6:    51 04             	r1 = r1.b0 (s)			  ## lrc_hw.c:141:36
 1e042b8:    f1 ef fc cf       	ifs (r1 > -1) goto -8 <lrc_timeout_handler+0xE : 1e042b4 >			  ## lrc_hw.c:141:5
 1e042bc:    12 40             	r2 = [r0 + 4]			  ## lrc_hw.c:145:24
 1e042be:    c8 ff b0 20 00 00 	r8 = 8368 <gatt_client_conn_handle : 20b0 >
 1e042c4:    01 f9 9c 80       	r1 = b[r8 + 156] (u)
 1e042c8:    05 22             	if (r1 == 0) goto 10 <lrc_timeout_handler+0x2E : 1e042d4 >
 1e042ca:    01 40             	r1 = [r0 + 0]			  ## lrc_hw.c:98:18
 1e042cc:    71 b0             	r1 &= 4294967294			  ## lrc_hw.c:98:18
 1e042ce:    09 40             	[r0 + 0] = r1			  ## lrc_hw.c:98:18
 1e042d0:    00 f4 40 09       	[r0 + 0] |= 64			  ## lrc_hw.c:100:18
 1e042d4:    2f 24             	if (r2 == 0) goto 94 <lrc_timeout_handler+0x8E : 1e04334 >
 1e042d6:    c0 ff 5c 31 00 00 	r0 = 12636 <hdl.5 : 315c >			  ## clock.c:1778:20
 1e042dc:    00 60             	r0 = b[r0 + 0] (u)			  ## clock.c:1778:12
 1e042de:    c1 ff 40 42 0f 00 	r1 = 1000000 <text_size+0xD3390 : f4240 >			  ## clock.c:1778:35
 1e042e4:    40 0e             	r0 = r0 * r1			  ## clock.c:1778:35
 1e042e6:    c1 d6             	r1 = r0 >> 27			  ## clock.c:2281:9
 1e042e8:    40 c1             	r0 = r0 << 5			  ## clock.c:2281:9
 1e042ea:    03 70             	r3 = 0			  ## lrc_hw.c:159:80
 1e042ec:    80 f3 33 1b       	call 13926 <__udivdi3 : 1e07956 >			  ## lrc_hw.c:159:80
 1e042f0:    10 f6 a8 80       	[r8 + 168] = r0			  ## lrc_hw.c:159:20
 1e042f4:    01 f9 a4 80       	r1 = b[r8 + 164] (u)
 1e042f8:    42 71             	r2 = 20
 1e042fa:    01 32             	if (r1 != 0) goto 2 <lrc_timeout_handler+0x58 : 1e042fe >
 1e042fc:    02 70             	r2 = 0
 1e042fe:    c3 ff a0 24 00 00 	r3 = 9376 <pmu_voltage : 24a0 >
 1e04304:    05 f6 84 30       	r5 = [r3 + 132]			  ## lrc_hw.c:115:9
 1e04308:    18 2a             	if (r5 == 0) goto 48 <lrc_timeout_handler+0x94 : 1e0433a >			  ## lrc_hw.c:115:9
 1e0430a:    85 04             	r5 = r2.b0 (u)			  ## lrc_hw.c:120:25
 1e0430c:    f5 8f             	r5 += -1			  ## lrc_hw.c:120:27
 1e0430e:    15 e0 0c b0       	ifs (r5 < 1) goto 24 <lrc_timeout_handler+0x84 : 1e0432a >			  ## lrc_hw.c:120:27
 1e04312:    07 70             	r7 = 0
 1e04314:    16 70             	r6 = 1
 1e04316:    bf c0             	r7 = r7 << 2			  ## lrc_hw.c:121:54
 1e04318:    37 09             	r7 += r3			  ## lrc_hw.c:121:54
 1e0431a:    04 f6 88 70       	r4 = [r7 + 136]			  ## lrc_hw.c:121:35
 1e0431e:    14 f6 84 70       	[r7 + 132] = r4			  ## lrc_hw.c:121:33
 1e04322:    87 05             	r7 = r6.b0 (u)			  ## lrc_hw.c:120:21
 1e04324:    16 80             	r6 += 1			  ## lrc_hw.c:120:9
 1e04326:    57 f2 f6 bf       	ifs (r7 < r5) goto -20 <lrc_timeout_handler+0x70 : 1e04316 >			  ## lrc_hw.c:120:9
 1e0432a:    ac c0             	r4 = r5 << 2			  ## lrc_hw.c:123:9
 1e0432c:    34 09             	r4 += r3			  ## lrc_hw.c:123:9
 1e0432e:    10 f6 84 40       	[r4 + 132] = r0			  ## lrc_hw.c:123:33
 1e04332:    0e 18             	goto 28 <system_code_size+0xE : 1e04350 >			  ## lrc_hw.c:123:33
 1e04334:    00 f4 01 09       	[r0 + 0] |= 1			  ## lrc_hw.c:152:22
 1e04338:    58 01             	{pc, r8-r4} = [sp++]			  ## lrc_hw.c:183:1
 1e0433a:    05 70             	r5 = 0
 1e0433c:    15 22             	if (r1 == 0) goto 42 <system_code_size+0x26 : 1e04368 >
 1e0433e:    35 fc 84 00       	r5 = r3 + 132


system_code_size:
 1e04342:    86 04             	r6 = r2.b0 (u)			  ## lrc_hw.c:116:21
 1e04344:    07 70             	r7 = 0			  ## lrc_hw.c:116:21
 1e04346:    17 80             	r7 += 1			  ## lrc_hw.c:116:29
 1e04348:    50 f6 04 50       	[r5 ++= 4] = r0			  ## lrc_hw.c:117:33
 1e0434c:    67 f2 fb 3f       	if (r7 < r6) goto -10 <system_code_size+0x4 : 1e04346 >			  ## lrc_hw.c:117:33
 1e04350:    05 70             	r5 = 0
 1e04352:    0a 22             	if (r1 == 0) goto 20 <system_code_size+0x26 : 1e04368 >
 1e04354:    30 fc 84 00       	r0 = r3 + 132
 1e04358:    83 04             	r3 = r2.b0 (u)			  ## lrc_hw.c:126:17
 1e0435a:    06 70             	r6 = 0			  ## lrc_hw.c:126:17
 1e0435c:    44 f6 04 00       	r4 = [r0 ++= 4]			  ## lrc_hw.c:127:16
 1e04360:    16 80             	r6 += 1			  ## lrc_hw.c:126:25
 1e04362:    45 09             	r5 += r4			  ## lrc_hw.c:127:13
 1e04364:    36 f2 fa 3f       	if (r6 < r3) goto -12 <system_code_size+0x1A : 1e0435c >
 1e04368:    80 04             	r0 = r2.b0 (u)			  ## lrc_hw.c:126:21
 1e0436a:    c0 fe 00 05       	r0 = r5 / r0 (u)			  ## lrc_hw.c:130:30
 1e0436e:    10 f6 a0 80       	[r8 + 160] = r0			  ## lrc_hw.c:130:24
 1e04372:    40 71             	r0 = 20			  ## lrc_hw.c:168:31
 1e04374:    01 32             	if (r1 != 0) goto 2 <system_code_size+0x36 : 1e04378 >			  ## lrc_hw.c:168:31
 1e04376:    00 70             	r0 = 0
 1e04378:    c1 ff 24 1e 00 00 	r1 = 7716 <lrc.4 : 1e24 >
 1e0437e:    02 62             	r2 = b[r1 + 0] (u)			  ## lrc_hw.c:168:17
 1e04380:    02 f2 0d 80       	if (r2 > r0) goto 26 <system_code_size+0x5C : 1e0439e >			  ## lrc_hw.c:168:17
 1e04384:    12 80             	r2 += 1			  ## lrc_hw.c:169:27
 1e04386:    83 04             	r3 = r2.b0 (u)			  ## lrc_hw.c:173:13
 1e04388:    0a 62             	b[r1 + 0] = r2			  ## lrc_hw.c:169:27
 1e0438a:    03 f2 08 10       	if (r3 != r0) goto 16 <system_code_size+0x5C : 1e0439e >			  ## lrc_hw.c:169:27
 1e0438e:    c0 ff 26 1e 00 00 	r0 = 7718 <lrc.2 : 1e26 >			  ## lrc_hw.c:176:38
 1e04394:    00 60             	r0 = b[r0 + 0] (u)			  ## lrc_hw.c:176:38
 1e04396:    01 fb e8 03       	r1 = 1000 <BTCTLER_LE_RAM_TOTAL+0xA : 3e8 >			  ## lrc_hw.c:176:13
 1e0439a:    80 f3 8e 67       	call 53020 <usr_timer_modify : 1e112ba >			  ## lrc_hw.c:176:13
 1e0439e:    10 70             	r0 = 1			  ## lrc_hw.c:180:5
 1e043a0:    6e 17             	call -292 <__hw_lrc_enable : 1e0427e >			  ## lrc_hw.c:180:5
 1e043a2:    58 01             	{pc, r8-r4} = [sp++]			  ## lrc_hw.c:183:1


__hw_btosc_time_set:
 1e043a4:    7c 01             	[--sp] = {rets, r12-r4}			  ## power_hw.c:387:0
 1e043a6:    ca ff 00 50 00 00 	r10 = 20480 <nvbss_begin : 5000 >			  ## power_hw.c:398:19
 1e043ac:    a0 fc 20 03       	r0 = r10 + 800			  ## power_hw.c:398:19
 1e043b0:    01 40             	r1 = [r0 + 0]			  ## power_hw.c:388:23
 1e043b2:    89 d1             	r1 = r1 >> 6			  ## power_hw.c:388:23
 1e043b4:    09 40             	[r0 + 0] = r1			  ## power_hw.c:388:23
 1e043b6:    c1 ff d3 1f 1a 00 	r1 = 1712083 <uECC_vli_cmp_unsafe+0x9AFD7 : 1a1fd3 >			  ## power_hw.c:388:23
 1e043bc:    02 62             	r2 = b[r1 + 0] (u)			  ## power_hw.c:390:5
 1e043be:    22 fd fc 29       	r2 = r2 & 252			  ## power_hw.c:390:5
 1e043c2:    12 b0             	r2 |= 1			  ## power_hw.c:390:5
 1e043c4:    0a 62             	b[r1 + 0] = r2			  ## power_hw.c:390:5
 1e043c6:    02 62             	r2 = b[r1 + 0] (u)			  ## power_hw.c:392:5
 1e043c8:    02 fd 0c 29       	r2 = r2 | 12			  ## power_hw.c:392:5
 1e043cc:    0a 62             	b[r1 + 0] = r2			  ## power_hw.c:392:5
 1e043ce:    01 fb b8 0b       	r1 = 3000 <BTCTLER_CL_CODE_TOTAL+0x96 : bb8 >			  ## power_hw.c:392:5
 1e043d2:    11 f6 24 a0       	[r10 + 36] = r1			  ## power_hw.c:394:29
 1e043d6:    09 f6 00 00       	r9 = [r0 + 0]			  ## power_hw.c:300:18
 1e043da:    01 70             	r1 = 0			  ## power_hw.c:300:16
 1e043dc:    02 fb ec 13       	r2 = 5100 <_cpu0_sstack_begin+0x39C : 13ec >			  ## power_hw.c:300:16
 1e043e0:    03 70             	r3 = 0			  ## power_hw.c:300:16
 1e043e2:    90 08             	r0 = r9			  ## power_hw.c:300:16
 1e043e4:    80 f3 98 1a       	call 13616 <__muldi3 : 1e07918 >			  ## power_hw.c:300:16
 1e043e8:    06 08             	r6 = r0			  ## power_hw.c:300:16
 1e043ea:    17 08             	r7 = r1			  ## power_hw.c:300:16
 1e043ec:    c8 ff 40 42 0f 00 	r8 = 1000000 <text_size+0xD3390 : f4240 >			  ## power_hw.c:300:16
 1e043f2:    03 70             	r3 = 0			  ## power_hw.c:302:11
 1e043f4:    82 08             	r2 = r8			  ## power_hw.c:302:11
 1e043f6:    80 f3 b2 1b       	call 14180 <__umoddi3 : 1e07b5e >			  ## power_hw.c:302:11
 1e043fa:    04 08             	r4 = r0			  ## power_hw.c:302:11
 1e043fc:    15 08             	r5 = r1			  ## power_hw.c:302:11
 1e043fe:    03 70             	r3 = 0			  ## power_hw.c:302:11
 1e04400:    60 08             	r0 = r6			  ## power_hw.c:302:11
 1e04402:    71 08             	r1 = r7			  ## power_hw.c:302:11
 1e04404:    82 08             	r2 = r8			  ## power_hw.c:302:11
 1e04406:    80 f3 a6 1a       	call 13644 <__udivdi3 : 1e07956 >			  ## power_hw.c:302:11
 1e0440a:    e0 fd 50 24       	r2 = r4 | r5			  ## power_hw.c:306:9
 1e0440e:    1b 70             	r11 = 1			  ## power_hw.c:306:9
 1e04410:    11 70             	r1 = 1			  ## power_hw.c:306:9
 1e04412:    01 34             	if (r2 != 0) goto 2 <__hw_btosc_time_set+0x72 : 1e04416 >			  ## power_hw.c:306:9
 1e04414:    01 70             	r1 = 0			  ## power_hw.c:306:9
 1e04416:    0c b2             	r12 = r1 + r0			  ## power_hw.c:306:9
 1e04418:    1c f6 20 a0       	[r10 + 32] = r12			  ## power_hw.c:396:20
 1e0441c:    01 70             	r1 = 0			  ## power_hw.c:300:16
 1e0441e:    02 fb b8 0b       	r2 = 3000 <BTCTLER_CL_CODE_TOTAL+0x96 : bb8 >			  ## power_hw.c:300:16
 1e04422:    03 70             	r3 = 0			  ## power_hw.c:300:16
 1e04424:    90 08             	r0 = r9			  ## power_hw.c:300:16
 1e04426:    80 f3 77 1a       	call 13550 <__muldi3 : 1e07918 >			  ## power_hw.c:300:16
 1e0442a:    04 08             	r4 = r0			  ## power_hw.c:300:16
 1e0442c:    15 08             	r5 = r1			  ## power_hw.c:300:16
 1e0442e:    03 70             	r3 = 0			  ## power_hw.c:302:11
 1e04430:    82 08             	r2 = r8			  ## power_hw.c:302:11
 1e04432:    80 f3 94 1b       	call 14120 <__umoddi3 : 1e07b5e >			  ## power_hw.c:302:11
 1e04436:    06 08             	r6 = r0			  ## power_hw.c:302:11
 1e04438:    17 08             	r7 = r1			  ## power_hw.c:302:11
 1e0443a:    03 70             	r3 = 0			  ## power_hw.c:302:11
 1e0443c:    40 08             	r0 = r4			  ## power_hw.c:302:11
 1e0443e:    51 08             	r1 = r5			  ## power_hw.c:302:11
 1e04440:    82 08             	r2 = r8			  ## power_hw.c:302:11
 1e04442:    80 f3 88 1a       	call 13584 <__udivdi3 : 1e07956 >			  ## power_hw.c:302:11
 1e04446:    e0 fd 70 16       	r1 = r6 | r7			  ## power_hw.c:306:9
 1e0444a:    01 32             	if (r1 != 0) goto 2 <__hw_btosc_time_set+0xAA : 1e0444e >			  ## power_hw.c:306:9
 1e0444c:    0b 70             	r11 = 0			  ## power_hw.c:306:9
 1e0444e:    b0 09             	r0 += r11			  ## power_hw.c:306:9
 1e04450:    10 f6 28 a0       	[r10 + 40] = r0			  ## power_hw.c:397:20
 1e04454:    c0 09             	r0 += r12			  ## power_hw.c:398:35
 1e04456:    10 f6 2c a0       	[r10 + 44] = r0			  ## power_hw.c:398:19
 1e0445a:    5c 01             	{pc, r12-r4} = [sp++]			  ## power_hw.c:399:1


__hw_lrc_time_set:
 1e0445c:    7d 01             	[--sp] = {rets, r13-r4}			  ## power_hw.c:402:0
 1e0445e:    05 08             	r5 = r0			  ## power_hw.c:402:0
 1e04460:    04 fb ec 13       	r4 = 5100 <_cpu0_sstack_begin+0x39C : 13ec >			  ## power_hw.c:402:0
 1e04464:    25 e0 1c 00       	if (r5 == 2) goto 56 <__hw_lrc_time_set+0x44 : 1e044a0 >			  ## power_hw.c:402:0
 1e04468:    c0 ff 0d 00 03 00 	r0 = 196621 <text_size+0xF15D : 3000d >			  ## xosc_fsck.c:317:14
 1e0446e:    bf f3 2f f4       	call -6050 <adc_get_voltage : 1e02cd0 >			  ## xosc_fsck.c:317:14
 1e04472:    c1 ff 58 31 00 00 	r1 = 12632 <hdl.27 : 3158 >
 1e04478:    03 42             	r3 = [r1 + 0]			  ## xosc_fsck.c:322:26
 1e0447a:    c2 ff 54 31 00 00 	r2 = 12628 <update_bss_end : 3154 >			  ## xosc_fsck.c:322:26
 1e04480:    04 70             	r4 = 0			  ## xosc_fsck.c:322:26
 1e04482:    0c 64             	b[r2 + 0] = r4			  ## xosc_fsck.c:322:26
 1e04484:    e3 b0             	r3 = r0 - r3			  ## xosc_fsck.c:322:16
 1e04486:    dc df             	r4 = r3 >>> 31			  ## xosc_fsck.c:322:16
 1e04488:    43 09             	r3 += r4			  ## xosc_fsck.c:322:16
 1e0448a:    d3 b8             	r3 ^= r4			  ## xosc_fsck.c:322:16
 1e0448c:    04 fb ec 13       	r4 = 5100 <_cpu0_sstack_begin+0x39C : 13ec >			  ## xosc_fsck.c:322:16
 1e04490:    e3 e1 05 b0       	ifs (r3 < 30) goto 10 <__hw_lrc_time_set+0x42 : 1e0449e >			  ## xosc_fsck.c:322:16
 1e04494:    13 70             	r3 = 1
 1e04496:    0b 64             	b[r2 + 0] = r3
 1e04498:    08 42             	[r1 + 0] = r0			  ## xosc_fsck.c:324:34
 1e0449a:    04 fb 8c 23       	r4 = 9100 <flash_info+0x1C : 238c >			  ## xosc_fsck.c:324:34
 1e0449e:    0c 2a             	if (r5 == 0) goto 24 <__hw_lrc_time_set+0x5C : 1e044b8 >
 1e044a0:    c0 ff d3 1f 1a 00 	r0 = 1712083 <uECC_vli_cmp_unsafe+0x9AFD7 : 1a1fd3 >
 1e044a6:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:412:9
 1e044a8:    21 fd fc 19       	r1 = r1 & 252			  ## power_hw.c:412:9
 1e044ac:    91 b0             	r1 |= 2			  ## power_hw.c:412:9
 1e044ae:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:412:9
 1e044b0:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:414:9
 1e044b2:    21 fd f3 19       	r1 = r1 & 243			  ## power_hw.c:414:9
 1e044b6:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:414:9
 1e044b8:    cb ff 00 50 00 00 	r11 = 20480 <nvbss_begin : 5000 >
 1e044be:    00 f6 28 b3       	r0 = [r11 + 808]			  ## power_hw.c:417:96
 1e044c2:    00 fc d8 0e       	r0 = r0 + 3800			  ## power_hw.c:417:83
 1e044c6:    10 f6 24 b0       	[r11 + 36] = r0			  ## power_hw.c:417:29
 1e044ca:    8f f3 66 ff       	call 2096844 <check_ze_flash_id : 439a >			  ## power_hw.c:420:9


system_code_total_size:
 1e044cc:    66 ff 0a f6 24 b0 	if ((r15 & 36175872) == 0) goto -40888 <uECC_vli_cmp_unsafe+0x1CF351E : 1dfa51a >			  ## power_hw.c:420:9
 1e044d2:    04 20             	if (r0 == 0) goto 8 <system_code_total_size+0x10 : 1e044dc >			  ## power_hw.c:420:9
 1e044d4:    aa fc d0 07       	r10 = r10 + 2000			  ## power_hw.c:421:33
 1e044d8:    1a f6 24 b0       	[r11 + 36] = r10			  ## power_hw.c:421:33
 1e044dc:    09 f6 20 b3       	r9 = [r11 + 800]			  ## power_hw.c:300:18
 1e044e0:    01 70             	r1 = 0			  ## power_hw.c:300:16
 1e044e2:    03 70             	r3 = 0			  ## power_hw.c:300:16
 1e044e4:    90 08             	r0 = r9			  ## power_hw.c:300:16
 1e044e6:    42 08             	r2 = r4			  ## power_hw.c:300:16
 1e044e8:    80 f3 16 1a       	call 13356 <__muldi3 : 1e07918 >			  ## power_hw.c:300:16
 1e044ec:    07 08             	r7 = r0			  ## power_hw.c:300:16
 1e044ee:    14 08             	r4 = r1			  ## power_hw.c:300:16
 1e044f0:    c8 ff 40 42 0f 00 	r8 = 1000000 <text_size+0xD3390 : f4240 >			  ## power_hw.c:300:16
 1e044f6:    03 70             	r3 = 0			  ## power_hw.c:302:11
 1e044f8:    82 08             	r2 = r8			  ## power_hw.c:302:11
 1e044fa:    80 f3 30 1b       	call 13920 <__umoddi3 : 1e07b5e >			  ## power_hw.c:302:11
 1e044fe:    06 08             	r6 = r0			  ## power_hw.c:302:11
 1e04500:    15 08             	r5 = r1			  ## power_hw.c:302:11
 1e04502:    03 70             	r3 = 0			  ## power_hw.c:302:11
 1e04504:    70 08             	r0 = r7			  ## power_hw.c:302:11
 1e04506:    41 08             	r1 = r4			  ## power_hw.c:302:11
 1e04508:    82 08             	r2 = r8			  ## power_hw.c:302:11
 1e0450a:    80 f3 24 1a       	call 13384 <__udivdi3 : 1e07956 >			  ## power_hw.c:302:11
 1e0450e:    e0 fd 50 26       	r2 = r6 | r5			  ## power_hw.c:306:9
 1e04512:    1c 70             	r12 = 1			  ## power_hw.c:306:9
 1e04514:    11 70             	r1 = 1			  ## power_hw.c:306:9
 1e04516:    01 34             	if (r2 != 0) goto 2 <system_code_total_size+0x4E : 1e0451a >			  ## power_hw.c:306:9
 1e04518:    01 70             	r1 = 0			  ## power_hw.c:306:9
 1e0451a:    0d b2             	r13 = r1 + r0			  ## power_hw.c:306:9
 1e0451c:    1d f6 20 b0       	[r11 + 32] = r13			  ## power_hw.c:424:20
 1e04520:    01 70             	r1 = 0			  ## power_hw.c:300:16
 1e04522:    03 70             	r3 = 0			  ## power_hw.c:300:16
 1e04524:    90 08             	r0 = r9			  ## power_hw.c:300:16
 1e04526:    a2 08             	r2 = r10			  ## power_hw.c:300:16
 1e04528:    80 f3 f6 19       	call 13292 <__muldi3 : 1e07918 >			  ## power_hw.c:300:16
 1e0452c:    04 08             	r4 = r0			  ## power_hw.c:300:16
 1e0452e:    15 08             	r5 = r1			  ## power_hw.c:300:16
 1e04530:    03 70             	r3 = 0			  ## power_hw.c:302:11
 1e04532:    82 08             	r2 = r8			  ## power_hw.c:302:11
 1e04534:    80 f3 13 1b       	call 13862 <__umoddi3 : 1e07b5e >			  ## power_hw.c:302:11
 1e04538:    06 08             	r6 = r0			  ## power_hw.c:302:11
 1e0453a:    17 08             	r7 = r1			  ## power_hw.c:302:11
 1e0453c:    03 70             	r3 = 0			  ## power_hw.c:302:11
 1e0453e:    40 08             	r0 = r4			  ## power_hw.c:302:11
 1e04540:    51 08             	r1 = r5			  ## power_hw.c:302:11
 1e04542:    82 08             	r2 = r8			  ## power_hw.c:302:11
 1e04544:    80 f3 07 1a       	call 13326 <__udivdi3 : 1e07956 >			  ## power_hw.c:302:11
 1e04548:    e0 fd 70 16       	r1 = r6 | r7			  ## power_hw.c:306:9
 1e0454c:    01 32             	if (r1 != 0) goto 2 <system_code_total_size+0x84 : 1e04550 >			  ## power_hw.c:306:9
 1e0454e:    0c 70             	r12 = 0			  ## power_hw.c:306:9
 1e04550:    c0 09             	r0 += r12			  ## power_hw.c:306:9
 1e04552:    10 f6 28 b0       	[r11 + 40] = r0			  ## power_hw.c:425:20
 1e04556:    d0 09             	r0 += r13			  ## power_hw.c:426:35
 1e04558:    10 f6 2c b0       	[r11 + 44] = r0			  ## power_hw.c:426:19
 1e0455c:    5d 01             	{pc, r13-r4} = [sp++]			  ## power_hw.c:431:1


low_power_group_query:
 1e0455e:    76 01             	[--sp] = {rets, r6-r4}			  ## power_hw.c:1022:0
 1e04560:    04 08             	r4 = r0			  ## power_hw.c:1022:0
 1e04562:    05 48             	r5 = [r4 + 0]			  ## list.h:124:18
 1e04564:    45 f2 15 00       	if (r5 == r4) goto 42 <low_power_group_query+0x34 : 1e04592 >			  ## list.h:124:18
 1e04568:    f6 07             	r6 = -1
 1e0456a:    31 4a             	r1 = [r5 + 12]			  ## power_hw.c:1032:16
 1e0456c:    f0 07             	r0 = -1			  ## power_hw.c:1032:16
 1e0456e:    05 22             	if (r1 == 0) goto 10 <low_power_group_query+0x1C : 1e0457a >			  ## power_hw.c:1032:16
 1e04570:    11 42             	r1 = [r1 + 4]			  ## power_hw.c:1032:31
 1e04572:    03 22             	if (r1 == 0) goto 6 <low_power_group_query+0x1C : 1e0457a >			  ## power_hw.c:1032:31
 1e04574:    20 4a             	r0 = [r5 + 8]			  ## power_hw.c:1033:43
 1e04576:    81 00             	call r1			  ## power_hw.c:1033:20
 1e04578:    0e 20             	if (r0 == 0) goto 28 <low_power_group_query+0x38 : 1e04596 >
 1e0457a:    06 f2 01 80       	if (r6 > r0) goto 2 <low_power_group_query+0x22 : 1e04580 >
 1e0457e:    60 08             	r0 = r6			  ## power_hw.c:1042:13
 1e04580:    05 4a             	r5 = [r5 + 0]
 1e04582:    06 08             	r6 = r0
 1e04584:    45 f2 f1 1f       	if (r5 != r4) goto -30 <low_power_group_query+0xC : 1e0456a >
 1e04588:    01 70             	r1 = 0			  ## power_hw.c:1050:9
 1e0458a:    f0 ef 05 00       	if (r0 == -1) goto 10 <low_power_group_query+0x3A : 1e04598 >			  ## power_hw.c:1050:9
 1e0458e:    01 08             	r1 = r0			  ## power_hw.c:1050:9
 1e04590:    03 18             	goto 6 <low_power_group_query+0x3A : 1e04598 >			  ## power_hw.c:1050:9
 1e04592:    f1 07             	r1 = -1
 1e04594:    01 18             	goto 2 <low_power_group_query+0x3A : 1e04598 >
 1e04596:    01 70             	r1 = 0
 1e04598:    10 08             	r0 = r1			  ## power_hw.c:1055:1
 1e0459a:    56 01             	{pc, r6-r4} = [sp++]			  ## power_hw.c:1055:1


__lp_timer_is_running:
 1e0459c:    c0 ff d3 1f 1a 00 	r0 = 1712083 <uECC_vli_cmp_unsafe+0x9AFD7 : 1a1fd3 >			  ## lp_timer_hw.c:261:0
 1e045a2:    00 60             	r0 = b[r0 + 0] (u)			  ## lp_timer_hw.c:262:13
 1e045a4:    81 fd 28 00       	r0 = uextra(r0, p:5, l:1)			  ## lp_timer_hw.c:262:12
 1e045a8:    20 00             	rts			  ## lp_timer_hw.c:262:5


__lp_timer_dump:
 1e045aa:    c0 ff d3 1f 1a 00 	r0 = 1712083 <uECC_vli_cmp_unsafe+0x9AFD7 : 1a1fd3 >			  ## lp_timer_hw.c:47:0
 1e045b0:    01 60             	r1 = b[r0 + 0] (u)			  ## lp_timer_hw.c:48:5
 1e045b2:    11 b3             	r1 |= 64			  ## lp_timer_hw.c:48:5
 1e045b4:    09 60             	b[r0 + 0] = r1			  ## lp_timer_hw.c:48:5
 1e045b6:    21 f9 00 00       	r1 = b[r0 + 0] (s)			  ## lp_timer_hw.c:49:13
 1e045ba:    f1 ef fc cf       	ifs (r1 > -1) goto -8 <__lp_timer_dump+0xC : 1e045b6 >			  ## lp_timer_hw.c:49:5
 1e045be:    20 00             	rts			  ## lp_timer_hw.c:71:1


__lp_timer_set_time:
 1e045c0:    75 01             	[--sp] = {rets, r5, r4}			  ## lp_timer_hw.c:75:0
 1e045c2:    02 08             	r2 = r0			  ## lp_timer_hw.c:75:0
 1e045c4:    c5 ff 00 50 00 00 	r5 = 20480 <nvbss_begin : 5000 >			  ## lp_timer_hw.c:75:0
 1e045ca:    00 f6 20 53       	r0 = [r5 + 800]			  ## power_hw.c:336:18
 1e045ce:    01 70             	r1 = 0			  ## power_hw.c:336:16
 1e045d0:    03 70             	r3 = 0			  ## power_hw.c:336:16
 1e045d2:    04 70             	r4 = 0			  ## power_hw.c:336:16
 1e045d4:    80 f3 a0 19       	call 13120 <__muldi3 : 1e07918 >			  ## power_hw.c:336:16
 1e045d8:    c2 ff 40 42 0f 00 	r2 = 1000000 <text_size+0xD3390 : f4240 >			  ## power_hw.c:338:11
 1e045de:    03 70             	r3 = 0			  ## power_hw.c:338:11
 1e045e0:    80 f3 b9 19       	call 13170 <__udivdi3 : 1e07956 >			  ## power_hw.c:338:11
 1e045e4:    b1 4a             	r1 = [r5 + 44]			  ## lp_timer_hw.c:80:25
 1e045e6:    10 f2 04 20       	if (r0 >= r1) goto 8 <__lp_timer_set_time+0x32 : 1e045f2 >			  ## lp_timer_hw.c:80:9
 1e045ea:    a0 72             	r0 = 42			  ## lp_timer_hw.c:81:9
 1e045ec:    80 f3 f2 56       	call 44516 <putchar : 1e0f3d4 >			  ## lp_timer_hw.c:81:9
 1e045f0:    17 18             	goto 46 <__lp_timer_set_time+0x60 : 1e04620 >			  ## lp_timer_hw.c:81:9
 1e045f2:    a1 4a             	r1 = [r5 + 40]			  ## lp_timer_hw.c:86:29
 1e045f4:    61 b0             	r1 = r0 - r1			  ## lp_timer_hw.c:86:19
 1e045f6:    0a d6             	r2 = r1 >> 24			  ## lp_timer_hw.c:90:27
 1e045f8:    c3 ff d1 1f 1a 00 	r3 = 1712081 <uECC_vli_cmp_unsafe+0x9AFD5 : 1a1fd1 >			  ## lp_timer_hw.c:90:27
 1e045fe:    aa 66             	b[r3 + 10] = r2			  ## lp_timer_hw.c:90:19
 1e04600:    0a d4             	r2 = r1 >> 16			  ## lp_timer_hw.c:91:27
 1e04602:    9a 66             	b[r3 + 9] = r2			  ## lp_timer_hw.c:91:19
 1e04604:    0a d2             	r2 = r1 >> 8			  ## lp_timer_hw.c:92:27
 1e04606:    8a 66             	b[r3 + 8] = r2			  ## lp_timer_hw.c:92:19
 1e04608:    79 66             	b[r3 + 7] = r1			  ## lp_timer_hw.c:93:19
 1e0460a:    01 d6             	r1 = r0 >> 24			  ## lp_timer_hw.c:98:27
 1e0460c:    69 66             	b[r3 + 6] = r1			  ## lp_timer_hw.c:98:19
 1e0460e:    01 d4             	r1 = r0 >> 16			  ## lp_timer_hw.c:99:27
 1e04610:    59 66             	b[r3 + 5] = r1			  ## lp_timer_hw.c:99:19
 1e04612:    01 d2             	r1 = r0 >> 8			  ## lp_timer_hw.c:100:27
 1e04614:    49 66             	b[r3 + 4] = r1			  ## lp_timer_hw.c:100:19
 1e04616:    38 66             	b[r3 + 3] = r0			  ## lp_timer_hw.c:101:19
 1e04618:    00 66             	r0 = b[r3 + 0] (u)			  ## lp_timer_hw.c:103:5
 1e0461a:    10 b0             	r0 |= 1			  ## lp_timer_hw.c:103:5
 1e0461c:    08 66             	b[r3 + 0] = r0			  ## lp_timer_hw.c:103:5
 1e0461e:    14 70             	r4 = 1			  ## lp_timer_hw.c:103:5
 1e04620:    40 08             	r0 = r4			  ## lp_timer_hw.c:108:1
 1e04622:    55 01             	{pc, r5, r4} = [sp++]			  ## lp_timer_hw.c:108:1


__tus_cnt:
 1e04624:    34 00             	[--sp] = rets			  ## power_hw.c:361:0
 1e04626:    c2 ff 40 42 0f 00 	r2 = 1000000 <text_size+0xD3390 : f4240 >			  ## power_hw.c:365:18
 1e0462c:    01 70             	r1 = 0			  ## power_hw.c:365:18
 1e0462e:    03 70             	r3 = 0			  ## power_hw.c:365:18
 1e04630:    80 f3 72 19       	call 13028 <__muldi3 : 1e07918 >			  ## power_hw.c:365:18
 1e04634:    c2 ff 00 50 00 00 	r2 = 20480 <nvbss_begin : 5000 >			  ## power_hw.c:367:25
 1e0463a:    02 f6 20 23       	r2 = [r2 + 800]			  ## power_hw.c:367:13
 1e0463e:    03 70             	r3 = 0			  ## power_hw.c:367:11
 1e04640:    88 01             	{rets} = [sp++]			  ## power_hw.c:367:11
 1e04642:    c0 f3 88 19       	goto 13072 <__udivdi3 : 1e07956 >			  ## power_hw.c:367:11


__lp_timer_get_period:
 1e04646:    c1 ff d4 1f 1a 00 	r1 = 1712084 <uECC_vli_cmp_unsafe+0x9AFD8 : 1a1fd4 >			  ## lp_timer_hw.c:162:0
 1e0464c:    00 62             	r0 = b[r1 + 0] (u)			  ## lp_timer_hw.c:165:11
 1e0464e:    12 62             	r2 = b[r1 + 1] (u)			  ## lp_timer_hw.c:166:13
 1e04650:    23 62             	r3 = b[r1 + 2] (u)			  ## lp_timer_hw.c:167:13
 1e04652:    31 62             	r1 = b[r1 + 3] (u)			  ## lp_timer_hw.c:168:13
 1e04654:    c8 fd 40 02       	r0 <= insert(r2, p:8, l:8)			  ## lp_timer_hw.c:166:9
 1e04658:    c8 fd 80 03       	r0 <= insert(r3, p:16, l:8)			  ## lp_timer_hw.c:167:9
 1e0465c:    c8 fd c0 01       	r0 <= insert(r1, p:24, l:8)			  ## lp_timer_hw.c:168:9
 1e04660:    e1 1f             	goto -62 <__tus_cnt : 1e04624 >			  ## lp_timer_hw.c:170:12


__low_power_suspend:
 1e04662:    76 01             	[--sp] = {rets, r6-r4}			  ## power_hw.c:659:0
 1e04664:    04 08             	r4 = r0			  ## power_hw.c:659:0
 1e04666:    06 48             	r6 = [r4 + 0]			  ## power_hw.c:659:0
 1e04668:    15 08             	r5 = r1			  ## power_hw.c:659:0
 1e0466a:    46 f2 0a 00       	if (r6 == r4) goto 20 <__low_power_suspend+0x20 : 1e04682 >			  ## power_hw.c:659:0
 1e0466e:    30 4c             	r0 = [r6 + 12]			  ## power_hw.c:663:16
 1e04670:    04 20             	if (r0 == 0) goto 8 <__low_power_suspend+0x18 : 1e0467a >			  ## power_hw.c:663:16
 1e04672:    21 40             	r1 = [r0 + 8]			  ## power_hw.c:663:31
 1e04674:    02 22             	if (r1 == 0) goto 4 <__low_power_suspend+0x18 : 1e0467a >			  ## power_hw.c:663:31
 1e04676:    20 4c             	r0 = [r6 + 8]			  ## power_hw.c:664:38
 1e04678:    81 00             	call r1			  ## power_hw.c:664:13
 1e0467a:    06 4c             	r6 = [r6 + 0]
 1e0467c:    46 f2 f7 1f       	if (r6 != r4) goto -18 <__low_power_suspend+0xC : 1e0466e >
 1e04680:    06 48             	r6 = [r4 + 0]
 1e04682:    46 f2 0a 00       	if (r6 == r4) goto 20 <__low_power_suspend+0x38 : 1e0469a >
 1e04686:    30 4c             	r0 = [r6 + 12]			  ## power_hw.c:668:16
 1e04688:    05 20             	if (r0 == 0) goto 10 <__low_power_suspend+0x32 : 1e04694 >			  ## power_hw.c:668:16
 1e0468a:    32 40             	r2 = [r0 + 12]			  ## power_hw.c:668:31
 1e0468c:    03 24             	if (r2 == 0) goto 6 <__low_power_suspend+0x32 : 1e04694 >			  ## power_hw.c:668:31
 1e0468e:    20 4c             	r0 = [r6 + 8]			  ## power_hw.c:669:37
 1e04690:    51 08             	r1 = r5			  ## power_hw.c:669:13
 1e04692:    82 00             	call r2			  ## power_hw.c:669:13
 1e04694:    06 4c             	r6 = [r6 + 0]
 1e04696:    46 f2 f6 1f       	if (r6 != r4) goto -20 <__low_power_suspend+0x24 : 1e04686 >
 1e0469a:    56 01             	{pc, r6-r4} = [sp++]			  ## power_hw.c:672:1


__hw_xosc_fsck_run:
 1e0469c:    c0 ff 00 11 1e 00 	r0 = 1970432 <uECC_vli_cmp_unsafe+0xDA104 : 1e1100 >			  ## xosc_fsck.c:43:0
 1e046a2:    00 f4 40 09       	[r0 + 0] |= 64			  ## xosc_fsck.c:45:5
 1e046a6:    01 40             	r1 = [r0 + 0]			  ## xosc_fsck.c:47:5
 1e046a8:    31 fd 70 1a       	r1 = r1 & 4294938623			  ## xosc_fsck.c:47:5
 1e046ac:    11 b7             	r1 |= 16384			  ## xosc_fsck.c:47:5
 1e046ae:    09 40             	[r0 + 0] = r1			  ## xosc_fsck.c:47:5
 1e046b0:    01 40             	r1 = [r0 + 0]			  ## xosc_fsck.c:48:5
 1e046b2:    31 fd 0e 19       	r1 = r1 & 4294967281			  ## xosc_fsck.c:48:5
 1e046b6:    01 fd 0c 19       	r1 = r1 | 12			  ## xosc_fsck.c:48:5
 1e046ba:    09 40             	[r0 + 0] = r1			  ## xosc_fsck.c:48:5
 1e046bc:    01 40             	r1 = [r0 + 0]			  ## xosc_fsck.c:49:5
 1e046be:    31 fd 0f 1a       	r1 = r1 & 4294963455			  ## xosc_fsck.c:49:5
 1e046c2:    01 fd 07 1a       	r1 = r1 | 1792			  ## xosc_fsck.c:49:5
 1e046c6:    09 40             	[r0 + 0] = r1			  ## xosc_fsck.c:49:5
 1e046c8:    00 f4 40 09       	[r0 + 0] |= 64			  ## xosc_fsck.c:51:5
 1e046cc:    00 f4 01 09       	[r0 + 0] |= 1			  ## xosc_fsck.c:52:5
 1e046d0:    01 40             	r1 = [r0 + 0]			  ## xosc_fsck.c:55:24
 1e046d2:    51 04             	r1 = r1.b0 (s)			  ## xosc_fsck.c:55:12
 1e046d4:    f1 ef fc cf       	ifs (r1 > -1) goto -8 <__hw_xosc_fsck_run+0x34 : 1e046d0 >			  ## xosc_fsck.c:55:5
 1e046d8:    11 40             	r1 = [r0 + 4]			  ## xosc_fsck.c:60:86
 1e046da:    01 40             	r1 = [r0 + 0]			  ## xosc_fsck.c:65:5
 1e046dc:    71 b0             	r1 &= 4294967294			  ## xosc_fsck.c:65:5
 1e046de:    09 40             	[r0 + 0] = r1			  ## xosc_fsck.c:65:5
 1e046e0:    20 00             	rts			  ## xosc_fsck.c:66:1


__lp_timer_get_pass_time:
 1e046e2:    c1 ff d3 1f 1a 00 	r1 = 1712083 <uECC_vli_cmp_unsafe+0x9AFD7 : 1a1fd3 >			  ## lp_timer_hw.c:146:0
 1e046e8:    00 62             	r0 = b[r1 + 0] (u)			  ## lp_timer_hw.c:147:5
 1e046ea:    10 b3             	r0 |= 64			  ## lp_timer_hw.c:147:5
 1e046ec:    08 62             	b[r1 + 0] = r0			  ## lp_timer_hw.c:147:5
 1e046ee:    00 00             	nop			  ## lp_timer_hw.c:148:5
 1e046f0:    00 00             	nop			  ## lp_timer_hw.c:149:5
 1e046f2:    20 f9 00 10       	r0 = b[r1 + 0] (s)			  ## lp_timer_hw.c:150:13
 1e046f6:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <__lp_timer_get_pass_time+0x10 : 1e046f2 >			  ## lp_timer_hw.c:150:5
 1e046fa:    90 62             	r0 = b[r1 + 9] (u)			  ## lp_timer_hw.c:153:12
 1e046fc:    a2 62             	r2 = b[r1 + 10] (u)			  ## lp_timer_hw.c:154:14
 1e046fe:    b3 62             	r3 = b[r1 + 11] (u)			  ## lp_timer_hw.c:155:14
 1e04700:    c1 62             	r1 = b[r1 + 12] (u)			  ## lp_timer_hw.c:156:14
 1e04702:    c8 fd 40 02       	r0 <= insert(r2, p:8, l:8)			  ## lp_timer_hw.c:154:10
 1e04706:    c8 fd 80 03       	r0 <= insert(r3, p:16, l:8)			  ## lp_timer_hw.c:155:10
 1e0470a:    c8 fd c0 01       	r0 <= insert(r1, p:24, l:8)			  ## lp_timer_hw.c:156:10
 1e0470e:    8a 1f             	goto -236 <__tus_cnt : 1e04624 >			  ## lp_timer_hw.c:158:12


__tcnt_us:
 1e04710:    78 01             	[--sp] = {rets, r8-r4}			  ## power_hw.c:295:0
 1e04712:    02 08             	r2 = r0			  ## power_hw.c:295:0
 1e04714:    c0 ff 00 50 00 00 	r0 = 20480 <nvbss_begin : 5000 >			  ## power_hw.c:300:30
 1e0471a:    00 f6 20 03       	r0 = [r0 + 800]			  ## power_hw.c:300:18
 1e0471e:    01 70             	r1 = 0			  ## power_hw.c:300:16
 1e04720:    03 70             	r3 = 0			  ## power_hw.c:300:16
 1e04722:    80 f3 f9 18       	call 12786 <__muldi3 : 1e07918 >			  ## power_hw.c:300:16
 1e04726:    04 08             	r4 = r0			  ## power_hw.c:300:16
 1e04728:    15 08             	r5 = r1			  ## power_hw.c:300:16
 1e0472a:    c8 ff 40 42 0f 00 	r8 = 1000000 <text_size+0xD3390 : f4240 >			  ## power_hw.c:302:11
 1e04730:    03 70             	r3 = 0			  ## power_hw.c:302:11
 1e04732:    82 08             	r2 = r8			  ## power_hw.c:302:11
 1e04734:    80 f3 13 1a       	call 13350 <__umoddi3 : 1e07b5e >			  ## power_hw.c:302:11
 1e04738:    07 08             	r7 = r0			  ## power_hw.c:302:11
 1e0473a:    16 08             	r6 = r1			  ## power_hw.c:302:11
 1e0473c:    03 70             	r3 = 0			  ## power_hw.c:302:11
 1e0473e:    40 08             	r0 = r4			  ## power_hw.c:302:11
 1e04740:    51 08             	r1 = r5			  ## power_hw.c:302:11
 1e04742:    82 08             	r2 = r8			  ## power_hw.c:302:11
 1e04744:    80 f3 07 19       	call 12814 <__udivdi3 : 1e07956 >			  ## power_hw.c:302:11
 1e04748:    e0 fd 60 27       	r2 = r7 | r6			  ## power_hw.c:306:9
 1e0474c:    11 70             	r1 = 1			  ## power_hw.c:306:9
 1e0474e:    01 34             	if (r2 != 0) goto 2 <__tcnt_us+0x42 : 1e04752 >			  ## power_hw.c:306:9
 1e04750:    01 70             	r1 = 0			  ## power_hw.c:306:9
 1e04752:    10 09             	r0 += r1			  ## power_hw.c:306:9
 1e04754:    58 01             	{pc, r8-r4} = [sp++]			  ## power_hw.c:309:5


wdt_clear:
 1e04756:    c0 ff 88 1f 1a 00 	r0 = 1712008 <uECC_vli_cmp_unsafe+0x9AF8C : 1a1f88 >			  ## wdt.c:29:0
 1e0475c:    01 60             	r1 = b[r0 + 0] (u)			  ## wdt.c:30:18
 1e0475e:    11 b3             	r1 |= 64			  ## wdt.c:30:18
 1e04760:    09 60             	b[r0 + 0] = r1			  ## wdt.c:30:18
 1e04762:    20 00             	rts			  ## wdt.c:31:1


wdt_close:
 1e04764:    c0 ff 88 1f 1a 00 	r0 = 1712008 <uECC_vli_cmp_unsafe+0x9AF8C : 1a1f88 >			  ## wdt.c:13:0
 1e0476a:    01 60             	r1 = b[r0 + 0] (u)			  ## wdt.c:14:18
 1e0476c:    71 b2             	r1 &= 4294967279			  ## wdt.c:14:18
 1e0476e:    09 60             	b[r0 + 0] = r1			  ## wdt.c:14:18
 1e04770:    20 00             	rts			  ## wdt.c:15:1


norflash_open:
 1e04772:    75 01             	[--sp] = {rets, r5, r4}			  ## vm_sfc.c:941:0
 1e04774:    c5 ff a0 22 00 00 	r5 = 8864 <_sdfile_handl : 22a0 >			  ## vm_sfc.c:941:0
 1e0477a:    01 f9 e3 50       	r1 = b[r5 + 227] (u)			  ## vm_sfc.c:944:21
 1e0477e:    04 08             	r4 = r0			  ## vm_sfc.c:944:21
 1e04780:    18 32             	if (r1 != 0) goto 48 <norflash_open+0x40 : 1e047b2 >			  ## vm_sfc.c:944:21
 1e04782:    c0 ff 00 1c 1e 00 	r0 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >
 1e04788:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:928:18
 1e0478a:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:928:18
 1e0478c:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:928:18
 1e0478e:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:929:18
 1e04790:    31 fd 0c 1a       	r1 = r1 & 4294964223			  ## vm_sfc.c:929:18
 1e04794:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:929:18
 1e04796:    00 f4 60 0a       	[r0 + 0] |= 24576			  ## vm_sfc.c:930:18
 1e0479a:    00 fc 14 38       	r0 = r0 + 14356			  ## vm_sfc.c:930:18
 1e0479e:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:931:20
 1e047a0:    f1 b9             	r1 &= 4294443007			  ## vm_sfc.c:931:20
 1e047a2:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:931:20
 1e047a4:    50 fc 08 01       	r0 = r5 + 264			  ## vm_sfc.c:934:5
 1e047a8:    98 f3 38 13       	call 3155568 <os_mutex_create : 106e1c >			  ## vm_sfc.c:934:5
 1e047ac:    10 70             	r0 = 1			  ## vm_sfc.c:936:21
 1e047ae:    10 f9 e3 50       	b[r5 + 227] = r0			  ## vm_sfc.c:936:21
 1e047b2:    0a 28             	if (r4 == 0) goto 20 <norflash_open+0x56 : 1e047c8 >
 1e047b4:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## vm_sfc.c:950:32
 1e047ba:    01 fc d8 01       	r1 = r0 + 472			  ## vm_sfc.c:949:17
 1e047be:    09 48             	[r4 + 0] = r1			  ## vm_sfc.c:949:17
 1e047c0:    51 fc d0 00       	r1 = r5 + 208			  ## vm_sfc.c:950:32
 1e047c4:    11 f6 e8 01       	[r0 + 488] = r1			  ## vm_sfc.c:950:32
 1e047c8:    c0 ff b4 4c 00 00 	r0 = 19636 <lmp_conn_for_link : 4cb4 >			  ## vm_sfc.c:953:5
 1e047ce:    c1 ff b4 4c 00 00 	r1 = 19636 <lmp_conn_for_link : 4cb4 >			  ## vm_sfc.c:953:5
 1e047d4:    21 b2             	r1 = r1 - r0			  ## vm_sfc.c:953:5
 1e047d6:    10 70             	r0 = 1			  ## vm_sfc.c:953:5
 1e047d8:    28 ff 10 1a 01 00 	if (r1 > 4096) goto 2 <norflash_open+0x6E : 1e047e0 >			  ## vm_sfc.c:953:5
 1e047de:    00 70             	r0 = 0			  ## vm_sfc.c:953:5
 1e047e0:    55 01             	{pc, r5, r4} = [sp++]			  ## vm_sfc.c:953:5


p11_init:
 1e047e2:    77 01             	[--sp] = {rets, r7-r4}			  ## power_hw.c:1478:0
 1e047e4:    c0 ff 04 3e 1e 00 	r0 = 1981956 <uECC_vli_cmp_unsafe+0xDCE08 : 1e3e04 >			  ## power_hw.c:1478:0
 1e047ea:    01 40             	r1 = [r0 + 0]			  ## power_hw.c:1482:14
 1e047ec:    05 f3 fd 1f       	if ((r1 & 32) == 0) goto -6 <p11_init+0x8 : 1e047ea >			  ## power_hw.c:1482:30
 1e047f0:    01 40             	r1 = [r0 + 0]			  ## power_hw.c:1482:33
 1e047f2:    06 f3 fa 1f       	if ((r1 & 64) == 0) goto -12 <p11_init+0x8 : 1e047ea >			  ## power_hw.c:1482:33
 1e047f6:    f1 7f             	r1 = 255
 1e047f8:    c2 ff 80 1f 1a 00 	r2 = 1712000 <uECC_vli_cmp_unsafe+0x9AF84 : 1a1f80 >
 1e047fe:    e3 7e             	r3 = 238
 1e04800:    b4 7a             	r4 = 171
 1e04802:    e5 70             	r5 = 14
 1e04804:    56 75             	r6 = 85
 1e04806:    09 64             	b[r2 + 0] = r1			  ## power_hw.c:1488:20
 1e04808:    0b 64             	b[r2 + 0] = r3			  ## power_hw.c:1489:20
 1e0480a:    0c 64             	b[r2 + 0] = r4			  ## power_hw.c:1490:20
 1e0480c:    0d 64             	b[r2 + 0] = r5			  ## power_hw.c:1491:20
 1e0480e:    0e 64             	b[r2 + 0] = r6			  ## power_hw.c:1492:20
 1e04810:    07 40             	r7 = [r0 + 0]			  ## power_hw.c:1493:15
 1e04812:    00 f3 f8 7f       	if ((r7 & 1) == 0) goto -16 <p11_init+0x24 : 1e04806 >			  ## power_hw.c:1493:5
 1e04816:    57 01             	{pc, r7-r4} = [sp++]			  ## power_hw.c:1495:1


wdt_init:
 1e04818:    c0 71             	r0 = 28			  ## wdt.c:79:0
 1e0481a:    c1 ff 88 1f 1a 00 	r1 = 1712008 <uECC_vli_cmp_unsafe+0x9AF8C : 1a1f88 >			  ## wdt.c:79:0
 1e04820:    08 62             	b[r1 + 0] = r0			  ## wdt.c:79:0
 1e04822:    00 70             	r0 = 0			  ## wdt.c:79:0
 1e04824:    18 62             	b[r1 + 1] = r0			  ## wdt.c:79:0
 1e04826:    20 00             	rts			  ## wdt.c:87:1


efuse_dump:
 1e04828:    74 01             	[--sp] = {rets, r4}			  ## efuse.c:174:0
 1e0482a:    c4 ff 00 08 00 00 	r4 = 2048 <report_mmu_tlb_size : 800 >			  ## efuse.c:15:22
 1e04830:    e1 58             	r1 = h[r4 + 28] (u)			  ## efuse.c:175:35
 1e04832:    c0 ff 2f 4e e1 01 	r0 = 31542831 <update_target_end+0x1FA7 : 1e14e2f >			  ## efuse.c:175:5
 1e04838:    80 f3 47 54       	call 43150 <printf : 1e0f0ca >			  ## efuse.c:175:5
 1e0483c:    f0 58             	r0 = h[r4 + 30] (u)			  ## efuse.c:15:22
 1e0483e:    21 fd 0f 09       	r1 = r0 & 15			  ## efuse.c:176:35
 1e04842:    c0 ff 42 4e e1 01 	r0 = 31542850 <update_target_end+0x1FBA : 1e14e42 >			  ## efuse.c:176:5
 1e04848:    80 f3 3f 54       	call 43134 <printf : 1e0f0ca >			  ## efuse.c:176:5
 1e0484c:    f0 58             	r0 = h[r4 + 30] (u)			  ## efuse.c:21:23
 1e0484e:    85 fd 20 10       	r1 = uextra(r0, p:4, l:5)			  ## efuse.c:21:40
 1e04852:    c0 ff 55 4e e1 01 	r0 = 31542869 <update_target_end+0x1FCD : 1e14e55 >			  ## efuse.c:177:5
 1e04858:    14 01             	{rets, r4} = [sp++]			  ## efuse.c:177:5
 1e0485a:    c0 f3 36 54       	goto 43116 <printf : 1e0f0ca >			  ## efuse.c:177:5


reset_source_dump:
 1e0485e:    7a 01             	[--sp] = {rets, r10-r4}			  ## power_reset.c:100:0
 1e04860:    c6 ff b0 20 00 00 	r6 = 8368 <gatt_client_conn_handle : 20b0 >			  ## power_reset.c:100:0
 1e04866:    00 70             	r0 = 0			  ## power_reset.c:100:0
 1e04868:    10 f6 98 60       	[r6 + 152] = r0			  ## power_reset.c:103:24
 1e0486c:    c7 ff f4 1f 1a 00 	r7 = 1712116 <uECC_vli_cmp_unsafe+0x9AFF8 : 1a1ff4 >			  ## power_reset.c:103:24
 1e04872:    40 6e             	r0 = b[r7 + 4] (u)			  ## power_reset.c:106:5
 1e04874:    70 b2             	r0 &= 4294967279			  ## power_reset.c:106:5
 1e04876:    48 6e             	b[r7 + 4] = r0			  ## power_reset.c:106:5
 1e04878:    74 fc 1e f8       	r4 = r7 + -2018			  ## power_reset.c:106:5
 1e0487c:    30 68             	r0 = b[r4 + 3] (u)			  ## power_reset.c:107:5
 1e0487e:    f0 b2             	r0 &= 4294967263			  ## power_reset.c:107:5
 1e04880:    38 68             	b[r4 + 3] = r0			  ## power_reset.c:107:5
 1e04882:    20 fb 1e 0b       	r0 = 1966080			  ## power_reset.c:107:5
 1e04886:    01 40             	r1 = [r0 + 0]			  ## power_reset.c:109:20
 1e04888:    51 04             	r1 = r1.b0 (s)			  ## power_reset.c:109:38
 1e0488a:    01 e0 0a b0       	ifs (r1 < 0) goto 20 <reset_source_dump+0x44 : 1e048a2 >			  ## power_reset.c:109:9
 1e0488e:    60 fc 98 00       	r0 = r6 + 152			  ## power_reset.c:110:28
 1e04892:    00 f4 80 09       	[r0 + 0] |= 128			  ## power_reset.c:110:28
 1e04896:    c0 ff 60 66 e1 01 	r0 = 31549024 <gpio_regs+0x1A4 : 1e16660 >			  ## power_reset.c:111:9
 1e0489c:    1a 01             	{rets, r10-r4} = [sp++]			  ## power_reset.c:111:9
 1e0489e:    c0 f3 6a 55       	goto 43732 <puts : 1e0f376 >			  ## power_reset.c:111:9
 1e048a2:    00 f4 40 09       	[r0 + 0] |= 64			  ## power_reset.c:114:23
 1e048a6:    05 f6 c0 00       	r5 = [r0 + 192]			  ## power_reset.c:116:19
 1e048aa:    00 f6 98 60       	r0 = [r6 + 152]			  ## power_reset.c:117:24
 1e048ae:    41 05             	r1 = r5.b0 (u)			  ## power_reset.c:117:27
 1e048b0:    50 b2             	r0 |= r1			  ## power_reset.c:117:24
 1e048b2:    10 f6 98 60       	[r6 + 152] = r0			  ## power_reset.c:117:24
 1e048b6:    c0 ff 54 4f e1 01 	r0 = 31543124 <update_target_end+0x20CC : 1e14f54 >			  ## power_reset.c:119:5
 1e048bc:    80 f3 05 54       	call 43018 <printf : 1e0f0ca >			  ## power_reset.c:119:5
 1e048c0:    00 f3 be 50       	if ((r5 & 1) == 0) goto 380 <reset_source_dump+0x1E2 : 1e04a40 >			  ## power_reset.c:119:5
 1e048c4:    c0 ff 73 4f e1 01 	r0 = 31543155 <update_target_end+0x20EB : 1e14f73 >			  ## power_reset.c:122:9
 1e048ca:    80 f3 54 55       	call 43688 <puts : 1e0f376 >			  ## power_reset.c:122:9
 1e048ce:    20 f9 78 47       	r0 = b[r4 + 1912] (s)			  ## power_reset.c:63:10
 1e048d2:    00 e0 08 b0       	ifs (r0 < 0) goto 16 <reset_source_dump+0x88 : 1e048e6 >			  ## power_reset.c:63:9
 1e048d6:    60 fc 98 00       	r0 = r6 + 152			  ## power_reset.c:64:28
 1e048da:    00 f4 80 0a       	[r0 + 0] |= 32768			  ## power_reset.c:64:28
 1e048de:    c0 ff c0 65 e1 01 	r0 = 31548864 <gpio_regs+0x104 : 1e165c0 >			  ## power_reset.c:65:9
 1e048e4:    ab 18             	goto 342 <reset_source_dump+0x1DE : 1e04a3c >			  ## power_reset.c:65:9
 1e048e6:    40 fc 78 07       	r0 = r4 + 1912
 1e048ea:    01 60             	r1 = b[r0 + 0] (u)			  ## power_reset.c:69:17
 1e048ec:    11 b3             	r1 |= 64			  ## power_reset.c:69:17
 1e048ee:    09 60             	b[r0 + 0] = r1			  ## power_reset.c:69:17
 1e048f0:    0a f9 04 00       	r10 = b[r0 + 4] (u)			  ## power_reset.c:72:28
 1e048f4:    00 f6 98 60       	r0 = [r6 + 152]			  ## power_reset.c:72:24
 1e048f8:    f0 fd 40 1a       	r1 = r10 << 8			  ## power_reset.c:72:32
 1e048fc:    50 b2             	r0 |= r1			  ## power_reset.c:72:24
 1e048fe:    10 f6 98 60       	[r6 + 152] = r0			  ## power_reset.c:72:24
 1e04902:    c0 ff 15 4f e1 01 	r0 = 31543061 <update_target_end+0x208D : 1e14f15 >			  ## power_reset.c:74:5
 1e04908:    a1 08             	r1 = r10			  ## power_reset.c:74:5
 1e0490a:    80 f3 de 53       	call 42940 <printf : 1e0f0ca >			  ## power_reset.c:74:5
 1e0490e:    00 f3 05 a0       	if ((r10 & 1) == 0) goto 10 <reset_source_dump+0xBE : 1e0491c >			  ## power_reset.c:74:5
 1e04912:    c0 ff 33 4f e1 01 	r0 = 31543091 <update_target_end+0x20AB : 1e14f33 >			  ## power_reset.c:77:9
 1e04918:    80 f3 2d 55       	call 43610 <puts : 1e0f376 >			  ## power_reset.c:77:9
 1e0491c:    01 f3 05 a0       	if ((r10 & 2) == 0) goto 10 <reset_source_dump+0xCC : 1e0492a >
 1e04920:    c0 ff e0 65 e1 01 	r0 = 31548896 <gpio_regs+0x124 : 1e165e0 >			  ## power_reset.c:80:9
 1e04926:    80 f3 26 55       	call 43596 <puts : 1e0f376 >			  ## power_reset.c:80:9
 1e0492a:    02 f3 74 a0       	if ((r10 & 4) == 0) goto 232 <reset_source_dump+0x1B8 : 1e04a16 >
 1e0492e:    c0 ff 3c 4f e1 01 	r0 = 31543100 <update_target_end+0x20B4 : 1e14f3c >			  ## power_reset.c:83:9
 1e04934:    80 f3 1f 55       	call 43582 <puts : 1e0f376 >			  ## power_reset.c:83:9
 1e04938:    20 f9 1e 40       	r0 = b[r4 + 30] (s)			  ## power_reset.c:14:10
 1e0493c:    00 e0 0a b0       	ifs (r0 < 0) goto 20 <reset_source_dump+0xF6 : 1e04954 >			  ## power_reset.c:14:9
 1e04940:    60 fc 98 00       	r0 = r6 + 152			  ## power_reset.c:15:28
 1e04944:    00 f4 80 0b       	[r0 + 0] |= 8388608			  ## power_reset.c:15:28
 1e04948:    c0 ff 10 65 e1 01 	r0 = 31548688 <gpio_regs+0x54 : 1e16510 >			  ## power_reset.c:16:9
 1e0494e:    80 f3 12 55       	call 43556 <puts : 1e0f376 >			  ## power_reset.c:16:9
 1e04952:    61 18             	goto 194 <reset_source_dump+0x1B8 : 1e04a16 >			  ## power_reset.c:16:9
 1e04954:    e9 99             	r9 = r4 + 30
 1e04956:    00 f9 00 90       	r0 = b[r9 + 0] (u)			  ## power_reset.c:20:17
 1e0495a:    10 b3             	r0 |= 64			  ## power_reset.c:20:17
 1e0495c:    10 f9 00 90       	b[r9 + 0] = r0			  ## power_reset.c:20:17
 1e04960:    08 f9 00 40       	r8 = b[r4 + 0] (u)			  ## power_reset.c:23:28
 1e04964:    00 f6 98 60       	r0 = [r6 + 152]			  ## power_reset.c:23:24
 1e04968:    f0 fd 80 18       	r1 = r8 << 16			  ## power_reset.c:23:32
 1e0496c:    50 b2             	r0 |= r1			  ## power_reset.c:23:24
 1e0496e:    10 f6 98 60       	[r6 + 152] = r0			  ## power_reset.c:23:24
 1e04972:    c0 ff d9 4e e1 01 	r0 = 31543001 <update_target_end+0x2051 : 1e14ed9 >			  ## power_reset.c:25:5
 1e04978:    81 08             	r1 = r8			  ## power_reset.c:25:5
 1e0497a:    80 f3 a6 53       	call 42828 <printf : 1e0f0ca >			  ## power_reset.c:25:5
 1e0497e:    00 f3 05 80       	if ((r8 & 1) == 0) goto 10 <reset_source_dump+0x12E : 1e0498c >			  ## power_reset.c:25:5
 1e04982:    c0 ff f7 4e e1 01 	r0 = 31543031 <update_target_end+0x206F : 1e14ef7 >			  ## power_reset.c:28:9
 1e04988:    80 f3 f5 54       	call 43498 <puts : 1e0f376 >			  ## power_reset.c:28:9
 1e0498c:    01 f3 05 80       	if ((r8 & 2) == 0) goto 10 <reset_source_dump+0x13C : 1e0499a >
 1e04990:    c0 ff 01 4f e1 01 	r0 = 31543041 <update_target_end+0x2079 : 1e14f01 >			  ## power_reset.c:31:9
 1e04996:    80 f3 ee 54       	call 43484 <puts : 1e0f376 >			  ## power_reset.c:31:9
 1e0499a:    02 f3 05 80       	if ((r8 & 4) == 0) goto 10 <reset_source_dump+0x14A : 1e049a8 >
 1e0499e:    c0 ff 0b 4f e1 01 	r0 = 31543051 <update_target_end+0x2083 : 1e14f0b >			  ## power_reset.c:34:9
 1e049a4:    80 f3 e7 54       	call 43470 <puts : 1e0f376 >			  ## power_reset.c:34:9
 1e049a8:    03 f3 05 80       	if ((r8 & 8) == 0) goto 10 <reset_source_dump+0x158 : 1e049b6 >
 1e049ac:    c0 ff 0f 4f e1 01 	r0 = 31543055 <update_target_end+0x2087 : 1e14f0f >			  ## power_reset.c:37:9
 1e049b2:    80 f3 e0 54       	call 43456 <puts : 1e0f376 >			  ## power_reset.c:37:9
 1e049b6:    04 f3 05 80       	if ((r8 & 16) == 0) goto 10 <reset_source_dump+0x166 : 1e049c4 >
 1e049ba:    c0 ff 30 65 e1 01 	r0 = 31548720 <gpio_regs+0x74 : 1e16530 >			  ## power_reset.c:40:9
 1e049c0:    80 f3 d9 54       	call 43442 <puts : 1e0f376 >			  ## power_reset.c:40:9
 1e049c4:    05 f3 27 80       	if ((r8 & 32) == 0) goto 78 <reset_source_dump+0x1B8 : 1e04a16 >
 1e049c8:    c0 ff 50 65 e1 01 	r0 = 31548752 <gpio_regs+0x94 : 1e16550 >			  ## power_reset.c:43:9
 1e049ce:    80 f3 d2 54       	call 43428 <puts : 1e0f376 >			  ## power_reset.c:43:9
 1e049d2:    00 f9 1a 90       	r0 = b[r9 + 26] (u)			  ## power_reset.c:45:13
 1e049d6:    01 ff ab 00 0a 00 	if (r0 != 171) goto 20 <reset_source_dump+0x192 : 1e049f0 >			  ## power_reset.c:45:13
 1e049dc:    c0 ff 80 65 e1 01 	r0 = 31548800 <gpio_regs+0xC4 : 1e16580 >			  ## power_reset.c:46:13
 1e049e2:    80 f3 c8 54       	call 43408 <puts : 1e0f376 >			  ## power_reset.c:46:13
 1e049e6:    60 fc 98 00       	r0 = r6 + 152			  ## power_reset.c:47:32
 1e049ea:    00 f4 01 0c       	[r0 + 0] |= 16777216			  ## power_reset.c:47:32
 1e049ee:    0e 18             	goto 28 <reset_source_dump+0x1AE : 1e04a0c >			  ## power_reset.c:47:32
 1e049f0:    00 f9 1a 90       	r0 = b[r9 + 26] (u)			  ## power_reset.c:49:20
 1e049f4:    01 ff ac 00 0e 00 	if (r0 != 172) goto 28 <reset_source_dump+0x1B8 : 1e04a16 >			  ## power_reset.c:49:20
 1e049fa:    c0 ff a0 65 e1 01 	r0 = 31548832 <gpio_regs+0xE4 : 1e165a0 >			  ## power_reset.c:50:13
 1e04a00:    80 f3 b9 54       	call 43378 <puts : 1e0f376 >			  ## power_reset.c:50:13
 1e04a04:    60 fc 98 00       	r0 = r6 + 152			  ## power_reset.c:51:32
 1e04a08:    00 f4 02 0c       	[r0 + 0] |= 33554432			  ## power_reset.c:51:32
 1e04a0c:    00 f9 1a 90       	r0 = b[r9 + 26] (u)
 1e04a10:    00 70             	r0 = 0
 1e04a12:    10 f9 1a 90       	b[r9 + 26] = r0
 1e04a16:    03 f3 05 a0       	if ((r10 & 8) == 0) goto 10 <reset_source_dump+0x1C6 : 1e04a24 >
 1e04a1a:    c0 ff 4a 4f e1 01 	r0 = 31543114 <update_target_end+0x20C2 : 1e14f4a >			  ## power_reset.c:87:9
 1e04a20:    80 f3 a9 54       	call 43346 <puts : 1e0f376 >			  ## power_reset.c:87:9
 1e04a24:    04 f3 05 a0       	if ((r10 & 16) == 0) goto 10 <reset_source_dump+0x1D4 : 1e04a32 >
 1e04a28:    c0 ff 10 66 e1 01 	r0 = 31548944 <gpio_regs+0x154 : 1e16610 >			  ## power_reset.c:90:9
 1e04a2e:    80 f3 a2 54       	call 43332 <puts : 1e0f376 >			  ## power_reset.c:90:9
 1e04a32:    05 f3 05 a0       	if ((r10 & 32) == 0) goto 10 <reset_source_dump+0x1E2 : 1e04a40 >
 1e04a36:    c0 ff 40 66 e1 01 	r0 = 31548992 <gpio_regs+0x184 : 1e16640 >			  ## power_reset.c:94:9
 1e04a3c:    80 f3 9b 54       	call 43318 <puts : 1e0f376 >
 1e04a40:    01 f3 05 50       	if ((r5 & 2) == 0) goto 10 <reset_source_dump+0x1F0 : 1e04a4e >
 1e04a44:    c0 ff 81 4f e1 01 	r0 = 31543169 <update_target_end+0x20F9 : 1e14f81 >			  ## power_reset.c:126:9
 1e04a4a:    80 f3 94 54       	call 43304 <puts : 1e0f376 >			  ## power_reset.c:126:9
 1e04a4e:    02 f3 05 50       	if ((r5 & 4) == 0) goto 10 <reset_source_dump+0x1FE : 1e04a5c >
 1e04a52:    c0 ff 8a 4f e1 01 	r0 = 31543178 <update_target_end+0x2102 : 1e14f8a >			  ## power_reset.c:129:9
 1e04a58:    80 f3 8d 54       	call 43290 <puts : 1e0f376 >			  ## power_reset.c:129:9
 1e04a5c:    05 f3 05 50       	if ((r5 & 32) == 0) goto 10 <reset_source_dump+0x20C : 1e04a6a >
 1e04a60:    c0 ff 80 66 e1 01 	r0 = 31549056 <gpio_regs+0x1C4 : 1e16680 >			  ## power_reset.c:132:9
 1e04a66:    80 f3 86 54       	call 43276 <puts : 1e0f376 >			  ## power_reset.c:132:9
 1e04a6a:    06 f3 0c 50       	if ((r5 & 64) == 0) goto 24 <reset_source_dump+0x228 : 1e04a86 >
 1e04a6e:    c0 ff b0 66 e1 01 	r0 = 31549104 <gpio_regs+0x1F4 : 1e166b0 >			  ## power_reset.c:136:9
 1e04a74:    80 f3 7f 54       	call 43262 <puts : 1e0f376 >			  ## power_reset.c:136:9
 1e04a78:    00 6e             	r0 = b[r7 + 0] (u)			  ## power_reset.c:137:13
 1e04a7a:    05 f3 04 00       	if ((r0 & 32) == 0) goto 8 <reset_source_dump+0x228 : 1e04a86 >			  ## power_reset.c:137:13
 1e04a7e:    60 fc 98 00       	r0 = r6 + 152			  ## power_reset.c:138:32
 1e04a82:    00 f4 04 0c       	[r0 + 0] |= 67108864			  ## power_reset.c:138:32
 1e04a86:    5a 01             	{pc, r10-r4} = [sp++]


timer1_init:
 1e04a88:    34 00             	[--sp] = rets			  ## timer.c:197:0
 1e04a8a:    c0 ff 00 05 1e 00 	r0 = 1967360 <uECC_vli_cmp_unsafe+0xD9504 : 1e0500 >			  ## timer.c:198:20
 1e04a90:    c0 f4 40 0a       	[r0 + 0] = 16384			  ## timer.c:198:20
 1e04a94:    c2 ff 90 36 e0 01 	r2 = 31471248 <timer1_isr : 1e03690 >			  ## timer.c:200:5
 1e04a9a:    50 70             	r0 = 5			  ## timer.c:200:5
 1e04a9c:    11 70             	r1 = 1			  ## timer.c:200:5
 1e04a9e:    80 f3 73 58       	call 45286 <request_irq : 1e0fb88 >			  ## timer.c:200:5
 1e04aa2:    00 70             	r0 = 0			  ## timer.c:204:5
 1e04aa4:    30 00             	pc = [sp++]			  ## timer.c:204:5


get_dev_id:
 1e04aa6:    77 01             	[--sp] = {rets, r7-r4}			  ## debug.c:154:0
 1e04aa8:    04 08             	r4 = r0			  ## debug.c:154:0
 1e04aaa:    98 f3 27 12       	call 3155022 <strlen : 106efc >			  ## debug.c:158:48
 1e04aae:    05 08             	r5 = r0			  ## debug.c:158:48
 1e04ab0:    07 70             	r7 = 0			  ## debug.c:158:48
 1e04ab2:    c6 ff 94 60 e1 01 	r6 = 31547540 <dev_id_list : 1e16094 >			  ## debug.c:158:48
 1e04ab8:    60 08             	r0 = r6			  ## debug.c:158:14
 1e04aba:    41 08             	r1 = r4			  ## debug.c:158:14
 1e04abc:    52 08             	r2 = r5			  ## debug.c:158:14
 1e04abe:    98 f3 15 12       	call 3154986 <memcmp : 106eec >			  ## debug.c:158:14
 1e04ac2:    06 20             	if (r0 == 0) goto 12 <get_dev_id+0x2A : 1e04ad0 >			  ## debug.c:158:14
 1e04ac4:    17 80             	r7 += 1			  ## debug.c:157:47
 1e04ac6:    16 81             	r6 += 17			  ## debug.c:157:19
 1e04ac8:    27 e3 f6 3f       	if (r7 < 50) goto -20 <get_dev_id+0x12 : 1e04ab8 >			  ## debug.c:157:19
 1e04acc:    f0 07             	r0 = -1
 1e04ace:    57 01             	{pc, r7-r4} = [sp++]			  ## debug.c:164:1
 1e04ad0:    00 6d             	r0 = b[r6 + 16] (u)			  ## debug.c:159:20
 1e04ad2:    57 01             	{pc, r7-r4} = [sp++]			  ## debug.c:164:1


mpu_privilege:
 1e04ad4:    77 01             	[--sp] = {rets, r7-r4}			  ## debug.c:1344:0
 1e04ad6:    16 fc d0 ff       	r6 = r1 + -48			  ## debug.c:1347:5
 1e04ada:    64 02             	r4 = [sp+24]			  ## debug.c:1347:5
 1e04adc:    55 02             	r5 = [sp+20]			  ## debug.c:1347:5
 1e04ade:    80 c0             	r0 = r0 << 2
 1e04ae0:    c7 ff 00 03 1b 00 	r7 = 1770240 <uECC_vli_cmp_unsafe+0xA9304 : 1b0300 >
 1e04ae6:    70 09             	r0 += r7
 1e04ae8:    36 e0 13 20       	if (r6 >= 3) goto 38 <mpu_privilege+0x3E : 1e04b12 >
 1e04aec:    03 41             	r3 = [r0 + 64]			  ## debug.c:1361:26
 1e04aee:    81 05             	r1 = r6.b0 (u)			  ## debug.c:1361:29
 1e04af0:    ce c0             	r6 = r1 << 3			  ## debug.c:1361:29
 1e04af2:    82 0d             	r2 <<= r6			  ## debug.c:1361:29
 1e04af4:    52 b6             	r2 |= r3			  ## debug.c:1361:26
 1e04af6:    0a 41             	[r0 + 64] = r2			  ## debug.c:1361:26
 1e04af8:    12 70             	r2 = 1			  ## debug.c:1362:29
 1e04afa:    13 70             	r3 = 1			  ## debug.c:1362:29
 1e04afc:    01 3a             	if (r5 != 0) goto 2 <mpu_privilege+0x2C : 1e04b00 >			  ## debug.c:1362:29
 1e04afe:    03 70             	r3 = 0			  ## debug.c:1362:29
 1e04b00:    95 92             	r5 = r1 + 9			  ## debug.c:1362:29
 1e04b02:    43 0d             	r3 <<= r5			  ## debug.c:1362:29
 1e04b04:    01 38             	if (r4 != 0) goto 2 <mpu_privilege+0x34 : 1e04b08 >			  ## debug.c:1362:29
 1e04b06:    02 70             	r2 = 0			  ## debug.c:1362:29
 1e04b08:    11 81             	r1 += 17			  ## debug.c:1362:29
 1e04b0a:    f8 fd 10 12       	r1 = r2 << r1			  ## debug.c:1362:29
 1e04b0e:    51 b6             	r1 |= r3			  ## debug.c:1362:29
 1e04b10:    1b 18             	goto 54 <mpu_privilege+0x74 : 1e04b48 >			  ## debug.c:1362:29
 1e04b12:    01 e5 10 00       	if (r1 == 80) goto 32 <mpu_privilege+0x62 : 1e04b36 >
 1e04b16:    31 e4 1a 10       	if (r1 != 67) goto 52 <mpu_privilege+0x7A : 1e04b4e >
 1e04b1a:    12 70             	r2 = 1
 1e04b1c:    16 70             	r6 = 1			  ## debug.c:1350:30
 1e04b1e:    01 36             	if (r3 != 0) goto 2 <mpu_privilege+0x4E : 1e04b22 >			  ## debug.c:1350:30
 1e04b20:    06 70             	r6 = 0			  ## debug.c:1350:30
 1e04b22:    11 70             	r1 = 1			  ## debug.c:1350:52
 1e04b24:    01 3a             	if (r5 != 0) goto 2 <mpu_privilege+0x54 : 1e04b28 >
 1e04b26:    01 70             	r1 = 0			  ## debug.c:1350:52
 1e04b28:    c1 fd 10 16       	r1 <= insert(r6, p:2, l:1)			  ## debug.c:1350:49
 1e04b2c:    01 38             	if (r4 != 0) goto 2 <mpu_privilege+0x5C : 1e04b30 >			  ## debug.c:1350:49
 1e04b2e:    02 70             	r2 = 0			  ## debug.c:1350:74
 1e04b30:    c1 fd 08 12       	r1 <= insert(r2, p:1, l:1)			  ## debug.c:1350:71
 1e04b34:    09 18             	goto 18 <mpu_privilege+0x74 : 1e04b48 >			  ## debug.c:1350:71
 1e04b36:    11 70             	r1 = 1
 1e04b38:    12 70             	r2 = 1			  ## debug.c:1354:53
 1e04b3a:    01 38             	if (r4 != 0) goto 2 <mpu_privilege+0x6A : 1e04b3e >			  ## debug.c:1354:53
 1e04b3c:    02 70             	r2 = 0			  ## debug.c:1354:53
 1e04b3e:    01 3a             	if (r5 != 0) goto 2 <mpu_privilege+0x6E : 1e04b42 >
 1e04b40:    01 70             	r1 = 0			  ## debug.c:1354:30
 1e04b42:    09 c2             	r1 = r1 << 8			  ## debug.c:1354:30
 1e04b44:    c1 fd 80 12       	r1 <= insert(r2, p:16, l:1)			  ## debug.c:1354:50
 1e04b48:    02 40             	r2 = [r0 + 0]
 1e04b4a:    51 b4             	r1 |= r2
 1e04b4c:    09 40             	[r0 + 0] = r1
 1e04b4e:    57 01             	{pc, r7-r4} = [sp++]			  ## debug.c:1367:1


mpu_set:
 1e04b50:    77 01             	[--sp] = {rets, r7-r4}			  ## debug.c:1424:0
 1e04b52:    f8 0b             	sp += -16			  ## debug.c:1424:0
 1e04b54:    04 08             	r4 = r0			  ## debug.c:1424:0
 1e04b56:    34 e0 72 c0       	ifs (r4 > 3) goto 228 <mpu_set+0xEE : 1e04c3e >			  ## debug.c:1424:0
 1e04b5a:    c5 ff fc 03 1b 00 	r5 = 1770492 <uECC_vli_cmp_unsafe+0xA9400 : 1b03fc >			  ## debug.c:1424:0
 1e04b60:    00 4a             	r0 = [r5 + 0]			  ## debug.c:572:14
 1e04b62:    96 02             	r6 = [sp+36]			  ## debug.c:572:14
 1e04b64:    20 f3 05 00       	if ((r0 & 1) != 0) goto 10 <mpu_set+0x22 : 1e04b72 >			  ## debug.c:572:14
 1e04b68:    c0 f4 e7 59       	[r5 + 0] = 231			  ## debug.c:573:9
 1e04b6c:    00 4a             	r0 = [r5 + 0]			  ## debug.c:572:14
 1e04b6e:    00 f3 fb 0f       	if ((r0 & 1) == 0) goto -10 <mpu_set+0x18 : 1e04b68 >			  ## debug.c:572:14
 1e04b72:    50 fc 84 ff       	r0 = r5 + -124			  ## debug.c:1432:5
 1e04b76:    b1 f6 00 04       	[r0+r4<<2] = r1			  ## debug.c:1432:22
 1e04b7a:    00 84             	r0 += 64			  ## debug.c:1433:5
 1e04b7c:    b2 f6 00 04       	[r0+r4<<2] = r2			  ## debug.c:1433:22
 1e04b80:    01 fc 40 ff       	r1 = r0 + -192			  ## debug.c:1435:5
 1e04b84:    00 70             	r0 = 0
 1e04b86:    b0 f6 00 14       	[r1+r4<<2] = r0			  ## debug.c:1435:22
 1e04b8a:    01 84             	r1 += 64			  ## debug.c:1436:5
 1e04b8c:    b0 f6 00 14       	[r1+r4<<2] = r0			  ## debug.c:1436:22
 1e04b90:    81 a2             	r1 = sp + 40			  ## debug.c:1436:22
 1e04b92:    29 02             	[sp+8] = r1			  ## debug.c:1443:5
 1e04b94:    39 02             	[sp+12] = r1
 1e04b96:    01 6c             	r1 = b[r6 + 0] (u)			  ## debug.c:1377:12
 1e04b98:    02 70             	r2 = 0			  ## debug.c:1377:12
 1e04b9a:    03 70             	r3 = 0
 1e04b9c:    3e 22             	if (r1 == 0) goto 124 <mpu_set+0xCA : 1e04c1a >
 1e04b9e:    51 04             	r1 = r1.b0 (s)			  ## debug.c:1378:17
 1e04ba0:    f1 e4 17 c0       	ifs (r1 > 79) goto 46 <mpu_set+0x82 : 1e04bd2 >			  ## debug.c:1378:9
 1e04ba4:    17 fc d0 ff       	r7 = r1 + -48
 1e04ba8:    47 e0 21 20       	if (r7 >= 4) goto 66 <mpu_set+0x9E : 1e04bee >
 1e04bac:    21 fd 01 39       	r1 = r3 & 1			  ## debug.c:1395:13
 1e04bb0:    19 02             	[sp+4] = r1			  ## debug.c:1395:13
 1e04bb2:    27 fd 02 39       	r7 = r3 & 2			  ## debug.c:1395:13
 1e04bb6:    01 04             	r1 = r0.b0 (u)			  ## debug.c:1395:13
 1e04bb8:    82 04             	r2 = r2.b0 (u)			  ## debug.c:1395:13
 1e04bba:    23 fd 04 39       	r3 = r3 & 4			  ## debug.c:1395:13
 1e04bbe:    0f 02             	[sp] = r7			  ## debug.c:1395:13
 1e04bc0:    40 08             	r0 = r4			  ## debug.c:1395:13
 1e04bc2:    88 17             	call -240 <mpu_privilege : 1e04ad4 >			  ## debug.c:1395:13
 1e04bc4:    30 02             	r0 = [sp+12]			  ## debug.c:1396:19
 1e04bc6:    41 90             	r1 = r0 + 4			  ## debug.c:1396:19
 1e04bc8:    39 02             	[sp+12] = r1			  ## debug.c:1396:19
 1e04bca:    02 40             	r2 = [r0 + 0]			  ## debug.c:1396:19
 1e04bcc:    00 6c             	r0 = b[r6 + 0] (u)			  ## debug.c:1397:20
 1e04bce:    03 70             	r3 = 0			  ## debug.c:1397:20
 1e04bd0:    21 18             	goto 66 <mpu_set+0xC4 : 1e04c14 >			  ## debug.c:1397:20
 1e04bd2:    61 e7 06 c0       	ifs (r1 > 118) goto 12 <mpu_set+0x92 : 1e04be2 >
 1e04bd6:    01 e5 0c 00       	if (r1 == 80) goto 24 <mpu_set+0xA2 : 1e04bf2 >
 1e04bda:    21 e7 1b 10       	if (r1 != 114) goto 54 <mpu_set+0xC4 : 1e04c14 >
 1e04bde:    93 b0             	r3 |= 2			  ## debug.c:1405:23
 1e04be0:    19 18             	goto 50 <mpu_set+0xC4 : 1e04c14 >			  ## debug.c:1405:23
 1e04be2:    71 e7 16 00       	if (r1 == 119) goto 44 <mpu_set+0xC2 : 1e04c12 >
 1e04be6:    81 e7 15 10       	if (r1 != 120) goto 42 <mpu_set+0xC4 : 1e04c14 >
 1e04bea:    13 b1             	r3 |= 4			  ## debug.c:1408:23
 1e04bec:    13 18             	goto 38 <mpu_set+0xC4 : 1e04c14 >			  ## debug.c:1408:23
 1e04bee:    31 e4 11 10       	if (r1 != 67) goto 34 <mpu_set+0xC4 : 1e04c14 >
 1e04bf2:    21 fd 01 39       	r1 = r3 & 1
 1e04bf6:    19 02             	[sp+4] = r1
 1e04bf8:    27 fd 02 39       	r7 = r3 & 2
 1e04bfc:    01 04             	r1 = r0.b0 (u)
 1e04bfe:    82 04             	r2 = r2.b0 (u)
 1e04c00:    23 fd 04 39       	r3 = r3 & 4
 1e04c04:    0f 02             	[sp] = r7
 1e04c06:    40 08             	r0 = r4
 1e04c08:    65 17             	call -310 <mpu_privilege : 1e04ad4 >
 1e04c0a:    00 6c             	r0 = b[r6 + 0] (u)
 1e04c0c:    02 70             	r2 = 0
 1e04c0e:    03 70             	r3 = 0
 1e04c10:    01 18             	goto 2 <mpu_set+0xC4 : 1e04c14 >
 1e04c12:    13 b0             	r3 |= 1			  ## debug.c:1402:23
 1e04c14:    11 6c             	r1 = b[r6 + 1] (u)			  ## debug.c:1377:12
 1e04c16:    16 80             	r6 += 1			  ## debug.c:1414:15
 1e04c18:    c2 33             	if (r1 != 0) goto -124 <mpu_set+0x4E : 1e04b9e >
 1e04c1a:    21 fd 01 39       	r1 = r3 & 1			  ## debug.c:1416:5
 1e04c1e:    19 02             	[sp+4] = r1			  ## debug.c:1416:5
 1e04c20:    26 fd 02 39       	r6 = r3 & 2			  ## debug.c:1416:5
 1e04c24:    01 04             	r1 = r0.b0 (u)			  ## debug.c:1416:5
 1e04c26:    82 04             	r2 = r2.b0 (u)			  ## debug.c:1416:5
 1e04c28:    23 fd 04 39       	r3 = r3 & 4			  ## debug.c:1416:5
 1e04c2c:    0e 02             	[sp] = r6			  ## debug.c:1416:5
 1e04c2e:    40 08             	r0 = r4			  ## debug.c:1416:5
 1e04c30:    51 17             	call -350 <mpu_privilege : 1e04ad4 >			  ## debug.c:1416:5
 1e04c32:    02 18             	goto 4 <mpu_set+0xE8 : 1e04c38 >			  ## debug.c:1416:5
 1e04c34:    c0 f4 e7 59       	[r5 + 0] = 231			  ## debug.c:580:9
 1e04c38:    00 4a             	r0 = [r5 + 0]
 1e04c3a:    20 f3 fb 0f       	if ((r0 & 1) != 0) goto -10 <mpu_set+0xE4 : 1e04c34 >
 1e04c3e:    08 0a             	sp += 16
 1e04c40:    57 01             	{pc, r7-r4} = [sp++]			  ## debug.c:1457:1


debug_init:
 1e04c42:    76 01             	[--sp] = {rets, r6-r4}			  ## debug.c:1606:0
 1e04c44:    fa 0b             	sp += -12			  ## debug.c:1606:0
 1e04c46:    c0 ff 17 00 00 80 	r0 = 2147483671 <report_overlay_size+0x13 : 17 >			  ## debug.c:1612:14
 1e04c4c:    c1 ff c0 e1 1b 00 	r1 = 1827264 <uECC_vli_cmp_unsafe+0xB71C4 : 1be1c0 >			  ## debug.c:1612:14
 1e04c52:    08 43             	[r1 + 64] = r0			  ## debug.c:1612:14
 1e04c54:    c0 f4 01 19       	[r1 + 0] = 1			  ## debug.c:1619:14
 1e04c58:    db f4 10 1b       	[r1 + 108] = 1048576			  ## debug.c:598:19
 1e04c5c:    da f4 11 1b       	[r1 + 104] = 1114112			  ## debug.c:599:19
 1e04c60:    c4 ff c0 31 00 00 	r4 = 12736 <report_data_code_begin : 31c0 >			  ## debug.c:592:19
 1e04c66:    9c 43             	[r1 + 100] = r4			  ## debug.c:592:19
 1e04c68:    c6 ff 48 53 00 00 	r6 = 21320 <report_overlay_end : 5348 >			  ## debug.c:1619:14
 1e04c6e:    8e 43             	[r1 + 96] = r6			  ## debug.c:593:19
 1e04c70:    c0 ff 20 01 e0 01 	r0 = 31457568 <text_begin : 1e00120 >			  ## debug.c:586:19
 1e04c76:    78 43             	[r1 + 92] = r0			  ## debug.c:586:19
 1e04c78:    c0 ff d0 0f e2 01 	r0 = 31592400 <text_end : 1e20fd0 >			  ## debug.c:587:19
 1e04c7e:    68 43             	[r1 + 88] = r0			  ## debug.c:587:19
 1e04c80:    c0 ff 2c 09 00 00 	r0 = 2348 <data_magic : 92c >			  ## debug.c:1655:5
 1e04c86:    f1 7f             	r1 = 255			  ## debug.c:1655:5
 1e04c88:    02 74             	r2 = 64			  ## debug.c:1655:5
 1e04c8a:    98 f3 31 11       	call 3154530 <memset : 106ef0 >			  ## debug.c:1655:5
 1e04c8e:    c0 ff 68 4e e1 01 	r0 = 31542888 <update_target_end+0x1FE0 : 1e14e68 >			  ## debug.c:1662:99
 1e04c94:    08 17             	call -496 <get_dev_id : 1e04aa6 >			  ## debug.c:1662:99
 1e04c96:    05 08             	r5 = r0			  ## debug.c:1662:99
 1e04c98:    c0 ff 70 4e e1 01 	r0 = 31542896 <update_target_end+0x1FE8 : 1e14e70 >			  ## debug.c:1662:122
 1e04c9e:    03 17             	call -506 <get_dev_id : 1e04aa6 >			  ## debug.c:1662:122
 1e04ca0:    28 02             	[sp+8] = r0			  ## debug.c:1662:5
 1e04ca2:    1d 02             	[sp+4] = r5			  ## debug.c:1662:5
 1e04ca4:    c1 ff 77 4e e1 01 	r1 = 31542903 <update_target_end+0x1FEF : 1e14e77 >			  ## debug.c:1662:5
 1e04caa:    62 fc ff ff       	r2 = r6 + -1			  ## debug.c:1619:14
 1e04cae:    00 70             	r0 = 0			  ## debug.c:1662:5
 1e04cb0:    09 02             	[sp] = r1			  ## debug.c:1662:5
 1e04cb2:    41 08             	r1 = r4			  ## debug.c:1662:5
 1e04cb4:    4d 17             	call -358 <mpu_set : 1e04b50 >			  ## debug.c:1662:5
 1e04cb6:    06 0a             	sp += 12			  ## debug.c:1662:5
 1e04cb8:    56 01             	{pc, r6-r4} = [sp++]			  ## debug.c:1702:1


__crc16_mutex_init:
 1e04cba:    c0 ff 7c 1d 00 00 	r0 = 7548 <mutex : 1d7c >			  ## crc16.c:14:0
 1e04cc0:    d8 f3 ac 10       	goto 3154264 <os_mutex_create : 106e1c >			  ## crc16.c:15:5


setup_arch:
 1e04cc4:    76 01             	[--sp] = {rets, r6-r4}			  ## setup.c:144:0
 1e04cc6:    20 fb 71 04       	r0 = 1974272			  ## setup.c:152:20
 1e04cca:    00 f4 04 09       	[r0 + 0] |= 4			  ## setup.c:152:20
 1e04cce:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## setup.c:152:20
 1e04cd4:    01 f9 ac 00       	r1 = b[r0 + 172] (u)			  ## setup.c:152:20
 1e04cd8:    46 32             	if (r1 != 0) goto 140 <setup_arch+0xA2 : 1e04d66 >			  ## setup.c:152:20
 1e04cda:    14 70             	r4 = 1
 1e04cdc:    c2 ff 48 53 00 00 	r2 = 21320 <report_overlay_end : 5348 >
 1e04ce2:    c3 ff 60 fb 00 00 	r3 = 64352 <report_heap_end : fb60 >
 1e04ce8:    a1 b6             	r1 = r3 - r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/sbrk.c:45:5
 1e04cea:    c9 d1             	r1 = r1 >> 7			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/sbrk.c:45:5
 1e04cec:    14 f9 ac 00       	b[r0 + 172] = r4
 1e04cf0:    0b ff 01 14 02 00 	ifs (r1 < 1025) goto 4 <setup_arch+0x36 : 1e04cfa >
 1e04cf6:    8f f3 73 f3       	call 2090726 <p33_soft_reset : 33e0 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/driver/cpu/bd19/asm/cpu.h:148:5
 1e04cfa:    20 08             	r0 = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/sbrk.c:58:9
 1e04cfc:    31 08             	r1 = r3			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/sbrk.c:58:9
 1e04cfe:    98 f3 cf 10       	call 3154334 <pmalloc_init : 106ea0 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/sbrk.c:58:9
 1e04d02:    c0 ff 00 00 00 00 	r0 = 0 <umoddi3.bc : 0 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/sbrk.c:60:9
 1e04d08:    01 fb 00 08       	r1 = 2048 <report_mmu_tlb_size : 800 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/sbrk.c:60:9
 1e04d0c:    98 f3 d4 10       	call 3154344 <vmm_init_ : 106eb8 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/sbrk.c:60:9
 1e04d10:    c5 ff 80 26 00 00 	r5 = 9856 <stack_mem : 2680 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/sbrk.c:60:9
 1e04d16:    cf f4 20 5b       	[r5 + 60] = 2097152			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:610:29
 1e04d1a:    c0 ff 00 f0 20 00 	r0 = 2158592 <uECC_vli_cmp_unsafe+0x108004 : 20f000 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:611:29
 1e04d20:    08 4b             	[r5 + 64] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:611:29
 1e04d22:    d1 f4 f0 5a       	[r5 + 68] = 61440			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:612:29
 1e04d26:    d2 f4 f0 55       	[r5 + 72] = 31457280			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:615:29
 1e04d2a:    00 fb e0 01       	r0 = 480 <BTCTLER_CL_BSS_SIZE+0x1C : 1e0 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:616:29
 1e04d2e:    10 f7 4c 50       	h[r5 + 76] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:617:29
 1e04d32:    50 fc 50 00       	r0 = r5 + 80			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:620:5
 1e04d36:    01 70             	r1 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:620:5
 1e04d38:    92 77             	r2 = 121			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:620:5
 1e04d3a:    06 70             	r6 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:620:5
 1e04d3c:    98 f3 d8 10       	call 3154352 <memset : 106ef0 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:620:5
 1e04d40:    c0 ff fc ff ff 1f 	r0 = 536870908 <bank_code_load_addr+0x1DCA04 : 1fffffc >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:620:5
 1e04d46:    f1 d0             	r1 = r6 >> 3			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:623:9
 1e04d48:    51 b1             	r1 &= r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:623:25
 1e04d4a:    82 f6 00 15       	r2 = [r1+r5]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:623:37
 1e04d4e:    23 fd 1f 69       	r3 = r6 & 31			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:623:40
 1e04d52:    f8 fd 30 34       	r3 = r4 << r3			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:623:40
 1e04d56:    52 b6             	r2 |= r3			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:623:37
 1e04d58:    92 f6 00 15       	[r1+r5] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:623:37
 1e04d5c:    01 f7 4a 50       	r1 = h[r5 + 74] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:622:44
 1e04d60:    16 80             	r6 += 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:622:65
 1e04d62:    16 f2 f0 3f       	if (r6 < r1) goto -32 <setup_arch+0x82 : 1e04d46 >
 1e04d66:    c0 ff 40 10 00 00 	r0 = 4160 <stack_magic : 1040 >			  ## setup.c:155:5
 1e04d6c:    a1 75             	r1 = 90			  ## setup.c:155:5
 1e04d6e:    02 71             	r2 = 16			  ## setup.c:155:5
 1e04d70:    98 f3 be 10       	call 3154300 <memset : 106ef0 >			  ## setup.c:155:5
 1e04d74:    c0 ff 50 18 00 00 	r0 = 6224 <stack_magic0 : 1850 >			  ## setup.c:156:5
 1e04d7a:    a1 75             	r1 = 90			  ## setup.c:156:5
 1e04d7c:    02 71             	r2 = 16			  ## setup.c:156:5
 1e04d7e:    98 f3 b7 10       	call 3154286 <memset : 106ef0 >			  ## setup.c:156:5
 1e04d82:    2f 15             	call -1442 <p11_init : 1e047e2 >			  ## setup.c:159:5
 1e04d84:    49 15             	call -1390 <wdt_init : 1e04818 >			  ## setup.c:161:5
 1e04d86:    80 f3 29 e0       	call 114770 <clk_voltage_init : 1e20ddc >			  ## setup.c:164:5
 1e04d8a:    80 f3 2d e0       	call 114778 <clk_early_init : 1e20de8 >			  ## setup.c:165:5
 1e04d8e:    80 f3 b7 5d       	call 47982 <tick_timer_init : 1e10900 >			  ## setup.c:167:5
 1e04d92:    80 f3 34 53       	call 42600 <log_early_init : 1e0f3fe >			  ## setup.c:184:5
 1e04d96:    48 15             	call -1392 <efuse_dump : 1e04828 >			  ## setup.c:195:5
 1e04d98:    62 15             	call -1340 <reset_source_dump : 1e0485e >			  ## setup.c:197:5
 1e04d9a:    c4 ff a0 4c 00 00 	r4 = 19616 <exception_irq_handler : 4ca0 >			  ## setup.c:202:5
 1e04da0:    00 70             	r0 = 0			  ## setup.c:202:5
 1e04da2:    21 70             	r1 = 2			  ## setup.c:202:5
 1e04da4:    42 08             	r2 = r4			  ## setup.c:202:5
 1e04da6:    80 f3 ef 56       	call 44510 <request_irq : 1e0fb88 >			  ## setup.c:202:5
 1e04daa:    10 70             	r0 = 1			  ## setup.c:203:5
 1e04dac:    21 70             	r1 = 2			  ## setup.c:203:5
 1e04dae:    42 08             	r2 = r4			  ## setup.c:203:5
 1e04db0:    80 f3 ea 56       	call 44500 <request_irq : 1e0fb88 >			  ## setup.c:203:5
 1e04db4:    80 f3 b9 62       	call 50546 <sys_timer_init : 1e1132a >			  ## setup.c:205:5
 1e04db8:    44 17             	call -376 <debug_init : 1e04c42 >			  ## setup.c:207:5
 1e04dba:    16 01             	{rets, r6-r4} = [sp++]			  ## setup.c:212:5
 1e04dbc:    7e 1f             	goto -260 <__crc16_mutex_init : 1e04cba >			  ## setup.c:212:5


low_power_sys_get:
 1e04dbe:    74 01             	[--sp] = {rets, r4}			  ## power_hw.c:1196:0
 1e04dc0:    04 08             	r4 = r0			  ## power_hw.c:1196:0
 1e04dc2:    00 71             	r0 = 16			  ## power_hw.c:1199:13
 1e04dc4:    80 f3 f7 55       	call 44014 <malloc : 1e0f9b6 >			  ## power_hw.c:1199:13
 1e04dc8:    0d 20             	if (r0 == 0) goto 26 <low_power_sys_get+0x26 : 1e04de4 >			  ## power_hw.c:1199:13
 1e04dca:    3c 40             	[r0 + 12] = r4			  ## power_hw.c:1204:16
 1e04dcc:    c2 f4 00 09       	[r0 + 8] = 0			  ## power_hw.c:1205:17
 1e04dd0:    c1 ff 00 50 00 00 	r1 = 20480 <nvbss_begin : 5000 >			  ## list.h:154:28
 1e04dd6:    42 42             	r2 = [r1 + 16]			  ## list.h:154:28
 1e04dd8:    48 42             	[r1 + 16] = r0			  ## list.h:137:16
 1e04dda:    c1 80             	r1 += 12			  ## list.h:137:16
 1e04ddc:    09 40             	[r0 + 0] = r1			  ## list.h:138:16
 1e04dde:    1a 40             	[r0 + 4] = r2			  ## list.h:139:16
 1e04de0:    08 44             	[r2 + 0] = r0			  ## list.h:140:16
 1e04de2:    54 01             	{pc, r4} = [sp++]			  ## power_hw.c:1210:1
 1e04de4:    8f f3 fc f2       	call 2090488 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e04de8:    00 70             	r0 = 0			  ## cpu.h:148:5
 1e04dea:    54 01             	{pc, r4} = [sp++]			  ## power_hw.c:1210:1


power_init:
 1e04dec:    7b 01             	[--sp] = {rets, r11-r4}			  ## power_hw.c:1660:0
 1e04dee:    ea 0b             	sp += -44			  ## power_hw.c:1660:0
 1e04df0:    c0 ff f3 1f 1a 00 	r0 = 1712115 <uECC_vli_cmp_unsafe+0x9AFF7 : 1a1ff3 >			  ## power_hw.c:1660:0
 1e04df6:    31 60             	r1 = b[r0 + 3] (u)			  ## power_hw.c:1566:5
 1e04df8:    f1 b2             	r1 &= 4294967263			  ## power_hw.c:1566:5
 1e04dfa:    39 60             	b[r0 + 3] = r1			  ## power_hw.c:1566:5
 1e04dfc:    06 fc 20 f8       	r6 = r0 + -2016			  ## power_hw.c:1566:5
 1e04e00:    41 6c             	r1 = b[r6 + 4] (u)			  ## power_hw.c:1568:5
 1e04e02:    f1 b0             	r1 &= 4294967293			  ## power_hw.c:1568:5
 1e04e04:    49 6c             	b[r6 + 4] = r1			  ## power_hw.c:1568:5
 1e04e06:    11 60             	r1 = b[r0 + 1] (u)			  ## power_hw.c:1523:9
 1e04e08:    c9 ff 00 50 00 00 	r9 = 20480 <nvbss_begin : 5000 >			  ## power_hw.c:1523:9
 1e04e0e:    03 22             	if (r1 == 0) goto 6 <power_init+0x2A : 1e04e16 >			  ## power_hw.c:1523:9
 1e04e10:    11 60             	r1 = b[r0 + 1] (u)			  ## power_hw.c:1526:27
 1e04e12:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:1526:25
 1e04e14:    51 18             	goto 162 <power_init+0xCC : 1e04eb8 >			  ## power_hw.c:1526:25
 1e04e16:    00 f9 35 90       	r0 = b[r9 + 53] (u)			  ## power_hw.c:1530:17
 1e04e1a:    4e 30             	if (r0 != 0) goto 156 <power_init+0xCC : 1e04eb8 >			  ## power_hw.c:1530:17
 1e04e1c:    10 70             	r0 = 1			  ## power_hw.c:1533:26
 1e04e1e:    10 f9 35 90       	b[r9 + 53] = r0			  ## power_hw.c:1533:26
 1e04e22:    67 fc 77 07       	r7 = r6 + 1911			  ## power_hw.c:1533:26
 1e04e26:    10 6e             	r0 = b[r7 + 1] (u)			  ## power_hw.c:1539:22
 1e04e28:    90 b0             	r0 |= 2			  ## power_hw.c:1539:22
 1e04e2a:    18 6e             	b[r7 + 1] = r0			  ## power_hw.c:1539:22
 1e04e2c:    20 6e             	r0 = b[r7 + 2] (u)			  ## power_hw.c:1540:22
 1e04e2e:    90 b1             	r0 |= 8			  ## power_hw.c:1540:22
 1e04e30:    28 6e             	b[r7 + 2] = r0			  ## power_hw.c:1540:22
 1e04e32:    10 6e             	r0 = b[r7 + 1] (u)			  ## power_hw.c:1543:9
 1e04e34:    20 fd cf 09       	r0 = r0 & 207			  ## power_hw.c:1543:9
 1e04e38:    10 b2             	r0 |= 16			  ## power_hw.c:1543:9
 1e04e3a:    18 6e             	b[r7 + 1] = r0			  ## power_hw.c:1543:9
 1e04e3c:    10 6e             	r0 = b[r7 + 1] (u)			  ## power_hw.c:1551:22
 1e04e3e:    90 b1             	r0 |= 8			  ## power_hw.c:1551:22
 1e04e40:    18 6e             	b[r7 + 1] = r0			  ## power_hw.c:1551:22
 1e04e42:    80 a0             	r0 = sp + 8
 1e04e44:    01 70             	r1 = 0			  ## power_hw.c:155:21
 1e04e46:    42 72             	r2 = 36			  ## power_hw.c:155:21
 1e04e48:    98 f3 52 10       	call 3154084 <memset : 106ef0 >			  ## power_hw.c:155:21
 1e04e4c:    c0 ff 95 4f e1 01 	r0 = 31543189 <update_target_end+0x210D : 1e14f95 >			  ## power_hw.c:157:15
 1e04e52:    c1 ff ba 4f e1 01 	r1 = 31543226 <update_target_end+0x2132 : 1e14fba >			  ## power_hw.c:157:15
 1e04e58:    80 f3 d5 6c       	call 55722 <fopen : 1e12806 >			  ## power_hw.c:157:15
 1e04e5c:    04 08             	r4 = r0			  ## power_hw.c:157:15
 1e04e5e:    26 28             	if (r4 == 0) goto 76 <power_init+0xC0 : 1e04eac >
 1e04e60:    81 a0             	r1 = sp + 8
 1e04e62:    80 f3 f0 6d       	call 56288 <fget_attrs : 1e12a46 >			  ## power_hw.c:163:5
 1e04e66:    32 02             	r2 = [sp+12]			  ## power_hw.c:164:30
 1e04e68:    43 02             	r3 = [sp+16]			  ## power_hw.c:165:36
 1e04e6a:    22 ff 01 2d 02 00 	if (r2 >= 65537) goto 4 <power_init+0x88 : 1e04e74 >
 1e04e70:    03 34             	if (r2 != 0) goto 6 <power_init+0x8C : 1e04e78 >
 1e04e72:    0a 18             	goto 20 <power_init+0x9C : 1e04e88 >
 1e04e74:    8f f3 b4 f2       	call 2090344 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e04e78:    20 fb 1a 0b       	r0 = 1703936
 1e04e7c:    81 f9 01 30       	r1 = b[r3 ++= 1] (u)			  ## power_hw.c:171:26
 1e04e80:    91 f9 01 00       	b[r0 ++= 1] = r1			  ## power_hw.c:171:24
 1e04e84:    52 f3 fa ff       	if (--r2 != 0) goto -12 <power_init+0x90 : 1e04e7c >
 1e04e88:    40 08             	r0 = r4			  ## power_hw.c:174:5
 1e04e8a:    80 f3 97 6d       	call 56110 <fclose : 1e129bc >			  ## power_hw.c:174:5
 1e04e8e:    c0 ff b1 4f e1 01 	r0 = 31543217 <update_target_end+0x2129 : 1e14fb1 >			  ## power_hw.c:180:87
 1e04e94:    08 16             	call -1008 <get_dev_id : 1e04aa6 >			  ## power_hw.c:180:87
 1e04e96:    18 02             	[sp+4] = r0			  ## power_hw.c:180:5
 1e04e98:    c3 ff b9 4f e1 01 	r3 = 31543225 <update_target_end+0x2131 : 1e14fb9 >			  ## power_hw.c:180:5
 1e04e9e:    62 fc 56 f7       	r2 = r6 + -2218			  ## power_hw.c:180:5
 1e04ea2:    30 70             	r0 = 3			  ## power_hw.c:180:5
 1e04ea4:    20 fb 1a 1b       	r1 = 1703936			  ## power_hw.c:180:5
 1e04ea8:    0b 02             	[sp] = r3			  ## power_hw.c:180:5
 1e04eaa:    52 16             	call -860 <mpu_set : 1e04b50 >			  ## power_hw.c:180:5
 1e04eac:    00 6e             	r0 = b[r7 + 0] (u)			  ## power_hw.c:1557:21
 1e04eae:    90 b2             	r0 |= 32			  ## power_hw.c:1557:21
 1e04eb0:    08 6e             	b[r7 + 0] = r0			  ## power_hw.c:1557:21
 1e04eb2:    00 6e             	r0 = b[r7 + 0] (u)			  ## power_hw.c:1558:16
 1e04eb4:    25 f3 fd 0f       	if ((r0 & 32) != 0) goto -6 <power_init+0xC6 : 1e04eb2 >			  ## power_hw.c:1558:16
 1e04eb8:    c2 ff 3e 39 e0 01 	r2 = 31471934 <__hw_p2m_irq : 1e0393e >			  ## power_hw.c:1572:5
 1e04ebe:    a0 70             	r0 = 10			  ## power_hw.c:1572:5
 1e04ec0:    01 70             	r1 = 0			  ## power_hw.c:1572:5
 1e04ec2:    04 70             	r4 = 0			  ## power_hw.c:1572:5
 1e04ec4:    80 f3 60 56       	call 44224 <request_irq : 1e0fb88 >			  ## power_hw.c:1572:5
 1e04ec8:    40 70             	r0 = 4			  ## power_hw.c:1666:20
 1e04eca:    97 fc 30 00       	r7 = r9 + 48			  ## power_hw.c:1666:20
 1e04ece:    38 6e             	b[r7 + 3] = r0			  ## power_hw.c:1666:20
 1e04ed0:    6c 6e             	b[r7 + 6] = r4			  ## power_hw.c:1668:23
 1e04ed2:    0c 6f             	b[r7 + 16] = r4			  ## power_hw.c:1670:21
 1e04ed4:    7c 6e             	b[r7 + 7] = r4			  ## power_hw.c:1672:24
 1e04ed6:    8c 6e             	b[r7 + 8] = r4			  ## power_hw.c:1674:35
 1e04ed8:    9c 6f             	b[r7 + 25] = r4			  ## power_hw.c:1676:33
 1e04eda:    01 fb e8 03       	r1 = 1000 <BTCTLER_LE_RAM_TOTAL+0xA : 3e8 >			  ## power_hw.c:1676:33
 1e04ede:    92 fc 20 03       	r2 = r9 + 800			  ## power_hw.c:1676:33
 1e04ee2:    29 44             	[r2 + 8] = r1			  ## power_hw.c:1676:33
 1e04ee4:    c8 6f             	b[r7 + 28] = r0			  ## power_hw.c:1686:33
 1e04ee6:    7c 6f             	b[r7 + 23] = r4			  ## power_hw.c:467:25
 1e04ee8:    8c 6f             	b[r7 + 24] = r4			  ## power_hw.c:469:30
 1e04eea:    c0 ff 00 36 6e 01 	r0 = 24000000 <uECC_vli_cmp_unsafe+0x15DC604 : 16e3600 >			  ## power_hw.c:471:25
 1e04ef0:    18 44             	[r2 + 4] = r0			  ## power_hw.c:471:25
 1e04ef2:    c0 f4 7d 2a       	[r2 + 0] = 32000			  ## power_hw.c:473:23
 1e04ef6:    80 71             	r0 = 24			  ## power_hw.c:477:27
 1e04ef8:    58 6f             	b[r7 + 21] = r0			  ## power_hw.c:477:27
 1e04efa:    bc 6f             	b[r7 + 27] = r4			  ## power_hw.c:480:30
 1e04efc:    c0 75             	r0 = 92			  ## lp_timer_hw.c:220:19
 1e04efe:    61 fc be 07       	r1 = r6 + 1982			  ## lp_timer_hw.c:220:19
 1e04f02:    08 62             	b[r1 + 0] = r0			  ## lp_timer_hw.c:220:19
 1e04f04:    30 75             	r0 = 83			  ## lp_timer_hw.c:222:19
 1e04f06:    18 62             	b[r1 + 1] = r0			  ## lp_timer_hw.c:222:19
 1e04f08:    2c 62             	b[r1 + 2] = r4			  ## lp_timer_hw.c:224:19
 1e04f0a:    10 72             	r0 = 33			  ## lrc_hw.c:81:17
 1e04f0c:    08 6c             	b[r6 + 0] = r0			  ## lrc_hw.c:81:17
 1e04f0e:    10 74             	r0 = 65			  ## lrc_hw.c:82:17
 1e04f10:    18 6c             	b[r6 + 1] = r0			  ## lrc_hw.c:82:17
 1e04f12:    c8 ff b0 20 00 00 	r8 = 8368 <gatt_client_conn_handle : 20b0 >			  ## lrc_hw.c:82:17
 1e04f18:    10 70             	r0 = 1			  ## lrc_hw.c:82:17
 1e04f1a:    86 fc 9c 00       	r6 = r8 + 156			  ## lrc_hw.c:82:17
 1e04f1e:    08 6c             	b[r6 + 0] = r0			  ## lrc_hw.c:82:17
 1e04f20:    c1 ff 24 1e 00 00 	r1 = 7716 <lrc.4 : 1e24 >			  ## lrc_hw.c:228:24
 1e04f26:    0c 62             	b[r1 + 0] = r4			  ## lrc_hw.c:228:24
 1e04f28:    88 6c             	b[r6 + 8] = r0			  ## lrc_hw.c:228:24
 1e04f2a:    c0 ff 00 36 1e 00 	r0 = 1979904 <uECC_vli_cmp_unsafe+0xDC604 : 1e3600 >			  ## lrc_hw.c:228:24
 1e04f30:    01 40             	r1 = [r0 + 0]			  ## lrc_hw.c:232:5
 1e04f32:    31 fd 3e 19       	r1 = r1 & 4294967233			  ## lrc_hw.c:232:5
 1e04f36:    09 40             	[r0 + 0] = r1			  ## lrc_hw.c:232:5
 1e04f38:    f0 71             	r0 = 31			  ## lrc_hw.c:67:17
 1e04f3a:    c4 ff ac 0f 1a 00 	r4 = 1707948 <uECC_vli_cmp_unsafe+0x99FB0 : 1a0fac >
 1e04f40:    08 68             	b[r4 + 0] = r0			  ## lrc_hw.c:67:17
 1e04f42:    00 68             	r0 = b[r4 + 0] (u)			  ## lrc_hw.c:68:29
 1e04f44:    2a 73             	r10 = 50			  ## lrc_hw.c:68:27
 1e04f46:    c0 fe 00 0a       	r0 = r10 / r0 (u)			  ## lrc_hw.c:68:27
 1e04f4a:    28 68             	b[r4 + 2] = r0			  ## lrc_hw.c:68:22
 1e04f4c:    00 68             	r0 = b[r4 + 0] (u)			  ## lrc_hw.c:69:31
 1e04f4e:    8b 7c             	r11 = 200			  ## lrc_hw.c:69:29
 1e04f50:    c0 fe 00 0b       	r0 = r11 / r0 (u)			  ## lrc_hw.c:69:29
 1e04f54:    38 68             	b[r4 + 3] = r0			  ## lrc_hw.c:69:23
 1e04f56:    00 68             	r0 = b[r4 + 0] (u)			  ## lrc_hw.c:70:31
 1e04f58:    05 fb 58 02       	r5 = 600 <BTCTLER_CL_RAM_TOTAL+0x74 : 258 >			  ## lrc_hw.c:70:29
 1e04f5c:    c0 fe 00 05       	r0 = r5 / r0 (u)			  ## lrc_hw.c:70:29
 1e04f60:    48 68             	b[r4 + 4] = r0			  ## lrc_hw.c:70:23
 1e04f62:    10 70             	r0 = 1			  ## lrc_hw.c:237:5
 1e04f64:    bf f3 8b f9       	call -3306 <__hw_lrc_enable : 1e0427e >			  ## lrc_hw.c:237:5
 1e04f68:    00 70             	r0 = 0			  ## lrc_hw.c:239:5
 1e04f6a:    bf f3 9c f9       	call -3272 <lrc_timeout_handler : 1e042a6 >			  ## lrc_hw.c:239:5
 1e04f6e:    10 4c             	r0 = [r6 + 4]			  ## lrc_hw.c:245:28
 1e04f70:    c1 ff 40 42 0f 00 	r1 = 1000000 <text_size+0xD3390 : f4240 >			  ## lrc_hw.c:65:24
 1e04f76:    c0 fe 00 01       	r0 = r1 / r0 (u)			  ## lrc_hw.c:65:24
 1e04f7a:    08 68             	b[r4 + 0] = r0			  ## lrc_hw.c:67:17
 1e04f7c:    00 68             	r0 = b[r4 + 0] (u)			  ## lrc_hw.c:68:29
 1e04f7e:    c0 fe 00 0a       	r0 = r10 / r0 (u)			  ## lrc_hw.c:68:27
 1e04f82:    28 68             	b[r4 + 2] = r0			  ## lrc_hw.c:68:22
 1e04f84:    00 68             	r0 = b[r4 + 0] (u)			  ## lrc_hw.c:69:31
 1e04f86:    c0 fe 00 0b       	r0 = r11 / r0 (u)			  ## lrc_hw.c:69:29
 1e04f8a:    38 68             	b[r4 + 3] = r0			  ## lrc_hw.c:69:23
 1e04f8c:    00 68             	r0 = b[r4 + 0] (u)			  ## lrc_hw.c:70:31
 1e04f8e:    c0 fe 00 05       	r0 = r5 / r0 (u)			  ## lrc_hw.c:70:29
 1e04f92:    48 68             	b[r4 + 4] = r0			  ## lrc_hw.c:70:23
 1e04f94:    c1 ff a6 42 e0 01 	r1 = 31474342 <lrc_timeout_handler : 1e042a6 >			  ## lrc_hw.c:239:5
 1e04f9a:    00 70             	r0 = 0			  ## lrc_hw.c:247:21
 1e04f9c:    a2 70             	r2 = 10			  ## lrc_hw.c:247:21
 1e04f9e:    80 f3 b8 60       	call 49520 <usr_timer_add : 1e11112 >			  ## lrc_hw.c:247:21
 1e04fa2:    71 6f             	r1 = b[r7 + 23] (u)			  ## power_hw.c:486:24
 1e04fa4:    c2 ff 26 1e 00 00 	r2 = 7718 <lrc.2 : 1e26 >			  ## lrc_hw.c:247:19
 1e04faa:    08 64             	b[r2 + 0] = r0			  ## lrc_hw.c:247:19
 1e04fac:    05 22             	if (r1 == 0) goto 10 <power_init+0x1CC : 1e04fb8 >			  ## power_hw.c:486:5
 1e04fae:    11 e0 06 10       	if (r1 != 1) goto 12 <power_init+0x1D2 : 1e04fbe >
 1e04fb2:    bf f3 f7 f9       	call -3090 <__hw_btosc_time_set : 1e043a4 >			  ## power_hw.c:488:9
 1e04fb6:    03 18             	goto 6 <power_init+0x1D2 : 1e04fbe >			  ## power_hw.c:488:9
 1e04fb8:    20 70             	r0 = 2			  ## power_hw.c:491:9
 1e04fba:    bf f3 4f fa       	call -2914 <__hw_lrc_time_set : 1e0445c >			  ## power_hw.c:491:9
 1e04fbe:    00 fb 04 05       	r0 = 1284 <BTCTLER_CONTROLLER_DATA_SIZE+0x46 : 504 >			  ## power_hw.c:504:27
 1e04fc2:    10 f7 2c 93       	h[r9 + 812] = r0			  ## power_hw.c:504:27
 1e04fc6:    40 fc e9 08       	r0 = r4 + 2281			  ## power_hw.c:504:27
 1e04fca:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:505:5
 1e04fcc:    21 fd c7 19       	r1 = r1 & 199			  ## power_hw.c:505:5
 1e04fd0:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:505:5
 1e04fd2:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:506:5
 1e04fd4:    21 fd f8 19       	r1 = r1 & 248			  ## power_hw.c:506:5
 1e04fd8:    01 fd 05 19       	r1 = r1 | 5			  ## power_hw.c:506:5
 1e04fdc:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:506:5
 1e04fde:    11 60             	r1 = b[r0 + 1] (u)			  ## power_hw.c:513:5
 1e04fe0:    71 b3             	r1 &= 4294967231			  ## power_hw.c:513:5
 1e04fe2:    19 60             	b[r0 + 1] = r1			  ## power_hw.c:513:5
 1e04fe4:    11 60             	r1 = b[r0 + 1] (u)			  ## power_hw.c:514:5
 1e04fe6:    91 b3             	r1 |= 128			  ## power_hw.c:514:5
 1e04fe8:    19 60             	b[r0 + 1] = r1			  ## power_hw.c:514:5
 1e04fea:    11 60             	r1 = b[r0 + 1] (u)			  ## power_hw.c:515:5
 1e04fec:    01 fd 18 19       	r1 = r1 | 24			  ## power_hw.c:515:5
 1e04ff0:    19 60             	b[r0 + 1] = r1			  ## power_hw.c:515:5
 1e04ff2:    01 fc b0 ff       	r1 = r0 + -80			  ## power_hw.c:515:5
 1e04ff6:    02 62             	r2 = b[r1 + 0] (u)			  ## power_hw.c:518:17
 1e04ff8:    22 fd f8 29       	r2 = r2 & 248			  ## power_hw.c:518:17
 1e04ffc:    0a 62             	b[r1 + 0] = r2			  ## power_hw.c:518:17
 1e04ffe:    81 60             	r1 = b[r0 + 8] (u)			  ## power_hw.c:521:5
 1e05000:    71 b3             	r1 &= 4294967231			  ## power_hw.c:521:5
 1e05002:    89 60             	b[r0 + 8] = r1			  ## power_hw.c:521:5
 1e05004:    19 f6 00 90       	[r9 + 0] = r9			  ## list.h:188:16
 1e05008:    19 f6 04 90       	[r9 + 4] = r9			  ## list.h:189:16
 1e0500c:    90 fc 0c 00       	r0 = r9 + 12			  ## list.h:188:16
 1e05010:    10 f6 0c 90       	[r9 + 12] = r0			  ## list.h:188:16
 1e05014:    10 f6 10 90       	[r9 + 16] = r0			  ## list.h:189:16
 1e05018:    00 f9 33 90       	r0 = b[r9 + 51] (u)			  ## power_hw.c:1701:17
 1e0501c:    08 20             	if (r0 == 0) goto 16 <power_init+0x242 : 1e0502e >
 1e0501e:    80 f3 88 5c       	call 47376 <vPortSysSleepInit : 1e10932 >			  ## power_hw.c:1702:9
 1e05022:    c0 ff 3c 60 e1 01 	r0 = 31547452 <timer_power_ops : 1e1603c >			  ## timer.c:209:26
 1e05028:    ca 16             	call -620 <low_power_sys_get : 1e04dbe >			  ## timer.c:209:26
 1e0502a:    10 f6 90 80       	[r8 + 144] = r0			  ## timer.c:209:24
 1e0502e:    16 0a             	sp += 44
 1e05030:    5b 01             	{pc, r11-r4} = [sp++]			  ## power_hw.c:1718:1


power_set_callback:
 1e05032:    c0 ff ba 35 e0 01 	r0 = 31471034 <sleep_enter_callback : 1e035ba >			  ## power_hw.c:1457:0
 1e05038:    c1 ff 30 53 00 00 	r1 = 21296 <BTCTLER_LE_CONTROLLER_CODE_SIZE+0x3E : 5330 >			  ## power_hw.c:1461:37
 1e0503e:    08 42             	[r1 + 0] = r0			  ## power_hw.c:1459:33
 1e05040:    c0 ff c6 35 e0 01 	r0 = 31471046 <sleep_exit_callback : 1e035c6 >			  ## power_hw.c:1460:33
 1e05046:    18 42             	[r1 + 4] = r0			  ## power_hw.c:1460:33
 1e05048:    c0 ff ea 35 e0 01 	r0 = 31471082 <board_set_soft_poweroff : 1e035ea >			  ## power_hw.c:1461:37
 1e0504e:    48 42             	[r1 + 16] = r0			  ## power_hw.c:1461:37
 1e05050:    20 00             	rts			  ## power_hw.c:1462:1


power_keep_dacvdd_en:
 1e05052:    c0 ff 00 50 00 00 	r0 = 20480 <nvbss_begin : 5000 >			  ## power_hw.c:1448:0
 1e05058:    01 70             	r1 = 0			  ## power_hw.c:1449:25
 1e0505a:    11 f9 34 00       	b[r0 + 52] = r1			  ## power_hw.c:1449:25
 1e0505e:    20 00             	rts			  ## power_hw.c:1450:1


__hw_power_set_wakeup_IO:
 1e05060:    77 01             	[--sp] = {rets, r7-r4}			  ## power_wakeup.c:521:0
 1e05062:    13 08             	r3 = r1			  ## power_wakeup.c:521:0
 1e05064:    31 66             	r1 = b[r3 + 3] (u)			  ## power_wakeup.c:532:50
 1e05066:    25 66             	r5 = b[r3 + 2] (u)			  ## power_wakeup.c:531:50
 1e05068:    16 66             	r6 = b[r3 + 1] (u)			  ## power_wakeup.c:530:50
 1e0506a:    07 66             	r7 = b[r3 + 0] (u)			  ## power_wakeup.c:530:50
 1e0506c:    04 08             	r4 = r0			  ## power_wakeup.c:530:50
 1e0506e:    c0 ff cc 1d 00 00 	r0 = 7628 <hdl : 1dcc >
 1e05074:    04 24             	if (r2 == 0) goto 8 <__hw_power_set_wakeup_IO+0x1E : 1e0507e >			  ## power_wakeup.c:522:9
 1e05076:    52 70             	r2 = 5
 1e05078:    80 fe 20 04       	r0 += r4 * r2			  ## power_wakeup.c:523:9
 1e0507c:    04 18             	goto 8 <__hw_power_set_wakeup_IO+0x26 : 1e05086 >			  ## power_wakeup.c:523:9
 1e0507e:    52 70             	r2 = 5
 1e05080:    80 fe 20 04       	r0 += r4 * r2			  ## power_wakeup.c:529:9
 1e05084:    c0 83             	r0 += 60			  ## power_wakeup.c:529:9
 1e05086:    0f 60             	b[r0 + 0] = r7
 1e05088:    1e 60             	b[r0 + 1] = r6
 1e0508a:    2d 60             	b[r0 + 2] = r5
 1e0508c:    32 90             	r2 = r0 + 3
 1e0508e:    09 64             	b[r2 + 0] = r1
 1e05090:    41 66             	r1 = b[r3 + 4] (u)
 1e05092:    49 60             	b[r0 + 4] = r1
 1e05094:    40 66             	r0 = b[r3 + 4] (u)			  ## power_wakeup.c:538:15
 1e05096:    00 e3 03 80       	if (r0 > 48) goto 6 <__hw_power_set_wakeup_IO+0x40 : 1e050a0 >			  ## power_wakeup.c:538:9
 1e0509a:    21 fd f0 09       	r1 = r0 & 240			  ## power_wakeup.c:539:46
 1e0509e:    0e 18             	goto 28 <__hw_power_set_wakeup_IO+0x5C : 1e050bc >			  ## power_wakeup.c:539:46
 1e050a0:    01 fc cd ff       	r1 = r0 + -51			  ## power_wakeup.c:551:13
 1e050a4:    41 04             	r1 = r1.b0 (u)			  ## power_wakeup.c:551:13
 1e050a6:    32 73             	r2 = 51			  ## power_wakeup.c:551:13
 1e050a8:    21 e0 01 30       	if (r1 < 2) goto 2 <__hw_power_set_wakeup_IO+0x4E : 1e050ae >			  ## power_wakeup.c:551:13
 1e050ac:    12 73             	r2 = 49			  ## power_wakeup.c:551:13
 1e050ae:    01 fc cb ff       	r1 = r0 + -53			  ## power_wakeup.c:554:41
 1e050b2:    45 04             	r5 = r1.b0 (u)			  ## power_wakeup.c:554:41
 1e050b4:    51 73             	r1 = 53			  ## power_wakeup.c:554:41
 1e050b6:    45 e0 01 30       	if (r5 < 4) goto 2 <__hw_power_set_wakeup_IO+0x5C : 1e050bc >
 1e050ba:    21 08             	r1 = r2			  ## power_wakeup.c:554:41
 1e050bc:    c2 ff 50 18 1a 00 	r2 = 1710160 <uECC_vli_cmp_unsafe+0x9A854 : 1a1850 >
 1e050c2:    f1 e2 29 d0       	ifs (r1 <= 47) goto 82 <.GJTIE479_1_1_+0x30 : 1e05118 >
 1e050c6:    01 8d             	r1 += -48
 1e050c8:    51 e0 4c 80       	if (r1 > 5) goto 152 <.GJTIE479_2_2_+0x2C : 1e05164 >
 1e050cc:    a1 00             	tbb [r1]


.GJTIS479_0_0_:
 1e050ce:    2a     < 42 : 0x2A >
 1e050cf:    03     < 3 : 0x3 >
 1e050d0:    4b     < 75 : 0x4B >
 1e050d1:    03     < 3 : 0x3 >
 1e050d2:    4b     < 75 : 0x4B >
 1e050d3:    43     < 67 : 0x43 >
 1e050d4:    01 fc cf ff       	r1 = r0 + -49			  ## power_wakeup.c:345:5
 1e050d8:    31 e0 6e 80       	if (r1 > 3) goto 220 <.GJTIE479_2_2_+0x80 : 1e051b8 >			  ## power_wakeup.c:345:5
 1e050dc:    c0 ff 00 54 1e 00 	r0 = 1987584 <uECC_vli_cmp_unsafe+0xDE404 : 1e5400 >
 1e050e2:    a1 00             	tbb [r1]


.GJTIS479_1_1_:
 1e050e4:    02     < 2 : 0x2 >
 1e050e5:    72     < 114 : 0x72 >
 1e050e6:    89     < 137 : 0x89 >
 1e050e7:    a0     < 160 : 0xA0 >
 1e050e8:    00 f4 04 0a       	[r0 + 0] |= 1024			  ## power_wakeup.c:349:9
 1e050ec:    00 f4 04 09       	[r0 + 0] |= 4			  ## power_wakeup.c:350:9
 1e050f0:    15 66             	r5 = b[r3 + 1] (u)			  ## power_wakeup.c:351:19
 1e050f2:    01 66             	r1 = b[r3 + 0] (u)			  ## power_wakeup.c:351:19
 1e050f4:    05 e0 42 01       	if (r5 == 0) goto 644 <.GJTIE479_2_2_+0x244 : 1e0537c >			  ## power_wakeup.c:351:13
 1e050f8:    05 22             	if (r1 == 0) goto 10 <.GJTIE479_1_1_+0x1C : 1e05104 >
 1e050fa:    00 f4 10 09       	[r0 + 0] |= 16			  ## power_wakeup.c:353:17
 1e050fe:    01 40             	r1 = [r0 + 0]			  ## power_wakeup.c:354:17
 1e05100:    71 b3             	r1 &= 4294967231			  ## power_wakeup.c:354:17
 1e05102:    09 40             	[r0 + 0] = r1			  ## power_wakeup.c:354:17
 1e05104:    30 64             	r0 = b[r2 + 3] (u)			  ## power_wakeup.c:100:1
 1e05106:    11 70             	r1 = 1			  ## power_wakeup.c:356:30
 1e05108:    f8 fd 40 31       	r3 = r1 << r4			  ## power_wakeup.c:356:30
 1e0510c:    1d d2             	r5 = r3 >> 8			  ## power_wakeup.c:100:1
 1e0510e:    50 ba             	r0 |= r5			  ## power_wakeup.c:100:1
 1e05110:    38 64             	b[r2 + 3] = r0			  ## power_wakeup.c:100:1
 1e05112:    20 64             	r0 = b[r2 + 2] (u)			  ## power_wakeup.c:100:1
 1e05114:    50 b6             	r0 |= r3			  ## power_wakeup.c:100:1
 1e05116:    43 19             	goto 646 <.GJTIE479_2_2_+0x266 : 1e0539e >			  ## power_wakeup.c:100:1
 1e05118:    04 22             	if (r1 == 0) goto 8 <.GJTIE479_1_1_+0x3A : 1e05122 >
 1e0511a:    01 e1 02 00       	if (r1 == 16) goto 4 <.GJTIE479_1_1_+0x3A : 1e05122 >
 1e0511e:    01 e2 21 10       	if (r1 != 32) goto 66 <.GJTIE479_2_2_+0x2C : 1e05164 >
 1e05122:    01 d1             	r1 = r0 >> 4			  ## power_wakeup.c:220:5
 1e05124:    31 e0 20 80       	if (r1 > 3) goto 64 <.GJTIE479_2_2_+0x30 : 1e05168 >			  ## power_wakeup.c:220:5
 1e05128:    25 fd 0f 09       	r5 = r0 & 15			  ## power_wakeup.c:217:24
 1e0512c:    c0 ff 20 64 e1 01 	r0 = 31548448 <PB_valid : 1e16420 >			  ## power_wakeup.c:217:24
 1e05132:    a1 00             	tbb [r1]			  ## power_wakeup.c:217:24


.GJTIS479_2_2_:
 1e05134:    02     < 2 : 0x2 >
 1e05135:    1b     < 27 : 0x1B >
 1e05136:    29     < 41 : 0x29 >
 1e05137:    3a     < 58 : 0x3A >
 1e05138:    01 70             	r1 = 0
 1e0513a:    06 fa 00 10       	r6 = b[r1+r0] (u)			  ## power_wakeup.c:224:22
 1e0513e:    65 f2 88 00       	if (r5 == r6) goto 272 <.GJTIE479_2_2_+0x11A : 1e05252 >			  ## power_wakeup.c:224:22
 1e05142:    11 80             	r1 += 1			  ## power_wakeup.c:223:48
 1e05144:    91 e0 f9 9f       	if (r1 <= 9) goto -14 <.GJTIE479_2_2_+0x2 : 1e0513a >			  ## power_wakeup.c:223:48
 1e05148:    8f f3 4a f1       	call 2089620 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e0514c:    c7 ff 00 50 1e 00 	r7 = 1986560 <uECC_vli_cmp_unsafe+0xDE004 : 1e5000 >			  ## cpu.h:148:5
 1e05152:    29 18             	goto 82 <.GJTIE479_2_2_+0x6E : 1e051a6 >			  ## cpu.h:148:5
 1e05154:    50 e3 da 00       	if (r0 == 53) goto 436 <.GJTIE479_2_2_+0x1D4 : 1e0530c >			  ## power_wakeup.c:445:5
 1e05158:    80 e3 da 00       	if (r0 == 56) goto 436 <.GJTIE479_2_2_+0x1D8 : 1e05310 >
 1e0515c:    70 e3 da 10       	if (r0 != 55) goto 436 <.GJTIE479_2_2_+0x1DC : 1e05314 >
 1e05160:    14 70             	r4 = 1
 1e05162:    da 18             	goto 436 <.GJTIE479_2_2_+0x1E0 : 1e05318 >
 1e05164:    8f f3 3c f1       	call 2089592 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e05168:    57 01             	{pc, r7-r4} = [sp++]			  ## power_wakeup.c:578:1
 1e0516a:    01 70             	r1 = 0
 1e0516c:    06 fa 00 10       	r6 = b[r1+r0] (u)			  ## power_wakeup.c:237:22
 1e05170:    65 f2 78 00       	if (r5 == r6) goto 240 <.GJTIE479_2_2_+0x12C : 1e05264 >			  ## power_wakeup.c:237:22
 1e05174:    11 80             	r1 += 1			  ## power_wakeup.c:236:48
 1e05176:    91 e0 f9 9f       	if (r1 <= 9) goto -14 <.GJTIE479_2_2_+0x34 : 1e0516c >			  ## power_wakeup.c:236:48
 1e0517a:    8f f3 31 f1       	call 2089570 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e0517e:    c7 ff 00 51 1e 00 	r7 = 1986816 <uECC_vli_cmp_unsafe+0xDE104 : 1e5100 >			  ## cpu.h:148:5
 1e05184:    10 18             	goto 32 <.GJTIE479_2_2_+0x6E : 1e051a6 >			  ## cpu.h:148:5
 1e05186:    00 70             	r0 = 0
 1e05188:    c1 ff 3e 64 e1 01 	r1 = 31548478 <PD_valid : 1e1643e >
 1e0518e:    06 fa 00 01       	r6 = b[r0+r1] (u)			  ## power_wakeup.c:250:22
 1e05192:    65 f2 70 00       	if (r5 == r6) goto 224 <.GJTIE479_2_2_+0x13E : 1e05276 >			  ## power_wakeup.c:250:22
 1e05196:    10 80             	r0 += 1			  ## power_wakeup.c:249:48
 1e05198:    40 e0 f9 9f       	if (r0 <= 4) goto -14 <.GJTIE479_2_2_+0x56 : 1e0518e >			  ## power_wakeup.c:249:48
 1e0519c:    8f f3 20 f1       	call 2089536 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e051a0:    c7 ff 00 53 1e 00 	r7 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## cpu.h:148:5
 1e051a6:    6f 18             	goto 222 <.GJTIE479_2_2_+0x14E : 1e05286 >
 1e051a8:    c7 ff 00 59 1e 00 	r7 = 1988864 <uECC_vli_cmp_unsafe+0xDE904 : 1e5900 >
 1e051ae:    e6 71             	r6 = 30
 1e051b0:    6a 2a             	if (r5 == 0) goto 212 <.GJTIE479_2_2_+0x14E : 1e05286 >
 1e051b2:    8f f3 15 f1       	call 2089514 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e051b6:    67 18             	goto 206 <.GJTIE479_2_2_+0x14E : 1e05286 >			  ## cpu.h:148:5
 1e051b8:    10 70             	r0 = 1			  ## power_wakeup.c:438:23
 1e051ba:    f8 fd 40 30       	r3 = r0 << r4			  ## power_wakeup.c:438:23
 1e051be:    1d d2             	r5 = r3 >> 8			  ## power_wakeup.c:99:1
 1e051c0:    8f f3 0e f1       	call 2089500 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e051c4:    00 70             	r0 = 0			  ## cpu.h:148:5
 1e051c6:    29 19             	goto 594 <.GJTIE479_2_2_+0x2E2 : 1e0541a >			  ## cpu.h:148:5
 1e051c8:    00 f4 08 0a       	[r0 + 0] |= 2048			  ## power_wakeup.c:369:9
 1e051cc:    00 f4 08 09       	[r0 + 0] |= 8			  ## power_wakeup.c:370:9
 1e051d0:    15 66             	r5 = b[r3 + 1] (u)			  ## power_wakeup.c:371:19
 1e051d2:    01 66             	r1 = b[r3 + 0] (u)			  ## power_wakeup.c:371:19
 1e051d4:    e7 2a             	if (r5 == 0) goto 462 <.GJTIE479_2_2_+0x26C : 1e053a4 >			  ## power_wakeup.c:371:13
 1e051d6:    05 22             	if (r1 == 0) goto 10 <.GJTIE479_2_2_+0xAA : 1e051e2 >
 1e051d8:    00 f4 20 09       	[r0 + 0] |= 32			  ## power_wakeup.c:373:17
 1e051dc:    01 40             	r1 = [r0 + 0]			  ## power_wakeup.c:374:17
 1e051de:    f1 b3             	r1 &= 4294967167			  ## power_wakeup.c:374:17
 1e051e0:    09 40             	[r0 + 0] = r1			  ## power_wakeup.c:374:17
 1e051e2:    30 64             	r0 = b[r2 + 3] (u)			  ## power_wakeup.c:100:1
 1e051e4:    11 70             	r1 = 1			  ## power_wakeup.c:376:30
 1e051e6:    f8 fd 40 31       	r3 = r1 << r4			  ## power_wakeup.c:376:30
 1e051ea:    1d d2             	r5 = r3 >> 8			  ## power_wakeup.c:100:1
 1e051ec:    50 ba             	r0 |= r5			  ## power_wakeup.c:100:1
 1e051ee:    38 64             	b[r2 + 3] = r0			  ## power_wakeup.c:100:1
 1e051f0:    20 64             	r0 = b[r2 + 2] (u)			  ## power_wakeup.c:100:1
 1e051f2:    50 b6             	r0 |= r3			  ## power_wakeup.c:100:1
 1e051f4:    e8 18             	goto 464 <.GJTIE479_2_2_+0x28E : 1e053c6 >			  ## power_wakeup.c:100:1
 1e051f6:    09 f4 04 0a       	[r0 + 36] |= 1024			  ## power_wakeup.c:389:9
 1e051fa:    09 f4 04 09       	[r0 + 36] |= 4			  ## power_wakeup.c:390:9
 1e051fe:    15 66             	r5 = b[r3 + 1] (u)			  ## power_wakeup.c:391:19
 1e05200:    01 66             	r1 = b[r3 + 0] (u)			  ## power_wakeup.c:391:19
 1e05202:    e4 2a             	if (r5 == 0) goto 456 <.GJTIE479_2_2_+0x294 : 1e053cc >			  ## power_wakeup.c:391:13
 1e05204:    05 22             	if (r1 == 0) goto 10 <.GJTIE479_2_2_+0xD8 : 1e05210 >
 1e05206:    09 f4 10 09       	[r0 + 36] |= 16			  ## power_wakeup.c:393:17
 1e0520a:    91 40             	r1 = [r0 + 36]			  ## power_wakeup.c:394:17
 1e0520c:    71 b3             	r1 &= 4294967231			  ## power_wakeup.c:394:17
 1e0520e:    99 40             	[r0 + 36] = r1			  ## power_wakeup.c:394:17
 1e05210:    30 64             	r0 = b[r2 + 3] (u)			  ## power_wakeup.c:100:1
 1e05212:    11 70             	r1 = 1			  ## power_wakeup.c:396:30
 1e05214:    f8 fd 40 31       	r3 = r1 << r4			  ## power_wakeup.c:396:30
 1e05218:    1d d2             	r5 = r3 >> 8			  ## power_wakeup.c:100:1
 1e0521a:    50 ba             	r0 |= r5			  ## power_wakeup.c:100:1
 1e0521c:    38 64             	b[r2 + 3] = r0			  ## power_wakeup.c:100:1
 1e0521e:    20 64             	r0 = b[r2 + 2] (u)			  ## power_wakeup.c:100:1
 1e05220:    50 b6             	r0 |= r3			  ## power_wakeup.c:100:1
 1e05222:    e5 18             	goto 458 <.GJTIE479_2_2_+0x2B6 : 1e053ee >			  ## power_wakeup.c:100:1
 1e05224:    09 f4 08 0a       	[r0 + 36] |= 2048			  ## power_wakeup.c:409:9
 1e05228:    09 f4 08 09       	[r0 + 36] |= 8			  ## power_wakeup.c:410:9
 1e0522c:    15 66             	r5 = b[r3 + 1] (u)			  ## power_wakeup.c:411:19
 1e0522e:    01 66             	r1 = b[r3 + 0] (u)			  ## power_wakeup.c:411:19
 1e05230:    e1 2a             	if (r5 == 0) goto 450 <.GJTIE479_2_2_+0x2BC : 1e053f4 >			  ## power_wakeup.c:411:13
 1e05232:    05 22             	if (r1 == 0) goto 10 <.GJTIE479_2_2_+0x106 : 1e0523e >
 1e05234:    09 f4 20 09       	[r0 + 36] |= 32			  ## power_wakeup.c:413:17
 1e05238:    91 40             	r1 = [r0 + 36]			  ## power_wakeup.c:414:17
 1e0523a:    f1 b3             	r1 &= 4294967167			  ## power_wakeup.c:414:17
 1e0523c:    99 40             	[r0 + 36] = r1			  ## power_wakeup.c:414:17
 1e0523e:    30 64             	r0 = b[r2 + 3] (u)			  ## power_wakeup.c:100:1
 1e05240:    11 70             	r1 = 1			  ## power_wakeup.c:416:30
 1e05242:    f8 fd 40 31       	r3 = r1 << r4			  ## power_wakeup.c:416:30
 1e05246:    1d d2             	r5 = r3 >> 8			  ## power_wakeup.c:100:1
 1e05248:    50 ba             	r0 |= r5			  ## power_wakeup.c:100:1
 1e0524a:    38 64             	b[r2 + 3] = r0			  ## power_wakeup.c:100:1
 1e0524c:    20 64             	r0 = b[r2 + 2] (u)			  ## power_wakeup.c:100:1
 1e0524e:    50 b6             	r0 |= r3			  ## power_wakeup.c:100:1
 1e05250:    e2 18             	goto 452 <.GJTIE479_2_2_+0x2DE : 1e05416 >			  ## power_wakeup.c:100:1
 1e05252:    c0 ff 2a 64 e1 01 	r0 = 31548458 <PA_map_tbl : 1e1642a >			  ## power_wakeup.c:225:23
 1e05258:    06 fa 00 10       	r6 = b[r1+r0] (u)			  ## power_wakeup.c:225:23
 1e0525c:    c7 ff 00 50 1e 00 	r7 = 1986560 <uECC_vli_cmp_unsafe+0xDE004 : 1e5000 >			  ## power_wakeup.c:225:23
 1e05262:    11 18             	goto 34 <.GJTIE479_2_2_+0x14E : 1e05286 >			  ## power_wakeup.c:225:23
 1e05264:    c0 ff 34 64 e1 01 	r0 = 31548468 <PB_map_tbl : 1e16434 >			  ## power_wakeup.c:238:23
 1e0526a:    06 fa 00 10       	r6 = b[r1+r0] (u)			  ## power_wakeup.c:238:23
 1e0526e:    c7 ff 00 51 1e 00 	r7 = 1986816 <uECC_vli_cmp_unsafe+0xDE104 : 1e5100 >			  ## power_wakeup.c:238:23
 1e05274:    08 18             	goto 16 <.GJTIE479_2_2_+0x14E : 1e05286 >			  ## power_wakeup.c:238:23
 1e05276:    c1 ff 43 64 e1 01 	r1 = 31548483 <PD_map_tbl : 1e16443 >			  ## power_wakeup.c:251:23
 1e0527c:    06 fa 00 01       	r6 = b[r0+r1] (u)			  ## power_wakeup.c:251:23
 1e05280:    c7 ff 00 53 1e 00 	r7 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## power_wakeup.c:251:23
 1e05286:    21 4e             	r1 = [r7 + 8]			  ## power_wakeup.c:283:15
 1e05288:    10 70             	r0 = 1			  ## power_wakeup.c:283:15
 1e0528a:    40 0d             	r0 <<= r5			  ## power_wakeup.c:283:18
 1e0528c:    51 b0             	r1 |= r0			  ## power_wakeup.c:283:15
 1e0528e:    29 4e             	[r7 + 8] = r1			  ## power_wakeup.c:283:15
 1e05290:    31 4e             	r1 = [r7 + 12]			  ## power_wakeup.c:284:15
 1e05292:    51 b0             	r1 |= r0			  ## power_wakeup.c:284:15
 1e05294:    39 4e             	[r7 + 12] = r1			  ## power_wakeup.c:284:15
 1e05296:    81 4e             	r1 = [r7 + 32]			  ## power_wakeup.c:285:16
 1e05298:    51 b0             	r1 |= r0			  ## power_wakeup.c:285:16
 1e0529a:    89 4e             	[r7 + 32] = r1			  ## power_wakeup.c:285:16
 1e0529c:    15 66             	r5 = b[r3 + 1] (u)			  ## power_wakeup.c:287:15
 1e0529e:    01 66             	r1 = b[r3 + 0] (u)			  ## power_wakeup.c:287:15
 1e052a0:    12 2a             	if (r5 == 0) goto 36 <.GJTIE479_2_2_+0x18E : 1e052c6 >			  ## power_wakeup.c:287:9
 1e052a2:    07 22             	if (r1 == 0) goto 14 <.GJTIE479_2_2_+0x17A : 1e052b2 >
 1e052a4:    41 4e             	r1 = [r7 + 16]			  ## power_wakeup.c:289:22
 1e052a6:    51 b0             	r1 |= r0			  ## power_wakeup.c:289:22
 1e052a8:    49 4e             	[r7 + 16] = r1			  ## power_wakeup.c:289:22
 1e052aa:    51 4e             	r1 = [r7 + 20]			  ## power_wakeup.c:290:22
 1e052ac:    e3 fd 00 01       	r0 = r1 & ~r0			  ## power_wakeup.c:290:22
 1e052b0:    58 4e             	[r7 + 20] = r0			  ## power_wakeup.c:290:22
 1e052b2:    33 64             	r3 = b[r2 + 3] (u)			  ## power_wakeup.c:100:1
 1e052b4:    10 70             	r0 = 1			  ## power_wakeup.c:292:26
 1e052b6:    00 0d             	r0 <<= r4			  ## power_wakeup.c:292:26
 1e052b8:    01 d2             	r1 = r0 >> 8			  ## power_wakeup.c:100:1
 1e052ba:    53 b2             	r3 |= r1			  ## power_wakeup.c:100:1
 1e052bc:    3b 64             	b[r2 + 3] = r3			  ## power_wakeup.c:100:1
 1e052be:    23 64             	r3 = b[r2 + 2] (u)			  ## power_wakeup.c:100:1
 1e052c0:    25 04             	r5 = r0.l (u)			  ## power_wakeup.c:100:1
 1e052c2:    53 ba             	r3 |= r5			  ## power_wakeup.c:100:1
 1e052c4:    14 18             	goto 40 <.GJTIE479_2_2_+0x1B6 : 1e052ee >			  ## power_wakeup.c:100:1
 1e052c6:    07 22             	if (r1 == 0) goto 14 <.GJTIE479_2_2_+0x19E : 1e052d6 >
 1e052c8:    41 4e             	r1 = [r7 + 16]			  ## power_wakeup.c:295:22
 1e052ca:    e3 fd 00 11       	r1 = r1 & ~r0			  ## power_wakeup.c:295:22
 1e052ce:    49 4e             	[r7 + 16] = r1			  ## power_wakeup.c:295:22
 1e052d0:    51 4e             	r1 = [r7 + 20]			  ## power_wakeup.c:296:22
 1e052d2:    50 b2             	r0 |= r1			  ## power_wakeup.c:296:22
 1e052d4:    58 4e             	[r7 + 20] = r0			  ## power_wakeup.c:296:22
 1e052d6:    33 64             	r3 = b[r2 + 3] (u)			  ## power_wakeup.c:100:1
 1e052d8:    10 70             	r0 = 1			  ## power_wakeup.c:298:27
 1e052da:    00 0d             	r0 <<= r4			  ## power_wakeup.c:298:27
 1e052dc:    01 d2             	r1 = r0 >> 8			  ## power_wakeup.c:100:1
 1e052de:    e3 fd 10 33       	r3 = r3 & ~r1			  ## power_wakeup.c:100:1
 1e052e2:    3b 64             	b[r2 + 3] = r3			  ## power_wakeup.c:100:1
 1e052e4:    23 64             	r3 = b[r2 + 2] (u)			  ## power_wakeup.c:100:1
 1e052e6:    25 04             	r5 = r0.l (u)			  ## power_wakeup.c:100:1
 1e052e8:    15 fd ff 59       	r5 = r5 ^ 255			  ## power_wakeup.c:100:1
 1e052ec:    53 bb             	r3 &= r5			  ## power_wakeup.c:100:1
 1e052ee:    2b 64             	b[r2 + 2] = r3			  ## power_wakeup.c:100:1
 1e052f0:    23 fc 70 00       	r3 = r2 + 112			  ## power_wakeup.c:302:5
 1e052f4:    16 fa 00 43       	b[r4+r3] = r6			  ## power_wakeup.c:302:21
 1e052f8:    03 d2             	r3 = r0 >> 8			  ## power_wakeup.c:101:1
 1e052fa:    9b 64             	b[r2 + 9] = r3			  ## power_wakeup.c:101:1
 1e052fc:    88 64             	b[r2 + 8] = r0			  ## power_wakeup.c:101:1
 1e052fe:    13 64             	r3 = b[r2 + 1] (u)			  ## power_wakeup.c:99:1
 1e05300:    51 b6             	r1 |= r3			  ## power_wakeup.c:99:1
 1e05302:    19 64             	b[r2 + 1] = r1			  ## power_wakeup.c:99:1
 1e05304:    01 64             	r1 = b[r2 + 0] (u)			  ## power_wakeup.c:99:1
 1e05306:    50 b2             	r0 |= r1			  ## power_wakeup.c:99:1
 1e05308:    08 64             	b[r2 + 0] = r0			  ## power_wakeup.c:99:1
 1e0530a:    57 01             	{pc, r7-r4} = [sp++]			  ## power_wakeup.c:578:1
 1e0530c:    24 70             	r4 = 2
 1e0530e:    04 18             	goto 8 <.GJTIE479_2_2_+0x1E0 : 1e05318 >
 1e05310:    04 70             	r4 = 0
 1e05312:    02 18             	goto 4 <.GJTIE479_2_2_+0x1E0 : 1e05318 >
 1e05314:    8f f3 64 f0       	call 2089160 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e05318:    30 66             	r0 = b[r3 + 3] (u)			  ## power_wakeup.c:467:29
 1e0531a:    21 fc 30 00       	r1 = r2 + 48			  ## power_wakeup.c:467:5
 1e0531e:    10 fa 00 41       	b[r4+r1] = r0			  ## power_wakeup.c:467:21
 1e05322:    01 65             	r1 = b[r2 + 16] (u)			  ## power_wakeup.c:498:17
 1e05324:    10 70             	r0 = 1			  ## power_wakeup.c:498:17
 1e05326:    00 0d             	r0 <<= r4			  ## power_wakeup.c:498:20
 1e05328:    51 b0             	r1 |= r0			  ## power_wakeup.c:498:17
 1e0532a:    09 65             	b[r2 + 16] = r1			  ## power_wakeup.c:498:17
 1e0532c:    71 65             	r1 = b[r2 + 23] (u)			  ## power_wakeup.c:500:21
 1e0532e:    51 b0             	r1 |= r0			  ## power_wakeup.c:500:21
 1e05330:    79 65             	b[r2 + 23] = r1			  ## power_wakeup.c:500:21
 1e05332:    81 65             	r1 = b[r2 + 24] (u)			  ## power_wakeup.c:501:21
 1e05334:    51 b0             	r1 |= r0			  ## power_wakeup.c:501:21
 1e05336:    89 65             	b[r2 + 24] = r1			  ## power_wakeup.c:501:21
 1e05338:    11 66             	r1 = b[r3 + 1] (u)			  ## power_wakeup.c:503:15
 1e0533a:    11 e0 0a 00       	if (r1 == 1) goto 20 <.GJTIE479_2_2_+0x21A : 1e05352 >			  ## power_wakeup.c:503:9
 1e0533e:    21 e0 12 10       	if (r1 != 2) goto 36 <.GJTIE479_2_2_+0x22E : 1e05366 >
 1e05342:    11 65             	r1 = b[r2 + 17] (u)			  ## power_wakeup.c:504:23
 1e05344:    51 b0             	r1 |= r0			  ## power_wakeup.c:504:23
 1e05346:    19 65             	b[r2 + 17] = r1			  ## power_wakeup.c:504:23
 1e05348:    22 65             	r2 = b[r2 + 18] (u)			  ## power_wakeup.c:505:23
 1e0534a:    c1 ff 62 18 1a 00 	r1 = 1710178 <uECC_vli_cmp_unsafe+0x9A866 : 1a1862 >			  ## power_wakeup.c:505:23
 1e05350:    12 18             	goto 36 <.GJTIE479_2_2_+0x23E : 1e05376 >			  ## power_wakeup.c:505:23
 1e05352:    21 65             	r1 = b[r2 + 18] (u)			  ## power_wakeup.c:508:23
 1e05354:    51 b0             	r1 |= r0			  ## power_wakeup.c:508:23
 1e05356:    29 65             	b[r2 + 18] = r1			  ## power_wakeup.c:508:23
 1e05358:    12 65             	r2 = b[r2 + 17] (u)			  ## power_wakeup.c:509:23
 1e0535a:    c1 ff 61 18 1a 00 	r1 = 1710177 <uECC_vli_cmp_unsafe+0x9A865 : 1a1861 >			  ## power_wakeup.c:509:23
 1e05360:    e3 fd 00 02       	r0 = r2 & ~r0			  ## power_wakeup.c:509:23
 1e05364:    09 18             	goto 18 <.GJTIE479_2_2_+0x240 : 1e05378 >			  ## power_wakeup.c:509:23
 1e05366:    21 65             	r1 = b[r2 + 18] (u)			  ## power_wakeup.c:512:23
 1e05368:    e3 fd 00 11       	r1 = r1 & ~r0			  ## power_wakeup.c:512:23
 1e0536c:    29 65             	b[r2 + 18] = r1			  ## power_wakeup.c:512:23
 1e0536e:    12 65             	r2 = b[r2 + 17] (u)			  ## power_wakeup.c:513:23
 1e05370:    c1 ff 61 18 1a 00 	r1 = 1710177 <uECC_vli_cmp_unsafe+0x9A865 : 1a1861 >			  ## power_wakeup.c:513:23
 1e05376:    50 b4             	r0 |= r2
 1e05378:    08 62             	b[r1 + 0] = r0
 1e0537a:    57 01             	{pc, r7-r4} = [sp++]			  ## power_wakeup.c:578:1
 1e0537c:    05 22             	if (r1 == 0) goto 10 <.GJTIE479_2_2_+0x250 : 1e05388 >
 1e0537e:    01 40             	r1 = [r0 + 0]			  ## power_wakeup.c:359:17
 1e05380:    71 b2             	r1 &= 4294967279			  ## power_wakeup.c:359:17
 1e05382:    09 40             	[r0 + 0] = r1			  ## power_wakeup.c:359:17
 1e05384:    00 f4 40 09       	[r0 + 0] |= 64			  ## power_wakeup.c:360:17
 1e05388:    30 64             	r0 = b[r2 + 3] (u)			  ## power_wakeup.c:100:1
 1e0538a:    11 70             	r1 = 1			  ## power_wakeup.c:362:31
 1e0538c:    f8 fd 40 31       	r3 = r1 << r4			  ## power_wakeup.c:362:31
 1e05390:    1d d2             	r5 = r3 >> 8			  ## power_wakeup.c:100:1
 1e05392:    e3 fd 50 00       	r0 = r0 & ~r5			  ## power_wakeup.c:100:1
 1e05396:    38 64             	b[r2 + 3] = r0			  ## power_wakeup.c:100:1
 1e05398:    20 64             	r0 = b[r2 + 2] (u)			  ## power_wakeup.c:100:1
 1e0539a:    e3 fd 30 00       	r0 = r0 & ~r3			  ## power_wakeup.c:100:1
 1e0539e:    28 64             	b[r2 + 2] = r0
 1e053a0:    a0 71             	r0 = 26
 1e053a2:    3b 18             	goto 118 <.GJTIE479_2_2_+0x2E2 : 1e0541a >
 1e053a4:    05 22             	if (r1 == 0) goto 10 <.GJTIE479_2_2_+0x278 : 1e053b0 >
 1e053a6:    01 40             	r1 = [r0 + 0]			  ## power_wakeup.c:379:17
 1e053a8:    f1 b2             	r1 &= 4294967263			  ## power_wakeup.c:379:17
 1e053aa:    09 40             	[r0 + 0] = r1			  ## power_wakeup.c:379:17
 1e053ac:    00 f4 80 09       	[r0 + 0] |= 128			  ## power_wakeup.c:380:17
 1e053b0:    30 64             	r0 = b[r2 + 3] (u)			  ## power_wakeup.c:100:1
 1e053b2:    11 70             	r1 = 1			  ## power_wakeup.c:382:31
 1e053b4:    f8 fd 40 31       	r3 = r1 << r4			  ## power_wakeup.c:382:31
 1e053b8:    1d d2             	r5 = r3 >> 8			  ## power_wakeup.c:100:1
 1e053ba:    e3 fd 50 00       	r0 = r0 & ~r5			  ## power_wakeup.c:100:1
 1e053be:    38 64             	b[r2 + 3] = r0			  ## power_wakeup.c:100:1
 1e053c0:    20 64             	r0 = b[r2 + 2] (u)			  ## power_wakeup.c:100:1
 1e053c2:    e3 fd 30 00       	r0 = r0 & ~r3			  ## power_wakeup.c:100:1
 1e053c6:    28 64             	b[r2 + 2] = r0
 1e053c8:    b0 71             	r0 = 27
 1e053ca:    27 18             	goto 78 <.GJTIE479_2_2_+0x2E2 : 1e0541a >
 1e053cc:    05 22             	if (r1 == 0) goto 10 <.GJTIE479_2_2_+0x2A0 : 1e053d8 >
 1e053ce:    91 40             	r1 = [r0 + 36]			  ## power_wakeup.c:399:17
 1e053d0:    71 b2             	r1 &= 4294967279			  ## power_wakeup.c:399:17
 1e053d2:    99 40             	[r0 + 36] = r1			  ## power_wakeup.c:399:17
 1e053d4:    09 f4 40 09       	[r0 + 36] |= 64			  ## power_wakeup.c:400:17
 1e053d8:    30 64             	r0 = b[r2 + 3] (u)			  ## power_wakeup.c:100:1
 1e053da:    11 70             	r1 = 1			  ## power_wakeup.c:402:31
 1e053dc:    f8 fd 40 31       	r3 = r1 << r4			  ## power_wakeup.c:402:31
 1e053e0:    1d d2             	r5 = r3 >> 8			  ## power_wakeup.c:100:1
 1e053e2:    e3 fd 50 00       	r0 = r0 & ~r5			  ## power_wakeup.c:100:1
 1e053e6:    38 64             	b[r2 + 3] = r0			  ## power_wakeup.c:100:1
 1e053e8:    20 64             	r0 = b[r2 + 2] (u)			  ## power_wakeup.c:100:1
 1e053ea:    e3 fd 30 00       	r0 = r0 & ~r3			  ## power_wakeup.c:100:1
 1e053ee:    28 64             	b[r2 + 2] = r0
 1e053f0:    c0 71             	r0 = 28
 1e053f2:    13 18             	goto 38 <.GJTIE479_2_2_+0x2E2 : 1e0541a >
 1e053f4:    05 22             	if (r1 == 0) goto 10 <.GJTIE479_2_2_+0x2C8 : 1e05400 >
 1e053f6:    91 40             	r1 = [r0 + 36]			  ## power_wakeup.c:419:17
 1e053f8:    f1 b2             	r1 &= 4294967263			  ## power_wakeup.c:419:17
 1e053fa:    99 40             	[r0 + 36] = r1			  ## power_wakeup.c:419:17
 1e053fc:    09 f4 80 09       	[r0 + 36] |= 128			  ## power_wakeup.c:420:17
 1e05400:    30 64             	r0 = b[r2 + 3] (u)			  ## power_wakeup.c:100:1
 1e05402:    11 70             	r1 = 1			  ## power_wakeup.c:422:31
 1e05404:    f8 fd 40 31       	r3 = r1 << r4			  ## power_wakeup.c:422:31
 1e05408:    1d d2             	r5 = r3 >> 8			  ## power_wakeup.c:100:1
 1e0540a:    e3 fd 50 00       	r0 = r0 & ~r5			  ## power_wakeup.c:100:1
 1e0540e:    38 64             	b[r2 + 3] = r0			  ## power_wakeup.c:100:1
 1e05410:    20 64             	r0 = b[r2 + 2] (u)			  ## power_wakeup.c:100:1
 1e05412:    e3 fd 30 00       	r0 = r0 & ~r3			  ## power_wakeup.c:100:1
 1e05416:    28 64             	b[r2 + 2] = r0
 1e05418:    d0 71             	r0 = 29
 1e0541a:    21 fc 70 00       	r1 = r2 + 112			  ## power_wakeup.c:436:5
 1e0541e:    10 fa 00 41       	b[r4+r1] = r0			  ## power_wakeup.c:436:21
 1e05422:    18 d2             	r0 = r3 >> 8			  ## power_wakeup.c:101:1
 1e05424:    98 64             	b[r2 + 9] = r0			  ## power_wakeup.c:101:1
 1e05426:    8b 64             	b[r2 + 8] = r3			  ## power_wakeup.c:101:1
 1e05428:    10 64             	r0 = b[r2 + 1] (u)			  ## power_wakeup.c:99:1
 1e0542a:    50 ba             	r0 |= r5			  ## power_wakeup.c:99:1
 1e0542c:    18 64             	b[r2 + 1] = r0			  ## power_wakeup.c:99:1
 1e0542e:    00 64             	r0 = b[r2 + 0] (u)			  ## power_wakeup.c:99:1
 1e05430:    50 b6             	r0 |= r3			  ## power_wakeup.c:99:1
 1e05432:    08 64             	b[r2 + 0] = r0			  ## power_wakeup.c:99:1
 1e05434:    57 01             	{pc, r7-r4} = [sp++]			  ## power_wakeup.c:578:1


power_wakeup_init:
 1e05436:    79 01             	[--sp] = {rets, r9-r4}			  ## power_wakeup.c:836:0
 1e05438:    06 70             	r6 = 0			  ## power_wakeup.c:836:0
 1e0543a:    c3 ff 0c 50 1e 00 	r3 = 1986572 <uECC_vli_cmp_unsafe+0xDE010 : 1e500c >			  ## power_wakeup.c:836:0
 1e05440:    0e 46             	[r3 + 0] = r6			  ## power_wakeup.c:782:19
 1e05442:    5e 46             	[r3 + 20] = r6			  ## power_wakeup.c:783:20
 1e05444:    39 fc 00 01       	r9 = r3 + 256			  ## power_wakeup.c:783:20
 1e05448:    16 f6 00 90       	[r9 + 0] = r6			  ## power_wakeup.c:786:19
 1e0544c:    60 70             	r0 = 6			  ## power_wakeup.c:787:20
 1e0544e:    10 f6 14 90       	[r9 + 20] = r0			  ## power_wakeup.c:787:20
 1e05452:    31 fc 00 03       	r1 = r3 + 768			  ## power_wakeup.c:787:20
 1e05456:    08 42             	[r1 + 0] = r0			  ## power_wakeup.c:790:19
 1e05458:    5e 42             	[r1 + 20] = r6			  ## power_wakeup.c:791:20
 1e0545a:    10 fc f4 c4       	r0 = r1 + -15116			  ## power_wakeup.c:795:14
 1e0545e:    0e 40             	[r0 + 0] = r6			  ## power_wakeup.c:795:14
 1e05460:    00 fc 00 3c       	r0 = r0 + 15360			  ## power_wakeup.c:795:14
 1e05464:    04 40             	r4 = [r0 + 0]			  ## power_wakeup.c:796:5
 1e05466:    f4 b4             	r4 &= 4294966783			  ## power_wakeup.c:796:5
 1e05468:    0c 40             	[r0 + 0] = r4			  ## power_wakeup.c:796:5
 1e0546a:    04 40             	r4 = [r0 + 0]			  ## power_wakeup.c:797:5
 1e0546c:    f4 b5             	r4 &= 4294965247			  ## power_wakeup.c:797:5
 1e0546e:    0c 40             	[r0 + 0] = r4			  ## power_wakeup.c:797:5
 1e05470:    04 40             	r4 = [r0 + 0]			  ## power_wakeup.c:798:5
 1e05472:    74 b4             	r4 &= 4294967039			  ## power_wakeup.c:798:5
 1e05474:    0c 40             	[r0 + 0] = r4			  ## power_wakeup.c:798:5
 1e05476:    04 40             	r4 = [r0 + 0]			  ## power_wakeup.c:799:5
 1e05478:    74 b5             	r4 &= 4294966271			  ## power_wakeup.c:799:5
 1e0547a:    0c 40             	[r0 + 0] = r4			  ## power_wakeup.c:799:5
 1e0547c:    16 f6 f4 16       	[r1 + 1780] = r6			  ## power_wakeup.c:802:15
 1e05480:    94 40             	r4 = [r0 + 36]			  ## power_wakeup.c:803:5
 1e05482:    f4 b4             	r4 &= 4294966783			  ## power_wakeup.c:803:5
 1e05484:    9c 40             	[r0 + 36] = r4			  ## power_wakeup.c:803:5
 1e05486:    94 40             	r4 = [r0 + 36]			  ## power_wakeup.c:804:5
 1e05488:    f4 b5             	r4 &= 4294965247			  ## power_wakeup.c:804:5
 1e0548a:    9c 40             	[r0 + 36] = r4			  ## power_wakeup.c:804:5
 1e0548c:    94 40             	r4 = [r0 + 36]			  ## power_wakeup.c:805:5
 1e0548e:    74 b4             	r4 &= 4294967039			  ## power_wakeup.c:805:5
 1e05490:    9c 40             	[r0 + 36] = r4			  ## power_wakeup.c:805:5
 1e05492:    94 40             	r4 = [r0 + 36]			  ## power_wakeup.c:806:5
 1e05494:    74 b5             	r4 &= 4294966271			  ## power_wakeup.c:806:5
 1e05496:    9c 40             	[r0 + 36] = r4			  ## power_wakeup.c:806:5
 1e05498:    c5 ff 48 18 1a 00 	r5 = 1710152 <uECC_vli_cmp_unsafe+0x9A84C : 1a1848 >			  ## power_wakeup.c:806:5
 1e0549e:    04 6a             	r4 = b[r5 + 0] (u)			  ## power_wakeup.c:808:9
 1e054a0:    58 fc 60 00       	r8 = r5 + 96			  ## power_wakeup.c:808:9
 1e054a4:    00 f3 54 40       	if ((r4 & 1) == 0) goto 168 <.GJTIE480_0_0_+0x36 : 1e05550 >			  ## power_wakeup.c:808:9
 1e054a8:    04 f9 18 80       	r4 = b[r8 + 24] (u)			  ## power_wakeup.c:809:23
 1e054ac:    47 fc ff ff       	r7 = r4 + -1			  ## power_wakeup.c:810:29
 1e054b0:    c2 05             	r2 = r7.b0 (u)			  ## power_wakeup.c:810:29
 1e054b2:    92 e0 09 80       	if (r2 > 9) goto 18 <power_wakeup_init+0x92 : 1e054c8 >			  ## power_wakeup.c:810:29
 1e054b6:    00 46             	r0 = [r3 + 0]			  ## power_wakeup.c:811:27
 1e054b8:    11 70             	r1 = 1			  ## power_wakeup.c:811:30
 1e054ba:    c1 0d             	r1 <<= r7			  ## power_wakeup.c:811:30
 1e054bc:    50 b2             	r0 |= r1			  ## power_wakeup.c:811:27
 1e054be:    08 46             	[r3 + 0] = r0			  ## power_wakeup.c:811:27
 1e054c0:    52 46             	r2 = [r3 + 20]			  ## power_wakeup.c:812:28
 1e054c2:    40 97             	r0 = r3 + 20			  ## power_wakeup.c:812:28
 1e054c4:    51 b4             	r1 |= r2			  ## power_wakeup.c:812:28
 1e054c6:    43 18             	goto 134 <.GJTIE480_0_0_+0x34 : 1e0554e >			  ## power_wakeup.c:812:28
 1e054c8:    43 fc f5 ff       	r3 = r4 + -11			  ## power_wakeup.c:813:37
 1e054cc:    c2 04             	r2 = r3.b0 (u)			  ## power_wakeup.c:813:37
 1e054ce:    92 e0 0d 80       	if (r2 > 9) goto 26 <power_wakeup_init+0xB6 : 1e054ec >			  ## power_wakeup.c:813:37
 1e054d2:    00 f6 00 90       	r0 = [r9 + 0]			  ## power_wakeup.c:814:27
 1e054d6:    11 70             	r1 = 1			  ## power_wakeup.c:814:30
 1e054d8:    c1 0c             	r1 <<= r3			  ## power_wakeup.c:814:30
 1e054da:    50 b2             	r0 |= r1			  ## power_wakeup.c:814:27
 1e054dc:    10 f6 00 90       	[r9 + 0] = r0			  ## power_wakeup.c:814:27
 1e054e0:    02 f6 14 90       	r2 = [r9 + 20]			  ## power_wakeup.c:815:28
 1e054e4:    90 fc 14 00       	r0 = r9 + 20			  ## power_wakeup.c:815:28
 1e054e8:    51 b4             	r1 |= r2			  ## power_wakeup.c:815:28
 1e054ea:    31 18             	goto 98 <.GJTIE480_0_0_+0x34 : 1e0554e >			  ## power_wakeup.c:815:28
 1e054ec:    42 fc eb ff       	r2 = r4 + -21			  ## power_wakeup.c:816:37
 1e054f0:    83 04             	r3 = r2.b0 (u)			  ## power_wakeup.c:816:37
 1e054f2:    43 e0 0b 80       	if (r3 > 4) goto 22 <power_wakeup_init+0xD6 : 1e0550c >			  ## power_wakeup.c:816:37
 1e054f6:    00 42             	r0 = [r1 + 0]			  ## power_wakeup.c:817:27
 1e054f8:    13 70             	r3 = 1			  ## power_wakeup.c:817:30
 1e054fa:    f8 fd 20 23       	r2 = r3 << r2			  ## power_wakeup.c:817:30
 1e054fe:    50 b4             	r0 |= r2			  ## power_wakeup.c:817:27
 1e05500:    08 42             	[r1 + 0] = r0			  ## power_wakeup.c:817:27
 1e05502:    51 42             	r1 = [r1 + 20]			  ## power_wakeup.c:818:28
 1e05504:    90 fc 14 02       	r0 = r9 + 532			  ## power_wakeup.c:818:28
 1e05508:    51 b4             	r1 |= r2			  ## power_wakeup.c:818:28
 1e0550a:    21 18             	goto 66 <.GJTIE480_0_0_+0x34 : 1e0554e >			  ## power_wakeup.c:818:28
 1e0550c:    41 fc e6 ff       	r1 = r4 + -26			  ## power_wakeup.c:819:20
 1e05510:    31 e0 1e 80       	if (r1 > 3) goto 60 <.GJTIE480_0_0_+0x36 : 1e05550 >			  ## power_wakeup.c:819:20
 1e05514:    a1 00             	tbb [r1]


.GJTIS480_0_0_:
 1e05516:    02     < 2 : 0x2 >
 1e05517:    07     < 7 : 0x7 >
 1e05518:    0c     < 12 : 0xC >
 1e05519:    14     < 20 : 0x14 >
 1e0551a:    00 f4 01 0a       	[r0 + 0] |= 256			  ## power_wakeup.c:820:13
 1e0551e:    01 40             	r1 = [r0 + 0]			  ## power_wakeup.c:821:13
 1e05520:    11 b5             	r1 |= 1024			  ## power_wakeup.c:821:13
 1e05522:    15 18             	goto 42 <.GJTIE480_0_0_+0x34 : 1e0554e >			  ## power_wakeup.c:821:13
 1e05524:    00 f4 02 0a       	[r0 + 0] |= 512			  ## power_wakeup.c:823:13
 1e05528:    01 40             	r1 = [r0 + 0]			  ## power_wakeup.c:824:13
 1e0552a:    91 b5             	r1 |= 2048			  ## power_wakeup.c:824:13
 1e0552c:    10 18             	goto 32 <.GJTIE480_0_0_+0x34 : 1e0554e >			  ## power_wakeup.c:824:13
 1e0552e:    09 f4 01 0a       	[r0 + 36] |= 256			  ## power_wakeup.c:826:13
 1e05532:    90 40             	r0 = [r0 + 36]			  ## power_wakeup.c:827:13
 1e05534:    92 fc 18 03       	r2 = r9 + 792			  ## power_wakeup.c:827:13
 1e05538:    01 fd 04 0a       	r1 = r0 | 1024			  ## power_wakeup.c:827:13
 1e0553c:    07 18             	goto 14 <.GJTIE480_0_0_+0x32 : 1e0554c >			  ## power_wakeup.c:827:13
 1e0553e:    09 f4 02 0a       	[r0 + 36] |= 512			  ## power_wakeup.c:829:13
 1e05542:    90 40             	r0 = [r0 + 36]			  ## power_wakeup.c:830:13
 1e05544:    92 fc 18 03       	r2 = r9 + 792			  ## power_wakeup.c:830:13
 1e05548:    01 fd 08 0a       	r1 = r0 | 2048			  ## power_wakeup.c:830:13
 1e0554c:    20 08             	r0 = r2
 1e0554e:    09 40             	[r0 + 0] = r1
 1e05550:    00 f9 00 80       	r0 = b[r8 + 0] (u)			  ## power_wakeup.c:843:16
 1e05554:    e0 6a             	r0 = b[r5 + 14] (u)			  ## power_wakeup.c:845:16
 1e05556:    f0 6a             	r0 = b[r5 + 15] (u)			  ## power_wakeup.c:845:32
 1e05558:    d0 6b             	r0 = b[r5 + 29] (u)			  ## power_wakeup.c:847:19
 1e0555a:    e0 6b             	r0 = b[r5 + 30] (u)			  ## power_wakeup.c:849:19
 1e0555c:    50 fc 60 fc       	r0 = r5 + -928			  ## power_wakeup.c:851:19
 1e05560:    00 60             	r0 = b[r0 + 0] (u)			  ## power_wakeup.c:851:19
 1e05562:    98 f3 1b 0c       	call 3151926 <local_irq_disable : 106d9c >			  ## power_wakeup.c:646:5
 1e05566:    08 00             	csync			  ## power_wakeup.c:646:5
 1e05568:    c7 ff 98 5f e1 01 	r7 = 31547288 <wk_param : 1e15f98 >
 1e0556e:    04 70             	r4 = 0
 1e05570:    81 f6 00 67       	r1 = [r6+r7]			  ## power_wakeup.c:649:16
 1e05574:    03 22             	if (r1 == 0) goto 6 <.GJTIE480_0_0_+0x62 : 1e0557c >
 1e05576:    00 05             	r0 = r4.b0 (u)			  ## power_wakeup.c:651:13
 1e05578:    12 70             	r2 = 1			  ## power_wakeup.c:651:13
 1e0557a:    72 15             	call -1308 <__hw_power_set_wakeup_IO : 1e05060 >			  ## power_wakeup.c:651:13
 1e0557c:    46 80             	r6 += 4			  ## power_wakeup.c:648:23
 1e0557e:    14 80             	r4 += 1			  ## power_wakeup.c:648:23
 1e05580:    06 e3 f6 1f       	if (r6 != 48) goto -20 <.GJTIE480_0_0_+0x56 : 1e05570 >			  ## power_wakeup.c:648:23
 1e05584:    06 70             	r6 = 0
 1e05586:    04 70             	r4 = 0
 1e05588:    c0 b9             	r0 = r4 + r7			  ## power_wakeup.c:656:16
 1e0558a:    c1 40             	r1 = [r0 + 48]			  ## power_wakeup.c:656:16
 1e0558c:    03 22             	if (r1 == 0) goto 6 <.GJTIE480_0_0_+0x7A : 1e05594 >
 1e0558e:    80 05             	r0 = r6.b0 (u)			  ## power_wakeup.c:658:13
 1e05590:    02 70             	r2 = 0			  ## power_wakeup.c:658:13
 1e05592:    66 15             	call -1332 <__hw_power_set_wakeup_IO : 1e05060 >			  ## power_wakeup.c:658:13
 1e05594:    44 80             	r4 += 4			  ## power_wakeup.c:655:22
 1e05596:    16 80             	r6 += 1			  ## power_wakeup.c:655:22
 1e05598:    c4 e0 f6 1f       	if (r4 != 12) goto -20 <.GJTIE480_0_0_+0x6E : 1e05588 >			  ## power_wakeup.c:655:22
 1e0559c:    f0 7f             	r0 = 255			  ## power_wakeup.c:663:19
 1e0559e:    08 6b             	b[r5 + 16] = r0			  ## power_wakeup.c:663:19
 1e055a0:    18 6b             	b[r5 + 17] = r0			  ## power_wakeup.c:664:19
 1e055a2:    f8 6b             	b[r5 + 31] = r0			  ## power_wakeup.c:665:21
 1e055a4:    56 fc 20 00       	r6 = r5 + 32			  ## power_wakeup.c:665:21
 1e055a8:    08 6c             	b[r6 + 0] = r0			  ## power_wakeup.c:666:21
 1e055aa:    98 f3 f5 0b       	call 3151850 <local_irq_enable : 106d98 >			  ## power_wakeup.c:668:5
 1e055ae:    81 6a             	r1 = b[r5 + 8] (u)			  ## power_wakeup.c:133:45
 1e055b0:    c0 ff c6 4f e1 01 	r0 = 31543238 <update_target_end+0x213E : 1e14fc6 >			  ## power_wakeup.c:133:5
 1e055b6:    80 f3 88 4d       	call 39696 <printf : 1e0f0ca >			  ## power_wakeup.c:133:5
 1e055ba:    91 6a             	r1 = b[r5 + 9] (u)			  ## power_wakeup.c:134:45
 1e055bc:    c0 ff e2 4f e1 01 	r0 = 31543266 <update_target_end+0x215A : 1e14fe2 >			  ## power_wakeup.c:134:5
 1e055c2:    80 f3 82 4d       	call 39684 <printf : 1e0f0ca >			  ## power_wakeup.c:134:5
 1e055c6:    a1 6a             	r1 = b[r5 + 10] (u)			  ## power_wakeup.c:135:45
 1e055c8:    c0 ff fe 4f e1 01 	r0 = 31543294 <update_target_end+0x2176 : 1e14ffe >			  ## power_wakeup.c:135:5
 1e055ce:    80 f3 7c 4d       	call 39672 <printf : 1e0f0ca >			  ## power_wakeup.c:135:5
 1e055d2:    b1 6a             	r1 = b[r5 + 11] (u)			  ## power_wakeup.c:136:45
 1e055d4:    c0 ff 1a 50 e1 01 	r0 = 31543322 <update_target_end+0x2192 : 1e1501a >			  ## power_wakeup.c:136:5
 1e055da:    80 f3 76 4d       	call 39660 <printf : 1e0f0ca >			  ## power_wakeup.c:136:5
 1e055de:    c1 6a             	r1 = b[r5 + 12] (u)			  ## power_wakeup.c:137:45
 1e055e0:    c0 ff 36 50 e1 01 	r0 = 31543350 <update_target_end+0x21AE : 1e15036 >			  ## power_wakeup.c:137:5
 1e055e6:    80 f3 70 4d       	call 39648 <printf : 1e0f0ca >			  ## power_wakeup.c:137:5
 1e055ea:    d1 6a             	r1 = b[r5 + 13] (u)			  ## power_wakeup.c:138:45
 1e055ec:    c0 ff 52 50 e1 01 	r0 = 31543378 <update_target_end+0x21CA : 1e15052 >			  ## power_wakeup.c:138:5
 1e055f2:    80 f3 6a 4d       	call 39636 <printf : 1e0f0ca >			  ## power_wakeup.c:138:5
 1e055f6:    e1 6a             	r1 = b[r5 + 14] (u)			  ## power_wakeup.c:139:45
 1e055f8:    c0 ff 6e 50 e1 01 	r0 = 31543406 <update_target_end+0x21E6 : 1e1506e >			  ## power_wakeup.c:139:5
 1e055fe:    80 f3 64 4d       	call 39624 <printf : 1e0f0ca >			  ## power_wakeup.c:139:5
 1e05602:    f1 6a             	r1 = b[r5 + 15] (u)			  ## power_wakeup.c:140:45
 1e05604:    c0 ff 8a 50 e1 01 	r0 = 31543434 <update_target_end+0x2202 : 1e1508a >			  ## power_wakeup.c:140:5
 1e0560a:    80 f3 5e 4d       	call 39612 <printf : 1e0f0ca >			  ## power_wakeup.c:140:5
 1e0560e:    81 6b             	r1 = b[r5 + 24] (u)			  ## power_wakeup.c:142:45
 1e05610:    c0 ff a6 50 e1 01 	r0 = 31543462 <update_target_end+0x221E : 1e150a6 >			  ## power_wakeup.c:142:5
 1e05616:    80 f3 58 4d       	call 39600 <printf : 1e0f0ca >			  ## power_wakeup.c:142:5
 1e0561a:    91 6b             	r1 = b[r5 + 25] (u)			  ## power_wakeup.c:143:45
 1e0561c:    c0 ff c2 50 e1 01 	r0 = 31543490 <update_target_end+0x223A : 1e150c2 >			  ## power_wakeup.c:143:5
 1e05622:    80 f3 52 4d       	call 39588 <printf : 1e0f0ca >			  ## power_wakeup.c:143:5
 1e05626:    a1 6b             	r1 = b[r5 + 26] (u)			  ## power_wakeup.c:144:45
 1e05628:    c0 ff de 50 e1 01 	r0 = 31543518 <update_target_end+0x2256 : 1e150de >			  ## power_wakeup.c:144:5
 1e0562e:    80 f3 4c 4d       	call 39576 <printf : 1e0f0ca >			  ## power_wakeup.c:144:5
 1e05632:    b1 6b             	r1 = b[r5 + 27] (u)			  ## power_wakeup.c:145:45
 1e05634:    c0 ff fa 50 e1 01 	r0 = 31543546 <update_target_end+0x2272 : 1e150fa >			  ## power_wakeup.c:145:5
 1e0563a:    80 f3 46 4d       	call 39564 <printf : 1e0f0ca >			  ## power_wakeup.c:145:5
 1e0563e:    d1 6b             	r1 = b[r5 + 29] (u)			  ## power_wakeup.c:146:45
 1e05640:    c0 ff 16 51 e1 01 	r0 = 31543574 <update_target_end+0x228E : 1e15116 >			  ## power_wakeup.c:146:5
 1e05646:    80 f3 40 4d       	call 39552 <printf : 1e0f0ca >			  ## power_wakeup.c:146:5
 1e0564a:    e1 6b             	r1 = b[r5 + 30] (u)			  ## power_wakeup.c:147:45
 1e0564c:    c0 ff 32 51 e1 01 	r0 = 31543602 <update_target_end+0x22AA : 1e15132 >			  ## power_wakeup.c:147:5
 1e05652:    80 f3 3a 4d       	call 39540 <printf : 1e0f0ca >			  ## power_wakeup.c:147:5
 1e05656:    81 6d             	r1 = b[r6 + 24] (u)			  ## power_wakeup.c:148:45
 1e05658:    c0 ff 4e 51 e1 01 	r0 = 31543630 <update_target_end+0x22C6 : 1e1514e >			  ## power_wakeup.c:148:5
 1e0565e:    80 f3 34 4d       	call 39528 <printf : 1e0f0ca >			  ## power_wakeup.c:148:5
 1e05662:    91 6d             	r1 = b[r6 + 25] (u)			  ## power_wakeup.c:149:45
 1e05664:    c0 ff 6a 51 e1 01 	r0 = 31543658 <update_target_end+0x22E2 : 1e1516a >			  ## power_wakeup.c:149:5
 1e0566a:    80 f3 2e 4d       	call 39516 <printf : 1e0f0ca >			  ## power_wakeup.c:149:5
 1e0566e:    a1 6d             	r1 = b[r6 + 26] (u)			  ## power_wakeup.c:150:45
 1e05670:    c0 ff 86 51 e1 01 	r0 = 31543686 <update_target_end+0x22FE : 1e15186 >			  ## power_wakeup.c:150:5
 1e05676:    80 f3 28 4d       	call 39504 <printf : 1e0f0ca >			  ## power_wakeup.c:150:5
 1e0567a:    c1 6b             	r1 = b[r5 + 28] (u)			  ## power_wakeup.c:152:45
 1e0567c:    c0 ff a2 51 e1 01 	r0 = 31543714 <update_target_end+0x231A : 1e151a2 >			  ## power_wakeup.c:152:5
 1e05682:    80 f3 22 4d       	call 39492 <printf : 1e0f0ca >			  ## power_wakeup.c:152:5
 1e05686:    01 f9 18 80       	r1 = b[r8 + 24] (u)			  ## power_wakeup.c:157:42
 1e0568a:    c0 ff be 51 e1 01 	r0 = 31543742 <update_target_end+0x2336 : 1e151be >			  ## power_wakeup.c:157:5
 1e05690:    80 f3 1b 4d       	call 39478 <printf : 1e0f0ca >			  ## power_wakeup.c:157:5
 1e05694:    01 f9 19 80       	r1 = b[r8 + 25] (u)			  ## power_wakeup.c:158:42
 1e05698:    c0 ff d8 51 e1 01 	r0 = 31543768 <update_target_end+0x2350 : 1e151d8 >			  ## power_wakeup.c:158:5
 1e0569e:    80 f3 14 4d       	call 39464 <printf : 1e0f0ca >			  ## power_wakeup.c:158:5
 1e056a2:    01 f9 1a 80       	r1 = b[r8 + 26] (u)			  ## power_wakeup.c:159:42
 1e056a6:    c0 ff f2 51 e1 01 	r0 = 31543794 <update_target_end+0x236A : 1e151f2 >			  ## power_wakeup.c:159:5
 1e056ac:    80 f3 0d 4d       	call 39450 <printf : 1e0f0ca >			  ## power_wakeup.c:159:5
 1e056b0:    01 f9 1b 80       	r1 = b[r8 + 27] (u)			  ## power_wakeup.c:160:42
 1e056b4:    c0 ff 0c 52 e1 01 	r0 = 31543820 <update_target_end+0x2384 : 1e1520c >			  ## power_wakeup.c:160:5
 1e056ba:    80 f3 06 4d       	call 39436 <printf : 1e0f0ca >			  ## power_wakeup.c:160:5
 1e056be:    01 f9 1c 80       	r1 = b[r8 + 28] (u)			  ## power_wakeup.c:161:42
 1e056c2:    c0 ff 26 52 e1 01 	r0 = 31543846 <update_target_end+0x239E : 1e15226 >			  ## power_wakeup.c:161:5
 1e056c8:    80 f3 ff 4c       	call 39422 <printf : 1e0f0ca >			  ## power_wakeup.c:161:5
 1e056cc:    01 f9 1d 80       	r1 = b[r8 + 29] (u)			  ## power_wakeup.c:162:42
 1e056d0:    c0 ff 40 52 e1 01 	r0 = 31543872 <update_target_end+0x23B8 : 1e15240 >			  ## power_wakeup.c:162:5
 1e056d6:    80 f3 f8 4c       	call 39408 <printf : 1e0f0ca >			  ## power_wakeup.c:162:5
 1e056da:    01 f9 1e 80       	r1 = b[r8 + 30] (u)			  ## power_wakeup.c:163:42
 1e056de:    c0 ff 5a 52 e1 01 	r0 = 31543898 <update_target_end+0x23D2 : 1e1525a >			  ## power_wakeup.c:163:5
 1e056e4:    80 f3 f1 4c       	call 39394 <printf : 1e0f0ca >			  ## power_wakeup.c:163:5
 1e056e8:    01 f9 1f 80       	r1 = b[r8 + 31] (u)			  ## power_wakeup.c:164:42
 1e056ec:    c0 ff 74 52 e1 01 	r0 = 31543924 <update_target_end+0x23EC : 1e15274 >			  ## power_wakeup.c:164:5
 1e056f2:    80 f3 ea 4c       	call 39380 <printf : 1e0f0ca >			  ## power_wakeup.c:164:5
 1e056f6:    54 fc 80 00       	r4 = r5 + 128			  ## power_wakeup.c:164:5
 1e056fa:    01 68             	r1 = b[r4 + 0] (u)			  ## power_wakeup.c:165:42
 1e056fc:    c0 ff 8e 52 e1 01 	r0 = 31543950 <update_target_end+0x2406 : 1e1528e >			  ## power_wakeup.c:165:5
 1e05702:    80 f3 e2 4c       	call 39364 <printf : 1e0f0ca >			  ## power_wakeup.c:165:5
 1e05706:    11 68             	r1 = b[r4 + 1] (u)			  ## power_wakeup.c:166:42
 1e05708:    c0 ff a8 52 e1 01 	r0 = 31543976 <update_target_end+0x2420 : 1e152a8 >			  ## power_wakeup.c:166:5
 1e0570e:    80 f3 dc 4c       	call 39352 <printf : 1e0f0ca >			  ## power_wakeup.c:166:5
 1e05712:    21 68             	r1 = b[r4 + 2] (u)			  ## power_wakeup.c:167:42
 1e05714:    c0 ff c2 52 e1 01 	r0 = 31544002 <update_target_end+0x243A : 1e152c2 >			  ## power_wakeup.c:167:5
 1e0571a:    80 f3 d6 4c       	call 39340 <printf : 1e0f0ca >			  ## power_wakeup.c:167:5
 1e0571e:    31 68             	r1 = b[r4 + 3] (u)			  ## power_wakeup.c:168:42
 1e05720:    c0 ff dc 52 e1 01 	r0 = 31544028 <update_target_end+0x2454 : 1e152dc >			  ## power_wakeup.c:168:5
 1e05726:    80 f3 d0 4c       	call 39328 <printf : 1e0f0ca >			  ## power_wakeup.c:168:5
 1e0572a:    05 84             	r5 += 64			  ## power_wakeup.c:168:5
 1e0572c:    01 6a             	r1 = b[r5 + 0] (u)			  ## power_wakeup.c:170:41
 1e0572e:    c0 ff f6 52 e1 01 	r0 = 31544054 <update_target_end+0x246E : 1e152f6 >			  ## power_wakeup.c:170:5
 1e05734:    80 f3 c9 4c       	call 39314 <printf : 1e0f0ca >			  ## power_wakeup.c:170:5
 1e05738:    11 6a             	r1 = b[r5 + 1] (u)			  ## power_wakeup.c:171:41
 1e0573a:    c0 ff 0f 53 e1 01 	r0 = 31544079 <update_target_end+0x2487 : 1e1530f >			  ## power_wakeup.c:171:5
 1e05740:    80 f3 c3 4c       	call 39302 <printf : 1e0f0ca >			  ## power_wakeup.c:171:5
 1e05744:    21 6a             	r1 = b[r5 + 2] (u)			  ## power_wakeup.c:172:41
 1e05746:    c0 ff 28 53 e1 01 	r0 = 31544104 <update_target_end+0x24A0 : 1e15328 >			  ## power_wakeup.c:172:5
 1e0574c:    80 f3 bd 4c       	call 39290 <printf : 1e0f0ca >			  ## power_wakeup.c:172:5
 1e05750:    40 fc 2e 07       	r0 = r4 + 1838			  ## power_wakeup.c:172:5
 1e05754:    01 60             	r1 = b[r0 + 0] (u)			  ## power_wakeup.c:674:5
 1e05756:    91 b2             	r1 |= 32			  ## power_wakeup.c:674:5
 1e05758:    09 60             	b[r0 + 0] = r1			  ## power_wakeup.c:674:5
 1e0575a:    00 70             	r0 = 0			  ## power_wakeup.c:860:15
 1e0575c:    c8 6b             	b[r5 + 28] = r0			  ## power_wakeup.c:860:15
 1e0575e:    88 68             	b[r4 + 8] = r0			  ## power_wakeup.c:861:18
 1e05760:    98 68             	b[r4 + 9] = r0			  ## power_wakeup.c:862:18
 1e05762:    a8 68             	b[r4 + 10] = r0			  ## power_wakeup.c:863:18
 1e05764:    b8 68             	b[r4 + 11] = r0			  ## power_wakeup.c:864:18
 1e05766:    c8 68             	b[r4 + 12] = r0			  ## power_wakeup.c:865:18
 1e05768:    59 01             	{pc, r9-r4} = [sp++]			  ## power_wakeup.c:866:1


aport_edge_wkup_set_callback:
 1e0576a:    c0 ff 20 1e 00 00 	r0 = 7712 <aport_edge_wakeup_callback : 1e20 >			  ## power_wakeup.c:978:0
 1e05770:    c1 ff 2a 36 e0 01 	r1 = 31471146 <aport_wakeup_callback : 1e0362a >			  ## power_wakeup.c:979:32
 1e05776:    09 40             	[r0 + 0] = r1			  ## power_wakeup.c:979:32
 1e05778:    20 00             	rts			  ## power_wakeup.c:980:1


port_edge_wkup_set_callback:
 1e0577a:    c0 ff 1c 1e 00 00 	r0 = 7708 <port_edge_wakeup_callback : 1e1c >			  ## power_wakeup.c:973:0
 1e05780:    c1 ff 2c 36 e0 01 	r1 = 31471148 <port_wakeup_callback : 1e0362c >			  ## power_wakeup.c:974:31
 1e05786:    09 40             	[r0 + 0] = r1			  ## power_wakeup.c:974:31
 1e05788:    20 00             	rts			  ## power_wakeup.c:975:1


adc_pmu_detect_en:
 1e0578a:    c0 ff 94 18 1a 00 	r0 = 1710228 <uECC_vli_cmp_unsafe+0x9A898 : 1a1894 >			  ## p33.c:112:0
 1e05790:    01 60             	r1 = b[r0 + 0] (u)			  ## p33.c:113:5
 1e05792:    11 b0             	r1 |= 1			  ## p33.c:113:5
 1e05794:    09 60             	b[r0 + 0] = r1			  ## p33.c:113:5
 1e05796:    10 70             	r0 = 1			  ## p33.c:114:5
 1e05798:    ff f3 6a d5       	goto -21804 <adc_pmu_ch_select : 1e00270 >			  ## p33.c:114:5


check_wvdd_pvdd_trim:
 1e0579c:    77 01             	[--sp] = {rets, r7-r4}			  ## pmu_calibrate.c:304:0
 1e0579e:    c4 ff a0 24 00 00 	r4 = 9376 <pmu_voltage : 24a0 >			  ## pmu_calibrate.c:304:0
 1e057a4:    f1 7f             	r1 = 255			  ## pmu_calibrate.c:305:5
 1e057a6:    42 78             	r2 = 132			  ## pmu_calibrate.c:305:5
 1e057a8:    40 08             	r0 = r4			  ## pmu_calibrate.c:305:5
 1e057aa:    98 f3 a1 0b       	call 3151682 <memset : 106ef0 >			  ## pmu_calibrate.c:305:5
 1e057ae:    30 76             	r0 = 99			  ## pmu_calibrate.c:307:18
 1e057b0:    42 78             	r2 = 132			  ## pmu_calibrate.c:307:18
 1e057b2:    41 08             	r1 = r4			  ## pmu_calibrate.c:307:18
 1e057b4:    80 f3 dc 5e       	call 48568 <syscfg_read : 1e11570 >			  ## pmu_calibrate.c:307:18
 1e057b8:    01 08             	r1 = r0			  ## pmu_calibrate.c:307:18
 1e057ba:    10 70             	r0 = 1
 1e057bc:    11 e0 32 b0       	ifs (r1 < 1) goto 100 <check_wvdd_pvdd_trim+0x88 : 1e05824 >
 1e057c0:    43 fc 80 00       	r3 = r4 + 128
 1e057c4:    12 66             	r2 = b[r3 + 1] (u)			  ## pmu_calibrate.c:314:26
 1e057c6:    00 ff ff 20 2c 00 	if (r2 == 255) goto 88 <check_wvdd_pvdd_trim+0x88 : 1e05824 >			  ## pmu_calibrate.c:314:26
 1e057cc:    35 66             	r5 = b[r3 + 3] (u)			  ## pmu_calibrate.c:314:62
 1e057ce:    00 ff ff 50 28 00 	if (r5 == 255) goto 80 <check_wvdd_pvdd_trim+0x88 : 1e05824 >			  ## pmu_calibrate.c:314:62
 1e057d4:    01 66             	r1 = b[r3 + 0] (u)			  ## pmu_calibrate.c:314:102
 1e057d6:    00 ff ff 10 24 00 	if (r1 == 255) goto 72 <check_wvdd_pvdd_trim+0x88 : 1e05824 >
 1e057dc:    23 66             	r3 = b[r3 + 2] (u)			  ## pmu_calibrate.c:314:138
 1e057de:    00 ff ff 30 20 00 	if (r3 == 255) goto 64 <check_wvdd_pvdd_trim+0x88 : 1e05824 >			  ## pmu_calibrate.c:314:138
 1e057e4:    c6 ff b0 20 00 00 	r6 = 8368 <gatt_client_conn_handle : 20b0 >			  ## power_reset.c:4:12
 1e057ea:    06 f6 98 60       	r6 = [r6 + 152]			  ## power_reset.c:4:12
 1e057ee:    c7 ff 00 08 00 03 	r7 = 50333696 <uECC_vli_cmp_unsafe+0xEF9804 : 1000800 >			  ## pmu_calibrate.c:320:47
 1e057f4:    76 f0 15 00       	if ((r6 & r7) == 0) goto 42 <check_wvdd_pvdd_trim+0x86 : 1e05822 >			  ## pmu_calibrate.c:320:47
 1e057f8:    16 9a             	r6 = r5 + 1			  ## pmu_calibrate.c:322:45
 1e057fa:    e6 e0 05 80       	if (r6 > 14) goto 10 <check_wvdd_pvdd_trim+0x6C : 1e05808 >
 1e057fe:    a2 ba             	r2 = r5 - r2			  ## pmu_calibrate.c:323:48
 1e05800:    12 e0 10 c0       	ifs (r2 > 1) goto 32 <check_wvdd_pvdd_trim+0x88 : 1e05824 >			  ## pmu_calibrate.c:323:48
 1e05804:    16 f9 83 40       	b[r4 + 131] = r6			  ## pmu_calibrate.c:324:47
 1e05808:    12 96             	r2 = r3 + 1			  ## pmu_calibrate.c:331:45
 1e0580a:    e2 e0 05 80       	if (r2 > 14) goto 10 <check_wvdd_pvdd_trim+0x7C : 1e05818 >			  ## pmu_calibrate.c:331:45
 1e0580e:    61 b6             	r1 = r3 - r1			  ## pmu_calibrate.c:332:48
 1e05810:    11 e0 08 c0       	ifs (r1 > 1) goto 16 <check_wvdd_pvdd_trim+0x88 : 1e05824 >			  ## pmu_calibrate.c:332:48
 1e05814:    12 f9 82 40       	b[r4 + 130] = r2			  ## pmu_calibrate.c:333:47
 1e05818:    30 76             	r0 = 99			  ## pmu_calibrate.c:340:22
 1e0581a:    42 78             	r2 = 132			  ## pmu_calibrate.c:340:22
 1e0581c:    41 08             	r1 = r4			  ## pmu_calibrate.c:340:22
 1e0581e:    80 f3 13 5f       	call 48678 <syscfg_write : 1e11648 >			  ## pmu_calibrate.c:340:22
 1e05822:    00 70             	r0 = 0
 1e05824:    57 01             	{pc, r7-r4} = [sp++]			  ## pmu_calibrate.c:353:1


adc_wait_pnd:
 1e05826:    c0 ff 00 31 1e 00 	r0 = 1978624 <uECC_vli_cmp_unsafe+0xDC104 : 1e3100 >			  ## adc_api.c:349:0
 1e0582c:    01 40             	r1 = [r0 + 0]			  ## adc_api.c:350:22
 1e0582e:    51 04             	r1 = r1.b0 (s)			  ## adc_api.c:350:12
 1e05830:    f1 ef fc cf       	ifs (r1 > -1) goto -8 <adc_wait_pnd+0x6 : 1e0582c >			  ## adc_api.c:350:5
 1e05834:    11 40             	r1 = [r0 + 4]			  ## adc_api.c:351:27
 1e05836:    00 00             	nop			  ## adc_api.c:352:5
 1e05838:    00 f4 40 09       	[r0 + 0] |= 64			  ## adc_api.c:353:17
 1e0583c:    60 04             	r0 = r1.l (u)			  ## adc_api.c:354:5
 1e0583e:    20 00             	rts			  ## adc_api.c:354:5


get_vdd_voltage:
 1e05840:    75 01             	[--sp] = {rets, r5, r4}			  ## adc_api.c:410:0
 1e05842:    04 08             	r4 = r0			  ## adc_api.c:410:0
 1e05844:    d0 70             	r0 = 13			  ## adc_api.c:414:5
 1e05846:    bf f3 2c d5       	call -21928 <adc_sample : 1e002a2 >			  ## adc_api.c:414:5
 1e0584a:    05 70             	r5 = 0			  ## adc_api.c:414:5
 1e0584c:    a2 70             	r2 = 10
 1e0584e:    03 18             	goto 6 <get_vdd_voltage+0x16 : 1e05856 >
 1e05850:    ea 17             	call -44 <adc_wait_pnd : 1e05826 >			  ## adc_api.c:416:22
 1e05852:    05 09             	r5 += r0			  ## adc_api.c:416:19
 1e05854:    f2 8f             	r2 += -1			  ## adc_api.c:415:5
 1e05856:    fc 35             	if (r2 != 0) goto -8 <get_vdd_voltage+0x10 : 1e05850 >			  ## adc_api.c:415:5
 1e05858:    40 08             	r0 = r4			  ## adc_api.c:419:5
 1e0585a:    bf f3 22 d5       	call -21948 <adc_sample : 1e002a2 >			  ## adc_api.c:419:5
 1e0585e:    02 70             	r2 = 0			  ## adc_api.c:419:5
 1e05860:    a3 70             	r3 = 10
 1e05862:    03 18             	goto 6 <get_vdd_voltage+0x2A : 1e0586a >
 1e05864:    e0 17             	call -64 <adc_wait_pnd : 1e05826 >			  ## adc_api.c:421:23
 1e05866:    02 09             	r2 += r0			  ## adc_api.c:421:20
 1e05868:    f3 8f             	r3 += -1			  ## adc_api.c:420:5
 1e0586a:    fc 37             	if (r3 != 0) goto -8 <get_vdd_voltage+0x24 : 1e05864 >
 1e0586c:    a1 70             	r1 = 10			  ## adc_api.c:424:29
 1e0586e:    c0 fe 10 05       	r0 = r5 / r1 (u)			  ## adc_api.c:424:29
 1e05872:    c0 fe 10 12       	r1 = r2 / r1 (u)			  ## adc_api.c:425:30
 1e05876:    15 01             	{rets, r5, r4} = [sp++]			  ## adc_api.c:427:12
 1e05878:    ff f3 15 ea       	goto -11222 <adc_value_to_voltage : 1e02ca6 >			  ## adc_api.c:427:12


get_wvdd_trim_level:
 1e0587c:    c0 ff a0 24 00 00 	r0 = 9376 <pmu_voltage : 24a0 >			  ## pmu_calibrate.c:283:0
 1e05882:    00 f9 83 00       	r0 = b[r0 + 131] (u)			  ## pmu_calibrate.c:284:5
 1e05886:    20 00             	rts			  ## pmu_calibrate.c:284:5


get_pvdd_trim_level:
 1e05888:    c0 ff a0 24 00 00 	r0 = 9376 <pmu_voltage : 24a0 >			  ## pmu_calibrate.c:288:0
 1e0588e:    00 f9 82 00       	r0 = b[r0 + 130] (u)			  ## pmu_calibrate.c:289:5
 1e05892:    20 00             	rts			  ## pmu_calibrate.c:289:5


update_wvdd_pvdd_trim_level:
 1e05894:    c3 ff a0 24 00 00 	r3 = 9376 <pmu_voltage : 24a0 >			  ## pmu_calibrate.c:293:0
 1e0589a:    32 fc 80 00       	r2 = r3 + 128			  ## pmu_calibrate.c:295:28
 1e0589e:    38 64             	b[r2 + 3] = r0			  ## pmu_calibrate.c:294:57
 1e058a0:    18 64             	b[r2 + 1] = r0			  ## pmu_calibrate.c:294:28
 1e058a2:    29 64             	b[r2 + 2] = r1			  ## pmu_calibrate.c:295:57
 1e058a4:    09 64             	b[r2 + 0] = r1			  ## pmu_calibrate.c:295:28
 1e058a6:    30 76             	r0 = 99			  ## pmu_calibrate.c:297:18
 1e058a8:    42 78             	r2 = 132			  ## pmu_calibrate.c:297:18
 1e058aa:    31 08             	r1 = r3			  ## pmu_calibrate.c:297:18
 1e058ac:    c0 f3 cc 5e       	goto 48536 <syscfg_write : 1e11648 >			  ## pmu_calibrate.c:297:18


adc_add_sample_ch:
 1e058b0:    78 01             	[--sp] = {rets, r8-r4}			  ## adc_api.c:51:0
 1e058b2:    fe 0b             	sp += -4			  ## adc_api.c:51:0
 1e058b4:    04 08             	r4 = r0			  ## adc_api.c:51:0
 1e058b6:    c6 ff c4 25 00 00 	r6 = 9668 <adc_queue : 25c4 >			  ## adc_api.c:51:0
 1e058bc:    05 70             	r5 = 0			  ## adc_api.c:51:0
 1e058be:    c8 ff 88 2e e1 01 	r8 = 31534728 <update_target_end : 1e12e88 >			  ## adc_api.c:51:0
 1e058c4:    c7 ff 97 2e e1 01 	r7 = 31534743 <update_target_end+0xF : 1e12e97 >			  ## adc_api.c:51:0
 1e058ca:    0f 18             	goto 30 <adc_add_sample_ch+0x3A : 1e058ea >			  ## adc_api.c:51:0
 1e058cc:    00 4c             	r0 = [r6 + 0]			  ## adc_api.c:54:65
 1e058ce:    08 02             	[sp] = r0			  ## adc_api.c:54:9
 1e058d0:    80 08             	r0 = r8			  ## adc_api.c:54:9
 1e058d2:    71 08             	r1 = r7			  ## adc_api.c:54:9
 1e058d4:    52 08             	r2 = r5			  ## adc_api.c:54:9
 1e058d6:    43 08             	r3 = r4			  ## adc_api.c:54:9
 1e058d8:    80 f3 f7 4b       	call 38894 <printf : 1e0f0ca >			  ## adc_api.c:54:9
 1e058dc:    00 4c             	r0 = [r6 + 0]			  ## adc_api.c:55:26
 1e058de:    40 f2 13 00       	if (r0 == r4) goto 38 <adc_add_sample_ch+0x58 : 1e05908 >			  ## adc_api.c:55:26
 1e058e2:    f0 ef 05 00       	if (r0 == -1) goto 10 <adc_add_sample_ch+0x40 : 1e058f0 >
 1e058e6:    06 81             	r6 += 16			  ## adc_api.c:53:5
 1e058e8:    15 80             	r5 += 1			  ## adc_api.c:53:34
 1e058ea:    95 e0 ef 9f       	if (r5 <= 9) goto -34 <adc_add_sample_ch+0x1C : 1e058cc >
 1e058ee:    0c 18             	goto 24 <adc_add_sample_ch+0x58 : 1e05908 >
 1e058f0:    0c 4c             	[r6 + 0] = r4			  ## adc_api.c:58:29
 1e058f2:    10 70             	r0 = 1			  ## adc_api.c:59:32
 1e058f4:    28 5c             	h[r6 + 4] = r0			  ## adc_api.c:59:32
 1e058f6:    00 70             	r0 = 0			  ## adc_api.c:59:32
 1e058f8:    28 4c             	[r6 + 8] = r0			  ## adc_api.c:60:34
 1e058fa:    38 4c             	[r6 + 12] = r0			  ## adc_api.c:61:40
 1e058fc:    c0 ff a9 2e e1 01 	r0 = 31534761 <update_target_end+0x21 : 1e12ea9 >			  ## adc_api.c:62:13
 1e05902:    41 08             	r1 = r4			  ## adc_api.c:62:13
 1e05904:    80 f3 e1 4b       	call 38850 <printf : 1e0f0ca >			  ## adc_api.c:62:13
 1e05908:    02 0a             	sp += 4
 1e0590a:    58 01             	{pc, r8-r4} = [sp++]


adc_set_sample_freq:
 1e0590c:    c1 ff d0 25 00 00 	r1 = 9680 <adc_queue+0xC : 25d0 >			  ## adc_api.c:70:0
 1e05912:    02 70             	r2 = 0			  ## adc_api.c:70:0
 1e05914:    06 18             	goto 12 <adc_set_sample_freq+0x16 : 1e05922 >			  ## adc_api.c:70:0
 1e05916:    03 f6 f4 1f       	r3 = [r1 + -12]			  ## adc_api.c:73:26
 1e0591a:    03 f2 05 00       	if (r3 == r0) goto 10 <adc_set_sample_freq+0x1C : 1e05928 >			  ## adc_api.c:73:26
 1e0591e:    01 81             	r1 += 16			  ## adc_api.c:72:5
 1e05920:    12 80             	r2 += 1			  ## adc_api.c:72:34
 1e05922:    92 e0 f8 9f       	if (r2 <= 9) goto -16 <adc_set_sample_freq+0xA : 1e05916 >
 1e05926:    20 00             	rts
 1e05928:    c0 f4 64 19       	[r1 + 0] = 100			  ## adc_api.c:74:40
 1e0592c:    c0 ff 88 08 00 00 	r0 = 2184 <jiffies : 888 >			  ## adc_api.c:75:59
 1e05932:    00 40             	r0 = [r0 + 0]			  ## adc_api.c:75:59
 1e05934:    40 86             	r0 += 100			  ## adc_api.c:75:57
 1e05936:    10 f6 fc 1f       	[r1 + -4] = r0			  ## adc_api.c:75:34
 1e0593a:    20 00             	rts


board_init:
 1e0593c:    7a 01             	[--sp] = {rets, r10-r4}			  ## board_ac6328a_keyfob.c:307:0
 1e0593e:    b2 0b             	sp += -156			  ## board_ac6328a_keyfob.c:307:0
 1e05940:    c2 ff 5c 4d e1 01 	r2 = 31542620 <update_target_end+0x1ED4 : 1e14d5c >			  ## board_ac6328a_keyfob.c:543:5
 1e05946:    c3 ff 7d 4d e1 01 	r3 = 31542653 <update_target_end+0x1EF5 : 1e14d7d >			  ## board_ac6328a_keyfob.c:543:5
 1e0594c:    20 70             	r0 = 2			  ## board_ac6328a_keyfob.c:543:5
 1e0594e:    80 f3 ec 4b       	call 38872 <log_print : 1e0f12a >			  ## board_ac6328a_keyfob.c:543:5
 1e05952:    bf f3 4b fa       	call -2922 <power_init : 1e04dec >			  ## board_ac6328a_keyfob.c:545:5
 1e05956:    bf f3 6c fb       	call -2344 <power_set_callback : 1e05032 >			  ## board_ac6328a_keyfob.c:548:5
 1e0595a:    bf f3 7a fb       	call -2316 <power_keep_dacvdd_en : 1e05052 >			  ## board_ac6328a_keyfob.c:551:5
 1e0595e:    6b 15             	call -1322 <power_wakeup_init : 1e05436 >			  ## board_ac6328a_keyfob.c:553:2
 1e05960:    04 17             	call -504 <aport_edge_wkup_set_callback : 1e0576a >			  ## board_ac6328a_keyfob.c:555:5
 1e05962:    0b 17             	call -490 <port_edge_wkup_set_callback : 1e0577a >			  ## board_ac6328a_keyfob.c:556:5
 1e05964:    12 17             	call -476 <adc_pmu_detect_en : 1e0578a >			  ## adc_api.c:608:5
 1e05966:    1a 17             	call -460 <check_wvdd_pvdd_trim : 1e0579c >			  ## adc_api.c:612:15
 1e05968:    0a 08             	r10 = r0			  ## adc_api.c:612:15
 1e0596a:    2e 20             	if (r0 == 0) goto 92 <board_init+0x8C : 1e059c8 >			  ## adc_api.c:435:9
 1e0596c:    c7 ff 91 18 1a 00 	r7 = 1710225 <uECC_vli_cmp_unsafe+0x9A895 : 1a1891 >
 1e05972:    c0 6e             	r0 = b[r7 + 12] (u)			  ## adc_api.c:436:9
 1e05974:    20 fd f0 09       	r0 = r0 & 240			  ## adc_api.c:436:9
 1e05978:    c8 6e             	b[r7 + 12] = r0			  ## adc_api.c:436:9
 1e0597a:    c0 6e             	r0 = b[r7 + 12] (u)			  ## adc_api.c:437:9
 1e0597c:    10 b2             	r0 |= 16			  ## adc_api.c:437:9
 1e0597e:    c8 6e             	b[r7 + 12] = r0			  ## adc_api.c:437:9
 1e05980:    00 6e             	r0 = b[r7 + 0] (u)			  ## adc_api.c:438:9
 1e05982:    90 b1             	r0 |= 8			  ## adc_api.c:438:9
 1e05984:    08 6e             	b[r7 + 0] = r0			  ## adc_api.c:438:9
 1e05986:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x4A : 7d0 >			  ## adc_api.c:439:9
 1e0598a:    8f f3 65 f9       	call 2093770 <delay : 4c58 >			  ## adc_api.c:439:9
 1e0598e:    06 70             	r6 = 0			  ## adc_api.c:439:9
 1e05990:    c5 ff 0d 00 0e 00 	r5 = 917517 <text_size+0xBF15D : e000d >			  ## adc_api.c:439:9
 1e05996:    c0 6e             	r0 = b[r7 + 12] (u)			  ## adc_api.c:441:13
 1e05998:    20 fd f0 09       	r0 = r0 & 240			  ## adc_api.c:441:13
 1e0599c:    50 bc             	r0 |= r6			  ## adc_api.c:441:13
 1e0599e:    c8 6e             	b[r7 + 12] = r0			  ## adc_api.c:441:13
 1e059a0:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x4A : 7d0 >			  ## adc_api.c:442:13
 1e059a4:    8f f3 58 f9       	call 2093744 <delay : 4c58 >			  ## adc_api.c:442:13
 1e059a8:    50 08             	r0 = r5			  ## adc_api.c:443:17
 1e059aa:    4a 17             	call -364 <get_vdd_voltage : 1e05840 >			  ## adc_api.c:443:17
 1e059ac:    08 ff 8a 02 04 00 	if (r0 > 650) goto 8 <board_init+0x7E : 1e059ba >			  ## adc_api.c:443:17
 1e059b2:    16 80             	r6 += 1			  ## adc_api.c:446:22
 1e059b4:    80 05             	r0 = r6.b0 (u)			  ## adc_api.c:446:22
 1e059b6:    80 e0 ee 3f       	if (r0 < 8) goto -36 <board_init+0x5A : 1e05996 >			  ## adc_api.c:446:22
 1e059ba:    c0 6e             	r0 = b[r7 + 12] (u)			  ## adc_api.c:448:9
 1e059bc:    70 b2             	r0 &= 4294967279			  ## adc_api.c:448:9
 1e059be:    c8 6e             	b[r7 + 12] = r0			  ## adc_api.c:448:9
 1e059c0:    00 6e             	r0 = b[r7 + 0] (u)			  ## adc_api.c:449:9
 1e059c2:    f0 b1             	r0 &= 4294967287			  ## adc_api.c:449:9
 1e059c4:    08 6e             	b[r7 + 0] = r0			  ## adc_api.c:449:9
 1e059c6:    02 18             	goto 4 <board_init+0x90 : 1e059cc >			  ## adc_api.c:449:9
 1e059c8:    59 17             	call -334 <get_wvdd_trim_level : 1e0587c >			  ## adc_api.c:453:20
 1e059ca:    06 08             	r6 = r0			  ## adc_api.c:453:20
 1e059cc:    88 05             	r8 = r6.b0 (u)			  ## adc_api.c:455:46
 1e059ce:    c0 ff f2 2e e1 01 	r0 = 31534834 <update_target_end+0x6A : 1e12ef2 >			  ## adc_api.c:455:5
 1e059d4:    a1 08             	r1 = r10			  ## adc_api.c:455:5
 1e059d6:    82 08             	r2 = r8			  ## adc_api.c:455:5
 1e059d8:    80 f3 77 4b       	call 38638 <printf : 1e0f0ca >			  ## adc_api.c:455:5
 1e059dc:    c0 ff ad 0f 1a 00 	r0 = 1707949 <uECC_vli_cmp_unsafe+0x99FB1 : 1a0fad >			  ## adc_api.c:458:15
 1e059e2:    0e 60             	b[r0 + 0] = r6			  ## adc_api.c:458:15
 1e059e4:    07 fc 96 08       	r7 = r0 + 2198
 1e059e8:    0a e0 1a 00       	if (r10 == 0) goto 52 <board_init+0xE4 : 1e05a20 >			  ## adc_api.c:466:9
 1e059ec:    f5 70             	r5 = 15
 1e059ee:    09 70             	r9 = 0
 1e059f0:    04 7f             	r4 = 240
 1e059f2:    c6 ff 0d 00 08 00 	r6 = 524301 <text_size+0x5F15D : 8000d >
 1e059f8:    03 70             	r3 = 0
 1e059fa:    10 18             	goto 32 <board_init+0xE0 : 1e05a1c >
 1e059fc:    10 6e             	r0 = b[r7 + 1] (u)			  ## adc_api.c:468:13
 1e059fe:    e0 fd 50 04       	r0 = r4 | r5			  ## adc_api.c:468:13
 1e05a02:    18 6e             	b[r7 + 1] = r0			  ## adc_api.c:468:13
 1e05a04:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x4A : 7d0 >			  ## adc_api.c:469:13
 1e05a08:    8f f3 26 f9       	call 2093644 <delay : 4c58 >			  ## adc_api.c:469:13
 1e05a0c:    60 08             	r0 = r6			  ## adc_api.c:470:17
 1e05a0e:    18 17             	call -464 <get_vdd_voltage : 1e05840 >			  ## adc_api.c:470:17
 1e05a10:    03 08             	r3 = r0			  ## adc_api.c:470:17
 1e05a12:    03 ff 1a 34 08 00 	if (r3 < 1050) goto 16 <board_init+0xEC : 1e05a28 >
 1e05a18:    04 8f             	r4 += -16			  ## adc_api.c:467:9
 1e05a1a:    f5 8f             	r5 += -1			  ## adc_api.c:467:24
 1e05a1c:    ef 39             	if (r4 != 0) goto -34 <board_init+0xC0 : 1e059fc >
 1e05a1e:    05 18             	goto 10 <board_init+0xEE : 1e05a2a >
 1e05a20:    33 17             	call -410 <get_pvdd_trim_level : 1e05888 >			  ## adc_api.c:483:15
 1e05a22:    06 08             	r6 = r0			  ## adc_api.c:483:15
 1e05a24:    03 70             	r3 = 0
 1e05a26:    0d 18             	goto 26 <board_init+0x106 : 1e05a42 >
 1e05a28:    59 08             	r9 = r5
 1e05a2a:    10 70             	r0 = 1
 1e05a2c:    11 70             	r1 = 1			  ## adc_api.c:475:15
 1e05a2e:    03 ff e8 33 01 00 	if (r3 < 1000) goto 2 <board_init+0xFA : 1e05a36 >			  ## adc_api.c:475:15
 1e05a34:    01 70             	r1 = 0			  ## adc_api.c:475:15
 1e05a36:    f9 e0 01 30       	if (r9 < 15) goto 2 <board_init+0x100 : 1e05a3c >
 1e05a3a:    00 70             	r0 = 0			  ## adc_api.c:476:21
 1e05a3c:    50 b3             	r0 &= r1			  ## adc_api.c:475:13
 1e05a3e:    80 fb 90 60       	r6 = r0 + r9			  ## adc_api.c:475:13
 1e05a42:    10 6e             	r0 = b[r7 + 1] (u)			  ## adc_api.c:486:5
 1e05a44:    30 c1             	r0 = r6 << 4			  ## adc_api.c:486:5
 1e05a46:    50 bc             	r0 |= r6			  ## adc_api.c:486:5
 1e05a48:    18 6e             	b[r7 + 1] = r0			  ## adc_api.c:486:5
 1e05a4a:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x4A : 7d0 >			  ## adc_api.c:487:5
 1e05a4e:    8f f3 03 f9       	call 2093574 <delay : 4c58 >			  ## adc_api.c:487:5
 1e05a52:    00 6e             	r0 = b[r7 + 0] (u)			  ## adc_api.c:488:5
 1e05a54:    61 fc fa ff       	r1 = r6 + -6			  ## adc_api.c:488:5
 1e05a58:    00 fd 70 19       	r0 = r1 | 112			  ## adc_api.c:488:5
 1e05a5c:    08 6e             	b[r7 + 0] = r0			  ## adc_api.c:488:5
 1e05a5e:    c0 ff 0a 2f e1 01 	r0 = 31534858 <update_target_end+0x82 : 1e12f0a >			  ## adc_api.c:490:5
 1e05a64:    09 02             	[sp] = r1			  ## adc_api.c:490:5
 1e05a66:    a1 08             	r1 = r10			  ## adc_api.c:490:5
 1e05a68:    62 08             	r2 = r6			  ## adc_api.c:490:5
 1e05a6a:    80 f3 2e 4b       	call 38492 <printf : 1e0f0ca >			  ## adc_api.c:490:5
 1e05a6e:    0a e0 03 00       	if (r10 == 0) goto 6 <board_init+0x13C : 1e05a78 >
 1e05a72:    81 05             	r1 = r6.b0 (u)			  ## adc_api.c:617:9
 1e05a74:    80 08             	r0 = r8			  ## adc_api.c:617:9
 1e05a76:    0e 17             	call -484 <update_wvdd_pvdd_trim_level : 1e05894 >			  ## adc_api.c:617:9
 1e05a78:    c0 ff c4 25 00 00 	r0 = 9668 <adc_queue : 25c4 >			  ## adc_api.c:359:5
 1e05a7e:    f1 7f             	r1 = 255			  ## adc_api.c:359:5
 1e05a80:    02 7b             	r2 = 176			  ## adc_api.c:359:5
 1e05a82:    98 f3 35 0a       	call 3150954 <memset : 106ef0 >			  ## adc_api.c:359:5
 1e05a86:    c8 ff b0 20 00 00 	r8 = 8368 <gatt_client_conn_handle : 20b0 >			  ## adc_api.c:359:5
 1e05a8c:    85 fc 9c 01       	r5 = r8 + 412			  ## adc_api.c:360:5
 1e05a90:    01 70             	r1 = 0			  ## adc_api.c:360:5
 1e05a92:    42 71             	r2 = 20			  ## adc_api.c:360:5
 1e05a94:    06 70             	r6 = 0			  ## adc_api.c:360:5
 1e05a96:    50 08             	r0 = r5			  ## adc_api.c:360:5
 1e05a98:    98 f3 2a 0a       	call 3150932 <memset : 106ef0 >			  ## adc_api.c:360:5
 1e05a9c:    84 fc 88 01       	r4 = r8 + 392			  ## adc_api.c:361:5
 1e05aa0:    01 70             	r1 = 0			  ## adc_api.c:361:5
 1e05aa2:    42 71             	r2 = 20			  ## adc_api.c:361:5
 1e05aa4:    40 08             	r0 = r4			  ## adc_api.c:361:5
 1e05aa6:    98 f3 23 0a       	call 3150918 <memset : 106ef0 >			  ## adc_api.c:361:5
 1e05aaa:    c0 ff 00 31 1e 00 	r0 = 1978624 <uECC_vli_cmp_unsafe+0xDC104 : 1e3100 >			  ## adc_api.c:363:17
 1e05ab0:    0e 40             	[r0 + 0] = r6			  ## adc_api.c:363:17
 1e05ab2:    c6 ff 0d 00 05 00 	r6 = 327693 <text_size+0x2F15D : 5000d >			  ## adc_api.c:365:5
 1e05ab8:    60 08             	r0 = r6			  ## adc_api.c:365:5
 1e05aba:    fa 16             	call -524 <adc_add_sample_ch : 1e058b0 >			  ## adc_api.c:365:5
 1e05abc:    60 08             	r0 = r6			  ## adc_api.c:366:5
 1e05abe:    26 17             	call -436 <adc_set_sample_freq : 1e0590c >			  ## adc_api.c:366:5
 1e05ac0:    d0 70             	r0 = 13			  ## adc_api.c:368:5
 1e05ac2:    f6 16             	call -532 <adc_add_sample_ch : 1e058b0 >			  ## adc_api.c:368:5
 1e05ac4:    d0 70             	r0 = 13			  ## adc_api.c:369:5
 1e05ac6:    22 17             	call -444 <adc_set_sample_freq : 1e0590c >			  ## adc_api.c:369:5
 1e05ac8:    d0 70             	r0 = 13			  ## adc_api.c:371:5
 1e05aca:    bf f3 ea d3       	call -22572 <adc_sample : 1e002a2 >			  ## adc_api.c:371:5
 1e05ace:    93 70             	r3 = 9
 1e05ad0:    06 18             	goto 12 <board_init+0x1A2 : 1e05ade >
 1e05ad2:    a9 16             	call -686 <adc_wait_pnd : 1e05826 >			  ## adc_api.c:374:41
 1e05ad4:    01 08             	r1 = r0			  ## adc_api.c:374:41
 1e05ad6:    50 08             	r0 = r5			  ## adc_api.c:374:9
 1e05ad8:    bf f3 c0 d3       	call -22656 <adc_value_push : 1e0025c >			  ## adc_api.c:374:9
 1e05adc:    f3 8f             	r3 += -1			  ## adc_api.c:373:5
 1e05ade:    f9 37             	if (r3 != 0) goto -14 <board_init+0x196 : 1e05ad2 >			  ## adc_api.c:373:5
 1e05ae0:    50 08             	r0 = r5			  ## adc_api.c:377:36
 1e05ae2:    bf f3 b5 e8       	call -11926 <adc_value_avg : 1e02c50 >			  ## adc_api.c:377:36
 1e05ae6:    01 08             	r1 = r0			  ## adc_api.c:377:36
 1e05ae8:    c0 ff bb 2e e1 01 	r0 = 31534779 <update_target_end+0x33 : 1e12ebb >			  ## adc_api.c:377:5
 1e05aee:    80 f3 ec 4a       	call 38360 <printf : 1e0f0ca >			  ## adc_api.c:377:5
 1e05af2:    60 08             	r0 = r6			  ## adc_api.c:379:5
 1e05af4:    bf f3 d5 d3       	call -22614 <adc_sample : 1e002a2 >			  ## adc_api.c:379:5
 1e05af8:    93 70             	r3 = 9
 1e05afa:    06 18             	goto 12 <board_init+0x1CC : 1e05b08 >
 1e05afc:    94 16             	call -728 <adc_wait_pnd : 1e05826 >			  ## adc_api.c:381:42
 1e05afe:    01 08             	r1 = r0			  ## adc_api.c:381:42
 1e05b00:    40 08             	r0 = r4			  ## adc_api.c:381:9
 1e05b02:    bf f3 ab d3       	call -22698 <adc_value_push : 1e0025c >			  ## adc_api.c:381:9
 1e05b06:    f3 8f             	r3 += -1			  ## adc_api.c:380:5
 1e05b08:    f9 37             	if (r3 != 0) goto -14 <board_init+0x1C0 : 1e05afc >
 1e05b0a:    40 08             	r0 = r4			  ## adc_api.c:384:37
 1e05b0c:    bf f3 a0 e8       	call -11968 <adc_value_avg : 1e02c50 >			  ## adc_api.c:384:37
 1e05b10:    01 08             	r1 = r0			  ## adc_api.c:384:37
 1e05b12:    c0 ff cf 2e e1 01 	r0 = 31534799 <update_target_end+0x47 : 1e12ecf >			  ## adc_api.c:384:5
 1e05b18:    80 f3 d7 4a       	call 38318 <printf : 1e0f0ca >			  ## adc_api.c:384:5
 1e05b1c:    60 08             	r0 = r6			  ## adc_api.c:385:30
 1e05b1e:    bf f3 d7 e8       	call -11858 <adc_get_voltage : 1e02cd0 >			  ## adc_api.c:385:30
 1e05b22:    81 c0             	r1 = r0 << 2			  ## adc_api.c:385:58
 1e05b24:    c0 ff e4 2e e1 01 	r0 = 31534820 <update_target_end+0x5C : 1e12ee4 >			  ## adc_api.c:385:5
 1e05b2a:    80 f3 ce 4a       	call 38300 <printf : 1e0f0ca >			  ## adc_api.c:385:5
 1e05b2e:    c2 ff 9a 03 e0 01 	r2 = 31458202 <adc_isr : 1e0039a >			  ## adc_api.c:396:5
 1e05b34:    70 71             	r0 = 23			  ## adc_api.c:396:5
 1e05b36:    01 70             	r1 = 0			  ## adc_api.c:396:5
 1e05b38:    80 f3 26 50       	call 41036 <request_irq : 1e0fb88 >			  ## adc_api.c:396:5
 1e05b3c:    c1 ff de 02 e0 01 	r1 = 31458014 <adc_scan : 1e002de >			  ## adc_api.c:398:5
 1e05b42:    00 70             	r0 = 0			  ## adc_api.c:398:5
 1e05b44:    a2 70             	r2 = 10			  ## adc_api.c:398:5
 1e05b46:    80 f3 e4 5a       	call 46536 <usr_timer_add : 1e11112 >			  ## adc_api.c:398:5
 1e05b4a:    c4 a1             	r4 = sp + 28
 1e05b4c:    01 70             	r1 = 0			  ## user_cfg.c:185:8
 1e05b4e:    02 78             	r2 = 128			  ## user_cfg.c:185:8
 1e05b50:    40 08             	r0 = r4			  ## user_cfg.c:185:8
 1e05b52:    98 f3 cd 09       	call 3150746 <memset : 106ef0 >			  ## user_cfg.c:185:8
 1e05b56:    01 70             	r1 = 0			  ## user_cfg.c:188:5
 1e05b58:    02 78             	r2 = 128			  ## user_cfg.c:188:5
 1e05b5a:    40 08             	r0 = r4			  ## user_cfg.c:188:5
 1e05b5c:    98 f3 c8 09       	call 3150736 <memset : 106ef0 >			  ## user_cfg.c:188:5
 1e05b60:    50 76             	r0 = 101			  ## user_cfg.c:201:11
 1e05b62:    02 72             	r2 = 32			  ## user_cfg.c:201:11
 1e05b64:    41 08             	r1 = r4			  ## user_cfg.c:201:11
 1e05b66:    80 f3 03 5d       	call 47622 <syscfg_read : 1e11570 >			  ## user_cfg.c:201:11
 1e05b6a:    05 08             	r5 = r0			  ## user_cfg.c:201:11
 1e05b6c:    c6 ff a0 08 00 00 	r6 = 2208 <ble_device_name_len : 8a0 >
 1e05b72:    f5 ef 12 d0       	ifs (r5 <= -1) goto 36 <board_init+0x25E : 1e05b9a >
 1e05b76:    64 fc 5a 00       	r4 = r6 + 90			  ## user_cfg.c:205:9
 1e05b7a:    01 70             	r1 = 0			  ## user_cfg.c:205:9
 1e05b7c:    02 72             	r2 = 32			  ## user_cfg.c:205:9
 1e05b7e:    07 70             	r7 = 0			  ## user_cfg.c:205:9
 1e05b80:    40 08             	r0 = r4			  ## user_cfg.c:205:9
 1e05b82:    98 f3 b5 09       	call 3150698 <memset : 106ef0 >			  ## user_cfg.c:205:9
 1e05b86:    05 e2 0e b0       	ifs (r5 < 32) goto 28 <board_init+0x26A : 1e05ba6 >			  ## user_cfg.c:205:9
 1e05b8a:    c1 a1             	r1 = sp + 28
 1e05b8c:    02 72             	r2 = 32			  ## user_cfg.c:206:9
 1e05b8e:    40 08             	r0 = r4			  ## user_cfg.c:206:9
 1e05b90:    98 f3 a8 09       	call 3150672 <memcpy : 106ee4 >			  ## user_cfg.c:206:9
 1e05b94:    17 f9 79 60       	b[r6 + 121] = r7			  ## user_cfg.c:207:45
 1e05b98:    06 18             	goto 12 <board_init+0x26A : 1e05ba6 >			  ## user_cfg.c:207:45
 1e05b9a:    c2 ff ba 4b e1 01 	r2 = 31542202 <update_target_end+0x1D32 : 1e14bba >			  ## user_cfg.c:203:9
 1e05ba0:    20 70             	r0 = 2			  ## user_cfg.c:203:9
 1e05ba2:    80 f3 c2 4a       	call 38276 <log_print : 1e0f12a >			  ## user_cfg.c:203:9
 1e05ba6:    63 fc 5a 00       	r3 = r6 + 90			  ## user_cfg.c:212:5
 1e05baa:    c2 ff e0 4b e1 01 	r2 = 31542240 <update_target_end+0x1D58 : 1e14be0 >			  ## user_cfg.c:212:5
 1e05bb0:    20 70             	r0 = 2			  ## user_cfg.c:212:5
 1e05bb2:    80 f3 ba 4a       	call 38260 <log_print : 1e0f12a >			  ## user_cfg.c:212:5
 1e05bb6:    c4 ff a0 22 00 00 	r4 = 8864 <_sdfile_handl : 22a0 >			  ## user_cfg.c:212:5
 1e05bbc:    41 fc 82 00       	r1 = r4 + 130			  ## user_cfg.c:216:11
 1e05bc0:    00 fb 59 02       	r0 = 601 <BTCTLER_CL_RAM_TOTAL+0x75 : 259 >			  ## user_cfg.c:216:11
 1e05bc4:    12 70             	r2 = 1			  ## user_cfg.c:216:11
 1e05bc6:    80 f3 d3 5c       	call 47526 <syscfg_read : 1e11570 >			  ## user_cfg.c:216:11
 1e05bca:    00 e0 03 b0       	ifs (r0 < 0) goto 6 <board_init+0x298 : 1e05bd4 >			  ## user_cfg.c:217:9
 1e05bce:    00 f9 82 40       	r0 = b[r4 + 130] (u)
 1e05bd2:    09 18             	goto 18 <board_init+0x2AA : 1e05be6 >
 1e05bd4:    c2 ff 07 4c e1 01 	r2 = 31542279 <update_target_end+0x1D7F : 1e14c07 >			  ## user_cfg.c:218:9
 1e05bda:    10 70             	r0 = 1			  ## user_cfg.c:218:9
 1e05bdc:    80 f3 a5 4a       	call 38218 <log_print : 1e0f12a >			  ## user_cfg.c:218:9
 1e05be0:    a0 70             	r0 = 10			  ## user_cfg.c:218:9
 1e05be2:    10 f9 82 40       	b[r4 + 130] = r0			  ## user_cfg.c:219:26
 1e05be6:    80 f3 1c 88       	call 69688 <bt_max_pwr_set : 1e16c22 >			  ## user_cfg.c:221:5
 1e05bea:    c4 87             	r4 += 124			  ## user_cfg.c:221:5
 1e05bec:    63 68             	r3 = b[r4 + 6] (u)			  ## user_cfg.c:223:5
 1e05bee:    c2 ff 29 4c e1 01 	r2 = 31542313 <update_target_end+0x1DA1 : 1e14c29 >			  ## user_cfg.c:223:5
 1e05bf4:    20 70             	r0 = 2			  ## user_cfg.c:223:5
 1e05bf6:    80 f3 98 4a       	call 38192 <log_print : 1e0f12a >			  ## user_cfg.c:223:5
 1e05bfa:    e0 70             	r0 = 14			  ## user_cfg.c:225:26
 1e05bfc:    08 68             	b[r4 + 0] = r0			  ## user_cfg.c:225:26
 1e05bfe:    28 68             	b[r4 + 2] = r0			  ## user_cfg.c:226:26
 1e05c00:    00 fb 54 01       	r0 = 340 <DRIVER_RAM_TOTAL+0x62 : 154 >			  ## user_cfg.c:226:26
 1e05c04:    d8 58             	h[r4 + 26] = r0			  ## user_cfg.c:266:28
 1e05c06:    01 fb 4a 01       	r1 = 330 <DRIVER_RAM_TOTAL+0x58 : 14a >			  ## user_cfg.c:266:28
 1e05c0a:    e9 58             	h[r4 + 28] = r1			  ## user_cfg.c:267:29
 1e05c0c:    c2 ff 4b 4c e1 01 	r2 = 31542347 <update_target_end+0x1DC3 : 1e14c4b >			  ## user_cfg.c:268:5
 1e05c12:    20 70             	r0 = 2			  ## user_cfg.c:268:5
 1e05c14:    a3 92             	r3 = r1 + 10			  ## user_cfg.c:268:5
 1e05c16:    09 02             	[sp] = r1			  ## user_cfg.c:268:5
 1e05c18:    80 f3 87 4a       	call 38158 <log_print : 1e0f12a >			  ## user_cfg.c:268:5
 1e05c1c:    05 70             	r5 = 0			  ## user_cfg.c:268:5
 1e05c1e:    cd 58             	h[r4 + 24] = r5			  ## user_cfg.c:281:27
 1e05c20:    c2 ff 85 4c e1 01 	r2 = 31542405 <update_target_end+0x1DFD : 1e14c85 >			  ## user_cfg.c:282:5
 1e05c26:    20 70             	r0 = 2			  ## user_cfg.c:282:5
 1e05c28:    03 70             	r3 = 0			  ## user_cfg.c:282:5
 1e05c2a:    80 f3 7e 4a       	call 38140 <log_print : 1e0f12a >			  ## user_cfg.c:282:5
 1e05c2e:    95 f5 14 00       	h[sp+20] = r5			  ## user_cfg.c:290:8
 1e05c32:    4d 02             	[sp+16] = r5			  ## user_cfg.c:290:8
 1e05c34:    61 a1             	r1 = sp + 22			  ## user_cfg.c:290:8
 1e05c36:    60 76             	r0 = 102			  ## user_cfg.c:304:19
 1e05c38:    62 70             	r2 = 6			  ## user_cfg.c:304:19
 1e05c3a:    80 f3 99 5c       	call 47410 <syscfg_read : 1e11570 >			  ## user_cfg.c:304:19
 1e05c3e:    c4 ff 7e 5f e1 01 	r4 = 31547262 <report_id_handle_table+0xE : 1e15f7e >
 1e05c44:    60 e0 0c 10       	if (r0 != 6) goto 24 <board_init+0x324 : 1e05c60 >
 1e05c48:    60 a1             	r0 = sp + 22
 1e05c4a:    62 70             	r2 = 6			  ## user_cfg.c:305:32
 1e05c4c:    41 08             	r1 = r4			  ## user_cfg.c:305:32
 1e05c4e:    98 f3 4d 09       	call 3150490 <memcmp : 106eec >			  ## user_cfg.c:305:32
 1e05c52:    06 20             	if (r0 == 0) goto 12 <board_init+0x324 : 1e05c60 >			  ## user_cfg.c:305:32
 1e05c54:    60 a1             	r0 = sp + 22
 1e05c56:    01 a1             	r1 = sp + 16
 1e05c58:    62 70             	r2 = 6			  ## user_cfg.c:305:68
 1e05c5a:    98 f3 47 09       	call 3150478 <memcmp : 106eec >			  ## user_cfg.c:305:68
 1e05c5e:    0a 30             	if (r0 != 0) goto 20 <board_init+0x338 : 1e05c74 >			  ## user_cfg.c:305:68
 1e05c60:    65 a1             	r5 = sp + 22
 1e05c62:    61 70             	r1 = 6			  ## user_cfg.c:306:17
 1e05c64:    50 08             	r0 = r5			  ## user_cfg.c:306:17
 1e05c66:    80 f3 5e c5       	call 101052 <get_random_number : 1e1e726 >			  ## user_cfg.c:306:17
 1e05c6a:    60 76             	r0 = 102			  ## user_cfg.c:307:17
 1e05c6c:    62 70             	r2 = 6			  ## user_cfg.c:307:17
 1e05c6e:    51 08             	r1 = r5			  ## user_cfg.c:307:17
 1e05c70:    80 f3 ea 5c       	call 47572 <syscfg_write : 1e11648 >			  ## user_cfg.c:307:17
 1e05c74:    85 fc 28 01       	r5 = r8 + 296			  ## user_cfg.c:311:5
 1e05c78:    60 76             	r0 = 102			  ## user_cfg.c:311:5
 1e05c7a:    62 70             	r2 = 6			  ## user_cfg.c:311:5
 1e05c7c:    51 08             	r1 = r5			  ## user_cfg.c:311:5
 1e05c7e:    80 f3 77 5c       	call 47342 <syscfg_read : 1e11570 >			  ## user_cfg.c:311:5
 1e05c82:    62 70             	r2 = 6			  ## user_cfg.c:312:10
 1e05c84:    50 08             	r0 = r5			  ## user_cfg.c:312:10
 1e05c86:    41 08             	r1 = r4			  ## user_cfg.c:312:10
 1e05c88:    98 f3 30 09       	call 3150432 <memcmp : 106eec >			  ## user_cfg.c:312:10
 1e05c8c:    0f 30             	if (r0 != 0) goto 30 <board_init+0x370 : 1e05cac >			  ## user_cfg.c:312:10
 1e05c8e:    61 70             	r1 = 6			  ## user_cfg.c:313:9
 1e05c90:    50 08             	r0 = r5			  ## user_cfg.c:313:9
 1e05c92:    80 f3 48 c5       	call 101008 <get_random_number : 1e1e726 >			  ## user_cfg.c:313:9
 1e05c96:    60 76             	r0 = 102			  ## user_cfg.c:314:9
 1e05c98:    62 70             	r2 = 6			  ## user_cfg.c:314:9
 1e05c9a:    51 08             	r1 = r5			  ## user_cfg.c:314:9
 1e05c9c:    80 f3 d4 5c       	call 47528 <syscfg_write : 1e11648 >			  ## user_cfg.c:314:9
 1e05ca0:    c2 ff ab 4c e1 01 	r2 = 31542443 <update_target_end+0x1E23 : 1e14cab >			  ## user_cfg.c:315:9
 1e05ca6:    20 70             	r0 = 2			  ## user_cfg.c:315:9
 1e05ca8:    80 f3 3f 4a       	call 38014 <log_print : 1e0f12a >			  ## user_cfg.c:315:9
 1e05cac:    c2 ff d4 4c e1 01 	r2 = 31542484 <update_target_end+0x1E4C : 1e14cd4 >			  ## user_cfg.c:318:5
 1e05cb2:    20 70             	r0 = 2			  ## user_cfg.c:318:5
 1e05cb4:    80 f3 39 4a       	call 38002 <log_print : 1e0f12a >			  ## user_cfg.c:318:5
 1e05cb8:    64 a1             	r4 = sp + 22			  ## user_cfg.c:318:5
 1e05cba:    61 70             	r1 = 6			  ## user_cfg.c:319:5
 1e05cbc:    40 08             	r0 = r4			  ## user_cfg.c:319:5
 1e05cbe:    80 f3 88 4b       	call 38672 <printf_buf : 1e0f3d2 >			  ## user_cfg.c:319:5
 1e05cc2:    60 fc 7a 00       	r0 = r6 + 122			  ## user_cfg.c:320:5
 1e05cc6:    62 70             	r2 = 6			  ## user_cfg.c:320:5
 1e05cc8:    41 08             	r1 = r4			  ## user_cfg.c:320:5
 1e05cca:    98 f3 0b 09       	call 3150358 <memcpy : 106ee4 >			  ## user_cfg.c:320:5
 1e05cce:    41 a0             	r1 = sp + 4			  ## user_cfg.c:320:5
 1e05cd0:    00 fb 5f 02       	r0 = 607 <BTCTLER_CL_RAM_TOTAL+0x7B : 25f >			  ## user_cfg.c:333:11
 1e05cd4:    92 70             	r2 = 9			  ## user_cfg.c:333:11
 1e05cd6:    94 70             	r4 = 9			  ## user_cfg.c:333:11
 1e05cd8:    80 f3 4a 5c       	call 47252 <syscfg_read : 1e11570 >			  ## user_cfg.c:333:11
 1e05cdc:    10 e0 19 b0       	ifs (r0 < 1) goto 50 <board_init+0x3D6 : 1e05d12 >
 1e05ce0:    c2 ff ed 4c e1 01 	r2 = 31542509 <update_target_end+0x1E65 : 1e14ced >			  ## user_cfg.c:335:9
 1e05ce6:    20 70             	r0 = 2			  ## user_cfg.c:335:9
 1e05ce8:    80 f3 1f 4a       	call 37950 <log_print : 1e0f12a >			  ## user_cfg.c:335:9
 1e05cec:    40 a0             	r0 = sp + 4			  ## user_cfg.c:335:9
 1e05cee:    91 70             	r1 = 9			  ## user_cfg.c:336:9
 1e05cf0:    80 f3 6f 4b       	call 38622 <printf_buf : 1e0f3d2 >			  ## user_cfg.c:336:9
 1e05cf4:    80 f5 04 00       	r0 = h[sp+4] (u)			  ## user_cfg.c:337:46
 1e05cf8:    28 5c             	h[r6 + 4] = r0			  ## user_cfg.c:337:36
 1e05cfa:    80 f5 06 00       	r0 = h[sp+6] (u)			  ## user_cfg.c:338:46
 1e05cfe:    81 f5 08 00       	r1 = h[sp+8] (u)			  ## user_cfg.c:339:46
 1e05d02:    82 f5 0a 00       	r2 = h[sp+10] (u)			  ## user_cfg.c:340:46
 1e05d06:    c3 f5 0c 00       	r3 = b[sp+12] (u)			  ## user_cfg.c:341:46
 1e05d0a:    38 5c             	h[r6 + 6] = r0			  ## user_cfg.c:338:36
 1e05d0c:    49 5c             	h[r6 + 8] = r1			  ## user_cfg.c:339:36
 1e05d0e:    5a 5c             	h[r6 + 10] = r2			  ## user_cfg.c:340:36
 1e05d10:    cb 6c             	b[r6 + 12] = r3			  ## user_cfg.c:341:36
 1e05d12:    80 f3 a6 c7       	call 102220 <lp_winsize_init : 1e1ec62 >			  ## user_cfg.c:344:5
 1e05d16:    80 f3 1a 67       	call 52788 <devices_init : 1e12b4e >			  ## board_ac6328a_keyfob.c:312:2
 1e05d1a:    85 fc b4 01       	r5 = r8 + 436			  ## board_ac6328a_keyfob.c:312:2
 1e05d1e:    00 9b             	r0 = r5 + 16			  ## pwm_led.c:334:5
 1e05d20:    01 70             	r1 = 0			  ## pwm_led.c:334:5
 1e05d22:    42 71             	r2 = 20			  ## pwm_led.c:334:5
 1e05d24:    07 70             	r7 = 0			  ## pwm_led.c:334:5
 1e05d26:    98 f3 e3 08       	call 3150278 <memset : 106ef0 >			  ## pwm_led.c:334:5
 1e05d2a:    c0 ff 00 55 1e 00 	r0 = 1987840 <uECC_vli_cmp_unsafe+0xDE504 : 1e5500 >			  ## pwm_led.c:334:5
 1e05d30:    01 40             	r1 = [r0 + 0]			  ## pwm_led.c:336:5
 1e05d32:    71 b0             	r1 &= 4294967294			  ## pwm_led.c:336:5
 1e05d34:    09 40             	[r0 + 0] = r1			  ## pwm_led.c:336:5
 1e05d36:    01 40             	r1 = [r0 + 0]			  ## pwm_led.c:337:5
 1e05d38:    f1 b0             	r1 &= 4294967293			  ## pwm_led.c:337:5
 1e05d3a:    09 40             	[r0 + 0] = r1			  ## pwm_led.c:337:5
 1e05d3c:    0f 40             	[r0 + 0] = r7			  ## pwm_led.c:339:5
 1e05d3e:    1f 40             	[r0 + 4] = r7			  ## pwm_led.c:340:5
 1e05d40:    2f 40             	[r0 + 8] = r7			  ## pwm_led.c:341:5
 1e05d42:    3f 40             	[r0 + 12] = r7			  ## pwm_led.c:342:5
 1e05d44:    03 f4 10 09       	[r0 + 12] |= 16			  ## pwm_led.c:344:5
 1e05d48:    03 f4 40 09       	[r0 + 12] |= 64			  ## pwm_led.c:345:5
 1e05d4c:    c1 ff f5 1f 1a 00 	r1 = 1712117 <uECC_vli_cmp_unsafe+0x9AFF9 : 1a1ff5 >
 1e05d52:    02 62             	r2 = b[r1 + 0] (u)			  ## pwm_led.c:234:26
 1e05d54:    22 fd 1f 29       	r2 = r2 & 31			  ## pwm_led.c:234:26
 1e05d58:    0a 62             	b[r1 + 0] = r2			  ## pwm_led.c:234:26
 1e05d5a:    02 62             	r2 = b[r1 + 0] (u)			  ## pwm_led.c:235:26
 1e05d5c:    02 fd 60 29       	r2 = r2 | 96			  ## pwm_led.c:235:26
 1e05d60:    0a 62             	b[r1 + 0] = r2			  ## pwm_led.c:235:26
 1e05d62:    01 40             	r1 = [r0 + 0]			  ## pwm_led.c:250:5
 1e05d64:    31 fd 0c 19       	r1 = r1 & 4294967283			  ## pwm_led.c:250:5
 1e05d68:    09 40             	[r0 + 0] = r1			  ## pwm_led.c:250:5
 1e05d6a:    2f 6b             	b[r5 + 18] = r7			  ## pwm_led.c:251:19
 1e05d6c:    1c 6b             	b[r5 + 17] = r4			  ## pwm_led.c:351:25
 1e05d6e:    90 70             	r0 = 9			  ## pwm_led.c:352:9
 1e05d70:    bf f3 05 e1       	call -15862 <led_pin_set_enable : 1e01f7e >			  ## pwm_led.c:352:9
 1e05d74:    c0 ff 90 5f e1 01 	r0 = 31547280 <pwm_led_data : 1e15f90 >			  ## pwm_led.c:355:23
 1e05d7a:    58 4a             	[r5 + 20] = r0			  ## pwm_led.c:355:23
 1e05d7c:    10 70             	r0 = 1			  ## pwm_led.c:356:23
 1e05d7e:    38 6b             	b[r5 + 19] = r0			  ## pwm_led.c:356:23
 1e05d80:    08 6b             	b[r5 + 16] = r0			  ## pwm_led.c:358:18
 1e05d82:    c0 ff ec 5f e1 01 	r0 = 31547372 <iokey_data : 1e15fec >			  ## iokey.c:263:12
 1e05d88:    10 f6 30 80       	[r8 + 48] = r0			  ## iokey.c:263:12
 1e05d8c:    bf f3 11 d5       	call -21982 <key_io_reset : 1e007b2 >			  ## iokey.c:271:5
 1e05d90:    42 4c             	r2 = [r6 + 16]			  ## key_driver.c:276:9
 1e05d92:    00 9d             	r0 = r6 + 16			  ## key_driver.c:276:9
 1e05d94:    c1 ff b2 08 e0 01 	r1 = 31459506 <key_driver_scan : 1e008b2 >			  ## key_driver.c:276:9
 1e05d9a:    80 f3 ba 59       	call 45940 <usr_timer_add : 1e11112 >			  ## key_driver.c:276:9
 1e05d9e:    00 6a             	r0 = b[r5 + 0] (u)			  ## charge.c:98:20
 1e05da0:    bf f3 4e df       	call -16740 <power_set_mode : 1e01c40 >			  ## board_ac6328a_keyfob.c:317:3
 1e05da4:    4e 0a             	sp += 156
 1e05da6:    5a 01             	{pc, r10-r4} = [sp++]			  ## board_ac6328a_keyfob.c:329:1


app_main:
 1e05da8:    75 01             	[--sp] = {rets, r5, r4}			  ## app_main.c:113:0
 1e05daa:    f6 0b             	sp += -20			  ## app_main.c:113:0
 1e05dac:    c5 ff b0 20 00 00 	r5 = 8368 <gatt_client_conn_handle : 20b0 >			  ## app_main.c:113:0
 1e05db2:    00 4b             	r0 = [r5 + 64]			  ## update.c:212:15
 1e05db4:    01 d4             	r1 = r0 >> 16			  ## update.c:213:5
 1e05db6:    24 04             	r4 = r0.l (u)			  ## update.c:213:5
 1e05db8:    c2 ff cf 3d e1 01 	r2 = 31538639 <update_target_end+0xF47 : 1e13dcf >			  ## update.c:213:5
 1e05dbe:    20 70             	r0 = 2			  ## update.c:213:5
 1e05dc0:    09 02             	[sp] = r1			  ## update.c:213:5
 1e05dc2:    43 08             	r3 = r4			  ## update.c:213:5
 1e05dc4:    80 f3 b1 49       	call 37730 <log_print : 1e0f12a >			  ## update.c:213:5
 1e05dc8:    80 f3 53 c7       	call 102054 <check_update_param_len : 1e1ec72 >			  ## update.c:217:5
 1e05dcc:    0f 28             	if (r4 == 0) goto 30 <app_main+0x44 : 1e05dec >			  ## update.c:217:5
 1e05dce:    20 ff 5a 4a 0c 00 	if (r4 == 23040) goto 24 <app_main+0x44 : 1e05dec >
 1e05dd4:    62 70             	r2 = 6
 1e05dd6:    bf f3 be f4       	call -5764 <wdt_clear : 1e04756 >			  ## update.c:237:9
 1e05dda:    f2 8f             	r2 += -1			  ## update.c:256:27
 1e05ddc:    61 ff ff 29 fa ff 	if ((r2 & 255) != 0) goto -12 <app_main+0x2E : 1e05dd6 >			  ## update.c:256:13
 1e05de2:    c0 ff 14 3e e1 01 	r0 = 31538708 <update_target_end+0xF8C : 1e13e14 >			  ## update.c:258:13
 1e05de8:    80 f3 c5 4a       	call 38282 <puts : 1e0f376 >			  ## update.c:258:13
 1e05dec:    c0 ff 87 3e e1 01 	r0 = 31538823 <update_target_end+0xFFF : 1e13e87 >			  ## app_main.c:121:5
 1e05df2:    80 f3 6a 49       	call 37588 <printf : 1e0f0ca >			  ## app_main.c:121:5
 1e05df6:    00 f9 b4 51       	r0 = b[r5 + 436] (u)			  ## charge.c:98:20
 1e05dfa:    00 70             	r0 = 0			  ## charge.c:98:20
 1e05dfc:    38 02             	[sp+12] = r0			  ## app_main.c:146:5
 1e05dfe:    48 02             	[sp+16] = r0			  ## app_main.c:146:5
 1e05e00:    c3 ff 04 3f e1 01 	r3 = 31538948 <update_target_end+0x107C : 1e13f04 >			  ## app_main.c:158:13
 1e05e06:    1b 02             	[sp+4] = r3			  ## app_main.c:158:13
 1e05e08:    40 70             	r0 = 4			  ## app_main.c:158:13
 1e05e0a:    28 02             	[sp+8] = r0			  ## app_main.c:159:15
 1e05e0c:    c2 ff a5 3e e1 01 	r2 = 31538853 <update_target_end+0x101D : 1e13ea5 >			  ## app_main.c:182:5
 1e05e12:    20 70             	r0 = 2			  ## app_main.c:182:5
 1e05e14:    80 f3 89 49       	call 37650 <log_print : 1e0f12a >			  ## app_main.c:182:5
 1e05e18:    c1 ff e3 3e e1 01 	r1 = 31538915 <update_target_end+0x105B : 1e13ee3 >			  ## app_main.c:183:5
 1e05e1e:    c2 ff c2 3e e1 01 	r2 = 31538882 <update_target_end+0x103A : 1e13ec2 >			  ## app_main.c:183:5
 1e05e24:    c3 ff d7 3e e1 01 	r3 = 31538903 <update_target_end+0x104F : 1e13ed7 >			  ## app_main.c:183:5
 1e05e2a:    20 70             	r0 = 2			  ## app_main.c:183:5
 1e05e2c:    09 02             	[sp] = r1			  ## app_main.c:183:5
 1e05e2e:    80 f3 7c 49       	call 37624 <log_print : 1e0f12a >			  ## app_main.c:183:5
 1e05e32:    40 a0             	r0 = sp + 4			  ## app_main.c:183:5
 1e05e34:    80 f3 ca 5f       	call 49044 <start_app : 1e11dcc >			  ## app_main.c:185:5
 1e05e38:    0a 0a             	sp += 20
 1e05e3a:    55 01             	{pc, r5, r4} = [sp++]			  ## app_main.c:190:1


cpu_reset.119:
 1e05e3c:    cf f3 d0 ea       	goto 2086304 <p33_soft_reset : 33e0 >			  ## cpu.h:146:0


ble_profile_init:
 1e05e40:    77 01             	[--sp] = {rets, r7-r4}			  ## le_gatt_common.c:701:0
 1e05e42:    fe 0b             	sp += -4			  ## le_gatt_common.c:701:0
 1e05e44:    c2 ff 90 30 e1 01 	r2 = 31535248 <update_target_end+0x208 : 1e13090 >			  ## le_gatt_common.c:702:5
 1e05e4a:    c4 ff a9 30 e1 01 	r4 = 31535273 <update_target_end+0x221 : 1e130a9 >			  ## le_gatt_common.c:702:5
 1e05e50:    20 70             	r0 = 2			  ## le_gatt_common.c:702:5
 1e05e52:    43 08             	r3 = r4			  ## le_gatt_common.c:702:5
 1e05e54:    80 f3 69 49       	call 37586 <log_print : 1e0f12a >			  ## le_gatt_common.c:702:5
 1e05e58:    c6 ff b0 20 00 00 	r6 = 8368 <gatt_client_conn_handle : 20b0 >			  ## le_gatt_common.c:702:5
 1e05e5e:    00 70             	r0 = 0			  ## le_gatt_common.c:702:5
 1e05e60:    48 6c             	b[r6 + 4] = r0			  ## le_gatt_common.c:703:5
 1e05e62:    d0 4c             	r0 = [r6 + 52]			  ## le_gatt_common.c:705:10
 1e05e64:    07 30             	if (r0 != 0) goto 14 <ble_profile_init+0x34 : 1e05e74 >			  ## le_gatt_common.c:705:10
 1e05e66:    c2 ff ba 30 e1 01 	r2 = 31535290 <update_target_end+0x232 : 1e130ba >			  ## le_gatt_common.c:706:9
 1e05e6c:    40 70             	r0 = 4			  ## le_gatt_common.c:706:9
 1e05e6e:    80 f3 5c 49       	call 37560 <log_print : 1e0f12a >			  ## le_gatt_common.c:706:9
 1e05e72:    e4 17             	call -56 <cpu_reset.119 : 1e05e3c >			  ## le_gatt_common.c:707:9
 1e05e74:    80 f3 7f 14       	call 10494 <ble_stack_gatt_role : 1e08776 >			  ## le_gatt_common.c:715:9
 1e05e78:    c7 ff a0 08 00 00 	r7 = 2208 <ble_device_name_len : 8a0 >			  ## le_gatt_common.c:715:9
 1e05e7e:    d0 4e             	r0 = [r7 + 52]			  ## le_gatt_common.c:719:33
 1e05e80:    26 20             	if (r0 == 0) goto 76 <ble_profile_init+0x8E : 1e05ece >			  ## le_gatt_common.c:719:33
 1e05e82:    80 f3 85 30       	call 24842 <le_device_db_init : 1e0bf90 >			  ## le_gatt_common.c:720:13
 1e05e86:    80 f3 07 32       	call 25614 <sm_init : 1e0c298 >			  ## le_gatt_common.c:721:13
 1e05e8a:    d0 4e             	r0 = [r7 + 52]			  ## le_gatt_common.c:723:56
 1e05e8c:    00 60             	r0 = b[r0 + 0] (u)			  ## le_gatt_common.c:723:67
 1e05e8e:    00 d1             	r0 = r0 >> 4			  ## le_gatt_common.c:723:67
 1e05e90:    80 f3 f1 31       	call 25570 <sm_set_io_capabilities : 1e0c276 >			  ## le_gatt_common.c:723:13
 1e05e94:    d0 4e             	r0 = [r7 + 52]			  ## le_gatt_common.c:731:68
 1e05e96:    10 60             	r0 = b[r0 + 1] (u)			  ## le_gatt_common.c:731:13
 1e05e98:    80 f3 8c 32       	call 25880 <sm_set_authentication_requirements : 1e0c3b4 >			  ## le_gatt_common.c:731:13
 1e05e9c:    d0 4e             	r0 = [r7 + 52]			  ## le_gatt_common.c:732:66
 1e05e9e:    31 60             	r1 = b[r0 + 3] (u)			  ## le_gatt_common.c:732:13
 1e05ea0:    20 60             	r0 = b[r0 + 2] (u)			  ## le_gatt_common.c:732:13
 1e05ea2:    80 f3 91 32       	call 25890 <sm_set_encryption_key_size_range : 1e0c3c8 >			  ## le_gatt_common.c:732:13
 1e05ea6:    d0 4e             	r0 = [r7 + 52]			  ## le_gatt_common.c:733:60
 1e05ea8:    00 60             	r0 = b[r0 + 0] (u)			  ## le_gatt_common.c:733:71
 1e05eaa:    20 fd 01 09       	r0 = r0 & 1			  ## le_gatt_common.c:733:40
 1e05eae:    80 f3 94 32       	call 25896 <sm_set_master_request_pair : 1e0c3da >			  ## le_gatt_common.c:733:13
 1e05eb2:    d0 4e             	r0 = [r7 + 52]			  ## le_gatt_common.c:734:57
 1e05eb4:    00 60             	r0 = b[r0 + 0] (u)			  ## le_gatt_common.c:734:68
 1e05eb6:    81 fd 10 00       	r0 = uextra(r0, p:2, l:1)			  ## le_gatt_common.c:734:68
 1e05eba:    80 f3 9d 32       	call 25914 <sm_set_request_security : 1e0c3f8 >			  ## le_gatt_common.c:734:13
 1e05ebe:    80 f3 b3 32       	call 25958 <sm_event_callback_set : 1e0c428 >			  ## le_gatt_common.c:735:13
 1e05ec2:    d0 4e             	r0 = [r7 + 52]			  ## le_gatt_common.c:737:37
 1e05ec4:    00 60             	r0 = b[r0 + 0] (u)			  ## le_gatt_common.c:737:48
 1e05ec6:    f0 e0 02 80       	if (r0 > 15) goto 4 <ble_profile_init+0x8E : 1e05ece >			  ## le_gatt_common.c:737:48
 1e05eca:    80 f3 b9 32       	call 25970 <reset_PK_cb_register_ext : 1e0c440 >			  ## le_gatt_common.c:738:17
 1e05ece:    80 f3 76 42       	call 34028 <att_server_register_packet_handler : 1e0e3be >			  ## le_gatt_common.c:744:9
 1e05ed2:    c2 ff b6 3a e1 01 	r2 = 31537846 <update_target_end+0xC2E : 1e13ab6 >			  ## le_gatt_server.c:932:5
 1e05ed8:    c3 ff 08 3c e1 01 	r3 = 31538184 <update_target_end+0xD80 : 1e13c08 >			  ## le_gatt_server.c:932:5
 1e05ede:    20 70             	r0 = 2			  ## le_gatt_server.c:932:5
 1e05ee0:    80 f3 23 49       	call 37446 <log_print : 1e0f12a >			  ## le_gatt_server.c:932:5
 1e05ee4:    c5 ff a0 22 00 00 	r5 = 8864 <_sdfile_handl : 22a0 >			  ## le_gatt_server.c:935:31
 1e05eea:    00 f6 a4 50       	r0 = [r5 + 164]			  ## le_gatt_server.c:933:51
 1e05eee:    11 40             	r1 = [r0 + 4]			  ## le_gatt_server.c:934:44
 1e05ef0:    00 40             	r0 = [r0 + 0]			  ## le_gatt_server.c:933:66
 1e05ef2:    80 f3 6c 42       	call 34008 <att_server_init : 1e0e3ce >			  ## le_gatt_server.c:933:5
 1e05ef6:    10 70             	r0 = 1			  ## le_gatt_server.c:935:31
 1e05ef8:    10 f9 b2 50       	b[r5 + 178] = r0			  ## le_gatt_server.c:935:31
 1e05efc:    80 f3 47 15       	call 10894 <hci_event_callback_set : 1e0898e >			  ## le_gatt_common.c:754:5
 1e05f00:    80 f3 50 15       	call 10912 <le_l2cap_register_packet_handler : 1e089a4 >			  ## le_gatt_common.c:755:5
 1e05f04:    30 5f             	r0 = h[r7 + 38] (u)			  ## le_gatt_common.c:759:53
 1e05f06:    23 5f             	r3 = h[r7 + 36] (u)			  ## le_gatt_common.c:759:42
 1e05f08:    e1 4c             	r1 = [r6 + 56]			  ## le_gatt_common.c:760:14
 1e05f0a:    30 09             	r0 += r3			  ## le_gatt_common.c:759:51
 1e05f0c:    05 fc bc 00       	r5 = r0 + 188			  ## le_gatt_common.c:759:18
 1e05f10:    0a 32             	if (r1 != 0) goto 20 <ble_profile_init+0xE6 : 1e05f26 >
 1e05f12:    50 08             	r0 = r5			  ## le_gatt_common.c:761:31
 1e05f14:    80 f3 4f 4d       	call 39582 <malloc : 1e0f9b6 >			  ## le_gatt_common.c:761:31
 1e05f18:    e8 4c             	[r6 + 56] = r0			  ## le_gatt_common.c:761:29
 1e05f1a:    24 20             	if (r0 == 0) goto 72 <ble_profile_init+0x124 : 1e05f64 >			  ## le_gatt_common.c:761:29
 1e05f1c:    01 70             	r1 = 0			  ## le_gatt_common.c:767:13
 1e05f1e:    52 08             	r2 = r5			  ## le_gatt_common.c:767:13
 1e05f20:    98 f3 e6 07       	call 3149772 <memset : 106ef0 >			  ## le_gatt_common.c:767:13
 1e05f24:    23 5f             	r3 = h[r7 + 36] (u)			  ## le_gatt_common.c:767:13
 1e05f26:    30 08             	r0 = r3			  ## le_gatt_common.c:770:44
 1e05f28:    80 f3 44 15       	call 10888 <ble_vendor_set_default_att_mtu : 1e089b4 >			  ## le_gatt_common.c:770:44
 1e05f2c:    03 f2 07 90       	if (r3 <= r0) goto 14 <ble_profile_init+0xFE : 1e05f3e >			  ## le_gatt_common.c:770:44
 1e05f30:    23 5f             	r3 = h[r7 + 36] (u)			  ## le_gatt_common.c:771:13
 1e05f32:    c2 ff 83 31 e1 01 	r2 = 31535491 <update_target_end+0x2FB : 1e13183 >			  ## le_gatt_common.c:771:13
 1e05f38:    20 70             	r0 = 2			  ## le_gatt_common.c:771:13
 1e05f3a:    80 f3 f6 48       	call 37356 <log_print : 1e0f12a >			  ## le_gatt_common.c:771:13
 1e05f3e:    e2 4c             	r2 = [r6 + 56]			  ## le_gatt_common.c:774:9
 1e05f40:    23 5f             	r3 = h[r7 + 36] (u)			  ## le_gatt_common.c:774:9
 1e05f42:    80 71             	r0 = 24			  ## le_gatt_common.c:774:9
 1e05f44:    31 70             	r1 = 3			  ## le_gatt_common.c:774:9
 1e05f46:    0b 02             	[sp] = r3			  ## le_gatt_common.c:774:9
 1e05f48:    53 08             	r3 = r5			  ## le_gatt_common.c:774:9
 1e05f4a:    80 f3 96 10       	call 8492 <ble_user_cmd_prepare : 1e0807a >			  ## le_gatt_common.c:774:9
 1e05f4e:    80 f3 41 15       	call 10882 <multi_att_ccc_config_init : 1e089d4 >			  ## le_gatt_common.c:776:13
 1e05f52:    c2 ff b1 31 e1 01 	r2 = 31535537 <update_target_end+0x329 : 1e131b1 >			  ## le_gatt_common.c:779:5
 1e05f58:    20 70             	r0 = 2			  ## le_gatt_common.c:779:5
 1e05f5a:    43 08             	r3 = r4			  ## le_gatt_common.c:779:5
 1e05f5c:    80 f3 e5 48       	call 37322 <log_print : 1e0f12a >			  ## le_gatt_common.c:779:5
 1e05f60:    02 0a             	sp += 4			  ## le_gatt_common.c:779:5
 1e05f62:    57 01             	{pc, r7-r4} = [sp++]			  ## le_gatt_common.c:781:1
 1e05f64:    c2 ff 52 31 e1 01 	r2 = 31535442 <update_target_end+0x2CA : 1e13152 >			  ## le_gatt_common.c:763:17
 1e05f6a:    20 70             	r0 = 2			  ## le_gatt_common.c:763:17
 1e05f6c:    53 08             	r3 = r5			  ## le_gatt_common.c:763:17
 1e05f6e:    80 f3 dc 48       	call 37304 <log_print : 1e0f12a >			  ## le_gatt_common.c:763:17
 1e05f72:    64 17             	call -312 <cpu_reset.119 : 1e05e3c >			  ## le_gatt_common.c:764:17
 1e05f74:    ff 1f             	goto -2 <ble_profile_init+0x134 : 1e05f74 >			  ## le_gatt_common.c:765:17


bredr_tx_bulk_alloc:
 1e05f76:    77 01             	[--sp] = {rets, r7-r4}			  ## link_bulk.c:386:0
 1e05f78:    c4 91             	r4 = r0 + 28			  ## link_bulk.c:386:0
 1e05f7a:    c6 ff de 59 e1 01 	r6 = 31545822 <update_target_end+0x2B56 : 1e159de >			  ## link_bulk.c:386:0
 1e05f80:    c7 ff 5c 20 00 00 	r7 = 8284 <acl_tx_bulk_sem : 205c >			  ## link_bulk.c:386:0
 1e05f86:    00 70             	r0 = 0			  ## link_bulk.c:394:14
 1e05f88:    41 08             	r1 = r4			  ## link_bulk.c:394:14
 1e05f8a:    80 f3 76 4b       	call 38636 <lbuf_alloc : 1e0f67a >			  ## link_bulk.c:394:14
 1e05f8e:    05 08             	r5 = r0			  ## link_bulk.c:394:14
 1e05f90:    16 3a             	if (r5 != 0) goto 44 <bredr_tx_bulk_alloc+0x48 : 1e05fbe >			  ## link_bulk.c:395:13
 1e05f92:    28 fb 00 0b       	r0 = icfg			  ## cpu.h:79:5
 1e05f96:    20 fd 03 0a       	r0 = r0 & 768			  ## cpu.h:80:18
 1e05f9a:    05 70             	r5 = 0
 1e05f9c:    01 ff 00 03 15 00 	if (r0 != 768) goto 42 <bredr_tx_bulk_alloc+0x56 : 1e05fcc >
 1e05fa2:    28 fb 00 0b       	r0 = icfg			  ## cpu.h:72:5
 1e05fa6:    61 ff ff 09 10 00 	if ((r0 & 255) != 0) goto 32 <bredr_tx_bulk_alloc+0x56 : 1e05fcc >
 1e05fac:    60 08             	r0 = r6			  ## link_bulk.c:402:9
 1e05fae:    80 f3 e2 49       	call 37828 <puts : 1e0f376 >			  ## link_bulk.c:402:9
 1e05fb2:    01 70             	r1 = 0			  ## link_bulk.c:403:13
 1e05fb4:    70 08             	r0 = r7			  ## link_bulk.c:403:13
 1e05fb6:    98 f3 27 07       	call 3149390 <os_sem_pend : 106e08 >			  ## link_bulk.c:403:13
 1e05fba:    e5 21             	if (r0 == 0) goto -54 <bredr_tx_bulk_alloc+0x10 : 1e05f86 >			  ## link_bulk.c:403:13
 1e05fbc:    07 18             	goto 14 <bredr_tx_bulk_alloc+0x56 : 1e05fcc >			  ## link_bulk.c:403:13
 1e05fbe:    01 70             	r1 = 0			  ## link_bulk.c:409:5
 1e05fc0:    c2 71             	r2 = 28			  ## link_bulk.c:409:5
 1e05fc2:    98 f3 95 07       	call 3149610 <memset : 106ef0 >			  ## link_bulk.c:409:5
 1e05fc6:    00 9b             	r0 = r5 + 16			  ## link_bulk.c:414:25
 1e05fc8:    48 4a             	[r5 + 16] = r0			  ## list.h:188:16
 1e05fca:    58 4a             	[r5 + 20] = r0			  ## list.h:189:16
 1e05fcc:    50 08             	r0 = r5			  ## link_bulk.c:417:1
 1e05fce:    57 01             	{pc, r7-r4} = [sp++]			  ## link_bulk.c:417:1


__vsprintf:
 1e05fd0:    7b 01             	[--sp] = {rets, r11-r4}			  ## vsprintf.c:72:0
 1e05fd2:    fe 0b             	sp += -4			  ## vsprintf.c:72:0
 1e05fd4:    14 08             	r4 = r1			  ## vsprintf.c:72:0
 1e05fd6:    0a 02             	[sp] = r2			  ## vsprintf.c:72:0
 1e05fd8:    01 68             	r1 = b[r4 + 0] (u)			  ## vsprintf.c:77:12
 1e05fda:    08 08             	r8 = r0			  ## vsprintf.c:77:12
 1e05fdc:    86 08             	r6 = r8
 1e05fde:    bd 22             	if (r1 == 0) goto 378 <.GJTIE567_0_0_+0xFE : 1e0615a >
 1e05fe0:    49 76             	r9 = 100
 1e05fe2:    aa 70             	r10 = 10
 1e05fe4:    50 04             	r0 = r1.b0 (s)			  ## vsprintf.c:78:17
 1e05fe6:    20 e5 2e d0       	ifs (r0 <= 82) goto 92 <__vsprintf+0x76 : 1e06046 >			  ## vsprintf.c:78:17
 1e05fea:    20 e6 1f c0       	ifs (r0 > 98) goto 62 <__vsprintf+0x5C : 1e0602c >
 1e05fee:    30 e5 3f 00       	if (r0 == 83) goto 126 <.GJTIE567_0_0_+0x14 : 1e06070 >
 1e05ff2:    20 e6 af 10       	if (r0 != 98) goto 350 <.GJTIE567_0_0_+0xF8 : 1e06154 >
 1e05ff6:    20 f9 02 40       	r0 = b[r4 + 2] (s)			  ## vsprintf.c:101:21
 1e05ffa:    22 f9 01 40       	r2 = b[r4 + 1] (s)			  ## vsprintf.c:99:20
 1e05ffe:    01 08             	r1 = r0			  ## vsprintf.c:101:17
 1e06000:    80 fe a0 12       	r1 += r2 * r10			  ## vsprintf.c:101:17
 1e06004:    11 fc f0 fd       	r1 = r1 + -528			  ## vsprintf.c:101:17
 1e06008:    24 80             	r4 += 2			  ## vsprintf.c:100:13
 1e0600a:    a4 22             	if (r1 == 0) goto 328 <.GJTIE567_0_0_+0xF8 : 1e06154 >
 1e0600c:    02 fe 0a 29       	r2 = r2 * 10			  ## vsprintf.c:99:35
 1e06010:    63 08             	r3 = r6			  ## vsprintf.c:99:35
 1e06012:    05 02             	r5 = [sp]			  ## vsprintf.c:104:24
 1e06014:    47 9a             	r7 = r5 + 4			  ## vsprintf.c:104:24
 1e06016:    0f 02             	[sp] = r7			  ## vsprintf.c:104:24
 1e06018:    05 4a             	r5 = [r5 + 0]			  ## vsprintf.c:104:24
 1e0601a:    f1 8f             	r1 += -1			  ## vsprintf.c:103:23
 1e0601c:    95 f9 01 30       	b[r3 ++= 1] = r5			  ## vsprintf.c:105:25
 1e06020:    f8 33             	if (r1 != 0) goto -16 <__vsprintf+0x42 : 1e06012 >			  ## vsprintf.c:103:13
 1e06022:    20 09             	r0 += r2			  ## vsprintf.c:103:23
 1e06024:    60 09             	r0 += r6			  ## vsprintf.c:103:23
 1e06026:    06 fc f0 fd       	r6 = r0 + -528			  ## vsprintf.c:103:23
 1e0602a:    94 18             	goto 296 <.GJTIE567_0_0_+0xF8 : 1e06154 >			  ## vsprintf.c:103:23
 1e0602c:    30 e6 2d 00       	if (r0 == 99) goto 90 <.GJTIE567_0_0_+0x2E : 1e0608a >
 1e06030:    c0 e6 90 10       	if (r0 != 108) goto 288 <.GJTIE567_0_0_+0xF8 : 1e06154 >
 1e06034:    00 02             	r0 = [sp]			  ## vsprintf.c:155:24
 1e06036:    41 90             	r1 = r0 + 4			  ## vsprintf.c:155:24
 1e06038:    09 02             	[sp] = r1			  ## vsprintf.c:155:24
 1e0603a:    0b f6 00 00       	r11 = [r0 + 0]			  ## vsprintf.c:155:24
 1e0603e:    1b f9 00 60       	b[r6 + 0] = r11			  ## vsprintf.c:156:21
 1e06042:    16 80             	r6 += 1
 1e06044:    87 18             	goto 270 <.GJTIE567_0_0_+0xF8 : 1e06154 >
 1e06046:    01 fc bf ff       	r1 = r0 + -65
 1e0604a:    b1 e0 31 80       	if (r1 > 11) goto 98 <.GJTIE567_0_0_+0x54 : 1e060b0 >
 1e0604e:    a1 00             	tbb [r1]


.GJTIS567_0_0_:
 1e06050:    06     < 6 : 0x6 >
 1e06051:    50     < 80 : 0x50 >
 1e06052:    5a     < 90 : 0x5A >
 1e06053:    82     < 130 : 0x82 >
 1e06054:    82     < 130 : 0x82 >
 1e06055:    82     < 130 : 0x82 >
 1e06056:    82     < 130 : 0x82 >
 1e06057:    72     < 114 : 0x72 >
 1e06058:    82     < 130 : 0x82 >
 1e06059:    82     < 130 : 0x82 >
 1e0605a:    82     < 130 : 0x82 >
 1e0605b:    7b     < 123 : 0x7B >
 1e0605c:    00 02             	r0 = [sp]			  ## vsprintf.c:137:20
 1e0605e:    41 90             	r1 = r0 + 4			  ## vsprintf.c:137:20
 1e06060:    09 02             	[sp] = r1			  ## vsprintf.c:137:20
 1e06062:    01 40             	r1 = [r0 + 0]			  ## vsprintf.c:137:20
 1e06064:    62 70             	r2 = 6			  ## vsprintf.c:138:13
 1e06066:    60 08             	r0 = r6			  ## vsprintf.c:138:13
 1e06068:    98 f3 3c 07       	call 3149432 <memcpy : 106ee4 >			  ## vsprintf.c:138:13
 1e0606c:    66 80             	r6 += 6			  ## vsprintf.c:139:18
 1e0606e:    72 18             	goto 228 <.GJTIE567_0_0_+0xF8 : 1e06154 >
 1e06070:    00 02             	r0 = [sp]			  ## vsprintf.c:131:20
 1e06072:    41 90             	r1 = r0 + 4			  ## vsprintf.c:131:20
 1e06074:    09 02             	[sp] = r1			  ## vsprintf.c:131:20
 1e06076:    05 40             	r5 = [r0 + 0]			  ## vsprintf.c:131:20
 1e06078:    60 08             	r0 = r6			  ## vsprintf.c:132:13
 1e0607a:    51 08             	r1 = r5			  ## vsprintf.c:132:13
 1e0607c:    98 f3 3c 07       	call 3149432 <strcpy : 106ef8 >			  ## vsprintf.c:132:13
 1e06080:    50 08             	r0 = r5			  ## vsprintf.c:133:19
 1e06082:    98 f3 3b 07       	call 3149430 <strlen : 106efc >			  ## vsprintf.c:133:19
 1e06086:    06 09             	r6 += r0			  ## vsprintf.c:134:18
 1e06088:    65 18             	goto 202 <.GJTIE567_0_0_+0xF8 : 1e06154 >
 1e0608a:    00 02             	r0 = [sp]			  ## vsprintf.c:114:20
 1e0608c:    22 f9 02 40       	r2 = b[r4 + 2] (s)			  ## vsprintf.c:113:21
 1e06090:    23 f9 01 40       	r3 = b[r4 + 1] (s)			  ## vsprintf.c:111:20
 1e06094:    41 90             	r1 = r0 + 4			  ## vsprintf.c:114:20
 1e06096:    09 02             	[sp] = r1			  ## vsprintf.c:114:20
 1e06098:    01 40             	r1 = [r0 + 0]			  ## vsprintf.c:114:20
 1e0609a:    80 fe a0 23       	r2 += r3 * r10			  ## vsprintf.c:113:17
 1e0609e:    25 fc f0 fd       	r5 = r2 + -528			  ## vsprintf.c:113:17
 1e060a2:    60 08             	r0 = r6			  ## vsprintf.c:115:13
 1e060a4:    52 08             	r2 = r5			  ## vsprintf.c:115:13
 1e060a6:    98 f3 1d 07       	call 3149370 <memcpy : 106ee4 >			  ## vsprintf.c:115:13
 1e060aa:    56 09             	r6 += r5			  ## vsprintf.c:116:18
 1e060ac:    24 80             	r4 += 2			  ## vsprintf.c:112:13
 1e060ae:    52 18             	goto 164 <.GJTIE567_0_0_+0xF8 : 1e06154 >
 1e060b0:    01 fc cf ff       	r1 = r0 + -49
 1e060b4:    21 e0 13 30       	if (r1 < 2) goto 38 <.GJTIE567_0_0_+0x82 : 1e060de >
 1e060b8:    d0 8c             	r0 += -51
 1e060ba:    20 e0 4b 20       	if (r0 >= 2) goto 150 <.GJTIE567_0_0_+0xF8 : 1e06154 >
 1e060be:    00 02             	r0 = [sp]			  ## vsprintf.c:89:20
 1e060c0:    41 90             	r1 = r0 + 4			  ## vsprintf.c:89:20
 1e060c2:    09 02             	[sp] = r1			  ## vsprintf.c:89:20
 1e060c4:    00 40             	r0 = [r0 + 0]			  ## vsprintf.c:89:20
 1e060c6:    08 6c             	b[r6 + 0] = r0			  ## vsprintf.c:90:21
 1e060c8:    01 d2             	r1 = r0 >> 8			  ## vsprintf.c:91:28
 1e060ca:    19 6c             	b[r6 + 1] = r1			  ## vsprintf.c:91:21
 1e060cc:    01 d4             	r1 = r0 >> 16			  ## vsprintf.c:92:28
 1e060ce:    29 6c             	b[r6 + 2] = r1			  ## vsprintf.c:92:21
 1e060d0:    01 68             	r1 = b[r4 + 0] (u)			  ## vsprintf.c:93:17
 1e060d2:    41 e3 3e 10       	if (r1 != 52) goto 124 <.GJTIE567_0_0_+0xF6 : 1e06152 >			  ## vsprintf.c:93:17
 1e060d6:    00 d6             	r0 = r0 >> 24			  ## vsprintf.c:94:32
 1e060d8:    38 6c             	b[r6 + 3] = r0			  ## vsprintf.c:94:25
 1e060da:    46 80             	r6 += 4			  ## vsprintf.c:94:22
 1e060dc:    3b 18             	goto 118 <.GJTIE567_0_0_+0xF8 : 1e06154 >
 1e060de:    00 02             	r0 = [sp]			  ## vsprintf.c:81:20
 1e060e0:    41 90             	r1 = r0 + 4			  ## vsprintf.c:81:20
 1e060e2:    09 02             	[sp] = r1			  ## vsprintf.c:81:20
 1e060e4:    00 40             	r0 = [r0 + 0]			  ## vsprintf.c:81:20
 1e060e6:    08 6c             	b[r6 + 0] = r0			  ## vsprintf.c:82:21
 1e060e8:    01 68             	r1 = b[r4 + 0] (u)			  ## vsprintf.c:83:17
 1e060ea:    21 e3 aa 1f       	if (r1 != 50) goto -172 <__vsprintf+0x72 : 1e06042 >			  ## vsprintf.c:83:17
 1e060ee:    27 18             	goto 78 <.GJTIE567_0_0_+0xE2 : 1e0613e >			  ## vsprintf.c:83:17
 1e060f0:    00 02             	r0 = [sp]			  ## vsprintf.c:150:20
 1e060f2:    41 90             	r1 = r0 + 4			  ## vsprintf.c:150:20
 1e060f4:    09 02             	[sp] = r1			  ## vsprintf.c:150:20
 1e060f6:    01 40             	r1 = [r0 + 0]			  ## vsprintf.c:150:20
 1e060f8:    60 08             	r0 = r6			  ## vsprintf.c:151:13
 1e060fa:    b2 08             	r2 = r11			  ## vsprintf.c:151:13
 1e060fc:    98 f3 f2 06       	call 3149284 <memcpy : 106ee4 >			  ## vsprintf.c:151:13
 1e06100:    b6 09             	r6 += r11			  ## vsprintf.c:152:18
 1e06102:    28 18             	goto 80 <.GJTIE567_0_0_+0xF8 : 1e06154 >
 1e06104:    00 02             	r0 = [sp]			  ## vsprintf.c:126:20
 1e06106:    22 f9 03 40       	r2 = b[r4 + 3] (s)			  ## vsprintf.c:124:21
 1e0610a:    21 f9 02 40       	r1 = b[r4 + 2] (s)			  ## vsprintf.c:122:21
 1e0610e:    23 f9 01 40       	r3 = b[r4 + 1] (s)			  ## vsprintf.c:120:20
 1e06112:    45 90             	r5 = r0 + 4			  ## vsprintf.c:126:20
 1e06114:    0d 02             	[sp] = r5			  ## vsprintf.c:126:20
 1e06116:    05 fe 0a 19       	r5 = r1 * 10			  ## vsprintf.c:122:36
 1e0611a:    01 40             	r1 = [r0 + 0]			  ## vsprintf.c:126:20
 1e0611c:    80 fe 90 53       	r5 += r3 * r9			  ## vsprintf.c:122:17
 1e06120:    80 ba             	r0 = r5 + r2			  ## vsprintf.c:124:17
 1e06122:    05 fc 30 eb       	r5 = r0 + -5328			  ## vsprintf.c:124:17
 1e06126:    60 08             	r0 = r6			  ## vsprintf.c:127:13
 1e06128:    52 08             	r2 = r5			  ## vsprintf.c:127:13
 1e0612a:    98 f3 db 06       	call 3149238 <memcpy : 106ee4 >			  ## vsprintf.c:127:13
 1e0612e:    56 09             	r6 += r5			  ## vsprintf.c:128:18
 1e06130:    34 80             	r4 += 3			  ## vsprintf.c:123:13
 1e06132:    10 18             	goto 32 <.GJTIE567_0_0_+0xF8 : 1e06154 >
 1e06134:    00 02             	r0 = [sp]			  ## vsprintf.c:142:20
 1e06136:    41 90             	r1 = r0 + 4			  ## vsprintf.c:142:20
 1e06138:    09 02             	[sp] = r1			  ## vsprintf.c:142:20
 1e0613a:    00 40             	r0 = [r0 + 0]			  ## vsprintf.c:142:20
 1e0613c:    08 6c             	b[r6 + 0] = r0			  ## vsprintf.c:143:21
 1e0613e:    00 d2             	r0 = r0 >> 8
 1e06140:    18 6c             	b[r6 + 1] = r0
 1e06142:    26 80             	r6 += 2
 1e06144:    07 18             	goto 14 <.GJTIE567_0_0_+0xF8 : 1e06154 >
 1e06146:    00 02             	r0 = [sp]			  ## vsprintf.c:147:24
 1e06148:    41 90             	r1 = r0 + 4			  ## vsprintf.c:147:24
 1e0614a:    09 02             	[sp] = r1			  ## vsprintf.c:147:24
 1e0614c:    0b f6 00 00       	r11 = [r0 + 0]			  ## vsprintf.c:147:24
 1e06150:    01 18             	goto 2 <.GJTIE567_0_0_+0xF8 : 1e06154 >
 1e06152:    36 80             	r6 += 3			  ## vsprintf.c:92:18
 1e06154:    11 68             	r1 = b[r4 + 1] (u)			  ## vsprintf.c:77:12
 1e06156:    14 80             	r4 += 1			  ## vsprintf.c:163:15
 1e06158:    45 33             	if (r1 != 0) goto -374 <__vsprintf+0x14 : 1e05fe4 >
 1e0615a:    90 fb 80 06       	r0 = r6 - r8			  ## vsprintf.c:166:17
 1e0615e:    02 0a             	sp += 4			  ## vsprintf.c:166:17
 1e06160:    5b 01             	{pc, r11-r4} = [sp++]			  ## vsprintf.c:166:5


lmp_format_packet:
 1e06162:    74 01             	[--sp] = {rets, r4}			  ## lmp_rxtx.c:23:0
 1e06164:    fe 0b             	sp += -4			  ## lmp_rxtx.c:23:0
 1e06166:    04 08             	r4 = r0			  ## lmp_rxtx.c:23:0
 1e06168:    0a 02             	[sp] = r2			  ## lmp_rxtx.c:23:0
 1e0616a:    0d 18             	goto 26 <lmp_format_packet+0x24 : 1e06186 >			  ## lmp_rxtx.c:23:0
 1e0616c:    00 02             	r0 = [sp]			  ## lmp_rxtx.c:26:39
 1e0616e:    42 90             	r2 = r0 + 4			  ## lmp_rxtx.c:26:39
 1e06170:    0a 02             	[sp] = r2			  ## lmp_rxtx.c:26:39
 1e06172:    00 40             	r0 = [r0 + 0]			  ## lmp_rxtx.c:26:39
 1e06174:    10 b1             	r0 |= 4			  ## lmp_rxtx.c:26:28
 1e06176:    08 68             	b[r4 + 0] = r0			  ## lmp_rxtx.c:26:26
 1e06178:    05 18             	goto 10 <lmp_format_packet+0x22 : 1e06184 >			  ## lmp_rxtx.c:26:26
 1e0617a:    00 02             	r0 = [sp]			  ## lmp_rxtx.c:30:30
 1e0617c:    42 90             	r2 = r0 + 4			  ## lmp_rxtx.c:30:30
 1e0617e:    0a 02             	[sp] = r2			  ## lmp_rxtx.c:30:30
 1e06180:    00 40             	r0 = [r0 + 0]			  ## lmp_rxtx.c:30:30
 1e06182:    28 68             	b[r4 + 2] = r0			  ## lmp_rxtx.c:30:28
 1e06184:    11 80             	r1 += 1			  ## lmp_rxtx.c:48:15
 1e06186:    00 62             	r0 = b[r1 + 0] (u)
 1e06188:    c0 e4 1e d0       	ifs (r0 <= 76) goto 60 <.GJTIE568_1_1_+0x28 : 1e061c8 >
 1e0618c:    02 fc b3 ff       	r2 = r0 + -77
 1e06190:    92 e0 35 80       	if (r2 > 9) goto 106 <.GJTIE568_0_0_+0x26 : 1e061fe >
 1e06194:    a2 00             	tbb [r2]


.GJTIS568_1_1_:
 1e06196:    13     < 19 : 0x13 >
 1e06197:    38     < 56 : 0x38 >
 1e06198:    38     < 56 : 0x38 >
 1e06199:    0f     < 15 : 0xF >
 1e0619a:    38     < 56 : 0x38 >
 1e0619b:    38     < 56 : 0x38 >
 1e0619c:    0b     < 11 : 0xB >
 1e0619d:    38     < 56 : 0x38 >
 1e0619e:    38     < 56 : 0x38 >
 1e0619f:    05     < 5 : 0x5 >
 1e061a0:    00 02             	r0 = [sp]			  ## lmp_rxtx.c:32:30
 1e061a2:    42 90             	r2 = r0 + 4			  ## lmp_rxtx.c:32:30
 1e061a4:    0a 02             	[sp] = r2			  ## lmp_rxtx.c:32:30
 1e061a6:    00 40             	r0 = [r0 + 0]			  ## lmp_rxtx.c:32:30
 1e061a8:    38 68             	b[r4 + 3] = r0			  ## lmp_rxtx.c:32:28
 1e061aa:    ec 1f             	goto -40 <lmp_format_packet+0x22 : 1e06184 >			  ## lmp_rxtx.c:32:28
 1e061ac:    50 68             	r0 = b[r4 + 5] (u)			  ## lmp_rxtx.c:38:35
 1e061ae:    10 b1             	r0 |= 4			  ## lmp_rxtx.c:38:35
 1e061b0:    58 68             	b[r4 + 5] = r0			  ## lmp_rxtx.c:38:35
 1e061b2:    e8 1f             	goto -48 <lmp_format_packet+0x22 : 1e06184 >			  ## lmp_rxtx.c:38:35
 1e061b4:    50 68             	r0 = b[r4 + 5] (u)			  ## lmp_rxtx.c:34:26
 1e061b6:    10 b0             	r0 |= 1			  ## lmp_rxtx.c:34:26
 1e061b8:    58 68             	b[r4 + 5] = r0			  ## lmp_rxtx.c:34:26
 1e061ba:    e4 1f             	goto -56 <lmp_format_packet+0x22 : 1e06184 >			  ## lmp_rxtx.c:34:26
 1e061bc:    00 02             	r0 = [sp]			  ## lmp_rxtx.c:44:34
 1e061be:    42 90             	r2 = r0 + 4			  ## lmp_rxtx.c:44:34
 1e061c0:    0a 02             	[sp] = r2			  ## lmp_rxtx.c:44:34
 1e061c2:    00 40             	r0 = [r0 + 0]			  ## lmp_rxtx.c:44:34
 1e061c4:    48 68             	b[r4 + 4] = r0			  ## lmp_rxtx.c:44:32
 1e061c6:    de 1f             	goto -68 <lmp_format_packet+0x22 : 1e06184 >			  ## lmp_rxtx.c:44:32
 1e061c8:    f0 8b             	r0 += -65
 1e061ca:    60 e0 1c 80       	if (r0 > 6) goto 56 <.GJTIE568_0_0_+0x2E : 1e06206 >
 1e061ce:    a0 00             	tbb [r0]


.GJTIS568_0_0_:
 1e061d0:    13     < 19 : 0x13 >
 1e061d1:    1b     < 27 : 0x1B >
 1e061d2:    1b     < 27 : 0x1B >
 1e061d3:    0f     < 15 : 0xF >
 1e061d4:    08     < 8 : 0x8 >
 1e061d5:    1b     < 27 : 0x1B >
 1e061d6:    04     < 4 : 0x4 >
 1e061d7:    00     < 0 : 0x0 >
 1e061d8:    50 68             	r0 = b[r4 + 5] (u)			  ## lmp_rxtx.c:40:33
 1e061da:    90 b1             	r0 |= 8			  ## lmp_rxtx.c:40:33
 1e061dc:    58 68             	b[r4 + 5] = r0			  ## lmp_rxtx.c:40:33
 1e061de:    d2 1f             	goto -92 <lmp_format_packet+0x22 : 1e06184 >			  ## lmp_rxtx.c:40:33
 1e061e0:    00 02             	r0 = [sp]			  ## lmp_rxtx.c:28:39
 1e061e2:    42 90             	r2 = r0 + 4			  ## lmp_rxtx.c:28:39
 1e061e4:    0a 02             	[sp] = r2			  ## lmp_rxtx.c:28:39
 1e061e6:    00 40             	r0 = [r0 + 0]			  ## lmp_rxtx.c:28:39
 1e061e8:    10 b1             	r0 |= 4			  ## lmp_rxtx.c:28:28
 1e061ea:    18 68             	b[r4 + 1] = r0			  ## lmp_rxtx.c:28:26
 1e061ec:    cb 1f             	goto -106 <lmp_format_packet+0x22 : 1e06184 >			  ## lmp_rxtx.c:28:26
 1e061ee:    50 68             	r0 = b[r4 + 5] (u)			  ## lmp_rxtx.c:36:26
 1e061f0:    90 b0             	r0 |= 2			  ## lmp_rxtx.c:36:26
 1e061f2:    58 68             	b[r4 + 5] = r0			  ## lmp_rxtx.c:36:26
 1e061f4:    c7 1f             	goto -114 <lmp_format_packet+0x22 : 1e06184 >			  ## lmp_rxtx.c:36:26
 1e061f6:    50 68             	r0 = b[r4 + 5] (u)			  ## lmp_rxtx.c:42:25
 1e061f8:    10 b2             	r0 |= 16			  ## lmp_rxtx.c:42:25
 1e061fa:    58 68             	b[r4 + 5] = r0			  ## lmp_rxtx.c:42:25
 1e061fc:    c3 1f             	goto -122 <lmp_format_packet+0x22 : 1e06184 >			  ## lmp_rxtx.c:42:25
 1e061fe:    60 e7 bc 0f       	if (r0 == 118) goto -136 <lmp_format_packet+0x18 : 1e0617a >
 1e06202:    50 e6 b3 0f       	if (r0 == 101) goto -154 <lmp_format_packet+0xA : 1e0616c >
 1e06206:    30 70             	r0 = 3			  ## lmp_rxtx.c:51:14
 1e06208:    68 68             	b[r4 + 6] = r0			  ## lmp_rxtx.c:51:14
 1e0620a:    78 68             	b[r4 + 7] = r0			  ## lmp_rxtx.c:52:16
 1e0620c:    02 02             	r2 = [sp]			  ## lmp_rxtx.c:53:44
 1e0620e:    c0 99             	r0 = r4 + 28			  ## lmp_rxtx.c:53:26
 1e06210:    df 16             	call -578 <__vsprintf : 1e05fd0 >			  ## lmp_rxtx.c:53:15
 1e06212:    58 58             	h[r4 + 10] = r0			  ## lmp_rxtx.c:53:13
 1e06214:    02 0a             	sp += 4			  ## lmp_rxtx.c:53:13
 1e06216:    54 01             	{pc, r4} = [sp++]			  ## lmp_rxtx.c:54:1


bredr_rx_bulk_free:
 1e06218:    75 01             	[--sp] = {rets, r5, r4}			  ## link_bulk.c:311:0
 1e0621a:    41 60             	r1 = b[r0 + 4] (u)			  ## link_bulk.c:313:29
 1e0621c:    15 50             	r5 = h[r0 + 2] (u)			  ## link_bulk.c:312:20
 1e0621e:    61 b0             	r1 = r0 - r1			  ## link_bulk.c:313:27
 1e06220:    28 fb 00 03       	r0 = rets			  ## link_bulk.c:316:5
 1e06224:    10 08             	r0 = r1			  ## link_bulk.c:319:21
 1e06226:    80 f3 c6 4a       	call 38284 <lbuf_real_size : 1e0f7b6 >			  ## link_bulk.c:319:21
 1e0622a:    04 08             	r4 = r0			  ## link_bulk.c:319:21
 1e0622c:    10 08             	r0 = r1			  ## link_bulk.c:320:9
 1e0622e:    80 f3 29 49       	call 37458 <lbuf_free : 1e0f484 >			  ## link_bulk.c:320:9
 1e06232:    0e 20             	if (r0 == 0) goto 28 <bredr_rx_bulk_free+0x38 : 1e06250 >
 1e06234:    81 fd 40 05       	r0 = uextra(r5, p:8, l:1)			  ## link_bulk.c:312:20
 1e06238:    80 c0             	r0 = r0 << 2			  ## link_bulk.c:321:18
 1e0623a:    c1 ff 54 20 00 00 	r1 = 8276 <link : 2054 >			  ## link_bulk.c:321:18
 1e06240:    10 09             	r0 += r1			  ## link_bulk.c:321:18
 1e06242:    11 50             	r1 = h[r0 + 2] (u)			  ## link_bulk.c:321:28
 1e06244:    21 b3             	r1 = r1 - r4			  ## link_bulk.c:321:28
 1e06246:    72 04             	r2 = r1.l (s)			  ## link_bulk.c:321:28
 1e06248:    02 e0 01 c0       	ifs (r2 > 0) goto 2 <bredr_rx_bulk_free+0x36 : 1e0624e >			  ## link_bulk.c:321:28
 1e0624c:    01 70             	r1 = 0			  ## link_bulk.c:322:13
 1e0624e:    19 50             	h[r0 + 2] = r1			  ## link_bulk.c:323:32
 1e06250:    55 01             	{pc, r5, r4} = [sp++]


bredr_tx_bulk_free:
 1e06252:    74 01             	[--sp] = {rets, r4}			  ## link_bulk.c:443:0
 1e06254:    04 08             	r4 = r0			  ## link_bulk.c:443:0
 1e06256:    28 fb 00 03       	r0 = rets			  ## link_bulk.c:448:5
 1e0625a:    98 f3 9f 05       	call 3148606 <local_irq_disable : 106d9c >			  ## link_bulk.c:451:5
 1e0625e:    40 48             	r0 = [r4 + 16]			  ## list.h:165:36
 1e06260:    51 48             	r1 = [r4 + 20]			  ## list.h:165:23
 1e06262:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e06264:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e06266:    98 f3 97 05       	call 3148590 <local_irq_enable : 106d98 >			  ## link_bulk.c:453:5
 1e0626a:    80 68             	r0 = b[r4 + 8] (u)			  ## link_bulk.c:455:15
 1e0626c:    09 20             	if (r0 == 0) goto 18 <bredr_tx_bulk_free+0x2E : 1e06280 >			  ## link_bulk.c:455:9
 1e0626e:    02 b8             	r2 = r4 + r0			  ## link_bulk.c:457:14
 1e06270:    41 64             	r1 = b[r2 + 4] (u)			  ## link_bulk.c:457:14
 1e06272:    10 f2 02 00       	if (r0 == r1) goto 4 <bredr_tx_bulk_free+0x28 : 1e0627a >			  ## link_bulk.c:457:14
 1e06276:    8f f3 b3 e8       	call 2085222 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e0627a:    20 08             	r0 = r2			  ## link_bulk.c:459:16
 1e0627c:    14 01             	{rets, r4} = [sp++]			  ## link_bulk.c:459:16
 1e0627e:    cc 1f             	goto -104 <bredr_rx_bulk_free : 1e06218 >			  ## link_bulk.c:459:16
 1e06280:    50 68             	r0 = b[r4 + 5] (u)			  ## link_bulk.c:462:15
 1e06282:    25 f3 08 00       	if ((r0 & 32) != 0) goto 16 <bredr_tx_bulk_free+0x44 : 1e06296 >			  ## link_bulk.c:462:15
 1e06286:    40 08             	r0 = r4			  ## link_bulk.c:463:9
 1e06288:    80 f3 fc 48       	call 37368 <lbuf_free : 1e0f484 >			  ## link_bulk.c:463:9
 1e0628c:    c0 ff 5c 20 00 00 	r0 = 8284 <acl_tx_bulk_sem : 205c >			  ## link_bulk.c:464:9
 1e06292:    98 f3 bb 05       	call 3148662 <os_sem_post : 106e0c >			  ## link_bulk.c:464:9
 1e06296:    54 01             	{pc, r4} = [sp++]			  ## link_bulk.c:466:1


bredr_tx_bulk_pop:
 1e06298:    01 08             	r1 = r0			  ## link_bulk.c:435:0
 1e0629a:    03 42             	r3 = [r1 + 0]			  ## list.h:124:18
 1e0629c:    32 fc f0 ff       	r2 = r3 + -16			  ## link_bulk.c:437:16
 1e062a0:    00 70             	r0 = 0			  ## link_bulk.c:437:16
 1e062a2:    13 f2 01 00       	if (r3 == r1) goto 2 <bredr_tx_bulk_pop+0x10 : 1e062a8 >			  ## link_bulk.c:437:16
 1e062a6:    20 08             	r0 = r2			  ## link_bulk.c:436:9
 1e062a8:    20 00             	rts			  ## link_bulk.c:440:1


lmp_request:
 1e062aa:    62 01             	[--sp] = {r3, r2}			  ## lmp_rxtx.c:78:0
 1e062ac:    76 01             	[--sp] = {rets, r6-r4}			  ## lmp_rxtx.c:78:0
 1e062ae:    fe 0b             	sp += -4			  ## lmp_rxtx.c:78:0
 1e062b0:    16 08             	r6 = r1			  ## lmp_rxtx.c:78:0
 1e062b2:    04 08             	r4 = r0			  ## lmp_rxtx.c:78:0
 1e062b4:    10 71             	r0 = 17			  ## lmp_rxtx.c:82:10
 1e062b6:    5f 16             	call -834 <bredr_tx_bulk_alloc : 1e05f76 >			  ## lmp_rxtx.c:82:10
 1e062b8:    05 08             	r5 = r0			  ## lmp_rxtx.c:82:10
 1e062ba:    02 3a             	if (r5 != 0) goto 4 <lmp_request+0x16 : 1e062c0 >
 1e062bc:    8f f3 90 e8       	call 2085152 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e062c0:    42 a1             	r2 = sp + 20
 1e062c2:    0a 02             	[sp] = r2			  ## lmp_rxtx.c:85:5
 1e062c4:    50 08             	r0 = r5			  ## lmp_rxtx.c:86:5
 1e062c6:    61 08             	r1 = r6			  ## lmp_rxtx.c:86:5
 1e062c8:    4c 17             	call -360 <lmp_format_packet : 1e06162 >			  ## lmp_rxtx.c:86:5
 1e062ca:    00 f9 8a 40       	r0 = b[r4 + 138] (u)			  ## lmp_rxtx.c:90:20
 1e062ce:    10 e0 03 10       	if (r0 != 1) goto 6 <lmp_request+0x2E : 1e062d8 >			  ## lmp_rxtx.c:90:20
 1e062d2:    c0 6b             	r0 = b[r5 + 28] (u)			  ## lmp_rxtx.c:91:21
 1e062d4:    10 b0             	r0 |= 1			  ## lmp_rxtx.c:91:21
 1e062d6:    c8 6b             	b[r5 + 28] = r0			  ## lmp_rxtx.c:91:21
 1e062d8:    00 f6 dc 40       	r0 = [r4 + 220]			  ## lmp_rxtx.c:95:38
 1e062dc:    51 08             	r1 = r5			  ## lmp_rxtx.c:95:5
 1e062de:    80 f3 1c c7       	call 101944 <link_conn_tx_bulk_avaiable : 1e1f11a >			  ## lmp_rxtx.c:95:5
 1e062e2:    02 0a             	sp += 4			  ## lmp_rxtx.c:95:5
 1e062e4:    16 01             	{rets, r6-r4} = [sp++]			  ## lmp_rxtx.c:95:5
 1e062e6:    04 0a             	sp += 8			  ## lmp_rxtx.c:95:5
 1e062e8:    20 00             	rts			  ## lmp_rxtx.c:95:5


l2cap_connection_update_request_just:
 1e062ea:    77 01             	[--sp] = {rets, r7-r4}			  ## le_gatt_client.c:269:0
 1e062ec:    f8 0b             	sp += -16			  ## le_gatt_client.c:269:0
 1e062ee:    13 08             	r3 = r1			  ## le_gatt_client.c:269:0
 1e062f0:    04 08             	r4 = r0			  ## le_gatt_client.c:269:0
 1e062f2:    01 70             	r1 = 0			  ## le_gatt_client.c:270:5
 1e062f4:    80 f3 e3 0c       	call 6598 <little_endian_read_16 : 1e07cbe >			  ## le_gatt_client.c:270:5
 1e062f8:    07 08             	r7 = r0			  ## le_gatt_client.c:270:5
 1e062fa:    21 70             	r1 = 2			  ## le_gatt_client.c:270:5
 1e062fc:    40 08             	r0 = r4			  ## le_gatt_client.c:270:5
 1e062fe:    80 f3 de 0c       	call 6588 <little_endian_read_16 : 1e07cbe >			  ## le_gatt_client.c:270:5
 1e06302:    05 08             	r5 = r0			  ## le_gatt_client.c:270:5
 1e06304:    41 70             	r1 = 4			  ## le_gatt_client.c:270:5
 1e06306:    40 08             	r0 = r4			  ## le_gatt_client.c:270:5
 1e06308:    80 f3 d9 0c       	call 6578 <little_endian_read_16 : 1e07cbe >			  ## le_gatt_client.c:270:5
 1e0630c:    06 08             	r6 = r0			  ## le_gatt_client.c:270:5
 1e0630e:    61 70             	r1 = 6			  ## le_gatt_client.c:270:5
 1e06310:    40 08             	r0 = r4			  ## le_gatt_client.c:270:5
 1e06312:    80 f3 d4 0c       	call 6568 <little_endian_read_16 : 1e07cbe >			  ## le_gatt_client.c:270:5
 1e06316:    38 02             	[sp+12] = r0			  ## le_gatt_client.c:270:5
 1e06318:    2e 02             	[sp+8] = r6			  ## le_gatt_client.c:270:5
 1e0631a:    1d 02             	[sp+4] = r5			  ## le_gatt_client.c:270:5
 1e0631c:    c2 ff 39 2f e1 01 	r2 = 31534905 <update_target_end+0xB1 : 1e12f39 >			  ## le_gatt_client.c:270:5
 1e06322:    20 70             	r0 = 2			  ## le_gatt_client.c:270:5
 1e06324:    0f 02             	[sp] = r7			  ## le_gatt_client.c:270:5
 1e06326:    80 f3 00 47       	call 36352 <log_print : 1e0f12a >			  ## le_gatt_client.c:270:5
 1e0632a:    01 70             	r1 = 0			  ## le_gatt_client.c:287:9
 1e0632c:    40 08             	r0 = r4			  ## le_gatt_client.c:287:9
 1e0632e:    80 f3 c6 0c       	call 6540 <little_endian_read_16 : 1e07cbe >			  ## le_gatt_client.c:287:9
 1e06332:    02 08             	r2 = r0			  ## le_gatt_client.c:287:9
 1e06334:    21 70             	r1 = 2			  ## le_gatt_client.c:287:44
 1e06336:    40 08             	r0 = r4			  ## le_gatt_client.c:287:44
 1e06338:    80 f3 c1 0c       	call 6530 <little_endian_read_16 : 1e07cbe >			  ## le_gatt_client.c:287:44
 1e0633c:    02 f2 04 90       	if (r2 <= r0) goto 8 <l2cap_connection_update_request_just+0x5E : 1e06348 >			  ## le_gatt_client.c:287:9
 1e06340:    c2 ff c0 2f e1 01 	r2 = 31535040 <update_target_end+0x138 : 1e12fc0 >			  ## le_gatt_client.c:288:9
 1e06346:    05 18             	goto 10 <l2cap_connection_update_request_just+0x68 : 1e06352 >			  ## le_gatt_client.c:288:9
 1e06348:    52 e0 09 80       	if (r2 > 5) goto 18 <l2cap_connection_update_request_just+0x74 : 1e0635e >			  ## le_gatt_client.c:298:13
 1e0634c:    c2 ff f1 2f e1 01 	r2 = 31535089 <update_target_end+0x169 : 1e12ff1 >			  ## le_gatt_client.c:299:13
 1e06352:    20 70             	r0 = 2
 1e06354:    80 f3 e9 46       	call 36306 <log_print : 1e0f12a >
 1e06358:    10 70             	r0 = 1
 1e0635a:    08 0a             	sp += 16
 1e0635c:    57 01             	{pc, r7-r4} = [sp++]			  ## le_gatt_client.c:309:1
 1e0635e:    80 71             	r0 = 24			  ## le_gatt_client.c:307:39
 1e06360:    01 60             	r1 = b[r0 + 0] (u)			  ## le_gatt_client.c:307:39
 1e06362:    10 70             	r0 = 1			  ## le_gatt_client.c:307:12
 1e06364:    fa 23             	if (r1 == 0) goto -12 <l2cap_connection_update_request_just+0x70 : 1e0635a >			  ## le_gatt_client.c:307:12
 1e06366:    00 70             	r0 = 0			  ## le_gatt_client.c:307:12
 1e06368:    f8 1f             	goto -16 <l2cap_connection_update_request_just+0x70 : 1e0635a >			  ## le_gatt_client.c:307:12


lmp_hci_private_free_acl_packet:
 1e0636a:    74 01             	[--sp] = {rets, r4}			  ## lmp_rxtx.c:209:0
 1e0636c:    04 08             	r4 = r0			  ## lmp_rxtx.c:209:0
 1e0636e:    98 f3 15 05       	call 3148330 <local_irq_disable : 106d9c >			  ## lmp_rxtx.c:212:5
 1e06372:    00 f7 ee 4f       	r0 = h[r4 + -18] (u)			  ## lmp_rxtx.c:213:16
 1e06376:    90 b1             	r0 |= 8			  ## lmp_rxtx.c:213:16
 1e06378:    10 f7 ee 4f       	h[r4 + -18] = r0			  ## lmp_rxtx.c:213:16
 1e0637c:    14 01             	{rets, r4} = [sp++]			  ## lmp_rxtx.c:214:5
 1e0637e:    d8 f3 0b 05       	goto 3148310 <local_irq_enable : 106d98 >			  ## lmp_rxtx.c:214:5


att_iterator_fetch_next:
 1e06382:    77 01             	[--sp] = {rets, r7-r4}			  ## att_db.c:123:0
 1e06384:    02 08             	r2 = r0			  ## att_db.c:123:0
 1e06386:    03 44             	r3 = [r2 + 0]			  ## att_db.c:124:44
 1e06388:    01 70             	r1 = 0			  ## att_db.c:124:18
 1e0638a:    05 70             	r5 = 0			  ## att_db.c:124:18
 1e0638c:    30 08             	r0 = r3			  ## att_db.c:124:18
 1e0638e:    80 f3 96 0c       	call 6444 <little_endian_read_16 : 1e07cbe >			  ## att_db.c:124:18
 1e06392:    04 08             	r4 = r0			  ## att_db.c:124:18
 1e06394:    2c 54             	h[r2 + 4] = r4			  ## att_db.c:124:16
 1e06396:    17 28             	if (r4 == 0) goto 46 <att_iterator_fetch_next+0x44 : 1e063c6 >			  ## att_db.c:124:16
 1e06398:    21 70             	r1 = 2			  ## att_db.c:134:18
 1e0639a:    30 08             	r0 = r3			  ## att_db.c:134:18
 1e0639c:    80 f3 8f 0c       	call 6430 <little_endian_read_16 : 1e07cbe >			  ## att_db.c:134:18
 1e063a0:    05 08             	r5 = r0			  ## att_db.c:134:18
 1e063a2:    3d 54             	h[r2 + 6] = r5			  ## att_db.c:134:16
 1e063a4:    41 70             	r1 = 4			  ## att_db.c:135:18
 1e063a6:    30 08             	r0 = r3			  ## att_db.c:135:18
 1e063a8:    80 f3 89 0c       	call 6418 <little_endian_read_16 : 1e07cbe >			  ## att_db.c:135:18
 1e063ac:    01 b7             	r1 = r3 + r4			  ## att_db.c:146:17
 1e063ae:    86 70             	r6 = 8			  ## att_db.c:138:9
 1e063b0:    09 f3 01 50       	if ((r5 & 512) == 0) goto 2 <att_iterator_fetch_next+0x34 : 1e063b6 >			  ## att_db.c:138:9
 1e063b4:    66 71             	r6 = 22			  ## att_db.c:138:9
 1e063b6:    36 09             	r6 += r3
 1e063b8:    87 07             	r7 = -8			  ## att_db.c:138:9
 1e063ba:    09 f3 01 50       	if ((r5 & 512) == 0) goto 2 <att_iterator_fetch_next+0x3E : 1e063c0 >			  ## att_db.c:138:9
 1e063be:    a7 06             	r7 = -22			  ## att_db.c:138:9
 1e063c0:    74 09             	r4 += r7
 1e063c2:    65 96             	r5 = r3 + 6			  ## att_db.c:136:19
 1e063c4:    05 18             	goto 10 <att_iterator_fetch_next+0x4E : 1e063d0 >			  ## att_db.c:136:19
 1e063c6:    3d 54             	h[r2 + 6] = r5			  ## att_db.c:126:19
 1e063c8:    00 70             	r0 = 0			  ## att_db.c:126:19
 1e063ca:    04 70             	r4 = 0			  ## att_db.c:126:19
 1e063cc:    06 70             	r6 = 0			  ## att_db.c:126:19
 1e063ce:    01 70             	r1 = 0			  ## att_db.c:126:19
 1e063d0:    48 54             	h[r2 + 8] = r0			  ## att_db.c:135:16
 1e063d2:    3d 44             	[r2 + 12] = r5			  ## att_db.c:136:16
 1e063d4:    8c 54             	h[r2 + 16] = r4			  ## att_db.c:136:16
 1e063d6:    5e 44             	[r2 + 20] = r6			  ## att_db.c:136:16
 1e063d8:    09 44             	[r2 + 0] = r1			  ## att_db.c:131:21
 1e063da:    57 01             	{pc, r7-r4} = [sp++]			  ## att_db.c:147:1


is_Bluetooth_Base_UUID:
 1e063dc:    74 01             	[--sp] = {rets, r4}			  ## att_db.c:78:0
 1e063de:    04 08             	r4 = r0			  ## att_db.c:78:0
 1e063e0:    c1 ff 88 64 e1 01 	r1 = 31548552 <bluetooth_base_uuid : 1e16488 >			  ## att_db.c:79:9
 1e063e6:    c2 70             	r2 = 12			  ## att_db.c:79:9
 1e063e8:    98 f3 80 05       	call 3148544 <memcmp : 106eec >			  ## att_db.c:79:9
 1e063ec:    01 08             	r1 = r0			  ## att_db.c:79:9
 1e063ee:    00 70             	r0 = 0			  ## att_db.c:79:9
 1e063f0:    07 32             	if (r1 != 0) goto 14 <is_Bluetooth_Base_UUID+0x24 : 1e06400 >			  ## att_db.c:79:9
 1e063f2:    f0 68             	r0 = b[r4 + 15] (u)			  ## att_db.c:82:9
 1e063f4:    e1 68             	r1 = b[r4 + 14] (u)			  ## att_db.c:82:9
 1e063f6:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## att_db.c:82:9
 1e063fa:    10 70             	r0 = 1			  ## att_db.c:82:9
 1e063fc:    01 22             	if (r1 == 0) goto 2 <is_Bluetooth_Base_UUID+0x24 : 1e06400 >			  ## att_db.c:82:9
 1e063fe:    00 70             	r0 = 0			  ## att_db.c:82:9
 1e06400:    54 01             	{pc, r4} = [sp++]			  ## att_db.c:87:1


att_iterator_match_uuid16:
 1e06402:    76 01             	[--sp] = {rets, r6-r4}			  ## att_db.c:150:0
 1e06404:    42 50             	r2 = h[r0 + 8] (u)			  ## att_db.c:151:13
 1e06406:    14 08             	r4 = r1			  ## att_db.c:151:13
 1e06408:    05 70             	r5 = 0
 1e0640a:    11 24             	if (r2 == 0) goto 34 <att_iterator_match_uuid16+0x2C : 1e0642e >
 1e0640c:    71 60             	r1 = b[r0 + 7] (u)			  ## att_db.c:154:19
 1e0640e:    36 40             	r6 = [r0 + 12]			  ## att_db.c:154:19
 1e06410:    21 f3 02 10       	if ((r1 & 2) != 0) goto 4 <att_iterator_match_uuid16+0x16 : 1e06418 >			  ## att_db.c:154:19
 1e06414:    01 70             	r1 = 0			  ## att_db.c:160:12
 1e06416:    04 18             	goto 8 <att_iterator_match_uuid16+0x1E : 1e06420 >			  ## att_db.c:160:12
 1e06418:    60 08             	r0 = r6			  ## att_db.c:155:14
 1e0641a:    e0 17             	call -64 <is_Bluetooth_Base_UUID : 1e063dc >			  ## att_db.c:155:14
 1e0641c:    08 20             	if (r0 == 0) goto 16 <att_iterator_match_uuid16+0x2C : 1e0642e >			  ## att_db.c:155:14
 1e0641e:    c1 70             	r1 = 12			  ## att_db.c:158:16
 1e06420:    60 08             	r0 = r6
 1e06422:    80 f3 4c 0c       	call 6296 <little_endian_read_16 : 1e07cbe >
 1e06426:    15 70             	r5 = 1
 1e06428:    40 f2 01 00       	if (r0 == r4) goto 2 <att_iterator_match_uuid16+0x2C : 1e0642e >
 1e0642c:    05 70             	r5 = 0
 1e0642e:    50 08             	r0 = r5			  ## att_db.c:161:1
 1e06430:    56 01             	{pc, r6-r4} = [sp++]			  ## att_db.c:161:1


att_iterator_match_uuid:
 1e06432:    76 01             	[--sp] = {rets, r6-r4}			  ## att_db.c:164:0
 1e06434:    05 08             	r5 = r0			  ## att_db.c:164:0
 1e06436:    40 5a             	r0 = h[r5 + 8] (u)			  ## att_db.c:165:13
 1e06438:    16 08             	r6 = r1			  ## att_db.c:165:13
 1e0643a:    04 70             	r4 = 0
 1e0643c:    26 20             	if (r0 == 0) goto 76 <att_iterator_match_uuid+0x58 : 1e0648a >
 1e0643e:    22 e0 09 10       	if (r2 != 2) goto 18 <att_iterator_match_uuid+0x22 : 1e06454 >			  ## att_db.c:169:9
 1e06442:    01 70             	r1 = 0			  ## att_db.c:170:46
 1e06444:    60 08             	r0 = r6			  ## att_db.c:170:46
 1e06446:    80 f3 3a 0c       	call 6260 <little_endian_read_16 : 1e07cbe >			  ## att_db.c:170:46
 1e0644a:    01 08             	r1 = r0			  ## att_db.c:170:46
 1e0644c:    50 08             	r0 = r5			  ## att_db.c:170:16
 1e0644e:    d9 17             	call -78 <att_iterator_match_uuid16 : 1e06402 >			  ## att_db.c:170:16
 1e06450:    04 08             	r4 = r0			  ## att_db.c:170:16
 1e06452:    1b 18             	goto 54 <att_iterator_match_uuid+0x58 : 1e0648a >			  ## att_db.c:170:16
 1e06454:    70 6a             	r0 = b[r5 + 7] (u)			  ## att_db.c:173:19
 1e06456:    21 f3 11 00       	if ((r0 & 2) != 0) goto 34 <att_iterator_match_uuid+0x4A : 1e0647c >			  ## att_db.c:173:19
 1e0645a:    60 08             	r0 = r6			  ## att_db.c:177:10
 1e0645c:    bf 17             	call -130 <is_Bluetooth_Base_UUID : 1e063dc >			  ## att_db.c:177:10
 1e0645e:    15 20             	if (r0 == 0) goto 42 <att_iterator_match_uuid+0x58 : 1e0648a >
 1e06460:    c1 70             	r1 = 12			  ## att_db.c:180:12
 1e06462:    60 08             	r0 = r6			  ## att_db.c:180:12
 1e06464:    80 f3 2b 0c       	call 6230 <little_endian_read_16 : 1e07cbe >			  ## att_db.c:180:12
 1e06468:    32 4a             	r2 = [r5 + 12]			  ## att_db.c:180:73
 1e0646a:    03 08             	r3 = r0			  ## att_db.c:180:12
 1e0646c:    01 70             	r1 = 0			  ## att_db.c:180:47
 1e0646e:    20 08             	r0 = r2			  ## att_db.c:180:47
 1e06470:    80 f3 25 0c       	call 6218 <little_endian_read_16 : 1e07cbe >			  ## att_db.c:180:47
 1e06474:    14 70             	r4 = 1			  ## att_db.c:180:44
 1e06476:    03 f2 07 10       	if (r3 != r0) goto 14 <att_iterator_match_uuid+0x56 : 1e06488 >			  ## att_db.c:180:44
 1e0647a:    07 18             	goto 14 <att_iterator_match_uuid+0x58 : 1e0648a >			  ## att_db.c:180:44
 1e0647c:    30 4a             	r0 = [r5 + 12]			  ## att_db.c:174:27
 1e0647e:    02 71             	r2 = 16			  ## att_db.c:174:16
 1e06480:    98 f3 34 05       	call 3148392 <memcmp : 106eec >			  ## att_db.c:174:16
 1e06484:    14 70             	r4 = 1			  ## att_db.c:174:43
 1e06486:    01 20             	if (r0 == 0) goto 2 <att_iterator_match_uuid+0x58 : 1e0648a >			  ## att_db.c:174:43
 1e06488:    04 70             	r4 = 0
 1e0648a:    40 08             	r0 = r4			  ## att_db.c:181:1
 1e0648c:    56 01             	{pc, r6-r4} = [sp++]			  ## att_db.c:181:1


att_validate_security:
 1e0648e:    75 01             	[--sp] = {rets, r5, r4}			  ## att_db.c:400:0
 1e06490:    0d d3             	r5 = r1 >> 12			  ## att_db.c:400:0
 1e06492:    23 fd 0f 59       	r3 = r5 & 15			  ## att_db.c:401:46
 1e06496:    14 96             	r4 = r3 + 1			  ## att_db.c:403:33
 1e06498:    02 70             	r2 = 0
 1e0649a:    60 ff 0f 59 01 00 	if ((r5 & 15) == 0) goto 2 <att_validate_security+0x14 : 1e064a2 >
 1e064a0:    42 08             	r2 = r4			  ## att_db.c:402:9
 1e064a2:    0a f3 02 10       	if ((r1 & 1024) == 0) goto 4 <att_validate_security+0x1C : 1e064aa >
 1e064a6:    74 60             	r4 = b[r0 + 7] (u)			  ## att_db.c:407:79
 1e064a8:    10 28             	if (r4 == 0) goto 32 <att_validate_security+0x3C : 1e064ca >			  ## att_db.c:407:79
 1e064aa:    0b f3 02 10       	if ((r1 & 2048) == 0) goto 4 <att_validate_security+0x24 : 1e064b2 >
 1e064ae:    81 60             	r1 = b[r0 + 8] (u)			  ## att_db.c:410:78
 1e064b0:    0e 22             	if (r1 == 0) goto 28 <att_validate_security+0x40 : 1e064ce >			  ## att_db.c:410:78
 1e064b2:    11 70             	r1 = 1			  ## att_db.c:413:38
 1e064b4:    01 36             	if (r3 != 0) goto 2 <att_validate_security+0x2A : 1e064b8 >			  ## att_db.c:413:38
 1e064b6:    01 70             	r1 = 0
 1e064b8:    63 60             	r3 = b[r0 + 6] (u)
 1e064ba:    02 36             	if (r3 != 0) goto 4 <att_validate_security+0x32 : 1e064c0 >
 1e064bc:    f0 70             	r0 = 15
 1e064be:    08 32             	if (r1 != 0) goto 16 <att_validate_security+0x42 : 1e064d0 >
 1e064c0:    c0 70             	r0 = 12			  ## att_db.c:417:9
 1e064c2:    32 f2 05 80       	if (r2 > r3) goto 10 <att_validate_security+0x42 : 1e064d0 >			  ## att_db.c:417:9
 1e064c6:    00 70             	r0 = 0			  ## att_db.c:417:9
 1e064c8:    03 18             	goto 6 <att_validate_security+0x42 : 1e064d0 >			  ## att_db.c:417:9
 1e064ca:    50 70             	r0 = 5
 1e064cc:    01 18             	goto 2 <att_validate_security+0x42 : 1e064d0 >
 1e064ce:    80 70             	r0 = 8
 1e064d0:    00 04             	r0 = r0.b0 (u)			  ## att_db.c:420:1
 1e064d2:    55 01             	{pc, r5, r4} = [sp++]			  ## att_db.c:420:1


att_service_handler_for_handle:
 1e064d4:    34 00             	[--sp] = rets			  ## att_db.c:201:0
 1e064d6:    fa 0b             	sp += -12			  ## att_db.c:201:0
 1e064d8:    03 08             	r3 = r0			  ## att_db.c:201:0
 1e064da:    c1 ff 38 1d 00 00 	r1 = 7480 <att_global_info+0x20 : 1d38 >			  ## att_db.c:203:5
 1e064e0:    00 a0             	r0 = sp + 0			  ## att_db.c:203:5
 1e064e2:    80 f3 7f 18       	call 12542 <btstack_linked_list_iterator_init : 1e095e4 >			  ## att_db.c:203:5
 1e064e6:    00 a0             	r0 = sp + 0
 1e064e8:    80 f3 f0 0b       	call 6112 <btstack_linked_list_iterator_has_next : 1e07ccc >			  ## att_db.c:204:12
 1e064ec:    0a 20             	if (r0 == 0) goto 20 <att_service_handler_for_handle+0x2E : 1e06502 >
 1e064ee:    00 a0             	r0 = sp + 0
 1e064f0:    80 f3 fa 0b       	call 6132 <btstack_linked_list_iterator_next : 1e07ce8 >			  ## att_db.c:205:68
 1e064f4:    21 50             	r1 = h[r0 + 4] (u)			  ## att_db.c:206:22
 1e064f6:    31 f2 f6 8f       	if (r1 > r3) goto -20 <att_service_handler_for_handle+0x12 : 1e064e6 >			  ## att_db.c:206:22
 1e064fa:    31 50             	r1 = h[r0 + 6] (u)			  ## att_db.c:209:22
 1e064fc:    31 f2 f3 3f       	if (r1 < r3) goto -26 <att_service_handler_for_handle+0x12 : 1e064e6 >			  ## att_db.c:209:22
 1e06500:    01 18             	goto 2 <att_service_handler_for_handle+0x30 : 1e06504 >			  ## att_db.c:209:22
 1e06502:    00 70             	r0 = 0
 1e06504:    06 0a             	sp += 12
 1e06506:    30 00             	pc = [sp++]			  ## att_db.c:215:1


att_update_value_len:
 1e06508:    76 01             	[--sp] = {rets, r6-r4}			  ## att_db.c:251:0
 1e0650a:    fe 0b             	sp += -4			  ## att_db.c:251:0
 1e0650c:    04 08             	r4 = r0			  ## att_db.c:251:0
 1e0650e:    70 68             	r0 = b[r4 + 7] (u)			  ## att_db.c:252:44
 1e06510:    15 08             	r5 = r1			  ## att_db.c:252:44
 1e06512:    00 f3 12 00       	if ((r0 & 1) == 0) goto 36 <att_update_value_len+0x32 : 1e0653a >
 1e06516:    40 58             	r0 = h[r4 + 8] (u)			  ## att_db.c:219:38
 1e06518:    dd 17             	call -70 <att_service_handler_for_handle : 1e064d4 >			  ## att_db.c:219:38
 1e0651a:    82 90             	r2 = r0 + 8			  ## att_db.c:221:25
 1e0651c:    c1 ff 2c 1d 00 00 	r1 = 7468 <att_global_info+0x14 : 1d2c >			  ## att_db.c:220:9
 1e06522:    01 20             	if (r0 == 0) goto 2 <att_update_value_len+0x1E : 1e06526 >			  ## att_db.c:220:9
 1e06524:    21 08             	r1 = r2			  ## att_db.c:220:9
 1e06526:    06 42             	r6 = [r1 + 0]
 1e06528:    08 2c             	if (r6 == 0) goto 16 <att_update_value_len+0x32 : 1e0653a >
 1e0652a:    41 58             	r1 = h[r4 + 8] (u)			  ## att_db.c:259:21
 1e0652c:    00 70             	r0 = 0			  ## att_db.c:259:21
 1e0652e:    02 70             	r2 = 0			  ## att_db.c:259:21
 1e06530:    03 70             	r3 = 0			  ## att_db.c:259:21
 1e06532:    08 02             	[sp] = r0			  ## att_db.c:259:21
 1e06534:    50 08             	r0 = r5			  ## att_db.c:259:21
 1e06536:    86 00             	call r6			  ## att_db.c:259:21
 1e06538:    88 58             	h[r4 + 16] = r0			  ## att_db.c:259:19
 1e0653a:    02 0a             	sp += 4
 1e0653c:    56 01             	{pc, r6-r4} = [sp++]			  ## att_db.c:261:1


att_copy_value:
 1e0653e:    78 01             	[--sp] = {rets, r8-r4}			  ## att_db.c:265:0
 1e06540:    fe 0b             	sp += -4			  ## att_db.c:265:0
 1e06542:    05 08             	r5 = r0			  ## att_db.c:265:0
 1e06544:    70 6a             	r0 = b[r5 + 7] (u)			  ## att_db.c:268:19
 1e06546:    36 08             	r6 = r3
 1e06548:    28 08             	r8 = r2
 1e0654a:    17 08             	r7 = r1
 1e0654c:    20 f3 0d 00       	if ((r0 & 1) != 0) goto 26 <att_copy_value+0x2C : 1e0656a >
 1e06550:    80 5a             	r0 = h[r5 + 16] (u)			  ## att_db.c:277:34
 1e06552:    e0 b1             	r0 = r0 - r7			  ## att_db.c:277:44
 1e06554:    21 04             	r1 = r0.l (u)			  ## att_db.c:277:44
 1e06556:    61 f2 01 80       	if (r1 > r6) goto 2 <att_copy_value+0x1E : 1e0655c >			  ## att_db.c:277:44
 1e0655a:    06 08             	r6 = r0			  ## att_db.c:278:9
 1e0655c:    51 4a             	r1 = [r5 + 20]			  ## att_db.c:281:24
 1e0655e:    a5 05             	r5 = r6.l (u)			  ## att_db.c:281:31
 1e06560:    80 08             	r0 = r8			  ## att_db.c:281:5
 1e06562:    52 08             	r2 = r5			  ## att_db.c:281:5
 1e06564:    98 f3 be 04       	call 3148156 <memcpy : 106ee4 >			  ## att_db.c:281:5
 1e06568:    13 18             	goto 38 <att_copy_value+0x52 : 1e06590 >			  ## att_db.c:281:5
 1e0656a:    40 5a             	r0 = h[r5 + 8] (u)			  ## att_db.c:219:38
 1e0656c:    b3 17             	call -154 <att_service_handler_for_handle : 1e064d4 >			  ## att_db.c:219:38
 1e0656e:    82 90             	r2 = r0 + 8			  ## att_db.c:221:25
 1e06570:    c1 ff 2c 1d 00 00 	r1 = 7468 <att_global_info+0x14 : 1d2c >			  ## att_db.c:220:9
 1e06576:    01 20             	if (r0 == 0) goto 2 <att_copy_value+0x3C : 1e0657a >			  ## att_db.c:220:9
 1e06578:    21 08             	r1 = r2			  ## att_db.c:220:9
 1e0657a:    04 42             	r4 = [r1 + 0]
 1e0657c:    08 28             	if (r4 == 0) goto 16 <att_copy_value+0x50 : 1e0658e >
 1e0657e:    70 02             	r0 = [sp+28]
 1e06580:    41 5a             	r1 = h[r5 + 8] (u)			  ## att_db.c:273:16
 1e06582:    0e 02             	[sp] = r6			  ## att_db.c:273:16
 1e06584:    72 08             	r2 = r7			  ## att_db.c:273:16
 1e06586:    83 08             	r3 = r8			  ## att_db.c:273:16
 1e06588:    84 00             	call r4			  ## att_db.c:273:16
 1e0658a:    05 08             	r5 = r0			  ## att_db.c:273:16
 1e0658c:    01 18             	goto 2 <att_copy_value+0x52 : 1e06590 >
 1e0658e:    05 70             	r5 = 0
 1e06590:    50 08             	r0 = r5			  ## att_db.c:283:1
 1e06592:    02 0a             	sp += 4			  ## att_db.c:283:1
 1e06594:    58 01             	{pc, r8-r4} = [sp++]			  ## att_db.c:283:1


att_find_handle:
 1e06596:    76 01             	[--sp] = {rets, r6-r4}			  ## att_db.c:185:0
 1e06598:    15 08             	r5 = r1			  ## att_db.c:185:0
 1e0659a:    06 08             	r6 = r0			  ## att_db.c:185:0
 1e0659c:    04 70             	r4 = 0			  ## att_db.c:185:0
 1e0659e:    0f 2a             	if (r5 == 0) goto 30 <att_find_handle+0x28 : 1e065be >			  ## att_db.c:185:0
 1e065a0:    c0 ff 18 1d 00 00 	r0 = 7448 <att_global_info : 1d18 >			  ## att_db.c:114:27
 1e065a6:    30 40             	r0 = [r0 + 12]			  ## att_db.c:114:27
 1e065a8:    08 4c             	[r6 + 0] = r0			  ## att_db.c:114:17
 1e065aa:    09 20             	if (r0 == 0) goto 18 <att_find_handle+0x28 : 1e065be >			  ## att_db.c:114:17
 1e065ac:    60 08             	r0 = r6			  ## att_db.c:191:9
 1e065ae:    e9 16             	call -558 <att_iterator_fetch_next : 1e06382 >			  ## att_db.c:191:9
 1e065b0:    40 5c             	r0 = h[r6 + 8] (u)			  ## att_db.c:192:17
 1e065b2:    50 f2 03 00       	if (r0 == r5) goto 6 <att_find_handle+0x26 : 1e065bc >			  ## att_db.c:192:17
 1e065b6:    00 4c             	r0 = [r6 + 0]
 1e065b8:    f9 31             	if (r0 != 0) goto -14 <att_find_handle+0x16 : 1e065ac >
 1e065ba:    01 18             	goto 2 <att_find_handle+0x28 : 1e065be >
 1e065bc:    14 70             	r4 = 1
 1e065be:    40 08             	r0 = r4			  ## att_db.c:198:1
 1e065c0:    56 01             	{pc, r6-r4} = [sp++]			  ## att_db.c:198:1


att_notify_write_callbacks:
 1e065c2:    78 01             	[--sp] = {rets, r8-r4}			  ## att_db.c:1150:0
 1e065c4:    f6 0b             	sp += -20			  ## att_db.c:1150:0
 1e065c6:    14 08             	r4 = r1			  ## att_db.c:1150:0
 1e065c8:    05 08             	r5 = r0			  ## att_db.c:1150:0
 1e065ca:    c8 ff 18 1d 00 00 	r8 = 7448 <att_global_info : 1d18 >			  ## att_db.c:1150:0
 1e065d0:    81 fc 20 00       	r1 = r8 + 32			  ## att_db.c:1153:5
 1e065d4:    80 a0             	r0 = sp + 8			  ## att_db.c:1153:5
 1e065d6:    80 f3 05 18       	call 12298 <btstack_linked_list_iterator_init : 1e095e4 >			  ## att_db.c:1153:5
 1e065da:    80 f3 77 0b       	call 5870 <btstack_linked_list_iterator_has_next : 1e07ccc >			  ## att_db.c:1154:12
 1e065de:    11 20             	if (r0 == 0) goto 34 <att_notify_write_callbacks+0x40 : 1e06602 >			  ## att_db.c:1154:12
 1e065e0:    07 70             	r7 = 0
 1e065e2:    80 a0             	r0 = sp + 8
 1e065e4:    80 f3 80 0b       	call 5888 <btstack_linked_list_iterator_next : 1e07ce8 >			  ## att_db.c:1155:68
 1e065e8:    36 40             	r6 = [r0 + 12]			  ## att_db.c:1156:23
 1e065ea:    07 2c             	if (r6 == 0) goto 14 <att_notify_write_callbacks+0x38 : 1e065fa >			  ## att_db.c:1156:23
 1e065ec:    00 5a             	r0 = h[r5 + 0] (u)			  ## att_db.c:1159:9
 1e065ee:    1f 02             	[sp+4] = r7			  ## att_db.c:1159:9
 1e065f0:    01 70             	r1 = 0			  ## att_db.c:1159:9
 1e065f2:    03 70             	r3 = 0			  ## att_db.c:1159:9
 1e065f4:    0f 02             	[sp] = r7			  ## att_db.c:1159:9
 1e065f6:    42 08             	r2 = r4			  ## att_db.c:1159:9
 1e065f8:    86 00             	call r6			  ## att_db.c:1159:9
 1e065fa:    80 a0             	r0 = sp + 8
 1e065fc:    80 f3 66 0b       	call 5836 <btstack_linked_list_iterator_has_next : 1e07ccc >			  ## att_db.c:1154:12
 1e06600:    f0 31             	if (r0 != 0) goto -32 <att_notify_write_callbacks+0x20 : 1e065e2 >
 1e06602:    06 f6 18 80       	r6 = [r8 + 24]			  ## att_db.c:1161:18
 1e06606:    08 2c             	if (r6 == 0) goto 16 <att_notify_write_callbacks+0x56 : 1e06618 >			  ## att_db.c:1161:18
 1e06608:    00 5a             	r0 = h[r5 + 0] (u)			  ## att_db.c:1164:5
 1e0660a:    02 70             	r2 = 0			  ## att_db.c:1164:5
 1e0660c:    1a 02             	[sp+4] = r2			  ## att_db.c:1164:5
 1e0660e:    01 70             	r1 = 0			  ## att_db.c:1164:5
 1e06610:    03 70             	r3 = 0			  ## att_db.c:1164:5
 1e06612:    0a 02             	[sp] = r2			  ## att_db.c:1164:5
 1e06614:    42 08             	r2 = r4			  ## att_db.c:1164:5
 1e06616:    86 00             	call r6			  ## att_db.c:1164:5
 1e06618:    0a 0a             	sp += 20
 1e0661a:    58 01             	{pc, r8-r4} = [sp++]			  ## att_db.c:1165:1


att_handle_request:
 1e0661c:    7f 01             	[--sp] = {rets, r15-r4}			  ## att_db.c:1304:0
 1e0661e:    78 0b             	sp += -272			  ## att_db.c:1304:0
 1e06620:    16 08             	r6 = r1			  ## att_db.c:1304:0
 1e06622:    01 6c             	r1 = b[r6 + 0] (u)			  ## att_db.c:1304:0
 1e06624:    3d 08             	r13 = r3			  ## att_db.c:1304:0
 1e06626:    27 08             	r7 = r2			  ## att_db.c:1304:0
 1e06628:    0c 08             	r12 = r0			  ## att_db.c:1304:0
 1e0662a:    10 fc fe ff       	r0 = r1 + -2			  ## att_db.c:1308:5
 1e0662e:    0e 70             	r14 = 0			  ## att_db.c:1308:5
 1e06630:    ca ff 18 1d 00 00 	r10 = 7448 <att_global_info : 1d18 >			  ## att_db.c:1308:5
 1e06636:    60 e1 32 80       	if (r0 > 22) goto 100 <.GJTIE763_0_0_+0x2E : 1e0669e >			  ## att_db.c:1308:5
 1e0663a:    0f f7 02 c0       	r15 = h[r12 + 2] (u)			  ## att_db.c:1306:53
 1e0663e:    41 c0             	r1 = r0 << 1			  ## att_db.c:1306:53
 1e06640:    b1 00             	tbh [r1]			  ## att_db.c:1306:53


.GJTIL763_0_0_:
 1e06642:    17 00     < 23 : 0x17 >
 1e06644:    5e 00     < 94 : 0x5E >
 1e06646:    70 00     < 112 : 0x70 >
 1e06648:    bb 04     < 1211 : 0x4BB >
 1e0664a:    c7 00     < 199 : 0xC7 >
 1e0664c:    bb 04     < 1211 : 0x4BB >
 1e0664e:    35 01     < 309 : 0x135 >
 1e06650:    bb 04     < 1211 : 0x4BB >
 1e06652:    ba 01     < 442 : 0x1BA >
 1e06654:    bb 04     < 1211 : 0x4BB >
 1e06656:    d2 01     < 466 : 0x1D2 >
 1e06658:    bb 04     < 1211 : 0x4BB >
 1e0665a:    ef 01     < 495 : 0x1EF >
 1e0665c:    bb 04     < 1211 : 0x4BB >
 1e0665e:    31 02     < 561 : 0x231 >
 1e06660:    bb 04     < 1211 : 0x4BB >
 1e06662:    61 02     < 609 : 0x261 >
 1e06664:    bb 04     < 1211 : 0x4BB >
 1e06666:    bb 04     < 1211 : 0x4BB >
 1e06668:    bb 04     < 1211 : 0x4BB >
 1e0666a:    7f 02     < 639 : 0x27F >
 1e0666c:    bb 04     < 1211 : 0x4BB >
 1e0666e:    a9 02     < 681 : 0x2A9 >
 1e06670:    11 70             	r1 = 1			  ## att_db.c:431:30
 1e06672:    60 08             	r0 = r6			  ## att_db.c:431:30
 1e06674:    80 f3 23 0b       	call 5702 <little_endian_read_16 : 1e07cbe >			  ## att_db.c:431:30
 1e06678:    01 f7 04 c0       	r1 = h[r12 + 4] (u)			  ## att_db.c:434:41
 1e0667c:    10 f2 01 30       	if (r0 < r1) goto 2 <.GJTIE763_0_0_+0x12 : 1e06682 >			  ## att_db.c:434:41
 1e06680:    10 08             	r0 = r1			  ## att_db.c:436:5
 1e06682:    10 f7 02 c0       	h[r12 + 2] = r0
 1e06686:    3e 70             	r14 = 3
 1e06688:    1e f9 00 30       	b[r3 + 0] = r14			  ## att_db.c:440:24
 1e0668c:    02 f7 02 c0       	r2 = h[r12 + 2] (u)			  ## att_db.c:441:5
 1e06690:    11 70             	r1 = 1			  ## att_db.c:441:5
 1e06692:    d0 08             	r0 = r13			  ## att_db.c:441:5
 1e06694:    80 f3 03 0e       	call 7174 <little_endian_store_16 : 1e0829e >			  ## att_db.c:441:5
 1e06698:    01 f7 02 c0       	r1 = h[r12 + 2] (u)			  ## att_db.c:442:5
 1e0669c:    3c 18             	goto 120 <.GJTIE763_0_0_+0xA6 : 1e06716 >			  ## att_db.c:442:5
 1e0669e:    21 e5 8b 14       	if (r1 != 82) goto 2326 <.GJTIE763_0_0_+0x948 : 1e06fb8 >
 1e066a2:    11 70             	r1 = 1			  ## att_db.c:1237:23
 1e066a4:    60 08             	r0 = r6			  ## att_db.c:1237:23
 1e066a6:    80 f3 0a 0b       	call 5652 <little_endian_read_16 : 1e07cbe >			  ## att_db.c:1237:23
 1e066aa:    04 08             	r4 = r0			  ## att_db.c:1237:23
 1e066ac:    13 17             	call -474 <att_service_handler_for_handle : 1e064d4 >			  ## att_db.c:228:38
 1e066ae:    c2 90             	r2 = r0 + 12			  ## att_db.c:230:25
 1e066b0:    a1 fc 18 00       	r1 = r10 + 24			  ## att_db.c:229:9
 1e066b4:    01 20             	if (r0 == 0) goto 2 <.GJTIE763_0_0_+0x48 : 1e066b8 >			  ## att_db.c:229:9
 1e066b6:    21 08             	r1 = r2			  ## att_db.c:229:9
 1e066b8:    08 f6 00 10       	r8 = [r1 + 0]
 1e066bc:    08 e0 7c 04       	if (r8 == 0) goto 2296 <.GJTIE763_0_0_+0x948 : 1e06fb8 >
 1e066c0:    80 af             	r0 = sp + 248
 1e066c2:    41 08             	r1 = r4			  ## att_db.c:1244:14
 1e066c4:    68 17             	call -304 <att_find_handle : 1e06596 >			  ## att_db.c:1244:14
 1e066c6:    00 e0 77 04       	if (r0 == 0) goto 2286 <.GJTIE763_0_0_+0x948 : 1e06fb8 >
 1e066ca:    81 f5 fe 00       	r1 = h[sp+254] (u)			  ## att_db.c:1248:13
 1e066ce:    00 fb 04 01       	r0 = 260 <DRIVER_RAM_TOTAL+0x12 : 104 >			  ## att_db.c:1248:9
 1e066d2:    50 b3             	r0 &= r1			  ## att_db.c:1248:9
 1e066d4:    01 ff 04 01 6f 04 	if (r0 != 260) goto 2270 <.GJTIE763_0_0_+0x948 : 1e06fb8 >			  ## att_db.c:1248:9
 1e066da:    c0 08             	r0 = r12			  ## att_db.c:1254:9
 1e066dc:    d8 16             	call -592 <att_validate_security : 1e0648e >			  ## att_db.c:1254:9
 1e066de:    00 e0 6b 14       	if (r0 != 0) goto 2262 <.GJTIE763_0_0_+0x948 : 1e06fb8 >			  ## att_db.c:1254:9
 1e066e2:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## att_db.c:1257:5
 1e066e6:    71 fc fd ff       	r1 = r7 + -3			  ## att_db.c:1257:115
 1e066ea:    61 04             	r1 = r1.l (u)			  ## att_db.c:1257:5
 1e066ec:    19 02             	[sp+4] = r1			  ## att_db.c:1257:5
 1e066ee:    31 9c             	r1 = r6 + 3			  ## att_db.c:1257:98
 1e066f0:    02 70             	r2 = 0			  ## att_db.c:1257:5
 1e066f2:    03 70             	r3 = 0			  ## att_db.c:1257:5
 1e066f4:    09 02             	[sp] = r1			  ## att_db.c:1257:5
 1e066f6:    41 08             	r1 = r4			  ## att_db.c:1257:5
 1e066f8:    88 00             	call r8			  ## att_db.c:1257:5
 1e066fa:    c0 f3 5d 04       	goto 2234 <.GJTIE763_0_0_+0x948 : 1e06fb8 >			  ## att_db.c:1257:5
 1e066fe:    11 70             	r1 = 1			  ## att_db.c:451:30
 1e06700:    60 08             	r0 = r6			  ## att_db.c:451:30
 1e06702:    80 f3 dc 0a       	call 5560 <little_endian_read_16 : 1e07cbe >			  ## att_db.c:451:30
 1e06706:    02 f7 04 c0       	r2 = h[r12 + 4] (u)			  ## att_db.c:454:41
 1e0670a:    01 08             	r1 = r0			  ## att_db.c:451:30
 1e0670c:    21 f2 01 30       	if (r1 < r2) goto 2 <.GJTIE763_0_0_+0xA2 : 1e06712 >			  ## att_db.c:451:30
 1e06710:    21 08             	r1 = r2			  ## att_db.c:456:5
 1e06712:    11 f7 02 c0       	h[r12 + 2] = r1
 1e06716:    00 f7 00 c0       	r0 = h[r12 + 0] (u)
 1e0671a:    80 f3 b1 41       	call 33634 <gatt_client_sync_mtu : 1e0ea80 >
 1e0671e:    c0 f3 4b 04       	goto 2198 <.GJTIE763_0_0_+0x948 : 1e06fb8 >
 1e06722:    11 70             	r1 = 1			  ## att_db.c:544:100
 1e06724:    1e 70             	r14 = 1			  ## att_db.c:544:100
 1e06726:    60 08             	r0 = r6			  ## att_db.c:544:100
 1e06728:    80 f3 c9 0a       	call 5522 <little_endian_read_16 : 1e07cbe >			  ## att_db.c:544:100
 1e0672c:    05 08             	r5 = r0			  ## att_db.c:544:100
 1e0672e:    31 70             	r1 = 3			  ## att_db.c:544:142
 1e06730:    60 08             	r0 = r6			  ## att_db.c:544:142
 1e06732:    80 f3 c4 0a       	call 5512 <little_endian_read_16 : 1e07cbe >			  ## att_db.c:544:142
 1e06736:    51 fc ff ff       	r1 = r5 + -1			  ## att_db.c:479:35
 1e0673a:    61 04             	r1 = r1.l (u)			  ## att_db.c:479:35
 1e0673c:    06 08             	r6 = r0			  ## att_db.c:544:142
 1e0673e:    61 f2 42 22       	if (r1 >= r6) goto 1156 <.GJTIE763_0_0_+0x556 : 1e06bc6 >
 1e06742:    00 f6 0c a0       	r0 = [r10 + 12]			  ## att_db.c:114:27
 1e06746:    58 02             	[sp+20] = r0			  ## att_db.c:114:17
 1e06748:    08 70             	r8 = 0			  ## att_db.c:114:17
 1e0674a:    37 18             	goto 110 <.GJTIE763_0_0_+0x14A : 1e067ba >			  ## att_db.c:114:17
 1e0674c:    40 a1             	r0 = sp + 20
 1e0674e:    19 16             	call -974 <att_iterator_fetch_next : 1e06382 >			  ## att_db.c:489:9
 1e06750:    82 f5 1c 00       	r2 = h[sp+28] (u)			  ## att_db.c:490:17
 1e06754:    20 fc ff ff       	r0 = r2 + -1			  ## att_db.c:490:13
 1e06758:    20 04             	r0 = r0.l (u)			  ## att_db.c:490:13
 1e0675a:    60 f2 30 20       	if (r0 >= r6) goto 96 <.GJTIE763_0_0_+0x14E : 1e067be >			  ## att_db.c:490:13
 1e0675e:    52 f2 2c 30       	if (r2 < r5) goto 88 <.GJTIE763_0_0_+0x14A : 1e067ba >
 1e06762:    81 f5 1a 00       	r1 = h[sp+26] (u)			  ## att_db.c:502:38
 1e06766:    00 71             	r0 = 16			  ## att_db.c:502:34
 1e06768:    29 f3 01 10       	if ((r1 & 512) != 0) goto 2 <.GJTIE763_0_0_+0xFE : 1e0676e >			  ## att_db.c:502:34
 1e0676c:    20 70             	r0 = 2			  ## att_db.c:502:34
 1e0676e:    e6 fd 00 3e       	r3 = r14.l (u)			  ## att_db.c:505:13
 1e06772:    23 e0 05 30       	if (r3 < 2) goto 10 <.GJTIE763_0_0_+0x110 : 1e06780 >			  ## att_db.c:505:13
 1e06776:    e6 fd 00 48       	r4 = r8.l (u)
 1e0677a:    27 04             	r7 = r0.l (u)
 1e0677c:    47 f2 1f 10       	if (r7 != r4) goto 62 <.GJTIE763_0_0_+0x14E : 1e067be >
 1e06780:    13 e0 09 10       	if (r3 != 1) goto 18 <.GJTIE763_0_0_+0x126 : 1e06796 >
 1e06784:    21 fd 02 1a       	r1 = r1 & 512			  ## att_db.c:502:44
 1e06788:    87 fd 48 11       	r1 = uextra(r1, p:9, l:7)			  ## att_db.c:515:39
 1e0678c:    11 80             	r1 += 1			  ## att_db.c:515:39
 1e0678e:    11 fa 00 d3       	b[r13+r3] = r1			  ## att_db.c:515:37
 1e06792:    2e 70             	r14 = 2			  ## att_db.c:515:37
 1e06794:    08 08             	r8 = r0			  ## att_db.c:515:37
 1e06796:    e6 fd 00 38       	r3 = r8.l (u)			  ## att_db.c:520:26
 1e0679a:    e6 fd 00 1e       	r1 = r14.l (u)			  ## att_db.c:520:13
 1e0679e:    24 92             	r4 = r1 + 2			  ## att_db.c:520:20
 1e067a0:    c7 b8             	r7 = r4 + r3			  ## att_db.c:520:24
 1e067a2:    f7 f2 7e 82       	if (r7 > r15) goto 1276 <.GJTIE763_0_0_+0x632 : 1e06ca2 >			  ## att_db.c:520:24
 1e067a6:    d0 08             	r0 = r13			  ## att_db.c:525:9
 1e067a8:    80 f3 79 0d       	call 6898 <little_endian_store_16 : 1e0829e >			  ## att_db.c:525:9
 1e067ac:    81 02             	r1 = [sp+32]			  ## att_db.c:528:45
 1e067ae:    20 05             	r0 = r4.l (u)			  ## att_db.c:528:34
 1e067b0:    d0 09             	r0 += r13			  ## att_db.c:528:32
 1e067b2:    32 08             	r2 = r3			  ## att_db.c:528:9
 1e067b4:    98 f3 96 03       	call 3147564 <memcpy : 106ee4 >			  ## att_db.c:528:9
 1e067b8:    7e 08             	r14 = r7			  ## att_db.c:528:9
 1e067ba:    50 02             	r0 = [sp+20]			  ## att_db.c:119:16
 1e067bc:    c7 31             	if (r0 != 0) goto -114 <.GJTIE763_0_0_+0xDC : 1e0674c >			  ## att_db.c:119:16
 1e067be:    e6 fd 00 0e       	r0 = r14.l (u)			  ## att_db.c:532:16
 1e067c2:    10 e0 6e 12       	if (r0 != 1) goto 1244 <.GJTIE763_0_0_+0x632 : 1e06ca2 >			  ## att_db.c:532:16
 1e067c6:    10 70             	r0 = 1
 1e067c8:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:367:24
 1e067cc:    40 70             	r0 = 4			  ## att_db.c:367:24
 1e067ce:    de 1b             	goto 1980 <.GJTIE763_0_0_+0x91C : 1e06f8c >			  ## att_db.c:367:24
 1e067d0:    11 70             	r1 = 1			  ## att_db.c:629:102
 1e067d2:    14 70             	r4 = 1			  ## att_db.c:629:102
 1e067d4:    60 08             	r0 = r6			  ## att_db.c:629:102
 1e067d6:    80 f3 72 0a       	call 5348 <little_endian_read_16 : 1e07cbe >			  ## att_db.c:629:102
 1e067da:    05 08             	r5 = r0			  ## att_db.c:629:102
 1e067dc:    31 70             	r1 = 3			  ## att_db.c:630:13
 1e067de:    60 08             	r0 = r6			  ## att_db.c:630:13
 1e067e0:    80 f3 6d 0a       	call 5338 <little_endian_read_16 : 1e07cbe >			  ## att_db.c:630:13
 1e067e4:    08 08             	r8 = r0			  ## att_db.c:630:13
 1e067e6:    51 70             	r1 = 5			  ## att_db.c:630:55
 1e067e8:    5e 70             	r14 = 5			  ## att_db.c:630:55
 1e067ea:    60 08             	r0 = r6			  ## att_db.c:630:55
 1e067ec:    80 f3 67 0a       	call 5326 <little_endian_read_16 : 1e07cbe >			  ## att_db.c:630:55
 1e067f0:    51 fc ff ff       	r1 = r5 + -1			  ## att_db.c:570:35
 1e067f4:    61 04             	r1 = r1.l (u)			  ## att_db.c:570:35
 1e067f6:    09 08             	r9 = r0			  ## att_db.c:630:55
 1e067f8:    81 f2 f2 21       	if (r1 >= r8) goto 996 <.GJTIE763_0_0_+0x570 : 1e06be0 >
 1e067fc:    00 f6 0c a0       	r0 = [r10 + 12]			  ## att_db.c:114:27
 1e06800:    7a 9c             	r10 = r6 + 7			  ## att_db.c:630:113
 1e06802:    71 fc f9 ff       	r1 = r7 + -7			  ## att_db.c:628:37
 1e06806:    b8 02             	[sp+44] = r0			  ## att_db.c:114:17
 1e06808:    6b 04             	r11 = r1.l (u)			  ## att_db.c:114:17
 1e0680a:    0c 70             	r12 = 0			  ## att_db.c:114:17
 1e0680c:    07 70             	r7 = 0
 1e0680e:    3a 18             	goto 116 <.GJTIE763_0_0_+0x214 : 1e06884 >
 1e06810:    c0 a2             	r0 = sp + 44
 1e06812:    b7 15             	call -1170 <att_iterator_fetch_next : 1e06382 >			  ## att_db.c:581:9
 1e06814:    86 f5 34 00       	r6 = h[sp+52] (u)			  ## att_db.c:583:16
 1e06818:    02 2c             	if (r6 == 0) goto 4 <.GJTIE763_0_0_+0x1AE : 1e0681e >
 1e0681a:    56 f2 33 30       	if (r6 < r5) goto 102 <.GJTIE763_0_0_+0x214 : 1e06884 >
 1e0681e:    86 f2 33 80       	if (r6 > r8) goto 102 <.GJTIE763_0_0_+0x218 : 1e06888 >
 1e06822:    e6 fd 00 0c       	r0 = r12.l (u)			  ## att_db.c:591:22
 1e06826:    15 20             	if (r0 == 0) goto 42 <.GJTIE763_0_0_+0x1E2 : 1e06852 >			  ## att_db.c:591:22
 1e06828:    0a 2c             	if (r6 == 0) goto 20 <.GJTIE763_0_0_+0x1CE : 1e0683e >
 1e0682a:    c0 a2             	r0 = sp + 44
 1e0682c:    01 fb 00 28       	r1 = 10240 <vm_obj+0xB0 : 2800 >			  ## att_db.c:592:32
 1e06830:    e8 15             	call -1072 <att_iterator_match_uuid16 : 1e06402 >			  ## att_db.c:592:32
 1e06832:    05 30             	if (r0 != 0) goto 10 <.GJTIE763_0_0_+0x1CE : 1e0683e >
 1e06834:    c0 a2             	r0 = sp + 44
 1e06836:    01 fb 01 28       	r1 = 10241 <vm_obj+0xB1 : 2801 >			  ## att_db.c:592:93
 1e0683a:    e3 15             	call -1082 <att_iterator_match_uuid16 : 1e06402 >			  ## att_db.c:592:93
 1e0683c:    0d 20             	if (r0 == 0) goto 26 <.GJTIE763_0_0_+0x1E8 : 1e06858 >
 1e0683e:    21 05             	r1 = r4.l (u)			  ## att_db.c:595:13
 1e06840:    d0 08             	r0 = r13			  ## att_db.c:595:13
 1e06842:    72 08             	r2 = r7			  ## att_db.c:595:13
 1e06844:    80 f3 2b 0d       	call 6742 <little_endian_store_16 : 1e0829e >			  ## att_db.c:595:13
 1e06848:    24 80             	r4 += 2			  ## att_db.c:596:20
 1e0684a:    20 05             	r0 = r4.l (u)			  ## att_db.c:600:17
 1e0684c:    40 80             	r0 += 4			  ## att_db.c:600:24
 1e0684e:    f0 f2 1b 80       	if (r0 > r15) goto 54 <.GJTIE763_0_0_+0x218 : 1e06888 >			  ## att_db.c:600:24
 1e06852:    0c 70             	r12 = 0
 1e06854:    07 70             	r7 = 0
 1e06856:    16 2c             	if (r6 == 0) goto 44 <.GJTIE763_0_0_+0x214 : 1e06884 >
 1e06858:    c0 a2             	r0 = sp + 44
 1e0685a:    91 08             	r1 = r9			  ## att_db.c:609:26
 1e0685c:    d2 15             	call -1116 <att_iterator_match_uuid16 : 1e06402 >			  ## att_db.c:609:26
 1e0685e:    67 08             	r7 = r6
 1e06860:    11 20             	if (r0 == 0) goto 34 <.GJTIE763_0_0_+0x214 : 1e06884 >
 1e06862:    80 f5 3c 00       	r0 = h[sp+60] (u)			  ## att_db.c:609:96
 1e06866:    b0 f2 0d 10       	if (r0 != r11) goto 26 <.GJTIE763_0_0_+0x214 : 1e06884 >			  ## att_db.c:609:96
 1e0686a:    01 03             	r1 = [sp+64]			  ## att_db.c:609:136
 1e0686c:    a0 08             	r0 = r10			  ## att_db.c:609:109
 1e0686e:    b2 08             	r2 = r11			  ## att_db.c:609:109
 1e06870:    98 f3 3c 03       	call 3147384 <memcmp : 106eec >			  ## att_db.c:609:109
 1e06874:    07 30             	if (r0 != 0) goto 14 <.GJTIE763_0_0_+0x214 : 1e06884 >			  ## att_db.c:609:109
 1e06876:    21 05             	r1 = r4.l (u)			  ## att_db.c:611:13
 1e06878:    d0 08             	r0 = r13			  ## att_db.c:611:13
 1e0687a:    62 08             	r2 = r6			  ## att_db.c:611:13
 1e0687c:    80 f3 0f 0d       	call 6686 <little_endian_store_16 : 1e0829e >			  ## att_db.c:611:13
 1e06880:    24 80             	r4 += 2			  ## att_db.c:612:20
 1e06882:    1c 70             	r12 = 1
 1e06884:    b0 02             	r0 = [sp+44]			  ## att_db.c:119:16
 1e06886:    c4 31             	if (r0 != 0) goto -120 <.GJTIE763_0_0_+0x1A0 : 1e06810 >			  ## att_db.c:119:16
 1e06888:    20 05             	r0 = r4.l (u)			  ## att_db.c:617:16
 1e0688a:    10 e0 0c 12       	if (r0 != 1) goto 1048 <.GJTIE763_0_0_+0x636 : 1e06ca6 >			  ## att_db.c:617:9
 1e0688e:    10 70             	r0 = 1
 1e06890:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:367:24
 1e06894:    60 70             	r0 = 6			  ## att_db.c:368:24
 1e06896:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:368:24
 1e0689a:    21 70             	r1 = 2			  ## att_db.c:369:5
 1e0689c:    d0 08             	r0 = r13			  ## att_db.c:369:5
 1e0689e:    52 08             	r2 = r5			  ## att_db.c:369:5
 1e068a0:    80 f3 fd 0c       	call 6650 <little_endian_store_16 : 1e0829e >			  ## att_db.c:369:5
 1e068a4:    a0 70             	r0 = 10			  ## att_db.c:370:24
 1e068a6:    10 f9 04 d0       	b[r13 + 4] = r0			  ## att_db.c:370:24
 1e068aa:    86 1b             	goto 1804 <.GJTIE763_0_0_+0x948 : 1e06fb8 >			  ## att_db.c:370:24
 1e068ac:    22 70             	r2 = 2			  ## att_db.c:750:5
 1e068ae:    87 e0 01 30       	if (r7 < 8) goto 2 <.GJTIE763_0_0_+0x244 : 1e068b4 >			  ## att_db.c:750:5
 1e068b2:    02 71             	r2 = 16			  ## att_db.c:750:5
 1e068b4:    11 70             	r1 = 1			  ## att_db.c:753:96
 1e068b6:    13 70             	r3 = 1			  ## att_db.c:753:96
 1e068b8:    60 08             	r0 = r6			  ## att_db.c:753:96
 1e068ba:    80 f3 00 0a       	call 5120 <little_endian_read_16 : 1e07cbe >			  ## att_db.c:753:96
 1e068be:    07 08             	r7 = r0			  ## att_db.c:753:96
 1e068c0:    31 70             	r1 = 3			  ## att_db.c:753:138
 1e068c2:    60 08             	r0 = r6			  ## att_db.c:753:138
 1e068c4:    80 f3 fb 09       	call 5110 <little_endian_read_16 : 1e07cbe >			  ## att_db.c:753:138
 1e068c8:    71 fc ff ff       	r1 = r7 + -1			  ## att_db.c:645:35
 1e068cc:    61 04             	r1 = r1.l (u)			  ## att_db.c:645:35
 1e068ce:    08 08             	r8 = r0			  ## att_db.c:753:138
 1e068d0:    01 f2 90 21       	if (r1 >= r0) goto 800 <.GJTIE763_0_0_+0x584 : 1e06bf4 >			  ## att_db.c:753:138
 1e068d4:    00 f6 0c a0       	r0 = [r10 + 12]			  ## att_db.c:114:27
 1e068d8:    18 03             	[sp+68] = r0			  ## att_db.c:114:17
 1e068da:    00 e0 4c 02       	if (r0 == 0) goto 1176 <.GJTIE763_0_0_+0x706 : 1e06d76 >
 1e068de:    59 9c             	r9 = r6 + 5			  ## att_db.c:753:201
 1e068e0:    f0 fc fe ff       	r0 = r15 + -2			  ## att_db.c:753:201
 1e068e4:    48 02             	[sp+16] = r0			  ## att_db.c:753:201
 1e068e6:    f0 fc fc ff       	r0 = r15 + -4			  ## att_db.c:753:201
 1e068ea:    38 02             	[sp+12] = r0			  ## att_db.c:753:201
 1e068ec:    1e 70             	r14 = 1			  ## att_db.c:753:201
 1e068ee:    0b 70             	r11 = 0			  ## att_db.c:753:201
 1e068f0:    a6 04             	r6 = r2.l (u)			  ## att_db.c:753:201
 1e068f2:    05 70             	r5 = 0
 1e068f4:    b4 08             	r4 = r11
 1e068f6:    4b 08             	r11 = r4
 1e068f8:    40 a4             	r0 = sp + 68
 1e068fa:    43 15             	call -1402 <att_iterator_fetch_next : 1e06382 >			  ## att_db.c:658:9
 1e068fc:    84 f5 4c 00       	r4 = h[sp+76] (u)			  ## att_db.c:660:17
 1e06900:    0a 70             	r10 = 0			  ## att_db.c:660:17
 1e06902:    04 e0 52 03       	if (r4 == 0) goto 1700 <.GJTIE763_0_0_+0x93A : 1e06faa >			  ## att_db.c:660:17
 1e06906:    74 f2 07 30       	if (r4 < r7) goto 14 <.GJTIE763_0_0_+0x2A8 : 1e06918 >
 1e0690a:    84 f2 4e 83       	if (r4 > r8) goto 1692 <.GJTIE763_0_0_+0x93A : 1e06faa >
 1e0690e:    40 a4             	r0 = sp + 68
 1e06910:    91 08             	r1 = r9			  ## att_db.c:671:14
 1e06912:    62 08             	r2 = r6			  ## att_db.c:671:14
 1e06914:    8e 15             	call -1252 <att_iterator_match_uuid : 1e06432 >			  ## att_db.c:671:14
 1e06916:    03 30             	if (r0 != 0) goto 6 <.GJTIE763_0_0_+0x2AE : 1e0691e >
 1e06918:    10 03             	r0 = [sp+68]			  ## att_db.c:119:16
 1e0691a:    ee 31             	if (r0 != 0) goto -36 <.GJTIE763_0_0_+0x288 : 1e068f8 >			  ## att_db.c:119:16
 1e0691c:    46 1b             	goto 1676 <.GJTIE763_0_0_+0x93A : 1e06faa >			  ## att_db.c:119:16
 1e0691e:    81 f5 4a 00       	r1 = h[sp+74] (u)			  ## att_db.c:676:17
 1e06922:    21 f3 09 10       	if ((r1 & 2) != 0) goto 18 <.GJTIE763_0_0_+0x2C8 : 1e06938 >			  ## att_db.c:676:13
 1e06926:    c0 ff ff ff 00 00 	r0 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## att_db.c:677:17
 1e0692c:    0b f0 01 00       	if ((r11 & r0) == 0) goto 2 <.GJTIE763_0_0_+0x2C2 : 1e06932 >			  ## att_db.c:677:17
 1e06930:    b4 08             	r4 = r11			  ## att_db.c:677:17
 1e06932:    10 03             	r0 = [sp+68]			  ## att_db.c:119:16
 1e06934:    e0 31             	if (r0 != 0) goto -64 <.GJTIE763_0_0_+0x286 : 1e068f6 >			  ## att_db.c:119:16
 1e06936:    38 1b             	goto 1648 <.GJTIE763_0_0_+0x938 : 1e06fa8 >			  ## att_db.c:119:16
 1e06938:    20 f3 04 10       	if ((r1 & 1) != 0) goto 8 <.GJTIE763_0_0_+0x2D4 : 1e06944 >
 1e0693c:    c0 08             	r0 = r12			  ## att_db.c:685:26
 1e0693e:    a7 15             	call -1202 <att_validate_security : 1e0648e >			  ## att_db.c:685:26
 1e06940:    00 e0 5c 13       	if (r0 != 0) goto 1720 <.GJTIE763_0_0_+0x98C : 1e06ffc >			  ## att_db.c:685:26
 1e06944:    01 f7 00 c0       	r1 = h[r12 + 0] (u)			  ## att_db.c:691:9
 1e06948:    40 a4             	r0 = sp + 68			  ## att_db.c:691:9
 1e0694a:    de 15             	call -1092 <att_update_value_len : 1e06508 >			  ## att_db.c:691:9
 1e0694c:    83 f5 54 00       	r3 = h[sp+84] (u)			  ## att_db.c:694:41
 1e06950:    e6 fd 00 1e       	r1 = r14.l (u)			  ## att_db.c:695:13
 1e06954:    20 96             	r0 = r3 + 2			  ## att_db.c:694:36
 1e06956:    21 e0 04 30       	if (r1 < 2) goto 8 <.GJTIE763_0_0_+0x2F2 : 1e06962 >			  ## att_db.c:694:36
 1e0695a:    22 04             	r2 = r0.l (u)
 1e0695c:    64 05             	r4 = r5.l (u)
 1e0695e:    24 f2 24 13       	if (r4 != r2) goto 1608 <.GJTIE763_0_0_+0x93A : 1e06faa >
 1e06962:    11 e0 04 10       	if (r1 != 1) goto 8 <.GJTIE763_0_0_+0x2FE : 1e0696e >
 1e06966:    10 fa 00 d1       	b[r13+r1] = r0			  ## att_db.c:704:37
 1e0696a:    2e 70             	r14 = 2			  ## att_db.c:704:37
 1e0696c:    05 08             	r5 = r0			  ## att_db.c:704:37
 1e0696e:    e6 fd 00 1e       	r1 = r14.l (u)			  ## att_db.c:709:13
 1e06972:    60 05             	r0 = r5.l (u)			  ## att_db.c:709:22
 1e06974:    10 09             	r0 += r1			  ## att_db.c:709:20
 1e06976:    f0 f2 09 90       	if (r0 <= r15) goto 18 <.GJTIE763_0_0_+0x31C : 1e0698c >			  ## att_db.c:709:20
 1e0697a:    21 e0 1a 83       	if (r1 > 2) goto 1588 <.GJTIE763_0_0_+0x942 : 1e06fb2 >
 1e0697e:    32 02             	r2 = [sp+12]
 1e06980:    92 f5 54 00       	h[sp+84] = r2			  ## att_db.c:713:26
 1e06984:    40 02             	r0 = [sp+16]			  ## att_db.c:714:32
 1e06986:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:714:32
 1e0698a:    23 08             	r3 = r2			  ## att_db.c:720:85
 1e0698c:    82 f5 4c 00       	r2 = h[sp+76] (u)			  ## att_db.c:718:9
 1e06990:    d0 08             	r0 = r13			  ## att_db.c:718:9
 1e06992:    80 f3 84 0c       	call 6408 <little_endian_store_16 : 1e0829e >			  ## att_db.c:718:9
 1e06996:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## att_db.c:720:33
 1e0699a:    08 02             	[sp] = r0			  ## att_db.c:720:33
 1e0699c:    e0 fc 02 00       	r0 = r14 + 2			  ## att_db.c:719:16
 1e069a0:    24 04             	r4 = r0.l (u)			  ## att_db.c:720:74
 1e069a2:    80 fb 40 2d       	r2 = r13 + r4			  ## att_db.c:720:72
 1e069a6:    e3 04             	r3 = r3.l (u)			  ## att_db.c:720:33
 1e069a8:    40 a4             	r0 = sp + 68			  ## att_db.c:720:33
 1e069aa:    01 70             	r1 = 0			  ## att_db.c:720:33
 1e069ac:    c8 15             	call -1136 <att_copy_value : 1e0653e >			  ## att_db.c:720:33
 1e069ae:    11 03             	r1 = [sp+68]			  ## att_db.c:119:16
 1e069b0:    0e b1             	r14 = r0 + r4			  ## att_db.c:721:16
 1e069b2:    a0 33             	if (r1 != 0) goto -192 <.GJTIE763_0_0_+0x284 : 1e068f4 >			  ## att_db.c:721:16
 1e069b4:    fa 1a             	goto 1524 <.GJTIE763_0_0_+0x93A : 1e06faa >			  ## att_db.c:721:16
 1e069b6:    11 70             	r1 = 1			  ## att_db.c:804:88
 1e069b8:    17 70             	r7 = 1			  ## att_db.c:804:88
 1e069ba:    60 08             	r0 = r6			  ## att_db.c:804:88
 1e069bc:    80 f3 7f 09       	call 4862 <little_endian_read_16 : 1e07cbe >			  ## att_db.c:804:88
 1e069c0:    04 08             	r4 = r0			  ## att_db.c:804:88
 1e069c2:    c0 a5             	r0 = sp + 92
 1e069c4:    41 08             	r1 = r4			  ## att_db.c:766:14
 1e069c6:    e7 15             	call -1074 <att_find_handle : 1e06596 >			  ## att_db.c:766:14
 1e069c8:    00 e0 23 01       	if (r0 == 0) goto 582 <.GJTIE763_0_0_+0x5A2 : 1e06c12 >
 1e069cc:    81 f5 62 00       	r1 = h[sp+98] (u)			  ## att_db.c:772:13
 1e069d0:    21 f3 47 11       	if ((r1 & 2) != 0) goto 654 <.GJTIE763_0_0_+0x5F2 : 1e06c62 >			  ## att_db.c:772:9
 1e069d4:    10 70             	r0 = 1
 1e069d6:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:367:24
 1e069da:    a0 70             	r0 = 10			  ## att_db.c:368:24
 1e069dc:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:368:24
 1e069e0:    21 70             	r1 = 2			  ## att_db.c:369:5
 1e069e2:    23 70             	r3 = 2			  ## att_db.c:369:5
 1e069e4:    e8 19             	goto 976 <.GJTIE763_0_0_+0x746 : 1e06db6 >			  ## att_db.c:369:5
 1e069e6:    11 70             	r1 = 1			  ## att_db.c:858:93
 1e069e8:    14 70             	r4 = 1			  ## att_db.c:858:93
 1e069ea:    60 08             	r0 = r6			  ## att_db.c:858:93
 1e069ec:    80 f3 67 09       	call 4814 <little_endian_read_16 : 1e07cbe >			  ## att_db.c:858:93
 1e069f0:    07 08             	r7 = r0			  ## att_db.c:858:93
 1e069f2:    31 70             	r1 = 3			  ## att_db.c:858:135
 1e069f4:    60 08             	r0 = r6			  ## att_db.c:858:135
 1e069f6:    80 f3 62 09       	call 4804 <little_endian_read_16 : 1e07cbe >			  ## att_db.c:858:135
 1e069fa:    06 08             	r6 = r0			  ## att_db.c:858:135
 1e069fc:    40 a7             	r0 = sp + 116
 1e069fe:    71 08             	r1 = r7			  ## att_db.c:816:14
 1e06a00:    ca 15             	call -1132 <att_find_handle : 1e06596 >			  ## att_db.c:816:14
 1e06a02:    00 e0 13 01       	if (r0 == 0) goto 550 <.GJTIE763_0_0_+0x5BC : 1e06c2c >
 1e06a06:    81 f5 7a 00       	r1 = h[sp+122] (u)			  ## att_db.c:822:13
 1e06a0a:    21 f3 35 11       	if ((r1 & 2) != 0) goto 618 <.GJTIE763_0_0_+0x608 : 1e06c78 >			  ## att_db.c:822:9
 1e06a0e:    10 70             	r0 = 1
 1e06a10:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:367:24
 1e06a14:    c0 70             	r0 = 12			  ## att_db.c:368:24
 1e06a16:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:368:24
 1e06a1a:    21 70             	r1 = 2			  ## att_db.c:369:5
 1e06a1c:    23 70             	r3 = 2			  ## att_db.c:369:5
 1e06a1e:    f0 18             	goto 480 <.GJTIE763_0_0_+0x590 : 1e06c00 >			  ## att_db.c:369:5
 1e06a20:    c0 ff ff ff 01 00 	r0 = 131071 <_IRQ_MEM_ADDR+0x100FF : 1ffff >			  ## att_db.c:928:36
 1e06a26:    70 09             	r0 += r7			  ## att_db.c:928:36
 1e06a28:    40 d0             	r0 = r0 >> 1			  ## att_db.c:928:41
 1e06a2a:    28 04             	r8 = r0.l (u)			  ## att_db.c:929:97
 1e06a2c:    08 e0 07 01       	if (r8 == 0) goto 526 <.GJTIE763_0_0_+0x5CE : 1e06c3e >
 1e06a30:    1a 9c             	r10 = r6 + 1			  ## att_db.c:929:111
 1e06a32:    f9 fc ff ff       	r9 = r15 + -1
 1e06a36:    1e 70             	r14 = 1
 1e06a38:    07 70             	r7 = 0
 1e06a3a:    06 70             	r6 = 0
 1e06a3c:    a0 08             	r0 = r10			  ## att_db.c:880:18
 1e06a3e:    71 08             	r1 = r7			  ## att_db.c:880:18
 1e06a40:    80 f3 3d 09       	call 4730 <little_endian_read_16 : 1e07cbe >			  ## att_db.c:880:18
 1e06a44:    04 08             	r4 = r0			  ## att_db.c:880:18
 1e06a46:    04 e0 a0 01       	if (r4 == 0) goto 832 <.GJTIE763_0_0_+0x71A : 1e06d8a >			  ## att_db.c:880:18
 1e06a4a:    c0 a8             	r0 = sp + 140
 1e06a4c:    41 08             	r1 = r4			  ## att_db.c:888:18
 1e06a4e:    a3 15             	call -1210 <att_find_handle : 1e06596 >			  ## att_db.c:888:18
 1e06a50:    00 e0 a5 01       	if (r0 == 0) goto 842 <.GJTIE763_0_0_+0x72E : 1e06d9e >
 1e06a54:    81 f5 92 00       	r1 = h[sp+146] (u)			  ## att_db.c:894:17
 1e06a58:    01 f3 a5 11       	if ((r1 & 2) == 0) goto 842 <.GJTIE763_0_0_+0x736 : 1e06da6 >			  ## att_db.c:894:17
 1e06a5c:    20 f3 05 10       	if ((r1 & 1) != 0) goto 10 <.GJTIE763_0_0_+0x3FA : 1e06a6a >
 1e06a60:    c0 08             	r0 = r12			  ## att_db.c:901:26
 1e06a62:    15 15             	call -1494 <att_validate_security : 1e0648e >			  ## att_db.c:901:26
 1e06a64:    03 08             	r3 = r0			  ## att_db.c:901:26
 1e06a66:    03 e0 9f 11       	if (r3 != 0) goto 830 <.GJTIE763_0_0_+0x738 : 1e06da8 >			  ## att_db.c:901:26
 1e06a6a:    01 f7 00 c0       	r1 = h[r12 + 0] (u)			  ## att_db.c:906:9
 1e06a6e:    c0 a8             	r0 = sp + 140			  ## att_db.c:906:9
 1e06a70:    4b 15             	call -1386 <att_update_value_len : 1e06508 >			  ## att_db.c:906:9
 1e06a72:    80 f5 9c 00       	r0 = h[sp+156] (u)			  ## att_db.c:909:25
 1e06a76:    e6 fd 00 4e       	r4 = r14.l (u)			  ## att_db.c:909:13
 1e06a7a:    01 b1             	r1 = r0 + r4			  ## att_db.c:909:20
 1e06a7c:    f1 f2 03 90       	if (r1 <= r15) goto 6 <.GJTIE763_0_0_+0x416 : 1e06a86 >			  ## att_db.c:909:20
 1e06a80:    99 f5 9c 00       	h[sp+156] = r9			  ## att_db.c:910:26
 1e06a84:    90 08             	r0 = r9			  ## att_db.c:914:85
 1e06a86:    05 f7 00 c0       	r5 = h[r12 + 0] (u)			  ## att_db.c:914:33
 1e06a8a:    80 fb 40 2d       	r2 = r13 + r4			  ## att_db.c:914:72
 1e06a8e:    23 04             	r3 = r0.l (u)			  ## att_db.c:914:33
 1e06a90:    c0 a8             	r0 = sp + 140			  ## att_db.c:914:33
 1e06a92:    01 70             	r1 = 0			  ## att_db.c:914:33
 1e06a94:    0d 02             	[sp] = r5			  ## att_db.c:914:33
 1e06a96:    53 15             	call -1370 <att_copy_value : 1e0653e >			  ## att_db.c:914:33
 1e06a98:    0e b1             	r14 = r0 + r4			  ## att_db.c:915:16
 1e06a9a:    16 80             	r6 += 1			  ## att_db.c:879:35
 1e06a9c:    27 80             	r7 += 2			  ## att_db.c:879:19
 1e06a9e:    86 f2 cd bf       	ifs (r6 < r8) goto -102 <.GJTIE763_0_0_+0x3CC : 1e06a3c >			  ## att_db.c:879:19
 1e06aa2:    ce 18             	goto 412 <.GJTIE763_0_0_+0x5D0 : 1e06c40 >			  ## att_db.c:879:19
 1e06aa4:    24 70             	r4 = 2			  ## att_db.c:1052:5
 1e06aa6:    87 e0 01 30       	if (r7 < 8) goto 2 <.GJTIE763_0_0_+0x43C : 1e06aac >			  ## att_db.c:1052:5
 1e06aaa:    04 71             	r4 = 16			  ## att_db.c:1052:5
 1e06aac:    11 70             	r1 = 1			  ## att_db.c:1055:102
 1e06aae:    13 70             	r3 = 1			  ## att_db.c:1055:102
 1e06ab0:    60 08             	r0 = r6			  ## att_db.c:1055:102
 1e06ab2:    80 f3 04 09       	call 4616 <little_endian_read_16 : 1e07cbe >			  ## att_db.c:1055:102
 1e06ab6:    05 08             	r5 = r0			  ## att_db.c:1055:102
 1e06ab8:    31 70             	r1 = 3			  ## att_db.c:1055:144
 1e06aba:    60 08             	r0 = r6			  ## att_db.c:1055:144
 1e06abc:    80 f3 ff 08       	call 4606 <little_endian_read_16 : 1e07cbe >			  ## att_db.c:1055:144
 1e06ac0:    51 fc ff ff       	r1 = r5 + -1			  ## att_db.c:959:35
 1e06ac4:    61 04             	r1 = r1.l (u)			  ## att_db.c:959:35
 1e06ac6:    08 08             	r8 = r0			  ## att_db.c:1055:144
 1e06ac8:    01 f2 9d 20       	if (r1 >= r0) goto 314 <.GJTIE763_0_0_+0x596 : 1e06c06 >
 1e06acc:    56 80             	r6 += 5			  ## att_db.c:1055:207
 1e06ace:    01 70             	r1 = 0
 1e06ad0:    87 e0 04 30       	if (r7 < 8) goto 8 <.GJTIE763_0_0_+0x46C : 1e06adc >
 1e06ad4:    60 08             	r0 = r6			  ## att_db.c:94:10
 1e06ad6:    82 14             	call -1788 <is_Bluetooth_Base_UUID : 1e063dc >			  ## att_db.c:94:10
 1e06ad8:    c1 70             	r1 = 12			  ## att_db.c:94:10
 1e06ada:    d9 20             	if (r0 == 0) goto 434 <.GJTIE763_0_0_+0x61E : 1e06c8e >			  ## att_db.c:94:10
 1e06adc:    60 08             	r0 = r6			  ## att_db.c:97:12
 1e06ade:    80 f3 ee 08       	call 4572 <little_endian_read_16 : 1e07cbe >			  ## att_db.c:97:12
 1e06ae2:    70 b0             	r0 &= 4294967294			  ## att_db.c:965:45
 1e06ae4:    21 ff 28 0a d2 00 	if (r0 != 10240) goto 420 <.GJTIE763_0_0_+0x61E : 1e06c8e >			  ## att_db.c:965:45
 1e06aea:    00 f6 0c a0       	r0 = [r10 + 12]			  ## att_db.c:114:27
 1e06aee:    10 f5 a4 00       	[sp+164] = r0			  ## att_db.c:114:17
 1e06af2:    02 70             	r2 = 0			  ## att_db.c:114:17
 1e06af4:    1e 70             	r14 = 1
 1e06af6:    20 05             	r0 = r4.l (u)
 1e06af8:    38 02             	[sp+12] = r0
 1e06afa:    04 70             	r4 = 0
 1e06afc:    0c 70             	r12 = 0
 1e06afe:    00 70             	r0 = 0
 1e06b00:    48 02             	[sp+16] = r0
 1e06b02:    ea 19             	goto 980 <.GJTIE763_0_0_+0x868 : 1e06ed8 >
 1e06b04:    11 70             	r1 = 1			  ## att_db.c:1068:23
 1e06b06:    14 70             	r4 = 1			  ## att_db.c:1068:23
 1e06b08:    60 08             	r0 = r6			  ## att_db.c:1068:23
 1e06b0a:    80 f3 d8 08       	call 4528 <little_endian_read_16 : 1e07cbe >			  ## att_db.c:1068:23
 1e06b0e:    08 08             	r8 = r0			  ## att_db.c:1068:23
 1e06b10:    c0 ab             	r0 = sp + 188			  ## att_db.c:1068:23
 1e06b12:    81 08             	r1 = r8			  ## att_db.c:1070:14
 1e06b14:    40 15             	call -1408 <att_find_handle : 1e06596 >			  ## att_db.c:1070:14
 1e06b16:    96 20             	if (r0 == 0) goto 300 <.GJTIE763_0_0_+0x5D4 : 1e06c44 >
 1e06b18:    80 08             	r0 = r8			  ## att_db.c:228:38
 1e06b1a:    dc 14             	call -1608 <att_service_handler_for_handle : 1e064d4 >			  ## att_db.c:228:38
 1e06b1c:    a1 fc 18 00       	r1 = r10 + 24			  ## att_db.c:229:9
 1e06b20:    c2 90             	r2 = r0 + 12			  ## att_db.c:230:25
 1e06b22:    01 20             	if (r0 == 0) goto 2 <.GJTIE763_0_0_+0x4B6 : 1e06b26 >			  ## att_db.c:230:25
 1e06b24:    21 08             	r1 = r2			  ## att_db.c:229:9
 1e06b26:    04 42             	r4 = [r1 + 0]
 1e06b28:    06 28             	if (r4 == 0) goto 12 <.GJTIE763_0_0_+0x4C6 : 1e06b36 >
 1e06b2a:    81 f5 c2 00       	r1 = h[sp+194] (u)			  ## att_db.c:1078:13
 1e06b2e:    03 f3 02 10       	if ((r1 & 8) == 0) goto 4 <.GJTIE763_0_0_+0x4C6 : 1e06b36 >			  ## att_db.c:1078:13
 1e06b32:    28 f3 5d 11       	if ((r1 & 256) != 0) goto 698 <.GJTIE763_0_0_+0x780 : 1e06df0 >
 1e06b36:    10 70             	r0 = 1
 1e06b38:    10 f9 00 d0       	b[r13 + 0] = r0
 1e06b3c:    20 71             	r0 = 18
 1e06b3e:    21 18             	goto 66 <.GJTIE763_0_0_+0x512 : 1e06b82 >
 1e06b40:    11 70             	r1 = 1			  ## att_db.c:1107:23
 1e06b42:    60 08             	r0 = r6			  ## att_db.c:1107:23
 1e06b44:    80 f3 bb 08       	call 4470 <little_endian_read_16 : 1e07cbe >			  ## att_db.c:1107:23
 1e06b48:    08 08             	r8 = r0			  ## att_db.c:1107:23
 1e06b4a:    31 70             	r1 = 3			  ## att_db.c:1108:23
 1e06b4c:    60 08             	r0 = r6			  ## att_db.c:1108:23
 1e06b4e:    80 f3 b6 08       	call 4460 <little_endian_read_16 : 1e07cbe >			  ## att_db.c:1108:23
 1e06b52:    09 08             	r9 = r0			  ## att_db.c:1108:23
 1e06b54:    80 08             	r0 = r8			  ## att_db.c:228:38
 1e06b56:    be 14             	call -1668 <att_service_handler_for_handle : 1e064d4 >			  ## att_db.c:228:38
 1e06b58:    c2 90             	r2 = r0 + 12			  ## att_db.c:230:25
 1e06b5a:    a1 fc 18 00       	r1 = r10 + 24			  ## att_db.c:229:9
 1e06b5e:    01 20             	if (r0 == 0) goto 2 <.GJTIE763_0_0_+0x4F2 : 1e06b62 >			  ## att_db.c:229:9
 1e06b60:    21 08             	r1 = r2			  ## att_db.c:229:9
 1e06b62:    04 42             	r4 = [r1 + 0]
 1e06b64:    0a 28             	if (r4 == 0) goto 20 <.GJTIE763_0_0_+0x50A : 1e06b7a >
 1e06b66:    40 ad             	r0 = sp + 212
 1e06b68:    81 08             	r1 = r8			  ## att_db.c:1114:14
 1e06b6a:    15 15             	call -1494 <att_find_handle : 1e06596 >			  ## att_db.c:1114:14
 1e06b6c:    a1 20             	if (r0 == 0) goto 322 <.GJTIE763_0_0_+0x640 : 1e06cb0 >
 1e06b6e:    81 f5 da 00       	r1 = h[sp+218] (u)			  ## att_db.c:1118:13
 1e06b72:    03 f3 02 10       	if ((r1 & 8) == 0) goto 4 <.GJTIE763_0_0_+0x50A : 1e06b7a >			  ## att_db.c:1118:13
 1e06b76:    28 f3 55 11       	if ((r1 & 256) != 0) goto 682 <.GJTIE763_0_0_+0x7B4 : 1e06e24 >
 1e06b7a:    10 70             	r0 = 1
 1e06b7c:    10 f9 00 d0       	b[r13 + 0] = r0
 1e06b80:    60 71             	r0 = 22
 1e06b82:    10 f9 01 d0       	b[r13 + 1] = r0
 1e06b86:    21 70             	r1 = 2
 1e06b88:    d0 08             	r0 = r13
 1e06b8a:    82 08             	r2 = r8
 1e06b8c:    80 f3 87 0b       	call 5902 <little_endian_store_16 : 1e0829e >
 1e06b90:    30 70             	r0 = 3
 1e06b92:    04 1a             	goto 1032 <.GJTIE763_0_0_+0x92C : 1e06f9c >
 1e06b94:    10 6c             	r0 = b[r6 + 1] (u)			  ## att_db.c:1206:9
 1e06b96:    63 20             	if (r0 == 0) goto 198 <.GJTIE763_0_0_+0x5EE : 1e06c5e >			  ## att_db.c:1206:9
 1e06b98:    00 f9 1c a0       	r0 = b[r10 + 28] (u)			  ## att_db.c:1208:21
 1e06b9c:    8d 20             	if (r0 == 0) goto 282 <.GJTIE763_0_0_+0x648 : 1e06cb8 >			  ## att_db.c:1208:21
 1e06b9e:    31 70             	r1 = 3			  ## att_db.c:1193:5
 1e06ba0:    c0 08             	r0 = r12			  ## att_db.c:1193:5
 1e06ba2:    0f 15             	call -1506 <att_notify_write_callbacks : 1e065c2 >			  ## att_db.c:1193:5
 1e06ba4:    03 f9 1c a0       	r3 = b[r10 + 28] (u)			  ## att_db.c:1214:43
 1e06ba8:    02 f7 1e a0       	r2 = h[r10 + 30] (u)			  ## att_db.c:369:5
 1e06bac:    00 70             	r0 = 0			  ## att_db.c:369:5
 1e06bae:    10 f9 1c a0       	b[r10 + 28] = r0			  ## att_db.c:345:42
 1e06bb2:    10 f7 1e a0       	h[r10 + 30] = r0			  ## att_db.c:346:44
 1e06bb6:    10 70             	r0 = 1			  ## att_db.c:346:44
 1e06bb8:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:367:24
 1e06bbc:    80 71             	r0 = 24			  ## att_db.c:368:24
 1e06bbe:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:368:24
 1e06bc2:    21 70             	r1 = 2			  ## att_db.c:369:5
 1e06bc4:    ea 18             	goto 468 <.GJTIE763_0_0_+0x72A : 1e06d9a >			  ## att_db.c:369:5
 1e06bc6:    1e f9 00 30       	b[r3 + 0] = r14			  ## att_db.c:367:24
 1e06bca:    40 70             	r0 = 4			  ## att_db.c:367:24
 1e06bcc:    18 66             	b[r3 + 1] = r0			  ## att_db.c:368:24
 1e06bce:    21 70             	r1 = 2			  ## att_db.c:369:5
 1e06bd0:    d0 08             	r0 = r13			  ## att_db.c:369:5
 1e06bd2:    52 08             	r2 = r5			  ## att_db.c:369:5
 1e06bd4:    80 f3 63 0b       	call 5830 <little_endian_store_16 : 1e0829e >			  ## att_db.c:369:5
 1e06bd8:    1e f9 04 00       	b[r0 + 4] = r14			  ## att_db.c:370:24
 1e06bdc:    5e 70             	r14 = 5			  ## att_db.c:370:24
 1e06bde:    ec 19             	goto 984 <.GJTIE763_0_0_+0x948 : 1e06fb8 >			  ## att_db.c:370:24
 1e06be0:    0c 66             	b[r3 + 0] = r4			  ## att_db.c:367:24
 1e06be2:    60 70             	r0 = 6			  ## att_db.c:368:24
 1e06be4:    18 66             	b[r3 + 1] = r0			  ## att_db.c:368:24
 1e06be6:    21 70             	r1 = 2			  ## att_db.c:369:5
 1e06be8:    d0 08             	r0 = r13			  ## att_db.c:369:5
 1e06bea:    52 08             	r2 = r5			  ## att_db.c:369:5
 1e06bec:    80 f3 57 0b       	call 5806 <little_endian_store_16 : 1e0829e >			  ## att_db.c:369:5
 1e06bf0:    4c 60             	b[r0 + 4] = r4			  ## att_db.c:370:24
 1e06bf2:    e2 19             	goto 964 <.GJTIE763_0_0_+0x948 : 1e06fb8 >			  ## att_db.c:370:24
 1e06bf4:    13 f9 00 d0       	b[r13 + 0] = r3			  ## att_db.c:367:24
 1e06bf8:    80 70             	r0 = 8			  ## att_db.c:368:24
 1e06bfa:    10 f9 01 d0       	b[r13 + 1] = r0
 1e06bfe:    21 70             	r1 = 2
 1e06c00:    d0 08             	r0 = r13
 1e06c02:    72 08             	r2 = r7
 1e06c04:    1d 19             	goto 570 <.GJTIE763_0_0_+0x7D0 : 1e06e40 >
 1e06c06:    13 f9 00 d0       	b[r13 + 0] = r3			  ## att_db.c:367:24
 1e06c0a:    00 71             	r0 = 16			  ## att_db.c:368:24
 1e06c0c:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:368:24
 1e06c10:    44 18             	goto 136 <.GJTIE763_0_0_+0x62A : 1e06c9a >			  ## att_db.c:368:24
 1e06c12:    17 f9 00 d0       	b[r13 + 0] = r7			  ## att_db.c:367:24
 1e06c16:    a0 70             	r0 = 10			  ## att_db.c:368:24
 1e06c18:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:368:24
 1e06c1c:    21 70             	r1 = 2			  ## att_db.c:369:5
 1e06c1e:    d0 08             	r0 = r13			  ## att_db.c:369:5
 1e06c20:    42 08             	r2 = r4			  ## att_db.c:369:5
 1e06c22:    80 f3 3c 0b       	call 5752 <little_endian_store_16 : 1e0829e >			  ## att_db.c:369:5
 1e06c26:    4f 60             	b[r0 + 4] = r7			  ## att_db.c:370:24
 1e06c28:    5e 70             	r14 = 5			  ## att_db.c:370:24
 1e06c2a:    c6 19             	goto 908 <.GJTIE763_0_0_+0x948 : 1e06fb8 >			  ## att_db.c:370:24
 1e06c2c:    14 f9 00 d0       	b[r13 + 0] = r4			  ## att_db.c:367:24
 1e06c30:    c0 70             	r0 = 12			  ## att_db.c:368:24
 1e06c32:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:368:24
 1e06c36:    21 70             	r1 = 2			  ## att_db.c:369:5
 1e06c38:    d0 08             	r0 = r13			  ## att_db.c:369:5
 1e06c3a:    72 08             	r2 = r7			  ## att_db.c:369:5
 1e06c3c:    0b 18             	goto 22 <.GJTIE763_0_0_+0x5E4 : 1e06c54 >			  ## att_db.c:369:5
 1e06c3e:    1e 70             	r14 = 1
 1e06c40:    f0 70             	r0 = 15			  ## att_db.c:922:24
 1e06c42:    b8 19             	goto 880 <.GJTIE763_0_0_+0x944 : 1e06fb4 >			  ## att_db.c:922:24
 1e06c44:    14 f9 00 d0       	b[r13 + 0] = r4			  ## att_db.c:367:24
 1e06c48:    20 71             	r0 = 18			  ## att_db.c:368:24
 1e06c4a:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:368:24
 1e06c4e:    21 70             	r1 = 2			  ## att_db.c:369:5
 1e06c50:    d0 08             	r0 = r13			  ## att_db.c:369:5
 1e06c52:    82 08             	r2 = r8			  ## att_db.c:369:5
 1e06c54:    80 f3 23 0b       	call 5702 <little_endian_store_16 : 1e0829e >
 1e06c58:    4c 60             	b[r0 + 4] = r4
 1e06c5a:    5e 70             	r14 = 5
 1e06c5c:    ad 19             	goto 858 <.GJTIE763_0_0_+0x948 : 1e06fb8 >
 1e06c5e:    31 70             	r1 = 3			  ## att_db.c:1193:5
 1e06c60:    f8 18             	goto 496 <.GJTIE763_0_0_+0x7E2 : 1e06e52 >			  ## att_db.c:1193:5
 1e06c62:    20 f3 58 10       	if ((r1 & 1) != 0) goto 176 <.GJTIE763_0_0_+0x6A6 : 1e06d16 >
 1e06c66:    c0 08             	r0 = r12			  ## att_db.c:778:30
 1e06c68:    12 14             	call -2012 <att_validate_security : 1e0648e >			  ## att_db.c:778:30
 1e06c6a:    03 08             	r3 = r0			  ## att_db.c:778:30
 1e06c6c:    54 26             	if (r3 == 0) goto 168 <.GJTIE763_0_0_+0x6A6 : 1e06d16 >			  ## att_db.c:778:30
 1e06c6e:    10 70             	r0 = 1
 1e06c70:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:367:24
 1e06c74:    a0 70             	r0 = 10			  ## att_db.c:368:24
 1e06c76:    9c 18             	goto 312 <.GJTIE763_0_0_+0x740 : 1e06db0 >			  ## att_db.c:368:24
 1e06c78:    20 f3 67 10       	if ((r1 & 1) != 0) goto 206 <.GJTIE763_0_0_+0x6DA : 1e06d4a >
 1e06c7c:    c0 08             	r0 = r12			  ## att_db.c:828:30
 1e06c7e:    07 14             	call -2034 <att_validate_security : 1e0648e >			  ## att_db.c:828:30
 1e06c80:    03 08             	r3 = r0			  ## att_db.c:828:30
 1e06c82:    63 26             	if (r3 == 0) goto 198 <.GJTIE763_0_0_+0x6DA : 1e06d4a >			  ## att_db.c:828:30
 1e06c84:    10 70             	r0 = 1
 1e06c86:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:367:24
 1e06c8a:    c0 70             	r0 = 12			  ## att_db.c:368:24
 1e06c8c:    b6 1f             	goto -148 <.GJTIE763_0_0_+0x58A : 1e06bfa >			  ## att_db.c:368:24
 1e06c8e:    10 70             	r0 = 1
 1e06c90:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:367:24
 1e06c94:    03 71             	r3 = 16			  ## att_db.c:368:24
 1e06c96:    13 f9 01 d0       	b[r13 + 1] = r3			  ## att_db.c:368:24
 1e06c9a:    21 70             	r1 = 2
 1e06c9c:    d0 08             	r0 = r13
 1e06c9e:    52 08             	r2 = r5
 1e06ca0:    cf 18             	goto 414 <.GJTIE763_0_0_+0x7D0 : 1e06e40 >
 1e06ca2:    50 70             	r0 = 5			  ## att_db.c:536:24
 1e06ca4:    87 19             	goto 782 <.GJTIE763_0_0_+0x944 : 1e06fb4 >			  ## att_db.c:536:24
 1e06ca6:    70 70             	r0 = 7			  ## att_db.c:621:24
 1e06ca8:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:621:24
 1e06cac:    4e 08             	r14 = r4			  ## att_db.c:621:24
 1e06cae:    84 19             	goto 776 <.GJTIE763_0_0_+0x948 : 1e06fb8 >			  ## att_db.c:621:24
 1e06cb0:    13 70             	r3 = 1
 1e06cb2:    13 f9 00 d0       	b[r13 + 0] = r3			  ## att_db.c:367:24
 1e06cb6:    be 18             	goto 380 <.GJTIE763_0_0_+0x7C4 : 1e06e34 >			  ## att_db.c:367:24
 1e06cb8:    a1 fc 20 00       	r1 = r10 + 32			  ## att_db.c:1171:5
 1e06cbc:    c0 ae             	r0 = sp + 236			  ## att_db.c:1171:5
 1e06cbe:    80 f3 91 14       	call 10530 <btstack_linked_list_iterator_init : 1e095e4 >			  ## att_db.c:1171:5
 1e06cc2:    04 70             	r4 = 0
 1e06cc4:    c0 ae             	r0 = sp + 236
 1e06cc6:    80 f3 01 08       	call 4098 <btstack_linked_list_iterator_has_next : 1e07ccc >			  ## att_db.c:1172:12
 1e06cca:    13 20             	if (r0 == 0) goto 38 <.GJTIE763_0_0_+0x682 : 1e06cf2 >			  ## att_db.c:1172:5
 1e06ccc:    c0 ae             	r0 = sp + 236
 1e06cce:    80 f3 0b 08       	call 4118 <btstack_linked_list_iterator_next : 1e07ce8 >			  ## att_db.c:1173:68
 1e06cd2:    36 40             	r6 = [r0 + 12]			  ## att_db.c:1174:23
 1e06cd4:    f7 2d             	if (r6 == 0) goto -18 <.GJTIE763_0_0_+0x654 : 1e06cc4 >
 1e06cd6:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## att_db.c:1177:30
 1e06cda:    1c 02             	[sp+4] = r4			  ## att_db.c:1177:30
 1e06cdc:    01 70             	r1 = 0			  ## att_db.c:1177:30
 1e06cde:    42 70             	r2 = 4			  ## att_db.c:1177:30
 1e06ce0:    03 70             	r3 = 0			  ## att_db.c:1177:30
 1e06ce2:    0c 02             	[sp] = r4			  ## att_db.c:1177:30
 1e06ce4:    86 00             	call r6			  ## att_db.c:1177:30
 1e06ce6:    60 ff ff 09 ec ff 	if ((r0 & 255) == 0) goto -40 <.GJTIE763_0_0_+0x654 : 1e06cc4 >			  ## att_db.c:1177:30
 1e06cec:    10 f9 1c a0       	b[r10 + 28] = r0			  ## att_db.c:1209:50
 1e06cf0:    56 1f             	goto -340 <.GJTIE763_0_0_+0x52E : 1e06b9e >			  ## att_db.c:1209:50
 1e06cf2:    04 f6 18 a0       	r4 = [r10 + 24]			  ## att_db.c:1182:18
 1e06cf6:    a9 28             	if (r4 == 0) goto 338 <.GJTIE763_0_0_+0x7DA : 1e06e4a >			  ## att_db.c:1182:18
 1e06cf8:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## att_db.c:1185:12
 1e06cfc:    05 70             	r5 = 0			  ## att_db.c:1185:12
 1e06cfe:    1d 02             	[sp+4] = r5			  ## att_db.c:1185:12
 1e06d00:    01 70             	r1 = 0			  ## att_db.c:1185:12
 1e06d02:    42 70             	r2 = 4			  ## att_db.c:1185:12
 1e06d04:    03 70             	r3 = 0			  ## att_db.c:1185:12
 1e06d06:    0d 02             	[sp] = r5			  ## att_db.c:1185:12
 1e06d08:    84 00             	call r4			  ## att_db.c:1185:12
 1e06d0a:    10 f9 1c a0       	b[r10 + 28] = r0			  ## att_db.c:1209:50
 1e06d0e:    61 ff ff 09 45 ff 	if ((r0 & 255) != 0) goto -374 <.GJTIE763_0_0_+0x52E : 1e06b9e >			  ## att_db.c:1209:50
 1e06d14:    9d 18             	goto 314 <.GJTIE763_0_0_+0x7E0 : 1e06e50 >			  ## att_db.c:1209:50
 1e06d16:    01 f7 00 c0       	r1 = h[r12 + 0] (u)			  ## att_db.c:784:5
 1e06d1a:    c0 a5             	r0 = sp + 92			  ## att_db.c:784:5
 1e06d1c:    bf f3 f4 fb       	call -2072 <att_update_value_len : 1e06508 >			  ## att_db.c:784:5
 1e06d20:    80 f5 6c 00       	r0 = h[sp+108] (u)			  ## att_db.c:788:21
 1e06d24:    11 90             	r1 = r0 + 1			  ## att_db.c:788:16
 1e06d26:    f1 f2 04 90       	if (r1 <= r15) goto 8 <.GJTIE763_0_0_+0x6C2 : 1e06d32 >			  ## att_db.c:788:16
 1e06d2a:    f0 fc ff ff       	r0 = r15 + -1			  ## att_db.c:789:45
 1e06d2e:    90 f5 6c 00       	h[sp+108] = r0			  ## att_db.c:789:22
 1e06d32:    04 f7 00 c0       	r4 = h[r12 + 0] (u)			  ## att_db.c:793:29
 1e06d36:    d2 fc 01 00       	r2 = r13 + 1			  ## att_db.c:793:68
 1e06d3a:    23 04             	r3 = r0.l (u)			  ## att_db.c:793:29
 1e06d3c:    c0 a5             	r0 = sp + 92			  ## att_db.c:793:29
 1e06d3e:    01 70             	r1 = 0			  ## att_db.c:793:29
 1e06d40:    0c 02             	[sp] = r4			  ## att_db.c:793:29
 1e06d42:    bf f3 fc fb       	call -2056 <att_copy_value : 1e0653e >			  ## att_db.c:793:29
 1e06d46:    b1 70             	r1 = 11			  ## att_db.c:796:24
 1e06d48:    4f 18             	goto 158 <.GJTIE763_0_0_+0x778 : 1e06de8 >			  ## att_db.c:796:24
 1e06d4a:    01 f7 00 c0       	r1 = h[r12 + 0] (u)			  ## att_db.c:834:5
 1e06d4e:    40 a7             	r0 = sp + 116			  ## att_db.c:834:5
 1e06d50:    bf f3 da fb       	call -2124 <att_update_value_len : 1e06508 >			  ## att_db.c:834:5
 1e06d54:    80 f5 84 00       	r0 = h[sp+132] (u)			  ## att_db.c:836:27
 1e06d58:    60 f2 30 20       	if (r0 >= r6) goto 96 <.GJTIE763_0_0_+0x74C : 1e06dbc >			  ## att_db.c:836:9
 1e06d5c:    10 70             	r0 = 1
 1e06d5e:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:367:24
 1e06d62:    c0 70             	r0 = 12			  ## att_db.c:368:24
 1e06d64:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:368:24
 1e06d68:    21 70             	r1 = 2			  ## att_db.c:369:5
 1e06d6a:    d0 08             	r0 = r13			  ## att_db.c:369:5
 1e06d6c:    72 08             	r2 = r7			  ## att_db.c:369:5
 1e06d6e:    80 f3 96 0a       	call 5420 <little_endian_store_16 : 1e0829e >			  ## att_db.c:369:5
 1e06d72:    70 70             	r0 = 7			  ## att_db.c:370:24
 1e06d74:    13 19             	goto 550 <.GJTIE763_0_0_+0x92C : 1e06f9c >			  ## att_db.c:370:24
 1e06d76:    10 70             	r0 = 1
 1e06d78:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:367:24
 1e06d7c:    80 70             	r0 = 8			  ## att_db.c:368:24
 1e06d7e:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:368:24
 1e06d82:    21 70             	r1 = 2			  ## att_db.c:369:5
 1e06d84:    d0 08             	r0 = r13			  ## att_db.c:369:5
 1e06d86:    72 08             	r2 = r7			  ## att_db.c:369:5
 1e06d88:    06 19             	goto 524 <.GJTIE763_0_0_+0x926 : 1e06f96 >			  ## att_db.c:369:5
 1e06d8a:    13 70             	r3 = 1
 1e06d8c:    13 f9 00 d0       	b[r13 + 0] = r3			  ## att_db.c:367:24
 1e06d90:    e0 70             	r0 = 14			  ## att_db.c:368:24
 1e06d92:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:368:24
 1e06d96:    21 70             	r1 = 2			  ## att_db.c:369:5
 1e06d98:    02 70             	r2 = 0			  ## att_db.c:369:5
 1e06d9a:    d0 08             	r0 = r13
 1e06d9c:    51 18             	goto 162 <.GJTIE763_0_0_+0x7D0 : 1e06e40 >
 1e06d9e:    13 70             	r3 = 1
 1e06da0:    13 f9 00 d0       	b[r13 + 0] = r3			  ## att_db.c:367:24
 1e06da4:    04 18             	goto 8 <.GJTIE763_0_0_+0x73E : 1e06dae >			  ## att_db.c:367:24
 1e06da6:    23 70             	r3 = 2
 1e06da8:    10 70             	r0 = 1
 1e06daa:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:367:24
 1e06dae:    e0 70             	r0 = 14
 1e06db0:    10 f9 01 d0       	b[r13 + 1] = r0
 1e06db4:    21 70             	r1 = 2
 1e06db6:    d0 08             	r0 = r13
 1e06db8:    42 08             	r2 = r4
 1e06dba:    42 18             	goto 132 <.GJTIE763_0_0_+0x7D0 : 1e06e40 >
 1e06dbc:    61 fb 01 69       	r1 = 1 - r6			  ## att_db.c:842:16
 1e06dc0:    01 09             	r1 += r0			  ## att_db.c:842:31
 1e06dc2:    f1 f2 05 d0       	ifs (r1 <= r15) goto 10 <.GJTIE763_0_0_+0x760 : 1e06dd0 >			  ## att_db.c:842:31
 1e06dc6:    80 fb 60 0f       	r0 = r15 + r6			  ## att_db.c:843:45
 1e06dca:    f0 8f             	r0 += -1			  ## att_db.c:843:49
 1e06dcc:    90 f5 84 00       	h[sp+132] = r0			  ## att_db.c:843:22
 1e06dd0:    01 f7 00 c0       	r1 = h[r12 + 0] (u)			  ## att_db.c:847:29
 1e06dd4:    a0 b1             	r0 = r0 - r6			  ## att_db.c:847:102
 1e06dd6:    23 04             	r3 = r0.l (u)			  ## att_db.c:847:29
 1e06dd8:    d2 fc 01 00       	r2 = r13 + 1			  ## att_db.c:847:79
 1e06ddc:    40 a7             	r0 = sp + 116			  ## att_db.c:847:79
 1e06dde:    09 02             	[sp] = r1			  ## att_db.c:847:29
 1e06de0:    61 08             	r1 = r6			  ## att_db.c:847:29
 1e06de2:    bf f3 ac fb       	call -2216 <att_copy_value : 1e0653e >			  ## att_db.c:847:29
 1e06de6:    d1 70             	r1 = 13			  ## att_db.c:850:24
 1e06de8:    11 f9 00 d0       	b[r13 + 0] = r1
 1e06dec:    1e 90             	r14 = r0 + 1
 1e06dee:    e4 18             	goto 456 <.GJTIE763_0_0_+0x948 : 1e06fb8 >
 1e06df0:    c0 08             	r0 = r12			  ## att_db.c:1085:26
 1e06df2:    bf f3 4c fb       	call -2408 <att_validate_security : 1e0648e >			  ## att_db.c:1085:26
 1e06df6:    03 08             	r3 = r0			  ## att_db.c:1085:26
 1e06df8:    10 36             	if (r3 != 0) goto 32 <.GJTIE763_0_0_+0x7AA : 1e06e1a >			  ## att_db.c:1085:26
 1e06dfa:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## att_db.c:1089:18
 1e06dfe:    71 fc fd ff       	r1 = r7 + -3			  ## att_db.c:1089:128
 1e06e02:    61 04             	r1 = r1.l (u)			  ## att_db.c:1089:18
 1e06e04:    19 02             	[sp+4] = r1			  ## att_db.c:1089:18
 1e06e06:    31 9c             	r1 = r6 + 3			  ## att_db.c:1089:111
 1e06e08:    02 70             	r2 = 0			  ## att_db.c:1089:18
 1e06e0a:    03 70             	r3 = 0			  ## att_db.c:1089:18
 1e06e0c:    09 02             	[sp] = r1			  ## att_db.c:1089:18
 1e06e0e:    81 08             	r1 = r8			  ## att_db.c:1089:18
 1e06e10:    84 00             	call r4			  ## att_db.c:1089:18
 1e06e12:    03 08             	r3 = r0			  ## att_db.c:1089:18
 1e06e14:    60 ff ff 39 51 00 	if ((r3 & 255) == 0) goto 162 <.GJTIE763_0_0_+0x84C : 1e06ebc >			  ## att_db.c:1089:18
 1e06e1a:    10 70             	r0 = 1
 1e06e1c:    10 f9 00 d0       	b[r13 + 0] = r0
 1e06e20:    20 71             	r0 = 18
 1e06e22:    09 18             	goto 18 <.GJTIE763_0_0_+0x7C6 : 1e06e36 >
 1e06e24:    c0 08             	r0 = r12			  ## att_db.c:1125:26
 1e06e26:    bf f3 32 fb       	call -2460 <att_validate_security : 1e0648e >			  ## att_db.c:1125:26
 1e06e2a:    03 08             	r3 = r0			  ## att_db.c:1125:26
 1e06e2c:    1a 26             	if (r3 == 0) goto 52 <.GJTIE763_0_0_+0x7F2 : 1e06e62 >			  ## att_db.c:1126:9
 1e06e2e:    10 70             	r0 = 1
 1e06e30:    10 f9 00 d0       	b[r13 + 0] = r0
 1e06e34:    60 71             	r0 = 22
 1e06e36:    10 f9 01 d0       	b[r13 + 1] = r0
 1e06e3a:    21 70             	r1 = 2
 1e06e3c:    d0 08             	r0 = r13
 1e06e3e:    82 08             	r2 = r8
 1e06e40:    80 f3 2d 0a       	call 5210 <little_endian_store_16 : 1e0829e >
 1e06e44:    4b 60             	b[r0 + 4] = r3
 1e06e46:    5e 70             	r14 = 5
 1e06e48:    b7 18             	goto 366 <.GJTIE763_0_0_+0x948 : 1e06fb8 >
 1e06e4a:    00 70             	r0 = 0			  ## att_db.c:1209:50
 1e06e4c:    10 f9 1c a0       	b[r10 + 28] = r0			  ## att_db.c:1209:50
 1e06e50:    21 70             	r1 = 2			  ## att_db.c:1219:9
 1e06e52:    c0 08             	r0 = r12
 1e06e54:    bf f3 b5 fb       	call -2198 <att_notify_write_callbacks : 1e065c2 >
 1e06e58:    90 71             	r0 = 25			  ## att_db.c:1223:24
 1e06e5a:    10 f9 00 d0       	b[r13 + 0] = r0
 1e06e5e:    1e 70             	r14 = 1
 1e06e60:    ab 18             	goto 342 <.GJTIE763_0_0_+0x948 : 1e06fb8 >
 1e06e62:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## att_db.c:1130:18
 1e06e66:    71 fc fb ff       	r1 = r7 + -5			  ## att_db.c:1130:135
 1e06e6a:    61 04             	r1 = r1.l (u)			  ## att_db.c:1130:18
 1e06e6c:    19 02             	[sp+4] = r1			  ## att_db.c:1130:18
 1e06e6e:    51 9c             	r1 = r6 + 5			  ## att_db.c:1130:118
 1e06e70:    12 70             	r2 = 1			  ## att_db.c:1130:18
 1e06e72:    09 02             	[sp] = r1			  ## att_db.c:1130:18
 1e06e74:    81 08             	r1 = r8			  ## att_db.c:1130:18
 1e06e76:    93 08             	r3 = r9			  ## att_db.c:1130:18
 1e06e78:    84 00             	call r4			  ## att_db.c:1130:18
 1e06e7a:    03 08             	r3 = r0			  ## att_db.c:1130:18
 1e06e7c:    60 ff ff 39 13 00 	if ((r3 & 255) == 0) goto 38 <.GJTIE763_0_0_+0x838 : 1e06ea8 >			  ## att_db.c:1130:18
 1e06e82:    c0 04             	r0 = r3.b0 (u)			  ## att_db.c:1130:18
 1e06e84:    d0 e0 02 00       	if (r0 == 13) goto 4 <.GJTIE763_0_0_+0x81C : 1e06e8c >			  ## att_db.c:1130:18
 1e06e88:    70 e0 d1 1f       	if (r0 != 7) goto -94 <.GJTIE763_0_0_+0x7BE : 1e06e2e >
 1e06e8c:    01 f9 1c a0       	r1 = b[r10 + 28] (u)			  ## att_db.c:352:89
 1e06e90:    d0 e0 03 10       	if (r0 != 13) goto 6 <.GJTIE763_0_0_+0x82A : 1e06e9a >			  ## att_db.c:352:89
 1e06e94:    c2 04             	r2 = r3.b0 (u)
 1e06e96:    21 f2 03 10       	if (r1 != r2) goto 6 <.GJTIE763_0_0_+0x830 : 1e06ea0 >
 1e06e9a:    70 e0 05 10       	if (r0 != 7) goto 10 <.GJTIE763_0_0_+0x838 : 1e06ea8 >
 1e06e9e:    04 32             	if (r1 != 0) goto 8 <.GJTIE763_0_0_+0x838 : 1e06ea8 >
 1e06ea0:    13 f9 1c a0       	b[r10 + 28] = r3
 1e06ea4:    18 f7 1e a0       	h[r10 + 30] = r8
 1e06ea8:    d0 08             	r0 = r13			  ## att_db.c:1144:5
 1e06eaa:    61 08             	r1 = r6			  ## att_db.c:1144:5
 1e06eac:    72 08             	r2 = r7			  ## att_db.c:1144:5
 1e06eae:    98 f3 19 00       	call 3145778 <memcpy : 106ee4 >			  ## att_db.c:1144:5
 1e06eb2:    70 71             	r0 = 23			  ## att_db.c:1145:24
 1e06eb4:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:1145:24
 1e06eb8:    7e 08             	r14 = r7			  ## att_db.c:1145:24
 1e06eba:    7e 18             	goto 252 <.GJTIE763_0_0_+0x948 : 1e06fb8 >			  ## att_db.c:1145:24
 1e06ebc:    30 71             	r0 = 19			  ## att_db.c:1093:24
 1e06ebe:    cd 1f             	goto -102 <.GJTIE763_0_0_+0x7EA : 1e06e5a >			  ## att_db.c:1093:24
 1e06ec0:    22 02             	r2 = [sp+8]
 1e06ec2:    11 e0 04 10       	if (r1 != 1) goto 8 <.GJTIE763_0_0_+0x85E : 1e06ece >
 1e06ec6:    10 fa 00 d1       	b[r13+r1] = r0			  ## att_db.c:1029:41
 1e06eca:    2e 70             	r14 = 2			  ## att_db.c:1029:41
 1e06ecc:    02 08             	r2 = r0			  ## att_db.c:1029:41
 1e06ece:    00 f5 b8 00       	r0 = [sp+184]			  ## att_db.c:1034:37
 1e06ed2:    48 02             	[sp+16] = r0
 1e06ed4:    14 70             	r4 = 1
 1e06ed6:    7c 08             	r12 = r7
 1e06ed8:    2a 02             	[sp+8] = r2
 1e06eda:    aa 04             	r10 = r2.l (u)
 1e06edc:    ab fc fc ff       	r11 = r10 + -4
 1e06ee0:    c9 08             	r9 = r12
 1e06ee2:    00 f5 a4 00       	r0 = [sp+164]			  ## att_db.c:119:16
 1e06ee6:    4a 20             	if (r0 == 0) goto 148 <.GJTIE763_0_0_+0x90C : 1e06f7c >			  ## att_db.c:119:16
 1e06ee8:    40 aa             	r0 = sp + 164
 1e06eea:    bf f3 4a fa       	call -2924 <att_iterator_fetch_next : 1e06382 >			  ## att_db.c:979:9
 1e06eee:    87 f5 ac 00       	r7 = h[sp+172] (u)			  ## att_db.c:981:16
 1e06ef2:    02 2e             	if (r7 == 0) goto 4 <.GJTIE763_0_0_+0x888 : 1e06ef8 >
 1e06ef4:    57 f2 f5 3f       	if (r7 < r5) goto -22 <.GJTIE763_0_0_+0x872 : 1e06ee2 >
 1e06ef8:    87 f2 40 80       	if (r7 > r8) goto 128 <.GJTIE763_0_0_+0x90C : 1e06f7c >
 1e06efc:    20 05             	r0 = r4.l (u)			  ## att_db.c:991:22
 1e06efe:    2a 20             	if (r0 == 0) goto 84 <.GJTIE763_0_0_+0x8E4 : 1e06f54 >			  ## att_db.c:991:22
 1e06f00:    0c 2e             	if (r7 == 0) goto 24 <.GJTIE763_0_0_+0x8AA : 1e06f1a >
 1e06f02:    40 aa             	r0 = sp + 164
 1e06f04:    01 fb 00 28       	r1 = 10240 <vm_obj+0xB0 : 2800 >			  ## att_db.c:992:32
 1e06f08:    bf f3 7b fa       	call -2826 <att_iterator_match_uuid16 : 1e06402 >			  ## att_db.c:992:32
 1e06f0c:    06 30             	if (r0 != 0) goto 12 <.GJTIE763_0_0_+0x8AA : 1e06f1a >
 1e06f0e:    40 aa             	r0 = sp + 164
 1e06f10:    01 fb 01 28       	r1 = 10241 <vm_obj+0xB1 : 2801 >			  ## att_db.c:992:93
 1e06f14:    bf f3 75 fa       	call -2838 <att_iterator_match_uuid16 : 1e06402 >			  ## att_db.c:992:93
 1e06f18:    20 20             	if (r0 == 0) goto 64 <.GJTIE763_0_0_+0x8EA : 1e06f5a >
 1e06f1a:    e6 fd 00 1e       	r1 = r14.l (u)			  ## att_db.c:995:13
 1e06f1e:    d0 08             	r0 = r13			  ## att_db.c:995:13
 1e06f20:    c2 08             	r2 = r12			  ## att_db.c:995:13
 1e06f22:    80 f3 bc 09       	call 4984 <little_endian_store_16 : 1e0829e >			  ## att_db.c:995:13
 1e06f26:    e0 fc 02 00       	r0 = r14 + 2			  ## att_db.c:996:20
 1e06f2a:    21 04             	r1 = r0.l (u)			  ## att_db.c:997:13
 1e06f2c:    d0 08             	r0 = r13			  ## att_db.c:997:13
 1e06f2e:    92 08             	r2 = r9			  ## att_db.c:997:13
 1e06f30:    80 f3 b5 09       	call 4970 <little_endian_store_16 : 1e0829e >			  ## att_db.c:997:13
 1e06f34:    e0 fc 04 00       	r0 = r14 + 4			  ## att_db.c:998:20
 1e06f38:    24 04             	r4 = r0.l (u)			  ## att_db.c:999:38
 1e06f3a:    80 fb 40 0d       	r0 = r13 + r4			  ## att_db.c:999:36
 1e06f3e:    41 02             	r1 = [sp+16]			  ## att_db.c:999:13
 1e06f40:    b2 08             	r2 = r11			  ## att_db.c:999:13
 1e06f42:    97 f3 cf ff       	call 3145630 <memcpy : 106ee4 >			  ## att_db.c:999:13
 1e06f46:    80 fb b0 e4       	r14 = r4 + r11			  ## att_db.c:1000:20
 1e06f4a:    e6 fd 00 0e       	r0 = r14.l (u)			  ## att_db.c:1004:17
 1e06f4e:    a0 09             	r0 += r10			  ## att_db.c:1004:24
 1e06f50:    f0 f2 14 80       	if (r0 > r15) goto 40 <.GJTIE763_0_0_+0x90C : 1e06f7c >
 1e06f54:    04 70             	r4 = 0
 1e06f56:    09 70             	r9 = 0
 1e06f58:    c4 2f             	if (r7 == 0) goto -120 <.GJTIE763_0_0_+0x872 : 1e06ee2 >
 1e06f5a:    40 aa             	r0 = sp + 164
 1e06f5c:    61 08             	r1 = r6			  ## att_db.c:1014:26
 1e06f5e:    32 02             	r2 = [sp+12]			  ## att_db.c:1014:26
 1e06f60:    bf f3 67 fa       	call -2866 <att_iterator_match_uuid : 1e06432 >			  ## att_db.c:1014:26
 1e06f64:    79 08             	r9 = r7
 1e06f66:    bd 21             	if (r0 == 0) goto -134 <.GJTIE763_0_0_+0x872 : 1e06ee2 >
 1e06f68:    80 f5 b4 00       	r0 = h[sp+180] (u)			  ## att_db.c:1017:45
 1e06f6c:    e6 fd 00 1e       	r1 = r14.l (u)			  ## att_db.c:1018:17
 1e06f70:    40 80             	r0 += 4			  ## att_db.c:1017:40
 1e06f72:    21 e0 a5 3f       	if (r1 < 2) goto -182 <.GJTIE763_0_0_+0x850 : 1e06ec0 >			  ## att_db.c:1017:40
 1e06f76:    22 04             	r2 = r0.l (u)
 1e06f78:    a2 f2 a2 0f       	if (r2 == r10) goto -188 <.GJTIE763_0_0_+0x850 : 1e06ec0 >
 1e06f7c:    e6 fd 00 0e       	r0 = r14.l (u)			  ## att_db.c:1039:16
 1e06f80:    10 e0 10 10       	if (r0 != 1) goto 32 <.GJTIE763_0_0_+0x934 : 1e06fa4 >			  ## att_db.c:1039:9
 1e06f84:    10 70             	r0 = 1
 1e06f86:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:367:24
 1e06f8a:    00 71             	r0 = 16			  ## att_db.c:368:24
 1e06f8c:    10 f9 01 d0       	b[r13 + 1] = r0
 1e06f90:    21 70             	r1 = 2
 1e06f92:    d0 08             	r0 = r13
 1e06f94:    52 08             	r2 = r5
 1e06f96:    80 f3 82 09       	call 4868 <little_endian_store_16 : 1e0829e >
 1e06f9a:    a0 70             	r0 = 10
 1e06f9c:    10 f9 04 d0       	b[r13 + 4] = r0
 1e06fa0:    5e 70             	r14 = 5
 1e06fa2:    0a 18             	goto 20 <.GJTIE763_0_0_+0x948 : 1e06fb8 >
 1e06fa4:    10 71             	r0 = 17			  ## att_db.c:1043:24
 1e06fa6:    06 18             	goto 12 <.GJTIE763_0_0_+0x944 : 1e06fb4 >			  ## att_db.c:1043:24
 1e06fa8:    4b 08             	r11 = r4
 1e06faa:    e6 fd 00 0e       	r0 = r14.l (u)			  ## att_db.c:725:16
 1e06fae:    20 e0 07 30       	if (r0 < 2) goto 14 <.GJTIE763_0_0_+0x950 : 1e06fc0 >			  ## att_db.c:725:16
 1e06fb2:    90 70             	r0 = 9			  ## att_db.c:726:28
 1e06fb4:    10 f9 00 d0       	b[r13 + 0] = r0
 1e06fb8:    e6 fd 00 0e       	r0 = r14.l (u)			  ## att_db.c:1360:5
 1e06fbc:    88 0a             	sp += 272			  ## att_db.c:1360:5
 1e06fbe:    5f 01             	{pc, r15-r4} = [sp++]			  ## att_db.c:1360:5
 1e06fc0:    0a e0 0f 00       	if (r10 == 0) goto 30 <.GJTIE763_0_0_+0x972 : 1e06fe2 >			  ## att_db.c:731:9
 1e06fc4:    10 70             	r0 = 1
 1e06fc6:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:367:24
 1e06fca:    80 70             	r0 = 8			  ## att_db.c:368:24
 1e06fcc:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:368:24
 1e06fd0:    21 70             	r1 = 2			  ## att_db.c:369:5
 1e06fd2:    d0 08             	r0 = r13			  ## att_db.c:369:5
 1e06fd4:    72 08             	r2 = r7			  ## att_db.c:369:5
 1e06fd6:    80 f3 62 09       	call 4804 <little_endian_store_16 : 1e0829e >			  ## att_db.c:369:5
 1e06fda:    1a f9 04 00       	b[r0 + 4] = r10			  ## att_db.c:370:24
 1e06fde:    5e 70             	r14 = 5			  ## att_db.c:370:24
 1e06fe0:    eb 1f             	goto -42 <.GJTIE763_0_0_+0x948 : 1e06fb8 >			  ## att_db.c:370:24
 1e06fe2:    10 70             	r0 = 1
 1e06fe4:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:367:24
 1e06fe8:    80 70             	r0 = 8			  ## att_db.c:368:24
 1e06fea:    e6 fd 00 2b       	r2 = r11.l (u)			  ## att_db.c:736:9
 1e06fee:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:368:24
 1e06ff2:    02 e0 c6 0e       	if (r2 == 0) goto -628 <.GJTIE763_0_0_+0x712 : 1e06d82 >			  ## att_db.c:368:24
 1e06ff6:    21 70             	r1 = 2			  ## att_db.c:369:5
 1e06ff8:    23 70             	r3 = 2			  ## att_db.c:369:5
 1e06ffa:    cf 1e             	goto -610 <.GJTIE763_0_0_+0x72A : 1e06d9a >			  ## att_db.c:369:5
 1e06ffc:    0a 08             	r10 = r0
 1e06ffe:    d5 1f             	goto -86 <.GJTIE763_0_0_+0x93A : 1e06faa >


lbuf_init_btctrler:
 1e07000:    75 01             	[--sp] = {rets, r5, r4}			  ## lbuf.c:28:0
 1e07002:    fe 0b             	sp += -4			  ## lbuf.c:28:0
 1e07004:    15 08             	r5 = r1			  ## lbuf.c:28:0
 1e07006:    04 08             	r4 = r0			  ## lbuf.c:28:0
 1e07008:    60 ff 03 49 0e 00 	if ((r4 & 3) == 0) goto 28 <lbuf_init_btctrler+0x2A : 1e0702a >			  ## lbuf.c:28:0
 1e0700e:    20 fd 03 49       	r0 = r4 & 3			  ## lbuf.c:32:18
 1e07012:    60 fb 04 09       	r0 = 4 - r0			  ## lbuf.c:33:22
 1e07016:    25 ba             	r5 = r5 - r0			  ## lbuf.c:33:17
 1e07018:    04 09             	r4 += r0			  ## lbuf.c:34:13
 1e0701a:    c2 ff 91 59 e1 01 	r2 = 31545745 <update_target_end+0x2B09 : 1e15991 >			  ## lbuf.c:36:9
 1e07020:    10 70             	r0 = 1			  ## lbuf.c:36:9
 1e07022:    0d 02             	[sp] = r5			  ## lbuf.c:36:9
 1e07024:    43 08             	r3 = r4			  ## lbuf.c:36:9
 1e07026:    80 f3 80 40       	call 33024 <log_print : 1e0f12a >			  ## lbuf.c:36:9
 1e0702a:    60 ff 03 49 02 00 	if ((r4 & 3) == 0) goto 4 <lbuf_init_btctrler+0x34 : 1e07034 >
 1e07030:    8f f3 d6 e1       	call 2081708 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e07034:    c0 ff e4 ff 00 00 	r0 = 65508 <_IRQ_MEM_ADDR+0xE4 : ffe4 >			  ## lbuf.c:43:41
 1e0703a:    50 09             	r0 += r5			  ## lbuf.c:43:41
 1e0703c:    c8 58             	h[r4 + 24] = r0			  ## lbuf.c:43:15
 1e0703e:    0c 48             	[r4 + 0] = r4			  ## list.h:188:16
 1e07040:    1c 48             	[r4 + 4] = r4			  ## list.h:189:16
 1e07042:    00 99             	r0 = r4 + 16			  ## lbuf.c:42:34
 1e07044:    38 48             	[r4 + 12] = r0			  ## list.h:137:16
 1e07046:    81 98             	r1 = r4 + 8			  ## lbuf.c:50:27
 1e07048:    49 48             	[r4 + 16] = r1			  ## list.h:138:16
 1e0704a:    59 48             	[r4 + 20] = r1			  ## list.h:139:16
 1e0704c:    28 48             	[r4 + 8] = r0			  ## list.h:140:16
 1e0704e:    40 08             	r0 = r4			  ## lbuf.c:54:5
 1e07050:    02 0a             	sp += 4			  ## lbuf.c:54:5
 1e07052:    55 01             	{pc, r5, r4} = [sp++]			  ## lbuf.c:54:5


crc_get_32bit:
 1e07054:    74 01             	[--sp] = {rets, r4}			  ## misc_hw.c:32:0
 1e07056:    02 70             	r2 = 0			  ## misc_hw.c:32:0
 1e07058:    c1 ff 00 35 1e 00 	r1 = 1979648 <uECC_vli_cmp_unsafe+0xDC504 : 1e3500 >			  ## misc_hw.c:32:0
 1e0705e:    1a 42             	[r1 + 4] = r2			  ## misc_hw.c:36:17
 1e07060:    04 60             	r4 = b[r0 + 0] (u)			  ## misc_hw.c:36:17
 1e07062:    13 90             	r3 = r0 + 1			  ## misc_hw.c:37:5
 1e07064:    14 05             	r4 = r4.b0 (s)			  ## misc_hw.c:39:24
 1e07066:    0c 42             	[r1 + 0] = r4			  ## misc_hw.c:39:22
 1e07068:    04 fa 00 32       	r4 = b[r3+r2] (u)			  ## misc_hw.c:40:14
 1e0706c:    12 80             	r2 += 1			  ## misc_hw.c:40:5
 1e0706e:    fa 39             	if (r4 != 0) goto -12 <crc_get_32bit+0x10 : 1e07064 >			  ## misc_hw.c:40:5
 1e07070:    08 00             	csync			  ## misc_hw.c:42:5
 1e07072:    13 42             	r3 = [r1 + 4]			  ## misc_hw.c:43:19
 1e07074:    c1 f4 00 19       	[r1 + 4] = 0			  ## misc_hw.c:45:17
 1e07078:    24 fa 00 02       	r4 = b[r0+r2] (s)			  ## misc_hw.c:48:24
 1e0707c:    0c 42             	[r1 + 0] = r4			  ## misc_hw.c:48:22
 1e0707e:    52 f3 fb ff       	if (--r2 != 0) goto -10 <crc_get_32bit+0x24 : 1e07078 >			  ## misc_hw.c:49:5


BTSTACK_CODE_TOTAL_SIZE:
 1e07080:    fb ff 08 00 10 42 	icfg = 1108344840			  ## misc_hw.c:49:5
 1e07086:    00 c4             	r0 = r0 << 16			  ## misc_hw.c:52:24
 1e07088:    50 b6             	r0 |= r3			  ## misc_hw.c:52:9
 1e0708a:    54 01             	{pc, r4} = [sp++]			  ## misc_hw.c:54:5


thread_create:
 1e0708c:    79 01             	[--sp] = {rets, r9-r4}			  ## thread.c:85:0
 1e0708e:    34 08             	r4 = r3			  ## thread.c:85:0
 1e07090:    28 08             	r8 = r2			  ## thread.c:85:0
 1e07092:    19 08             	r9 = r1			  ## thread.c:85:0
 1e07094:    05 08             	r5 = r0			  ## thread.c:85:0
 1e07096:    90 08             	r0 = r9			  ## thread.c:63:22
 1e07098:    dd 17             	call -70 <crc_get_32bit : 1e07054 >			  ## thread.c:63:22
 1e0709a:    06 48             	r6 = [r4 + 0]			  ## thread.c:63:22
 1e0709c:    07 08             	r7 = r0			  ## thread.c:63:22
 1e0709e:    46 f2 09 00       	if (r6 == r4) goto 18 <thread_create+0x28 : 1e070b4 >
 1e070a2:    30 4c             	r0 = [r6 + 12]			  ## thread.c:69:44
 1e070a4:    d7 17             	call -82 <crc_get_32bit : 1e07054 >			  ## thread.c:69:27
 1e070a6:    07 f2 1c 00       	if (r7 == r0) goto 56 <thread_create+0x56 : 1e070e2 >			  ## thread.c:69:27
 1e070aa:    06 4c             	r6 = [r6 + 0]
 1e070ac:    46 f2 f9 1f       	if (r6 != r4) goto -14 <thread_create+0x16 : 1e070a2 >
 1e070b0:    00 48             	r0 = [r4 + 0]
 1e070b2:    01 18             	goto 2 <thread_create+0x2A : 1e070b6 >
 1e070b4:    40 08             	r0 = r4			  ## list.h:124:18
 1e070b6:    18 f6 10 50       	[r5 + 16] = r8			  ## thread.c:95:13
 1e070ba:    11 70             	r1 = 1			  ## thread.c:96:20
 1e070bc:    59 6b             	b[r5 + 21] = r1			  ## thread.c:96:20
 1e070be:    01 70             	r1 = 0			  ## thread.c:97:25
 1e070c0:    69 6b             	b[r5 + 22] = r1			  ## thread.c:97:25
 1e070c2:    19 f6 0c 50       	[r5 + 12] = r9			  ## thread.c:98:14
 1e070c6:    2c 4a             	[r5 + 8] = r4			  ## thread.c:99:15
 1e070c8:    40 f2 06 10       	if (r0 != r4) goto 12 <thread_create+0x4C : 1e070d8 >			  ## thread.c:99:15
 1e070cc:    22 48             	r2 = [r4 + 8]			  ## thread.c:104:26
 1e070ce:    c0 ff 70 73 e0 01 	r0 = 31486832 <thread_schedule : 1e07370 >			  ## thread.c:104:15
 1e070d4:    82 00             	call r2			  ## thread.c:104:15
 1e070d6:    06 30             	if (r0 != 0) goto 12 <thread_create+0x58 : 1e070e4 >
 1e070d8:    10 48             	r0 = [r4 + 4]			  ## list.h:154:28
 1e070da:    1d 48             	[r4 + 4] = r5			  ## list.h:137:16
 1e070dc:    0c 4a             	[r5 + 0] = r4			  ## list.h:138:16
 1e070de:    18 4a             	[r5 + 4] = r0			  ## list.h:139:16
 1e070e0:    0d 40             	[r0 + 0] = r5			  ## list.h:140:16
 1e070e2:    00 70             	r0 = 0
 1e070e4:    59 01             	{pc, r9-r4} = [sp++]			  ## thread.c:118:1


__vsprintf_len:
 1e070e6:    77 01             	[--sp] = {rets, r7-r4}			  ## vsprintf.c:5:0
 1e070e8:    fe 0b             	sp += -4			  ## vsprintf.c:5:0
 1e070ea:    09 02             	[sp] = r1			  ## vsprintf.c:5:0
 1e070ec:    01 70             	r1 = 0			  ## vsprintf.c:5:0
 1e070ee:    72 20             	if (r0 == 0) goto 228 <.GJTIE837_0_0_+0xA6 : 1e071d4 >			  ## vsprintf.c:5:0
 1e070f0:    04 60             	r4 = b[r0 + 0] (u)			  ## vsprintf.c:12:12
 1e070f2:    70 28             	if (r4 == 0) goto 224 <.GJTIE837_0_0_+0xA6 : 1e071d4 >			  ## vsprintf.c:12:12
 1e070f4:    42 76             	r2 = 100
 1e070f6:    a3 70             	r3 = 10
 1e070f8:    14 05             	r4 = r4.b0 (s)			  ## vsprintf.c:13:17
 1e070fa:    14 e6 0d d0       	ifs (r4 <= 97) goto 26 <__vsprintf_len+0x32 : 1e07118 >			  ## vsprintf.c:13:17
 1e070fe:    24 e6 1b 00       	if (r4 == 98) goto 54 <.GJTIE837_0_0_+0xA : 1e07138 >
 1e07102:    34 e6 2a 00       	if (r4 == 99) goto 84 <.GJTIE837_0_0_+0x2C : 1e0715a >
 1e07106:    c4 e6 62 10       	if (r4 != 108) goto 196 <.GJTIE837_0_0_+0xA0 : 1e071ce >
 1e0710a:    04 02             	r4 = [sp]			  ## vsprintf.c:62:25
 1e0710c:    45 98             	r5 = r4 + 4			  ## vsprintf.c:62:25
 1e0710e:    0d 02             	[sp] = r5			  ## vsprintf.c:62:25
 1e07110:    04 48             	r4 = [r4 + 0]			  ## vsprintf.c:62:25
 1e07112:    41 09             	r1 += r4			  ## vsprintf.c:62:23
 1e07114:    11 80             	r1 += 1			  ## vsprintf.c:62:17
 1e07116:    5b 18             	goto 182 <.GJTIE837_0_0_+0xA0 : 1e071ce >
 1e07118:    45 fc bf ff       	r5 = r4 + -65
 1e0711c:    b5 e0 2b 80       	if (r5 > 11) goto 86 <.GJTIE837_0_0_+0x48 : 1e07176 >
 1e07120:    a5 00             	tbb [r5]


.GJTIS837_0_0_:
 1e07122:    06     < 6 : 0x6 >
 1e07123:    36     < 54 : 0x36 >
 1e07124:    3a     < 58 : 0x3A >
 1e07125:    56     < 86 : 0x56 >
 1e07126:    56     < 86 : 0x56 >
 1e07127:    56     < 86 : 0x56 >
 1e07128:    56     < 86 : 0x56 >
 1e07129:    4c     < 76 : 0x4C >
 1e0712a:    56     < 86 : 0x56 >
 1e0712b:    56     < 86 : 0x56 >
 1e0712c:    56     < 86 : 0x56 >
 1e0712d:    51     < 81 : 0x51 >
 1e0712e:    04 02             	r4 = [sp]			  ## vsprintf.c:49:13
 1e07130:    44 80             	r4 += 4			  ## vsprintf.c:49:13
 1e07132:    0c 02             	[sp] = r4			  ## vsprintf.c:49:13
 1e07134:    61 80             	r1 += 6			  ## vsprintf.c:48:17
 1e07136:    4b 18             	goto 150 <.GJTIE837_0_0_+0xA0 : 1e071ce >
 1e07138:    21 f9 01 00       	r1 = b[r0 + 1] (s)			  ## vsprintf.c:23:20
 1e0713c:    24 f9 02 00       	r4 = b[r0 + 2] (s)			  ## vsprintf.c:25:21
 1e07140:    80 fe 30 41       	r4 += r1 * r3			  ## vsprintf.c:25:17
 1e07144:    41 fc f0 fd       	r1 = r4 + -528			  ## vsprintf.c:25:17
 1e07148:    20 80             	r0 += 2			  ## vsprintf.c:24:13
 1e0714a:    1f 22             	if (r1 == 0) goto 62 <.GJTIE837_0_0_+0x5C : 1e0718a >
 1e0714c:    14 08             	r4 = r1
 1e0714e:    05 02             	r5 = [sp]			  ## vsprintf.c:28:17
 1e07150:    45 80             	r5 += 4			  ## vsprintf.c:28:17
 1e07152:    f4 8f             	r4 += -1			  ## vsprintf.c:27:28
 1e07154:    0d 02             	[sp] = r5			  ## vsprintf.c:28:17
 1e07156:    fb 39             	if (r4 != 0) goto -10 <.GJTIE837_0_0_+0x20 : 1e0714e >			  ## vsprintf.c:28:17
 1e07158:    3a 18             	goto 116 <.GJTIE837_0_0_+0xA0 : 1e071ce >			  ## vsprintf.c:28:17
 1e0715a:    04 02             	r4 = [sp]			  ## vsprintf.c:36:13
 1e0715c:    25 f9 02 00       	r5 = b[r0 + 2] (s)			  ## vsprintf.c:35:21
 1e07160:    26 f9 01 00       	r6 = b[r0 + 1] (s)			  ## vsprintf.c:33:21
 1e07164:    44 80             	r4 += 4			  ## vsprintf.c:36:13
 1e07166:    0c 02             	[sp] = r4			  ## vsprintf.c:36:13
 1e07168:    51 09             	r1 += r5			  ## vsprintf.c:33:17
 1e0716a:    80 fe 30 16       	r1 += r6 * r3			  ## vsprintf.c:35:29
 1e0716e:    11 fc f0 fd       	r1 = r1 + -528			  ## vsprintf.c:35:17
 1e07172:    20 80             	r0 += 2			  ## vsprintf.c:34:13
 1e07174:    2c 18             	goto 88 <.GJTIE837_0_0_+0xA0 : 1e071ce >
 1e07176:    45 fc cf ff       	r5 = r4 + -49
 1e0717a:    45 e0 28 20       	if (r5 >= 4) goto 80 <.GJTIE837_0_0_+0xA0 : 1e071ce >
 1e0717e:    05 02             	r5 = [sp]			  ## vsprintf.c:19:13
 1e07180:    45 80             	r5 += 4			  ## vsprintf.c:19:13
 1e07182:    0d 02             	[sp] = r5			  ## vsprintf.c:19:13
 1e07184:    41 09             	r1 += r4			  ## vsprintf.c:18:28
 1e07186:    01 8d             	r1 += -48			  ## vsprintf.c:18:17
 1e07188:    22 18             	goto 68 <.GJTIE837_0_0_+0xA0 : 1e071ce >
 1e0718a:    01 70             	r1 = 0
 1e0718c:    20 18             	goto 64 <.GJTIE837_0_0_+0xA0 : 1e071ce >
 1e0718e:    04 02             	r4 = [sp]			  ## vsprintf.c:59:13
 1e07190:    44 80             	r4 += 4			  ## vsprintf.c:59:13
 1e07192:    0c 02             	[sp] = r4			  ## vsprintf.c:59:13
 1e07194:    1c 18             	goto 56 <.GJTIE837_0_0_+0xA0 : 1e071ce >			  ## vsprintf.c:59:13
 1e07196:    04 02             	r4 = [sp]			  ## vsprintf.c:45:13
 1e07198:    25 f9 02 00       	r5 = b[r0 + 2] (s)			  ## vsprintf.c:42:21
 1e0719c:    26 f9 01 00       	r6 = b[r0 + 1] (s)			  ## vsprintf.c:40:21
 1e071a0:    27 f9 03 00       	r7 = b[r0 + 3] (s)			  ## vsprintf.c:44:21
 1e071a4:    44 80             	r4 += 4			  ## vsprintf.c:45:13
 1e071a6:    0c 02             	[sp] = r4			  ## vsprintf.c:45:13
 1e071a8:    80 fe 20 16       	r1 += r6 * r2			  ## vsprintf.c:40:17
 1e071ac:    71 09             	r1 += r7			  ## vsprintf.c:42:17
 1e071ae:    80 fe 30 15       	r1 += r5 * r3			  ## vsprintf.c:44:29
 1e071b2:    11 fc 30 eb       	r1 = r1 + -5328			  ## vsprintf.c:44:17
 1e071b6:    30 80             	r0 += 3			  ## vsprintf.c:43:13
 1e071b8:    0a 18             	goto 20 <.GJTIE837_0_0_+0xA0 : 1e071ce >
 1e071ba:    04 02             	r4 = [sp]			  ## vsprintf.c:53:13
 1e071bc:    44 80             	r4 += 4			  ## vsprintf.c:53:13
 1e071be:    0c 02             	[sp] = r4			  ## vsprintf.c:53:13
 1e071c0:    21 80             	r1 += 2			  ## vsprintf.c:52:17
 1e071c2:    05 18             	goto 10 <.GJTIE837_0_0_+0xA0 : 1e071ce >
 1e071c4:    04 02             	r4 = [sp]			  ## vsprintf.c:56:20
 1e071c6:    45 98             	r5 = r4 + 4			  ## vsprintf.c:56:20
 1e071c8:    0d 02             	[sp] = r5			  ## vsprintf.c:56:20
 1e071ca:    04 48             	r4 = [r4 + 0]			  ## vsprintf.c:56:20
 1e071cc:    41 09             	r1 += r4			  ## vsprintf.c:56:17
 1e071ce:    14 60             	r4 = b[r0 + 1] (u)			  ## vsprintf.c:12:12
 1e071d0:    10 80             	r0 += 1			  ## vsprintf.c:65:15
 1e071d2:    92 39             	if (r4 != 0) goto -220 <__vsprintf_len+0x12 : 1e070f8 >
 1e071d4:    10 08             	r0 = r1			  ## vsprintf.c:69:1
 1e071d6:    02 0a             	sp += 4			  ## vsprintf.c:69:1
 1e071d8:    57 01             	{pc, r7-r4} = [sp++]			  ## vsprintf.c:69:1


lbuf_alloc_btctrler:
 1e071da:    77 01             	[--sp] = {rets, r7-r4}			  ## lbuf.c:60:0
 1e071dc:    04 08             	r4 = r0			  ## lbuf.c:60:0
 1e071de:    06 93             	r6 = r1 + 16			  ## lbuf.c:68:9
 1e071e0:    20 fd 03 69       	r0 = r6 & 3			  ## lbuf.c:69:13
 1e071e4:    60 fb 04 09       	r0 = 4 - r0			  ## lbuf.c:70:18
 1e071e8:    05 70             	r5 = 0			  ## lbuf.c:70:18
 1e071ea:    07 70             	r7 = 0			  ## lbuf.c:69:9
 1e071ec:    60 ff 03 69 01 00 	if ((r6 & 3) == 0) goto 2 <lbuf_alloc_btctrler+0x1A : 1e071f4 >			  ## lbuf.c:69:9
 1e071f2:    07 08             	r7 = r0			  ## lbuf.c:69:9
 1e071f4:    97 f3 d2 fd       	call 3144612 <local_irq_disable : 106d9c >			  ## lbuf.c:74:5
 1e071f8:    20 48             	r0 = [r4 + 8]			  ## lbuf.c:76:5
 1e071fa:    82 98             	r2 = r4 + 8			  ## lbuf.c:76:5
 1e071fc:    20 f2 1f 00       	if (r0 == r2) goto 62 <lbuf_alloc_btctrler+0x64 : 1e0723e >			  ## lbuf.c:76:5
 1e07200:    81 bf             	r1 = r7 + r6			  ## lbuf.c:69:9
 1e07202:    46 50             	r6 = h[r0 + 8] (u)			  ## lbuf.c:77:13
 1e07204:    16 f2 04 20       	if (r6 >= r1) goto 8 <lbuf_alloc_btctrler+0x36 : 1e07210 >			  ## lbuf.c:77:13
 1e07208:    00 40             	r0 = [r0 + 0]			  ## lbuf.c:76:5
 1e0720a:    20 f2 fa 1f       	if (r0 != r2) goto -12 <lbuf_alloc_btctrler+0x28 : 1e07202 >
 1e0720e:    17 18             	goto 46 <lbuf_alloc_btctrler+0x64 : 1e0723e >
 1e07210:    03 40             	r3 = [r0 + 0]			  ## lbuf.c:83:61
 1e07212:    12 40             	r2 = [r0 + 4]			  ## lbuf.c:83:46
 1e07214:    c5 92             	r5 = r1 + 12			  ## lbuf.c:80:26
 1e07216:    56 f2 07 90       	if (r6 <= r5) goto 14 <lbuf_alloc_btctrler+0x4E : 1e07228 >
 1e0721a:    45 b0             	r5 = r0 + r1			  ## lbuf.c:81:44
 1e0721c:    66 bc             	r6 = r6 - r1			  ## lbuf.c:82:31
 1e0721e:    4e 5a             	h[r5 + 8] = r6			  ## lbuf.c:82:22
 1e07220:    1d 46             	[r3 + 4] = r5			  ## list.h:137:16
 1e07222:    0b 4a             	[r5 + 0] = r3			  ## list.h:138:16
 1e07224:    53 08             	r3 = r5			  ## list.h:138:16
 1e07226:    01 18             	goto 2 <lbuf_alloc_btctrler+0x50 : 1e0722a >
 1e07228:    61 08             	r1 = r6
 1e0722a:    1a 46             	[r3 + 4] = r2
 1e0722c:    0b 44             	[r2 + 0] = r3
 1e0722e:    2c 40             	[r0 + 8] = r4			  ## lbuf.c:95:21
 1e07230:    02 70             	r2 = 0			  ## lbuf.c:96:22
 1e07232:    ea 60             	b[r0 + 14] = r2			  ## lbuf.c:96:22
 1e07234:    69 50             	h[r0 + 12] = r1			  ## lbuf.c:97:20
 1e07236:    fa 60             	b[r0 + 15] = r2			  ## lbuf.c:98:20
 1e07238:    08 40             	[r0 + 0] = r0			  ## list.h:188:16
 1e0723a:    18 40             	[r0 + 4] = r0			  ## list.h:189:16
 1e0723c:    05 91             	r5 = r0 + 16			  ## lbuf.c:105:21
 1e0723e:    97 f3 ab fd       	call 3144534 <local_irq_enable : 106d98 >			  ## lbuf.c:115:5
 1e07242:    50 08             	r0 = r5			  ## lbuf.c:116:5
 1e07244:    57 01             	{pc, r7-r4} = [sp++]			  ## lbuf.c:116:5


hw_dma_alloc:
 1e07246:    34 00             	[--sp] = rets			  ## hw_dma.c:45:0
 1e07248:    12 08             	r2 = r1			  ## hw_dma.c:45:0
 1e0724a:    c1 ff b0 20 00 00 	r1 = 8368 <gatt_client_conn_handle : 20b0 >			  ## hw_dma.c:45:0
 1e07250:    06 20             	if (r0 == 0) goto 12 <hw_dma_alloc+0x18 : 1e0725e >			  ## hw_dma.c:45:0
 1e07252:    00 f6 e0 10       	r0 = [r1 + 224]			  ## hw_dma.c:45:0
 1e07256:    13 fc e0 00       	r3 = r1 + 224			  ## hw_dma.c:45:0
 1e0725a:    08 30             	if (r0 != 0) goto 16 <hw_dma_alloc+0x26 : 1e0726c >			  ## hw_dma.c:45:0
 1e0725c:    05 18             	goto 10 <hw_dma_alloc+0x22 : 1e07268 >			  ## hw_dma.c:45:0
 1e0725e:    00 f6 dc 10       	r0 = [r1 + 220]			  ## hw_dma.c:45:0
 1e07262:    13 fc dc 00       	r3 = r1 + 220			  ## hw_dma.c:45:0
 1e07266:    02 30             	if (r0 != 0) goto 4 <hw_dma_alloc+0x26 : 1e0726c >			  ## hw_dma.c:45:0
 1e07268:    8f f3 ba e0       	call 2081140 <p33_soft_reset : 33e0 >			  ## hw_dma.c:45:0
 1e0726c:    00 46             	r0 = [r3 + 0]			  ## hw_dma.c:45:0
 1e0726e:    21 08             	r1 = r2			  ## hw_dma.c:52:16
 1e07270:    88 01             	{rets} = [sp++]			  ## hw_dma.c:52:16
 1e07272:    b3 1f             	goto -154 <lbuf_alloc_btctrler : 1e071da >			  ## hw_dma.c:52:16


hw_dma_push:
 1e07274:    75 01             	[--sp] = {rets, r5, r4}			  ## hw_dma.c:68:0
 1e07276:    14 08             	r4 = r1			  ## hw_dma.c:68:0
 1e07278:    05 08             	r5 = r0			  ## hw_dma.c:68:0
 1e0727a:    97 f3 8f fd       	call 3144478 <local_irq_disable : 106d9c >			  ## hw_dma.c:69:5
 1e0727e:    10 4a             	r0 = [r5 + 4]			  ## list.h:154:28
 1e07280:    1c 4a             	[r5 + 4] = r4			  ## list.h:137:16
 1e07282:    0d 48             	[r4 + 0] = r5			  ## list.h:138:16
 1e07284:    18 48             	[r4 + 4] = r0			  ## list.h:139:16
 1e07286:    0c 40             	[r0 + 0] = r4			  ## list.h:140:16
 1e07288:    15 01             	{rets, r5, r4} = [sp++]			  ## hw_dma.c:71:5
 1e0728a:    d7 f3 85 fd       	goto 3144458 <local_irq_enable : 106d98 >			  ## hw_dma.c:71:5


hw_dma_pop:
 1e0728e:    74 01             	[--sp] = {rets, r4}			  ## hw_dma.c:93:0
 1e07290:    04 40             	r4 = [r0 + 0]			  ## list.h:124:18
 1e07292:    04 f2 0b 00       	if (r4 == r0) goto 22 <hw_dma_pop+0x1E : 1e072ac >			  ## list.h:124:18
 1e07296:    97 f3 81 fd       	call 3144450 <local_irq_disable : 106d9c >			  ## hw_dma.c:103:5
 1e0729a:    00 48             	r0 = [r4 + 0]			  ## list.h:171:36
 1e0729c:    11 48             	r1 = [r4 + 4]			  ## list.h:171:23
 1e0729e:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e072a0:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e072a2:    0c 48             	[r4 + 0] = r4			  ## list.h:172:17
 1e072a4:    1c 48             	[r4 + 4] = r4			  ## list.h:173:17
 1e072a6:    97 f3 77 fd       	call 3144430 <local_irq_enable : 106d98 >			  ## hw_dma.c:105:5
 1e072aa:    01 18             	goto 2 <hw_dma_pop+0x20 : 1e072ae >
 1e072ac:    04 70             	r4 = 0
 1e072ae:    40 08             	r0 = r4			  ## hw_dma.c:108:1
 1e072b0:    54 01             	{pc, r4} = [sp++]			  ## hw_dma.c:108:1


btctler_little_endian_read_16:
 1e072b2:    10 09             	r0 += r1			  ## btcontroller_util.c:43:0
 1e072b4:    11 60             	r1 = b[r0 + 1] (u)			  ## btcontroller_util.c:44:51
 1e072b6:    00 60             	r0 = b[r0 + 0] (u)			  ## btcontroller_util.c:44:23
 1e072b8:    d8 fd 40 01       	r0 <= insert(r1, p:8, l:24)			  ## btcontroller_util.c:44:48
 1e072bc:    20 04             	r0 = r0.l (u)			  ## btcontroller_util.c:44:5
 1e072be:    20 00             	rts			  ## btcontroller_util.c:44:5


lbuf_push_btctrler:
 1e072c0:    74 01             	[--sp] = {rets, r4}			  ## lbuf.c:197:0
 1e072c2:    04 08             	r4 = r0			  ## lbuf.c:197:0
 1e072c4:    97 f3 6a fd       	call 3144404 <local_irq_disable : 106d9c >			  ## lbuf.c:201:5
 1e072c8:    01 70             	r1 = 0			  ## lbuf.c:203:14
 1e072ca:    40 fc f0 ff       	r0 = r4 + -16			  ## lbuf.c:203:14
 1e072ce:    e9 60             	b[r0 + 14] = r1			  ## lbuf.c:203:14
 1e072d0:    f1 60             	r1 = b[r0 + 15] (u)			  ## lbuf.c:204:15
 1e072d2:    12 92             	r2 = r1 + 1			  ## lbuf.c:204:15
 1e072d4:    fa 60             	b[r0 + 15] = r2			  ## lbuf.c:204:15
 1e072d6:    06 32             	if (r1 != 0) goto 12 <lbuf_push_btctrler+0x24 : 1e072e4 >			  ## lbuf.c:204:15
 1e072d8:    21 40             	r1 = [r0 + 8]			  ## lbuf.c:205:38
 1e072da:    12 42             	r2 = [r1 + 4]			  ## list.h:154:28
 1e072dc:    18 42             	[r1 + 4] = r0			  ## list.h:137:16
 1e072de:    09 40             	[r0 + 0] = r1			  ## list.h:138:16
 1e072e0:    1a 40             	[r0 + 4] = r2			  ## list.h:139:16
 1e072e2:    08 44             	[r2 + 0] = r0			  ## list.h:140:16
 1e072e4:    14 01             	{rets, r4} = [sp++]			  ## lbuf.c:208:5
 1e072e6:    d7 f3 57 fd       	goto 3144366 <local_irq_enable : 106d98 >			  ## lbuf.c:208:5


thread_resume:
 1e072ea:    74 01             	[--sp] = {rets, r4}			  ## thread.c:143:0
 1e072ec:    04 08             	r4 = r0			  ## thread.c:143:0
 1e072ee:    97 f3 55 fd       	call 3144362 <local_irq_disable : 106d9c >			  ## thread.c:150:5
 1e072f2:    00 70             	r0 = 0			  ## thread.c:150:5
 1e072f4:    68 69             	b[r4 + 22] = r0			  ## thread.c:151:25
 1e072f6:    50 69             	r0 = b[r4 + 21] (u)			  ## thread.c:152:27
 1e072f8:    11 70             	r1 = 1			  ## thread.c:152:22
 1e072fa:    01 ff ff 00 01 00 	if (r0 != 255) goto 2 <thread_resume+0x18 : 1e07302 >			  ## thread.c:152:22
 1e07300:    01 70             	r1 = 0			  ## thread.c:152:22
 1e07302:    10 09             	r0 += r1			  ## thread.c:152:22
 1e07304:    58 69             	b[r4 + 21] = r0			  ## thread.c:152:20
 1e07306:    97 f3 47 fd       	call 3144334 <local_irq_enable : 106d98 >			  ## thread.c:154:5
 1e0730a:    20 48             	r0 = [r4 + 8]			  ## thread.c:156:9
 1e0730c:    50 40             	r0 = [r0 + 20]			  ## thread.c:156:16
 1e0730e:    14 01             	{rets, r4} = [sp++]			  ## thread.c:156:5
 1e07310:    90 00             	goto r0			  ## thread.c:156:5


btctler_nv_memory_malloc:
 1e07312:    75 01             	[--sp] = {rets, r5, r4}			  ## btcontroller_heap.c:221:0
 1e07314:    05 08             	r5 = r0			  ## btcontroller_heap.c:221:0
 1e07316:    80 f3 4e 43       	call 34460 <malloc : 1e0f9b6 >			  ## btcontroller_heap.c:227:9
 1e0731a:    04 08             	r4 = r0			  ## btcontroller_heap.c:227:9
 1e0731c:    05 28             	if (r4 == 0) goto 10 <btctler_nv_memory_malloc+0x16 : 1e07328 >			  ## btcontroller_heap.c:228:9
 1e0731e:    01 70             	r1 = 0			  ## btcontroller_heap.c:229:9
 1e07320:    52 08             	r2 = r5			  ## btcontroller_heap.c:229:9
 1e07322:    97 f3 e5 fd       	call 3144650 <memset : 106ef0 >			  ## btcontroller_heap.c:229:9
 1e07326:    09 18             	goto 18 <btctler_nv_memory_malloc+0x28 : 1e0733a >			  ## btcontroller_heap.c:229:9
 1e07328:    28 fb 00 13       	r1 = rets			  ## btcontroller_heap.c:235:9
 1e0732c:    c0 ff 82 59 e1 01 	r0 = 31545730 <update_target_end+0x2AFA : 1e15982 >			  ## btcontroller_heap.c:236:9
 1e07332:    80 f3 ca 3e       	call 32148 <printf : 1e0f0ca >			  ## btcontroller_heap.c:236:9
 1e07336:    8f f3 53 e0       	call 2080934 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e0733a:    40 08             	r0 = r4			  ## btcontroller_heap.c:239:5
 1e0733c:    55 01             	{pc, r5, r4} = [sp++]			  ## btcontroller_heap.c:239:5


__bt_malloc:
 1e0733e:    34 00             	[--sp] = rets			  ## btcontroller_heap.c:259:0
 1e07340:    e8 17             	call -48 <btctler_nv_memory_malloc : 1e07312 >			  ## btcontroller_heap.c:262:9
 1e07342:    02 08             	r2 = r0			  ## btcontroller_heap.c:262:9
 1e07344:    02 34             	if (r2 != 0) goto 4 <__bt_malloc+0xC : 1e0734a >
 1e07346:    8f f3 4b e0       	call 2080918 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e0734a:    20 08             	r0 = r2			  ## btcontroller_heap.c:265:5
 1e0734c:    30 00             	pc = [sp++]			  ## btcontroller_heap.c:265:5


sys_timer_register:
 1e0734e:    02 08             	r2 = r0			  ## sys_timer.c:30:0
 1e07350:    00 70             	r0 = 0			  ## sys_timer.c:31:12
 1e07352:    c0 f3 50 4e       	goto 40096 <sys_timer_add : 1e10ff6 >			  ## sys_timer.c:31:12


sys_timer_set_context:
 1e07356:    20 04             	r0 = r0.l (u)			  ## sys_timer.c:57:0
 1e07358:    c0 f3 c0 50       	goto 41344 <sys_timer_set_user_data : 1e114dc >			  ## sys_timer.c:58:5


pseudo_random_genrate:
 1e0735c:    08 22             	if (r1 == 0) goto 16 <pseudo_random_genrate+0x12 : 1e0736e >			  ## misc_hw.c:84:0
 1e0735e:    c2 ff 00 3b 1e 00 	r2 = 1981184 <uECC_vli_cmp_unsafe+0xDCB04 : 1e3b00 >			  ## misc_hw.c:84:0
 1e07364:    03 44             	r3 = [r2 + 0]			  ## misc_hw.c:86:28
 1e07366:    93 f9 01 00       	b[r0 ++= 1] = r3			  ## misc_hw.c:86:17
 1e0736a:    51 f3 fb ff       	if (--r1 != 0) goto -10 <pseudo_random_genrate+0x8 : 1e07364 >
 1e0736e:    20 00             	rts			  ## misc_hw.c:88:1


thread_schedule:
 1e07370:    75 01             	[--sp] = {rets, r5, r4}			  ## thread.c:27:0
 1e07372:    04 08             	r4 = r0			  ## thread.c:27:0
 1e07374:    02 48             	r2 = [r4 + 0]			  ## thread.c:33:5
 1e07376:    42 f2 0a 00       	if (r2 == r4) goto 20 <thread_schedule+0x1E : 1e0738e >
 1e0737a:    50 65             	r0 = b[r2 + 21] (u)			  ## thread.c:35:16
 1e0737c:    05 44             	r5 = [r2 + 0]			  ## thread.c:35:16
 1e0737e:    03 20             	if (r0 == 0) goto 6 <thread_schedule+0x16 : 1e07386 >
 1e07380:    41 44             	r1 = [r2 + 16]			  ## thread.c:37:16
 1e07382:    20 08             	r0 = r2			  ## thread.c:37:13
 1e07384:    81 00             	call r1			  ## thread.c:37:13
 1e07386:    52 08             	r2 = r5
 1e07388:    45 f2 f7 1f       	if (r5 != r4) goto -18 <thread_schedule+0xA : 1e0737a >
 1e0738c:    02 48             	r2 = [r4 + 0]
 1e0738e:    42 f2 0f 00       	if (r2 == r4) goto 30 <thread_schedule+0x40 : 1e073b0 >
 1e07392:    50 65             	r0 = b[r2 + 21] (u)			  ## thread.c:43:16
 1e07394:    04 20             	if (r0 == 0) goto 8 <thread_schedule+0x2E : 1e0739e >			  ## thread.c:43:16
 1e07396:    60 65             	r0 = b[r2 + 22] (u)			  ## thread.c:43:34
 1e07398:    0f 20             	if (r0 == 0) goto 30 <thread_schedule+0x48 : 1e073b8 >			  ## thread.c:43:34
 1e0739a:    8f f3 21 e0       	call 2080834 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e0739e:    60 65             	r0 = b[r2 + 22] (u)			  ## thread.c:50:31
 1e073a0:    03 f2 01 c0       	ifs (r3 > r0) goto 2 <thread_schedule+0x36 : 1e073a6 >
 1e073a4:    30 08             	r0 = r3			  ## thread.c:50:13
 1e073a6:    02 44             	r2 = [r2 + 0]
 1e073a8:    03 08             	r3 = r0
 1e073aa:    42 f2 f2 1f       	if (r2 != r4) goto -28 <thread_schedule+0x22 : 1e07392 >
 1e073ae:    00 00             	nop
 1e073b0:    42 48             	r2 = [r4 + 16]			  ## thread.c:55:12
 1e073b2:    01 04             	r1 = r0.b0 (u)			  ## thread.c:55:5
 1e073b4:    00 70             	r0 = 0			  ## thread.c:55:5
 1e073b6:    82 00             	call r2			  ## thread.c:55:5
 1e073b8:    55 01             	{pc, r5, r4} = [sp++]			  ## thread.c:56:1


thread_run:
 1e073ba:    da 1f             	goto -76 <thread_schedule : 1e07370 >			  ## thread.c:175:0


thread_suspend:
 1e073bc:    75 01             	[--sp] = {rets, r5, r4}			  ## thread.c:122:0
 1e073be:    15 08             	r5 = r1			  ## thread.c:122:0
 1e073c0:    04 08             	r4 = r0			  ## thread.c:122:0
 1e073c2:    97 f3 eb fc       	call 3144150 <local_irq_disable : 106d9c >			  ## thread.c:129:5
 1e073c6:    6d 69             	b[r4 + 22] = r5			  ## thread.c:130:25
 1e073c8:    07 3a             	if (r5 != 0) goto 14 <thread_suspend+0x1C : 1e073d8 >			  ## thread.c:130:25
 1e073ca:    52 69             	r2 = b[r4 + 21] (u)			  ## thread.c:133:31
 1e073cc:    21 fc ff ff       	r1 = r2 + -1			  ## thread.c:133:61
 1e073d0:    00 70             	r0 = 0			  ## thread.c:133:26
 1e073d2:    01 24             	if (r2 == 0) goto 2 <thread_suspend+0x1A : 1e073d6 >			  ## thread.c:133:26
 1e073d4:    10 08             	r0 = r1			  ## thread.c:133:26
 1e073d6:    58 69             	b[r4 + 21] = r0			  ## thread.c:133:24
 1e073d8:    15 01             	{rets, r5, r4} = [sp++]			  ## thread.c:137:5
 1e073da:    d7 f3 dd fc       	goto 3144122 <local_irq_enable : 106d98 >			  ## thread.c:137:5


low_power_request:
 1e073de:    c0 ff 00 50 00 00 	r0 = 20480 <nvbss_begin : 5000 >			  ## power_hw.c:700:0
 1e073e4:    01 f9 32 00       	r1 = b[r0 + 50] (u)			  ## power_hw.c:701:17
 1e073e8:    03 22             	if (r1 == 0) goto 6 <low_power_request+0x12 : 1e073f0 >			  ## power_hw.c:701:17
 1e073ea:    11 70             	r1 = 1			  ## power_hw.c:702:25
 1e073ec:    11 f9 30 00       	b[r0 + 48] = r1			  ## power_hw.c:702:25
 1e073f0:    20 00             	rts			  ## power_hw.c:708:1


ccm_memory_v2:
 1e073f2:    7a 01             	[--sp] = {rets, r10-r4}			  ## aes_hw.c:99:0
 1e073f4:    36 08             	r6 = r3			  ## aes_hw.c:99:0
 1e073f6:    28 08             	r8 = r2			  ## aes_hw.c:99:0
 1e073f8:    15 08             	r5 = r1			  ## aes_hw.c:99:0
 1e073fa:    07 08             	r7 = r0			  ## aes_hw.c:99:0
 1e073fc:    97 f3 ce fc       	call 3144092 <local_irq_disable : 106d9c >			  ## aes_hw.c:101:5
 1e07400:    90 02             	r0 = [sp+36]			  ## aes_hw.c:101:5
 1e07402:    08 00             	csync			  ## aes_hw.c:101:5
 1e07404:    c2 ff 00 43 1e 00 	r2 = 1983232 <uECC_vli_cmp_unsafe+0xDD304 : 1e4300 >			  ## aes_hw.c:101:5
 1e0740a:    b8 44             	[r2 + 44] = r0			  ## aes_hw.c:106:21
 1e0740c:    30 6e             	r0 = b[r7 + 3] (u)			  ## aes_hw.c:110:12
 1e0740e:    21 6e             	r1 = b[r7 + 2] (u)			  ## aes_hw.c:110:12
 1e07410:    13 6e             	r3 = b[r7 + 1] (u)			  ## aes_hw.c:110:12
 1e07412:    04 6e             	r4 = b[r7 + 0] (u)			  ## aes_hw.c:110:12
 1e07414:    00 c6             	r0 = r0 << 24			  ## aes_hw.c:110:12
 1e07416:    c8 fd 80 01       	r0 <= insert(r1, p:16, l:8)			  ## aes_hw.c:110:12
 1e0741a:    c8 fd 40 03       	r0 <= insert(r3, p:8, l:8)			  ## aes_hw.c:110:12
 1e0741e:    50 b8             	r0 |= r4			  ## aes_hw.c:110:12
 1e07420:    28 44             	[r2 + 8] = r0			  ## aes_hw.c:111:17
 1e07422:    70 6e             	r0 = b[r7 + 7] (u)			  ## aes_hw.c:113:12
 1e07424:    61 6e             	r1 = b[r7 + 6] (u)			  ## aes_hw.c:113:12
 1e07426:    53 6e             	r3 = b[r7 + 5] (u)			  ## aes_hw.c:113:12
 1e07428:    44 6e             	r4 = b[r7 + 4] (u)			  ## aes_hw.c:113:12
 1e0742a:    00 c6             	r0 = r0 << 24			  ## aes_hw.c:113:12
 1e0742c:    c8 fd 80 01       	r0 <= insert(r1, p:16, l:8)			  ## aes_hw.c:113:12
 1e07430:    c8 fd 40 03       	r0 <= insert(r3, p:8, l:8)			  ## aes_hw.c:113:12
 1e07434:    50 b8             	r0 |= r4			  ## aes_hw.c:113:12
 1e07436:    28 44             	[r2 + 8] = r0			  ## aes_hw.c:114:17
 1e07438:    b0 6e             	r0 = b[r7 + 11] (u)			  ## aes_hw.c:116:12
 1e0743a:    a1 6e             	r1 = b[r7 + 10] (u)			  ## aes_hw.c:116:12
 1e0743c:    93 6e             	r3 = b[r7 + 9] (u)			  ## aes_hw.c:116:12
 1e0743e:    84 6e             	r4 = b[r7 + 8] (u)			  ## aes_hw.c:116:12
 1e07440:    00 c6             	r0 = r0 << 24			  ## aes_hw.c:116:12
 1e07442:    c8 fd 80 01       	r0 <= insert(r1, p:16, l:8)			  ## aes_hw.c:116:12
 1e07446:    c8 fd 40 03       	r0 <= insert(r3, p:8, l:8)			  ## aes_hw.c:116:12
 1e0744a:    50 b8             	r0 |= r4			  ## aes_hw.c:116:12
 1e0744c:    28 44             	[r2 + 8] = r0			  ## aes_hw.c:117:17
 1e0744e:    f0 6e             	r0 = b[r7 + 15] (u)			  ## aes_hw.c:119:12
 1e07450:    e1 6e             	r1 = b[r7 + 14] (u)			  ## aes_hw.c:119:12
 1e07452:    d3 6e             	r3 = b[r7 + 13] (u)			  ## aes_hw.c:119:12
 1e07454:    c4 6e             	r4 = b[r7 + 12] (u)			  ## aes_hw.c:119:12
 1e07456:    00 c6             	r0 = r0 << 24			  ## aes_hw.c:119:12
 1e07458:    c8 fd 80 01       	r0 <= insert(r1, p:16, l:8)			  ## aes_hw.c:119:12
 1e0745c:    c8 fd 40 03       	r0 <= insert(r3, p:8, l:8)			  ## aes_hw.c:119:12
 1e07460:    50 b8             	r0 |= r4			  ## aes_hw.c:119:12
 1e07462:    28 44             	[r2 + 8] = r0			  ## aes_hw.c:120:17
 1e07464:    c0 f4 10 29       	[r2 + 0] = 16			  ## aes_hw.c:122:17
 1e07468:    08 2c             	if (r6 == 0) goto 16 <ccm_memory_v2+0x88 : 1e0747a >			  ## aes_hw.c:123:9
 1e0746a:    16 e0 02 00       	if (r6 == 1) goto 4 <ccm_memory_v2+0x80 : 1e07472 >
 1e0746e:    8f f3 b7 df       	call 2080622 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e07472:    00 44             	r0 = [r2 + 0]			  ## aes_hw.c:125:21
 1e07474:    07 fd 08 0a       	r7 = r0 | 2048			  ## aes_hw.c:125:21
 1e07478:    03 18             	goto 6 <ccm_memory_v2+0x8E : 1e07480 >
 1e0747a:    00 44             	r0 = [r2 + 0]			  ## aes_hw.c:127:21
 1e0747c:    37 fd 08 0a       	r7 = r0 & 4294965247			  ## aes_hw.c:127:21
 1e07480:    d1 02             	r1 = [sp+52]
 1e07482:    c4 02             	r4 = [sp+48]
 1e07484:    b0 02             	r0 = [sp+44]
 1e07486:    0a f5 28 00       	r10 = [sp+40]
 1e0748a:    09 f5 20 00       	r9 = [sp+32]
 1e0748e:    0f 44             	[r2 + 0] = r7
 1e07490:    07 44             	r7 = [r2 + 0]			  ## aes_hw.c:129:20
 1e07492:    25 f3 fd 7f       	if ((r7 & 32) != 0) goto -6 <ccm_memory_v2+0x9E : 1e07490 >			  ## aes_hw.c:129:5
 1e07496:    cc 44             	[r2 + 48] = r4			  ## aes_hw.c:135:21
 1e07498:    34 6a             	r4 = b[r5 + 3] (u)			  ## aes_hw.c:138:12
 1e0749a:    27 6a             	r7 = b[r5 + 2] (u)			  ## aes_hw.c:138:12
 1e0749c:    16 6a             	r6 = b[r5 + 1] (u)			  ## aes_hw.c:138:12
 1e0749e:    03 6a             	r3 = b[r5 + 0] (u)			  ## aes_hw.c:138:12
 1e074a0:    24 c6             	r4 = r4 << 24			  ## aes_hw.c:138:12
 1e074a2:    c8 fd 80 47       	r4 <= insert(r7, p:16, l:8)			  ## aes_hw.c:138:12
 1e074a6:    c8 fd 40 46       	r4 <= insert(r6, p:8, l:8)			  ## aes_hw.c:138:12
 1e074aa:    53 b8             	r3 |= r4			  ## aes_hw.c:138:12
 1e074ac:    7b 44             	[r2 + 28] = r3			  ## aes_hw.c:139:19
 1e074ae:    73 6a             	r3 = b[r5 + 7] (u)			  ## aes_hw.c:141:12
 1e074b0:    64 6a             	r4 = b[r5 + 6] (u)			  ## aes_hw.c:141:12
 1e074b2:    56 6a             	r6 = b[r5 + 5] (u)			  ## aes_hw.c:141:12
 1e074b4:    47 6a             	r7 = b[r5 + 4] (u)			  ## aes_hw.c:141:12
 1e074b6:    1b c6             	r3 = r3 << 24			  ## aes_hw.c:141:12
 1e074b8:    c8 fd 80 34       	r3 <= insert(r4, p:16, l:8)			  ## aes_hw.c:141:12
 1e074bc:    c8 fd 40 36       	r3 <= insert(r6, p:8, l:8)			  ## aes_hw.c:141:12
 1e074c0:    53 be             	r3 |= r7			  ## aes_hw.c:141:12
 1e074c2:    7b 44             	[r2 + 28] = r3			  ## aes_hw.c:142:19
 1e074c4:    b3 6a             	r3 = b[r5 + 11] (u)			  ## aes_hw.c:144:12
 1e074c6:    a4 6a             	r4 = b[r5 + 10] (u)			  ## aes_hw.c:144:12
 1e074c8:    96 6a             	r6 = b[r5 + 9] (u)			  ## aes_hw.c:144:12
 1e074ca:    87 6a             	r7 = b[r5 + 8] (u)			  ## aes_hw.c:144:12
 1e074cc:    1b c6             	r3 = r3 << 24			  ## aes_hw.c:144:12
 1e074ce:    c8 fd 80 34       	r3 <= insert(r4, p:16, l:8)			  ## aes_hw.c:144:12
 1e074d2:    c8 fd 40 36       	r3 <= insert(r6, p:8, l:8)			  ## aes_hw.c:144:12
 1e074d6:    53 be             	r3 |= r7			  ## aes_hw.c:144:12
 1e074d8:    7b 44             	[r2 + 28] = r3			  ## aes_hw.c:145:19
 1e074da:    c3 6a             	r3 = b[r5 + 12] (u)			  ## aes_hw.c:147:12
 1e074dc:    7b 44             	[r2 + 28] = r3			  ## aes_hw.c:148:19
 1e074de:    03 f9 00 80       	r3 = b[r8 + 0] (u)			  ## aes_hw.c:151:22
 1e074e2:    8b 44             	[r2 + 32] = r3			  ## aes_hw.c:151:20
 1e074e4:    94 08             	r4 = r9			  ## aes_hw.c:156:9
 1e074e6:    01 22             	if (r1 == 0) goto 2 <ccm_memory_v2+0xF8 : 1e074ea >			  ## aes_hw.c:156:9
 1e074e8:    a4 08             	r4 = r10			  ## aes_hw.c:156:9
 1e074ea:    9c 44             	[r2 + 36] = r4
 1e074ec:    01 22             	if (r1 == 0) goto 2 <ccm_memory_v2+0xFE : 1e074f0 >
 1e074ee:    9a 08             	r10 = r9			  ## aes_hw.c:156:9
 1e074f0:    1a f6 28 20       	[r2 + 40] = r10
 1e074f4:    20 fb 01 3b       	r3 = 65536			  ## aes_hw.c:156:9
 1e074f8:    02 22             	if (r1 == 0) goto 4 <ccm_memory_v2+0x10C : 1e074fe >			  ## aes_hw.c:156:9
 1e074fa:    20 fb 04 3b       	r3 = 262144			  ## aes_hw.c:156:9
 1e074fe:    01 44             	r1 = [r2 + 0]
 1e07500:    51 b6             	r1 |= r3
 1e07502:    09 44             	[r2 + 0] = r1
 1e07504:    01 44             	r1 = [r2 + 0]			  ## aes_hw.c:178:21
 1e07506:    f1 ef fd cf       	ifs (r1 > -1) goto -6 <ccm_memory_v2+0x112 : 1e07504 >			  ## aes_hw.c:178:5
 1e0750a:    00 f4 40 2c       	[r2 + 0] |= 1073741824			  ## aes_hw.c:179:17
 1e0750e:    d1 44             	r1 = [r2 + 52]			  ## aes_hw.c:182:5
 1e07510:    09 d6             	r1 = r1 >> 24			  ## aes_hw.c:182:5
 1e07512:    09 60             	b[r0 + 0] = r1			  ## aes_hw.c:182:5
 1e07514:    d1 44             	r1 = [r2 + 52]			  ## aes_hw.c:182:5
 1e07516:    09 d4             	r1 = r1 >> 16			  ## aes_hw.c:182:5
 1e07518:    19 60             	b[r0 + 1] = r1			  ## aes_hw.c:182:5
 1e0751a:    d1 44             	r1 = [r2 + 52]			  ## aes_hw.c:182:5
 1e0751c:    09 d2             	r1 = r1 >> 8			  ## aes_hw.c:182:5
 1e0751e:    29 60             	b[r0 + 2] = r1			  ## aes_hw.c:182:5
 1e07520:    d1 44             	r1 = [r2 + 52]			  ## aes_hw.c:182:5
 1e07522:    39 60             	b[r0 + 3] = r1			  ## aes_hw.c:182:5
 1e07524:    e1 44             	r1 = [r2 + 56]			  ## aes_hw.c:183:5
 1e07526:    09 d6             	r1 = r1 >> 24			  ## aes_hw.c:183:5
 1e07528:    49 60             	b[r0 + 4] = r1			  ## aes_hw.c:183:5
 1e0752a:    e1 44             	r1 = [r2 + 56]			  ## aes_hw.c:183:5
 1e0752c:    09 d4             	r1 = r1 >> 16			  ## aes_hw.c:183:5
 1e0752e:    59 60             	b[r0 + 5] = r1			  ## aes_hw.c:183:5
 1e07530:    e1 44             	r1 = [r2 + 56]			  ## aes_hw.c:183:5
 1e07532:    09 d2             	r1 = r1 >> 8			  ## aes_hw.c:183:5
 1e07534:    69 60             	b[r0 + 6] = r1			  ## aes_hw.c:183:5
 1e07536:    e1 44             	r1 = [r2 + 56]			  ## aes_hw.c:183:5
 1e07538:    79 60             	b[r0 + 7] = r1			  ## aes_hw.c:183:5
 1e0753a:    f1 44             	r1 = [r2 + 60]			  ## aes_hw.c:184:5
 1e0753c:    09 d6             	r1 = r1 >> 24			  ## aes_hw.c:184:5
 1e0753e:    89 60             	b[r0 + 8] = r1			  ## aes_hw.c:184:5
 1e07540:    f1 44             	r1 = [r2 + 60]			  ## aes_hw.c:184:5
 1e07542:    09 d4             	r1 = r1 >> 16			  ## aes_hw.c:184:5
 1e07544:    99 60             	b[r0 + 9] = r1			  ## aes_hw.c:184:5
 1e07546:    f1 44             	r1 = [r2 + 60]			  ## aes_hw.c:184:5
 1e07548:    09 d2             	r1 = r1 >> 8			  ## aes_hw.c:184:5
 1e0754a:    a9 60             	b[r0 + 10] = r1			  ## aes_hw.c:184:5
 1e0754c:    f1 44             	r1 = [r2 + 60]			  ## aes_hw.c:184:5
 1e0754e:    b9 60             	b[r0 + 11] = r1			  ## aes_hw.c:184:5
 1e07550:    01 45             	r1 = [r2 + 64]			  ## aes_hw.c:185:5
 1e07552:    09 d6             	r1 = r1 >> 24			  ## aes_hw.c:185:5
 1e07554:    c9 60             	b[r0 + 12] = r1			  ## aes_hw.c:185:5
 1e07556:    01 45             	r1 = [r2 + 64]			  ## aes_hw.c:185:5
 1e07558:    09 d4             	r1 = r1 >> 16			  ## aes_hw.c:185:5
 1e0755a:    d9 60             	b[r0 + 13] = r1			  ## aes_hw.c:185:5
 1e0755c:    01 45             	r1 = [r2 + 64]			  ## aes_hw.c:185:5
 1e0755e:    09 d2             	r1 = r1 >> 8			  ## aes_hw.c:185:5
 1e07560:    e9 60             	b[r0 + 14] = r1			  ## aes_hw.c:185:5
 1e07562:    01 45             	r1 = [r2 + 64]			  ## aes_hw.c:185:5
 1e07564:    f9 60             	b[r0 + 15] = r1			  ## aes_hw.c:185:5
 1e07566:    1a 01             	{rets, r10-r4} = [sp++]			  ## aes_hw.c:190:5
 1e07568:    d7 f3 16 fc       	goto 3143724 <local_irq_enable : 106d98 >			  ## aes_hw.c:190:5


sdk_meky_check:
 1e0756c:    c1 ff 7c 75 e0 01 	r1 = 31487356 <_mkey_check : 1e0757c >			  ## key0_decode.c:137:0
 1e07572:    00 70             	r0 = 0			  ## key0_decode.c:138:5
 1e07574:    02 fb 40 1f       	r2 = 8000 <timer_pool+0x9C : 1f40 >			  ## key0_decode.c:138:5
 1e07578:    c0 f3 d6 4d       	goto 39852 <sys_timeout_add : 1e11128 >			  ## key0_decode.c:138:5


_mkey_check:
 1e0757c:    78 01             	[--sp] = {rets, r8-r4}			  ## key0_decode.c:80:0
 1e0757e:    de 0b             	sp += -68			  ## key0_decode.c:80:0
 1e07580:    c6 ff 94 08 00 00 	r6 = 2196 <puk : 894 >			  ## key0_decode.c:80:0
 1e07586:    07 4c             	r7 = [r6 + 0]			  ## key0_decode.c:84:22
 1e07588:    c8 ff 00 3b 1e 00 	r8 = 1981184 <uECC_vli_cmp_unsafe+0xDCB04 : 1e3b00 >
 1e0758e:    00 f6 00 80       	r0 = [r8 + 0]			  ## key0_decode.c:86:41
 1e07592:    00 fd 80 0c       	r0 = r0 | 2147483648			  ## key0_decode.c:86:46
 1e07596:    08 03             	[sp+64] = r0
 1e07598:    00 03             	r0 = [sp+64]			  ## key0_decode.c:41:14
 1e0759a:    04 03             	r4 = [sp+64]			  ## key0_decode.c:41:14
 1e0759c:    f0 ef 02 c0       	ifs (r0 > -1) goto 4 <_mkey_check+0x28 : 1e075a4 >			  ## key0_decode.c:41:9
 1e075a0:    cc 02             	[sp+48] = r4			  ## key0_decode.c:42:33
 1e075a2:    06 18             	goto 12 <_mkey_check+0x34 : 1e075b0 >			  ## key0_decode.c:42:33
 1e075a4:    00 a2             	r0 = sp + 32
 1e075a6:    02 72             	r2 = 32			  ## key0_decode.c:44:9
 1e075a8:    41 08             	r1 = r4			  ## key0_decode.c:44:9
 1e075aa:    97 f3 9b fc       	call 3143990 <memcpy : 106ee4 >			  ## key0_decode.c:44:9
 1e075ae:    c4 02             	r4 = [sp+48]			  ## key0_decode.c:44:9
 1e075b0:    20 05             	r0 = r4.l (u)			  ## key0_decode.c:48:5
 1e075b2:    05 a2             	r5 = sp + 32			  ## key0_decode.c:48:5
 1e075b4:    02 72             	r2 = 32			  ## key0_decode.c:48:5
 1e075b6:    03 70             	r3 = 0			  ## key0_decode.c:48:5
 1e075b8:    51 08             	r1 = r5			  ## key0_decode.c:48:5
 1e075ba:    bf f3 d1 ce       	call -25182 <doe : 1e01360 >			  ## key0_decode.c:48:5
 1e075be:    cc 02             	[sp+48] = r4			  ## key0_decode.c:50:29
 1e075c0:    60 9a             	r0 = r5 + 6			  ## key0_decode.c:52:36
 1e075c2:    a1 71             	r1 = 26			  ## key0_decode.c:52:15
 1e075c4:    bf f3 f1 ce       	call -25118 <CRC16 : 1e013aa >			  ## key0_decode.c:52:15
 1e075c8:    81 f5 24 00       	r1 = h[sp+36] (u)			  ## key0_decode.c:54:30
 1e075cc:    10 f2 06 10       	if (r0 != r1) goto 12 <_mkey_check+0x60 : 1e075dc >			  ## key0_decode.c:54:30
 1e075d0:    00 03             	r0 = [sp+64]			  ## key0_decode.c:57:27
 1e075d2:    c1 ff 98 36 6c f3 	r1 = 4083955352 <uECC_vli_cmp_unsafe+0x15BC69C : 16c3698 >			  ## key0_decode.c:57:29
 1e075d8:    d0 b2             	r0 ^= r1			  ## key0_decode.c:57:29
 1e075da:    04 18             	goto 8 <_mkey_check+0x68 : 1e075e4 >
 1e075dc:    00 4c             	r0 = [r6 + 0]			  ## key0_decode.c:55:27
 1e075de:    c1 f5 27 00       	r1 = b[sp+39] (u)			  ## key0_decode.c:55:33
 1e075e2:    d0 b2             	r0 ^= r1			  ## key0_decode.c:55:31
 1e075e4:    08 4c             	[r6 + 0] = r0
 1e075e6:    80 02             	r0 = [sp+32]			  ## key0_decode.c:60:37
 1e075e8:    01 4c             	r1 = [r6 + 0]			  ## key0_decode.c:60:37
 1e075ea:    c5 ff 4a 4b 59 53 	r5 = 1398360906 <uECC_vli_cmp_unsafe+0x148DB4E : 1594b4a >			  ## key0_decode.c:60:20
 1e075f0:    42 08             	r2 = r4			  ## key0_decode.c:60:20
 1e075f2:    50 f2 02 00       	if (r0 == r5) goto 4 <_mkey_check+0x7E : 1e075fa >			  ## key0_decode.c:60:20
 1e075f6:    02 f6 04 80       	r2 = [r8 + 4]			  ## key0_decode.c:61:42
 1e075fa:    d1 b4             	r1 ^= r2
 1e075fc:    09 4c             	[r6 + 0] = r1
 1e075fe:    81 f5 3e 00       	r1 = h[sp+62] (u)			  ## key0_decode.c:66:25
 1e07602:    f1 e0 03 10       	if (r1 != 15) goto 6 <_mkey_check+0x90 : 1e0760c >			  ## key0_decode.c:66:9
 1e07606:    c1 f5 27 00       	r1 = b[sp+39] (u)
 1e0760a:    08 18             	goto 16 <_mkey_check+0xA0 : 1e0761c >
 1e0760c:    02 4c             	r2 = [r6 + 0]			  ## key0_decode.c:67:27
 1e0760e:    c1 f5 27 00       	r1 = b[sp+39] (u)			  ## key0_decode.c:67:47
 1e07612:    03 f6 00 80       	r3 = [r8 + 0]			  ## key0_decode.c:67:68
 1e07616:    d2 b2             	r2 ^= r1			  ## key0_decode.c:67:31
 1e07618:    d2 b6             	r2 ^= r3			  ## key0_decode.c:67:57
 1e0761a:    0a 4c             	[r6 + 0] = r2			  ## key0_decode.c:67:13
 1e0761c:    11 e0 01 10       	if (r1 != 1) goto 2 <_mkey_check+0xA6 : 1e07622 >
 1e07620:    40 08             	r0 = r4			  ## key0_decode.c:70:9
 1e07622:    01 4c             	r1 = [r6 + 0]
 1e07624:    d0 b2             	r0 ^= r1
 1e07626:    08 4c             	[r6 + 0] = r0
 1e07628:    00 4c             	r0 = [r6 + 0]			  ## key0_decode.c:89:17
 1e0762a:    07 f2 3b 00       	if (r7 == r0) goto 118 <_mkey_check+0x128 : 1e076a4 >			  ## key0_decode.c:89:17
 1e0762e:    0f 4c             	[r6 + 0] = r7			  ## key0_decode.c:93:9
 1e07630:    00 4c             	r0 = [r6 + 0]			  ## key0_decode.c:95:14
 1e07632:    c8 ff 98 36 6c f3 	r8 = 4083955352 <uECC_vli_cmp_unsafe+0x15BC69C : 16c3698 >			  ## key0_decode.c:95:18
 1e07638:    80 f2 37 00       	if (r0 == r8) goto 110 <_mkey_check+0x12E : 1e076aa >			  ## key0_decode.c:95:18
 1e0763c:    00 4c             	r0 = [r6 + 0]			  ## key0_decode.c:98:27
 1e0763e:    e1 fd 80 00       	r0 = r0 ^ r8			  ## key0_decode.c:98:31
 1e07642:    08 4c             	[r6 + 0] = r0			  ## key0_decode.c:98:13
 1e07644:    01 4c             	r1 = [r6 + 0]			  ## key0_decode.c:100:23
 1e07646:    04 a0             	r4 = sp + 0			  ## key0_decode.c:100:23
 1e07648:    02 72             	r2 = 32			  ## key0_decode.c:100:5
 1e0764a:    40 08             	r0 = r4			  ## key0_decode.c:100:5
 1e0764c:    97 f3 4a fc       	call 3143828 <memcpy : 106ee4 >			  ## key0_decode.c:100:5
 1e07650:    47 02             	r7 = [sp+16]			  ## key0_decode.c:104:35
 1e07652:    e0 05             	r0 = r7.l (u)			  ## key0_decode.c:105:5
 1e07654:    02 72             	r2 = 32			  ## key0_decode.c:105:5
 1e07656:    03 70             	r3 = 0			  ## key0_decode.c:105:5
 1e07658:    41 08             	r1 = r4			  ## key0_decode.c:105:5
 1e0765a:    bf f3 81 ce       	call -25342 <doe : 1e01360 >			  ## key0_decode.c:105:5
 1e0765e:    4f 02             	[sp+16] = r7			  ## key0_decode.c:108:29
 1e07660:    00 02             	r0 = [sp]			  ## key0_decode.c:110:37
 1e07662:    50 f2 1f 10       	if (r0 != r5) goto 62 <_mkey_check+0x128 : 1e076a4 >			  ## key0_decode.c:110:37
 1e07666:    c0 f5 07 00       	r0 = b[sp+7] (u)			  ## key0_decode.c:114:30
 1e0766a:    10 e0 1b 10       	if (r0 != 1) goto 54 <_mkey_check+0x128 : 1e076a4 >			  ## key0_decode.c:114:30
 1e0766e:    80 f5 1e 00       	r0 = h[sp+30] (u)			  ## key0_decode.c:117:25
 1e07672:    f0 e0 17 10       	if (r0 != 15) goto 46 <_mkey_check+0x128 : 1e076a4 >			  ## key0_decode.c:117:25
 1e07676:    00 a0             	r0 = sp + 0
 1e07678:    60 80             	r0 += 6			  ## key0_decode.c:121:36
 1e0767a:    a1 71             	r1 = 26			  ## key0_decode.c:121:15
 1e0767c:    bf f3 95 ce       	call -25302 <CRC16 : 1e013aa >			  ## key0_decode.c:121:15
 1e07680:    81 f5 04 00       	r1 = h[sp+4] (u)			  ## key0_decode.c:121:15
 1e07684:    10 f2 02 00       	if (r0 == r1) goto 4 <_mkey_check+0x110 : 1e0768c >			  ## key0_decode.c:121:15
 1e07688:    8f f3 aa de       	call 2080084 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e0768c:    c0 ff 00 08 00 00 	r0 = 2048 <report_mmu_tlb_size : 800 >			  ## efuse.c:9:22
 1e07692:    e0 50             	r0 = h[r0 + 28] (u)			  ## efuse.c:9:22
 1e07694:    81 f5 1a 00       	r1 = h[sp+26] (u)			  ## key0_decode.c:125:55
 1e07698:    82 f5 18 00       	r2 = h[sp+24] (u)			  ## key0_decode.c:125:30
 1e0769c:    d0 b2             	r0 ^= r1			  ## key0_decode.c:125:42
 1e0769e:    50 b5             	r0 &= r2			  ## key0_decode.c:125:42
 1e076a0:    20 04             	r0 = r0.l (u)			  ## key0_decode.c:125:9
 1e076a2:    01 20             	if (r0 == 0) goto 2 <_mkey_check+0x12A : 1e076a6 >			  ## key0_decode.c:125:9
 1e076a4:    ff 1f             	goto -2 <_mkey_check+0x128 : 1e076a4 >			  ## key0_decode.c:133:5
 1e076a6:    18 f6 00 60       	[r6 + 0] = r8			  ## key0_decode.c:126:13
 1e076aa:    22 0a             	sp += 68
 1e076ac:    58 01             	{pc, r8-r4} = [sp++]			  ## key0_decode.c:134:1


__addsf3:
 1e076ae:    77 01             	[--sp] = {rets, r7-r4}
 1e076b0:    33 fd 80 0c       	r3 = r0 & 2147483647
 1e076b4:    32 fc ff ff       	r2 = r3 + -1
 1e076b8:    c4 ff fe ff 7f 7f 	r4 = 2139095038 <uECC_vli_cmp_unsafe+0x16F9002 : 17ffffe >
 1e076be:    35 fd 80 1c       	r5 = r1 & 2147483647
 1e076c2:    42 f2 1c 80       	if (r2 > r4) goto 56 <__addsf3+0x50 : 1e076fe >
 1e076c6:    52 fc ff ff       	r2 = r5 + -1
 1e076ca:    14 98             	r4 = r4 + 1
 1e076cc:    42 f2 17 20       	if (r2 >= r4) goto 46 <__addsf3+0x50 : 1e076fe >
 1e076d0:    02 08             	r2 = r0
 1e076d2:    35 f2 01 80       	if (r5 > r3) goto 2 <__addsf3+0x2A : 1e076d8 >
 1e076d6:    12 08             	r2 = r1
 1e076d8:    c6 ff ff ff 7f 00 	r6 = 8388607 <uECC_vli_cmp_unsafe+0x6F9003 : 7fffff >
 1e076de:    e2 fd 60 42       	r4 = r2 & r6
 1e076e2:    35 f2 01 80       	if (r5 > r3) goto 2 <__addsf3+0x3A : 1e076e8 >
 1e076e6:    01 08             	r1 = r0
 1e076e8:    e2 fd 60 31       	r3 = r1 & r6
 1e076ec:    c8 d5             	r0 = r1 >> 23
 1e076ee:    88 fd b8 52       	r5 = uextra(r2, p:23, l:8)
 1e076f2:    60 ff ff 09 10 00 	if ((r0 & 255) == 0) goto 32 <__addsf3+0x6A : 1e07718 >
 1e076f8:    00 04             	r0 = r0.b0 (u)
 1e076fa:    1d 3a             	if (r5 != 0) goto 58 <__addsf3+0x88 : 1e07736 >
 1e076fc:    15 18             	goto 42 <__addsf3+0x7A : 1e07728 >
 1e076fe:    c2 ff 01 00 80 7f 	r2 = 2139095041 <uECC_vli_cmp_unsafe+0x16F9005 : 1800001 >
 1e07704:    23 f2 03 30       	if (r3 < r2) goto 6 <__addsf3+0x60 : 1e0770e >
 1e07708:    02 fd 40 0b       	r2 = r0 | 4194304
 1e0770c:    7a 18             	goto 244 <__addsf3+0x154 : 1e07802 >
 1e0770e:    25 f2 66 30       	if (r5 < r2) goto 204 <__addsf3+0x130 : 1e077de >
 1e07712:    02 fd 40 1b       	r2 = r1 | 4194304
 1e07716:    75 18             	goto 234 <__addsf3+0x154 : 1e07802 >
 1e07718:    e8 fd 00 03       	r0 = clz(r3)
 1e0771c:    06 fc f8 ff       	r6 = r0 + -8
 1e07720:    83 0d             	r3 <<= r6
 1e07722:    60 fb 09 09       	r0 = 9 - r0
 1e07726:    07 3a             	if (r5 != 0) goto 14 <__addsf3+0x88 : 1e07736 >
 1e07728:    e8 fd 00 54       	r5 = clz(r4)
 1e0772c:    56 fc f8 ff       	r6 = r5 + -8
 1e07730:    84 0d             	r4 <<= r6
 1e07732:    65 fb 09 59       	r5 = 9 - r5
 1e07736:    65 b1             	r5 = r0 - r5
 1e07738:    d2 b2             	r2 ^= r1
 1e0773a:    e4 c0             	r4 = r4 << 3
 1e0773c:    14 bd             	r4 |= 67108864
 1e0773e:    db c0             	r3 = r3 << 3
 1e07740:    0d 2a             	if (r5 == 0) goto 26 <__addsf3+0xAE : 1e0775c >
 1e07742:    16 70             	r6 = 1
 1e07744:    f5 e1 0b 80       	if (r5 > 31) goto 22 <__addsf3+0xB0 : 1e0775e >
 1e07748:    66 fb 20 59       	r6 = 32 - r5
 1e0774c:    f8 fd 60 74       	r7 = r4 << r6
 1e07750:    16 70             	r6 = 1
 1e07752:    01 3e             	if (r7 != 0) goto 2 <__addsf3+0xA8 : 1e07756 >
 1e07754:    06 70             	r6 = 0
 1e07756:    64 0d             	r4 >>= r5
 1e07758:    56 b8             	r6 |= r4
 1e0775a:    01 18             	goto 2 <__addsf3+0xB0 : 1e0775e >
 1e0775c:    46 08             	r6 = r4
 1e0775e:    04 fd 04 3c       	r4 = r3 | 67108864
 1e07762:    f2 ef 0a d0       	ifs (r2 <= -1) goto 20 <__addsf3+0xCC : 1e0777a >
 1e07766:    02 bd             	r2 = r6 + r4
 1e07768:    1b f3 10 20       	if ((r2 & 134217728) == 0) goto 32 <__addsf3+0xDE : 1e0778c >
 1e0776c:    83 b7             	r3 = r3 + r6
 1e0776e:    23 fd 01 39       	r3 = r3 & 1
 1e07772:    52 d0             	r2 = r2 >> 1
 1e07774:    52 b6             	r2 |= r3
 1e07776:    10 90             	r0 = r0 + 1
 1e07778:    09 18             	goto 18 <__addsf3+0xDE : 1e0778c >
 1e0777a:    a2 b9             	r2 = r4 - r6
 1e0777c:    3c 24             	if (r2 == 0) goto 120 <__addsf3+0x148 : 1e077f6 >
 1e0777e:    93 d6             	r3 = r2 >> 26
 1e07780:    05 36             	if (r3 != 0) goto 10 <__addsf3+0xDE : 1e0778c >
 1e07782:    e8 fd 00 32       	r3 = clz(r2)
 1e07786:    b3 8f             	r3 += -5
 1e07788:    e0 b0             	r0 = r0 - r3
 1e0778a:    c2 0c             	r2 <<= r3
 1e0778c:    21 fd 80 1c       	r1 = r1 & 2147483648
 1e07790:    0b ff ff 00 03 00 	ifs (r0 < 255) goto 6 <__addsf3+0xEE : 1e0779c >
 1e07796:    02 fd ff 18       	r2 = r1 | 2139095040
 1e0779a:    33 18             	goto 102 <__addsf3+0x154 : 1e07802 >
 1e0779c:    00 e0 0c c0       	ifs (r0 > 0) goto 24 <__addsf3+0x10A : 1e077b8 >
 1e077a0:    63 fb 01 09       	r3 = 1 - r0
 1e077a4:    60 fb 20 39       	r0 = 32 - r3
 1e077a8:    f8 fd 00 52       	r5 = r2 << r0
 1e077ac:    00 70             	r0 = 0
 1e077ae:    14 70             	r4 = 1
 1e077b0:    01 3a             	if (r5 != 0) goto 2 <__addsf3+0x106 : 1e077b4 >
 1e077b2:    04 70             	r4 = 0
 1e077b4:    e2 0c             	r2 >>= r3
 1e077b6:    52 b8             	r2 |= r4
 1e077b8:    23 fd 07 29       	r3 = r2 & 7
 1e077bc:    14 70             	r4 = 1
 1e077be:    43 e0 01 80       	if (r3 > 4) goto 2 <__addsf3+0x116 : 1e077c4 >
 1e077c2:    04 70             	r4 = 0
 1e077c4:    c0 c5             	r0 = r0 << 23
 1e077c6:    50 b2             	r0 |= r1
 1e077c8:    97 fd 18 12       	r1 = uextra(r2, p:3, l:23)
 1e077cc:    50 b2             	r0 |= r1
 1e077ce:    00 b1             	r0 = r0 + r4
 1e077d0:    21 fd 01 09       	r1 = r0 & 1
 1e077d4:    43 e0 01 00       	if (r3 == 4) goto 2 <__addsf3+0x12C : 1e077da >
 1e077d8:    01 70             	r1 = 0
 1e077da:    02 b2             	r2 = r1 + r0
 1e077dc:    12 18             	goto 36 <__addsf3+0x154 : 1e07802 >
 1e077de:    21 ff ff 38 0b 00 	if (r3 != 2139095040) goto 22 <__addsf3+0x14C : 1e077fa >
 1e077e4:    d1 b0             	r1 ^= r0
 1e077e6:    21 ff 80 1c 03 00 	if (r1 != 2147483648) goto 6 <__addsf3+0x144 : 1e077f2 >
 1e077ec:    c0 ff 00 00 c0 7f 	r0 = 2143289344 <uECC_vli_cmp_unsafe+0x1AF9004 : 1c00000 >
 1e077f2:    02 08             	r2 = r0
 1e077f4:    06 18             	goto 12 <__addsf3+0x154 : 1e07802 >
 1e077f6:    02 70             	r2 = 0
 1e077f8:    04 18             	goto 8 <__addsf3+0x154 : 1e07802 >
 1e077fa:    21 ff ff 58 03 00 	if (r5 != 2139095040) goto 6 <__addsf3+0x158 : 1e07806 >
 1e07800:    12 08             	r2 = r1
 1e07802:    20 08             	r0 = r2
 1e07804:    57 01             	{pc, r7-r4} = [sp++]
 1e07806:    03 26             	if (r3 == 0) goto 6 <__addsf3+0x160 : 1e0780e >
 1e07808:    02 08             	r2 = r0
 1e0780a:    62 3b             	if (r5 != 0) goto -316 <__addsf3+0x22 : 1e076d0 >
 1e0780c:    fa 1f             	goto -12 <__addsf3+0x154 : 1e07802 >
 1e0780e:    12 08             	r2 = r1
 1e07810:    f8 3b             	if (r5 != 0) goto -16 <__addsf3+0x154 : 1e07802 >
 1e07812:    e2 fd 00 21       	r2 = r1 & r0
 1e07816:    f5 1f             	goto -22 <__addsf3+0x154 : 1e07802 >


__fixsfsi:
 1e07818:    74 01             	[--sp] = {rets, r4}
 1e0781a:    01 08             	r1 = r0
 1e0781c:    88 fd b8 21       	r2 = uextra(r1, p:23, l:8)
 1e07820:    00 70             	r0 = 0
 1e07822:    f2 e7 1e 30       	if (r2 < 127) goto 60 <__fixsfsi+0x4A : 1e07862 >
 1e07826:    23 fc 81 ff       	r3 = r2 + -127
 1e0782a:    c8 df             	r0 = r1 >>> 31
 1e0782c:    10 b0             	r0 |= 1
 1e0782e:    03 e2 05 30       	if (r3 < 32) goto 10 <__fixsfsi+0x24 : 1e0783c >
 1e07832:    10 e0 0e 00       	if (r0 == 1) goto 28 <__fixsfsi+0x3A : 1e07852 >
 1e07836:    20 fb 80 0c       	r0 = 2147483648
 1e0783a:    54 01             	{pc, r4} = [sp++]
 1e0783c:    c4 ff ff ff 7f 00 	r4 = 8388607 <uECC_vli_cmp_unsafe+0x6F9003 : 7fffff >
 1e07842:    51 b9             	r1 &= r4
 1e07844:    91 bb             	r1 |= 8388608
 1e07846:    63 e1 08 c0       	ifs (r3 > 22) goto 16 <__fixsfsi+0x42 : 1e0785a >
 1e0784a:    62 fb 96 29       	r2 = 150 - r2
 1e0784e:    a1 0c             	r1 >>= r2
 1e07850:    07 18             	goto 14 <__fixsfsi+0x48 : 1e07860 >
 1e07852:    c0 ff ff ff ff 7f 	r0 = 2147483647 <bank_code_load_addr+0x1DCA07 : 1ffffff >
 1e07858:    54 01             	{pc, r4} = [sp++]
 1e0785a:    22 fc 6a ff       	r2 = r2 + -150
 1e0785e:    81 0c             	r1 <<= r2
 1e07860:    08 0e             	r0 = r1 * r0
 1e07862:    54 01             	{pc, r4} = [sp++]


__floatsisf:
 1e07864:    75 01             	[--sp] = {rets, r5, r4}
 1e07866:    10 20             	if (r0 == 0) goto 32 <__floatsisf+0x24 : 1e07888 >
 1e07868:    c1 df             	r1 = r0 >>> 31
 1e0786a:    42 b0             	r2 = r0 + r1
 1e0786c:    d2 b2             	r2 ^= r1
 1e0786e:    e8 fd 00 12       	r1 = clz(r2)
 1e07872:    11 fd 1f 19       	r1 = r1 ^ 31
 1e07876:    20 fd 80 0c       	r0 = r0 & 2147483648
 1e0787a:    71 e1 07 80       	if (r1 > 23) goto 14 <__floatsisf+0x28 : 1e0788c >
 1e0787e:    63 fb 17 19       	r3 = 23 - r1
 1e07882:    c2 0c             	r2 <<= r3
 1e07884:    b2 bb             	r2 ^= 8388608
 1e07886:    18 18             	goto 48 <__floatsisf+0x54 : 1e078b8 >
 1e07888:    00 70             	r0 = 0
 1e0788a:    55 01             	{pc, r5, r4} = [sp++]
 1e0788c:    63 fb 37 19       	r3 = 55 - r1
 1e07890:    f8 fd 30 42       	r4 = r2 << r3
 1e07894:    13 70             	r3 = 1
 1e07896:    28 ff 80 4c 01 00 	if (r4 > 2147483648) goto 2 <__floatsisf+0x3A : 1e0789e >
 1e0789c:    03 70             	r3 = 0
 1e0789e:    15 fc e9 ff       	r5 = r1 + -23
 1e078a2:    62 0d             	r2 >>= r5
 1e078a4:    85 b6             	r5 = r3 + r2
 1e078a6:    25 fd 01 59       	r5 = r5 & 1
 1e078aa:    20 ff 80 4c 01 00 	if (r4 == 2147483648) goto 2 <__floatsisf+0x4E : 1e078b2 >
 1e078b0:    05 70             	r5 = 0
 1e078b2:    b2 bb             	r2 ^= 8388608
 1e078b4:    c2 b4             	r2 = r2 + r3
 1e078b6:    42 b5             	r2 = r2 + r5
 1e078b8:    c9 c5             	r1 = r1 << 23
 1e078ba:    81 b2             	r1 = r1 + r2
 1e078bc:    41 fb 7e 18       	r1 = r1 + 1065353216
 1e078c0:    50 b2             	r0 |= r1
 1e078c2:    55 01             	{pc, r5, r4} = [sp++]


__floatunsisf:
 1e078c4:    74 01             	[--sp] = {rets, r4}
 1e078c6:    0b 20             	if (r0 == 0) goto 22 <__floatunsisf+0x1A : 1e078de >
 1e078c8:    e8 fd 00 10       	r1 = clz(r0)
 1e078cc:    11 fd 1f 19       	r1 = r1 ^ 31
 1e078d0:    71 e1 07 80       	if (r1 > 23) goto 14 <__floatunsisf+0x1E : 1e078e2 >
 1e078d4:    62 fb 17 19       	r2 = 23 - r1
 1e078d8:    80 0c             	r0 <<= r2
 1e078da:    b0 bb             	r0 ^= 8388608
 1e078dc:    18 18             	goto 48 <__floatunsisf+0x4A : 1e0790e >
 1e078de:    00 70             	r0 = 0
 1e078e0:    54 01             	{pc, r4} = [sp++]
 1e078e2:    62 fb 37 19       	r2 = 55 - r1
 1e078e6:    f8 fd 20 30       	r3 = r0 << r2
 1e078ea:    12 70             	r2 = 1
 1e078ec:    28 ff 80 3c 01 00 	if (r3 > 2147483648) goto 2 <__floatunsisf+0x30 : 1e078f4 >
 1e078f2:    02 70             	r2 = 0
 1e078f4:    14 fc e9 ff       	r4 = r1 + -23
 1e078f8:    20 0d             	r0 >>= r4
 1e078fa:    04 b4             	r4 = r2 + r0
 1e078fc:    24 fd 01 49       	r4 = r4 & 1
 1e07900:    20 ff 80 3c 01 00 	if (r3 == 2147483648) goto 2 <__floatunsisf+0x44 : 1e07908 >
 1e07906:    04 70             	r4 = 0
 1e07908:    b0 bb             	r0 ^= 8388608
 1e0790a:    80 b0             	r0 = r0 + r2
 1e0790c:    00 b1             	r0 = r0 + r4
 1e0790e:    c9 c5             	r1 = r1 << 23
 1e07910:    40 b0             	r0 = r0 + r1
 1e07912:    40 fb 7e 08       	r0 = r0 + 1065353216
 1e07916:    54 01             	{pc, r4} = [sp++]


__muldi3:
 1e07918:    76 01             	[--sp] = {rets, r6-r4}
 1e0791a:    89 0e             	r1 = r1 * r2
 1e0791c:    80 fe 00 13       	r1 += r3 * r0
 1e07920:    03 d4             	r3 = r0 >> 16
 1e07922:    14 d4             	r4 = r2 >> 16
 1e07924:    80 fe 30 14       	r1 += r4 * r3
 1e07928:    20 04             	r0 = r0.l (u)
 1e0792a:    a2 04             	r2 = r2.l (u)
 1e0792c:    15 0e             	r5 = r2 * r0
 1e0792e:    2e d4             	r6 = r5 >> 16
 1e07930:    80 fe 30 62       	r6 += r2 * r3
 1e07934:    32 d4             	r2 = r6 >> 16
 1e07936:    81 b2             	r1 = r1 + r2
 1e07938:    a2 05             	r2 = r6.l (u)
 1e0793a:    80 fe 00 24       	r2 += r4 * r0
 1e0793e:    12 d4             	r2 = r2 >> 16
 1e07940:    81 b2             	r1 = r1 + r2
 1e07942:    80 fe 00 64       	r6 += r4 * r0
 1e07946:    60 05             	r0 = r5.l (u)
 1e07948:    d0 fd 80 06       	r0 <= insert(r6, p:16, l:16)
 1e0794c:    56 01             	{pc, r6-r4} = [sp++]


__subsf3:
 1e0794e:    11 fd 80 1c       	r1 = r1 ^ 2147483648
 1e07952:    ff f3 ac fe       	goto -680 <__addsf3 : 1e076ae >


__udivdi3:
 1e07956:    74 01             	[--sp] = {rets, r4}
 1e07958:    fe 0b             	sp += -4
 1e0795a:    04 70             	r4 = 0
 1e0795c:    0c 02             	[sp] = r4
 1e0795e:    80 f3 02 00       	call 4 <__udivmoddi4 : 1e07966 >
 1e07962:    02 0a             	sp += 4
 1e07964:    54 01             	{pc, r4} = [sp++]


__udivmoddi4:
 1e07966:    7e 01             	[--sp] = {rets, r14-r4}
 1e07968:    08 f5 30 00       	r8 = [sp+48]
 1e0796c:    10 22             	if (r1 == 0) goto 32 <__udivmoddi4+0x28 : 1e0798e >
 1e0796e:    19 24             	if (r2 == 0) goto 50 <__udivmoddi4+0x3C : 1e079a2 >
 1e07970:    33 26             	if (r3 == 0) goto 102 <__udivmoddi4+0x72 : 1e079d8 >
 1e07972:    e8 fd 00 41       	r4 = clz(r1)
 1e07976:    e8 fd 00 53       	r5 = clz(r3)
 1e0797a:    24 bb             	r4 = r5 - r4
 1e0797c:    04 e2 48 30       	if (r4 < 32) goto 144 <__udivmoddi4+0xAA : 1e07a10 >
 1e07980:    08 e0 56 00       	if (r8 == 0) goto 172 <__udivmoddi4+0xCA : 1e07a30 >
 1e07984:    10 f6 00 80       	[r8 + 0] = r0
 1e07988:    11 f6 04 80       	[r8 + 4] = r1
 1e0798c:    51 18             	goto 162 <__udivmoddi4+0xCA : 1e07a30 >
 1e0798e:    34 26             	if (r3 == 0) goto 104 <__udivmoddi4+0x92 : 1e079f8 >
 1e07990:    08 e0 4e 00       	if (r8 == 0) goto 156 <__udivmoddi4+0xCA : 1e07a30 >
 1e07994:    01 70             	r1 = 0
 1e07996:    11 f6 04 80       	[r8 + 4] = r1
 1e0799a:    10 f6 00 80       	[r8 + 0] = r0
 1e0799e:    00 70             	r0 = 0
 1e079a0:    5e 01             	{pc, r14-r4} = [sp++]
 1e079a2:    3d 26             	if (r3 == 0) goto 122 <__udivmoddi4+0xB8 : 1e07a1e >
 1e079a4:    54 20             	if (r0 == 0) goto 168 <__udivmoddi4+0xE8 : 1e07a4e >
 1e079a6:    34 fc ff ff       	r4 = r3 + -1
 1e079aa:    34 f0 81 00       	if ((r4 & r3) == 0) goto 258 <__udivmoddi4+0x14A : 1e07ab0 >
 1e079ae:    e8 fd 00 41       	r4 = clz(r1)
 1e079b2:    e8 fd 00 53       	r5 = clz(r3)
 1e079b6:    24 bb             	r4 = r5 - r4
 1e079b8:    f4 e1 e2 2f       	if (r4 >= 31) goto -60 <__udivmoddi4+0x1A : 1e07980 >
 1e079bc:    1c 98             	r12 = r4 + 1
 1e079be:    fa fd c0 90       	r9 = r0 >> r12
 1e079c2:    64 fb 1f 49       	r4 = 31 - r4
 1e079c6:    f8 fd 40 71       	r7 = r1 << r4
 1e079ca:    fa fd c0 b1       	r11 = r1 >> r12
 1e079ce:    e0 fd 90 17       	r1 = r7 | r9
 1e079d2:    00 0d             	r0 <<= r4
 1e079d4:    0d 70             	r13 = 0
 1e079d6:    8b 18             	goto 278 <__udivmoddi4+0x188 : 1e07aee >
 1e079d8:    24 fc ff ff       	r4 = r2 + -1
 1e079dc:    24 f0 43 00       	if ((r4 & r2) == 0) goto 134 <__udivmoddi4+0x100 : 1e07a66 >
 1e079e0:    e8 fd 00 41       	r4 = clz(r1)
 1e079e4:    e8 fd 00 52       	r5 = clz(r2)
 1e079e8:    15 82             	r5 += 33
 1e079ea:    2c bb             	r12 = r5 - r4
 1e079ec:    0b 70             	r11 = 0
 1e079ee:    0c e2 50 10       	if (r12 != 32) goto 160 <__udivmoddi4+0x12C : 1e07a92 >
 1e079f2:    0d 70             	r13 = 0
 1e079f4:    0c 72             	r12 = 32
 1e079f6:    7b 18             	goto 246 <__udivmoddi4+0x188 : 1e07aee >
 1e079f8:    08 e0 06 00       	if (r8 == 0) goto 12 <__udivmoddi4+0xA2 : 1e07a08 >
 1e079fc:    c1 f4 00 89       	[r8 + 4] = 0
 1e07a00:    d0 fe 20 10       	r1 = r0 % r2 (u)
 1e07a04:    11 f6 00 80       	[r8 + 0] = r1
 1e07a08:    c0 fe 20 00       	r0 = r0 / r2 (u)
 1e07a0c:    01 70             	r1 = 0
 1e07a0e:    5e 01             	{pc, r14-r4} = [sp++]
 1e07a10:    1c 98             	r12 = r4 + 1
 1e07a12:    0d 70             	r13 = 0
 1e07a14:    0c e2 0f 10       	if (r12 != 32) goto 30 <__udivmoddi4+0xD0 : 1e07a36 >
 1e07a18:    0b 70             	r11 = 0
 1e07a1a:    0c 72             	r12 = 32
 1e07a1c:    68 18             	goto 208 <__udivmoddi4+0x188 : 1e07aee >
 1e07a1e:    08 e0 07 00       	if (r8 == 0) goto 14 <__udivmoddi4+0xCA : 1e07a30 >
 1e07a22:    00 70             	r0 = 0
 1e07a24:    10 f6 04 80       	[r8 + 4] = r0
 1e07a28:    10 f6 00 80       	[r8 + 0] = r0
 1e07a2c:    01 70             	r1 = 0
 1e07a2e:    5e 01             	{pc, r14-r4} = [sp++]
 1e07a30:    00 70             	r0 = 0
 1e07a32:    01 70             	r1 = 0
 1e07a34:    5e 01             	{pc, r14-r4} = [sp++]
 1e07a36:    fa fd c0 90       	r9 = r0 >> r12
 1e07a3a:    64 fb 1f 49       	r4 = 31 - r4
 1e07a3e:    f8 fd 40 a1       	r10 = r1 << r4
 1e07a42:    fa fd c0 b1       	r11 = r1 >> r12
 1e07a46:    e0 fd 90 1a       	r1 = r10 | r9
 1e07a4a:    00 0d             	r0 <<= r4
 1e07a4c:    50 18             	goto 160 <__udivmoddi4+0x188 : 1e07aee >
 1e07a4e:    08 e0 06 00       	if (r8 == 0) goto 12 <__udivmoddi4+0xF8 : 1e07a5e >
 1e07a52:    c0 f4 00 89       	[r8 + 0] = 0
 1e07a56:    d0 fe 30 01       	r0 = r1 % r3 (u)
 1e07a5a:    10 f6 04 80       	[r8 + 4] = r0
 1e07a5e:    c0 fe 30 01       	r0 = r1 / r3 (u)
 1e07a62:    01 70             	r1 = 0
 1e07a64:    5e 01             	{pc, r14-r4} = [sp++]
 1e07a66:    08 e0 06 00       	if (r8 == 0) goto 12 <__udivmoddi4+0x110 : 1e07a76 >
 1e07a6a:    c1 f4 00 89       	[r8 + 4] = 0
 1e07a6e:    e2 fd 00 34       	r3 = r4 & r0
 1e07a72:    13 f6 00 80       	[r8 + 0] = r3
 1e07a76:    12 e0 71 00       	if (r2 == 1) goto 226 <__udivmoddi4+0x1F6 : 1e07b5c >
 1e07a7a:    e3 fd 20 24       	r2 = r4 & ~r2
 1e07a7e:    e8 fd 00 22       	r2 = clz(r2)
 1e07a82:    f8 fd 20 31       	r3 = r1 << r2
 1e07a86:    62 fb 20 29       	r2 = 32 - r2
 1e07a8a:    a0 0c             	r0 >>= r2
 1e07a8c:    50 b6             	r0 |= r3
 1e07a8e:    a1 0c             	r1 >>= r2
 1e07a90:    5e 01             	{pc, r14-r4} = [sp++]
 1e07a92:    fc e1 1f 80       	if (r12 > 31) goto 62 <__udivmoddi4+0x16E : 1e07ad4 >
 1e07a96:    fa fd c0 90       	r9 = r0 >> r12
 1e07a9a:    67 fb 20 c9       	r7 = 32 - r12
 1e07a9e:    f8 fd 70 41       	r4 = r1 << r7
 1e07aa2:    fa fd c0 b1       	r11 = r1 >> r12
 1e07aa6:    e0 fd 90 14       	r1 = r4 | r9
 1e07aaa:    c0 0d             	r0 <<= r7
 1e07aac:    0d 70             	r13 = 0
 1e07aae:    1f 18             	goto 62 <__udivmoddi4+0x188 : 1e07aee >
 1e07ab0:    08 e0 06 00       	if (r8 == 0) goto 12 <__udivmoddi4+0x15A : 1e07ac0 >
 1e07ab4:    10 f6 00 80       	[r8 + 0] = r0
 1e07ab8:    e2 fd 10 04       	r0 = r4 & r1
 1e07abc:    10 f6 04 80       	[r8 + 4] = r0
 1e07ac0:    e3 fd 30 04       	r0 = r4 & ~r3
 1e07ac4:    e8 fd 00 00       	r0 = clz(r0)
 1e07ac8:    60 fb 20 09       	r0 = 32 - r0
 1e07acc:    fa fd 00 01       	r0 = r1 >> r0
 1e07ad0:    01 70             	r1 = 0
 1e07ad2:    5e 01             	{pc, r14-r4} = [sp++]
 1e07ad4:    c4 fc e0 ff       	r4 = r12 + -32
 1e07ad8:    fa fd 40 90       	r9 = r0 >> r4
 1e07adc:    67 fb 40 c9       	r7 = 64 - r12
 1e07ae0:    f8 fd 70 a1       	r10 = r1 << r7
 1e07ae4:    f8 fd 70 d0       	r13 = r0 << r7
 1e07ae8:    e0 fd 90 0a       	r0 = r10 | r9
 1e07aec:    21 0d             	r1 >>= r4
 1e07aee:    f4 07             	r4 = -1
 1e07af0:    59 fb 01 29       	r9 = r2 - 1
 1e07af4:    a0 fb 40 a3       	r10 = r3 + r4 + c
 1e07af8:    0e 70             	r14 = 0
 1e07afa:    1e 18             	goto 60 <__udivmoddi4+0x1D2 : 1e07b38 >
 1e07afc:    c6 d7             	r6 = r0 >> 31
 1e07afe:    df fd 08 61       	r6 <= insert(r1, p:1, l:31)
 1e07b02:    cd d7             	r5 = r1 >> 31
 1e07b04:    df fd 08 5b       	r5 <= insert(r11, p:1, l:31)
 1e07b08:    90 fb 60 19       	r1 = r9 - r6
 1e07b0c:    b0 fb 50 1a       	r1 = r10 - r5 - !c
 1e07b10:    cf df             	r7 = r1 >>> 31
 1e07b12:    e2 fd 20 17       	r1 = r7 & r2
 1e07b16:    e2 fd 30 47       	r4 = r7 & r3
 1e07b1a:    61 bc             	r1 = r6 - r1
 1e07b1c:    b0 fb 40 b5       	r11 = r5 - r4 - !c
 1e07b20:    f0 fd 08 4d       	r4 = r13 << 1
 1e07b24:    f2 fd f8 5d       	r5 = r13 >> 31
 1e07b28:    e0 fd 40 de       	r13 = r14 | r4
 1e07b2c:    2e fd 01 79       	r14 = r7 & 1
 1e07b30:    df fd 08 50       	r5 <= insert(r0, p:1, l:31)
 1e07b34:    fc 8f             	r12 += -1
 1e07b36:    50 08             	r0 = r5
 1e07b38:    0c e0 e0 1f       	if (r12 != 0) goto -64 <__udivmoddi4+0x196 : 1e07afc >
 1e07b3c:    f2 fd f8 2d       	r2 = r13 >> 31
 1e07b40:    df fd 08 20       	r2 <= insert(r0, p:1, l:31)
 1e07b44:    f0 fd 08 0d       	r0 = r13 << 1
 1e07b48:    08 e0 04 00       	if (r8 == 0) goto 8 <__udivmoddi4+0x1EE : 1e07b54 >
 1e07b4c:    1b f6 04 80       	[r8 + 4] = r11
 1e07b50:    11 f6 00 80       	[r8 + 0] = r1
 1e07b54:    70 b0             	r0 &= 4294967294
 1e07b56:    e0 fd e0 00       	r0 = r0 | r14
 1e07b5a:    21 08             	r1 = r2
 1e07b5c:    5e 01             	{pc, r14-r4} = [sp++]


__umoddi3:
 1e07b5e:    74 01             	[--sp] = {rets, r4}
 1e07b60:    fa 0b             	sp += -12
 1e07b62:    44 a0             	r4 = sp + 4
 1e07b64:    0c 02             	[sp] = r4
 1e07b66:    bf f3 fe fe       	call -516 <__udivmoddi4 : 1e07966 >
 1e07b6a:    21 02             	r1 = [sp+8]
 1e07b6c:    10 02             	r0 = [sp+4]
 1e07b6e:    06 0a             	sp += 12
 1e07b70:    54 01             	{pc, r4} = [sp++]


btstack_code_start:
 1e07b72:    00 00             	nop


a2dp_source_media_codec_end:
 1e07b74:    01 00             	nop
 1e07b76:    00 00             	nop
 1e07b78:    26 be             	r6 = r7 - r0
 1e07b7a:    e0 01             	[--sp] = {psr}
 1e07b7c:    42 be             	r2 = r7 + r1
 1e07b7e:    e0 01             	[--sp] = {psr}
 1e07b80:    44 be             	r4 = r7 + r1
 1e07b82:    e0 01             	[--sp] = {psr}
 1e07b84:    00 00             	nop
 1e07b86:    00 00             	nop
 1e07b88:    c8 be             	r8 = r7 + r3
 1e07b8a:    e0 01             	[--sp] = {psr}
 1e07b8c:    00 00             	nop
 1e07b8e:    00 00             	nop


sdp_record_item_begin:
 1e07b90:    00 00             	nop
 1e07b92:    00 00             	nop
 1e07b94:    0a 00             	ssync
 1e07b96:    01 00             	nop
 1e07b98:    54 7c             	r4 = 197
 1e07b9a:    e0 01             	[--sp] = {psr}


sdp_record_item_end:
 1e07b9c:    ce ae             	r14 = sp + 236
 1e07b9e:    e0 01             	[--sp] = {psr}
 1e07ba0:    e4 ae             	r4 = sp + 238
 1e07ba2:    e0 01             	[--sp] = {psr}
 1e07ba4:    00 af             	r0 = sp + 240
 1e07ba6:    e0 01             	[--sp] = {psr}


bt_suspend_a2dp_resumea2dp_release:
 1e07ba8:    04 be             	r4 = r7 + r0
 1e07baa:    e0 01             	[--sp] = {psr}
 1e07bac:    08 be             	r8 = r7 + r0
 1e07bae:    e0 01             	[--sp] = {psr}
 1e07bb0:    0c be             	r12 = r7 + r0
 1e07bb2:    e0 01             	[--sp] = {psr}


bt_suspend_avctp_resumeavctp_release:
 1e07bb4:    ca be             	r10 = r7 + r3
 1e07bb6:    e0 01             	[--sp] = {psr}
 1e07bb8:    ce be             	r14 = r7 + r3
 1e07bba:    e0 01             	[--sp] = {psr}
 1e07bbc:    d2 be             	r2 ^= r7
 1e07bbe:    e0 01             	[--sp] = {psr}


bt_suspend_hfp_resumehfp_release:
 1e07bc0:    d8 be             	r8 ^= r7
 1e07bc2:    e0 01             	[--sp] = {psr}
 1e07bc4:    dc be             	r12 ^= r7
 1e07bc6:    e0 01             	[--sp] = {psr}
 1e07bc8:    e0 be             	r0 = r7 - r3
 1e07bca:    e0 01             	[--sp] = {psr}


bt_suspend_hid_resumehid_release:
 1e07bcc:    e4 be             	r4 = r7 - r3
 1e07bce:    e0 01             	[--sp] = {psr}
 1e07bd0:    e8 be             	r8 = r7 - r3
 1e07bd2:    e0 01             	[--sp] = {psr}
 1e07bd4:    ec be             	r12 = r7 - r3
 1e07bd6:    e0 01             	[--sp] = {psr}


bt_suspend_spp_resumespp_release:
 1e07bd8:    f0 be             	r0 &= 3758096383
 1e07bda:    e0 01             	[--sp] = {psr}
 1e07bdc:    f4 be             	r4 &= 3758096383
 1e07bde:    e0 01             	[--sp] = {psr}
 1e07be0:    f8 be             	r8 &= 3758096383
 1e07be2:    e0 01             	[--sp] = {psr}


bt_suspend_sdp_resumesdp_release:
 1e07be4:    fc be             	r12 &= 3758096383
 1e07be6:    e0 01             	[--sp] = {psr}
 1e07be8:    00 bf             	r0 = r7 + r4
 1e07bea:    e0 01             	[--sp] = {psr}
 1e07bec:    04 bf             	r4 = r7 + r4
 1e07bee:    e0 01             	[--sp] = {psr}


bt_suspend_iap_resumeiap_release:
 1e07bf0:    08 bf             	r8 = r7 + r4
 1e07bf2:    e0 01             	[--sp] = {psr}
 1e07bf4:    0c bf             	r12 = r7 + r4
 1e07bf6:    e0 01             	[--sp] = {psr}
 1e07bf8:    10 bf             	r0 |= 1073741824
 1e07bfa:    e0 01             	[--sp] = {psr}


l2cap_signaling_commands_format:
 1e07bfc:    40 57             	r0 = h[r3 + 40] (u)
 1e07bfe:    e1 01             	[--sp] = {psr, reti}
 1e07c00:    e0 3e             	if (r7 != 0) goto 448 <user_data_cbuf_is_write_able+0x58 : 1e07dc2 >
 1e07c02:    e1 01             	[--sp] = {psr, reti}
 1e07c04:    44 57             	r4 = h[r3 + 40] (u)
 1e07c06:    e1 01             	[--sp] = {psr, reti}
 1e07c08:    3f 57             	h[r3 + 38] = r7
 1e07c0a:    e1 01             	[--sp] = {psr, reti}
 1e07c0c:    3e 57             	h[r3 + 38] = r6
 1e07c0e:    e1 01             	[--sp] = {psr, reti}
 1e07c10:    e0 3e             	if (r7 != 0) goto 448 <user_data_cbuf_is_write_able+0x68 : 1e07dd2 >
 1e07c12:    e1 01             	[--sp] = {psr, reti}
 1e07c14:    e0 3e             	if (r7 != 0) goto 448 <user_data_cbuf_is_write_able+0x6C : 1e07dd6 >
 1e07c16:    e1 01             	[--sp] = {psr, reti}
 1e07c18:    41 57             	r1 = h[r3 + 40] (u)
 1e07c1a:    e1 01             	[--sp] = {psr, reti}
 1e07c1c:    41 57             	r1 = h[r3 + 40] (u)
 1e07c1e:    e1 01             	[--sp] = {psr, reti}
 1e07c20:    30 59             	r0 = h[r4 + 38] (u)
 1e07c22:    e1 01             	[--sp] = {psr, reti}
 1e07c24:    3f 57             	h[r3 + 38] = r7
 1e07c26:    e1 01             	[--sp] = {psr, reti}
 1e07c28:    00 00             	nop
 1e07c2a:    00 00             	nop
 1e07c2c:    00 00             	nop
 1e07c2e:    00 00             	nop
 1e07c30:    00 00             	nop
 1e07c32:    00 00             	nop
 1e07c34:    00 00             	nop
 1e07c36:    00 00             	nop
 1e07c38:    00 00             	nop
 1e07c3a:    00 00             	nop
 1e07c3c:    00 00             	nop
 1e07c3e:    00 00             	nop
 1e07c40:    44 57             	r4 = h[r3 + 40] (u)
 1e07c42:    e1 01             	[--sp] = {psr, reti}
 1e07c44:    30 59             	r0 = h[r4 + 38] (u)
 1e07c46:    e1 01             	[--sp] = {psr, reti}
 1e07c48:    43 57             	r3 = h[r3 + 40] (u)
 1e07c4a:    e1 01             	[--sp] = {psr, reti}
 1e07c4c:    43 57             	r3 = h[r3 + 40] (u)
 1e07c4e:    e1 01             	[--sp] = {psr, reti}
 1e07c50:    e0 3e             	if (r7 != 0) goto 448 <user_data_att_send+0x22 : 1e07e12 >
 1e07c52:    e1 01             	[--sp] = {psr, reti}


sdp_pnp_service_data:
 1e07c54:    36 00             	[--sp] = rets
 1e07c56:    34 09             	r4 += r3
 1e07c58:    00 00             	nop
 1e07c5a:    0a 00             	ssync
 1e07c5c:    01 00             	nop
 1e07c5e:    0a 09             	r10 += r0
 1e07c60:    00 01             	{r3-r0} = [sp++]
 1e07c62:    36 00             	[--sp] = rets
 1e07c64:    03 19             	goto 518 <user_data_att_send+0x7C : 1e07e6c >
 1e07c66:    12 00             	lockclr
 1e07c68:    09 02             	[sp] = r1
 1e07c6a:    00 09             	r0 += r0
 1e07c6c:    01 03             	r1 = [sp+64]
 1e07c6e:    09 02             	[sp] = r1
 1e07c70:    01 09             	r1 += r0
 1e07c72:    05 d6             	r5 = r0 >> 24
 1e07c74:    09 02             	[sp] = r1
 1e07c76:    02 09             	r2 += r0
 1e07c78:    00 0a             	sp += 0
 1e07c7a:    09 02             	[sp] = r1
 1e07c7c:    03 09             	r3 += r0
 1e07c7e:    02 40             	r2 = [r0 + 0]
 1e07c80:    09 02             	[sp] = r1
 1e07c82:    04 28             	if (r4 == 0) goto 8 <sdp_pnp_service_data+0x38 : 1e07c8c >
 1e07c84:    01 09             	r1 += r0
 1e07c86:    02 05             	r2 = r4.b0 (u)
 1e07c88:    09 00             	csync
 1e07c8a:    01 00             	nop
 1e07c8c:    00 06             	r0 = -32


own_private_linkkey:
 1e07c8d:    06 77             	r6 = 112
 1e07c8f:    5f 87             	r15 += 117
 1e07c91:    91 8d             	r1 += -39
 1e07c93:    d4 23             	if (r1 == 0) goto -88 <l2cap_signaling_commands_format+0x41 : 1e07c3d >
 1e07c95:    00 5d             	r0 = h[r6 + 32] (u)
 1e07c97:    f1 d8             	r1 = r6 >>> 3
 1e07c99:    cf 0c             	r15 <<= r3
 1e07c9b:    14 2b             	if (r5 == 0) goto -472 <__udivmoddi4+0x15F : 1e07ac5 >
 1e07c9d:    00 00             	nop


crc_ta:
 1e07c9e:    00 00             	nop
 1e07ca0:    21 10             	call 66 <btstack_linked_list_iterator_has_next+0x18 : 1e07ce4 >
 1e07ca2:    42 20             	if (r0 == 0) goto 132 <le_hci_connection_for_handle+0x20 : 1e07d28 >
 1e07ca4:    63 30             	if (r0 != 0) goto 198 <user_data_cbuf_is_write_able+0x2 : 1e07d6c >
 1e07ca6:    84 40             	r4 = [r0 + 32]
 1e07ca8:    a5 50             	r5 = h[r0 + 20] (u)
 1e07caa:    c6 60             	r6 = b[r0 + 12] (u)
 1e07cac:    e7 70             	r7 = 14
 1e07cae:    08 81             	r8 += 16
 1e07cb0:    29 91             	r9 = r0 + 18
 1e07cb2:    4a a1             	r10 = sp + 20
 1e07cb4:    6b b1             	r11 = r0 - r5
 1e07cb6:    8c c1             	r4 = r1 << 6
 1e07cb8:    ad d1             	r5 = r5 >> 6
 1e07cba:    ce e1 ef f1       	if (r14 ?? 28) goto 990 <ble_user_cmd_prepare+0x22 : 1e0809c >


little_endian_read_16:
 1e07cbe:    10 09             	r0 += r1			  ## utils.c:69:0
 1e07cc0:    11 60             	r1 = b[r0 + 1] (u)			  ## utils.c:70:40
 1e07cc2:    00 60             	r0 = b[r0 + 0] (u)			  ## utils.c:70:12
 1e07cc4:    d8 fd 40 01       	r0 <= insert(r1, p:8, l:24)			  ## utils.c:70:37
 1e07cc8:    20 04             	r0 = r0.l (u)			  ## utils.c:70:5
 1e07cca:    20 00             	rts			  ## utils.c:70:5


btstack_linked_list_iterator_has_next:
 1e07ccc:    01 40             	r1 = [r0 + 0]			  ## btstack_linked_list.c:167:0
 1e07cce:    06 22             	if (r1 == 0) goto 12 <btstack_linked_list_iterator_has_next+0x10 : 1e07cdc >			  ## btstack_linked_list.c:169:14
 1e07cd0:    11 40             	r1 = [r0 + 4]			  ## btstack_linked_list.c:172:13
 1e07cd2:    01 42             	r1 = [r1 + 0]			  ## btstack_linked_list.c:172:19
 1e07cd4:    20 40             	r0 = [r0 + 8]			  ## btstack_linked_list.c:172:31
 1e07cd6:    01 f2 03 10       	if (r1 != r0) goto 6 <btstack_linked_list_iterator_has_next+0x14 : 1e07ce0 >
 1e07cda:    01 18             	goto 2 <btstack_linked_list_iterator_has_next+0x12 : 1e07cde >
 1e07cdc:    81 90             	r1 = r0 + 8			  ## btstack_linked_list.c:170:20
 1e07cde:    01 42             	r1 = [r1 + 0]
 1e07ce0:    10 70             	r0 = 1
 1e07ce2:    01 32             	if (r1 != 0) goto 2 <btstack_linked_list_iterator_has_next+0x1A : 1e07ce6 >
 1e07ce4:    00 70             	r0 = 0
 1e07ce6:    20 00             	rts			  ## btstack_linked_list.c:178:1


btstack_linked_list_iterator_next:
 1e07ce8:    01 40             	r1 = [r0 + 0]			  ## btstack_linked_list.c:181:0
 1e07cea:    09 22             	if (r1 == 0) goto 18 <btstack_linked_list_iterator_next+0x16 : 1e07cfe >			  ## btstack_linked_list.c:182:9
 1e07cec:    11 40             	r1 = [r0 + 4]			  ## btstack_linked_list.c:183:17
 1e07cee:    01 42             	r1 = [r1 + 0]			  ## btstack_linked_list.c:183:23
 1e07cf0:    22 40             	r2 = [r0 + 8]			  ## btstack_linked_list.c:183:35
 1e07cf2:    21 f2 02 10       	if (r1 != r2) goto 4 <btstack_linked_list_iterator_next+0x12 : 1e07cfa >			  ## btstack_linked_list.c:183:35
 1e07cf6:    19 40             	[r0 + 4] = r1			  ## btstack_linked_list.c:184:22
 1e07cf8:    01 42             	r1 = [r1 + 0]			  ## btstack_linked_list.c:185:34
 1e07cfa:    29 40             	[r0 + 8] = r1
 1e07cfc:    03 18             	goto 6 <btstack_linked_list_iterator_next+0x1C : 1e07d04 >
 1e07cfe:    c0 f4 01 09       	[r0 + 0] = 1			  ## btstack_linked_list.c:191:29
 1e07d02:    21 40             	r1 = [r0 + 8]			  ## btstack_linked_list.c:191:29
 1e07d04:    10 08             	r0 = r1			  ## btstack_linked_list.c:193:5
 1e07d06:    20 00             	rts			  ## btstack_linked_list.c:193:5


le_hci_connection_for_handle:
 1e07d08:    34 00             	[--sp] = rets			  ## hci_vendor.c:2008:0
 1e07d0a:    fa 0b             	sp += -12			  ## hci_vendor.c:2008:0
 1e07d0c:    03 08             	r3 = r0			  ## hci_vendor.c:2008:0
 1e07d0e:    c0 ff 60 18 00 00 	r0 = 6240 <report_irq_stack_end : 1860 >			  ## btstack_linked_list.c:162:14
 1e07d14:    01 40             	r1 = [r0 + 0]			  ## btstack_linked_list.c:163:16
 1e07d16:    02 70             	r2 = 0			  ## btstack_linked_list.c:163:16
 1e07d18:    0a 02             	[sp] = r2			  ## btstack_linked_list.c:161:25
 1e07d1a:    18 02             	[sp+4] = r0			  ## btstack_linked_list.c:162:14
 1e07d1c:    29 02             	[sp+8] = r1			  ## btstack_linked_list.c:163:14
 1e07d1e:    00 a0             	r0 = sp + 0
 1e07d20:    d5 17             	call -86 <btstack_linked_list_iterator_has_next : 1e07ccc >			  ## hci_vendor.c:2012:16
 1e07d22:    06 20             	if (r0 == 0) goto 12 <le_hci_connection_for_handle+0x28 : 1e07d30 >
 1e07d24:    00 a0             	r0 = sp + 0
 1e07d26:    e0 17             	call -64 <btstack_linked_list_iterator_next : 1e07ce8 >			  ## hci_vendor.c:2013:65
 1e07d28:    21 50             	r1 = h[r0 + 4] (u)			  ## hci_vendor.c:2014:23
 1e07d2a:    31 f2 f8 1f       	if (r1 != r3) goto -16 <le_hci_connection_for_handle+0x16 : 1e07d1e >			  ## hci_vendor.c:2014:23
 1e07d2e:    01 18             	goto 2 <le_hci_connection_for_handle+0x2A : 1e07d32 >			  ## hci_vendor.c:2014:23
 1e07d30:    00 70             	r0 = 0
 1e07d32:    06 0a             	sp += 12
 1e07d34:    30 00             	pc = [sp++]			  ## hci_vendor.c:2021:1


multi_att_get_ccc_config:
 1e07d36:    75 01             	[--sp] = {rets, r5, r4}			  ## att_send.c:260:0
 1e07d38:    c2 ff e0 1b 00 00 	r2 = 7136 <att_s_hdl : 1be0 >			  ## att_send.c:263:9
 1e07d3e:    02 44             	r2 = [r2 + 0]			  ## att_send.c:263:9
 1e07d40:    0e 24             	if (r2 == 0) goto 28 <multi_att_get_ccc_config+0x28 : 1e07d5e >			  ## att_send.c:263:9
 1e07d42:    22 80             	r2 += 2			  ## att_send.c:268:5
 1e07d44:    03 70             	r3 = 0			  ## att_send.c:268:5
 1e07d46:    04 54             	r4 = h[r2 + 0] (u)			  ## att_send.c:269:32
 1e07d48:    25 d1             	r5 = r4 >> 4			  ## att_send.c:269:32
 1e07d4a:    05 f2 04 10       	if (r5 != r0) goto 8 <multi_att_get_ccc_config+0x20 : 1e07d56 >			  ## att_send.c:269:32
 1e07d4e:    05 f7 fe 2f       	r5 = h[r2 + -2] (u)			  ## att_send.c:269:65
 1e07d52:    15 f2 06 00       	if (r5 == r1) goto 12 <multi_att_get_ccc_config+0x2C : 1e07d62 >			  ## att_send.c:269:65
 1e07d56:    13 80             	r3 += 1			  ## att_send.c:268:48
 1e07d58:    42 80             	r2 += 4			  ## att_send.c:268:23
 1e07d5a:    83 e1 f4 bf       	ifs (r3 < 24) goto -24 <multi_att_get_ccc_config+0x10 : 1e07d46 >			  ## att_send.c:268:23
 1e07d5e:    00 70             	r0 = 0
 1e07d60:    02 18             	goto 4 <multi_att_get_ccc_config+0x30 : 1e07d66 >
 1e07d62:    20 fd 0f 49       	r0 = r4 & 15			  ## att_send.c:270:35
 1e07d66:    20 04             	r0 = r0.l (u)			  ## att_send.c:275:1
 1e07d68:    55 01             	{pc, r5, r4} = [sp++]			  ## att_send.c:275:1


user_data_cbuf_is_write_able:
 1e07d6a:    76 01             	[--sp] = {rets, r6-r4}			  ## att_send.c:332:0
 1e07d6c:    c5 ff e0 1b 00 00 	r5 = 7136 <att_s_hdl : 1be0 >			  ## att_send.c:332:0
 1e07d72:    02 4a             	r2 = [r5 + 0]			  ## att_send.c:336:9
 1e07d74:    14 08             	r4 = r1			  ## att_send.c:336:9
 1e07d76:    10 24             	if (r2 == 0) goto 32 <user_data_cbuf_is_write_able+0x2E : 1e07d98 >
 1e07d78:    21 fc 62 00       	r1 = r2 + 98			  ## att_send.c:121:52
 1e07d7c:    02 70             	r2 = 0			  ## att_send.c:121:52
 1e07d7e:    03 70             	r3 = 0			  ## att_send.c:121:52
 1e07d80:    06 f7 fe 1f       	r6 = h[r1 + -2] (u)			  ## att_send.c:121:52
 1e07d84:    b6 d1             	r6 = r6 >> 6			  ## att_send.c:121:52
 1e07d86:    06 f2 09 00       	if (r6 == r0) goto 18 <user_data_cbuf_is_write_able+0x32 : 1e07d9c >			  ## att_send.c:121:13
 1e07d8a:    12 80             	r2 += 1			  ## att_send.c:120:23
 1e07d8c:    13 80             	r3 += 1			  ## att_send.c:120:43
 1e07d8e:    41 80             	r1 += 4			  ## att_send.c:120:23
 1e07d90:    83 e0 f6 bf       	ifs (r3 < 8) goto -20 <user_data_cbuf_is_write_able+0x16 : 1e07d80 >			  ## att_send.c:120:23
 1e07d94:    46 71             	r6 = 20
 1e07d96:    07 18             	goto 14 <user_data_cbuf_is_write_able+0x3C : 1e07da6 >
 1e07d98:    05 70             	r5 = 0
 1e07d9a:    28 18             	goto 80 <user_data_cbuf_is_write_able+0x82 : 1e07dec >
 1e07d9c:    80 04             	r0 = r2.b0 (u)			  ## att_send.c:342:19
 1e07d9e:    46 71             	r6 = 20
 1e07da0:    70 e0 01 80       	if (r0 > 7) goto 2 <user_data_cbuf_is_write_able+0x3C : 1e07da6 >
 1e07da4:    06 52             	r6 = h[r1 + 0] (u)			  ## att_send.c:344:5
 1e07da6:    97 f3 f9 f7       	call 3141618 <local_irq_disable : 106d9c >			  ## att_send.c:350:5
 1e07daa:    00 4a             	r0 = [r5 + 0]			  ## att_send.c:351:17
 1e07dac:    01 f6 9c 00       	r1 = [r0 + 156]			  ## att_send.c:351:17
 1e07db0:    00 f6 98 00       	r0 = [r0 + 152]			  ## att_send.c:351:17
 1e07db4:    80 f3 07 46       	call 35854 <cbuf_get_data_size : 1e109c6 >			  ## att_send.c:351:59
 1e07db8:    21 b2             	r1 = r1 - r0			  ## att_send.c:351:57
 1e07dba:    05 70             	r5 = 0
 1e07dbc:    00 70             	r0 = 0
 1e07dbe:    71 e0 10 30       	if (r1 < 7) goto 32 <user_data_cbuf_is_write_able+0x78 : 1e07de2 >
 1e07dc2:    60 9c             	r0 = r6 + 6			  ## att_send.c:347:46
 1e07dc4:    20 04             	r0 = r0.l (u)			  ## att_send.c:354:28
 1e07dc6:    01 f2 03 20       	if (r1 >= r0) goto 6 <user_data_cbuf_is_write_able+0x66 : 1e07dd0 >			  ## att_send.c:354:16
 1e07dca:    10 fc fa ff       	r0 = r1 + -6			  ## att_send.c:355:27
 1e07dce:    09 18             	goto 18 <user_data_cbuf_is_write_able+0x78 : 1e07de2 >
 1e07dd0:    d0 fe 00 21       	r2 = r1 % r0 (u)			  ## att_send.c:358:31
 1e07dd4:    c0 fe 00 01       	r0 = r1 / r0 (u)			  ## att_send.c:357:28
 1e07dd8:    80 0f             	r0 = r0 * r6			  ## att_send.c:357:41
 1e07dda:    72 e0 02 30       	if (r2 < 7) goto 4 <user_data_cbuf_is_write_able+0x78 : 1e07de2 >
 1e07dde:    20 09             	r0 += r2			  ## att_send.c:360:33
 1e07de0:    a0 8f             	r0 += -6			  ## att_send.c:360:19
 1e07de2:    40 f2 01 30       	if (r0 < r4) goto 2 <user_data_cbuf_is_write_able+0x7E : 1e07de8 >
 1e07de6:    05 08             	r5 = r0			  ## att_send.c:363:9
 1e07de8:    97 f3 d6 f7       	call 3141548 <local_irq_enable : 106d98 >			  ## att_send.c:368:5
 1e07dec:    50 08             	r0 = r5			  ## att_send.c:370:1
 1e07dee:    56 01             	{pc, r6-r4} = [sp++]			  ## att_send.c:370:1


user_data_att_send:
 1e07df0:    7d 01             	[--sp] = {rets, r13-r4}			  ## att_send.c:391:0
 1e07df2:    fc 0b             	sp += -8			  ## att_send.c:391:0
 1e07df4:    c9 ff e0 1b 00 00 	r9 = 7136 <att_s_hdl : 1be0 >			  ## att_send.c:391:0
 1e07dfa:    04 f6 00 90       	r4 = [r9 + 0]			  ## att_send.c:396:9
 1e07dfe:    3d 08             	r13 = r3			  ## att_send.c:396:9
 1e07e00:    2a 08             	r10 = r2
 1e07e02:    06 08             	r6 = r0
 1e07e04:    0b 28             	if (r4 == 0) goto 22 <user_data_att_send+0x2C : 1e07e1c >
 1e07e06:    96 f5 00 00       	h[sp] = r6			  ## att_send.c:400:27
 1e07e0a:    91 f5 02 00       	h[sp+2] = r1			  ## att_send.c:401:27
 1e07e0e:    09 26             	if (r3 == 0) goto 18 <user_data_att_send+0x32 : 1e07e22 >			  ## att_send.c:401:27
 1e07e10:    d0 02             	r0 = [sp+52]
 1e07e12:    0f 20             	if (r0 == 0) goto 30 <user_data_att_send+0x42 : 1e07e32 >
 1e07e14:    05 c3             	r5 = r0 << 12			  ## att_send.c:415:29
 1e07e16:    95 f5 04 00       	h[sp+4] = r5			  ## att_send.c:415:29
 1e07e1a:    15 18             	goto 42 <user_data_att_send+0x56 : 1e07e46 >			  ## att_send.c:415:29
 1e07e1c:    04 fb 9e ff       	r4 = -98 <bank_code_load_addr+0x1DC9A6 : 1ffff9e >
 1e07e20:    6b 18             	goto 214 <user_data_att_send+0x108 : 1e07ef8 >
 1e07e22:    c0 ff 49 57 e1 01 	r0 = 31545161 <update_target_end+0x28C1 : 1e15749 >			  ## att_send.c:404:9
 1e07e28:    80 f3 a5 3a       	call 30026 <puts : 1e0f376 >			  ## att_send.c:404:9
 1e07e2c:    04 fb a1 ff       	r4 = -95 <bank_code_load_addr+0x1DC9A9 : 1ffffa1 >
 1e07e30:    63 18             	goto 198 <user_data_att_send+0x108 : 1e07ef8 >
 1e07e32:    10 92             	r0 = r1 + 1			  ## att_send.c:410:76
 1e07e34:    21 04             	r1 = r0.l (u)			  ## att_send.c:410:31
 1e07e36:    60 08             	r0 = r6			  ## att_send.c:410:31
 1e07e38:    7e 17             	call -260 <multi_att_get_ccc_config : 1e07d36 >			  ## att_send.c:410:31
 1e07e3a:    05 c3             	r5 = r0 << 12			  ## att_send.c:410:29
 1e07e3c:    95 f5 04 00       	h[sp+4] = r5			  ## att_send.c:410:29
 1e07e40:    60 ff 0f 09 5c 00 	if ((r0 & 15) == 0) goto 184 <user_data_att_send+0x10E : 1e07efe >			  ## att_send.c:410:29
 1e07e46:    40 fc 62 00       	r0 = r4 + 98			  ## att_send.c:120:5
 1e07e4a:    01 70             	r1 = 0			  ## att_send.c:120:5
 1e07e4c:    02 70             	r2 = 0			  ## att_send.c:120:5
 1e07e4e:    03 f7 fe 0f       	r3 = h[r0 + -2] (u)			  ## att_send.c:121:52
 1e07e52:    9b d1             	r3 = r3 >> 6			  ## att_send.c:121:52
 1e07e54:    63 f2 07 00       	if (r3 == r6) goto 14 <user_data_att_send+0x76 : 1e07e66 >			  ## att_send.c:121:13
 1e07e58:    11 80             	r1 += 1			  ## att_send.c:120:23
 1e07e5a:    12 80             	r2 += 1			  ## att_send.c:120:43
 1e07e5c:    40 80             	r0 += 4			  ## att_send.c:120:23
 1e07e5e:    82 e0 f6 bf       	ifs (r2 < 8) goto -20 <user_data_att_send+0x5E : 1e07e4e >			  ## att_send.c:120:23
 1e07e62:    4b 71             	r11 = 20
 1e07e64:    06 18             	goto 12 <user_data_att_send+0x82 : 1e07e72 >
 1e07e66:    41 04             	r1 = r1.b0 (u)			  ## att_send.c:423:19
 1e07e68:    4b 71             	r11 = 20			  ## att_send.c:423:19
 1e07e6a:    71 e0 02 80       	if (r1 > 7) goto 4 <user_data_att_send+0x82 : 1e07e72 >			  ## att_send.c:423:19
 1e07e6e:    0b f7 00 00       	r11 = h[r0 + 0] (u)			  ## att_send.c:424:52
 1e07e72:    97 f3 93 f7       	call 3141414 <local_irq_disable : 106d9c >			  ## att_send.c:430:5
 1e07e76:    60 08             	r0 = r6			  ## att_send.c:431:9
 1e07e78:    d1 08             	r1 = r13			  ## att_send.c:431:9
 1e07e7a:    77 17             	call -274 <user_data_cbuf_is_write_able : 1e07d6a >			  ## att_send.c:431:9
 1e07e7c:    2f 20             	if (r0 == 0) goto 94 <user_data_att_send+0xEC : 1e07edc >			  ## att_send.c:431:9
 1e07e7e:    0c fb ff 0f       	r12 = 4095 <sys_clock_limit+0x43 : fff >
 1e07e82:    e6 fd 00 8d       	r8 = r13.l (u)			  ## att_send.c:433:21
 1e07e86:    b4 08             	r4 = r11			  ## att_send.c:435:13
 1e07e88:    48 f2 01 80       	if (r8 > r4) goto 2 <user_data_att_send+0x9E : 1e07e8e >			  ## att_send.c:435:13
 1e07e8c:    d4 08             	r4 = r13			  ## att_send.c:435:13
 1e07e8e:    00 f6 00 90       	r0 = [r9 + 0]			  ## att_send.c:379:24
 1e07e92:    29 d3             	r1 = r5 >> 12			  ## att_send.c:438:32
 1e07e94:    45 08             	r5 = r4			  ## att_send.c:438:32
 1e07e96:    d4 fd 60 51       	r5 <= insert(r1, p:12, l:20)			  ## att_send.c:438:32
 1e07e9a:    95 f5 04 00       	h[sp+4] = r5			  ## att_send.c:438:32
 1e07e9e:    00 fc 80 00       	r0 = r0 + 128			  ## att_send.c:379:32
 1e07ea2:    01 a0             	r1 = sp + 0			  ## att_send.c:379:32
 1e07ea4:    62 70             	r2 = 6			  ## att_send.c:379:12
 1e07ea6:    80 f3 5b 45       	call 35510 <cbuf_write : 1e10960 >			  ## att_send.c:379:12
 1e07eaa:    01 f6 00 90       	r1 = [r9 + 0]			  ## att_send.c:380:25
 1e07eae:    07 08             	r7 = r0			  ## att_send.c:379:12
 1e07eb0:    e2 fd c0 64       	r6 = r4 & r12			  ## att_send.c:438:32
 1e07eb4:    10 fc 80 00       	r0 = r1 + 128			  ## att_send.c:380:33
 1e07eb8:    a1 08             	r1 = r10			  ## att_send.c:380:13
 1e07eba:    62 08             	r2 = r6			  ## att_send.c:380:13
 1e07ebc:    80 f3 50 45       	call 35488 <cbuf_write : 1e10960 >			  ## att_send.c:380:13
 1e07ec0:    70 09             	r0 += r7			  ## att_send.c:380:10
 1e07ec2:    20 04             	r0 = r0.l (u)			  ## att_send.c:382:14
 1e07ec4:    62 9c             	r2 = r6 + 6			  ## att_send.c:382:32
 1e07ec6:    21 05             	r1 = r4.l (u)
 1e07ec8:    02 f2 0b 10       	if (r2 != r0) goto 22 <user_data_att_send+0xF2 : 1e07ee2 >
 1e07ecc:    90 fb 40 dd       	r13 = r13 - r4			  ## att_send.c:446:17
 1e07ed0:    e6 fd 00 0d       	r0 = r13.l (u)			  ## att_send.c:432:9
 1e07ed4:    1a 09             	r10 += r1			  ## att_send.c:447:18
 1e07ed6:    d5 31             	if (r0 != 0) goto -86 <user_data_att_send+0x92 : 1e07e82 >
 1e07ed8:    04 70             	r4 = 0
 1e07eda:    0c 18             	goto 24 <user_data_att_send+0x104 : 1e07ef4 >
 1e07edc:    04 fb 9f ff       	r4 = -97 <bank_code_load_addr+0x1DC9A7 : 1ffff9f >
 1e07ee0:    09 18             	goto 18 <user_data_att_send+0x104 : 1e07ef4 >
 1e07ee2:    c0 ff 50 57 e1 01 	r0 = 31545168 <update_target_end+0x28C8 : 1e15750 >			  ## att_send.c:441:17
 1e07ee8:    02 fb 9f ff       	r2 = -97 <bank_code_load_addr+0x1DC9A7 : 1ffff9f >			  ## att_send.c:441:17
 1e07eec:    24 08             	r4 = r2			  ## att_send.c:441:17
 1e07eee:    83 08             	r3 = r8			  ## att_send.c:441:17
 1e07ef0:    80 f3 eb 38       	call 29142 <printf : 1e0f0ca >			  ## att_send.c:441:17
 1e07ef4:    97 f3 50 f7       	call 3141280 <local_irq_enable : 106d98 >
 1e07ef8:    40 08             	r0 = r4			  ## att_send.c:455:1
 1e07efa:    04 0a             	sp += 8			  ## att_send.c:455:1
 1e07efc:    5d 01             	{pc, r13-r4} = [sp++]			  ## att_send.c:455:1
 1e07efe:    04 fb a3 ff       	r4 = -93 <bank_code_load_addr+0x1DC9AB : 1ffffa3 >
 1e07f02:    fa 1f             	goto -12 <user_data_att_send+0x108 : 1e07ef8 >


att_get_default_conn_handle:
 1e07f04:    c0 ff e0 1b 00 00 	r0 = 7136 <att_s_hdl : 1be0 >			  ## att_send.c:690:0
 1e07f0a:    00 40             	r0 = [r0 + 0]			  ## att_send.c:691:9
 1e07f0c:    09 20             	if (r0 == 0) goto 18 <att_get_default_conn_handle+0x1C : 1e07f20 >			  ## att_send.c:691:9
 1e07f0e:    00 86             	r0 += 96			  ## att_send.c:100:37
 1e07f10:    01 70             	r1 = 0			  ## att_send.c:100:37
 1e07f12:    82 f7 04 00       	r2 = h[r0 ++= 4] (u)			  ## att_send.c:100:37
 1e07f16:    92 d1             	r2 = r2 >> 6			  ## att_send.c:100:37
 1e07f18:    04 34             	if (r2 != 0) goto 8 <att_get_default_conn_handle+0x1E : 1e07f22 >			  ## att_send.c:100:37
 1e07f1a:    11 80             	r1 += 1			  ## att_send.c:99:43
 1e07f1c:    71 e0 f9 df       	ifs (r1 <= 7) goto -14 <att_get_default_conn_handle+0xE : 1e07f12 >
 1e07f20:    02 70             	r2 = 0
 1e07f22:    a0 04             	r0 = r2.l (u)			  ## att_send.c:695:1
 1e07f24:    20 00             	rts			  ## att_send.c:695:1


att_send_init:
 1e07f26:    7b 01             	[--sp] = {rets, r11-r4}			  ## att_send.c:699:0
 1e07f28:    ca ff e0 1b 00 00 	r10 = 7136 <att_s_hdl : 1be0 >			  ## att_send.c:699:0
 1e07f2e:    c0 f4 00 a9       	[r10 + 0] = 0			  ## att_send.c:703:15
 1e07f32:    35 08             	r5 = r3			  ## att_send.c:703:15
 1e07f34:    29 08             	r9 = r2
 1e07f36:    17 08             	r7 = r1
 1e07f38:    04 08             	r4 = r0
 1e07f3a:    67 28             	if (r4 == 0) goto 206 <att_send_init+0xE4 : 1e0800a >
 1e07f3c:    66 2e             	if (r7 == 0) goto 204 <att_send_init+0xE4 : 1e0800a >
 1e07f3e:    c8 ff 7f 57 e1 01 	r8 = 31545215 <update_target_end+0x28F7 : 1e1577f >
 1e07f44:    61 70             	r1 = 6			  ## att_send.c:669:5
 1e07f46:    12 70             	r2 = 1			  ## att_send.c:669:5
 1e07f48:    c3 7b             	r3 = 188			  ## att_send.c:669:5
 1e07f4a:    80 08             	r0 = r8			  ## att_send.c:669:5
 1e07f4c:    80 f3 bd 38       	call 29050 <printf : 1e0f0ca >			  ## att_send.c:669:5
 1e07f50:    56 fc c3 00       	r6 = r5 + 195			  ## att_send.c:708:44
 1e07f54:    69 f2 0b 20       	if (r9 >= r6) goto 22 <att_send_init+0x48 : 1e07f6e >			  ## att_send.c:708:9
 1e07f58:    61 70             	r1 = 6			  ## att_send.c:669:5
 1e07f5a:    12 70             	r2 = 1			  ## att_send.c:669:5
 1e07f5c:    c3 7b             	r3 = 188			  ## att_send.c:669:5
 1e07f5e:    80 08             	r0 = r8			  ## att_send.c:669:5
 1e07f60:    80 f3 b3 38       	call 29030 <printf : 1e0f0ca >			  ## att_send.c:669:5
 1e07f64:    c0 ff a9 57 e1 01 	r0 = 31545257 <update_target_end+0x2921 : 1e157a9 >			  ## att_send.c:709:9
 1e07f6a:    61 08             	r1 = r6			  ## att_send.c:709:9
 1e07f6c:    06 18             	goto 12 <att_send_init+0x54 : 1e07f7a >			  ## att_send.c:709:9
 1e07f6e:    35 e1 09 80       	if (r5 > 19) goto 18 <att_send_init+0x5E : 1e07f84 >			  ## att_send.c:714:9
 1e07f72:    c0 ff 9f 57 e1 01 	r0 = 31545247 <update_target_end+0x2917 : 1e1579f >			  ## att_send.c:715:9
 1e07f78:    41 71             	r1 = 20			  ## att_send.c:715:9
 1e07f7a:    80 f3 a6 38       	call 29004 <printf : 1e0f0ca >
 1e07f7e:    1b 01             	{rets, r11-r4} = [sp++]
 1e07f80:    cf f3 2e da       	goto 2077788 <p33_soft_reset : 33e0 >
 1e07f84:    97 f3 0a f7       	call 3141140 <local_irq_disable : 106d9c >			  ## att_send.c:721:5
 1e07f88:    17 f6 00 a0       	[r10 + 0] = r7			  ## att_send.c:723:15
 1e07f8c:    01 70             	r1 = 0			  ## att_send.c:726:5
 1e07f8e:    c2 7b             	r2 = 188			  ## att_send.c:726:5
 1e07f90:    06 70             	r6 = 0			  ## att_send.c:726:5
 1e07f92:    70 08             	r0 = r7			  ## att_send.c:726:5
 1e07f94:    97 f3 ac f7       	call 3141464 <memset : 106ef0 >			  ## att_send.c:726:5
 1e07f98:    78 fc 80 00       	r8 = r7 + 128			  ## att_send.c:726:5
 1e07f9c:    8b fc 3c 00       	r11 = r8 + 60			  ## att_send.c:724:13
 1e07fa0:    1b f6 2c 80       	[r8 + 44] = r11			  ## att_send.c:728:27
 1e07fa4:    15 f7 30 80       	h[r8 + 48] = r5			  ## att_send.c:729:30
 1e07fa8:    40 71             	r0 = 20			  ## att_send.c:729:30
 1e07faa:    81 bf             	r1 = r7 + r6			  ## att_send.c:732:50
 1e07fac:    01 86             	r1 += 96			  ## att_send.c:732:50
 1e07fae:    18 52             	h[r1 + 2] = r0			  ## att_send.c:732:50
 1e07fb0:    02 52             	r2 = h[r1 + 0] (u)			  ## att_send.c:733:44
 1e07fb2:    02 fd 3c 29       	r2 = r2 | 60			  ## att_send.c:733:44
 1e07fb6:    46 80             	r6 += 4			  ## att_send.c:731:19
 1e07fb8:    0a 52             	h[r1 + 0] = r2			  ## att_send.c:733:44
 1e07fba:    06 e2 f6 1f       	if (r6 != 32) goto -20 <att_send_init+0x84 : 1e07faa >			  ## att_send.c:731:5
 1e07fbe:    01 70             	r1 = 0			  ## att_send.c:143:5
 1e07fc0:    02 76             	r2 = 96			  ## att_send.c:143:5
 1e07fc2:    06 70             	r6 = 0			  ## att_send.c:143:5
 1e07fc4:    70 08             	r0 = r7			  ## att_send.c:143:5
 1e07fc6:    97 f3 93 f7       	call 3141414 <memset : 106ef0 >			  ## att_send.c:143:5
 1e07fca:    16 f9 b2 70       	b[r7 + 178] = r6			  ## att_send.c:740:23
 1e07fce:    80 fb 50 1b       	r1 = r11 + r5			  ## att_send.c:736:13
 1e07fd2:    90 fc 44 ff       	r0 = r9 + -188			  ## att_send.c:725:14
 1e07fd6:    60 b1             	r0 = r0 - r5			  ## att_send.c:737:14
 1e07fd8:    22 04             	r2 = r0.l (u)			  ## att_send.c:741:49
 1e07fda:    80 08             	r0 = r8			  ## att_send.c:741:5
 1e07fdc:    80 f3 b4 44       	call 35176 <cbuf_init : 1e10948 >			  ## att_send.c:741:5
 1e07fe0:    40 fc ff ff       	r0 = r4 + -1			  ## att_send.c:743:21
 1e07fe4:    20 04             	r0 = r0.l (u)			  ## att_send.c:743:21
 1e07fe6:    c1 ff fe ef 00 00 	r1 = 61438 <UPDATA_BREDR_BASE_BEG+0x49E : effe >			  ## att_send.c:743:21
 1e07fec:    10 f2 0b 80       	if (r0 > r1) goto 22 <att_send_init+0xE0 : 1e08006 >			  ## att_send.c:743:21
 1e07ff0:    00 f6 00 a0       	r0 = [r10 + 0]			  ## att_send.c:682:9
 1e07ff4:    08 20             	if (r0 == 0) goto 16 <att_send_init+0xE0 : 1e08006 >			  ## att_send.c:682:9
 1e07ff6:    01 f7 60 00       	r1 = h[r0 + 96] (u)			  ## att_send.c:685:41
 1e07ffa:    21 fd 3f 19       	r1 = r1 & 63			  ## att_send.c:685:41
 1e07ffe:    d0 fd 30 14       	r1 <= insert(r4, p:6, l:16)			  ## att_send.c:685:41
 1e08002:    11 f7 60 00       	h[r0 + 96] = r1			  ## att_send.c:685:41
 1e08006:    97 f3 c7 f6       	call 3141006 <local_irq_enable : 106d98 >			  ## att_send.c:757:5
 1e0800a:    5b 01             	{pc, r11-r4} = [sp++]			  ## att_send.c:759:1


stack_run_loop_resume:
 1e0800c:    34 00             	[--sp] = rets			  ## btstack_task.c:53:0
 1e0800e:    c0 ff 8e 56 e1 01 	r0 = 31544974 <update_target_end+0x2806 : 1e1568e >			  ## btstack_task.c:54:15
 1e08014:    f1 7f             	r1 = 255			  ## btstack_task.c:54:15
 1e08016:    02 70             	r2 = 0			  ## btstack_task.c:54:15
 1e08018:    03 70             	r3 = 0			  ## btstack_task.c:54:15
 1e0801a:    97 f3 e1 f6       	call 3141058 <os_taskq_post_type : 106de0 >			  ## btstack_task.c:54:15
 1e0801e:    01 08             	r1 = r0			  ## btstack_task.c:54:15
 1e08020:    05 22             	if (r1 == 0) goto 10 <stack_run_loop_resume+0x20 : 1e0802c >
 1e08022:    c0 ff 96 56 e1 01 	r0 = 31544982 <update_target_end+0x280E : 1e15696 >			  ## btstack_task.c:56:9
 1e08028:    80 f3 4f 38       	call 28830 <printf : 1e0f0ca >			  ## btstack_task.c:56:9
 1e0802c:    30 00             	pc = [sp++]			  ## btstack_task.c:58:1


btstack_linked_list_remove:
 1e0802e:    07 22             	if (r1 == 0) goto 14 <btstack_linked_list_remove+0x10 : 1e0803e >			  ## btstack_linked_list.c:110:0
 1e08030:    02 08             	r2 = r0			  ## btstack_linked_list.c:110:0
 1e08032:    05 24             	if (r2 == 0) goto 10 <btstack_linked_list_remove+0x10 : 1e0803e >			  ## btstack_linked_list.c:110:0
 1e08034:    00 44             	r0 = [r2 + 0]			  ## btstack_linked_list.c:116:17
 1e08036:    10 f2 fb 1f       	if (r0 != r1) goto -10 <btstack_linked_list_remove+0x2 : 1e08030 >			  ## btstack_linked_list.c:116:17
 1e0803a:    00 42             	r0 = [r1 + 0]			  ## btstack_linked_list.c:117:31
 1e0803c:    08 44             	[r2 + 0] = r0			  ## btstack_linked_list.c:117:22
 1e0803e:    20 00             	rts


stack_run_loop_remove:
 1e08040:    01 08             	r1 = r0			  ## run_loop.c:53:0
 1e08042:    c0 ff 88 09 00 00 	r0 = 2440 <stack_run_loop_head : 988 >			  ## run_loop.c:54:5
 1e08048:    f2 1f             	goto -28 <btstack_linked_list_remove : 1e0802e >			  ## run_loop.c:54:5


ble_stack_exit:
 1e0804a:    74 01             	[--sp] = {rets, r4}			  ## btstack_main.c:805:0
 1e0804c:    c4 ff 40 1c 00 00 	r4 = 7232 <btstack_global_info : 1c40 >			  ## btstack_main.c:805:0
 1e08052:    01 f9 b4 40       	r1 = b[r4 + 180] (u)			  ## btstack_main.c:808:43
 1e08056:    10 22             	if (r1 == 0) goto 32 <ble_stack_exit+0x2E : 1e08078 >			  ## btstack_main.c:808:43
 1e08058:    20 fd 0f 09       	r0 = r0 & 15			  ## btstack_main.c:812:41
 1e0805c:    00 fd a0 09       	r0 = r0 | 160			  ## btstack_main.c:812:41
 1e08060:    10 f9 b4 40       	b[r4 + 180] = r0			  ## btstack_main.c:812:39
 1e08064:    d3 17             	call -90 <stack_run_loop_resume : 1e0800c >			  ## btstack_main.c:813:9
 1e08066:    03 18             	goto 6 <ble_stack_exit+0x24 : 1e0806e >			  ## btstack_main.c:813:9
 1e08068:    10 70             	r0 = 1			  ## btstack_main.c:815:13
 1e0806a:    97 f3 a5 f6       	call 3140938 <os_time_dly : 106db8 >			  ## btstack_main.c:815:13
 1e0806e:    00 f9 b4 40       	r0 = b[r4 + 180] (u)
 1e08072:    fa 31             	if (r0 != 0) goto -12 <ble_stack_exit+0x1E : 1e08068 >
 1e08074:    40 08             	r0 = r4			  ## btstack_main.c:818:9
 1e08076:    e4 17             	call -56 <stack_run_loop_remove : 1e08040 >			  ## btstack_main.c:818:9
 1e08078:    54 01             	{pc, r4} = [sp++]			  ## btstack_main.c:821:1


ble_user_cmd_prepare:
 1e0807a:    62 01             	[--sp] = {r3, r2}			  ## btstack_main.c:853:0
 1e0807c:    79 01             	[--sp] = {rets, r9-r4}			  ## btstack_main.c:853:0
 1e0807e:    f0 0b             	sp += -32			  ## btstack_main.c:853:0
 1e08080:    16 08             	r6 = r1			  ## btstack_main.c:853:0
 1e08082:    04 08             	r4 = r0			  ## btstack_main.c:853:0
 1e08084:    c7 ff 40 1c 00 00 	r7 = 7232 <btstack_global_info : 1c40 >			  ## btstack_main.c:853:0
 1e0808a:    00 f9 b4 70       	r0 = b[r7 + 180] (u)			  ## btstack_main.c:858:31
 1e0808e:    16 20             	if (r0 == 0) goto 44 <ble_user_cmd_prepare+0x42 : 1e080bc >			  ## btstack_main.c:858:31
 1e08090:    05 fb 9d ff       	r5 = -99 <bank_code_load_addr+0x1DC9A5 : 1ffff9d >
 1e08094:    56 e0 14 c0       	ifs (r6 > 5) goto 40 <ble_user_cmd_prepare+0x46 : 1e080c0 >
 1e08098:    30 c4             	r0 = r6 << 16			  ## btstack_main.c:867:21
 1e0809a:    50 b8             	r0 |= r4			  ## btstack_main.c:867:28
 1e0809c:    28 02             	[sp+8] = r0			  ## btstack_main.c:867:13
 1e0809e:    97 f3 7d f6       	call 3140858 <local_irq_disable : 106d9c >			  ## btstack_main.c:869:5
 1e080a2:    a1 4e             	r1 = [r7 + 40]			  ## btstack_main.c:871:18
 1e080a4:    90 4e             	r0 = [r7 + 36]			  ## btstack_main.c:871:18
 1e080a6:    80 f3 8e 44       	call 35100 <cbuf_get_data_size : 1e109c6 >			  ## btstack_main.c:871:18
 1e080aa:    20 b2             	r0 = r1 - r0			  ## btstack_main.c:871:18
 1e080ac:    80 d0             	r0 = r0 >> 2			  ## btstack_main.c:871:36
 1e080ae:    11 9c             	r1 = r6 + 1			  ## btstack_main.c:870:5
 1e080b0:    01 f2 0b 90       	if (r1 <= r0) goto 22 <ble_user_cmd_prepare+0x50 : 1e080ca >			  ## btstack_main.c:871:9
 1e080b4:    97 f3 70 f6       	call 3140832 <local_irq_enable : 106d98 >			  ## btstack_main.c:872:9
 1e080b8:    f5 8f             	r5 += -1
 1e080ba:    02 18             	goto 4 <ble_user_cmd_prepare+0x46 : 1e080c0 >
 1e080bc:    05 fb a2 ff       	r5 = -94 <bank_code_load_addr+0x1DC9AA : 1ffffa2 >
 1e080c0:    50 08             	r0 = r5			  ## btstack_main.c:978:1
 1e080c2:    10 0a             	sp += 32			  ## btstack_main.c:978:1
 1e080c4:    19 01             	{rets, r9-r4} = [sp++]			  ## btstack_main.c:978:1
 1e080c6:    04 0a             	sp += 8			  ## btstack_main.c:978:1
 1e080c8:    20 00             	rts			  ## btstack_main.c:978:1
 1e080ca:    c0 a3             	r0 = sp + 60
 1e080cc:    18 02             	[sp+4] = r0			  ## btstack_main.c:876:5
 1e080ce:    21 e0 0a b0       	ifs (r1 < 2) goto 20 <ble_user_cmd_prepare+0x6C : 1e080e6 >			  ## btstack_main.c:876:5
 1e080d2:    80 a0             	r0 = sp + 8
 1e080d4:    40 80             	r0 += 4			  ## btstack_main.c:878:19
 1e080d6:    12 02             	r2 = [sp+4]			  ## btstack_main.c:878:19
 1e080d8:    43 94             	r3 = r2 + 4			  ## btstack_main.c:878:19
 1e080da:    1b 02             	[sp+4] = r3			  ## btstack_main.c:878:19
 1e080dc:    02 44             	r2 = [r2 + 0]			  ## btstack_main.c:878:19
 1e080de:    52 f6 04 00       	[r0 ++= 4] = r2			  ## btstack_main.c:878:17
 1e080e2:    56 f3 f8 ff       	if (--r6 != 0) goto -16 <ble_user_cmd_prepare+0x5C : 1e080d6 >			  ## btstack_main.c:878:17
 1e080e6:    40 fc fd ff       	r0 = r4 + -3			  ## btstack_main.c:885:5
 1e080ea:    05 70             	r5 = 0			  ## btstack_main.c:885:5
 1e080ec:    b0 e0 0c 80       	if (r0 > 11) goto 24 <.GJTIE74_0_0_+0xA : 1e08108 >
 1e080f0:    a0 00             	tbb [r0]


.GJTIS74_0_0_:
 1e080f2:    06     < 6 : 0x6 >
 1e080f3:    06     < 6 : 0x6 >
 1e080f4:    22     < 34 : 0x22 >
 1e080f5:    22     < 34 : 0x22 >
 1e080f6:    2b     < 43 : 0x2B >
 1e080f7:    22     < 34 : 0x22 >
 1e080f8:    34     < 52 : 0x34 >
 1e080f9:    39     < 57 : 0x39 >
 1e080fa:    22     < 34 : 0x22 >
 1e080fb:    22     < 34 : 0x22 >
 1e080fc:    22     < 34 : 0x22 >
 1e080fd:    b3     < 179 : 0xB3 >
 1e080fe:    30 02             	r0 = [sp+12]			  ## btstack_main.c:944:13
 1e08100:    15 8a             	r5 += -95
 1e08102:    f0 e1 18 d0       	ifs (r0 <= 31) goto 48 <.GJTIE74_1_1_+0x14 : 1e08136 >
 1e08106:    a8 18             	goto 336 <.GJTIE74_1_1_+0x136 : 1e08258 >
 1e08108:    40 fc e8 ff       	r0 = r4 + -24
 1e0810c:    80 e0 13 80       	if (r0 > 8) goto 38 <.GJTIE74_1_1_+0x14 : 1e08136 >
 1e08110:    c8 ff e0 1b 00 00 	r8 = 7136 <att_s_hdl : 1be0 >
 1e08116:    a0 00             	tbb [r0]


.GJTIS74_1_1_:
 1e08118:    05     < 5 : 0x5 >
 1e08119:    2f     < 47 : 0x2F >
 1e0811a:    5a     < 90 : 0x5A >
 1e0811b:    0f     < 15 : 0xF >
 1e0811c:    67     < 103 : 0x67 >
 1e0811d:    0f     < 15 : 0xF >
 1e0811e:    0f     < 15 : 0xF >
 1e0811f:    0f     < 15 : 0xF >
 1e08120:    6e     < 110 : 0x6E >
 1e08121:    00     < 0 : 0x0 >
 1e08122:    83 f5 14 00       	r3 = h[sp+20] (u)			  ## btstack_main.c:923:13
 1e08126:    82 f5 10 00       	r2 = h[sp+16] (u)			  ## btstack_main.c:923:13
 1e0812a:    31 02             	r1 = [sp+12]			  ## btstack_main.c:923:43
 1e0812c:    c0 ff f0 ff 00 00 	r0 = 65520 <_IRQ_MEM_ADDR+0xF0 : fff0 >			  ## btstack_main.c:923:13
 1e08132:    f9 16             	call -526 <att_send_init : 1e07f26 >			  ## btstack_main.c:923:13
 1e08134:    91 18             	goto 290 <.GJTIE74_1_1_+0x136 : 1e08258 >			  ## btstack_main.c:923:13
 1e08136:    c0 9e             	r0 = r7 + 12			  ## btstack_main.c:959:9
 1e08138:    8a c0             	r2 = r1 << 2			  ## btstack_main.c:959:63
 1e0813a:    81 a0             	r1 = sp + 8			  ## btstack_main.c:959:63
 1e0813c:    80 f3 10 44       	call 34848 <cbuf_write : 1e10960 >			  ## btstack_main.c:959:9
 1e08140:    97 f3 2a f6       	call 3140692 <local_irq_enable : 106d98 >			  ## btstack_main.c:962:5
 1e08144:    05 70             	r5 = 0			  ## btstack_main.c:962:5
 1e08146:    8a 18             	goto 276 <.GJTIE74_1_1_+0x13A : 1e0825c >			  ## btstack_main.c:962:5
 1e08148:    83 f5 18 00       	r3 = h[sp+24] (u)			  ## btstack_main.c:916:13
 1e0814c:    82 f5 14 00       	r2 = h[sp+20] (u)			  ## btstack_main.c:916:13
 1e08150:    41 02             	r1 = [sp+16]			  ## btstack_main.c:916:44
 1e08152:    80 f5 0c 00       	r0 = h[sp+12] (u)			  ## btstack_main.c:916:13
 1e08156:    e7 16             	call -562 <att_send_init : 1e07f26 >			  ## btstack_main.c:916:13
 1e08158:    7f 18             	goto 254 <.GJTIE74_1_1_+0x136 : 1e08258 >			  ## btstack_main.c:916:13
 1e0815a:    d4 16             	call -600 <att_get_default_conn_handle : 1e07f04 >			  ## btstack_main.c:902:62
 1e0815c:    01 70             	r1 = 0			  ## btstack_main.c:902:33
 1e0815e:    05 16             	call -1014 <user_data_cbuf_is_write_able : 1e07d6a >			  ## btstack_main.c:902:33
 1e08160:    31 02             	r1 = [sp+12]			  ## btstack_main.c:902:22
 1e08162:    46 18             	goto 140 <.GJTIE74_1_1_+0xCE : 1e081f0 >			  ## btstack_main.c:902:22
 1e08164:    cf 16             	call -610 <att_get_default_conn_handle : 1e07f04 >			  ## btstack_main.c:895:38
 1e08166:    83 f5 14 00       	r3 = h[sp+20] (u)			  ## btstack_main.c:895:19
 1e0816a:    42 02             	r2 = [sp+16]			  ## btstack_main.c:895:86
 1e0816c:    81 f5 0c 00       	r1 = h[sp+12] (u)			  ## btstack_main.c:895:19
 1e08170:    c5 f5 18 00       	r5 = b[sp+24] (u)			  ## btstack_main.c:895:19
 1e08174:    34 18             	goto 104 <.GJTIE74_1_1_+0xBC : 1e081de >			  ## btstack_main.c:895:19
 1e08176:    00 f6 00 80       	r0 = [r8 + 0]			  ## att_send.c:770:9
 1e0817a:    6e 20             	if (r0 == 0) goto 220 <.GJTIE74_1_1_+0x136 : 1e08258 >			  ## att_send.c:770:9
 1e0817c:    56 02             	r6 = [sp+20]			  ## btstack_main.c:930:51
 1e0817e:    47 02             	r7 = [sp+16]			  ## btstack_main.c:930:42
 1e08180:    09 f5 0c 00       	r9 = [sp+12]			  ## btstack_main.c:930:33
 1e08184:    97 f3 0a f6       	call 3140628 <local_irq_disable : 106d9c >			  ## att_send.c:780:5
 1e08188:    00 f6 00 80       	r0 = [r8 + 0]
 1e0818c:    01 fc 60 00       	r1 = r0 + 96			  ## att_send.c:782:5
 1e08190:    02 70             	r2 = 0			  ## att_send.c:782:5
 1e08192:    03 52             	r3 = h[r1 + 0] (u)			  ## att_send.c:783:37
 1e08194:    25 fd 03 39       	r5 = r3 & 3			  ## att_send.c:783:13
 1e08198:    65 f2 04 10       	if (r5 != r6) goto 8 <.GJTIE74_1_1_+0x82 : 1e081a4 >			  ## att_send.c:783:13
 1e0819c:    84 fd 10 53       	r5 = uextra(r3, p:2, l:4)			  ## att_send.c:783:82
 1e081a0:    75 f2 38 00       	if (r5 == r7) goto 112 <.GJTIE74_1_1_+0xF2 : 1e08214 >			  ## att_send.c:783:82
 1e081a4:    12 80             	r2 += 1			  ## att_send.c:782:39
 1e081a6:    41 80             	r1 += 4			  ## att_send.c:782:19
 1e081a8:    82 e0 f3 bf       	ifs (r2 < 8) goto -26 <.GJTIE74_1_1_+0x70 : 1e08192 >			  ## att_send.c:782:19
 1e081ac:    e6 fd 00 19       	r1 = r9.l (u)			  ## att_send.c:800:9
 1e081b0:    50 22             	if (r1 == 0) goto 160 <.GJTIE74_1_1_+0x130 : 1e08252 >			  ## att_send.c:800:9
 1e081b2:    01 fc 60 00       	r1 = r0 + 96			  ## att_send.c:802:41
 1e081b6:    02 70             	r2 = 0			  ## att_send.c:802:41
 1e081b8:    03 52             	r3 = h[r1 + 0] (u)			  ## att_send.c:802:41
 1e081ba:    23 fd 3c 39       	r3 = r3 & 60			  ## att_send.c:802:41
 1e081be:    c3 e3 3b 00       	if (r3 == 60) goto 118 <.GJTIE74_1_1_+0x116 : 1e08238 >			  ## att_send.c:802:41
 1e081c2:    12 80             	r2 += 1			  ## att_send.c:801:43
 1e081c4:    41 80             	r1 += 4			  ## att_send.c:801:23
 1e081c6:    82 e0 f7 bf       	ifs (r2 < 8) goto -18 <.GJTIE74_1_1_+0x96 : 1e081b8 >			  ## att_send.c:801:23
 1e081ca:    43 18             	goto 134 <.GJTIE74_1_1_+0x130 : 1e08252 >			  ## att_send.c:801:23
 1e081cc:    83 f5 18 00       	r3 = h[sp+24] (u)			  ## btstack_main.c:888:19
 1e081d0:    52 02             	r2 = [sp+20]			  ## btstack_main.c:888:64
 1e081d2:    81 f5 10 00       	r1 = h[sp+16] (u)			  ## btstack_main.c:888:19
 1e081d6:    80 f5 0c 00       	r0 = h[sp+12] (u)			  ## btstack_main.c:888:19
 1e081da:    c5 f5 1c 00       	r5 = b[sp+28] (u)			  ## btstack_main.c:888:19
 1e081de:    0d 02             	[sp] = r5
 1e081e0:    07 16             	call -1010 <user_data_att_send : 1e07df0 >
 1e081e2:    05 08             	r5 = r0
 1e081e4:    39 18             	goto 114 <.GJTIE74_1_1_+0x136 : 1e08258 >
 1e081e6:    80 f5 0c 00       	r0 = h[sp+12] (u)			  ## btstack_main.c:909:33
 1e081ea:    01 70             	r1 = 0			  ## btstack_main.c:909:33
 1e081ec:    be 15             	call -1156 <user_data_cbuf_is_write_able : 1e07d6a >			  ## btstack_main.c:909:33
 1e081ee:    41 02             	r1 = [sp+16]			  ## btstack_main.c:909:22
 1e081f0:    08 42             	[r1 + 0] = r0
 1e081f2:    32 18             	goto 100 <.GJTIE74_1_1_+0x136 : 1e08258 >
 1e081f4:    00 f6 00 80       	r0 = [r8 + 0]			  ## att_send.c:836:9
 1e081f8:    2f 20             	if (r0 == 0) goto 94 <.GJTIE74_1_1_+0x136 : 1e08258 >			  ## att_send.c:836:9
 1e081fa:    97 f3 cf f5       	call 3140510 <local_irq_disable : 106d9c >			  ## att_send.c:840:5
 1e081fe:    00 f6 00 80       	r0 = [r8 + 0]			  ## att_send.c:841:5
 1e08202:    15 f9 b2 00       	b[r0 + 178] = r5			  ## att_send.c:841:23
 1e08206:    00 fc 80 00       	r0 = r0 + 128			  ## att_send.c:842:25
 1e0820a:    80 f3 dd 43       	call 34746 <cbuf_clear : 1e109c8 >			  ## att_send.c:842:5
 1e0820e:    97 f3 c3 f5       	call 3140486 <local_irq_enable : 106d98 >			  ## att_send.c:843:5
 1e08212:    22 18             	goto 68 <.GJTIE74_1_1_+0x136 : 1e08258 >			  ## att_send.c:843:5
 1e08214:    22 fd 3f 39       	r2 = r3 & 63			  ## att_send.c:790:45
 1e08218:    da fd 30 29       	r2 <= insert(r9, p:6, l:26)			  ## att_send.c:790:45
 1e0821c:    0a 52             	h[r1 + 0] = r2			  ## att_send.c:790:45
 1e0821e:    ba c0             	r2 = r7 << 2			  ## att_send.c:791:44
 1e08220:    20 09             	r0 += r2			  ## att_send.c:791:44
 1e08222:    42 71             	r2 = 20			  ## att_send.c:791:61
 1e08224:    e6 fd 00 39       	r3 = r9.l (u)			  ## att_send.c:792:13
 1e08228:    12 f7 62 00       	h[r0 + 98] = r2			  ## att_send.c:791:61
 1e0822c:    12 36             	if (r3 != 0) goto 36 <.GJTIE74_1_1_+0x130 : 1e08252 >			  ## att_send.c:791:61
 1e0822e:    f0 fd 30 09       	r0 = r9 << 6			  ## att_send.c:790:45
 1e08232:    00 fd 3c 09       	r0 = r0 | 60			  ## att_send.c:794:47
 1e08236:    0c 18             	goto 24 <.GJTIE74_1_1_+0x12E : 1e08250 >			  ## att_send.c:794:47
 1e08238:    ba c0             	r2 = r7 << 2			  ## att_send.c:813:40
 1e0823a:    20 09             	r0 += r2			  ## att_send.c:815:40
 1e0823c:    43 71             	r3 = 20			  ## att_send.c:815:57
 1e0823e:    13 f7 62 00       	h[r0 + 98] = r3			  ## att_send.c:815:57
 1e08242:    20 fd 3c 29       	r0 = r2 & 60			  ## att_send.c:814:41
 1e08246:    da fd 30 09       	r0 <= insert(r9, p:6, l:26)			  ## att_send.c:814:41
 1e0824a:    22 fd 03 69       	r2 = r6 & 3			  ## att_send.c:816:39
 1e0824e:    50 b4             	r0 |= r2			  ## att_send.c:816:39
 1e08250:    08 52             	h[r1 + 0] = r0
 1e08252:    97 f3 a1 f5       	call 3140418 <local_irq_enable : 106d98 >			  ## att_send.c:820:5
 1e08256:    05 70             	r5 = 0			  ## att_send.c:820:5
 1e08258:    97 f3 9e f5       	call 3140412 <local_irq_enable : 106d98 >			  ## btstack_main.c:962:5
 1e0825c:    d7 16             	call -594 <stack_run_loop_resume : 1e0800c >			  ## btstack_main.c:966:5
 1e0825e:    e4 e0 2f 1f       	if (r4 != 14) goto -418 <ble_user_cmd_prepare+0x46 : 1e080c0 >			  ## btstack_main.c:966:5
 1e08262:    30 02             	r0 = [sp+12]			  ## btstack_main.c:970:24
 1e08264:    f2 16             	call -540 <ble_stack_exit : 1e0804a >			  ## btstack_main.c:970:9
 1e08266:    2c 1f             	goto -424 <ble_user_cmd_prepare+0x46 : 1e080c0 >			  ## btstack_main.c:970:9


little_endian_store_32:
 1e08268:    74 01             	[--sp] = {rets, r4}			  ## utils.c:88:0
 1e0826a:    12 fa 00 01       	b[r0+r1] = r2			  ## utils.c:89:19
 1e0826e:    13 d2             	r3 = r2 >> 8			  ## utils.c:90:27
 1e08270:    14 92             	r4 = r1 + 1			  ## utils.c:89:15
 1e08272:    24 05             	r4 = r4.l (u)			  ## utils.c:90:5
 1e08274:    13 fa 00 04       	b[r0+r4] = r3			  ## utils.c:90:19
 1e08278:    13 d4             	r3 = r2 >> 16			  ## utils.c:91:27
 1e0827a:    24 92             	r4 = r1 + 2			  ## utils.c:90:15
 1e0827c:    24 05             	r4 = r4.l (u)			  ## utils.c:91:5
 1e0827e:    13 fa 00 04       	b[r0+r4] = r3			  ## utils.c:91:19
 1e08282:    12 d6             	r2 = r2 >> 24			  ## utils.c:92:27
 1e08284:    31 80             	r1 += 3			  ## utils.c:91:15
 1e08286:    61 04             	r1 = r1.l (u)			  ## utils.c:92:5
 1e08288:    12 fa 00 01       	b[r0+r1] = r2			  ## utils.c:92:19
 1e0828c:    54 01             	{pc, r4} = [sp++]			  ## utils.c:93:1


big_endian_store_32:
 1e0828e:    0a d6             	r2 = r1 >> 24			  ## utils.c:112:0
 1e08290:    ca 60             	b[r0 + 12] = r2			  ## utils.c:113:19
 1e08292:    0a d4             	r2 = r1 >> 16			  ## utils.c:114:27
 1e08294:    da 60             	b[r0 + 13] = r2			  ## utils.c:114:19
 1e08296:    0a d2             	r2 = r1 >> 8			  ## utils.c:115:27
 1e08298:    ea 60             	b[r0 + 14] = r2			  ## utils.c:115:19
 1e0829a:    f9 60             	b[r0 + 15] = r1			  ## utils.c:116:19
 1e0829c:    20 00             	rts			  ## utils.c:117:1


little_endian_store_16:
 1e0829e:    12 fa 00 01       	b[r0+r1] = r2			  ## utils.c:82:0
 1e082a2:    12 d2             	r2 = r2 >> 8			  ## utils.c:84:21
 1e082a4:    11 80             	r1 += 1			  ## utils.c:83:15
 1e082a6:    61 04             	r1 = r1.l (u)			  ## utils.c:84:5
 1e082a8:    12 fa 00 01       	b[r0+r1] = r2			  ## utils.c:84:19
 1e082ac:    20 00             	rts			  ## utils.c:85:1


multi_att_clear_ccc_config:
 1e082ae:    75 01             	[--sp] = {rets, r5, r4}			  ## att_send.c:278:0
 1e082b0:    c1 ff e0 1b 00 00 	r1 = 7136 <att_s_hdl : 1be0 >			  ## att_send.c:281:9
 1e082b6:    01 42             	r1 = [r1 + 0]			  ## att_send.c:281:9
 1e082b8:    0d 22             	if (r1 == 0) goto 26 <multi_att_clear_ccc_config+0x26 : 1e082d4 >			  ## att_send.c:281:9
 1e082ba:    02 70             	r2 = 0
 1e082bc:    03 70             	r3 = 0
 1e082be:    c4 b2             	r4 = r1 + r3			  ## att_send.c:287:32
 1e082c0:    15 58             	r5 = h[r4 + 2] (u)			  ## att_send.c:287:32
 1e082c2:    2d d1             	r5 = r5 >> 4			  ## att_send.c:287:32
 1e082c4:    05 f2 03 10       	if (r5 != r0) goto 6 <multi_att_clear_ccc_config+0x20 : 1e082ce >			  ## att_send.c:287:32
 1e082c8:    12 f8 00 13       	h[r1+r3] = r2			  ## att_send.c:289:24
 1e082cc:    1a 58             	h[r4 + 2] = r2			  ## att_send.c:290:21
 1e082ce:    43 80             	r3 += 4			  ## att_send.c:286:23
 1e082d0:    03 e6 f5 1f       	if (r3 != 96) goto -22 <multi_att_clear_ccc_config+0x10 : 1e082be >			  ## att_send.c:286:23
 1e082d4:    55 01             	{pc, r5, r4} = [sp++]


check_le_conn_disconnet_flag:
 1e082d6:    34 00             	[--sp] = rets			  ## att_send.c:562:0
 1e082d8:    c0 ff e0 1b 00 00 	r0 = 7136 <att_s_hdl : 1be0 >			  ## att_send.c:563:10
 1e082de:    01 40             	r1 = [r0 + 0]			  ## att_send.c:563:10
 1e082e0:    10 70             	r0 = 1			  ## att_send.c:563:10
 1e082e2:    10 22             	if (r1 == 0) goto 32 <check_le_conn_disconnet_flag+0x2E : 1e08304 >			  ## att_send.c:563:10
 1e082e4:    01 86             	r1 += 96			  ## att_send.c:131:37
 1e082e6:    02 70             	r2 = 0			  ## att_send.c:131:37
 1e082e8:    83 f7 04 10       	r3 = h[r1 ++= 4] (u)			  ## att_send.c:131:37
 1e082ec:    9b d1             	r3 = r3 >> 6			  ## att_send.c:131:37
 1e082ee:    04 36             	if (r3 != 0) goto 8 <check_le_conn_disconnet_flag+0x22 : 1e082f8 >			  ## att_send.c:131:37
 1e082f0:    12 80             	r2 += 1			  ## att_send.c:130:35
 1e082f2:    72 e0 f9 df       	ifs (r2 <= 7) goto -14 <check_le_conn_disconnet_flag+0x12 : 1e082e8 >
 1e082f6:    30 00             	pc = [sp++]			  ## att_send.c:578:1
 1e082f8:    e0 04             	r0 = r3.l (u)			  ## hci_vendor.c:1266:39
 1e082fa:    06 15             	call -1524 <le_hci_connection_for_handle : 1e07d08 >			  ## hci_vendor.c:1266:39
 1e082fc:    01 08             	r1 = r0			  ## hci_vendor.c:1266:39
 1e082fe:    10 70             	r0 = 1			  ## att_send.c:573:11
 1e08300:    01 22             	if (r1 == 0) goto 2 <check_le_conn_disconnet_flag+0x2E : 1e08304 >			  ## att_send.c:573:11
 1e08302:    00 70             	r0 = 0
 1e08304:    30 00             	pc = [sp++]			  ## att_send.c:578:1


get_conn_for_addr:
 1e08306:    76 01             	[--sp] = {rets, r6-r4}			  ## avctp_user.c:247:0
 1e08308:    c6 ff 48 1b 00 00 	r6 = 6984 <__user_info+0x88 : 1b48 >			  ## avctp_user.c:247:0
 1e0830e:    05 08             	r5 = r0			  ## avctp_user.c:247:0
 1e08310:    64 08             	r4 = r6			  ## avctp_user.c:247:0
 1e08312:    62 70             	r2 = 6			  ## avctp_user.c:250:14
 1e08314:    50 08             	r0 = r5			  ## avctp_user.c:250:14
 1e08316:    41 08             	r1 = r4			  ## avctp_user.c:250:14
 1e08318:    97 f3 e8 f5       	call 3140560 <memcmp : 106eec >			  ## avctp_user.c:250:14
 1e0831c:    03 30             	if (r0 != 0) goto 6 <get_conn_for_addr+0x1E : 1e08324 >			  ## avctp_user.c:250:14
 1e0831e:    30 48             	r0 = [r4 + 12]			  ## avctp_user.c:251:22
 1e08320:    3d f3 05 00       	if ((r0 & 536870912) != 0) goto 10 <get_conn_for_addr+0x28 : 1e0832e >			  ## avctp_user.c:251:22
 1e08324:    84 81             	r4 += 24			  ## avctp_user.c:249:5
 1e08326:    80 9d             	r0 = r6 + 24			  ## avctp_user.c:249:5
 1e08328:    04 f2 f3 3f       	if (r4 < r0) goto -26 <get_conn_for_addr+0xC : 1e08312 >			  ## avctp_user.c:249:5
 1e0832c:    04 70             	r4 = 0
 1e0832e:    40 08             	r0 = r4			  ## avctp_user.c:256:1
 1e08330:    56 01             	{pc, r6-r4} = [sp++]			  ## avctp_user.c:256:1


bt_event_update_to_user:
 1e08332:    76 01             	[--sp] = {rets, r6-r4}			  ## user_interface.c:317:0
 1e08334:    f4 0b             	sp += -24			  ## user_interface.c:317:0
 1e08336:    34 08             	r4 = r3			  ## user_interface.c:317:0
 1e08338:    25 08             	r5 = r2			  ## user_interface.c:317:0
 1e0833a:    16 08             	r6 = r1			  ## user_interface.c:317:0
 1e0833c:    01 08             	r1 = r0			  ## user_interface.c:317:0
 1e0833e:    00 71             	r0 = 16			  ## user_interface.c:320:12
 1e08340:    90 f5 00 00       	h[sp] = r0			  ## user_interface.c:320:12
 1e08344:    00 a0             	r0 = sp + 0			  ## user_interface.c:320:12
 1e08346:    05 22             	if (r1 == 0) goto 10 <bt_event_update_to_user+0x20 : 1e08352 >			  ## user_interface.c:320:12
 1e08348:    80 80             	r0 += 8
 1e0834a:    10 80             	r0 += 1			  ## user_interface.c:322:9
 1e0834c:    62 70             	r2 = 6			  ## user_interface.c:322:9
 1e0834e:    97 f3 c9 f5       	call 3140498 <memcpy : 106ee4 >			  ## user_interface.c:322:9
 1e08352:    1e 02             	[sp+4] = r6			  ## user_interface.c:324:12
 1e08354:    d5 f5 08 00       	b[sp+8] = r5			  ## user_interface.c:325:18
 1e08358:    4c 02             	[sp+16] = r4			  ## user_interface.c:326:18
 1e0835a:    00 a0             	r0 = sp + 0			  ## user_interface.c:326:18
 1e0835c:    80 f3 8f 43       	call 34590 <sys_event_notify : 1e10a7e >			  ## user_interface.c:327:5
 1e08360:    0c 0a             	sp += 24
 1e08362:    56 01             	{pc, r6-r4} = [sp++]			  ## user_interface.c:329:1


update_bt_current_status:
 1e08364:    79 01             	[--sp] = {rets, r9-r4}			  ## avctp_user.c:720:0
 1e08366:    28 08             	r8 = r2			  ## avctp_user.c:720:0
 1e08368:    14 08             	r4 = r1			  ## avctp_user.c:720:0
 1e0836a:    05 08             	r5 = r0			  ## avctp_user.c:720:0
 1e0836c:    a6 7a             	r6 = 170			  ## avctp_user.c:720:0
 1e0836e:    c9 ff c0 1a 00 00 	r9 = 6848 <__user_info : 1ac0 >			  ## avctp_user.c:720:0
 1e08374:    1d 2a             	if (r5 == 0) goto 58 <update_bt_current_status+0x4C : 1e083b0 >			  ## avctp_user.c:720:0
 1e08376:    c7 17             	call -114 <get_conn_for_addr : 1e08306 >			  ## avctp_user.c:728:25
 1e08378:    07 08             	r7 = r0			  ## avctp_user.c:728:25
 1e0837a:    1a 2e             	if (r7 == 0) goto 52 <update_bt_current_status+0x4C : 1e083b0 >
 1e0837c:    e4 e0 04 00       	if (r4 == 14) goto 8 <update_bt_current_status+0x24 : 1e08388 >
 1e08380:    b4 e0 02 00       	if (r4 == 11) goto 4 <update_bt_current_status+0x24 : 1e08388 >
 1e08384:    30 5e             	r0 = h[r7 + 6] (u)			  ## avctp_user.c:739:19
 1e08386:    06 20             	if (r0 == 0) goto 12 <update_bt_current_status+0x30 : 1e08394 >			  ## avctp_user.c:739:19
 1e08388:    90 fc c8 00       	r0 = r9 + 200
 1e0838c:    62 70             	r2 = 6
 1e0838e:    51 08             	r1 = r5
 1e08390:    97 f3 a8 f5       	call 3140432 <memcpy : 106ee4 >
 1e08394:    00 6f             	r0 = b[r7 + 16] (u)
 1e08396:    08 e0 09 00       	if (r8 == 0) goto 18 <update_bt_current_status+0x48 : 1e083ac >
 1e0839a:    31 4e             	r1 = [r7 + 12]
 1e0839c:    21 fd 0f 19       	r1 = r1 & 15			  ## avctp_user.c:747:30
 1e083a0:    11 fd 05 19       	r1 = r1 ^ 5			  ## avctp_user.c:747:30
 1e083a4:    01 22             	if (r1 == 0) goto 2 <update_bt_current_status+0x44 : 1e083a8 >			  ## avctp_user.c:747:30
 1e083a6:    e8 72             	r8 = 46			  ## avctp_user.c:749:9
 1e083a8:    18 f9 0b 70       	b[r7 + 11] = r8
 1e083ac:    81 fd 30 60       	r6 = uextra(r0, p:6, l:1)			  ## avctp_user.c:754:28
 1e083b0:    09 28             	if (r4 == 0) goto 18 <update_bt_current_status+0x60 : 1e083c4 >
 1e083b2:    14 f9 10 91       	b[r9 + 272] = r4			  ## avctp_user.c:757:37
 1e083b6:    c1 ff 00 4e 4f 43 	r1 = 1129270784 <uECC_vli_cmp_unsafe+0x13EDE04 : 14f4e00 >			  ## avctp_user.c:758:9
 1e083bc:    50 08             	r0 = r5			  ## avctp_user.c:758:9
 1e083be:    42 08             	r2 = r4			  ## avctp_user.c:758:9
 1e083c0:    63 08             	r3 = r6			  ## avctp_user.c:758:9
 1e083c2:    b7 17             	call -146 <bt_event_update_to_user : 1e08332 >			  ## avctp_user.c:758:9
 1e083c4:    59 01             	{pc, r9-r4} = [sp++]			  ## avctp_user.c:761:1


btstack_exit:
 1e083c6:    7a 01             	[--sp] = {rets, r10-r4}			  ## btstack_task.c:231:0
 1e083c8:    fe 0b             	sp += -4			  ## btstack_task.c:231:0
 1e083ca:    c8 ff 84 09 00 00 	r8 = 2436 <btstack_task_create_flag : 984 >			  ## btstack_task.c:231:0
 1e083d0:    00 f9 00 80       	r0 = b[r8 + 0] (u)			  ## btstack_task.c:231:0
 1e083d4:    5d 20             	if (r0 == 0) goto 186 <btstack_exit+0xCA : 1e08490 >			  ## btstack_task.c:231:0
 1e083d6:    00 75             	r0 = 80			  ## btstack_task.c:238:19
 1e083d8:    80 f3 ed 3a       	call 30170 <malloc : 1e0f9b6 >			  ## btstack_task.c:238:19
 1e083dc:    09 08             	r9 = r0			  ## btstack_task.c:238:19
 1e083de:    08 02             	[sp] = r0			  ## btstack_task.c:238:13
 1e083e0:    02 30             	if (r0 != 0) goto 4 <btstack_exit+0x20 : 1e083e6 >			  ## btstack_task.c:238:13
 1e083e2:    8f f3 fd d7       	call 2076666 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e083e6:    c0 ff f2 56 e1 01 	r0 = 31545074 <update_target_end+0x286A : 1e156f2 >			  ## btstack_task.c:241:5
 1e083ec:    80 f3 c3 37       	call 28550 <puts : 1e0f376 >			  ## btstack_task.c:241:5
 1e083f0:    00 70             	r0 = 0			  ## btstack_task.c:242:5
 1e083f2:    06 70             	r6 = 0			  ## btstack_task.c:242:5
 1e083f4:    2a 16             	call -940 <ble_stack_exit : 1e0804a >			  ## btstack_task.c:242:5
 1e083f6:    c0 ff 06 57 e1 01 	r0 = 31545094 <update_target_end+0x287E : 1e15706 >			  ## btstack_task.c:243:5
 1e083fc:    80 f3 bb 37       	call 28534 <puts : 1e0f376 >			  ## btstack_task.c:243:5
 1e08400:    80 f3 00 86       	call 68608 <btctrler_task_exit : 1e19004 >			  ## btstack_task.c:244:5
 1e08404:    c0 ff 15 57 e1 01 	r0 = 31545109 <update_target_end+0x288D : 1e15715 >			  ## btstack_task.c:245:5
 1e0840a:    80 f3 b4 37       	call 28520 <puts : 1e0f376 >			  ## btstack_task.c:245:5
 1e0840e:    c7 ff fc 7b e0 01 	r7 = 31489020 <l2cap_signaling_commands_format : 1e07bfc >			  ## btstack_task.c:245:5
 1e08414:    ca ff 9c 7b e0 01 	r10 = 31488924 <sdp_record_item_end : 1e07b9c >			  ## btstack_task.c:245:5
 1e0841a:    7a f2 14 20       	if (r10 >= r7) goto 40 <btstack_exit+0x80 : 1e08446 >
 1e0841e:    04 70             	r4 = 0
 1e08420:    a5 08             	r5 = r10
 1e08422:    20 4a             	r0 = [r5 + 8]			  ## avctp_user.c:3184:19
 1e08424:    80 00             	call r0			  ## avctp_user.c:3184:16
 1e08426:    40 09             	r0 += r4			  ## avctp_user.c:3183:5
 1e08428:    c5 80             	r5 += 12			  ## avctp_user.c:3183:49
 1e0842a:    04 04             	r4 = r0.b0 (u)			  ## avctp_user.c:3183:5
 1e0842c:    75 f2 f9 3f       	if (r5 < r7) goto -14 <btstack_exit+0x5C : 1e08422 >			  ## avctp_user.c:3183:5
 1e08430:    0a 28             	if (r4 == 0) goto 20 <btstack_exit+0x80 : 1e08446 >
 1e08432:    30 72             	r0 = 35			  ## btstack_task.c:248:9
 1e08434:    80 f3 ce 37       	call 28572 <putchar : 1e0f3d4 >			  ## btstack_task.c:248:9
 1e08438:    40 71             	r0 = 20			  ## btstack_task.c:249:9
 1e0843a:    97 f3 bd f4       	call 3139962 <os_time_dly : 106db8 >			  ## btstack_task.c:249:9
 1e0843e:    16 80             	r6 += 1			  ## btstack_task.c:251:23
 1e08440:    80 05             	r0 = r6.b0 (u)			  ## btstack_task.c:251:23
 1e08442:    00 e1 ea 3f       	if (r0 < 16) goto -44 <btstack_exit+0x54 : 1e0841a >			  ## btstack_task.c:251:23
 1e08446:    c0 ff 2a 57 e1 01 	r0 = 31545130 <update_target_end+0x28A2 : 1e1572a >			  ## btstack_task.c:258:5
 1e0844c:    80 f3 93 37       	call 28454 <puts : 1e0f376 >			  ## btstack_task.c:258:5
 1e08450:    00 70             	r0 = 0			  ## btstack_task.c:260:5
 1e08452:    41 70             	r1 = 4			  ## btstack_task.c:260:5
 1e08454:    02 70             	r2 = 0			  ## btstack_task.c:260:5
 1e08456:    05 70             	r5 = 0			  ## btstack_task.c:260:5
 1e08458:    85 17             	call -246 <update_bt_current_status : 1e08364 >			  ## btstack_task.c:260:5
 1e0845a:    01 70             	r1 = 0			  ## btstack_task.c:262:5
 1e0845c:    90 08             	r0 = r9			  ## btstack_task.c:262:5
 1e0845e:    97 f3 cf f4       	call 3139998 <os_sem_create : 106e00 >			  ## btstack_task.c:262:5
 1e08462:    c4 ff 8e 56 e1 01 	r4 = 31544974 <update_target_end+0x2806 : 1e1568e >			  ## btstack_task.c:263:5
 1e08468:    c1 ff 04 00 40 00 	r1 = 4194308 <uECC_vli_cmp_unsafe+0x2F9008 : 400004 >			  ## btstack_task.c:263:5
 1e0846e:    03 a0             	r3 = sp + 0			  ## btstack_task.c:263:5
 1e08470:    12 70             	r2 = 1			  ## btstack_task.c:263:5
 1e08472:    40 08             	r0 = r4			  ## btstack_task.c:263:5
 1e08474:    97 f3 b4 f4       	call 3139944 <os_taskq_post_type : 106de0 >			  ## btstack_task.c:263:5
 1e08478:    00 02             	r0 = [sp]			  ## btstack_task.c:265:17
 1e0847a:    01 70             	r1 = 0			  ## btstack_task.c:265:5
 1e0847c:    97 f3 c4 f4       	call 3139976 <os_sem_pend : 106e08 >			  ## btstack_task.c:265:5
 1e08480:    00 02             	r0 = [sp]			  ## btstack_task.c:266:10
 1e08482:    80 f3 c3 3a       	call 30086 <free : 1e0fa0c >			  ## btstack_task.c:266:5
 1e08486:    40 08             	r0 = r4			  ## btstack_task.c:269:5
 1e08488:    80 f3 d4 44       	call 35240 <task_kill : 1e10e34 >			  ## btstack_task.c:269:5
 1e0848c:    15 f9 00 80       	b[r8 + 0] = r5			  ## btstack_task.c:269:5
 1e08490:    02 0a             	sp += 4
 1e08492:    5a 01             	{pc, r10-r4} = [sp++]


cal_crc16_private:
 1e08494:    76 01             	[--sp] = {rets, r6-r4}			  ## btstack_main.c:498:0
 1e08496:    19 22             	if (r1 == 0) goto 50 <cal_crc16_private+0x36 : 1e084ca >			  ## btstack_main.c:498:0
 1e08498:    c3 ff 9e 7c e0 01 	r3 = 31489182 <crc_ta : 1e07c9e >			  ## btstack_main.c:498:0
 1e0849e:    84 f9 01 00       	r4 = b[r0 ++= 1] (u)			  ## btstack_main.c:505:40
 1e084a2:    84 fd 60 52       	r5 = uextra(r2, p:12, l:4)			  ## btstack_main.c:503:14
 1e084a6:    26 d1             	r6 = r4 >> 4			  ## btstack_main.c:505:45
 1e084a8:    d5 bc             	r5 ^= r6			  ## btstack_main.c:505:37
 1e084aa:    45 f8 00 35       	r5 = h[r3+r5<<1] (u)			  ## btstack_main.c:505:27
 1e084ae:    12 c1             	r2 = r2 << 4			  ## btstack_main.c:504:24
 1e084b0:    d2 ba             	r2 ^= r5			  ## btstack_main.c:505:24
 1e084b2:    84 fd 60 52       	r5 = uextra(r2, p:12, l:4)			  ## btstack_main.c:506:14
 1e084b6:    24 fd 0f 49       	r4 = r4 & 15			  ## btstack_main.c:508:45
 1e084ba:    d4 ba             	r4 ^= r5			  ## btstack_main.c:508:37
 1e084bc:    44 f8 00 34       	r4 = h[r3+r4<<1] (u)			  ## btstack_main.c:508:27
 1e084c0:    12 c1             	r2 = r2 << 4			  ## btstack_main.c:507:24
 1e084c2:    f1 8f             	r1 += -1			  ## btstack_main.c:510:12
 1e084c4:    65 04             	r5 = r1.l (u)			  ## btstack_main.c:502:5
 1e084c6:    d2 b8             	r2 ^= r4			  ## btstack_main.c:508:24
 1e084c8:    ea 3b             	if (r5 != 0) goto -44 <cal_crc16_private+0xA : 1e0849e >
 1e084ca:    a0 04             	r0 = r2.l (u)			  ## btstack_main.c:512:5
 1e084cc:    56 01             	{pc, r6-r4} = [sp++]			  ## btstack_main.c:512:5


lib_make_ble_address:
 1e084ce:    75 01             	[--sp] = {rets, r5, r4}			  ## btstack_main.c:516:0
 1e084d0:    fe 0b             	sp += -4			  ## btstack_main.c:516:0
 1e084d2:    04 08             	r4 = r0			  ## btstack_main.c:516:0
 1e084d4:    30 98             	r0 = r4 + 3			  ## btstack_main.c:518:13
 1e084d6:    c5 ff a0 08 00 00 	r5 = 2208 <ble_device_name_len : 8a0 >			  ## btstack_main.c:521:15
 1e084dc:    51 fc 7d 00       	r1 = r5 + 125			  ## btstack_main.c:521:15
 1e084e0:    32 70             	r2 = 3			  ## btstack_main.c:518:5
 1e084e2:    97 f3 ff f4       	call 3140094 <memcpy : 106ee4 >			  ## btstack_main.c:518:5
 1e084e6:    50 fc 7a 00       	r0 = r5 + 122			  ## btstack_main.c:518:5
 1e084ea:    61 70             	r1 = 6			  ## btstack_main.c:519:15
 1e084ec:    02 70             	r2 = 0			  ## btstack_main.c:519:15
 1e084ee:    d2 17             	call -92 <cal_crc16_private : 1e08494 >			  ## btstack_main.c:519:15
 1e084f0:    02 08             	r2 = r0			  ## btstack_main.c:519:15
 1e084f2:    0a 02             	[sp] = r2			  ## btstack_main.c:519:13
 1e084f4:    10 d2             	r0 = r2 >> 8			  ## btstack_main.c:520:5
 1e084f6:    18 68             	b[r4 + 1] = r0			  ## btstack_main.c:520:5
 1e084f8:    0a 68             	b[r4 + 0] = r2			  ## btstack_main.c:520:5
 1e084fa:    05 f9 7c 50       	r5 = b[r5 + 124] (u)			  ## btstack_main.c:521:15
 1e084fe:    00 a0             	r0 = sp + 0			  ## btstack_main.c:521:15
 1e08500:    21 70             	r1 = 2			  ## btstack_main.c:521:32
 1e08502:    c8 17             	call -112 <cal_crc16_private : 1e08494 >			  ## btstack_main.c:521:32
 1e08504:    50 09             	r0 += r5			  ## btstack_main.c:521:30
 1e08506:    28 68             	b[r4 + 2] = r0			  ## btstack_main.c:522:20
 1e08508:    02 0a             	sp += 4			  ## btstack_main.c:522:20
 1e0850a:    55 01             	{pc, r5, r4} = [sp++]			  ## btstack_main.c:523:1


btstack_init:
 1e0850c:    74 01             	[--sp] = {rets, r4}			  ## btstack_task.c:202:0
 1e0850e:    fe 0b             	sp += -4			  ## btstack_task.c:202:0
 1e08510:    c0 ff c9 56 e1 01 	r0 = 31545033 <update_target_end+0x2841 : 1e156c9 >			  ## btstack_task.c:203:5
 1e08516:    21 70             	r1 = 2			  ## btstack_task.c:203:5
 1e08518:    12 70             	r2 = 1			  ## btstack_task.c:203:5
 1e0851a:    14 70             	r4 = 1			  ## btstack_task.c:203:5
 1e0851c:    80 f3 d5 35       	call 27562 <printf : 1e0f0ca >			  ## btstack_task.c:203:5
 1e08520:    c0 ff db 56 e1 01 	r0 = 31545051 <update_target_end+0x2853 : 1e156db >			  ## btstack_task.c:204:5
 1e08526:    11 70             	r1 = 1			  ## btstack_task.c:204:5
 1e08528:    12 70             	r2 = 1			  ## btstack_task.c:204:5
 1e0852a:    03 70             	r3 = 0			  ## btstack_task.c:204:5
 1e0852c:    0c 02             	[sp] = r4			  ## btstack_task.c:204:5
 1e0852e:    80 f3 cc 35       	call 27544 <printf : 1e0f0ca >			  ## btstack_task.c:204:5
 1e08532:    c0 ff 80 09 00 00 	r0 = 2432 <is_btstack_lowpower_active : 980 >			  ## btstack_task.c:204:5
 1e08538:    0c 60             	b[r0 + 0] = r4			  ## btstack_task.c:204:5
 1e0853a:    c0 ff 84 09 00 00 	r0 = 2436 <btstack_task_create_flag : 984 >			  ## btstack_task.c:204:5
 1e08540:    0c 60             	b[r0 + 0] = r4			  ## btstack_task.c:204:5
 1e08542:    80 f3 a5 85       	call 68426 <btctrler_task_init : 1e19090 >			  ## btstack_task.c:213:5
 1e08546:    03 18             	goto 6 <btstack_init+0x42 : 1e0854e >			  ## btstack_task.c:213:5
 1e08548:    20 70             	r0 = 2			  ## btstack_task.c:223:9
 1e0854a:    97 f3 35 f4       	call 3139690 <os_time_dly : 106db8 >			  ## btstack_task.c:223:9
 1e0854e:    80 f3 af 85       	call 68446 <btctrler_task_ready : 1e190b0 >
 1e08552:    fa 21             	if (r0 == 0) goto -12 <btstack_init+0x3C : 1e08548 >
 1e08554:    c0 ff 1c a5 e0 01 	r0 = 31499548 <btstack_task : 1e0a51c >			  ## btstack_task.c:225:12
 1e0855a:    c2 ff 8e 56 e1 01 	r2 = 31544974 <update_target_end+0x2806 : 1e1568e >			  ## btstack_task.c:225:12
 1e08560:    01 70             	r1 = 0			  ## btstack_task.c:225:12
 1e08562:    80 f3 44 44       	call 34952 <task_create : 1e10dee >			  ## btstack_task.c:225:12
 1e08566:    02 0a             	sp += 4			  ## btstack_task.c:225:12
 1e08568:    54 01             	{pc, r4} = [sp++]			  ## btstack_task.c:225:12


set_remote_test_flag:
 1e0856a:    76 01             	[--sp] = {rets, r6-r4}			  ## user_interface.c:220:0
 1e0856c:    c1 ff 90 09 00 00 	r1 = 2448 <stack_configs_app : 990 >			  ## user_interface.c:220:0
 1e08572:    44 63             	r4 = b[r1 + 20] (u)			  ## user_interface.c:220:0
 1e08574:    35 63             	r5 = b[r1 + 19] (u)			  ## user_interface.c:220:0
 1e08576:    26 63             	r6 = b[r1 + 18] (u)			  ## user_interface.c:220:0
 1e08578:    13 63             	r3 = b[r1 + 17] (u)			  ## user_interface.c:220:0
 1e0857a:    52 63             	r2 = b[r1 + 21] (u)			  ## user_interface.c:220:0
 1e0857c:    c8 fd 40 54       	r5 <= insert(r4, p:8, l:8)			  ## user_interface.c:220:0
 1e08580:    c8 fd 40 36       	r3 <= insert(r6, p:8, l:8)			  ## user_interface.c:220:0
 1e08584:    d0 fd 80 35       	r3 <= insert(r5, p:16, l:16)			  ## user_interface.c:220:0
 1e08588:    07 20             	if (r0 == 0) goto 14 <set_remote_test_flag+0x2E : 1e08598 >			  ## user_interface.c:220:0
 1e0858a:    24 fd 01 09       	r4 = r0 & 1			  ## user_interface.c:225:50
 1e0858e:    30 fd 04 3b       	r0 = r3 & 4294705151			  ## user_interface.c:225:50
 1e08592:    c1 fd 90 04       	r0 <= insert(r4, p:18, l:1)			  ## user_interface.c:225:50
 1e08596:    02 18             	goto 4 <set_remote_test_flag+0x32 : 1e0859c >			  ## user_interface.c:225:50
 1e08598:    30 fd 04 3b       	r0 = r3 & 4294705151			  ## user_interface.c:223:50
 1e0859c:    18 63             	b[r1 + 17] = r0
 1e0859e:    03 d6             	r3 = r0 >> 24
 1e085a0:    4b 63             	b[r1 + 20] = r3
 1e085a2:    03 d4             	r3 = r0 >> 16
 1e085a4:    3b 63             	b[r1 + 19] = r3
 1e085a6:    00 d2             	r0 = r0 >> 8
 1e085a8:    28 63             	b[r1 + 18] = r0
 1e085aa:    5a 63             	b[r1 + 21] = r2
 1e085ac:    56 01             	{pc, r6-r4} = [sp++]			  ## user_interface.c:227:1


multi_att_set_ccc_config:
 1e085ae:    77 01             	[--sp] = {rets, r7-r4}			  ## att_send.c:216:0
 1e085b0:    c3 ff e0 1b 00 00 	r3 = 7136 <att_s_hdl : 1be0 >			  ## att_send.c:221:5
 1e085b6:    04 46             	r4 = [r3 + 0]			  ## att_send.c:221:5
 1e085b8:    18 28             	if (r4 == 0) goto 48 <multi_att_set_ccc_config+0x3C : 1e085ea >			  ## att_send.c:221:5
 1e085ba:    23 98             	r3 = r4 + 2			  ## att_send.c:225:5
 1e085bc:    05 70             	r5 = 0			  ## att_send.c:225:5
 1e085be:    06 56             	r6 = h[r3 + 0] (u)			  ## att_send.c:226:32
 1e085c0:    37 d1             	r7 = r6 >> 4			  ## att_send.c:226:32
 1e085c2:    07 f2 04 10       	if (r7 != r0) goto 8 <multi_att_set_ccc_config+0x20 : 1e085ce >			  ## att_send.c:226:32
 1e085c6:    07 f7 fe 3f       	r7 = h[r3 + -2] (u)			  ## att_send.c:226:66
 1e085ca:    17 f2 0f 00       	if (r7 == r1) goto 30 <multi_att_set_ccc_config+0x3E : 1e085ec >			  ## att_send.c:226:66
 1e085ce:    15 80             	r5 += 1			  ## att_send.c:225:48
 1e085d0:    43 80             	r3 += 4			  ## att_send.c:225:23
 1e085d2:    85 e1 f4 bf       	ifs (r5 < 24) goto -24 <multi_att_set_ccc_config+0x10 : 1e085be >			  ## att_send.c:225:23
 1e085d6:    09 24             	if (r2 == 0) goto 18 <multi_att_set_ccc_config+0x3C : 1e085ea >
 1e085d8:    23 98             	r3 = r4 + 2			  ## att_send.c:247:36
 1e085da:    04 70             	r4 = 0			  ## att_send.c:247:36
 1e085dc:    05 56             	r5 = h[r3 + 0] (u)			  ## att_send.c:247:36
 1e085de:    f5 e0 0c 90       	if (r5 <= 15) goto 24 <multi_att_set_ccc_config+0x4C : 1e085fa >
 1e085e2:    14 80             	r4 += 1			  ## att_send.c:246:52
 1e085e4:    43 80             	r3 += 4			  ## att_send.c:246:27
 1e085e6:    84 e1 f9 bf       	ifs (r4 < 24) goto -14 <multi_att_set_ccc_config+0x2E : 1e085dc >			  ## att_send.c:246:27
 1e085ea:    57 01             	{pc, r7-r4} = [sp++]			  ## att_send.c:256:1
 1e085ec:    0e 24             	if (r2 == 0) goto 28 <multi_att_set_ccc_config+0x5C : 1e0860a >			  ## att_send.c:227:17
 1e085ee:    20 fd 0f 29       	r0 = r2 & 15			  ## att_send.c:229:25
 1e085f2:    31 fd 0f 69       	r1 = r6 & 4294967280			  ## att_send.c:229:25
 1e085f6:    50 b2             	r0 |= r1			  ## att_send.c:229:25
 1e085f8:    0b 18             	goto 22 <multi_att_set_ccc_config+0x62 : 1e08610 >			  ## att_send.c:229:25
 1e085fa:    11 f7 fe 3f       	h[r3 + -2] = r1			  ## att_send.c:249:28
 1e085fe:    21 fd 0f 29       	r1 = r2 & 15			  ## att_send.c:250:25
 1e08602:    d0 fd 20 10       	r1 <= insert(r0, p:4, l:16)			  ## att_send.c:250:25
 1e08606:    09 56             	h[r3 + 0] = r1			  ## att_send.c:250:25
 1e08608:    57 01             	{pc, r7-r4} = [sp++]			  ## att_send.c:256:1
 1e0860a:    00 70             	r0 = 0
 1e0860c:    10 f7 fe 3f       	h[r3 + -2] = r0			  ## att_send.c:232:28
 1e08610:    08 56             	h[r3 + 0] = r0			  ## att_send.c:229:25
 1e08612:    57 01             	{pc, r7-r4} = [sp++]			  ## att_send.c:256:1


swapX:
 1e08614:    52 70             	r2 = 5			  ## utils.c:199:0
 1e08616:    83 f9 01 00       	r3 = b[r0 ++= 1] (u)			  ## utils.c:202:28
 1e0861a:    13 fa 00 12       	b[r1+r2] = r3			  ## utils.c:202:26
 1e0861e:    f2 8f             	r2 += -1			  ## utils.c:201:19
 1e08620:    f2 ef f9 1f       	if (r2 != -1) goto -14 <swapX+0x2 : 1e08616 >			  ## utils.c:201:5
 1e08624:    20 00             	rts			  ## utils.c:204:1


get_list_exist_item:
 1e08626:    74 01             	[--sp] = {rets, r4}			  ## remote_device_list.c:240:0
 1e08628:    c2 ff b4 09 00 00 	r2 = 2484 <remote_info_hdl : 9b4 >			  ## remote_device_list.c:241:18
 1e0862e:    12 64             	r2 = b[r2 + 1] (u)			  ## remote_device_list.c:241:18
 1e08630:    04 08             	r4 = r0			  ## remote_device_list.c:241:18
 1e08632:    22 fd 0f 29       	r2 = r2 & 15			  ## remote_device_list.c:241:18
 1e08636:    00 70             	r0 = 0			  ## remote_device_list.c:241:18
 1e08638:    12 f2 10 90       	if (r2 <= r1) goto 32 <get_list_exist_item+0x36 : 1e0865c >			  ## remote_device_list.c:241:18
 1e0863c:    10 fc 76 00       	r0 = r1 + 118			  ## remote_device_list.c:245:52
 1e08640:    42 73             	r2 = 52			  ## remote_device_list.c:245:15
 1e08642:    41 08             	r1 = r4			  ## remote_device_list.c:245:15
 1e08644:    80 f3 94 47       	call 36648 <syscfg_read : 1e11570 >			  ## remote_device_list.c:245:15
 1e08648:    40 e3 07 10       	if (r0 != 52) goto 14 <get_list_exist_item+0x34 : 1e0865a >
 1e0864c:    00 f9 26 40       	r0 = b[r4 + 38] (u)			  ## remote_device_list.c:246:41
 1e08650:    21 fd 0f 09       	r1 = r0 & 15			  ## remote_device_list.c:246:41
 1e08654:    10 70             	r0 = 1			  ## remote_device_list.c:246:41
 1e08656:    a1 e0 01 00       	if (r1 == 10) goto 2 <get_list_exist_item+0x36 : 1e0865c >			  ## remote_device_list.c:246:41
 1e0865a:    00 70             	r0 = 0
 1e0865c:    54 01             	{pc, r4} = [sp++]			  ## remote_device_list.c:252:1


check_random_addr:
 1e0865e:    75 01             	[--sp] = {rets, r5, r4}			  ## remote_device_list.c:166:0
 1e08660:    f2 0b             	sp += -28			  ## remote_device_list.c:166:0
 1e08662:    03 60             	r3 = b[r0 + 0] (u)			  ## remote_device_list.c:173:10
 1e08664:    25 fd c0 39       	r5 = r3 & 192			  ## remote_device_list.c:173:21
 1e08668:    23 08             	r3 = r2			  ## remote_device_list.c:173:21
 1e0866a:    14 08             	r4 = r1
 1e0866c:    05 e4 16 10       	if (r5 != 64) goto 44 <check_random_addr+0x3E : 1e0869c >
 1e08670:    31 a0             	r1 = sp + 3
 1e08672:    d0 17             	call -96 <swapX : 1e08614 >			  ## remote_device_list.c:184:5
 1e08674:    f0 70             	r0 = 15
 1e08676:    81 f9 01 40       	r1 = b[r4 ++= 1] (u)			  ## utils.c:202:28
 1e0867a:    92 a0             	r2 = sp + 9
 1e0867c:    11 fa 00 20       	b[r2+r0] = r1			  ## utils.c:202:26
 1e08680:    f0 8f             	r0 += -1			  ## utils.c:201:19
 1e08682:    f0 ef f8 1f       	if (r0 != -1) goto -16 <check_random_addr+0x18 : 1e08676 >			  ## utils.c:201:5
 1e08686:    34 a0             	r4 = sp + 3
 1e08688:    31 98             	r1 = r4 + 3			  ## remote_device_list.c:196:33
 1e0868a:    90 a0             	r0 = sp + 9			  ## remote_device_list.c:196:33
 1e0868c:    95 a1             	r5 = sp + 25			  ## remote_device_list.c:196:33
 1e0868e:    52 08             	r2 = r5			  ## remote_device_list.c:196:5
 1e08690:    80 f3 17 9d       	call 80430 <irk_enc : 1e1c0c2 >			  ## remote_device_list.c:196:5
 1e08694:    32 70             	r2 = 3			  ## remote_device_list.c:201:10
 1e08696:    50 08             	r0 = r5			  ## remote_device_list.c:201:10
 1e08698:    41 08             	r1 = r4			  ## remote_device_list.c:201:10
 1e0869a:    02 18             	goto 4 <check_random_addr+0x42 : 1e086a0 >			  ## remote_device_list.c:201:10
 1e0869c:    62 70             	r2 = 6			  ## remote_device_list.c:175:14
 1e0869e:    31 08             	r1 = r3			  ## remote_device_list.c:175:14
 1e086a0:    97 f3 24 f4       	call 3139656 <memcmp : 106eec >
 1e086a4:    11 70             	r1 = 1
 1e086a6:    01 20             	if (r0 == 0) goto 2 <check_random_addr+0x4C : 1e086aa >
 1e086a8:    01 70             	r1 = 0
 1e086aa:    10 08             	r0 = r1			  ## remote_device_list.c:208:1
 1e086ac:    0e 0a             	sp += 28			  ## remote_device_list.c:208:1
 1e086ae:    55 01             	{pc, r5, r4} = [sp++]			  ## remote_device_list.c:208:1


get_conn_addr_item:
 1e086b0:    7b 01             	[--sp] = {rets, r11-r4}			  ## remote_device_list.c:321:0
 1e086b2:    cb ff b4 09 00 00 	r11 = 2484 <remote_info_hdl : 9b4 >			  ## remote_device_list.c:321:0
 1e086b8:    06 f9 02 b0       	r6 = b[r11 + 2] (u)			  ## remote_device_list.c:325:22
 1e086bc:    34 08             	r4 = r3			  ## remote_device_list.c:325:22
 1e086be:    25 08             	r5 = r2
 1e086c0:    19 08             	r9 = r1
 1e086c2:    0a 08             	r10 = r0
 1e086c4:    00 70             	r0 = 0
 1e086c6:    2e 2c             	if (r6 == 0) goto 92 <get_conn_addr_item+0x74 : 1e08724 >
 1e086c8:    01 f9 01 b0       	r1 = b[r11 + 1] (u)			  ## remote_device_list.c:330:29
 1e086cc:    60 ff 0f 19 29 00 	if ((r1 & 15) == 0) goto 82 <get_conn_addr_item+0x74 : 1e08724 >			  ## remote_device_list.c:330:29
 1e086d2:    58 fc 20 00       	r8 = r5 + 32			  ## remote_device_list.c:340:76
 1e086d6:    07 70             	r7 = 0			  ## remote_device_list.c:340:76
 1e086d8:    06 70             	r6 = 0			  ## remote_device_list.c:340:76
 1e086da:    c1 05             	r1 = r7.b0 (u)			  ## remote_device_list.c:331:13
 1e086dc:    50 08             	r0 = r5			  ## remote_device_list.c:331:13
 1e086de:    a3 17             	call -186 <get_list_exist_item : 1e08626 >			  ## remote_device_list.c:331:13
 1e086e0:    18 20             	if (r0 == 0) goto 48 <get_conn_addr_item+0x62 : 1e08712 >			  ## remote_device_list.c:331:13
 1e086e2:    00 ff ff 40 06 00 	if (r4 == 255) goto 12 <get_conn_addr_item+0x44 : 1e086f4 >
 1e086e8:    00 f9 26 50       	r0 = b[r5 + 38] (u)			  ## remote_device_list.c:332:47
 1e086ec:    81 fd 20 00       	r0 = uextra(r0, p:4, l:1)			  ## remote_device_list.c:332:47
 1e086f0:    40 f2 0f 10       	if (r0 != r4) goto 30 <get_conn_addr_item+0x62 : 1e08712 >			  ## remote_device_list.c:332:47
 1e086f4:    09 e0 07 00       	if (r9 == 0) goto 14 <get_conn_addr_item+0x56 : 1e08706 >
 1e086f8:    a0 08             	r0 = r10			  ## remote_device_list.c:340:32
 1e086fa:    51 08             	r1 = r5			  ## remote_device_list.c:340:32
 1e086fc:    82 08             	r2 = r8			  ## remote_device_list.c:340:32
 1e086fe:    af 17             	call -162 <check_random_addr : 1e0865e >			  ## remote_device_list.c:340:32
 1e08700:    10 e0 07 10       	if (r0 != 1) goto 14 <get_conn_addr_item+0x62 : 1e08712 >			  ## remote_device_list.c:340:32
 1e08704:    10 18             	goto 32 <get_conn_addr_item+0x76 : 1e08726 >			  ## remote_device_list.c:340:32
 1e08706:    62 70             	r2 = 6			  ## remote_device_list.c:335:26
 1e08708:    80 08             	r0 = r8			  ## remote_device_list.c:335:26
 1e0870a:    a1 08             	r1 = r10			  ## remote_device_list.c:335:26
 1e0870c:    97 f3 ee f3       	call 3139548 <memcmp : 106eec >			  ## remote_device_list.c:335:26
 1e08710:    0a 20             	if (r0 == 0) goto 20 <get_conn_addr_item+0x76 : 1e08726 >			  ## remote_device_list.c:335:26
 1e08712:    00 f9 01 b0       	r0 = b[r11 + 1] (u)			  ## remote_device_list.c:330:29
 1e08716:    16 80             	r6 += 1			  ## remote_device_list.c:330:43
 1e08718:    20 fd 0f 09       	r0 = r0 & 15			  ## remote_device_list.c:330:21
 1e0871c:    17 80             	r7 += 1			  ## remote_device_list.c:330:19
 1e0871e:    06 f2 dc 3f       	if (r6 < r0) goto -72 <get_conn_addr_item+0x2A : 1e086da >			  ## remote_device_list.c:330:19
 1e08722:    00 70             	r0 = 0
 1e08724:    5b 01             	{pc, r11-r4} = [sp++]			  ## remote_device_list.c:351:1
 1e08726:    10 70             	r0 = 1
 1e08728:    5b 01             	{pc, r11-r4} = [sp++]			  ## remote_device_list.c:351:1


ble_list_get_remote_type:
 1e0872a:    74 01             	[--sp] = {rets, r4}			  ## remote_device_list.c:613:0
 1e0872c:    e6 0b             	sp += -52			  ## remote_device_list.c:613:0
 1e0872e:    24 08             	r4 = r2			  ## remote_device_list.c:613:0
 1e08730:    02 a0             	r2 = sp + 0			  ## remote_device_list.c:613:0
 1e08732:    f3 7f             	r3 = 255			  ## remote_device_list.c:616:9
 1e08734:    bd 17             	call -134 <get_conn_addr_item : 1e086b0 >			  ## remote_device_list.c:616:9
 1e08736:    c1 f5 26 00       	r1 = b[sp+38] (u)			  ## remote_device_list.c:617:33
 1e0873a:    8a d1             	r2 = r1 >> 6			  ## remote_device_list.c:617:33
 1e0873c:    01 70             	r1 = 0			  ## remote_device_list.c:616:9
 1e0873e:    01 20             	if (r0 == 0) goto 2 <ble_list_get_remote_type+0x18 : 1e08742 >			  ## remote_device_list.c:616:9
 1e08740:    21 08             	r1 = r2			  ## remote_device_list.c:616:9
 1e08742:    09 68             	b[r4 + 0] = r1			  ## remote_device_list.c:617:22
 1e08744:    1a 0a             	sp += 52			  ## remote_device_list.c:617:22
 1e08746:    54 01             	{pc, r4} = [sp++]			  ## remote_device_list.c:617:22


btstack_lowpower_idle_query:
 1e08748:    c0 ff 80 09 00 00 	r0 = 2432 <is_btstack_lowpower_active : 980 >			  ## btstack_task.c:277:0
 1e0874e:    00 60             	r0 = b[r0 + 0] (u)			  ## btstack_task.c:277:0
 1e08750:    11 70             	r1 = 1			  ## btstack_task.c:277:0
 1e08752:    e3 fd 00 01       	r0 = r1 & ~r0			  ## btstack_task.c:278:5
 1e08756:    20 00             	rts			  ## btstack_task.c:278:5


btstack_linked_list_add_tail:
 1e08758:    02 40             	r2 = [r0 + 0]			  ## btstack_linked_list.c:97:0
 1e0875a:    04 24             	if (r2 == 0) goto 8 <btstack_linked_list_add_tail+0xC : 1e08764 >			  ## btstack_linked_list.c:100:5
 1e0875c:    20 08             	r0 = r2
 1e0875e:    12 f2 fb 1f       	if (r2 != r1) goto -10 <btstack_linked_list_add_tail : 1e08758 >
 1e08762:    20 00             	rts			  ## btstack_linked_list.c:107:1
 1e08764:    c0 f4 00 19       	[r1 + 0] = 0			  ## btstack_linked_list.c:105:16
 1e08768:    09 40             	[r0 + 0] = r1			  ## btstack_linked_list.c:106:14
 1e0876a:    20 00             	rts			  ## btstack_linked_list.c:107:1


hci_add_event_handler:
 1e0876c:    01 08             	r1 = r0			  ## hci_vendor.c:1960:0
 1e0876e:    c0 ff 64 18 00 00 	r0 = 6244 <report_irq_stack_end+0x4 : 1864 >			  ## hci_vendor.c:1961:5
 1e08774:    f1 1f             	goto -30 <btstack_linked_list_add_tail : 1e08758 >			  ## hci_vendor.c:1961:5


ble_stack_gatt_role:
 1e08776:    c0 ff 40 1c 00 00 	r0 = 7232 <btstack_global_info : 1c40 >			  ## btstack_main.c:1071:0
 1e0877c:    01 f9 b5 00       	r1 = b[r0 + 181] (u)			  ## btstack_main.c:1072:36
 1e08780:    21 fd f8 19       	r1 = r1 & 248			  ## btstack_main.c:1072:36
 1e08784:    11 f9 b5 00       	b[r0 + 181] = r1			  ## btstack_main.c:1072:36
 1e08788:    20 00             	rts			  ## btstack_main.c:1073:1


ble_list_init:
 1e0878a:    7a 01             	[--sp] = {rets, r10-r4}			  ## remote_device_list.c:803:0
 1e0878c:    cc 0b             	sp += -104			  ## remote_device_list.c:803:0
 1e0878e:    c4 ff b4 09 00 00 	r4 = 2484 <remote_info_hdl : 9b4 >			  ## remote_device_list.c:803:0
 1e08794:    50 77             	r0 = 117			  ## remote_device_list.c:220:15
 1e08796:    e2 70             	r2 = 14			  ## remote_device_list.c:220:15
 1e08798:    41 08             	r1 = r4			  ## remote_device_list.c:220:15
 1e0879a:    80 f3 e9 46       	call 36306 <syscfg_read : 1e11570 >			  ## remote_device_list.c:220:15
 1e0879e:    e0 e0 39 10       	if (r0 != 14) goto 114 <ble_list_init+0x8A : 1e08814 >
 1e087a2:    00 68             	r0 = b[r4 + 0] (u)			  ## remote_device_list.c:222:13
 1e087a4:    60 e0 36 10       	if (r0 != 6) goto 108 <ble_list_init+0x8A : 1e08814 >
 1e087a8:    20 68             	r0 = b[r4 + 2] (u)			  ## remote_device_list.c:222:13
 1e087aa:    a0 e0 33 80       	if (r0 > 10) goto 102 <ble_list_init+0x8A : 1e08814 >			  ## remote_device_list.c:222:13
 1e087ae:    10 68             	r0 = b[r4 + 1] (u)			  ## remote_device_list.c:814:33
 1e087b0:    60 ff 0f 09 6c 00 	if ((r0 & 15) == 0) goto 216 <ble_list_init+0x104 : 1e0888e >			  ## remote_device_list.c:814:33
 1e087b6:    07 70             	r7 = 0
 1e087b8:    f8 7f             	r8 = 255
 1e087ba:    09 70             	r9 = 0
 1e087bc:    06 70             	r6 = 0
 1e087be:    0a 70             	r10 = 0
 1e087c0:    81 05             	r1 = r6.b0 (u)			  ## remote_device_list.c:815:25
 1e087c2:    00 a0             	r0 = sp + 0			  ## remote_device_list.c:815:25
 1e087c4:    30 17             	call -416 <get_list_exist_item : 1e08626 >			  ## remote_device_list.c:815:25
 1e087c6:    01 bf             	r1 = r7 + r4
 1e087c8:    42 62             	r2 = b[r1 + 4] (u)
 1e087ca:    10 e0 07 10       	if (r0 != 1) goto 14 <ble_list_init+0x52 : 1e087dc >			  ## remote_device_list.c:815:17
 1e087ce:    10 68             	r0 = b[r4 + 1] (u)			  ## remote_device_list.c:816:53
 1e087d0:    20 fd 0f 09       	r0 = r0 & 15			  ## remote_device_list.c:816:53
 1e087d4:    02 f2 06 20       	if (r2 >= r0) goto 12 <ble_list_init+0x5A : 1e087e4 >			  ## remote_device_list.c:816:53
 1e087d8:    19 80             	r9 += 1			  ## remote_device_list.c:823:26
 1e087da:    14 18             	goto 40 <ble_list_init+0x7A : 1e08804 >			  ## remote_device_list.c:823:26
 1e087dc:    00 ff ff 20 11 00 	if (r2 == 255) goto 34 <ble_list_init+0x7A : 1e08804 >
 1e087e2:    58 18             	goto 176 <ble_list_init+0x10A : 1e08894 >
 1e087e4:    18 f9 04 10       	b[r1 + 4] = r8			  ## remote_device_list.c:819:42
 1e087e8:    05 a0             	r5 = sp + 0			  ## remote_device_list.c:819:42
 1e087ea:    f1 7f             	r1 = 255			  ## remote_device_list.c:820:21
 1e087ec:    42 73             	r2 = 52			  ## remote_device_list.c:820:21
 1e087ee:    50 08             	r0 = r5			  ## remote_device_list.c:820:21
 1e087f0:    97 f3 7e f3       	call 3139324 <memset : 106ef0 >			  ## remote_device_list.c:820:21
 1e087f4:    70 fc 76 00       	r0 = r7 + 118			  ## remote_device_list.c:821:59
 1e087f8:    20 04             	r0 = r0.l (u)			  ## remote_device_list.c:821:21
 1e087fa:    42 73             	r2 = 52			  ## remote_device_list.c:821:21
 1e087fc:    51 08             	r1 = r5			  ## remote_device_list.c:821:21
 1e087fe:    80 f3 23 47       	call 36422 <syscfg_write : 1e11648 >			  ## remote_device_list.c:821:21
 1e08802:    1a b0             	r10 |= 1			  ## remote_device_list.c:817:30
 1e08804:    10 68             	r0 = b[r4 + 1] (u)			  ## remote_device_list.c:814:33
 1e08806:    16 80             	r6 += 1			  ## remote_device_list.c:814:47
 1e08808:    87 05             	r7 = r6.b0 (u)			  ## remote_device_list.c:814:47
 1e0880a:    20 fd 0f 09       	r0 = r0 & 15			  ## remote_device_list.c:814:33
 1e0880e:    07 f2 d7 3f       	if (r7 < r0) goto -82 <ble_list_init+0x36 : 1e087c0 >			  ## remote_device_list.c:814:33
 1e08812:    43 18             	goto 134 <ble_list_init+0x110 : 1e0889a >			  ## remote_device_list.c:814:33
 1e08814:    07 70             	r7 = 0
 1e08816:    3f 68             	b[r4 + 3] = r7			  ## remote_device_list.c:225:13
 1e08818:    2f 68             	b[r4 + 2] = r7			  ## remote_device_list.c:225:13
 1e0881a:    a0 71             	r0 = 26			  ## remote_device_list.c:225:13
 1e0881c:    18 68             	b[r4 + 1] = r0			  ## remote_device_list.c:225:13
 1e0881e:    60 70             	r0 = 6			  ## remote_device_list.c:225:13
 1e08820:    08 68             	b[r4 + 0] = r0			  ## remote_device_list.c:225:13
 1e08822:    48 98             	r8 = r4 + 4			  ## remote_device_list.c:226:13
 1e08824:    f1 7f             	r1 = 255			  ## remote_device_list.c:226:13
 1e08826:    a2 70             	r2 = 10			  ## remote_device_list.c:226:13
 1e08828:    80 08             	r0 = r8			  ## remote_device_list.c:226:13
 1e0882a:    97 f3 61 f3       	call 3139266 <memset : 106ef0 >			  ## remote_device_list.c:226:13
 1e0882e:    50 77             	r0 = 117			  ## remote_device_list.c:227:13
 1e08830:    e2 70             	r2 = 14			  ## remote_device_list.c:227:13
 1e08832:    41 08             	r1 = r4			  ## remote_device_list.c:227:13
 1e08834:    80 f3 08 47       	call 36368 <syscfg_write : 1e11648 >			  ## remote_device_list.c:227:13
 1e08838:    c0 ff 00 67 e1 01 	r0 = 31549184 <gpio_regs+0x244 : 1e16700 >			  ## remote_device_list.c:880:9
 1e0883e:    80 f3 9a 35       	call 27444 <puts : 1e0f376 >			  ## remote_device_list.c:880:9
 1e08842:    10 68             	r0 = b[r4 + 1] (u)			  ## remote_device_list.c:460:29
 1e08844:    60 ff 0f 09 19 00 	if ((r0 & 15) == 0) goto 50 <ble_list_init+0xF2 : 1e0887c >			  ## remote_device_list.c:460:29
 1e0884a:    05 70             	r5 = 0
 1e0884c:    c1 05             	r1 = r7.b0 (u)			  ## remote_device_list.c:461:13
 1e0884e:    40 a3             	r0 = sp + 52			  ## remote_device_list.c:461:13
 1e08850:    ea 16             	call -556 <get_list_exist_item : 1e08626 >			  ## remote_device_list.c:461:13
 1e08852:    0d 20             	if (r0 == 0) goto 26 <ble_list_init+0xE4 : 1e0886e >
 1e08854:    46 a3             	r6 = sp + 52
 1e08856:    f1 7f             	r1 = 255			  ## remote_device_list.c:462:13
 1e08858:    42 73             	r2 = 52			  ## remote_device_list.c:462:13
 1e0885a:    60 08             	r0 = r6			  ## remote_device_list.c:462:13
 1e0885c:    97 f3 48 f3       	call 3139216 <memset : 106ef0 >			  ## remote_device_list.c:462:13
 1e08860:    50 fc 76 00       	r0 = r5 + 118			  ## remote_device_list.c:464:51
 1e08864:    20 04             	r0 = r0.l (u)			  ## remote_device_list.c:464:13
 1e08866:    42 73             	r2 = 52			  ## remote_device_list.c:464:13
 1e08868:    61 08             	r1 = r6			  ## remote_device_list.c:464:13
 1e0886a:    80 f3 ed 46       	call 36314 <syscfg_write : 1e11648 >			  ## remote_device_list.c:464:13
 1e0886e:    10 68             	r0 = b[r4 + 1] (u)			  ## remote_device_list.c:460:29
 1e08870:    17 80             	r7 += 1			  ## remote_device_list.c:460:43
 1e08872:    c5 05             	r5 = r7.b0 (u)			  ## remote_device_list.c:460:43
 1e08874:    20 fd 0f 09       	r0 = r0 & 15			  ## remote_device_list.c:460:29
 1e08878:    05 f2 e8 3f       	if (r5 < r0) goto -48 <ble_list_init+0xC2 : 1e0884c >			  ## remote_device_list.c:460:29
 1e0887c:    00 70             	r0 = 0			  ## remote_device_list.c:468:23
 1e0887e:    28 68             	b[r4 + 2] = r0			  ## remote_device_list.c:468:23
 1e08880:    38 68             	b[r4 + 3] = r0			  ## remote_device_list.c:469:33
 1e08882:    f1 7f             	r1 = 255			  ## remote_device_list.c:470:5
 1e08884:    a2 70             	r2 = 10			  ## remote_device_list.c:470:5
 1e08886:    80 08             	r0 = r8			  ## remote_device_list.c:470:5
 1e08888:    97 f3 32 f3       	call 3139172 <memset : 106ef0 >			  ## remote_device_list.c:470:5
 1e0888c:    5e 18             	goto 188 <ble_list_init+0x1C0 : 1e0894a >			  ## remote_device_list.c:470:5
 1e0888e:    09 70             	r9 = 0
 1e08890:    0a 70             	r10 = 0
 1e08892:    03 18             	goto 6 <ble_list_init+0x110 : 1e0889a >
 1e08894:    f0 7f             	r0 = 255			  ## remote_device_list.c:828:42
 1e08896:    48 62             	b[r1 + 4] = r0			  ## remote_device_list.c:828:42
 1e08898:    9a b0             	r10 |= 2			  ## remote_device_list.c:829:30
 1e0889a:    21 68             	r1 = b[r4 + 2] (u)			  ## remote_device_list.c:835:30
 1e0889c:    00 fb 80 ff       	r0 = -128 <bank_code_load_addr+0x1DC988 : 1ffff80 >			  ## remote_device_list.c:836:22
 1e088a0:    e0 fd a0 00       	r0 = r0 | r10			  ## remote_device_list.c:836:22
 1e088a4:    e4 fd 00 59       	r5 = r9.b0 (u)			  ## remote_device_list.c:835:19
 1e088a8:    15 f2 01 00       	if (r5 == r1) goto 2 <ble_list_init+0x124 : 1e088ae >			  ## remote_device_list.c:835:19
 1e088ac:    0a 08             	r10 = r0			  ## remote_device_list.c:835:13
 1e088ae:    60 ff ff a9 50 00 	if ((r10 & 255) == 0) goto 160 <ble_list_init+0x1CA : 1e08954 >
 1e088b4:    e4 fd 00 1a       	r1 = r10.b0 (u)			  ## remote_device_list.c:840:44
 1e088b8:    c0 ff d1 57 e1 01 	r0 = 31545297 <update_target_end+0x2949 : 1e157d1 >			  ## remote_device_list.c:840:13
 1e088be:    80 f3 04 34       	call 26632 <printf : 1e0f0ca >			  ## remote_device_list.c:840:13
 1e088c2:    e1 70             	r1 = 14			  ## remote_device_list.c:841:13
 1e088c4:    40 08             	r0 = r4			  ## remote_device_list.c:841:13
 1e088c6:    80 f3 05 35       	call 27146 <put_buf : 1e0f2d4 >			  ## remote_device_list.c:841:13
 1e088ca:    19 f9 02 40       	b[r4 + 2] = r9			  ## remote_device_list.c:842:31
 1e088ce:    10 68             	r0 = b[r4 + 1] (u)
 1e088d0:    20 fd 0f 09       	r0 = r0 & 15
 1e088d4:    60 ff ff 99 1c 00 	if ((r9 & 255) == 0) goto 56 <ble_list_init+0x188 : 1e08912 >
 1e088da:    01 70             	r1 = 0
 1e088dc:    16 20             	if (r0 == 0) goto 44 <ble_list_init+0x180 : 1e0890a >
 1e088de:    03 70             	r3 = 0
 1e088e0:    02 b7             	r2 = r3 + r4			  ## remote_device_list.c:850:25
 1e088e2:    46 64             	r6 = b[r2 + 4] (u)			  ## remote_device_list.c:850:25
 1e088e4:    42 04             	r2 = r1.b0 (u)			  ## remote_device_list.c:850:46
 1e088e6:    26 f2 10 00       	if (r6 == r2) goto 32 <ble_list_init+0x180 : 1e0890a >			  ## remote_device_list.c:850:46
 1e088ea:    13 80             	r3 += 1			  ## remote_device_list.c:849:55
 1e088ec:    03 f2 f8 3f       	if (r3 < r0) goto -16 <ble_list_init+0x156 : 1e088e0 >			  ## remote_device_list.c:849:55
 1e088f0:    43 98             	r3 = r4 + 4
 1e088f2:    06 08             	r6 = r0
 1e088f4:    07 66             	r7 = b[r3 + 0] (u)			  ## remote_device_list.c:858:29
 1e088f6:    00 ff ff 70 04 00 	if (r7 == 255) goto 8 <ble_list_init+0x17A : 1e08904 >			  ## remote_device_list.c:858:29
 1e088fc:    27 f2 02 90       	if (r7 <= r2) goto 4 <ble_list_init+0x17A : 1e08904 >
 1e08900:    f7 8f             	r7 += -1			  ## remote_device_list.c:859:49
 1e08902:    0f 66             	b[r3 + 0] = r7			  ## remote_device_list.c:859:49
 1e08904:    13 80             	r3 += 1			  ## remote_device_list.c:857:35
 1e08906:    56 f3 f5 ff       	if (--r6 != 0) goto -22 <ble_list_init+0x16A : 1e088f4 >			  ## remote_device_list.c:857:35
 1e0890a:    11 80             	r1 += 1			  ## remote_device_list.c:863:17
 1e0890c:    42 04             	r2 = r1.b0 (u)			  ## remote_device_list.c:863:17
 1e0890e:    52 f2 e5 1f       	if (r2 != r5) goto -54 <ble_list_init+0x152 : 1e088dc >			  ## remote_device_list.c:863:17
 1e08912:    13 20             	if (r0 == 0) goto 38 <ble_list_init+0x1B0 : 1e0893a >
 1e08914:    41 98             	r1 = r4 + 4
 1e08916:    02 70             	r2 = 0
 1e08918:    05 70             	r5 = 0
 1e0891a:    86 f9 01 10       	r6 = b[r1 ++= 1] (u)			  ## remote_device_list.c:868:21
 1e0891e:    47 05             	r7 = r5.b0 (u)			  ## remote_device_list.c:868:85
 1e08920:    23 08             	r3 = r2			  ## remote_device_list.c:868:61
 1e08922:    76 f2 01 80       	if (r6 > r7) goto 2 <ble_list_init+0x19E : 1e08928 >			  ## remote_device_list.c:868:61
 1e08926:    53 08             	r3 = r5			  ## remote_device_list.c:868:61
 1e08928:    01 ff ff 60 01 00 	if (r6 != 255) goto 2 <ble_list_init+0x1A6 : 1e08930 >
 1e0892e:    53 08             	r3 = r5			  ## remote_device_list.c:868:61
 1e08930:    12 80             	r2 += 1			  ## remote_device_list.c:867:27
 1e08932:    35 08             	r5 = r3			  ## remote_device_list.c:867:27
 1e08934:    50 f3 f1 ff       	if (--r0 != 0) goto -30 <ble_list_init+0x190 : 1e0891a >			  ## remote_device_list.c:867:27
 1e08938:    01 18             	goto 2 <ble_list_init+0x1B2 : 1e0893c >			  ## remote_device_list.c:867:27
 1e0893a:    03 70             	r3 = 0
 1e0893c:    19 f9 02 40       	b[r4 + 2] = r9			  ## remote_device_list.c:873:31
 1e08940:    3b 68             	b[r4 + 3] = r3			  ## remote_device_list.c:874:41
 1e08942:    e1 70             	r1 = 14			  ## remote_device_list.c:875:13
 1e08944:    40 08             	r0 = r4			  ## remote_device_list.c:875:13
 1e08946:    80 f3 c5 34       	call 27018 <put_buf : 1e0f2d4 >			  ## remote_device_list.c:875:13
 1e0894a:    50 77             	r0 = 117
 1e0894c:    e2 70             	r2 = 14
 1e0894e:    41 08             	r1 = r4
 1e08950:    80 f3 7a 46       	call 36084 <syscfg_write : 1e11648 >
 1e08954:    10 68             	r0 = b[r4 + 1] (u)			  ## remote_device_list.c:887:17
 1e08956:    60 ff 0f 09 02 00 	if ((r0 & 15) == 0) goto 4 <ble_list_init+0x1D6 : 1e08960 >			  ## remote_device_list.c:887:9
 1e0895c:    00 70             	r0 = 0			  ## remote_device_list.c:888:9
 1e0895e:    01 18             	goto 2 <ble_list_init+0x1D8 : 1e08962 >			  ## remote_device_list.c:888:9
 1e08960:    10 70             	r0 = 1			  ## remote_device_list.c:890:9
 1e08962:    80 f3 81 1c       	call 14594 <sm_allow_ltk_reconstruction_without_le_device_db_entry : 1e0c268 >
 1e08966:    34 0a             	sp += 104
 1e08968:    5a 01             	{pc, r10-r4} = [sp++]			  ## remote_device_list.c:893:1


l2cap_register_fixed_channel:
 1e0896a:    21 e0 06 00       	if (r1 == 2) goto 12 <l2cap_register_fixed_channel+0x10 : 1e0897a >			  ## l2cap.c:2177:0
 1e0896e:    41 e0 06 00       	if (r1 == 4) goto 12 <l2cap_register_fixed_channel+0x14 : 1e0897e >
 1e08972:    61 e0 0b 10       	if (r1 != 6) goto 22 <l2cap_register_fixed_channel+0x22 : 1e0898c >
 1e08976:    11 70             	r1 = 1
 1e08978:    03 18             	goto 6 <l2cap_register_fixed_channel+0x16 : 1e08980 >
 1e0897a:    21 70             	r1 = 2
 1e0897c:    01 18             	goto 2 <l2cap_register_fixed_channel+0x16 : 1e08980 >
 1e0897e:    01 70             	r1 = 0
 1e08980:    c9 c0             	r1 = r1 << 3			  ## l2cap.c:2182:33
 1e08982:    c2 ff a8 1a 00 00 	r2 = 6824 <l2cap_fixed_channels : 1aa8 >			  ## l2cap.c:2182:33
 1e08988:    90 f6 00 21       	[r2+r1] = r0			  ## l2cap.c:2182:42
 1e0898c:    20 00             	rts			  ## l2cap.c:2183:1


hci_event_callback_set:
 1e0898e:    c1 ff 8c 1a 00 00 	r1 = 6796 <hci_event_callback_registration : 1a8c >			  ## hci_vendor.c:1930:0
 1e08994:    c0 ff f4 0d e0 01 	r0 = 31460852 <__ble_comm_cbk_packet_handler : 1e00df4 >			  ## hci_vendor.c:1931:46
 1e0899a:    18 42             	[r1 + 4] = r0			  ## hci_vendor.c:1931:46
 1e0899c:    c0 ff 64 18 00 00 	r0 = 6244 <report_irq_stack_end+0x4 : 1864 >			  ## hci_vendor.c:1931:46
 1e089a2:    da 1e             	goto -588 <btstack_linked_list_add_tail : 1e08758 >			  ## hci_vendor.c:1961:5


le_l2cap_register_packet_handler:
 1e089a4:    c0 ff 9c 1a 00 00 	r0 = 6812 <le_l2cap_event_packet_handler : 1a9c >			  ## l2cap.c:177:0
 1e089aa:    c1 ff f4 0d e0 01 	r1 = 31460852 <__ble_comm_cbk_packet_handler : 1e00df4 >			  ## l2cap.c:177:0
 1e089b0:    09 40             	[r0 + 0] = r1			  ## l2cap.c:177:0
 1e089b2:    20 00             	rts			  ## l2cap.c:185:1


ble_vendor_set_default_att_mtu:
 1e089b4:    02 08             	r2 = r0			  ## l2cap.c:993:0
 1e089b6:    70 e1 01 80       	if (r0 > 23) goto 2 <ble_vendor_set_default_att_mtu+0x8 : 1e089bc >			  ## l2cap.c:996:16
 1e089ba:    72 71             	r2 = 23			  ## l2cap.c:996:16
 1e089bc:    01 fb 05 02       	r1 = 517 <BTCTLER_CL_RAM_TOTAL+0x21 : 205 >			  ## l2cap.c:994:18
 1e089c0:    08 ff 05 02 01 00 	if (r0 > 517) goto 2 <ble_vendor_set_default_att_mtu+0x14 : 1e089c8 >			  ## l2cap.c:994:18
 1e089c6:    21 08             	r1 = r2			  ## l2cap.c:994:9
 1e089c8:    c0 ff 8c 09 00 00 	r0 = 2444 <le_att_mtu_size : 98c >
 1e089ce:    09 50             	h[r0 + 0] = r1
 1e089d0:    10 08             	r0 = r1			  ## l2cap.c:1001:5
 1e089d2:    20 00             	rts			  ## l2cap.c:1001:5


multi_att_ccc_config_init:
 1e089d4:    34 00             	[--sp] = rets			  ## att_send.c:210:0
 1e089d6:    c0 ff e0 1b 00 00 	r0 = 7136 <att_s_hdl : 1be0 >			  ## att_send.c:142:5
 1e089dc:    00 40             	r0 = [r0 + 0]			  ## att_send.c:142:5
 1e089de:    04 20             	if (r0 == 0) goto 8 <multi_att_ccc_config_init+0x14 : 1e089e8 >			  ## att_send.c:142:5
 1e089e0:    01 70             	r1 = 0			  ## att_send.c:143:5
 1e089e2:    02 76             	r2 = 96			  ## att_send.c:143:5
 1e089e4:    97 f3 84 f2       	call 3138824 <memset : 106ef0 >			  ## att_send.c:143:5
 1e089e8:    30 00             	pc = [sp++]			  ## att_send.c:212:1


btstack_task_init:
 1e089ea:    76 01             	[--sp] = {rets, r6-r4}			  ## btstack_task.c:75:0
 1e089ec:    c4 ff 60 18 00 00 	r4 = 6240 <report_irq_stack_end : 1860 >			  ## hci_vendor.c:1602:75
 1e089f2:    01 70             	r1 = 0			  ## hci_vendor.c:1583:5
 1e089f4:    02 fb 2c 02       	r2 = 556 <BTCTLER_CL_RAM_TOTAL+0x48 : 22c >			  ## hci_vendor.c:1583:5
 1e089f8:    05 70             	r5 = 0			  ## hci_vendor.c:1583:5
 1e089fa:    40 08             	r0 = r4			  ## hci_vendor.c:1583:5
 1e089fc:    97 f3 78 f2       	call 3138800 <memset : 106ef0 >			  ## hci_vendor.c:1583:5
 1e08a00:    80 f3 56 aa       	call 87212 <ll_hci_set_event_mask : 1e1deb0 >			  ## hci_vendor.c:1587:5
 1e08a04:    c0 ff 04 0e 00 00 	r0 = 3588 <hci_param : e04 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/common/hci_device_manager.c:28:5
 1e08a0a:    01 fb ff 3f       	r1 = 16383 <ze_entry_tm+0xAD : 3fff >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/common/hci_device_manager.c:28:5
 1e08a0e:    39 50             	h[r0 + 6] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/common/hci_device_manager.c:28:5
 1e08a10:    41 fb c0 1a       	r1 = r1 + 49152			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/common/hci_device_manager.c:28:5
 1e08a14:    29 50             	h[r0 + 4] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/common/hci_device_manager.c:28:5
 1e08a16:    19 50             	h[r0 + 2] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/common/hci_device_manager.c:28:5
 1e08a18:    09 50             	h[r0 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/common/hci_device_manager.c:28:5
 1e08a1a:    80 f3 55 aa       	call 87210 <ll_hci_get_acl_data_len : 1e1dec8 >			  ## hci_vendor.c:1590:47
 1e08a1e:    41 fc 1a 02       	r1 = r4 + 538			  ## hci_vendor.c:1590:47
 1e08a22:    18 52             	h[r1 + 2] = r0			  ## hci_vendor.c:1590:45
 1e08a24:    80 f3 56 aa       	call 87212 <ll_hci_get_acl_total_num : 1e1ded4 >			  ## hci_vendor.c:1591:47
 1e08a28:    08 62             	b[r1 + 0] = r0			  ## hci_vendor.c:1591:45
 1e08a2a:    60 70             	r0 = 6			  ## hci_vendor.c:1591:45
 1e08a2c:    28 52             	h[r1 + 4] = r0			  ## hci_vendor.c:1591:45
 1e08a2e:    00 fb 80 0c       	r0 = 3200 <BTCTLER_RAM_TOTAL+0x40 : c80 >			  ## hci_vendor.c:1598:69
 1e08a32:    38 52             	h[r1 + 6] = r0			  ## hci_vendor.c:1598:69
 1e08a34:    4d 52             	h[r1 + 8] = r5			  ## hci_vendor.c:1599:68
 1e08a36:    02 fb f4 01       	r2 = 500 <BTCTLER_CL_RAM_TOTAL+0x10 : 1f4 >			  ## hci_vendor.c:1600:68
 1e08a3a:    5a 52             	h[r1 + 10] = r2			  ## hci_vendor.c:1600:68
 1e08a3c:    a2 70             	r2 = 10			  ## hci_vendor.c:1601:75
 1e08a3e:    6a 52             	h[r1 + 12] = r2			  ## hci_vendor.c:1601:75
 1e08a40:    78 52             	h[r1 + 14] = r0			  ## hci_vendor.c:1602:75
 1e08a42:    c4 ff 1c 1c 00 00 	r4 = 7196 <btstack_stack : 1c1c >			  ## hci_vendor.c:1602:75
 1e08a48:    c0 ff e4 1b 00 00 	r0 = 7140 <profile_l2cap_hdl : 1be4 >			  ## btstack_main.c:156:34
 1e08a4e:    28 48             	[r4 + 8] = r0			  ## btstack_main.c:156:34
 1e08a50:    c0 ff 30 1c 00 00 	r0 = 7216 <profile_le_pool_hdl : 1c30 >			  ## btstack_main.c:176:9
 1e08a56:    18 48             	[r4 + 4] = r0			  ## btstack_main.c:173:38
 1e08a58:    3d 40             	[r0 + 12] = r5			  ## btstack_main.c:176:9
 1e08a5a:    2d 40             	[r0 + 8] = r5			  ## btstack_main.c:176:9
 1e08a5c:    1d 40             	[r0 + 4] = r5			  ## btstack_main.c:176:9
 1e08a5e:    0d 40             	[r0 + 0] = r5			  ## btstack_main.c:176:9
 1e08a60:    c6 ff 94 1a 00 00 	r6 = 6804 <le_stack_pool : 1a94 >			  ## btstack_main.c:176:9
 1e08a66:    08 4c             	[r6 + 0] = r0			  ## btstack_memory.c:399:19
 1e08a68:    00 fb d4 04       	r0 = 1236 <BTCTLER_CONTROLLER_DATA_SIZE+0x16 : 4d4 >			  ## btstack_memory.c:404:45
 1e08a6c:    80 f3 a3 37       	call 28486 <malloc : 1e0f9b6 >			  ## btstack_memory.c:404:45
 1e08a70:    03 08             	r3 = r0			  ## btstack_memory.c:404:45
 1e08a72:    02 36             	if (r3 != 0) goto 4 <btstack_task_init+0x8E : 1e08a78 >			  ## btstack_memory.c:404:45
 1e08a74:    8f f3 b4 d4       	call 2074984 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e08a78:    06 4c             	r6 = [r6 + 0]			  ## btstack_memory.c:406:9
 1e08a7a:    2b 4c             	[r6 + 8] = r3			  ## btstack_memory.c:406:53
 1e08a7c:    01 70             	r1 = 0			  ## btstack_memory.c:407:9
 1e08a7e:    02 fb d4 04       	r2 = 1236 <BTCTLER_CONTROLLER_DATA_SIZE+0x16 : 4d4 >			  ## btstack_memory.c:407:9
 1e08a82:    30 08             	r0 = r3			  ## btstack_memory.c:407:9
 1e08a84:    97 f3 34 f2       	call 3138664 <memset : 106ef0 >			  ## btstack_memory.c:407:9
 1e08a88:    20 4c             	r0 = [r6 + 8]			  ## btstack_memory.c:409:68
 1e08a8a:    0d 40             	[r0 + 0] = r5			  ## btstack_memory.c:45:25
 1e08a8c:    08 4c             	[r6 + 0] = r0			  ## btstack_memory.c:46:25
 1e08a8e:    24 48             	r4 = [r4 + 8]			  ## btstack_main.c:182:26
 1e08a90:    c0 98             	r0 = r4 + 12			  ## btstack_main.c:182:26
 1e08a92:    01 70             	r1 = 0			  ## btstack_main.c:182:5
 1e08a94:    c2 72             	r2 = 44			  ## btstack_main.c:182:5
 1e08a96:    97 f3 2b f2       	call 3138646 <memset : 106ef0 >			  ## btstack_main.c:182:5
 1e08a9a:    c0 ff 98 1a 00 00 	r0 = 6808 <l2cap_stack : 1a98 >			  ## l2cap.c:139:17
 1e08aa0:    0c 40             	[r0 + 0] = r4			  ## l2cap.c:139:17
 1e08aa2:    f0 7f             	r0 = 255			  ## l2cap.c:141:52
 1e08aa4:    10 f9 34 40       	b[r4 + 52] = r0			  ## l2cap.c:141:52
 1e08aa8:    00 74             	r0 = 64			  ## l2cap.c:142:52
 1e08aaa:    b8 59             	h[r4 + 54] = r0			  ## l2cap.c:142:52
 1e08aac:    9d 48             	[r4 + 36] = r5			  ## l2cap.c:144:63
 1e08aae:    2d 48             	[r4 + 8] = r5			  ## l2cap.c:146:33
 1e08ab0:    1d 48             	[r4 + 4] = r5			  ## l2cap.c:147:33
 1e08ab2:    c0 ff 78 b0 e0 01 	r0 = 31502456 <packet_handler : 1e0b078 >			  ## l2cap.c:149:33
 1e08ab8:    08 48             	[r4 + 0] = r0			  ## l2cap.c:149:33
 1e08aba:    ad 48             	[r4 + 40] = r5			  ## l2cap.c:150:53
 1e08abc:    c0 ff 9c 1a 00 00 	r0 = 6812 <le_l2cap_event_packet_handler : 1a9c >			  ## l2cap.c:152:35
 1e08ac2:    0d 40             	[r0 + 0] = r5			  ## l2cap.c:152:35
 1e08ac4:    c0 ff a0 1a 00 00 	r0 = 6816 <hci_event_callback_registration.1626 : 1aa0 >			  ## l2cap.c:152:35
 1e08aca:    c1 ff b4 ae e0 01 	r1 = 31502004 <l2cap_hci_event_handler : 1e0aeb4 >			  ## l2cap.c:161:50
 1e08ad0:    19 40             	[r0 + 4] = r1			  ## l2cap.c:161:50
 1e08ad2:    4c 16             	call -872 <hci_add_event_handler : 1e0876c >			  ## l2cap.c:162:9
 1e08ad4:    c4 ff 40 1c 00 00 	r4 = 7232 <btstack_global_info : 1c40 >			  ## btstack_main.c:1053:39
 1e08ada:    01 70             	r1 = 0			  ## btstack_main.c:1050:9
 1e08adc:    82 7b             	r2 = 184			  ## btstack_main.c:1050:9
 1e08ade:    40 08             	r0 = r4			  ## btstack_main.c:1050:9
 1e08ae0:    97 f3 06 f2       	call 3138572 <memset : 106ef0 >			  ## btstack_main.c:1050:9
 1e08ae4:    c0 98             	r0 = r4 + 12			  ## btstack_main.c:1050:9
 1e08ae6:    41 fc 30 00       	r1 = r4 + 48			  ## btstack_main.c:1051:9
 1e08aea:    02 78             	r2 = 128			  ## btstack_main.c:1051:9
 1e08aec:    80 f3 2c 3f       	call 32344 <cbuf_init : 1e10948 >			  ## btstack_main.c:1051:9
 1e08af0:    c0 ff 8a b9 e0 01 	r0 = 31504778 <__ble_thread_loop_handler : 1e0b98a >			  ## run_loop.c:20:15
 1e08af6:    18 48             	[r4 + 4] = r0			  ## run_loop.c:20:15
 1e08af8:    2d 48             	[r4 + 8] = r5			  ## run_loop.c:21:15
 1e08afa:    c0 ff 88 09 00 00 	r0 = 2440 <stack_run_loop_head : 988 >			  ## run_loop.c:22:5
 1e08b00:    41 08             	r1 = r4			  ## run_loop.c:22:5
 1e08b02:    2a 16             	call -940 <btstack_linked_list_add_tail : 1e08758 >			  ## run_loop.c:22:5
 1e08b04:    10 70             	r0 = 1			  ## btstack_main.c:1053:39
 1e08b06:    10 f9 b4 40       	b[r4 + 180] = r0			  ## btstack_main.c:1053:39
 1e08b0a:    80 f3 51 2c       	call 22690 <att_global_info_init : 1e0e3b0 >			  ## btstack_main.c:1057:13
 1e08b0e:    bf f3 97 e9       	call -11474 <ble_profile_init : 1e05e40 >			  ## btstack_main.c:1058:13
 1e08b12:    56 01             	{pc, r6-r4} = [sp++]			  ## btstack_task.c:81:1


delete_link_key:
 1e08b14:    78 01             	[--sp] = {rets, r8-r4}			  ## remote_device_db.c:354:0
 1e08b16:    f0 0b             	sp += -32			  ## remote_device_db.c:354:0
 1e08b18:    06 06             	r6 = -32			  ## remote_device_db.c:354:0
 1e08b1a:    02 4c             	r2 = [r6 + 0]			  ## remote_device_db.c:176:20
 1e08b1c:    14 08             	r4 = r1			  ## remote_device_db.c:176:20
 1e08b1e:    05 08             	r5 = r0
 1e08b20:    82 00             	call r2			  ## remote_device_db.c:176:10
 1e08b22:    39 20             	if (r0 == 0) goto 114 <delete_link_key+0x82 : 1e08b96 >			  ## remote_device_db.c:176:10
 1e08b24:    23 4c             	r3 = [r6 + 8]			  ## remote_device_db.c:181:25
 1e08b26:    00 a0             	r0 = sp + 0			  ## remote_device_db.c:181:25
 1e08b28:    01 72             	r1 = 32			  ## remote_device_db.c:181:15
 1e08b2a:    42 08             	r2 = r4			  ## remote_device_db.c:181:15
 1e08b2c:    83 00             	call r3			  ## remote_device_db.c:181:15
 1e08b2e:    00 e2 30 10       	if (r0 != 32) goto 96 <delete_link_key+0x7E : 1e08b92 >
 1e08b32:    00 a0             	r0 = sp + 0
 1e08b34:    a8 90             	r8 = r0 + 10
 1e08b36:    07 2a             	if (r5 == 0) goto 14 <delete_link_key+0x32 : 1e08b46 >			  ## remote_device_db.c:185:13
 1e08b38:    62 70             	r2 = 6			  ## remote_device_db.c:186:18
 1e08b3a:    50 08             	r0 = r5			  ## remote_device_db.c:186:18
 1e08b3c:    81 08             	r1 = r8			  ## remote_device_db.c:186:18
 1e08b3e:    97 f3 d5 f1       	call 3138474 <memcmp : 106eec >			  ## remote_device_db.c:186:18
 1e08b42:    10 30             	if (r0 != 0) goto 32 <delete_link_key+0x50 : 1e08b64 >			  ## remote_device_db.c:186:18
 1e08b44:    17 18             	goto 46 <delete_link_key+0x60 : 1e08b74 >			  ## remote_device_db.c:186:18
 1e08b46:    42 4c             	r2 = [r6 + 16]			  ## remote_device_db.c:193:23
 1e08b48:    20 70             	r0 = 2			  ## remote_device_db.c:193:13
 1e08b4a:    01 72             	r1 = 32			  ## remote_device_db.c:193:13
 1e08b4c:    82 00             	call r2			  ## remote_device_db.c:193:13
 1e08b4e:    07 a0             	r7 = sp + 0			  ## remote_device_db.c:193:13
 1e08b50:    f1 7f             	r1 = 255			  ## remote_device_db.c:194:13
 1e08b52:    02 72             	r2 = 32			  ## remote_device_db.c:194:13
 1e08b54:    70 08             	r0 = r7			  ## remote_device_db.c:194:13
 1e08b56:    97 f3 cb f1       	call 3138454 <memset : 106ef0 >			  ## remote_device_db.c:194:13
 1e08b5a:    33 4c             	r3 = [r6 + 12]			  ## remote_device_db.c:195:23
 1e08b5c:    01 72             	r1 = 32			  ## remote_device_db.c:195:13
 1e08b5e:    70 08             	r0 = r7			  ## remote_device_db.c:195:13
 1e08b60:    42 08             	r2 = r4			  ## remote_device_db.c:195:13
 1e08b62:    83 00             	call r3			  ## remote_device_db.c:195:13
 1e08b64:    23 4c             	r3 = [r6 + 8]			  ## remote_device_db.c:181:25
 1e08b66:    00 a0             	r0 = sp + 0			  ## remote_device_db.c:181:25
 1e08b68:    01 72             	r1 = 32			  ## remote_device_db.c:181:15
 1e08b6a:    42 08             	r2 = r4			  ## remote_device_db.c:181:15
 1e08b6c:    83 00             	call r3			  ## remote_device_db.c:181:15
 1e08b6e:    00 e2 e2 0f       	if (r0 == 32) goto -60 <delete_link_key+0x22 : 1e08b36 >
 1e08b72:    0f 18             	goto 30 <delete_link_key+0x7E : 1e08b92 >
 1e08b74:    42 4c             	r2 = [r6 + 16]			  ## remote_device_db.c:187:27
 1e08b76:    20 70             	r0 = 2			  ## remote_device_db.c:187:17
 1e08b78:    01 72             	r1 = 32			  ## remote_device_db.c:187:17
 1e08b7a:    82 00             	call r2			  ## remote_device_db.c:187:17
 1e08b7c:    05 a0             	r5 = sp + 0			  ## remote_device_db.c:187:17
 1e08b7e:    f1 7f             	r1 = 255			  ## remote_device_db.c:188:17
 1e08b80:    02 72             	r2 = 32			  ## remote_device_db.c:188:17
 1e08b82:    50 08             	r0 = r5			  ## remote_device_db.c:188:17
 1e08b84:    97 f3 b4 f1       	call 3138408 <memset : 106ef0 >			  ## remote_device_db.c:188:17
 1e08b88:    33 4c             	r3 = [r6 + 12]			  ## remote_device_db.c:189:27
 1e08b8a:    01 72             	r1 = 32			  ## remote_device_db.c:189:17
 1e08b8c:    50 08             	r0 = r5			  ## remote_device_db.c:189:17
 1e08b8e:    42 08             	r2 = r4			  ## remote_device_db.c:189:17
 1e08b90:    83 00             	call r3			  ## remote_device_db.c:189:17
 1e08b92:    10 4c             	r0 = [r6 + 4]			  ## remote_device_db.c:199:15
 1e08b94:    80 00             	call r0			  ## remote_device_db.c:199:5
 1e08b96:    10 0a             	sp += 32
 1e08b98:    58 01             	{pc, r8-r4} = [sp++]			  ## remote_device_db.c:358:1


get_is_in_background_flag:
 1e08b9a:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >			  ## avctp_user.c:3117:0
 1e08ba0:    01 61             	r1 = b[r0 + 16] (u)			  ## avctp_user.c:3118:74
 1e08ba2:    10 70             	r0 = 1			  ## avctp_user.c:3118:50
 1e08ba4:    01 32             	if (r1 != 0) goto 2 <get_is_in_background_flag+0xE : 1e08ba8 >			  ## avctp_user.c:3118:50
 1e08ba6:    00 70             	r0 = 0
 1e08ba8:    c1 ff c0 1a 00 00 	r1 = 6848 <__user_info : 1ac0 >			  ## avctp_user.c:3118:50
 1e08bae:    01 f9 13 11       	r1 = b[r1 + 275] (u)			  ## avctp_user.c:3118:50
 1e08bb2:    50 b3             	r0 &= r1			  ## avctp_user.c:3118:50
 1e08bb4:    20 00             	rts			  ## avctp_user.c:3118:5


little_endian_read_32:
 1e08bb6:    01 09             	r1 += r0			  ## utils.c:77:0
 1e08bb8:    12 62             	r2 = b[r1 + 1] (u)			  ## utils.c:78:41
 1e08bba:    00 62             	r0 = b[r1 + 0] (u)			  ## utils.c:78:13
 1e08bbc:    23 62             	r3 = b[r1 + 2] (u)			  ## utils.c:78:80
 1e08bbe:    31 62             	r1 = b[r1 + 3] (u)			  ## utils.c:78:120
 1e08bc0:    c8 fd 40 02       	r0 <= insert(r2, p:8, l:8)			  ## utils.c:78:37
 1e08bc4:    c8 fd 80 03       	r0 <= insert(r3, p:16, l:8)			  ## utils.c:78:76
 1e08bc8:    c8 fd c0 01       	r0 <= insert(r1, p:24, l:8)			  ## utils.c:78:116
 1e08bcc:    20 00             	rts			  ## utils.c:78:5


le_hci_emit_event:
 1e08bce:    77 01             	[--sp] = {rets, r7-r4}			  ## hci_vendor.c:1950:0
 1e08bd0:    fa 0b             	sp += -12			  ## hci_vendor.c:1950:0
 1e08bd2:    14 08             	r4 = r1			  ## hci_vendor.c:1950:0
 1e08bd4:    05 08             	r5 = r0			  ## hci_vendor.c:1950:0
 1e08bd6:    00 70             	r0 = 0			  ## hci_vendor.c:1950:0
 1e08bd8:    c1 ff 60 18 00 00 	r1 = 6240 <report_irq_stack_end : 1860 >			  ## hci_vendor.c:1950:0
 1e08bde:    12 42             	r2 = [r1 + 4]			  ## btstack_linked_list.c:163:16
 1e08be0:    08 02             	[sp] = r0			  ## btstack_linked_list.c:161:25
 1e08be2:    40 92             	r0 = r1 + 4			  ## btstack_linked_list.c:161:25
 1e08be4:    18 02             	[sp+4] = r0			  ## btstack_linked_list.c:162:14
 1e08be6:    2a 02             	[sp+8] = r2			  ## btstack_linked_list.c:163:14
 1e08be8:    00 a0             	r0 = sp + 0			  ## btstack_linked_list.c:163:14
 1e08bea:    0b 18             	goto 22 <le_hci_emit_event+0x34 : 1e08c02 >
 1e08bec:    06 a0             	r6 = sp + 0
 1e08bee:    60 08             	r0 = r6			  ## hci_vendor.c:1954:100
 1e08bf0:    bf f3 7a f8       	call -3852 <btstack_linked_list_iterator_next : 1e07ce8 >			  ## hci_vendor.c:1954:100
 1e08bf4:    17 40             	r7 = [r0 + 4]			  ## hci_vendor.c:1955:16
 1e08bf6:    40 70             	r0 = 4			  ## hci_vendor.c:1955:9
 1e08bf8:    01 70             	r1 = 0			  ## hci_vendor.c:1955:9
 1e08bfa:    52 08             	r2 = r5			  ## hci_vendor.c:1955:9
 1e08bfc:    43 08             	r3 = r4			  ## hci_vendor.c:1955:9
 1e08bfe:    87 00             	call r7			  ## hci_vendor.c:1955:9
 1e08c00:    60 08             	r0 = r6			  ## hci_vendor.c:1953:12
 1e08c02:    bf f3 63 f8       	call -3898 <btstack_linked_list_iterator_has_next : 1e07ccc >
 1e08c06:    f2 31             	if (r0 != 0) goto -28 <le_hci_emit_event+0x1E : 1e08bec >
 1e08c08:    06 0a             	sp += 12
 1e08c0a:    57 01             	{pc, r7-r4} = [sp++]			  ## hci_vendor.c:1957:1


get_remote_test_flag:
 1e08c0c:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >			  ## user_interface.c:212:0
 1e08c12:    41 61             	r1 = b[r0 + 20] (u)			  ## user_interface.c:213:29
 1e08c14:    32 61             	r2 = b[r0 + 19] (u)			  ## user_interface.c:213:29
 1e08c16:    23 61             	r3 = b[r0 + 18] (u)			  ## user_interface.c:213:29
 1e08c18:    10 61             	r0 = b[r0 + 17] (u)			  ## user_interface.c:213:29
 1e08c1a:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## user_interface.c:213:29
 1e08c1e:    c8 fd 40 03       	r0 <= insert(r3, p:8, l:8)			  ## user_interface.c:213:29
 1e08c22:    d0 fd 80 02       	r0 <= insert(r2, p:16, l:16)			  ## user_interface.c:213:29
 1e08c26:    81 fd 90 00       	r0 = uextra(r0, p:18, l:1)			  ## user_interface.c:218:1
 1e08c2a:    20 00             	rts			  ## user_interface.c:218:1


get_database:
 1e08c2c:    78 01             	[--sp] = {rets, r8-r4}			  ## remote_device_db.c:37:0
 1e08c2e:    08 06             	r8 = -32			  ## remote_device_db.c:37:0
 1e08c30:    03 f6 00 80       	r3 = [r8 + 0]			  ## remote_device_db.c:41:20
 1e08c34:    25 08             	r5 = r2			  ## remote_device_db.c:41:20
 1e08c36:    16 08             	r6 = r1
 1e08c38:    04 08             	r4 = r0
 1e08c3a:    83 00             	call r3			  ## remote_device_db.c:41:10
 1e08c3c:    20 20             	if (r0 == 0) goto 64 <get_database+0x52 : 1e08c7e >			  ## remote_device_db.c:41:10
 1e08c3e:    a7 98             	r7 = r4 + 10
 1e08c40:    03 f6 08 80       	r3 = [r8 + 8]			  ## remote_device_db.c:46:25
 1e08c44:    01 72             	r1 = 32			  ## remote_device_db.c:46:15
 1e08c46:    40 08             	r0 = r4			  ## remote_device_db.c:46:15
 1e08c48:    52 08             	r2 = r5			  ## remote_device_db.c:46:15
 1e08c4a:    83 00             	call r3			  ## remote_device_db.c:46:15
 1e08c4c:    00 e2 12 10       	if (r0 != 32) goto 36 <get_database+0x48 : 1e08c74 >
 1e08c50:    62 70             	r2 = 6			  ## remote_device_db.c:51:14
 1e08c52:    60 08             	r0 = r6			  ## remote_device_db.c:51:14
 1e08c54:    71 08             	r1 = r7			  ## remote_device_db.c:51:14
 1e08c56:    97 f3 49 f1       	call 3138194 <memcmp : 106eec >			  ## remote_device_db.c:51:14
 1e08c5a:    f2 31             	if (r0 != 0) goto -28 <get_database+0x14 : 1e08c40 >			  ## remote_device_db.c:51:14
 1e08c5c:    10 68             	r0 = b[r4 + 1] (u)			  ## remote_device_db.c:52:21
 1e08c5e:    85 f9 02 40       	r5 = b[r4 ++= 2] (u)			  ## remote_device_db.c:52:21
 1e08c62:    c8 fd 40 50       	r5 <= insert(r0, p:8, l:8)			  ## remote_device_db.c:52:21
 1e08c66:    e1 71             	r1 = 30			  ## remote_device_db.c:52:28
 1e08c68:    40 08             	r0 = r4			  ## remote_device_db.c:52:28
 1e08c6a:    97 f3 61 f1       	call 3138242 <chip_crc16 : 106f30 >			  ## remote_device_db.c:52:28
 1e08c6e:    14 70             	r4 = 1			  ## remote_device_db.c:52:28
 1e08c70:    05 f2 01 00       	if (r5 == r0) goto 2 <get_database+0x4A : 1e08c76 >
 1e08c74:    04 70             	r4 = 0
 1e08c76:    00 f6 04 80       	r0 = [r8 + 4]			  ## remote_device_db.c:62:15
 1e08c7a:    80 00             	call r0			  ## remote_device_db.c:62:5
 1e08c7c:    01 18             	goto 2 <get_database+0x54 : 1e08c80 >			  ## remote_device_db.c:62:5
 1e08c7e:    04 70             	r4 = 0
 1e08c80:    40 08             	r0 = r4			  ## remote_device_db.c:65:1
 1e08c82:    58 01             	{pc, r8-r4} = [sp++]			  ## remote_device_db.c:65:1


get_link_key:
 1e08c84:    76 01             	[--sp] = {rets, r6-r4}			  ## remote_device_db.c:254:0
 1e08c86:    e8 0b             	sp += -48			  ## remote_device_db.c:254:0
 1e08c88:    25 08             	r5 = r2			  ## remote_device_db.c:254:0
 1e08c8a:    14 08             	r4 = r1			  ## remote_device_db.c:254:0
 1e08c8c:    06 08             	r6 = r0			  ## remote_device_db.c:254:0
 1e08c8e:    be 17             	call -132 <get_remote_test_flag : 1e08c0c >			  ## remote_device_db.c:260:9
 1e08c90:    08 20             	if (r0 == 0) goto 16 <get_link_key+0x1E : 1e08ca2 >			  ## remote_device_db.c:260:9
 1e08c92:    c1 ff 8d 7c e0 01 	r1 = 31489165 <own_private_linkkey : 1e07c8d >			  ## remote_device_db.c:261:9
 1e08c98:    02 71             	r2 = 16			  ## remote_device_db.c:261:9
 1e08c9a:    40 08             	r0 = r4			  ## remote_device_db.c:261:9
 1e08c9c:    97 f3 22 f1       	call 3138116 <memcpy : 106ee4 >
 1e08ca0:    0a 18             	goto 20 <get_link_key+0x32 : 1e08cb6 >
 1e08ca2:    c0 ff 8f 09 00 00 	r0 = 2447 <temp_link_key_flag : 98f >			  ## remote_device_db.c:269:9
 1e08ca8:    00 60             	r0 = b[r0 + 0] (u)			  ## remote_device_db.c:269:9
 1e08caa:    09 20             	if (r0 == 0) goto 18 <get_link_key+0x3A : 1e08cbe >			  ## remote_device_db.c:269:9
 1e08cac:    01 70             	r1 = 0			  ## remote_device_db.c:270:9
 1e08cae:    02 71             	r2 = 16			  ## remote_device_db.c:270:9
 1e08cb0:    40 08             	r0 = r4			  ## remote_device_db.c:270:9
 1e08cb2:    97 f3 1d f1       	call 3138106 <memset : 106ef0 >			  ## remote_device_db.c:270:9
 1e08cb6:    15 70             	r5 = 1
 1e08cb8:    50 08             	r0 = r5			  ## remote_device_db.c:306:1
 1e08cba:    18 0a             	sp += 48			  ## remote_device_db.c:306:1
 1e08cbc:    56 01             	{pc, r6-r4} = [sp++]			  ## remote_device_db.c:306:1
 1e08cbe:    00 a0             	r0 = sp + 0
 1e08cc0:    61 08             	r1 = r6			  ## remote_device_db.c:274:10
 1e08cc2:    52 08             	r2 = r5			  ## remote_device_db.c:274:10
 1e08cc4:    b3 17             	call -154 <get_database : 1e08c2c >			  ## remote_device_db.c:274:10
 1e08cc6:    05 70             	r5 = 0
 1e08cc8:    f7 21             	if (r0 == 0) goto -18 <get_link_key+0x34 : 1e08cb8 >
 1e08cca:    bd 02             	[sp+44] = r5			  ## remote_device_db.c:284:5
 1e08ccc:    ad 02             	[sp+40] = r5			  ## remote_device_db.c:284:5
 1e08cce:    9d 02             	[sp+36] = r5			  ## remote_device_db.c:284:5
 1e08cd0:    8d 02             	[sp+32] = r5			  ## remote_device_db.c:284:5
 1e08cd2:    00 a0             	r0 = sp + 0			  ## remote_device_db.c:284:5
 1e08cd4:    06 91             	r6 = r0 + 16			  ## remote_device_db.c:285:32
 1e08cd6:    00 a2             	r0 = sp + 32
 1e08cd8:    02 71             	r2 = 16			  ## remote_device_db.c:285:10
 1e08cda:    61 08             	r1 = r6			  ## remote_device_db.c:285:10
 1e08cdc:    97 f3 06 f1       	call 3138060 <memcmp : 106eec >			  ## remote_device_db.c:285:10
 1e08ce0:    eb 21             	if (r0 == 0) goto -42 <get_link_key+0x34 : 1e08cb8 >			  ## remote_device_db.c:285:10
 1e08ce2:    02 71             	r2 = 16			  ## remote_device_db.c:290:5
 1e08ce4:    40 08             	r0 = r4			  ## remote_device_db.c:290:5
 1e08ce6:    61 08             	r1 = r6			  ## remote_device_db.c:290:5
 1e08ce8:    d9 1f             	goto -78 <get_link_key+0x18 : 1e08c9c >			  ## remote_device_db.c:290:5


put_database:
 1e08cea:    7f 01             	[--sp] = {rets, r15-r4}			  ## remote_device_db.c:69:0
 1e08cec:    c2 0b             	sp += -124			  ## remote_device_db.c:69:0
 1e08cee:    06 06             	r6 = -32			  ## remote_device_db.c:69:0
 1e08cf0:    02 4c             	r2 = [r6 + 0]			  ## remote_device_db.c:442:20
 1e08cf2:    14 08             	r4 = r1			  ## remote_device_db.c:442:20
 1e08cf4:    0b 08             	r11 = r0			  ## remote_device_db.c:442:20
 1e08cf6:    82 00             	call r2			  ## remote_device_db.c:442:10
 1e08cf8:    79 20             	if (r0 == 0) goto 242 <put_database+0x102 : 1e08dec >			  ## remote_device_db.c:442:10
 1e08cfa:    23 4c             	r3 = [r6 + 8]			  ## remote_device_db.c:447:25
 1e08cfc:    c0 a5             	r0 = sp + 92			  ## remote_device_db.c:447:25
 1e08cfe:    01 72             	r1 = 32			  ## remote_device_db.c:447:15
 1e08d00:    42 08             	r2 = r4			  ## remote_device_db.c:447:15
 1e08d02:    83 00             	call r3			  ## remote_device_db.c:447:15
 1e08d04:    08 70             	r8 = 0
 1e08d06:    00 e2 39 10       	if (r0 != 32) goto 114 <put_database+0x92 : 1e08d7c >
 1e08d0a:    c0 a5             	r0 = sp + 92
 1e08d0c:    05 fd 02 09       	r5 = r0 | 2
 1e08d10:    ca ff ff ff 00 00 	r10 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >
 1e08d16:    1f 18             	goto 62 <put_database+0x6C : 1e08d56 >
 1e08d18:    89 f5 5e 00       	r9 = h[sp+94] (u)			  ## remote_device_db.c:460:34
 1e08d1c:    98 f2 06 a0       	ifs (r8 >= r9) goto 12 <put_database+0x42 : 1e08d2c >
 1e08d20:    c0 a1             	r0 = sp + 28
 1e08d22:    c1 a5             	r1 = sp + 92
 1e08d24:    02 72             	r2 = 32			  ## remote_device_db.c:462:13
 1e08d26:    97 f3 dd f0       	call 3137978 <memcpy : 106ee4 >			  ## remote_device_db.c:462:13
 1e08d2a:    98 08             	r8 = r9			  ## remote_device_db.c:462:13
 1e08d2c:    a9 f2 1f 00       	if (r9 == r10) goto 62 <put_database+0x84 : 1e08d6e >
 1e08d30:    87 f5 5c 00       	r7 = h[sp+92] (u)			  ## remote_device_db.c:468:18
 1e08d34:    e1 71             	r1 = 30			  ## remote_device_db.c:468:25
 1e08d36:    50 08             	r0 = r5			  ## remote_device_db.c:468:25
 1e08d38:    97 f3 fa f0       	call 3138036 <chip_crc16 : 106f30 >			  ## remote_device_db.c:468:25
 1e08d3c:    07 f2 17 10       	if (r7 != r0) goto 46 <put_database+0x84 : 1e08d6e >			  ## remote_device_db.c:468:25
 1e08d40:    89 f5 5e 00       	r9 = h[sp+94] (u)			  ## remote_device_db.c:472:29
 1e08d44:    98 f2 13 a0       	ifs (r8 >= r9) goto 38 <put_database+0x84 : 1e08d6e >
 1e08d48:    c0 a1             	r0 = sp + 28
 1e08d4a:    c1 a5             	r1 = sp + 92
 1e08d4c:    02 72             	r2 = 32			  ## remote_device_db.c:474:13
 1e08d4e:    97 f3 c9 f0       	call 3137938 <memcpy : 106ee4 >			  ## remote_device_db.c:474:13
 1e08d52:    98 08             	r8 = r9			  ## remote_device_db.c:474:13
 1e08d54:    0c 18             	goto 24 <put_database+0x84 : 1e08d6e >
 1e08d56:    80 f5 5e 00       	r0 = h[sp+94] (u)			  ## remote_device_db.c:452:18
 1e08d5a:    a0 f2 08 00       	if (r0 == r10) goto 16 <put_database+0x84 : 1e08d6e >			  ## remote_device_db.c:452:18
 1e08d5e:    87 f5 5c 00       	r7 = h[sp+92] (u)			  ## remote_device_db.c:455:18
 1e08d62:    e1 71             	r1 = 30			  ## remote_device_db.c:455:25
 1e08d64:    50 08             	r0 = r5			  ## remote_device_db.c:455:25
 1e08d66:    97 f3 e3 f0       	call 3137990 <chip_crc16 : 106f30 >			  ## remote_device_db.c:455:25
 1e08d6a:    07 f2 d5 0f       	if (r7 == r0) goto -86 <put_database+0x2E : 1e08d18 >			  ## remote_device_db.c:455:25
 1e08d6e:    23 4c             	r3 = [r6 + 8]
 1e08d70:    c0 a5             	r0 = sp + 92
 1e08d72:    01 72             	r1 = 32
 1e08d74:    42 08             	r2 = r4
 1e08d76:    83 00             	call r3
 1e08d78:    00 e2 ed 0f       	if (r0 == 32) goto -38 <put_database+0x6C : 1e08d56 >
 1e08d7c:    10 4c             	r0 = [r6 + 4]			  ## remote_device_db.c:479:15
 1e08d7e:    80 00             	call r0			  ## remote_device_db.c:479:5
 1e08d80:    08 e0 34 00       	if (r8 == 0) goto 104 <put_database+0x102 : 1e08dec >			  ## remote_device_db.c:479:5
 1e08d84:    b0 fc 0a 00       	r0 = r11 + 10			  ## remote_device_db.c:80:14
 1e08d88:    c1 a1             	r1 = sp + 28			  ## remote_device_db.c:80:14
 1e08d8a:    a1 80             	r1 += 10			  ## remote_device_db.c:80:14
 1e08d8c:    62 70             	r2 = 6			  ## remote_device_db.c:80:14
 1e08d8e:    97 f3 ad f0       	call 3137882 <memcmp : 106eec >			  ## remote_device_db.c:80:14
 1e08d92:    2c 30             	if (r0 != 0) goto 88 <put_database+0x102 : 1e08dec >			  ## remote_device_db.c:80:14
 1e08d94:    b0 fc 10 00       	r0 = r11 + 16			  ## remote_device_db.c:81:14
 1e08d98:    c1 a1             	r1 = sp + 28			  ## remote_device_db.c:81:14
 1e08d9a:    01 81             	r1 += 16			  ## remote_device_db.c:81:14
 1e08d9c:    02 71             	r2 = 16			  ## remote_device_db.c:81:14
 1e08d9e:    97 f3 a5 f0       	call 3137866 <memcmp : 106eec >			  ## remote_device_db.c:81:14
 1e08da2:    24 30             	if (r0 != 0) goto 72 <put_database+0x102 : 1e08dec >			  ## remote_device_db.c:81:14
 1e08da4:    00 f9 06 b0       	r0 = b[r11 + 6] (u)			  ## remote_device_db.c:82:17
 1e08da8:    c1 f5 22 00       	r1 = b[sp+34] (u)			  ## remote_device_db.c:82:42
 1e08dac:    10 f2 1e 10       	if (r0 != r1) goto 60 <put_database+0x102 : 1e08dec >			  ## remote_device_db.c:82:42
 1e08db0:    00 f9 07 b0       	r0 = b[r11 + 7] (u)			  ## remote_device_db.c:83:17
 1e08db4:    c1 f5 23 00       	r1 = b[sp+35] (u)			  ## remote_device_db.c:83:42
 1e08db8:    10 f2 18 10       	if (r0 != r1) goto 48 <put_database+0x102 : 1e08dec >			  ## remote_device_db.c:83:42
 1e08dbc:    00 f9 04 b0       	r0 = b[r11 + 4] (u)			  ## remote_device_db.c:84:17
 1e08dc0:    c1 f5 20 00       	r1 = b[sp+32] (u)			  ## remote_device_db.c:84:40
 1e08dc4:    10 f2 12 10       	if (r0 != r1) goto 36 <put_database+0x102 : 1e08dec >			  ## remote_device_db.c:84:40
 1e08dc8:    00 f9 08 b0       	r0 = b[r11 + 8] (u)			  ## remote_device_db.c:85:17
 1e08dcc:    c1 f5 24 00       	r1 = b[sp+36] (u)			  ## remote_device_db.c:85:47
 1e08dd0:    10 f2 0c 10       	if (r0 != r1) goto 24 <put_database+0x102 : 1e08dec >			  ## remote_device_db.c:85:47
 1e08dd4:    00 f9 09 b0       	r0 = b[r11 + 9] (u)			  ## remote_device_db.c:86:17
 1e08dd8:    c1 f5 25 00       	r1 = b[sp+37] (u)			  ## remote_device_db.c:86:48
 1e08ddc:    10 f2 06 10       	if (r0 != r1) goto 12 <put_database+0x102 : 1e08dec >			  ## remote_device_db.c:86:48
 1e08de0:    00 f9 05 b0       	r0 = b[r11 + 5] (u)			  ## remote_device_db.c:87:17
 1e08de4:    c1 f5 21 00       	r1 = b[sp+33] (u)			  ## remote_device_db.c:87:55
 1e08de8:    10 f2 c7 00       	if (r0 == r1) goto 398 <put_database+0x290 : 1e08f7a >			  ## remote_device_db.c:87:55
 1e08dec:    00 4c             	r0 = [r6 + 0]			  ## remote_device_db.c:92:20
 1e08dee:    80 00             	call r0			  ## remote_device_db.c:92:10
 1e08df0:    c4 20             	if (r0 == 0) goto 392 <put_database+0x290 : 1e08f7a >			  ## remote_device_db.c:92:10
 1e08df2:    c0 a3             	r0 = sp + 60
 1e08df4:    01 91             	r1 = r0 + 16
 1e08df6:    19 02             	[sp+4] = r1
 1e08df8:    b1 fc 10 00       	r1 = r11 + 16
 1e08dfc:    09 02             	[sp] = r1
 1e08dfe:    a1 90             	r1 = r0 + 10
 1e08e00:    39 02             	[sp+12] = r1
 1e08e02:    1b f5 10 00       	[sp+16] = r11
 1e08e06:    b1 fc 0a 00       	r1 = r11 + 10
 1e08e0a:    29 02             	[sp+8] = r1
 1e08e0c:    0d fd 02 09       	r13 = r0 | 2
 1e08e10:    c8 ff ff ff 00 00 	r8 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >
 1e08e16:    05 70             	r5 = 0
 1e08e18:    8b 08             	r11 = r8
 1e08e1a:    0f 70             	r15 = 0
 1e08e1c:    00 70             	r0 = 0
 1e08e1e:    58 02             	[sp+20] = r0
 1e08e20:    09 70             	r9 = 0
 1e08e22:    0c 70             	r12 = 0
 1e08e24:    5a 08             	r10 = r5
 1e08e26:    be 08             	r14 = r11
 1e08e28:    1f f5 18 00       	[sp+24] = r15
 1e08e2c:    60 4c             	r0 = [r6 + 24]			  ## remote_device_db.c:97:25
 1e08e2e:    80 00             	call r0			  ## remote_device_db.c:97:15
 1e08e30:    23 4c             	r3 = [r6 + 8]			  ## remote_device_db.c:99:25
 1e08e32:    07 08             	r7 = r0			  ## remote_device_db.c:97:15
 1e08e34:    c0 a3             	r0 = sp + 60			  ## remote_device_db.c:97:15
 1e08e36:    01 72             	r1 = 32			  ## remote_device_db.c:99:15
 1e08e38:    42 08             	r2 = r4			  ## remote_device_db.c:99:15
 1e08e3a:    83 00             	call r3			  ## remote_device_db.c:99:15
 1e08e3c:    cf 08             	r15 = r12			  ## remote_device_db.c:99:15
 1e08e3e:    17 18             	goto 46 <put_database+0x184 : 1e08e6e >			  ## remote_device_db.c:99:15
 1e08e40:    42 4c             	r2 = [r6 + 16]			  ## remote_device_db.c:112:23
 1e08e42:    20 70             	r0 = 2			  ## remote_device_db.c:112:13
 1e08e44:    01 72             	r1 = 32			  ## remote_device_db.c:112:13
 1e08e46:    82 00             	call r2			  ## remote_device_db.c:112:13
 1e08e48:    c5 a3             	r5 = sp + 60			  ## remote_device_db.c:112:13
 1e08e4a:    f1 7f             	r1 = 255			  ## remote_device_db.c:113:13
 1e08e4c:    02 72             	r2 = 32			  ## remote_device_db.c:113:13
 1e08e4e:    50 08             	r0 = r5			  ## remote_device_db.c:113:13
 1e08e50:    97 f3 4e f0       	call 3137692 <memset : 106ef0 >			  ## remote_device_db.c:113:13
 1e08e54:    33 4c             	r3 = [r6 + 12]			  ## remote_device_db.c:114:23
 1e08e56:    01 72             	r1 = 32			  ## remote_device_db.c:114:13
 1e08e58:    50 08             	r0 = r5			  ## remote_device_db.c:114:13
 1e08e5a:    42 08             	r2 = r4			  ## remote_device_db.c:114:13
 1e08e5c:    83 00             	call r3			  ## remote_device_db.c:114:13
 1e08e5e:    60 4c             	r0 = [r6 + 24]			  ## remote_device_db.c:97:25
 1e08e60:    80 00             	call r0			  ## remote_device_db.c:97:15
 1e08e62:    23 4c             	r3 = [r6 + 8]			  ## remote_device_db.c:99:25
 1e08e64:    07 08             	r7 = r0			  ## remote_device_db.c:97:15
 1e08e66:    01 72             	r1 = 32			  ## remote_device_db.c:99:15
 1e08e68:    50 08             	r0 = r5			  ## remote_device_db.c:99:15
 1e08e6a:    42 08             	r2 = r4			  ## remote_device_db.c:99:15
 1e08e6c:    83 00             	call r3			  ## remote_device_db.c:99:15
 1e08e6e:    20 04             	r0 = r0.l (u)
 1e08e70:    00 e2 52 10       	if (r0 != 32) goto 164 <put_database+0x22E : 1e08f18 >
 1e08e74:    80 f5 3e 00       	r0 = h[sp+62] (u)			  ## remote_device_db.c:104:18
 1e08e78:    80 f2 0f 10       	if (r0 != r8) goto 30 <put_database+0x1B0 : 1e08e9a >			  ## remote_device_db.c:104:18
 1e08e7c:    60 4c             	r0 = [r6 + 24]			  ## remote_device_db.c:97:25
 1e08e7e:    80 00             	call r0			  ## remote_device_db.c:97:15
 1e08e80:    23 4c             	r3 = [r6 + 8]			  ## remote_device_db.c:99:25
 1e08e82:    05 08             	r5 = r0			  ## remote_device_db.c:97:15
 1e08e84:    c0 a3             	r0 = sp + 60			  ## remote_device_db.c:97:15
 1e08e86:    01 72             	r1 = 32			  ## remote_device_db.c:99:15
 1e08e88:    42 08             	r2 = r4			  ## remote_device_db.c:99:15
 1e08e8a:    83 00             	call r3			  ## remote_device_db.c:99:15
 1e08e8c:    20 04             	r0 = r0.l (u)			  ## remote_device_db.c:100:13
 1e08e8e:    9f b0             	r15 |= 2			  ## remote_device_db.c:106:22
 1e08e90:    5f 02             	[sp+20] = r7			  ## remote_device_db.c:97:15
 1e08e92:    57 08             	r7 = r5			  ## remote_device_db.c:97:15
 1e08e94:    00 e2 ee 0f       	if (r0 == 32) goto -36 <put_database+0x18A : 1e08e74 >			  ## remote_device_db.c:97:15
 1e08e98:    3f 18             	goto 126 <put_database+0x22E : 1e08f18 >			  ## remote_device_db.c:97:15
 1e08e9a:    85 f5 3c 00       	r5 = h[sp+60] (u)			  ## remote_device_db.c:110:18
 1e08e9e:    e1 71             	r1 = 30			  ## remote_device_db.c:110:25
 1e08ea0:    d0 08             	r0 = r13			  ## remote_device_db.c:110:25
 1e08ea2:    97 f3 45 f0       	call 3137674 <chip_crc16 : 106f30 >			  ## remote_device_db.c:110:25
 1e08ea6:    05 f2 cb 1f       	if (r5 != r0) goto -106 <put_database+0x156 : 1e08e40 >			  ## remote_device_db.c:110:25
 1e08eaa:    8b f5 3e 00       	r11 = h[sp+62] (u)			  ## remote_device_db.c:117:34
 1e08eae:    0c fd 04 f9       	r12 = r15 | 4			  ## remote_device_db.c:120:22
 1e08eb2:    e6 fd 00 0e       	r0 = r14.l (u)			  ## remote_device_db.c:117:27
 1e08eb6:    b0 f2 01 80       	if (r0 > r11) goto 2 <put_database+0x1D2 : 1e08ebc >			  ## remote_device_db.c:117:27
 1e08eba:    fc 08             	r12 = r15			  ## remote_device_db.c:117:13
 1e08ebc:    7f 08             	r15 = r7			  ## remote_device_db.c:117:13
 1e08ebe:    b0 f2 02 80       	if (r0 > r11) goto 4 <put_database+0x1DC : 1e08ec6 >			  ## remote_device_db.c:117:13
 1e08ec2:    0f f5 18 00       	r15 = [sp+24]			  ## remote_device_db.c:117:13
 1e08ec6:    e6 fd 00 1a       	r1 = r10.l (u)			  ## remote_device_db.c:124:27
 1e08eca:    b5 08             	r5 = r11			  ## remote_device_db.c:124:13
 1e08ecc:    51 f2 01 30       	if (r1 < r5) goto 2 <put_database+0x1E8 : 1e08ed2 >			  ## remote_device_db.c:124:13
 1e08ed0:    a5 08             	r5 = r10			  ## remote_device_db.c:124:13
 1e08ed2:    b0 f2 01 80       	if (r0 > r11) goto 2 <put_database+0x1EE : 1e08ed8 >
 1e08ed6:    eb 08             	r11 = r14			  ## remote_device_db.c:117:13
 1e08ed8:    e6 fd 00 09       	r0 = r9.l (u)			  ## remote_device_db.c:128:23
 1e08edc:    5a 08             	r10 = r5			  ## remote_device_db.c:128:23
 1e08ede:    be 08             	r14 = r11			  ## remote_device_db.c:128:23
 1e08ee0:    1f f5 18 00       	[sp+24] = r15			  ## remote_device_db.c:128:23
 1e08ee4:    a3 31             	if (r0 != 0) goto -186 <put_database+0x142 : 1e08e2c >			  ## remote_device_db.c:128:23
 1e08ee6:    62 70             	r2 = 6			  ## remote_device_db.c:128:27
 1e08ee8:    20 02             	r0 = [sp+8]			  ## remote_device_db.c:128:27
 1e08eea:    31 02             	r1 = [sp+12]			  ## remote_device_db.c:128:27
 1e08eec:    97 f3 fe ef       	call 3137532 <memcmp : 106eec >			  ## remote_device_db.c:128:27
 1e08ef0:    09 70             	r9 = 0			  ## remote_device_db.c:128:27
 1e08ef2:    98 31             	if (r0 != 0) goto -208 <put_database+0x13A : 1e08e24 >			  ## remote_device_db.c:128:27
 1e08ef4:    02 71             	r2 = 16			  ## remote_device_db.c:129:17
 1e08ef6:    00 02             	r0 = [sp]			  ## remote_device_db.c:129:17
 1e08ef8:    11 02             	r1 = [sp+4]			  ## remote_device_db.c:129:17
 1e08efa:    97 f3 f7 ef       	call 3137518 <memcmp : 106eec >			  ## remote_device_db.c:129:17
 1e08efe:    09 20             	if (r0 == 0) goto 18 <put_database+0x228 : 1e08f12 >			  ## remote_device_db.c:129:17
 1e08f00:    40 02             	r0 = [sp+16]
 1e08f02:    f1 7f             	r1 = 255
 1e08f04:    69 60             	b[r0 + 6] = r1			  ## remote_device_db.c:130:33
 1e08f06:    79 60             	b[r0 + 7] = r1			  ## remote_device_db.c:131:33
 1e08f08:    01 70             	r1 = 0			  ## remote_device_db.c:131:33
 1e08f0a:    59 60             	b[r0 + 5] = r1			  ## remote_device_db.c:132:46
 1e08f0c:    99 60             	b[r0 + 9] = r1			  ## remote_device_db.c:133:38
 1e08f0e:    31 70             	r1 = 3			  ## remote_device_db.c:134:37
 1e08f10:    89 60             	b[r0 + 8] = r1			  ## remote_device_db.c:134:37
 1e08f12:    1c b0             	r12 |= 1			  ## remote_device_db.c:138:22
 1e08f14:    79 08             	r9 = r7			  ## remote_device_db.c:138:22
 1e08f16:    86 1f             	goto -244 <put_database+0x13A : 1e08e24 >			  ## remote_device_db.c:138:22
 1e08f18:    a0 fc 01 00       	r0 = r10 + 1			  ## remote_device_db.c:143:35
 1e08f1c:    22 04             	r2 = r0.l (u)			  ## remote_device_db.c:143:35
 1e08f1e:    83 08             	r3 = r8			  ## remote_device_db.c:143:35
 1e08f20:    11 70             	r1 = 1			  ## remote_device_db.c:143:35
 1e08f22:    32 f2 01 00       	if (r2 == r3) goto 2 <put_database+0x23E : 1e08f28 >			  ## remote_device_db.c:143:35
 1e08f26:    01 08             	r1 = r0			  ## remote_device_db.c:144:9
 1e08f28:    45 02             	r5 = [sp+16]
 1e08f2a:    29 6a             	b[r5 + 2] = r1			  ## remote_device_db.c:143:19
 1e08f2c:    08 d2             	r0 = r1 >> 8			  ## remote_device_db.c:143:19
 1e08f2e:    38 6a             	b[r5 + 3] = r0			  ## remote_device_db.c:143:19
 1e08f30:    20 9a             	r0 = r5 + 2			  ## remote_device_db.c:143:9
 1e08f32:    e1 71             	r1 = 30			  ## remote_device_db.c:147:15
 1e08f34:    97 f3 fc ef       	call 3137528 <chip_crc16 : 106f30 >			  ## remote_device_db.c:147:15
 1e08f38:    08 6a             	b[r5 + 0] = r0			  ## remote_device_db.c:147:13
 1e08f3a:    01 d2             	r1 = r0 >> 8			  ## remote_device_db.c:147:13
 1e08f3c:    e6 fd 00 0f       	r0 = r15.l (u)			  ## remote_device_db.c:150:9
 1e08f40:    19 6a             	b[r5 + 1] = r1			  ## remote_device_db.c:147:13
 1e08f42:    0a 20             	if (r0 == 0) goto 20 <put_database+0x26E : 1e08f58 >			  ## remote_device_db.c:147:13
 1e08f44:    20 f3 0d 00       	if ((r0 & 1) != 0) goto 26 <put_database+0x278 : 1e08f62 >
 1e08f48:    09 f5 14 00       	r9 = [sp+20]
 1e08f4c:    21 f3 09 00       	if ((r0 & 2) != 0) goto 18 <put_database+0x278 : 1e08f62 >
 1e08f50:    09 f5 18 00       	r9 = [sp+24]
 1e08f54:    22 f3 05 00       	if ((r0 & 4) != 0) goto 10 <put_database+0x278 : 1e08f62 >
 1e08f58:    60 4c             	r0 = [r6 + 24]
 1e08f5a:    80 00             	call r0
 1e08f5c:    81 fc e1 ff       	r1 = r8 + -31
 1e08f60:    49 b0             	r9 = r0 + r1
 1e08f62:    42 4c             	r2 = [r6 + 16]			  ## remote_device_db.c:163:15
 1e08f64:    e6 fd 00 19       	r1 = r9.l (u)			  ## remote_device_db.c:163:23
 1e08f68:    00 70             	r0 = 0			  ## remote_device_db.c:163:5
 1e08f6a:    82 00             	call r2			  ## remote_device_db.c:163:5
 1e08f6c:    33 4c             	r3 = [r6 + 12]			  ## remote_device_db.c:164:15
 1e08f6e:    01 72             	r1 = 32			  ## remote_device_db.c:164:5
 1e08f70:    50 08             	r0 = r5			  ## remote_device_db.c:164:5
 1e08f72:    42 08             	r2 = r4			  ## remote_device_db.c:164:5
 1e08f74:    83 00             	call r3			  ## remote_device_db.c:164:5
 1e08f76:    10 4c             	r0 = [r6 + 4]			  ## remote_device_db.c:166:15
 1e08f78:    80 00             	call r0			  ## remote_device_db.c:166:5
 1e08f7a:    3e 0a             	sp += 124
 1e08f7c:    5f 01             	{pc, r15-r4} = [sp++]


put_link_key:
 1e08f7e:    77 01             	[--sp] = {rets, r7-r4}			  ## remote_device_db.c:309:0
 1e08f80:    f0 0b             	sp += -32			  ## remote_device_db.c:309:0
 1e08f82:    24 08             	r4 = r2			  ## remote_device_db.c:309:0
 1e08f84:    15 08             	r5 = r1			  ## remote_device_db.c:309:0
 1e08f86:    06 08             	r6 = r0			  ## remote_device_db.c:309:0
 1e08f88:    41 16             	call -894 <get_remote_test_flag : 1e08c0c >			  ## remote_device_db.c:312:9
 1e08f8a:    2a 30             	if (r0 != 0) goto 84 <put_link_key+0x62 : 1e08fe0 >			  ## remote_device_db.c:312:9
 1e08f8c:    c0 ff 8f 09 00 00 	r0 = 2447 <temp_link_key_flag : 98f >			  ## remote_device_db.c:316:9
 1e08f92:    00 60             	r0 = b[r0 + 0] (u)			  ## remote_device_db.c:316:9
 1e08f94:    25 30             	if (r0 != 0) goto 74 <put_link_key+0x62 : 1e08fe0 >			  ## remote_device_db.c:316:9
 1e08f96:    00 a0             	r0 = sp + 0
 1e08f98:    61 08             	r1 = r6			  ## remote_device_db.c:324:10
 1e08f9a:    42 08             	r2 = r4			  ## remote_device_db.c:324:10
 1e08f9c:    47 16             	call -882 <get_database : 1e08c2c >			  ## remote_device_db.c:324:10
 1e08f9e:    12 30             	if (r0 != 0) goto 36 <put_link_key+0x46 : 1e08fc4 >
 1e08fa0:    00 a0             	r0 = sp + 0
 1e08fa2:    01 70             	r1 = 0			  ## remote_device_db.c:325:9
 1e08fa4:    02 72             	r2 = 32			  ## remote_device_db.c:325:9
 1e08fa6:    07 70             	r7 = 0			  ## remote_device_db.c:325:9
 1e08fa8:    97 f3 a2 ef       	call 3137348 <memset : 106ef0 >			  ## remote_device_db.c:325:9
 1e08fac:    f0 7f             	r0 = 255			  ## remote_device_db.c:326:30
 1e08fae:    d0 f5 07 00       	b[sp+7] = r0			  ## remote_device_db.c:326:30
 1e08fb2:    d0 f5 06 00       	b[sp+6] = r0			  ## remote_device_db.c:327:31
 1e08fb6:    d7 f5 05 00       	b[sp+5] = r7			  ## remote_device_db.c:328:43
 1e08fba:    d7 f5 09 00       	b[sp+9] = r7			  ## remote_device_db.c:329:36
 1e08fbe:    30 70             	r0 = 3			  ## remote_device_db.c:330:35
 1e08fc0:    d0 f5 08 00       	b[sp+8] = r0			  ## remote_device_db.c:330:35
 1e08fc4:    07 a0             	r7 = sp + 0
 1e08fc6:    a0 9e             	r0 = r7 + 10			  ## remote_device_db.c:332:5
 1e08fc8:    62 70             	r2 = 6			  ## remote_device_db.c:332:5
 1e08fca:    61 08             	r1 = r6			  ## remote_device_db.c:332:5
 1e08fcc:    97 f3 8a ef       	call 3137300 <memcpy : 106ee4 >			  ## remote_device_db.c:332:5
 1e08fd0:    00 9f             	r0 = r7 + 16			  ## remote_device_db.c:333:5
 1e08fd2:    02 71             	r2 = 16			  ## remote_device_db.c:333:5
 1e08fd4:    51 08             	r1 = r5			  ## remote_device_db.c:333:5
 1e08fd6:    97 f3 85 ef       	call 3137290 <memcpy : 106ee4 >			  ## remote_device_db.c:333:5
 1e08fda:    70 08             	r0 = r7			  ## remote_device_db.c:340:5
 1e08fdc:    41 08             	r1 = r4			  ## remote_device_db.c:340:5
 1e08fde:    85 16             	call -758 <put_database : 1e08cea >			  ## remote_device_db.c:340:5
 1e08fe0:    10 0a             	sp += 32
 1e08fe2:    57 01             	{pc, r7-r4} = [sp++]			  ## remote_device_db.c:341:1


handle_remote_dev_type:
 1e08fe4:    76 01             	[--sp] = {rets, r6-r4}			  ## remote_device_db.c:587:0
 1e08fe6:    e8 0b             	sp += -48			  ## remote_device_db.c:587:0
 1e08fe8:    14 08             	r4 = r1			  ## remote_device_db.c:587:0
 1e08fea:    05 08             	r5 = r0			  ## remote_device_db.c:587:0
 1e08fec:    06 70             	r6 = 0			  ## remote_device_db.c:587:0
 1e08fee:    0e 16             	call -996 <get_remote_test_flag : 1e08c0c >			  ## remote_device_db.c:590:17
 1e08ff0:    03 20             	if (r0 == 0) goto 6 <handle_remote_dev_type+0x14 : 1e08ff8 >			  ## remote_device_db.c:590:17
 1e08ff2:    60 08             	r0 = r6			  ## remote_device_db.c:623:1
 1e08ff4:    18 0a             	sp += 48			  ## remote_device_db.c:623:1
 1e08ff6:    56 01             	{pc, r6-r4} = [sp++]			  ## remote_device_db.c:623:1
 1e08ff8:    00 a1             	r0 = sp + 16
 1e08ffa:    02 70             	r2 = 0			  ## remote_device_db.c:594:10
 1e08ffc:    51 08             	r1 = r5			  ## remote_device_db.c:594:10
 1e08ffe:    16 16             	call -980 <get_database : 1e08c2c >			  ## remote_device_db.c:594:10
 1e09000:    07 20             	if (r0 == 0) goto 14 <handle_remote_dev_type+0x2C : 1e09010 >
 1e09002:    c0 f5 14 00       	r0 = b[sp+20] (u)
 1e09006:    06 08             	r6 = r0
 1e09008:    01 ff ff 40 22 00 	if (r4 != 255) goto 68 <handle_remote_dev_type+0x6E : 1e09052 >
 1e0900e:    f1 1f             	goto -30 <handle_remote_dev_type+0xE : 1e08ff2 >
 1e09010:    00 ff ff 40 ee ff 	if (r4 == 255) goto -36 <handle_remote_dev_type+0xE : 1e08ff2 >
 1e09016:    00 70             	r0 = 0
 1e09018:    38 02             	[sp+12] = r0			  ## remote_device_db.c:600:13
 1e0901a:    28 02             	[sp+8] = r0			  ## remote_device_db.c:600:13
 1e0901c:    18 02             	[sp+4] = r0			  ## remote_device_db.c:600:13
 1e0901e:    08 02             	[sp] = r0			  ## remote_device_db.c:600:13
 1e09020:    06 a1             	r6 = sp + 16			  ## remote_device_db.c:600:13
 1e09022:    01 70             	r1 = 0			  ## remote_device_db.c:601:13
 1e09024:    02 72             	r2 = 32			  ## remote_device_db.c:601:13
 1e09026:    60 08             	r0 = r6			  ## remote_device_db.c:601:13
 1e09028:    97 f3 62 ef       	call 3137220 <memset : 106ef0 >			  ## remote_device_db.c:601:13
 1e0902c:    a0 9c             	r0 = r6 + 10			  ## remote_device_db.c:602:13
 1e0902e:    62 70             	r2 = 6			  ## remote_device_db.c:602:13
 1e09030:    51 08             	r1 = r5			  ## remote_device_db.c:602:13
 1e09032:    97 f3 57 ef       	call 3137198 <memcpy : 106ee4 >			  ## remote_device_db.c:602:13
 1e09036:    f0 7f             	r0 = 255			  ## remote_device_db.c:603:34
 1e09038:    d0 f5 17 00       	b[sp+23] = r0			  ## remote_device_db.c:603:34
 1e0903c:    d0 f5 16 00       	b[sp+22] = r0			  ## remote_device_db.c:604:35
 1e09040:    30 70             	r0 = 3			  ## remote_device_db.c:605:39
 1e09042:    d0 f5 18 00       	b[sp+24] = r0			  ## remote_device_db.c:605:39
 1e09046:    01 a0             	r1 = sp + 0			  ## remote_device_db.c:605:39
 1e09048:    02 70             	r2 = 0			  ## remote_device_db.c:606:13
 1e0904a:    50 08             	r0 = r5			  ## remote_device_db.c:606:13
 1e0904c:    98 17             	call -208 <put_link_key : 1e08f7e >			  ## remote_device_db.c:606:13
 1e0904e:    c0 f5 14 00       	r0 = b[sp+20] (u)			  ## remote_device_db.c:606:13
 1e09052:    06 70             	r6 = 0
 1e09054:    40 f2 cd 0f       	if (r0 == r4) goto -102 <handle_remote_dev_type+0xE : 1e08ff2 >
 1e09058:    d4 f5 14 00       	b[sp+20] = r4			  ## remote_device_db.c:618:28
 1e0905c:    00 a1             	r0 = sp + 16			  ## remote_device_db.c:618:28
 1e0905e:    01 70             	r1 = 0			  ## remote_device_db.c:620:9
 1e09060:    44 16             	call -888 <put_database : 1e08cea >			  ## remote_device_db.c:620:9
 1e09062:    c7 1f             	goto -114 <handle_remote_dev_type+0xE : 1e08ff2 >


check_l2cap_authentication_flag:
 1e09064:    78 01             	[--sp] = {rets, r8-r4}			  ## l2cap.c:229:0
 1e09066:    c3 ff 98 1a 00 00 	r3 = 6808 <l2cap_stack : 1a98 >			  ## l2cap.c:229:0
 1e0906c:    03 46             	r3 = [r3 + 0]			  ## l2cap.c:229:0
 1e0906e:    28 08             	r8 = r2			  ## l2cap.c:229:0
 1e09070:    16 08             	r6 = r1			  ## l2cap.c:229:0
 1e09072:    07 08             	r7 = r0			  ## l2cap.c:229:0
 1e09074:    34 fc 2c 00       	r4 = r3 + 44			  ## l2cap.c:229:0
 1e09078:    62 70             	r2 = 6			  ## l2cap.c:232:14
 1e0907a:    41 08             	r1 = r4			  ## l2cap.c:232:14
 1e0907c:    97 f3 36 ef       	call 3137132 <memcmp : 106eec >			  ## l2cap.c:232:14
 1e09080:    0f 30             	if (r0 != 0) goto 30 <.GJTIE612_0_0_+0x6 : 1e090a0 >			  ## l2cap.c:232:14
 1e09082:    60 68             	r0 = b[r4 + 6] (u)			  ## l2cap.c:233:71
 1e09084:    21 fd 0f 09       	r1 = r0 & 15			  ## l2cap.c:233:71
 1e09088:    a1 e0 0a 10       	if (r1 != 10) goto 20 <.GJTIE612_0_0_+0x6 : 1e090a0 >			  ## l2cap.c:233:71
 1e0908c:    61 fc dc ff       	r1 = r6 + -36			  ## l2cap.c:235:17
 1e09090:    31 e0 33 80       	if (r1 > 3) goto 102 <.GJTIE612_0_0_+0x60 : 1e090fa >			  ## l2cap.c:235:17
 1e09094:    a1 00             	tbb [r1]


.GJTIS612_0_0_:
 1e09096:    02     < 2 : 0x2 >
 1e09097:    27     < 39 : 0x27 >
 1e09098:    2e     < 46 : 0x2E >
 1e09099:    34     < 52 : 0x34 >
 1e0909a:    18 f9 07 40       	b[r4 + 7] = r8			  ## l2cap.c:242:93
 1e0909e:    2d 18             	goto 90 <.GJTIE612_0_0_+0x60 : 1e090fa >			  ## l2cap.c:242:93
 1e090a0:    01 fd 02 69       	r1 = r6 | 2			  ## l2cap.c:255:9
 1e090a4:    00 72             	r0 = 32			  ## l2cap.c:255:9
 1e090a6:    61 e2 1c 10       	if (r1 != 38) goto 56 <.GJTIE612_0_0_+0x48 : 1e090e2 >			  ## l2cap.c:255:9
 1e090aa:    65 68             	r5 = b[r4 + 6] (u)
 1e090ac:    21 fd 0f 59       	r1 = r5 & 15			  ## l2cap.c:257:71
 1e090b0:    a1 e0 17 00       	if (r1 == 10) goto 46 <.GJTIE612_0_0_+0x48 : 1e090e2 >			  ## l2cap.c:257:71
 1e090b4:    62 70             	r2 = 6			  ## l2cap.c:258:17
 1e090b6:    40 08             	r0 = r4			  ## l2cap.c:258:17
 1e090b8:    71 08             	r1 = r7			  ## l2cap.c:258:17
 1e090ba:    97 f3 13 ef       	call 3137062 <memcpy : 106ee4 >			  ## l2cap.c:258:17
 1e090be:    20 fd f0 59       	r0 = r5 & 240			  ## l2cap.c:259:79
 1e090c2:    00 fd 0a 09       	r0 = r0 | 10			  ## l2cap.c:259:79
 1e090c6:    68 68             	b[r4 + 6] = r0			  ## l2cap.c:259:79
 1e090c8:    46 e2 04 10       	if (r6 != 36) goto 8 <.GJTIE612_0_0_+0x3A : 1e090d4 >			  ## l2cap.c:260:21
 1e090cc:    18 f9 07 40       	b[r4 + 7] = r8			  ## l2cap.c:262:96
 1e090d0:    a0 70             	r0 = 10			  ## l2cap.c:263:93
 1e090d2:    05 18             	goto 10 <.GJTIE612_0_0_+0x44 : 1e090de >			  ## l2cap.c:263:93
 1e090d4:    00 72             	r0 = 32			  ## l2cap.c:266:96
 1e090d6:    78 68             	b[r4 + 7] = r0			  ## l2cap.c:266:96
 1e090d8:    a0 70             	r0 = 10			  ## l2cap.c:267:93
 1e090da:    c8 fd 20 08       	r0 <= insert(r8, p:4, l:8)			  ## l2cap.c:267:93
 1e090de:    68 68             	b[r4 + 6] = r0
 1e090e0:    80 08             	r0 = r8
 1e090e2:    58 01             	{pc, r8-r4} = [sp++]			  ## l2cap.c:274:1
 1e090e4:    00 70             	r0 = 0
 1e090e6:    68 68             	b[r4 + 6] = r0			  ## l2cap.c:238:90
 1e090e8:    28 58             	h[r4 + 4] = r0			  ## l2cap.c:238:90
 1e090ea:    08 48             	[r4 + 0] = r0			  ## l2cap.c:238:90
 1e090ec:    00 72             	r0 = 32			  ## l2cap.c:239:93
 1e090ee:    78 68             	b[r4 + 7] = r0			  ## l2cap.c:239:93
 1e090f0:    04 18             	goto 8 <.GJTIE612_0_0_+0x60 : 1e090fa >			  ## l2cap.c:239:93
 1e090f2:    a0 70             	r0 = 10			  ## l2cap.c:245:90
 1e090f4:    c8 fd 20 08       	r0 <= insert(r8, p:4, l:8)			  ## l2cap.c:245:90
 1e090f8:    68 68             	b[r4 + 6] = r0			  ## l2cap.c:245:90
 1e090fa:    70 68             	r0 = b[r4 + 7] (u)			  ## l2cap.c:250:78
 1e090fc:    58 01             	{pc, r8-r4} = [sp++]			  ## l2cap.c:274:1
 1e090fe:    00 d1             	r0 = r0 >> 4			  ## l2cap.c:248:78
 1e09100:    58 01             	{pc, r8-r4} = [sp++]			  ## l2cap.c:274:1


remote_dev_company_ioctrl:
 1e09102:    76 01             	[--sp] = {rets, r6-r4}			  ## l2cap.c:278:0
 1e09104:    24 08             	r4 = r2			  ## l2cap.c:278:0
 1e09106:    16 08             	r6 = r1			  ## l2cap.c:278:0
 1e09108:    05 08             	r5 = r0			  ## l2cap.c:278:0
 1e0910a:    71 72             	r1 = 39			  ## l2cap.c:278:0
 1e0910c:    01 2c             	if (r6 == 0) goto 2 <remote_dev_company_ioctrl+0xE : 1e09110 >			  ## l2cap.c:278:0
 1e0910e:    61 72             	r1 = 38			  ## l2cap.c:278:0
 1e09110:    a9 17             	call -174 <check_l2cap_authentication_flag : 1e09064 >			  ## l2cap.c:285:11
 1e09112:    04 2c             	if (r6 == 0) goto 8 <remote_dev_company_ioctrl+0x1A : 1e0911c >			  ## l2cap.c:285:11
 1e09114:    03 28             	if (r4 == 0) goto 6 <remote_dev_company_ioctrl+0x1A : 1e0911c >
 1e09116:    50 08             	r0 = r5			  ## l2cap.c:287:9
 1e09118:    41 08             	r1 = r4			  ## l2cap.c:287:9
 1e0911a:    64 17             	call -312 <handle_remote_dev_type : 1e08fe4 >			  ## l2cap.c:287:9
 1e0911c:    56 01             	{pc, r6-r4} = [sp++]


connection_address_for_handle:
 1e0911e:    c0 f3 22 ab       	goto 87620 <lmp_private_remote_addr_for_handler : 1e1e766 >			  ## hci_vendor.c:117:0


hci_disconnect_cmd:
 1e09122:    c0 f3 77 ab       	goto 87790 <lmp_hci_disconnect : 1e1e814 >			  ## hci_vendor.c:1739:0


hci_get_outgoing_acl_packet_buffer:
 1e09126:    74 01             	[--sp] = {rets, r4}			  ## hci_vendor.c:1325:0
 1e09128:    04 08             	r4 = r0			  ## hci_vendor.c:1325:0
 1e0912a:    bf f3 24 e7       	call -12728 <bredr_tx_bulk_alloc : 1e05f76 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:111:10
 1e0912e:    03 20             	if (r0 == 0) goto 6 <hci_get_outgoing_acl_packet_buffer+0x10 : 1e09136 >
 1e09130:    5c 50             	h[r0 + 10] = r4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:113:17
 1e09132:    80 81             	r0 += 24			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:115:16
 1e09134:    54 01             	{pc, r4} = [sp++]			  ## hci_vendor.c:1328:5
 1e09136:    00 70             	r0 = 0
 1e09138:    54 01             	{pc, r4} = [sp++]			  ## hci_vendor.c:1328:5


bt_store_16:
 1e0913a:    12 fa 00 01       	b[r0+r1] = r2			  ## utils.c:159:0
 1e0913e:    12 d2             	r2 = r2 >> 8			  ## utils.c:161:21
 1e09140:    11 80             	r1 += 1			  ## utils.c:160:15
 1e09142:    61 04             	r1 = r1.l (u)			  ## utils.c:161:5
 1e09144:    12 fa 00 01       	b[r0+r1] = r2			  ## utils.c:161:19
 1e09148:    20 00             	rts			  ## utils.c:162:1


l2cap_create_signaling_internal:
 1e0914a:    77 01             	[--sp] = {rets, r7-r4}			  ## l2cap_signaling.c:85:0
 1e0914c:    fe 0b             	sp += -4			  ## l2cap_signaling.c:85:0
 1e0914e:    76 02             	r6 = [sp+28]			  ## l2cap_signaling.c:85:0
 1e09150:    25 08             	r5 = r2			  ## l2cap_signaling.c:85:0
 1e09152:    04 08             	r4 = r0			  ## l2cap_signaling.c:85:0
 1e09154:    0e 02             	[sp] = r6			  ## l2cap_signaling.c:85:0
 1e09156:    02 fd 20 1a       	r2 = r1 | 8192			  ## l2cap_signaling.c:93:39
 1e0915a:    01 70             	r1 = 0			  ## l2cap_signaling.c:93:5
 1e0915c:    ee 17             	call -36 <bt_store_16 : 1e0913a >			  ## l2cap_signaling.c:93:5
 1e0915e:    61 70             	r1 = 6			  ## l2cap_signaling.c:95:5
 1e09160:    52 08             	r2 = r5			  ## l2cap_signaling.c:95:5
 1e09162:    eb 17             	call -42 <bt_store_16 : 1e0913a >			  ## l2cap_signaling.c:95:5
 1e09164:    60 02             	r0 = [sp+24]
 1e09166:    99 c0             	r1 = r3 << 2			  ## l2cap_signaling.c:103:50
 1e09168:    c2 ff fc 7b e0 01 	r2 = 31489020 <l2cap_signaling_commands_format : 1e07bfc >			  ## l2cap_signaling.c:103:14
 1e0916e:    21 09             	r1 += r2			  ## l2cap_signaling.c:103:50
 1e09170:    06 f6 fc 1f       	r6 = [r1 + -4]			  ## l2cap_signaling.c:103:14
 1e09174:    8b 68             	b[r4 + 8] = r3			  ## l2cap_signaling.c:97:19
 1e09176:    98 68             	b[r4 + 9] = r0			  ## l2cap_signaling.c:99:19
 1e09178:    80 f9 01 60       	r0 = b[r6 ++= 1] (u)			  ## l2cap_signaling.c:104:12
 1e0917c:    2e 20             	if (r0 == 0) goto 92 <l2cap_create_signaling_internal+0x90 : 1e091da >
 1e0917e:    c3 70             	r3 = 12
 1e09180:    10 04             	r0 = r0.b0 (s)			  ## l2cap_signaling.c:105:17
 1e09182:    01 fc cf ff       	r1 = r0 + -49			  ## l2cap_signaling.c:105:9
 1e09186:    21 e0 12 20       	if (r1 >= 2) goto 36 <l2cap_create_signaling_internal+0x64 : 1e091ae >			  ## l2cap_signaling.c:105:9
 1e0918a:    00 02             	r0 = [sp]			  ## l2cap_signaling.c:108:20
 1e0918c:    41 90             	r1 = r0 + 4			  ## l2cap_signaling.c:108:20
 1e0918e:    09 02             	[sp] = r1			  ## l2cap_signaling.c:108:20
 1e09190:    00 40             	r0 = [r0 + 0]			  ## l2cap_signaling.c:108:20
 1e09192:    e1 04             	r1 = r3.l (u)			  ## l2cap_signaling.c:110:13
 1e09194:    10 fa 00 41       	b[r4+r1] = r0			  ## l2cap_signaling.c:110:31
 1e09198:    02 f9 ff 6f       	r2 = b[r6 + -1] (u)			  ## l2cap_signaling.c:111:17
 1e0919c:    11 96             	r1 = r3 + 1			  ## l2cap_signaling.c:110:27
 1e0919e:    22 e3 17 10       	if (r2 != 50) goto 46 <l2cap_create_signaling_internal+0x86 : 1e091d0 >			  ## l2cap_signaling.c:110:27
 1e091a2:    61 04             	r1 = r1.l (u)			  ## l2cap_signaling.c:112:17
 1e091a4:    00 d2             	r0 = r0 >> 8			  ## l2cap_signaling.c:112:42
 1e091a6:    10 fa 00 41       	b[r4+r1] = r0			  ## l2cap_signaling.c:112:35
 1e091aa:    23 80             	r3 += 2			  ## l2cap_signaling.c:112:31
 1e091ac:    12 18             	goto 36 <l2cap_create_signaling_internal+0x88 : 1e091d2 >			  ## l2cap_signaling.c:112:31
 1e091ae:    40 e4 10 10       	if (r0 != 68) goto 32 <l2cap_create_signaling_internal+0x88 : 1e091d2 >
 1e091b2:    00 02             	r0 = [sp]			  ## l2cap_signaling.c:117:20
 1e091b4:    41 90             	r1 = r0 + 4			  ## l2cap_signaling.c:117:20
 1e091b6:    09 02             	[sp] = r1			  ## l2cap_signaling.c:117:20
 1e091b8:    01 02             	r1 = [sp]			  ## l2cap_signaling.c:119:20
 1e091ba:    05 40             	r5 = [r0 + 0]			  ## l2cap_signaling.c:117:20
 1e091bc:    40 92             	r0 = r1 + 4			  ## l2cap_signaling.c:119:20
 1e091be:    08 02             	[sp] = r0			  ## l2cap_signaling.c:119:20
 1e091c0:    01 42             	r1 = [r1 + 0]			  ## l2cap_signaling.c:119:20
 1e091c2:    e7 04             	r7 = r3.l (u)			  ## l2cap_signaling.c:122:21
 1e091c4:    c0 b9             	r0 = r4 + r7			  ## l2cap_signaling.c:122:21
 1e091c6:    52 08             	r2 = r5			  ## l2cap_signaling.c:122:13
 1e091c8:    97 f3 8c ee       	call 3136792 <memcpy : 106ee4 >			  ## l2cap_signaling.c:122:13
 1e091cc:    c3 bb             	r3 = r5 + r7			  ## l2cap_signaling.c:124:17
 1e091ce:    01 18             	goto 2 <l2cap_create_signaling_internal+0x88 : 1e091d2 >			  ## l2cap_signaling.c:124:17
 1e091d0:    13 08             	r3 = r1
 1e091d2:    80 f9 01 60       	r0 = b[r6 ++= 1] (u)			  ## l2cap_signaling.c:104:12
 1e091d6:    d4 31             	if (r0 != 0) goto -88 <l2cap_create_signaling_internal+0x36 : 1e09180 >			  ## l2cap_signaling.c:104:12
 1e091d8:    01 18             	goto 2 <l2cap_create_signaling_internal+0x92 : 1e091dc >			  ## l2cap_signaling.c:104:12
 1e091da:    c3 70             	r3 = 12
 1e091dc:    30 fc fc ff       	r0 = r3 + -4			  ## l2cap_signaling.c:137:37
 1e091e0:    22 04             	r2 = r0.l (u)			  ## l2cap_signaling.c:137:5
 1e091e2:    21 70             	r1 = 2			  ## l2cap_signaling.c:137:5
 1e091e4:    40 08             	r0 = r4			  ## l2cap_signaling.c:137:5
 1e091e6:    a9 17             	call -174 <bt_store_16 : 1e0913a >			  ## l2cap_signaling.c:137:5
 1e091e8:    30 fc f8 ff       	r0 = r3 + -8			  ## l2cap_signaling.c:139:41
 1e091ec:    22 04             	r2 = r0.l (u)			  ## l2cap_signaling.c:139:5
 1e091ee:    41 70             	r1 = 4			  ## l2cap_signaling.c:139:5
 1e091f0:    40 08             	r0 = r4			  ## l2cap_signaling.c:139:5
 1e091f2:    a3 17             	call -186 <bt_store_16 : 1e0913a >			  ## l2cap_signaling.c:139:5
 1e091f4:    30 fc f4 ff       	r0 = r3 + -12			  ## l2cap_signaling.c:141:37
 1e091f8:    22 04             	r2 = r0.l (u)			  ## l2cap_signaling.c:141:5
 1e091fa:    a1 70             	r1 = 10			  ## l2cap_signaling.c:141:5
 1e091fc:    40 08             	r0 = r4			  ## l2cap_signaling.c:141:5
 1e091fe:    9d 17             	call -198 <bt_store_16 : 1e0913a >			  ## l2cap_signaling.c:141:5
 1e09200:    e0 04             	r0 = r3.l (u)			  ## l2cap_signaling.c:147:5
 1e09202:    02 0a             	sp += 4			  ## l2cap_signaling.c:147:5
 1e09204:    57 01             	{pc, r7-r4} = [sp++]			  ## l2cap_signaling.c:147:5


bredr_hci_send_acl_packet:
 1e09206:    77 01             	[--sp] = {rets, r7-r4}			  ## hci_vendor.c:1332:0
 1e09208:    04 fc e8 ff       	r4 = r0 + -24			  ## hci_vendor.c:1332:0
 1e0920c:    90 69             	r0 = b[r4 + 25] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:123:18
 1e0920e:    82 69             	r2 = b[r4 + 24] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:123:18
 1e09210:    16 08             	r6 = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:123:18
 1e09212:    00 c2             	r0 = r0 << 8			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:123:18
 1e09214:    20 fd 0f 0a       	r0 = r0 & 3840			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:123:18
 1e09218:    50 b4             	r0 |= r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:123:18
 1e0921a:    80 f3 cc aa       	call 87448 <lmp_conn_for_handle : 1e1e7b6 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:124:35
 1e0921e:    05 08             	r5 = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:124:35
 1e09220:    1e 2a             	if (r5 == 0) goto 60 <bredr_hci_send_acl_packet+0x58 : 1e0925e >
 1e09222:    50 58             	r0 = h[r4 + 10] (u)
 1e09224:    67 fc fc ff       	r7 = r6 + -4
 1e09228:    07 f2 02 d0       	ifs (r7 <= r0) goto 4 <bredr_hci_send_acl_packet+0x2A : 1e09230 >
 1e0922c:    8f f3 d8 d0       	call 2073008 <p33_soft_reset : 33e0 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/driver/cpu/bd19/asm/cpu.h:148:5
 1e09230:    81 9d             	r1 = r6 + 24			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/link_bulk.c:422:38
 1e09232:    40 08             	r0 = r4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/link_bulk.c:422:5
 1e09234:    80 f3 8e 31       	call 25372 <lbuf_realloc : 1e0f554 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/link_bulk.c:422:5
 1e09238:    00 70             	r0 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:143:21
 1e0923a:    68 58             	h[r4 + 12] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:143:21
 1e0923c:    5f 58             	h[r4 + 10] = r7			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:144:21
 1e0923e:    b0 70             	r0 = 11			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:145:21
 1e09240:    38 68             	b[r4 + 3] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:145:21
 1e09242:    90 69             	r0 = b[r4 + 25] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:147:9
 1e09244:    21 fd f0 09       	r1 = r0 & 240			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:147:32
 1e09248:    10 70             	r0 = 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:147:32
 1e0924a:    01 e1 01 00       	if (r1 == 16) goto 2 <bredr_hci_send_acl_packet+0x4A : 1e09250 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:147:32
 1e0924e:    20 70             	r0 = 2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:147:9
 1e09250:    68 68             	b[r4 + 6] = r0
 1e09252:    00 f6 dc 50       	r0 = [r5 + 220]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:155:38
 1e09256:    41 08             	r1 = r4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:155:5
 1e09258:    17 01             	{rets, r7-r4} = [sp++]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:155:5
 1e0925a:    c0 f3 5e af       	goto 89788 <link_conn_tx_bulk_avaiable : 1e1f11a >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:155:5
 1e0925e:    40 08             	r0 = r4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:128:9
 1e09260:    17 01             	{rets, r7-r4} = [sp++]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:128:9
 1e09262:    ff f3 f6 e7       	goto -12308 <bredr_tx_bulk_free : 1e06252 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:128:9


l2cap_send_signaling_packet:
 1e09266:    63 01             	[--sp] = {r3}			  ## l2cap.c:500:0
 1e09268:    77 01             	[--sp] = {rets, r7-r4}			  ## l2cap.c:500:0
 1e0926a:    f8 0b             	sp += -16			  ## l2cap.c:500:0
 1e0926c:    26 08             	r6 = r2			  ## l2cap.c:500:0
 1e0926e:    14 08             	r4 = r1			  ## l2cap.c:500:0
 1e09270:    05 08             	r5 = r0			  ## l2cap.c:500:0
 1e09272:    a0 c0             	r0 = r4 << 2			  ## l2cap_signaling.c:159:50
 1e09274:    c1 ff fc 7b e0 01 	r1 = 31489020 <l2cap_signaling_commands_format : 1e07bfc >			  ## l2cap_signaling.c:159:14
 1e0927a:    10 09             	r0 += r1			  ## l2cap_signaling.c:159:50
 1e0927c:    01 f6 fc 0f       	r1 = [r0 + -4]			  ## l2cap_signaling.c:159:14
 1e09280:    40 a2             	r0 = sp + 36
 1e09282:    28 02             	[sp+8] = r0			  ## l2cap.c:506:5
 1e09284:    38 02             	[sp+12] = r0			  ## l2cap.c:506:5
 1e09286:    82 f9 01 10       	r2 = b[r1 ++= 1] (u)			  ## l2cap_signaling.c:160:12
 1e0928a:    1c 24             	if (r2 == 0) goto 56 <l2cap_send_signaling_packet+0x5E : 1e092c4 >
 1e0928c:    80 70             	r0 = 8
 1e0928e:    92 04             	r2 = r2.b0 (s)			  ## l2cap_signaling.c:161:17
 1e09290:    23 fc cf ff       	r3 = r2 + -49			  ## l2cap_signaling.c:161:9
 1e09294:    23 e0 0a 20       	if (r3 >= 2) goto 20 <l2cap_send_signaling_packet+0x46 : 1e092ac >			  ## l2cap_signaling.c:161:9
 1e09298:    32 02             	r2 = [sp+12]			  ## l2cap_signaling.c:164:20
 1e0929a:    42 80             	r2 += 4			  ## l2cap_signaling.c:164:20
 1e0929c:    3a 02             	[sp+12] = r2			  ## l2cap_signaling.c:164:20
 1e0929e:    03 f9 ff 1f       	r3 = b[r1 + -1] (u)			  ## l2cap_signaling.c:167:17
 1e092a2:    22 70             	r2 = 2			  ## l2cap_signaling.c:167:17
 1e092a4:    23 e3 09 00       	if (r3 == 50) goto 18 <l2cap_send_signaling_packet+0x54 : 1e092ba >			  ## l2cap_signaling.c:167:17
 1e092a8:    12 70             	r2 = 1
 1e092aa:    07 18             	goto 14 <l2cap_send_signaling_packet+0x54 : 1e092ba >
 1e092ac:    42 e4 06 10       	if (r2 != 68) goto 12 <l2cap_send_signaling_packet+0x56 : 1e092bc >
 1e092b0:    32 02             	r2 = [sp+12]			  ## l2cap_signaling.c:173:20
 1e092b2:    43 94             	r3 = r2 + 4			  ## l2cap_signaling.c:173:20
 1e092b4:    3b 02             	[sp+12] = r3			  ## l2cap_signaling.c:173:20
 1e092b6:    02 44             	r2 = [r2 + 0]			  ## l2cap_signaling.c:173:20
 1e092b8:    20 04             	r0 = r0.l (u)			  ## l2cap_signaling.c:174:17
 1e092ba:    20 09             	r0 += r2
 1e092bc:    82 f9 01 10       	r2 = b[r1 ++= 1] (u)			  ## l2cap_signaling.c:160:12
 1e092c0:    e6 35             	if (r2 != 0) goto -52 <l2cap_send_signaling_packet+0x28 : 1e0928e >			  ## l2cap_signaling.c:160:12
 1e092c2:    01 18             	goto 2 <l2cap_send_signaling_packet+0x60 : 1e092c6 >			  ## l2cap_signaling.c:160:12
 1e092c4:    80 70             	r0 = 8
 1e092c6:    20 04             	r0 = r0.l (u)			  ## l2cap.c:510:18
 1e092c8:    2e 17             	call -420 <hci_get_outgoing_acl_packet_buffer : 1e09126 >			  ## l2cap.c:510:18
 1e092ca:    07 08             	r7 = r0			  ## l2cap.c:510:18
 1e092cc:    02 3e             	if (r7 != 0) goto 4 <l2cap_send_signaling_packet+0x6C : 1e092d2 >
 1e092ce:    8f f3 87 d0       	call 2072846 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e092d2:    40 a2             	r0 = sp + 36
 1e092d4:    28 02             	[sp+8] = r0			  ## l2cap.c:512:5
 1e092d6:    18 02             	[sp+4] = r0			  ## l2cap_signaling.c:188:12
 1e092d8:    80 05             	r0 = r6.b0 (u)			  ## l2cap_signaling.c:188:72
 1e092da:    12 70             	r2 = 1			  ## l2cap_signaling.c:188:12
 1e092dc:    08 02             	[sp] = r0			  ## l2cap_signaling.c:188:12
 1e092de:    70 08             	r0 = r7			  ## l2cap_signaling.c:188:12
 1e092e0:    51 08             	r1 = r5			  ## l2cap_signaling.c:188:12
 1e092e2:    43 08             	r3 = r4			  ## l2cap_signaling.c:188:12
 1e092e4:    32 17             	call -412 <l2cap_create_signaling_internal : 1e0914a >			  ## l2cap_signaling.c:188:12
 1e092e6:    01 08             	r1 = r0			  ## l2cap_signaling.c:188:12
 1e092e8:    70 08             	r0 = r7			  ## l2cap.c:516:12
 1e092ea:    8d 17             	call -230 <bredr_hci_send_acl_packet : 1e09206 >			  ## l2cap.c:516:12
 1e092ec:    08 0a             	sp += 16			  ## l2cap.c:516:12
 1e092ee:    17 01             	{rets, r7-r4} = [sp++]			  ## l2cap.c:516:12
 1e092f0:    02 0a             	sp += 4			  ## l2cap.c:516:12
 1e092f2:    20 00             	rts			  ## l2cap.c:516:12


hci_number_free_acl_slots_for_connection_type:
 1e092f4:    75 01             	[--sp] = {rets, r5, r4}			  ## hci_vendor.c:2043:0
 1e092f6:    c2 ff 60 18 00 00 	r2 = 6240 <report_irq_stack_end : 1860 >			  ## hci_vendor.c:2043:0
 1e092fc:    04 44             	r4 = [r2 + 0]			  ## hci_vendor.c:2043:0
 1e092fe:    01 70             	r1 = 0			  ## hci_vendor.c:2043:0
 1e09300:    03 70             	r3 = 0			  ## hci_vendor.c:2043:0
 1e09302:    09 28             	if (r4 == 0) goto 18 <hci_number_free_acl_slots_for_connection_type+0x22 : 1e09316 >			  ## hci_vendor.c:2043:0
 1e09304:    35 48             	r5 = [r4 + 12]			  ## hci_vendor.c:2050:25
 1e09306:    00 ff ff 50 03 00 	if (r5 == 255) goto 6 <hci_number_free_acl_slots_for_connection_type+0x1E : 1e09312 >			  ## hci_vendor.c:2050:25
 1e0930c:    05 f9 d2 44       	r5 = b[r4 + 1234] (u)
 1e09310:    53 09             	r3 += r5			  ## hci_vendor.c:2054:33
 1e09312:    04 48             	r4 = [r4 + 0]
 1e09314:    f7 39             	if (r4 != 0) goto -18 <hci_number_free_acl_slots_for_connection_type+0x10 : 1e09304 >
 1e09316:    02 f9 1a 22       	r2 = b[r2 + 538] (u)			  ## hci_vendor.c:2066:22
 1e0931a:    03 24             	if (r2 == 0) goto 6 <hci_number_free_acl_slots_for_connection_type+0x2E : 1e09322 >			  ## hci_vendor.c:2066:22
 1e0931c:    e1 b4             	r1 = r2 - r3			  ## hci_vendor.c:2068:63
 1e0931e:    01 e0 08 b0       	ifs (r1 < 0) goto 16 <hci_number_free_acl_slots_for_connection_type+0x3E : 1e09332 >
 1e09322:    00 ff fe 00 05 00 	if (r0 == 254) goto 10 <hci_number_free_acl_slots_for_connection_type+0x3E : 1e09332 >
 1e09328:    01 ff ff 00 04 00 	if (r0 != 255) goto 8 <hci_number_free_acl_slots_for_connection_type+0x42 : 1e09336 >
 1e0932e:    10 70             	r0 = 1
 1e09330:    55 01             	{pc, r5, r4} = [sp++]			  ## hci_vendor.c:2100:1
 1e09332:    00 70             	r0 = 0
 1e09334:    55 01             	{pc, r5, r4} = [sp++]			  ## hci_vendor.c:2100:1
 1e09336:    10 70             	r0 = 1			  ## hci_vendor.c:2098:9
 1e09338:    01 24             	if (r2 == 0) goto 2 <hci_number_free_acl_slots_for_connection_type+0x48 : 1e0933c >
 1e0933a:    10 08             	r0 = r1			  ## hci_vendor.c:2098:9
 1e0933c:    55 01             	{pc, r5, r4} = [sp++]			  ## hci_vendor.c:2100:1


hci_number_free_acl_slots_for_handle:
 1e0933e:    34 00             	[--sp] = rets			  ## hci_vendor.c:2103:0
 1e09340:    bf f3 e2 f4       	call -5692 <le_hci_connection_for_handle : 1e07d08 >			  ## hci_vendor.c:2105:39
 1e09344:    03 20             	if (r0 == 0) goto 6 <hci_number_free_acl_slots_for_handle+0xE : 1e0934c >
 1e09346:    30 40             	r0 = [r0 + 12]			  ## hci_vendor.c:2109:70
 1e09348:    88 01             	{rets} = [sp++]			  ## hci_vendor.c:2109:12
 1e0934a:    d4 1f             	goto -88 <hci_number_free_acl_slots_for_connection_type : 1e092f4 >			  ## hci_vendor.c:2109:12
 1e0934c:    00 70             	r0 = 0
 1e0934e:    30 00             	pc = [sp++]			  ## hci_vendor.c:2110:1


hci_can_send_acl_packet_now:
 1e09350:    34 00             	[--sp] = rets			  ## hci_vendor.c:1846:0
 1e09352:    c1 ff 60 18 00 00 	r1 = 6240 <report_irq_stack_end : 1860 >			  ## hci_vendor.c:1847:22
 1e09358:    02 f9 15 12       	r2 = b[r1 + 533] (u)			  ## hci_vendor.c:1847:22
 1e0935c:    01 08             	r1 = r0			  ## hci_vendor.c:1847:22
 1e0935e:    00 70             	r0 = 0
 1e09360:    07 34             	if (r2 != 0) goto 14 <hci_can_send_acl_packet_now+0x20 : 1e09370 >
 1e09362:    10 08             	r0 = r1			  ## hci_vendor.c:2127:12
 1e09364:    ec 17             	call -40 <hci_number_free_acl_slots_for_handle : 1e0933e >			  ## hci_vendor.c:2127:12
 1e09366:    01 08             	r1 = r0			  ## hci_vendor.c:2127:12
 1e09368:    10 70             	r0 = 1			  ## hci_vendor.c:2127:61
 1e0936a:    01 e0 01 c0       	ifs (r1 > 0) goto 2 <hci_can_send_acl_packet_now+0x20 : 1e09370 >			  ## hci_vendor.c:2127:61
 1e0936e:    00 70             	r0 = 0			  ## hci_vendor.c:2127:61
 1e09370:    30 00             	pc = [sp++]			  ## hci_vendor.c:1851:1


hci_reserve_packet_buffer:
 1e09372:    c1 ff 60 18 00 00 	r1 = 6240 <report_irq_stack_end : 1860 >			  ## hci_vendor.c:1854:0
 1e09378:    02 f9 15 12       	r2 = b[r1 + 533] (u)			  ## hci_vendor.c:1855:22
 1e0937c:    00 70             	r0 = 0			  ## hci_vendor.c:1855:22
 1e0937e:    03 34             	if (r2 != 0) goto 6 <hci_reserve_packet_buffer+0x14 : 1e09386 >			  ## hci_vendor.c:1855:22
 1e09380:    10 70             	r0 = 1
 1e09382:    10 f9 15 12       	b[r1 + 533] = r0			  ## hci_vendor.c:1858:45
 1e09386:    20 00             	rts			  ## hci_vendor.c:1860:1


le_hci_send_acl_packet_fragments:
 1e09388:    7b 01             	[--sp] = {rets, r11-r4}			  ## hci_vendor.c:1177:0
 1e0938a:    cb ff 60 18 00 00 	r11 = 6240 <report_irq_stack_end : 1860 >			  ## hci_vendor.c:1177:0
 1e09390:    04 f7 1c b2       	r4 = h[r11 + 540] (u)			  ## hci_vendor.c:1177:0
 1e09394:    0a 08             	r10 = r0			  ## hci_vendor.c:1177:0
 1e09396:    09 70             	r9 = 0			  ## hci_vendor.c:1177:0
 1e09398:    c8 ff ff df 00 00 	r8 = 57343 <_nv_pre_end+0x24FF : dfff >			  ## hci_vendor.c:1177:0
 1e0939e:    05 f7 16 b2       	r5 = h[r11 + 534] (u)			  ## hci_vendor.c:1185:54
 1e093a2:    00 f7 18 b2       	r0 = h[r11 + 536] (u)			  ## hci_vendor.c:1186:46
 1e093a6:    67 b1             	r7 = r0 - r5			  ## hci_vendor.c:1186:88
 1e093a8:    46 08             	r6 = r4			  ## hci_vendor.c:1190:13
 1e093aa:    47 f2 01 c0       	ifs (r7 > r4) goto 2 <le_hci_send_acl_packet_fragments+0x28 : 1e093b0 >			  ## hci_vendor.c:1190:13
 1e093ae:    76 08             	r6 = r7			  ## hci_vendor.c:1190:13
 1e093b0:    50 fc fc ff       	r0 = r5 + -4			  ## hci_vendor.c:1185:76
 1e093b4:    23 04             	r3 = r0.l (u)			  ## hci_vendor.c:1185:76
 1e093b6:    0e 26             	if (r3 == 0) goto 28 <le_hci_send_acl_packet_fragments+0x4C : 1e093d4 >			  ## hci_vendor.c:1185:76
 1e093b8:    00 f9 09 b0       	r0 = b[r11 + 9] (u)			  ## hci_vendor.c:1197:41
 1e093bc:    01 f9 08 b0       	r1 = b[r11 + 8] (u)			  ## hci_vendor.c:1197:41
 1e093c0:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## hci_vendor.c:1198:60
 1e093c4:    00 fd 10 1a       	r0 = r1 | 4096			  ## hci_vendor.c:1198:60
 1e093c8:    e2 fd 80 20       	r2 = r0 & r8			  ## hci_vendor.c:1199:13
 1e093cc:    b0 fc 08 00       	r0 = r11 + 8			  ## hci_vendor.c:1197:41
 1e093d0:    31 08             	r1 = r3			  ## hci_vendor.c:1199:13
 1e093d2:    b3 16             	call -666 <bt_store_16 : 1e0913a >			  ## hci_vendor.c:1199:13
 1e093d4:    b0 fc 08 00       	r0 = r11 + 8			  ## hci_vendor.c:1203:9
 1e093d8:    a2 05             	r2 = r6.l (u)			  ## hci_vendor.c:1203:9
 1e093da:    51 fc fe ff       	r1 = r5 + -2			  ## hci_vendor.c:1203:68
 1e093de:    61 04             	r1 = r1.l (u)			  ## hci_vendor.c:1203:9
 1e093e0:    ac 16             	call -680 <bt_store_16 : 1e0913a >			  ## hci_vendor.c:1203:9
 1e093e2:    00 f9 d2 a4       	r0 = b[r10 + 1234] (u)			  ## hci_vendor.c:1206:41
 1e093e6:    10 80             	r0 += 1			  ## hci_vendor.c:1206:41
 1e093e8:    10 f9 d2 a4       	b[r10 + 1234] = r0			  ## hci_vendor.c:1206:41
 1e093ec:    47 f2 06 d0       	ifs (r7 <= r4) goto 12 <le_hci_send_acl_packet_fragments+0x74 : 1e093fc >			  ## hci_vendor.c:1209:13
 1e093f0:    00 f7 16 b2       	r0 = h[r11 + 534] (u)			  ## hci_vendor.c:1211:48
 1e093f4:    60 09             	r0 += r6			  ## hci_vendor.c:1211:48
 1e093f6:    10 f7 16 b2       	h[r11 + 534] = r0			  ## hci_vendor.c:1211:48
 1e093fa:    04 18             	goto 8 <le_hci_send_acl_packet_fragments+0x7C : 1e09404 >			  ## hci_vendor.c:1211:48
 1e093fc:    19 f7 16 b2       	h[r11 + 534] = r9			  ## hci_vendor.c:1214:48
 1e09400:    19 f7 18 b2       	h[r11 + 536] = r9			  ## hci_vendor.c:1215:55
 1e09404:    80 fb b0 03       	r0 = r3 + r11			  ## hci_vendor.c:1219:28
 1e09408:    80 80             	r0 += 8			  ## hci_vendor.c:1219:28
 1e0940a:    41 9c             	r1 = r6 + 4			  ## hci_vendor.c:1220:57
 1e0940c:    61 04             	r1 = r1.l (u)			  ## hci_vendor.c:1222:9
 1e0940e:    80 f3 c6 7e       	call 64908 <le_hci_send_acl_packet : 1e1919e >			  ## hci_vendor.c:1222:9
 1e09412:    47 f2 06 d0       	ifs (r7 <= r4) goto 12 <le_hci_send_acl_packet_fragments+0x9A : 1e09422 >			  ## hci_vendor.c:1225:13
 1e09416:    00 f7 04 a0       	r0 = h[r10 + 4] (u)			  ## hci_vendor.c:2127:12
 1e0941a:    91 17             	call -222 <hci_number_free_acl_slots_for_handle : 1e0933e >			  ## hci_vendor.c:2127:12
 1e0941c:    00 e0 bf cf       	ifs (r0 > 0) goto -130 <le_hci_send_acl_packet_fragments+0x16 : 1e0939e >			  ## hci_vendor.c:2127:12
 1e09420:    5b 01             	{pc, r11-r4} = [sp++]			  ## hci_vendor.c:2127:12
 1e09422:    b0 fc 15 02       	r0 = r11 + 533			  ## hci_vendor.c:1940:45
 1e09426:    01 70             	r1 = 0			  ## hci_vendor.c:1940:45
 1e09428:    52 70             	r2 = 5			  ## hci_vendor.c:1940:45
 1e0942a:    97 f3 61 ed       	call 3136194 <memset : 106ef0 >			  ## hci_vendor.c:1940:45
 1e0942e:    5b 01             	{pc, r11-r4} = [sp++]


hci_le_send_acl_packet_buffer:
 1e09430:    77 01             	[--sp] = {rets, r7-r4}			  ## hci_vendor.c:1277:0
 1e09432:    c7 ff 60 18 00 00 	r7 = 6240 <report_irq_stack_end : 1860 >			  ## hci_vendor.c:1277:0
 1e09438:    01 f9 15 72       	r1 = b[r7 + 533] (u)			  ## hci_vendor.c:1279:23
 1e0943c:    05 08             	r5 = r0			  ## hci_vendor.c:1279:23
 1e0943e:    74 75             	r4 = 87			  ## hci_vendor.c:1279:23
 1e09440:    1e 22             	if (r1 == 0) goto 60 <hci_le_send_acl_packet_buffer+0x4E : 1e0947e >			  ## hci_vendor.c:1279:23
 1e09442:    90 6e             	r0 = b[r7 + 9] (u)			  ## hci_vendor.c:1284:35
 1e09444:    81 6e             	r1 = b[r7 + 8] (u)			  ## hci_vendor.c:1284:35
 1e09446:    00 c2             	r0 = r0 << 8			  ## hci_vendor.c:1284:35
 1e09448:    20 fd 0f 0a       	r0 = r0 & 3840			  ## hci_vendor.c:1284:35
 1e0944c:    e0 fd 10 60       	r6 = r0 | r1			  ## hci_vendor.c:1284:35
 1e09450:    60 08             	r0 = r6			  ## hci_vendor.c:2127:12
 1e09452:    75 17             	call -278 <hci_number_free_acl_slots_for_handle : 1e0933e >			  ## hci_vendor.c:2127:12
 1e09454:    00 e0 0c d0       	ifs (r0 <= 0) goto 24 <hci_le_send_acl_packet_buffer+0x40 : 1e09470 >			  ## hci_vendor.c:2127:12
 1e09458:    a0 05             	r0 = r6.l (u)			  ## hci_vendor.c:1292:39
 1e0945a:    bf f3 55 f4       	call -5974 <le_hci_connection_for_handle : 1e07d08 >			  ## hci_vendor.c:1292:39
 1e0945e:    0c 20             	if (r0 == 0) goto 24 <hci_le_send_acl_packet_buffer+0x48 : 1e09478 >
 1e09460:    15 f7 18 72       	h[r7 + 536] = r5			  ## hci_vendor.c:1304:47
 1e09464:    41 70             	r1 = 4			  ## hci_vendor.c:1306:40
 1e09466:    11 f7 16 72       	h[r7 + 534] = r1			  ## hci_vendor.c:1306:40
 1e0946a:    8e 17             	call -228 <le_hci_send_acl_packet_fragments : 1e09388 >			  ## hci_vendor.c:1308:12
 1e0946c:    04 70             	r4 = 0
 1e0946e:    07 18             	goto 14 <hci_le_send_acl_packet_buffer+0x4E : 1e0947e >
 1e09470:    00 70             	r0 = 0			  ## hci_vendor.c:1940:45
 1e09472:    10 f9 15 72       	b[r7 + 533] = r0			  ## hci_vendor.c:1940:45
 1e09476:    03 18             	goto 6 <hci_le_send_acl_packet_buffer+0x4E : 1e0947e >			  ## hci_vendor.c:1940:45
 1e09478:    04 70             	r4 = 0
 1e0947a:    14 f9 15 72       	b[r7 + 533] = r4			  ## hci_vendor.c:1940:45
 1e0947e:    40 08             	r0 = r4			  ## hci_vendor.c:1309:1
 1e09480:    57 01             	{pc, r7-r4} = [sp++]			  ## hci_vendor.c:1309:1


l2cap_send_le_signaling_packet:
 1e09482:    63 01             	[--sp] = {r3}			  ## l2cap.c:523:0
 1e09484:    76 01             	[--sp] = {rets, r6-r4}			  ## l2cap.c:523:0
 1e09486:    fa 0b             	sp += -12			  ## l2cap.c:523:0
 1e09488:    26 08             	r6 = r2			  ## l2cap.c:523:0
 1e0948a:    14 08             	r4 = r1			  ## l2cap.c:523:0
 1e0948c:    05 08             	r5 = r0			  ## l2cap.c:523:0
 1e0948e:    60 17             	call -320 <hci_can_send_acl_packet_now : 1e09350 >			  ## l2cap.c:529:10
 1e09490:    0e 20             	if (r0 == 0) goto 28 <l2cap_send_le_signaling_packet+0x2C : 1e094ae >			  ## l2cap.c:529:10
 1e09492:    6f 17             	call -290 <hci_reserve_packet_buffer : 1e09372 >			  ## l2cap.c:533:5
 1e09494:    c0 a1             	r0 = sp + 28			  ## l2cap.c:533:5
 1e09496:    28 02             	[sp+8] = r0			  ## l2cap.c:537:5
 1e09498:    18 02             	[sp+4] = r0			  ## l2cap_signaling.c:194:12
 1e0949a:    81 05             	r1 = r6.b0 (u)			  ## l2cap_signaling.c:194:72
 1e0949c:    c0 ff 68 18 00 00 	r0 = 6248 <report_irq_stack_end+0x8 : 1868 >			  ## l2cap_signaling.c:194:12
 1e094a2:    52 70             	r2 = 5			  ## l2cap_signaling.c:194:12
 1e094a4:    09 02             	[sp] = r1			  ## l2cap_signaling.c:194:12
 1e094a6:    51 08             	r1 = r5			  ## l2cap_signaling.c:194:12
 1e094a8:    43 08             	r3 = r4			  ## l2cap_signaling.c:194:12
 1e094aa:    4f 16             	call -866 <l2cap_create_signaling_internal : 1e0914a >			  ## l2cap_signaling.c:194:12
 1e094ac:    c1 17             	call -126 <hci_le_send_acl_packet_buffer : 1e09430 >			  ## l2cap.c:541:5
 1e094ae:    06 0a             	sp += 12
 1e094b0:    16 01             	{rets, r6-r4} = [sp++]			  ## l2cap.c:542:1
 1e094b2:    02 0a             	sp += 4			  ## l2cap.c:542:1
 1e094b4:    20 00             	rts			  ## l2cap.c:542:1


btstack_memory_l2cap_channel_free:
 1e094b6:    41 70             	r1 = 4			  ## btstack_memory.c:133:0
 1e094b8:    02 42             	r2 = [r1 + 0]			  ## btstack_memory.c:133:0
 1e094ba:    05 24             	if (r2 == 0) goto 10 <btstack_memory_l2cap_channel_free+0x10 : 1e094c6 >			  ## btstack_memory.c:133:0
 1e094bc:    23 08             	r3 = r2			  ## btstack_memory.c:133:0
 1e094be:    03 f2 04 00       	if (r3 == r0) goto 8 <btstack_memory_l2cap_channel_free+0x14 : 1e094ca >			  ## btstack_memory.c:133:0
 1e094c2:    03 46             	r3 = [r3 + 0]			  ## btstack_memory.c:133:0
 1e094c4:    fc 37             	if (r3 != 0) goto -8 <btstack_memory_l2cap_channel_free+0x8 : 1e094be >			  ## btstack_memory.c:133:0
 1e094c6:    0a 40             	[r0 + 0] = r2			  ## btstack_memory.c:45:25
 1e094c8:    08 42             	[r1 + 0] = r0			  ## btstack_memory.c:46:25
 1e094ca:    20 00             	rts			  ## btstack_memory.c:135:1


l2cap_dispatch:
 1e094cc:    76 01             	[--sp] = {rets, r6-r4}			  ## l2cap.c:310:0
 1e094ce:    fe 0b             	sp += -4			  ## l2cap.c:310:0
 1e094d0:    36 40             	r6 = [r0 + 12]			  ## l2cap.c:311:18
 1e094d2:    f4 50             	r4 = h[r0 + 30] (u)			  ## l2cap.c:314:94
 1e094d4:    25 08             	r5 = r2			  ## l2cap.c:314:94
 1e094d6:    03 2c             	if (r6 == 0) goto 6 <l2cap_dispatch+0x12 : 1e094de >			  ## l2cap.c:311:9
 1e094d8:    10 08             	r0 = r1			  ## l2cap.c:312:9
 1e094da:    41 08             	r1 = r4			  ## l2cap.c:312:9
 1e094dc:    09 18             	goto 18 <l2cap_dispatch+0x24 : 1e094f0 >
 1e094de:    c2 ff 98 1a 00 00 	r2 = 6808 <l2cap_stack : 1a98 >			  ## l2cap.c:314:11
 1e094e4:    02 44             	r2 = [r2 + 0]			  ## l2cap.c:314:11
 1e094e6:    20 40             	r0 = [r0 + 8]			  ## l2cap.c:314:49
 1e094e8:    06 44             	r6 = [r2 + 0]			  ## l2cap.c:314:24
 1e094ea:    0b 02             	[sp] = r3			  ## l2cap.c:314:9
 1e094ec:    42 08             	r2 = r4			  ## l2cap.c:314:9
 1e094ee:    53 08             	r3 = r5			  ## l2cap.c:314:9
 1e094f0:    86 00             	call r6
 1e094f2:    02 0a             	sp += 4
 1e094f4:    56 01             	{pc, r6-r4} = [sp++]			  ## l2cap.c:316:1


l2cap_emit_channel_opened:
 1e094f6:    75 01             	[--sp] = {rets, r5, r4}			  ## l2cap.c:319:0
 1e094f8:    f4 0b             	sp += -24			  ## l2cap.c:319:0
 1e094fa:    04 08             	r4 = r0			  ## l2cap.c:319:0
 1e094fc:    00 77             	r0 = 112			  ## l2cap.c:325:14
 1e094fe:    d0 f5 03 00       	b[sp+3] = r0			  ## l2cap.c:325:14
 1e09502:    30 71             	r0 = 19			  ## l2cap.c:325:14
 1e09504:    d0 f5 04 00       	b[sp+4] = r0			  ## l2cap.c:326:14
 1e09508:    d1 f5 05 00       	b[sp+5] = r1			  ## l2cap.c:327:14
 1e0950c:    35 a0             	r5 = sp + 3			  ## l2cap.c:327:14
 1e0950e:    30 9a             	r0 = r5 + 3			  ## l2cap.c:328:19
 1e09510:    61 99             	r1 = r4 + 22			  ## l2cap.c:328:29
 1e09512:    62 70             	r2 = 6			  ## utils.c:188:5
 1e09514:    97 f3 e6 ec       	call 3135948 <memcpy : 106ee4 >			  ## utils.c:188:5
 1e09518:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:329:37
 1e0951a:    d0 f5 0c 00       	b[sp+12] = r0			  ## utils.c:160:19
 1e0951e:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e09520:    d0 f5 0d 00       	b[sp+13] = r0			  ## utils.c:161:19
 1e09524:    e0 58             	r0 = h[r4 + 28] (u)			  ## l2cap.c:330:55
 1e09526:    d0 f5 0e 00       	b[sp+14] = r0			  ## utils.c:160:19
 1e0952a:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e0952c:    d0 f5 0f 00       	b[sp+15] = r0			  ## utils.c:161:19
 1e09530:    f0 58             	r0 = h[r4 + 30] (u)			  ## l2cap.c:331:55
 1e09532:    d0 f5 10 00       	b[sp+16] = r0			  ## utils.c:160:19
 1e09536:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e09538:    d0 f5 11 00       	b[sp+17] = r0			  ## utils.c:161:19
 1e0953c:    00 59             	r0 = h[r4 + 32] (u)			  ## l2cap.c:332:55
 1e0953e:    d0 f5 12 00       	b[sp+18] = r0			  ## utils.c:160:19
 1e09542:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e09544:    d0 f5 13 00       	b[sp+19] = r0			  ## utils.c:161:19
 1e09548:    10 59             	r0 = h[r4 + 34] (u)			  ## l2cap.c:333:55
 1e0954a:    d0 f5 14 00       	b[sp+20] = r0			  ## utils.c:160:19
 1e0954e:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e09550:    d0 f5 15 00       	b[sp+21] = r0			  ## utils.c:161:19
 1e09554:    20 59             	r0 = h[r4 + 36] (u)			  ## l2cap.c:334:55
 1e09556:    d0 f5 16 00       	b[sp+22] = r0			  ## utils.c:160:19
 1e0955a:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e0955c:    d0 f5 17 00       	b[sp+23] = r0			  ## utils.c:161:19
 1e09560:    41 70             	r1 = 4			  ## l2cap.c:335:5
 1e09562:    53 71             	r3 = 21			  ## l2cap.c:335:5
 1e09564:    40 08             	r0 = r4			  ## l2cap.c:335:5
 1e09566:    52 08             	r2 = r5			  ## l2cap.c:335:5
 1e09568:    b1 17             	call -158 <l2cap_dispatch : 1e094cc >			  ## l2cap.c:335:5
 1e0956a:    0c 0a             	sp += 24			  ## l2cap.c:335:5
 1e0956c:    55 01             	{pc, r5, r4} = [sp++]			  ## l2cap.c:336:1


l2cap_emit_credits:
 1e0956e:    34 00             	[--sp] = rets			  ## l2cap.c:367:0
 1e09570:    fc 0b             	sp += -8			  ## l2cap.c:367:0
 1e09572:    42 77             	r2 = 116			  ## l2cap.c:372:14
 1e09574:    d2 f5 03 00       	b[sp+3] = r2			  ## l2cap.c:372:14
 1e09578:    32 70             	r2 = 3			  ## l2cap.c:372:14
 1e0957a:    d2 f5 04 00       	b[sp+4] = r2			  ## l2cap.c:373:14
 1e0957e:    f2 50             	r2 = h[r0 + 30] (u)			  ## l2cap.c:374:54
 1e09580:    d2 f5 05 00       	b[sp+5] = r2			  ## utils.c:160:19
 1e09584:    12 d2             	r2 = r2 >> 8			  ## utils.c:161:21
 1e09586:    d2 f5 06 00       	b[sp+6] = r2			  ## utils.c:161:19
 1e0958a:    d1 f5 07 00       	b[sp+7] = r1			  ## l2cap.c:375:14
 1e0958e:    32 a0             	r2 = sp + 3			  ## l2cap.c:375:14
 1e09590:    41 70             	r1 = 4			  ## l2cap.c:376:5
 1e09592:    53 70             	r3 = 5			  ## l2cap.c:376:5
 1e09594:    9b 17             	call -202 <l2cap_dispatch : 1e094cc >			  ## l2cap.c:376:5
 1e09596:    04 0a             	sp += 8
 1e09598:    30 00             	pc = [sp++]			  ## l2cap.c:377:1


l2cap_emit_channel_closed:
 1e0959a:    34 00             	[--sp] = rets			  ## l2cap.c:339:0
 1e0959c:    fe 0b             	sp += -4			  ## l2cap.c:339:0
 1e0959e:    11 77             	r1 = 113			  ## l2cap.c:344:14
 1e095a0:    d1 f5 00 00       	b[sp] = r1			  ## l2cap.c:344:14
 1e095a4:    21 70             	r1 = 2			  ## l2cap.c:344:14
 1e095a6:    d1 f5 01 00       	b[sp+1] = r1			  ## l2cap.c:345:14
 1e095aa:    f1 50             	r1 = h[r0 + 30] (u)			  ## l2cap.c:346:54
 1e095ac:    d1 f5 02 00       	b[sp+2] = r1			  ## utils.c:160:19
 1e095b0:    09 d2             	r1 = r1 >> 8			  ## utils.c:161:21
 1e095b2:    d1 f5 03 00       	b[sp+3] = r1			  ## utils.c:161:19
 1e095b6:    02 a0             	r2 = sp + 0			  ## utils.c:161:19
 1e095b8:    41 70             	r1 = 4			  ## l2cap.c:347:5
 1e095ba:    43 70             	r3 = 4			  ## l2cap.c:347:5
 1e095bc:    87 17             	call -242 <l2cap_dispatch : 1e094cc >			  ## l2cap.c:347:5
 1e095be:    02 0a             	sp += 4
 1e095c0:    30 00             	pc = [sp++]			  ## l2cap.c:348:1


l2cap_finialize_channel_close:
 1e095c2:    74 01             	[--sp] = {rets, r4}			  ## l2cap.c:2249:0
 1e095c4:    04 08             	r4 = r0			  ## l2cap.c:2249:0
 1e095c6:    10 70             	r0 = 1			  ## l2cap.c:2250:38
 1e095c8:    28 69             	b[r4 + 18] = r0			  ## l2cap.c:2250:38
 1e095ca:    40 08             	r0 = r4			  ## l2cap.c:2251:5
 1e095cc:    e6 17             	call -52 <l2cap_emit_channel_closed : 1e0959a >			  ## l2cap.c:2251:5
 1e095ce:    c0 ff 98 1a 00 00 	r0 = 6808 <l2cap_stack : 1a98 >			  ## l2cap.c:2253:5
 1e095d4:    00 40             	r0 = [r0 + 0]			  ## l2cap.c:2253:5
 1e095d6:    80 80             	r0 += 8			  ## l2cap.c:2253:5
 1e095d8:    41 08             	r1 = r4			  ## l2cap.c:2253:5
 1e095da:    bf f3 28 f5       	call -5552 <btstack_linked_list_remove : 1e0802e >			  ## l2cap.c:2253:5
 1e095de:    40 08             	r0 = r4			  ## l2cap.c:2267:5
 1e095e0:    14 01             	{rets, r4} = [sp++]			  ## l2cap.c:2267:5
 1e095e2:    69 1f             	goto -302 <btstack_memory_l2cap_channel_free : 1e094b6 >			  ## l2cap.c:2267:5


btstack_linked_list_iterator_init:
 1e095e4:    c0 f4 00 09       	[r0 + 0] = 0			  ## btstack_linked_list.c:160:0
 1e095e8:    19 40             	[r0 + 4] = r1			  ## btstack_linked_list.c:162:14
 1e095ea:    01 42             	r1 = [r1 + 0]			  ## btstack_linked_list.c:163:16
 1e095ec:    29 40             	[r0 + 8] = r1			  ## btstack_linked_list.c:163:14
 1e095ee:    20 00             	rts			  ## btstack_linked_list.c:164:1


hci_connections_get_iterator:
 1e095f0:    c1 ff 60 18 00 00 	r1 = 6240 <report_irq_stack_end : 1860 >			  ## hci_vendor.c:1863:0
 1e095f6:    f6 1f             	goto -20 <btstack_linked_list_iterator_init : 1e095e4 >			  ## hci_vendor.c:1864:5


l2cap_run:
 1e095f8:    7f 01             	[--sp] = {rets, r15-r4}			  ## l2cap.c:658:0
 1e095fa:    e6 0b             	sp += -52			  ## l2cap.c:658:0
 1e095fc:    cb ff 98 1a 00 00 	r11 = 6808 <l2cap_stack : 1a98 >			  ## l2cap.c:658:0
 1e09602:    00 f6 00 b0       	r0 = [r11 + 0]			  ## l2cap.c:672:12
 1e09606:    91 40             	r1 = [r0 + 36]			  ## l2cap.c:672:42
 1e09608:    70 22             	if (r1 == 0) goto 224 <l2cap_run+0xF2 : 1e096ea >			  ## l2cap.c:672:42
 1e0960a:    18 70             	r8 = 1
 1e0960c:    0a 70             	r10 = 0
 1e0960e:    49 70             	r9 = 4
 1e09610:    17 70             	r7 = 1
 1e09612:    f1 60             	r1 = b[r0 + 15] (u)
 1e09614:    96 50             	r6 = h[r0 + 18] (u)			  ## l2cap.c:676:73
 1e09616:    e4 60             	r4 = b[r0 + 14] (u)			  ## l2cap.c:675:71
 1e09618:    65 50             	r5 = h[r0 + 12] (u)			  ## l2cap.c:674:71
 1e0961a:    91 e0 12 d0       	ifs (r1 <= 9) goto 36 <l2cap_run+0x4A : 1e09642 >			  ## l2cap.c:674:71
 1e0961e:    a1 e0 1e 00       	if (r1 == 10) goto 60 <l2cap_run+0x66 : 1e0965e >
 1e09622:    41 e1 28 00       	if (r1 == 20) goto 80 <l2cap_run+0x7E : 1e09676 >
 1e09626:    f1 e1 43 10       	if (r1 != 31) goto 134 <l2cap_run+0xB8 : 1e096b0 >
 1e0962a:    50 08             	r0 = r5			  ## l2cap.c:722:22
 1e0962c:    91 16             	call -734 <hci_can_send_acl_packet_now : 1e09350 >			  ## l2cap.c:722:22
 1e0962e:    58 20             	if (r0 == 0) goto 176 <l2cap_run+0xE8 : 1e096e0 >			  ## l2cap.c:722:22
 1e09630:    1a f5 04 00       	[sp+4] = r10			  ## l2cap.c:727:17
 1e09634:    11 70             	r1 = 1			  ## l2cap.c:727:17
 1e09636:    1a f5 00 00       	[sp] = r10			  ## l2cap.c:727:17
 1e0963a:    50 08             	r0 = r5			  ## l2cap.c:727:17
 1e0963c:    42 08             	r2 = r4			  ## l2cap.c:727:17
 1e0963e:    63 08             	r3 = r6			  ## l2cap.c:727:17
 1e09640:    28 18             	goto 80 <l2cap_run+0x9A : 1e09692 >			  ## l2cap.c:727:17
 1e09642:    11 e0 28 00       	if (r1 == 1) goto 80 <l2cap_run+0x9E : 1e09696 >
 1e09646:    21 e0 33 10       	if (r1 != 2) goto 102 <l2cap_run+0xB8 : 1e096b0 >
 1e0964a:    18 f5 08 00       	[sp+8] = r8			  ## l2cap.c:682:13
 1e0964e:    1e 02             	[sp+4] = r6			  ## l2cap.c:682:13
 1e09650:    31 70             	r1 = 3			  ## l2cap.c:682:13
 1e09652:    03 70             	r3 = 0			  ## l2cap.c:682:13
 1e09654:    1a f5 00 00       	[sp] = r10			  ## l2cap.c:682:13
 1e09658:    50 08             	r0 = r5			  ## l2cap.c:682:13
 1e0965a:    42 08             	r2 = r4			  ## l2cap.c:682:13
 1e0965c:    28 18             	goto 80 <l2cap_run+0xB6 : 1e096ae >			  ## l2cap.c:682:13
 1e0965e:    26 e0 1c 10       	if (r6 != 2) goto 56 <l2cap_run+0xA2 : 1e0969a >			  ## l2cap.c:692:17
 1e09662:    a0 40             	r0 = [r0 + 40]			  ## l2cap.c:693:62
 1e09664:    78 02             	[sp+28] = r0			  ## l2cap.c:693:21
 1e09666:    c0 a1             	r0 = sp + 28			  ## l2cap.c:693:21
 1e09668:    28 02             	[sp+8] = r0			  ## l2cap.c:695:17
 1e0966a:    19 f5 04 00       	[sp+4] = r9			  ## l2cap.c:695:17
 1e0966e:    b1 70             	r1 = 11			  ## l2cap.c:695:17
 1e09670:    1a f5 00 00       	[sp] = r10			  ## l2cap.c:695:17
 1e09674:    19 18             	goto 50 <l2cap_run+0xB0 : 1e096a8 >			  ## l2cap.c:695:17
 1e09676:    50 08             	r0 = r5			  ## l2cap.c:710:22
 1e09678:    6b 16             	call -810 <hci_can_send_acl_packet_now : 1e09350 >			  ## l2cap.c:710:22
 1e0967a:    32 20             	if (r0 == 0) goto 100 <l2cap_run+0xE8 : 1e096e0 >			  ## l2cap.c:710:22
 1e0967c:    3e 02             	[sp+12] = r6			  ## l2cap.c:715:17
 1e0967e:    1a f5 08 00       	[sp+8] = r10			  ## l2cap.c:715:17
 1e09682:    1a f5 04 00       	[sp+4] = r10			  ## l2cap.c:715:17
 1e09686:    51 71             	r1 = 21			  ## l2cap.c:715:17
 1e09688:    03 70             	r3 = 0			  ## l2cap.c:715:17
 1e0968a:    1a f5 00 00       	[sp] = r10			  ## l2cap.c:715:17
 1e0968e:    50 08             	r0 = r5			  ## l2cap.c:715:17
 1e09690:    42 08             	r2 = r4			  ## l2cap.c:715:17
 1e09692:    f7 16             	call -530 <l2cap_send_le_signaling_packet : 1e09482 >
 1e09694:    0d 18             	goto 26 <l2cap_run+0xB8 : 1e096b0 >
 1e09696:    11 70             	r1 = 1			  ## l2cap.c:703:13
 1e09698:    07 18             	goto 14 <l2cap_run+0xB0 : 1e096a8 >			  ## l2cap.c:703:13
 1e0969a:    1a f5 08 00       	[sp+8] = r10			  ## l2cap.c:698:17
 1e0969e:    1a f5 04 00       	[sp+4] = r10			  ## l2cap.c:698:17
 1e096a2:    b1 70             	r1 = 11			  ## l2cap.c:698:17
 1e096a4:    18 f5 00 00       	[sp] = r8			  ## l2cap.c:698:17
 1e096a8:    50 08             	r0 = r5
 1e096aa:    42 08             	r2 = r4
 1e096ac:    63 08             	r3 = r6
 1e096ae:    db 15             	call -1098 <l2cap_send_signaling_packet : 1e09266 >
 1e096b0:    00 f6 00 b0       	r0 = [r11 + 0]
 1e096b4:    91 40             	r1 = [r0 + 36]
 1e096b6:    00 f3 11 70       	if ((r7 & 1) == 0) goto 34 <l2cap_run+0xE4 : 1e096dc >
 1e096ba:    f1 8f             	r1 += -1			  ## l2cap.c:746:66
 1e096bc:    99 40             	[r0 + 36] = r1			  ## l2cap.c:746:66
 1e096be:    11 e0 0d b0       	ifs (r1 < 1) goto 26 <l2cap_run+0xE4 : 1e096dc >			  ## l2cap.c:746:66
 1e096c2:    42 91             	r2 = r0 + 20			  ## l2cap.c:749:21
 1e096c4:    03 70             	r3 = 0			  ## l2cap.c:749:21
 1e096c6:    11 44             	r1 = [r2 + 4]			  ## l2cap.c:749:13
 1e096c8:    04 44             	r4 = [r2 + 0]			  ## l2cap.c:749:13
 1e096ca:    11 f6 fc 2f       	[r2 + -4] = r1			  ## l2cap.c:749:13
 1e096ce:    14 f6 f8 2f       	[r2 + -8] = r4			  ## l2cap.c:749:13
 1e096d2:    91 40             	r1 = [r0 + 36]			  ## l2cap.c:748:55
 1e096d4:    13 80             	r3 += 1			  ## l2cap.c:749:128
 1e096d6:    82 80             	r2 += 8			  ## l2cap.c:748:23
 1e096d8:    13 f2 f5 bf       	ifs (r3 < r1) goto -22 <l2cap_run+0xCE : 1e096c6 >			  ## l2cap.c:748:23
 1e096dc:    9a 33             	if (r1 != 0) goto -204 <l2cap_run+0x1A : 1e09612 >
 1e096de:    05 18             	goto 10 <l2cap_run+0xF2 : 1e096ea >
 1e096e0:    00 f6 00 b0       	r0 = [r11 + 0]			  ## l2cap.c:672:12
 1e096e4:    91 40             	r1 = [r0 + 36]			  ## l2cap.c:672:42
 1e096e6:    07 70             	r7 = 0			  ## l2cap.c:672:42
 1e096e8:    94 33             	if (r1 != 0) goto -216 <l2cap_run+0x1A : 1e09612 >			  ## l2cap.c:672:42
 1e096ea:    25 40             	r5 = [r0 + 8]			  ## l2cap.c:754:46
 1e096ec:    05 e0 67 01       	if (r5 == 0) goto 718 <.GJTIE641_0_0_+0x28C : 1e099be >
 1e096f0:    c9 ff 90 09 00 00 	r9 = 2448 <stack_configs_app : 990 >
 1e096f6:    38 70             	r8 = 3
 1e096f8:    16 7e             	r6 = 225
 1e096fa:    0d fb 06 33       	r13 = 13062 <pvPortSwitch+0x14 : 3306 >
 1e096fe:    1a 70             	r10 = 1
 1e09700:    0e 70             	r14 = 0
 1e09702:    7f 70             	r15 = 7
 1e09704:    9c 70             	r12 = 9
 1e09706:    54 08             	r4 = r5
 1e09708:    20 69             	r0 = b[r4 + 18] (u)
 1e0970a:    05 48             	r5 = [r4 + 0]			  ## l2cap.c:757:20
 1e0970c:    e0 8f             	r0 += -2			  ## l2cap.c:761:9
 1e0970e:    c0 e0 54 81       	if (r0 > 12) goto 680 <.GJTIE641_0_0_+0x288 : 1e099ba >			  ## l2cap.c:761:9
 1e09712:    41 c0             	r1 = r0 << 1
 1e09714:    07 99             	r7 = r4 + 16			  ## l2cap.c:761:26
 1e09716:    b1 00             	tbh [r1]			  ## l2cap.c:761:26


.GJTIL641_0_0_:
 1e09718:    0d 00     < 13 : 0xD >
 1e0971a:    51 01     < 337 : 0x151 >
 1e0971c:    51 01     < 337 : 0x151 >
 1e0971e:    51 01     < 337 : 0x151 >
 1e09720:    51 01     < 337 : 0x151 >
 1e09722:    48 00     < 72 : 0x48 >
 1e09724:    51 01     < 337 : 0x151 >
 1e09726:    51 01     < 337 : 0x151 >
 1e09728:    79 00     < 121 : 0x79 >
 1e0972a:    9a 00     < 154 : 0x9A >
 1e0972c:    ab 00     < 171 : 0xAB >
 1e0972e:    ba 00     < 186 : 0xBA >
 1e09730:    d1 00     < 209 : 0xD1 >
 1e09732:    18 f9 02 70       	b[r7 + 2] = r8			  ## l2cap.c:766:46
 1e09736:    b0 6e             	r0 = b[r7 + 11] (u)			  ## l2cap.c:768:13
 1e09738:    a1 6e             	r1 = b[r7 + 10] (u)			  ## l2cap.c:768:13
 1e0973a:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## l2cap.c:768:13
 1e0973e:    91 f5 30 00       	h[sp+48] = r1			  ## l2cap.c:768:13
 1e09742:    90 6e             	r0 = b[r7 + 9] (u)			  ## l2cap.c:768:13
 1e09744:    81 6e             	r1 = b[r7 + 8] (u)			  ## l2cap.c:768:13
 1e09746:    72 6e             	r2 = b[r7 + 7] (u)			  ## l2cap.c:768:13
 1e09748:    63 6e             	r3 = b[r7 + 6] (u)			  ## l2cap.c:768:13
 1e0974a:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## l2cap.c:768:13
 1e0974e:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## l2cap.c:768:13
 1e09752:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## l2cap.c:768:13
 1e09756:    bb 02             	[sp+44] = r3			  ## l2cap.c:768:13
 1e09758:    01 70             	r1 = 0
 1e0975a:    00 70             	r0 = 0
 1e0975c:    d1 e0 08 00       	if (r1 == 13) goto 16 <.GJTIE641_0_0_+0x3E : 1e09770 >
 1e09760:    fa fd 10 26       	r2 = r6 >> r1			  ## hci_vendor.c:1709:38
 1e09764:    20 f3 04 20       	if ((r2 & 1) != 0) goto 8 <.GJTIE641_0_0_+0x3E : 1e09770 >			  ## hci_vendor.c:1709:38
 1e09768:    f8 fd 10 2a       	r2 = r10 << r1			  ## hci_vendor.c:1713:31
 1e0976c:    20 04             	r0 = r0.l (u)			  ## hci_vendor.c:1713:26
 1e0976e:    50 b4             	r0 |= r2			  ## hci_vendor.c:1713:26
 1e09770:    11 80             	r1 += 1			  ## hci_vendor.c:1708:26
 1e09772:    01 e1 f3 1f       	if (r1 != 16) goto -26 <.GJTIE641_0_0_+0x2A : 1e0975c >
 1e09776:    01 f9 14 90       	r1 = b[r9 + 20] (u)			  ## hci_vendor.c:1730:29
 1e0977a:    02 f9 13 90       	r2 = b[r9 + 19] (u)			  ## hci_vendor.c:1730:29
 1e0977e:    03 f9 12 90       	r3 = b[r9 + 18] (u)			  ## hci_vendor.c:1730:29
 1e09782:    04 f9 11 90       	r4 = b[r9 + 17] (u)			  ## hci_vendor.c:1730:29
 1e09786:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## hci_vendor.c:1730:29
 1e0978a:    c8 fd 40 43       	r4 <= insert(r3, p:8, l:8)			  ## hci_vendor.c:1730:29
 1e0978e:    d0 fd 80 42       	r4 <= insert(r2, p:16, l:16)			  ## hci_vendor.c:1730:29
 1e09792:    a1 fd a0 14       	r1 = sextra(r4, p:20, l:1)			  ## hci_vendor.c:1730:9
 1e09796:    22 fd aa 19       	r2 = r1 & 170			  ## hci_vendor.c:1733:5
 1e0979a:    e1 fd d0 00       	r0 = r0 ^ r13			  ## hci_vendor.c:1717:18
 1e0979e:    21 04             	r1 = r0.l (u)			  ## hci_vendor.c:1733:5
 1e097a0:    c0 a2             	r0 = sp + 44			  ## hci_vendor.c:1733:5
 1e097a2:    80 f3 9e a8       	call 86332 <lmp_hci_create_connection : 1e1e8e2 >			  ## hci_vendor.c:1733:5
 1e097a6:    09 19             	goto 530 <.GJTIE641_0_0_+0x288 : 1e099ba >			  ## hci_vendor.c:1733:5
 1e097a8:    80 58             	r0 = h[r4 + 16] (u)			  ## l2cap.c:831:44
 1e097aa:    23 f3 90 00       	if ((r0 & 8) != 0) goto 288 <.GJTIE641_0_0_+0x19C : 1e098ce >			  ## l2cap.c:831:44
 1e097ae:    02 f3 f8 00       	if ((r0 & 4) == 0) goto 496 <.GJTIE641_0_0_+0x270 : 1e099a2 >
 1e097b2:    30 fd 14 09       	r0 = r0 & 4294967275			  ## l2cap.c:651:107
 1e097b6:    10 b2             	r0 |= 16			  ## l2cap.c:646:107
 1e097b8:    88 58             	h[r4 + 16] = r0			  ## l2cap.c:646:42
 1e097ba:    01 f6 00 b0       	r1 = [r11 + 0]			  ## l2cap.c:123:9
 1e097be:    12 fc 28 00       	r2 = r1 + 40			  ## l2cap.c:123:9
 1e097c2:    c7 64             	r7 = b[r2 + 12] (u)			  ## l2cap.c:123:39
 1e097c4:    13 9e             	r3 = r7 + 1			  ## l2cap.c:126:55
 1e097c6:    11 70             	r1 = 1			  ## l2cap.c:126:55
 1e097c8:    00 ff ff 70 01 00 	if (r7 == 255) goto 2 <.GJTIE641_0_0_+0x9E : 1e097d0 >			  ## l2cap.c:126:55
 1e097ce:    31 08             	r1 = r3			  ## l2cap.c:123:9
 1e097d0:    c9 64             	b[r2 + 12] = r1
 1e097d2:    49 69             	b[r4 + 20] = r1			  ## l2cap.c:880:57
 1e097d4:    02 64             	r2 = b[r2 + 0] (u)			  ## l2cap.c:881:21
 1e097d6:    24 f3 e4 20       	if ((r2 & 16) != 0) goto 456 <.GJTIE641_0_0_+0x270 : 1e099a2 >			  ## l2cap.c:881:21
 1e097da:    da f5 20 00       	b[sp+32] = r10			  ## l2cap.c:895:39
 1e097de:    20 70             	r0 = 2			  ## l2cap.c:896:39
 1e097e0:    d0 f5 21 00       	b[sp+33] = r0			  ## l2cap.c:896:39
 1e097e4:    10 59             	r0 = h[r4 + 34] (u)			  ## l2cap.c:897:85
 1e097e6:    d0 f5 22 00       	b[sp+34] = r0			  ## utils.c:160:19
 1e097ea:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e097ec:    d0 f5 23 00       	b[sp+35] = r0			  ## utils.c:161:19
 1e097f0:    03 59             	r3 = h[r4 + 32] (u)			  ## l2cap.c:898:126
 1e097f2:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:898:21
 1e097f4:    02 a2             	r2 = sp + 32			  ## l2cap.c:898:21
 1e097f6:    2a 02             	[sp+8] = r2			  ## l2cap.c:898:21
 1e097f8:    42 70             	r2 = 4			  ## l2cap.c:898:21
 1e097fa:    1a 02             	[sp+4] = r2			  ## l2cap.c:898:21
 1e097fc:    42 04             	r2 = r1.b0 (u)			  ## l2cap.c:898:85
 1e097fe:    41 70             	r1 = 4			  ## l2cap.c:898:21
 1e09800:    1e f5 00 00       	[sp] = r14			  ## l2cap.c:898:21
 1e09804:    30 15             	call -1440 <l2cap_send_signaling_packet : 1e09266 >			  ## l2cap.c:898:21
 1e09806:    80 58             	r0 = h[r4 + 16] (u)			  ## l2cap.c:898:21
 1e09808:    cc 18             	goto 408 <.GJTIE641_0_0_+0x270 : 1e099a2 >			  ## l2cap.c:898:21
 1e0980a:    60 9e             	r0 = r7 + 6			  ## l2cap.c:811:49
 1e0980c:    31 72             	r1 = 35			  ## l2cap.c:811:17
 1e0980e:    02 70             	r2 = 0			  ## l2cap.c:811:17
 1e09810:    29 14             	call -1966 <check_l2cap_authentication_flag : 1e09064 >			  ## l2cap.c:811:17
 1e09812:    10 e2 03 10       	if (r0 != 33) goto 6 <.GJTIE641_0_0_+0xEA : 1e0981c >			  ## l2cap.c:811:17
 1e09816:    00 f7 08 90       	r0 = h[r9 + 8] (u)			  ## l2cap.c:812:17
 1e0981a:    cf 20             	if (r0 == 0) goto 414 <.GJTIE641_0_0_+0x288 : 1e099ba >			  ## l2cap.c:812:17
 1e0981c:    20 6e             	r0 = b[r7 + 2] (u)			  ## l2cap.c:819:48
 1e0981e:    50 e0 04 01       	if (r0 == 5) goto 520 <.GJTIE641_0_0_+0x2F8 : 1e09a2a >			  ## l2cap.c:819:48
 1e09822:    00 f6 00 b0       	r0 = [r11 + 0]			  ## l2cap.c:123:9
 1e09826:    03 f9 34 00       	r3 = b[r0 + 52] (u)			  ## l2cap.c:123:39
 1e0982a:    12 96             	r2 = r3 + 1			  ## l2cap.c:126:55
 1e0982c:    11 70             	r1 = 1			  ## l2cap.c:126:55
 1e0982e:    00 ff ff 30 01 00 	if (r3 == 255) goto 2 <.GJTIE641_0_0_+0x104 : 1e09836 >			  ## l2cap.c:126:55
 1e09834:    21 08             	r1 = r2			  ## l2cap.c:123:9
 1e09836:    11 f9 34 00       	b[r0 + 52] = r1
 1e0983a:    49 69             	b[r4 + 20] = r1			  ## l2cap.c:823:57
 1e0983c:    50 70             	r0 = 5			  ## l2cap.c:824:51
 1e0983e:    28 69             	b[r4 + 18] = r0			  ## l2cap.c:824:51
 1e09840:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:825:17
 1e09842:    42 04             	r2 = r1.b0 (u)			  ## l2cap.c:825:83
 1e09844:    a1 70             	r1 = 10			  ## l2cap.c:825:17
 1e09846:    23 70             	r3 = 2			  ## l2cap.c:825:17
 1e09848:    0e 15             	call -1508 <l2cap_send_signaling_packet : 1e09266 >			  ## l2cap.c:825:17
 1e0984a:    b7 18             	goto 366 <.GJTIE641_0_0_+0x288 : 1e099ba >			  ## l2cap.c:825:17
 1e0984c:    32 69             	r2 = b[r4 + 19] (u)			  ## l2cap.c:777:79
 1e0984e:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:777:13
 1e09850:    51 69             	r1 = b[r4 + 21] (u)			  ## l2cap.c:777:127
 1e09852:    1e f5 08 00       	[sp+8] = r14			  ## l2cap.c:777:13
 1e09856:    19 02             	[sp+4] = r1			  ## l2cap.c:777:13
 1e09858:    31 70             	r1 = 3			  ## l2cap.c:777:13
 1e0985a:    03 70             	r3 = 0			  ## l2cap.c:777:13
 1e0985c:    1e f5 00 00       	[sp] = r14			  ## l2cap.c:777:13
 1e09860:    02 15             	call -1532 <l2cap_send_signaling_packet : 1e09266 >			  ## l2cap.c:777:13
 1e09862:    50 69             	r0 = b[r4 + 21] (u)			  ## l2cap.c:778:44
 1e09864:    10 e0 53 10       	if (r0 != 1) goto 166 <.GJTIE641_0_0_+0x1DC : 1e0990e >			  ## l2cap.c:778:17
 1e09868:    f0 70             	r0 = 15			  ## l2cap.c:780:50
 1e0986a:    28 6e             	b[r7 + 2] = r0			  ## l2cap.c:780:50
 1e0986c:    a6 18             	goto 332 <.GJTIE641_0_0_+0x288 : 1e099ba >			  ## l2cap.c:780:50
 1e0986e:    1f f9 12 40       	b[r4 + 18] = r15			  ## l2cap.c:790:46
 1e09872:    80 58             	r0 = h[r4 + 16] (u)			  ## l2cap.c:646:97
 1e09874:    10 b1             	r0 |= 4			  ## l2cap.c:646:107
 1e09876:    88 58             	h[r4 + 16] = r0			  ## l2cap.c:646:42
 1e09878:    f3 58             	r3 = h[r4 + 30] (u)			  ## l2cap.c:805:121
 1e0987a:    32 69             	r2 = b[r4 + 19] (u)			  ## l2cap.c:805:79
 1e0987c:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:805:13
 1e0987e:    04 59             	r4 = h[r4 + 32] (u)			  ## l2cap.c:805:159
 1e09880:    1e f5 08 00       	[sp+8] = r14			  ## l2cap.c:805:13
 1e09884:    1e f5 04 00       	[sp+4] = r14			  ## l2cap.c:805:13
 1e09888:    31 70             	r1 = 3			  ## l2cap.c:805:13
 1e0988a:    14 18             	goto 40 <.GJTIE641_0_0_+0x182 : 1e098b4 >			  ## l2cap.c:805:13
 1e0988c:    00 f6 00 b0       	r0 = [r11 + 0]			  ## l2cap.c:123:9
 1e09890:    03 f9 34 00       	r3 = b[r0 + 52] (u)			  ## l2cap.c:123:39
 1e09894:    12 96             	r2 = r3 + 1			  ## l2cap.c:126:55
 1e09896:    11 70             	r1 = 1			  ## l2cap.c:126:55
 1e09898:    00 ff ff 30 01 00 	if (r3 == 255) goto 2 <.GJTIE641_0_0_+0x16E : 1e098a0 >			  ## l2cap.c:126:55
 1e0989e:    21 08             	r1 = r2			  ## l2cap.c:123:9
 1e098a0:    11 f9 34 00       	b[r0 + 52] = r1
 1e098a4:    49 69             	b[r4 + 20] = r1			  ## l2cap.c:916:53
 1e098a6:    1c f9 12 40       	b[r4 + 18] = r12			  ## l2cap.c:917:46
 1e098aa:    03 59             	r3 = h[r4 + 32] (u)			  ## l2cap.c:918:122
 1e098ac:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:918:13
 1e098ae:    f4 58             	r4 = h[r4 + 30] (u)			  ## l2cap.c:918:161
 1e098b0:    42 04             	r2 = r1.b0 (u)			  ## l2cap.c:918:81
 1e098b2:    61 70             	r1 = 6			  ## l2cap.c:918:13
 1e098b4:    0c 02             	[sp] = r4
 1e098b6:    d7 14             	call -1618 <l2cap_send_signaling_packet : 1e09266 >
 1e098b8:    80 18             	goto 256 <.GJTIE641_0_0_+0x288 : 1e099ba >
 1e098ba:    f3 58             	r3 = h[r4 + 30] (u)			  ## l2cap.c:910:124
 1e098bc:    32 69             	r2 = b[r4 + 19] (u)			  ## l2cap.c:910:82
 1e098be:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:910:13
 1e098c0:    07 59             	r7 = h[r4 + 32] (u)			  ## l2cap.c:910:162
 1e098c2:    71 70             	r1 = 7			  ## l2cap.c:910:13
 1e098c4:    0f 02             	[sp] = r7			  ## l2cap.c:910:13
 1e098c6:    cf 14             	call -1634 <l2cap_send_signaling_packet : 1e09266 >			  ## l2cap.c:910:13
 1e098c8:    40 08             	r0 = r4			  ## l2cap.c:911:13
 1e098ca:    7b 16             	call -778 <l2cap_finialize_channel_close : 1e095c2 >			  ## l2cap.c:911:13
 1e098cc:    76 18             	goto 236 <.GJTIE641_0_0_+0x288 : 1e099ba >			  ## l2cap.c:911:13
 1e098ce:    31 fd 08 09       	r1 = r0 & 4294967287			  ## l2cap.c:651:107
 1e098d2:    22 fd 01 0a       	r2 = r0 & 256			  ## l2cap.c:834:58
 1e098d6:    d3 d0             	r3 = r2 >> 3			  ## l2cap.c:834:21
 1e098d8:    b3 b2             	r3 ^= 32			  ## l2cap.c:834:21
 1e098da:    51 b6             	r1 |= r3			  ## l2cap.c:834:21
 1e098dc:    89 58             	h[r4 + 16] = r1			  ## l2cap.c:651:42
 1e098de:    f2 fd 40 d2       	r13 = r2 >> 8			  ## l2cap.c:834:21
 1e098e2:    29 f3 1d 10       	if ((r1 & 512) != 0) goto 58 <.GJTIE641_0_0_+0x1EE : 1e09920 >			  ## l2cap.c:834:21
 1e098e6:    26 f3 39 10       	if ((r1 & 64) != 0) goto 114 <.GJTIE641_0_0_+0x22A : 1e0995c >
 1e098ea:    10 04             	r0 = r0.b0 (s)			  ## l2cap.c:855:65
 1e098ec:    00 e0 52 b0       	ifs (r0 < 0) goto 164 <.GJTIE641_0_0_+0x262 : 1e09994 >			  ## l2cap.c:855:65
 1e098f0:    03 59             	r3 = h[r4 + 32] (u)			  ## l2cap.c:872:128
 1e098f2:    32 69             	r2 = b[r4 + 19] (u)			  ## l2cap.c:872:86
 1e098f4:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:872:21
 1e098f6:    1e f5 0c 00       	[sp+12] = r14			  ## l2cap.c:872:21
 1e098fa:    1e f5 08 00       	[sp+8] = r14			  ## l2cap.c:872:21
 1e098fe:    1e f5 04 00       	[sp+4] = r14			  ## l2cap.c:872:21
 1e09902:    51 70             	r1 = 5			  ## l2cap.c:872:21
 1e09904:    1d f5 00 00       	[sp] = r13			  ## l2cap.c:872:21
 1e09908:    ae 14             	call -1700 <l2cap_send_signaling_packet : 1e09266 >			  ## l2cap.c:872:21
 1e0990a:    81 58             	r1 = h[r4 + 16] (u)			  ## l2cap.c:872:21
 1e0990c:    43 18             	goto 134 <.GJTIE641_0_0_+0x262 : 1e09994 >			  ## l2cap.c:872:21
 1e0990e:    00 f6 00 b0       	r0 = [r11 + 0]			  ## l2cap.c:783:17
 1e09912:    80 80             	r0 += 8			  ## l2cap.c:783:17
 1e09914:    41 08             	r1 = r4			  ## l2cap.c:783:17
 1e09916:    bf f3 8a f3       	call -6380 <btstack_linked_list_remove : 1e0802e >			  ## l2cap.c:783:17
 1e0991a:    40 08             	r0 = r4			  ## l2cap.c:784:17
 1e0991c:    cc 15             	call -1128 <btstack_memory_l2cap_channel_free : 1e094b6 >			  ## l2cap.c:784:17
 1e0991e:    4d 18             	goto 154 <.GJTIE641_0_0_+0x288 : 1e099ba >			  ## l2cap.c:784:17
 1e09920:    00 f9 2f 40       	r0 = b[r4 + 47] (u)			  ## l2cap.c:841:78
 1e09924:    d0 f5 20 00       	b[sp+32] = r0			  ## l2cap.c:841:39
 1e09928:    20 70             	r0 = 2			  ## l2cap.c:842:39
 1e0992a:    d0 f5 21 00       	b[sp+33] = r0			  ## l2cap.c:842:39
 1e0992e:    a0 59             	r0 = h[r4 + 52] (u)			  ## l2cap.c:843:89
 1e09930:    d0 f5 22 00       	b[sp+34] = r0			  ## utils.c:160:19
 1e09934:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e09936:    d0 f5 23 00       	b[sp+35] = r0			  ## utils.c:161:19
 1e0993a:    03 59             	r3 = h[r4 + 32] (u)			  ## l2cap.c:844:128
 1e0993c:    32 69             	r2 = b[r4 + 19] (u)			  ## l2cap.c:844:86
 1e0993e:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:844:21
 1e09940:    01 a2             	r1 = sp + 32			  ## l2cap.c:844:21
 1e09942:    39 02             	[sp+12] = r1			  ## l2cap.c:844:21
 1e09944:    41 70             	r1 = 4			  ## l2cap.c:844:21
 1e09946:    29 02             	[sp+8] = r1			  ## l2cap.c:844:21
 1e09948:    18 f5 04 00       	[sp+4] = r8			  ## l2cap.c:844:21
 1e0994c:    51 70             	r1 = 5			  ## l2cap.c:844:21
 1e0994e:    1d f5 00 00       	[sp] = r13			  ## l2cap.c:844:21
 1e09952:    89 14             	call -1774 <l2cap_send_signaling_packet : 1e09266 >			  ## l2cap.c:844:21
 1e09954:    80 58             	r0 = h[r4 + 16] (u)			  ## l2cap.c:651:97
 1e09956:    31 fd 20 09       	r1 = r0 & 4294967263			  ## l2cap.c:651:107
 1e0995a:    1b 18             	goto 54 <.GJTIE641_0_0_+0x260 : 1e09992 >			  ## l2cap.c:651:107
 1e0995c:    da f5 20 00       	b[sp+32] = r10			  ## l2cap.c:850:39
 1e09960:    20 70             	r0 = 2			  ## l2cap.c:851:39
 1e09962:    d0 f5 21 00       	b[sp+33] = r0			  ## l2cap.c:851:39
 1e09966:    20 59             	r0 = h[r4 + 36] (u)			  ## l2cap.c:852:79
 1e09968:    d0 f5 22 00       	b[sp+34] = r0			  ## utils.c:160:19
 1e0996c:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e0996e:    d0 f5 23 00       	b[sp+35] = r0			  ## utils.c:161:19
 1e09972:    03 59             	r3 = h[r4 + 32] (u)			  ## l2cap.c:853:128
 1e09974:    32 69             	r2 = b[r4 + 19] (u)			  ## l2cap.c:853:86
 1e09976:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:853:21
 1e09978:    01 a2             	r1 = sp + 32			  ## l2cap.c:853:21
 1e0997a:    39 02             	[sp+12] = r1			  ## l2cap.c:853:21
 1e0997c:    41 70             	r1 = 4			  ## l2cap.c:853:21
 1e0997e:    29 02             	[sp+8] = r1			  ## l2cap.c:853:21
 1e09980:    1e f5 04 00       	[sp+4] = r14			  ## l2cap.c:853:21
 1e09984:    51 70             	r1 = 5			  ## l2cap.c:853:21
 1e09986:    1d f5 00 00       	[sp] = r13			  ## l2cap.c:853:21
 1e0998a:    6d 14             	call -1830 <l2cap_send_signaling_packet : 1e09266 >			  ## l2cap.c:853:21
 1e0998c:    80 58             	r0 = h[r4 + 16] (u)			  ## l2cap.c:651:97
 1e0998e:    31 fd 40 09       	r1 = r0 & 4294967231			  ## l2cap.c:651:107
 1e09992:    89 58             	h[r4 + 16] = r1
 1e09994:    0d fb 06 33       	r13 = 13062 <pvPortSwitch+0x14 : 3306 >
 1e09998:    c0 ff ff fe 00 00 	r0 = 65279 <boot_arg_list+0x2FF : feff >			  ## l2cap.c:651:107
 1e0999e:    50 b3             	r0 &= r1			  ## l2cap.c:651:107
 1e099a0:    88 58             	h[r4 + 16] = r0			  ## l2cap.c:651:42
 1e099a2:    20 fd 22 09       	r0 = r0 & 34			  ## l2cap.c:901:17
 1e099a6:    20 e2 08 10       	if (r0 != 34) goto 16 <.GJTIE641_0_0_+0x288 : 1e099ba >			  ## l2cap.c:901:17
 1e099aa:    80 70             	r0 = 8			  ## l2cap.c:902:50
 1e099ac:    28 69             	b[r4 + 18] = r0			  ## l2cap.c:902:50
 1e099ae:    01 70             	r1 = 0			  ## l2cap.c:903:17
 1e099b0:    40 08             	r0 = r4			  ## l2cap.c:903:17
 1e099b2:    a1 15             	call -1214 <l2cap_emit_channel_opened : 1e094f6 >			  ## l2cap.c:903:17
 1e099b4:    11 70             	r1 = 1			  ## l2cap.c:904:17
 1e099b6:    40 08             	r0 = r4			  ## l2cap.c:904:17
 1e099b8:    da 15             	call -1100 <l2cap_emit_credits : 1e0956e >			  ## l2cap.c:904:17
 1e099ba:    05 e0 a4 1e       	if (r5 != 0) goto -696 <l2cap_run+0x10E : 1e09706 >
 1e099be:    00 a1             	r0 = sp + 16
 1e099c0:    17 16             	call -978 <hci_connections_get_iterator : 1e095f0 >			  ## l2cap.c:931:9
 1e099c2:    bf f3 83 f1       	call -7418 <btstack_linked_list_iterator_has_next : 1e07ccc >			  ## l2cap.c:932:16
 1e099c6:    31 20             	if (r0 == 0) goto 98 <.GJTIE641_0_0_+0x2F8 : 1e09a2a >			  ## l2cap.c:932:16
 1e099c8:    05 70             	r5 = 0
 1e099ca:    00 a1             	r0 = sp + 16
 1e099cc:    bf f3 8c f1       	call -7400 <btstack_linked_list_iterator_next : 1e07ce8 >			  ## l2cap.c:936:71
 1e099d0:    04 08             	r4 = r0			  ## l2cap.c:936:71
 1e099d2:    30 48             	r0 = [r4 + 12]			  ## l2cap.c:938:29
 1e099d4:    10 e0 25 80       	if (r0 > 1) goto 74 <.GJTIE641_0_0_+0x2F0 : 1e09a22 >			  ## l2cap.c:938:29
 1e099d8:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:941:18
 1e099da:    ba 14             	call -1676 <hci_can_send_acl_packet_now : 1e09350 >			  ## l2cap.c:941:18
 1e099dc:    22 20             	if (r0 == 0) goto 68 <.GJTIE641_0_0_+0x2F0 : 1e09a22 >			  ## l2cap.c:941:18
 1e099de:    b1 48             	r1 = [r4 + 44]			  ## l2cap.c:944:33
 1e099e0:    40 fc 30 00       	r0 = r4 + 48			  ## l2cap.c:944:33
 1e099e4:    41 e0 10 00       	if (r1 == 4) goto 32 <.GJTIE641_0_0_+0x2D6 : 1e09a08 >			  ## l2cap.c:944:33
 1e099e8:    21 e0 14 00       	if (r1 == 2) goto 40 <.GJTIE641_0_0_+0x2E2 : 1e09a14 >
 1e099ec:    11 e0 19 10       	if (r1 != 1) goto 50 <.GJTIE641_0_0_+0x2F0 : 1e09a22 >
 1e099f0:    bd 48             	[r4 + 44] = r5			  ## l2cap.c:946:59
 1e099f2:    93 59             	r3 = h[r4 + 50] (u)			  ## l2cap.c:948:48
 1e099f4:    02 60             	r2 = b[r0 + 0] (u)			  ## l2cap.c:947:109
 1e099f6:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:947:17
 1e099f8:    a6 59             	r6 = h[r4 + 52] (u)			  ## l2cap.c:948:82
 1e099fa:    b1 59             	r1 = h[r4 + 54] (u)			  ## l2cap.c:948:116
 1e099fc:    c4 59             	r4 = h[r4 + 56] (u)			  ## l2cap.c:948:145
 1e099fe:    2c 02             	[sp+8] = r4			  ## l2cap.c:947:17
 1e09a00:    19 02             	[sp+4] = r1			  ## l2cap.c:947:17
 1e09a02:    21 71             	r1 = 18			  ## l2cap.c:947:17
 1e09a04:    0e 02             	[sp] = r6			  ## l2cap.c:947:17
 1e09a06:    0c 18             	goto 24 <.GJTIE641_0_0_+0x2EE : 1e09a20 >			  ## l2cap.c:947:17
 1e09a08:    bd 48             	[r4 + 44] = r5			  ## l2cap.c:955:59
 1e09a0a:    02 60             	r2 = b[r0 + 0] (u)			  ## l2cap.c:956:110
 1e09a0c:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:956:17
 1e09a0e:    31 71             	r1 = 19			  ## l2cap.c:956:17
 1e09a10:    13 70             	r3 = 1			  ## l2cap.c:956:17
 1e09a12:    06 18             	goto 12 <.GJTIE641_0_0_+0x2EE : 1e09a20 >			  ## l2cap.c:956:17
 1e09a14:    cb f4 03 49       	[r4 + 44] = 3			  ## l2cap.c:951:59
 1e09a18:    02 60             	r2 = b[r0 + 0] (u)			  ## l2cap.c:952:110
 1e09a1a:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:952:17
 1e09a1c:    31 71             	r1 = 19			  ## l2cap.c:952:17
 1e09a1e:    03 70             	r3 = 0			  ## l2cap.c:952:17
 1e09a20:    30 15             	call -1440 <l2cap_send_le_signaling_packet : 1e09482 >
 1e09a22:    00 a1             	r0 = sp + 16
 1e09a24:    bf f3 52 f1       	call -7516 <btstack_linked_list_iterator_has_next : 1e07ccc >			  ## l2cap.c:932:16
 1e09a28:    d0 31             	if (r0 != 0) goto -96 <.GJTIE641_0_0_+0x298 : 1e099ca >
 1e09a2a:    1a 0a             	sp += 52
 1e09a2c:    5f 01             	{pc, r15-r4} = [sp++]			  ## l2cap.c:965:1


l2cap_register_signaling_response:
 1e09a2e:    76 01             	[--sp] = {rets, r6-r4}			  ## l2cap.c:1419:0
 1e09a30:    c4 ff 98 1a 00 00 	r4 = 6808 <l2cap_stack : 1a98 >			  ## l2cap.c:1421:9
 1e09a36:    04 48             	r4 = [r4 + 0]			  ## l2cap.c:1421:9
 1e09a38:    95 48             	r5 = [r4 + 36]			  ## l2cap.c:1421:39
 1e09a3a:    25 e0 15 c0       	ifs (r5 > 2) goto 42 <l2cap_register_signaling_response+0x3A : 1e09a68 >			  ## l2cap.c:1421:39
 1e09a3e:    ed c0             	r5 = r5 << 3			  ## l2cap.c:1422:118
 1e09a40:    c6 98             	r6 = r4 + 12			  ## l2cap.c:1422:118
 1e09a42:    10 f8 00 65       	h[r6+r5] = r0			  ## l2cap.c:1422:125
 1e09a46:    90 48             	r0 = [r4 + 36]			  ## l2cap.c:1423:89
 1e09a48:    c0 c0             	r0 = r0 << 3			  ## l2cap.c:1423:118
 1e09a4a:    60 09             	r0 += r6			  ## l2cap.c:1423:118
 1e09a4c:    39 60             	b[r0 + 3] = r1			  ## l2cap.c:1423:123
 1e09a4e:    90 48             	r0 = [r4 + 36]			  ## l2cap.c:1424:89
 1e09a50:    c0 c0             	r0 = r0 << 3			  ## l2cap.c:1424:118
 1e09a52:    60 09             	r0 += r6			  ## l2cap.c:1424:118
 1e09a54:    2a 60             	b[r0 + 2] = r2			  ## l2cap.c:1424:125
 1e09a56:    90 48             	r0 = [r4 + 36]			  ## l2cap.c:1425:89
 1e09a58:    41 02             	r1 = [sp+16]			  ## l2cap.c:1425:89
 1e09a5a:    c2 c0             	r2 = r0 << 3			  ## l2cap.c:1425:118
 1e09a5c:    62 09             	r2 += r6			  ## l2cap.c:1425:118
 1e09a5e:    2b 54             	h[r2 + 4] = r3			  ## l2cap.c:1425:122
 1e09a60:    39 54             	h[r2 + 6] = r1			  ## l2cap.c:1426:123
 1e09a62:    10 80             	r0 += 1			  ## l2cap.c:1427:66
 1e09a64:    98 48             	[r4 + 36] = r0			  ## l2cap.c:1427:66
 1e09a66:    c8 15             	call -1136 <l2cap_run : 1e095f8 >			  ## l2cap.c:1428:9
 1e09a68:    56 01             	{pc, r6-r4} = [sp++]			  ## l2cap.c:1430:1


btstack_memory_l2cap_channel_get:
 1e09a6a:    41 70             	r1 = 4			  ## btstack_memory.c:129:0
 1e09a6c:    00 42             	r0 = [r1 + 0]			  ## btstack_memory.c:66:23
 1e09a6e:    03 20             	if (r0 == 0) goto 6 <btstack_memory_l2cap_channel_get+0xC : 1e09a76 >
 1e09a70:    02 40             	r2 = [r0 + 0]			  ## btstack_memory.c:72:31
 1e09a72:    0a 42             	[r1 + 0] = r2			  ## btstack_memory.c:72:23
 1e09a74:    20 00             	rts			  ## btstack_memory.c:130:5
 1e09a76:    00 70             	r0 = 0
 1e09a78:    20 00             	rts			  ## btstack_memory.c:130:5


btstack_linked_list_add:
 1e09a7a:    02 40             	r2 = [r0 + 0]			  ## btstack_linked_list.c:83:0
 1e09a7c:    05 24             	if (r2 == 0) goto 10 <btstack_linked_list_add+0xE : 1e09a88 >			  ## btstack_linked_list.c:83:0
 1e09a7e:    23 08             	r3 = r2			  ## btstack_linked_list.c:83:0
 1e09a80:    13 f2 04 00       	if (r3 == r1) goto 8 <btstack_linked_list_add+0x12 : 1e09a8c >			  ## btstack_linked_list.c:83:0
 1e09a84:    03 46             	r3 = [r3 + 0]			  ## btstack_linked_list.c:83:0
 1e09a86:    fc 37             	if (r3 != 0) goto -8 <btstack_linked_list_add+0x6 : 1e09a80 >			  ## btstack_linked_list.c:83:0
 1e09a88:    0a 42             	[r1 + 0] = r2			  ## btstack_linked_list.c:92:16
 1e09a8a:    09 40             	[r0 + 0] = r1			  ## btstack_linked_list.c:93:11
 1e09a8c:    20 00             	rts			  ## btstack_linked_list.c:94:1


l2cap_signaling_handler_channel:
 1e09a8e:    7a 01             	[--sp] = {rets, r10-r4}			  ## l2cap.c:1626:0
 1e09a90:    fe 0b             	sp += -4			  ## l2cap.c:1626:0
 1e09a92:    04 08             	r4 = r0			  ## l2cap.c:1626:0
 1e09a94:    00 62             	r0 = b[r1 + 0] (u)			  ## l2cap.c:1628:22
 1e09a96:    22 69             	r2 = b[r4 + 18] (u)			  ## l2cap.c:1628:22
 1e09a98:    60 e0 0e 10       	if (r0 != 6) goto 28 <l2cap_signaling_handler_channel+0x2A : 1e09ab8 >			  ## l2cap.c:1635:9
 1e09a9c:    d2 e0 0a 80       	if (r2 > 13) goto 20 <l2cap_signaling_handler_channel+0x26 : 1e09ab4 >
 1e09aa0:    10 70             	r0 = 1
 1e09aa2:    80 0c             	r0 <<= r2
 1e09aa4:    60 ff 0e 01 05 00 	if ((r0 & 9088) == 0) goto 10 <l2cap_signaling_handler_channel+0x26 : 1e09ab4 >
 1e09aaa:    10 62             	r0 = b[r1 + 1] (u)			  ## l2cap.c:1629:22
 1e09aac:    38 69             	b[r4 + 19] = r0			  ## l2cap.c:1413:46
 1e09aae:    e0 70             	r0 = 14			  ## l2cap.c:1414:38
 1e09ab0:    28 69             	b[r4 + 18] = r0			  ## l2cap.c:1414:38
 1e09ab2:    a2 15             	call -1212 <l2cap_run : 1e095f8 >			  ## l2cap.c:1415:5
 1e09ab4:    02 0a             	sp += 4
 1e09ab6:    5a 01             	{pc, r10-r4} = [sp++]			  ## l2cap.c:1769:1
 1e09ab8:    b2 8f             	r2 += -5			  ## l2cap.c:1651:5
 1e09aba:    42 e0 fb 8f       	if (r2 > 4) goto -10 <l2cap_signaling_handler_channel+0x26 : 1e09ab4 >			  ## l2cap.c:1651:5
 1e09abe:    53 c0             	r3 = r2 << 1
 1e09ac0:    c5 ff 98 1a 00 00 	r5 = 6808 <l2cap_stack : 1a98 >
 1e09ac6:    48 fc 24 00       	r8 = r4 + 36
 1e09aca:    b3 00             	tbh [r3]


.GJTIL645_0_0_:
 1e09acc:    06 00     < 6 : 0x6 >
 1e09ace:    31 00     < 49 : 0x31 >
 1e09ad0:    47 00     < 71 : 0x47 >
 1e09ad2:    05 00     < 5 : 0x5 >
 1e09ad4:    9e 00     < 158 : 0x9E >
 1e09ad6:    ee 1f             	goto -36 <l2cap_signaling_handler_channel+0x26 : 1e09ab4 >
 1e09ad8:    b0 e0 ec 1f       	if (r0 != 11) goto -40 <l2cap_signaling_handler_channel+0x26 : 1e09ab4 >
 1e09adc:    60 70             	r0 = 6			  ## l2cap.c:1658:50
 1e09ade:    28 69             	b[r4 + 18] = r0			  ## l2cap.c:1658:50
 1e09ae0:    30 62             	r0 = b[r1 + 3] (u)			  ## l2cap.c:1591:23
 1e09ae2:    22 62             	r2 = b[r1 + 2] (u)			  ## l2cap.c:1591:23
 1e09ae4:    d8 fd 40 20       	r2 <= insert(r0, p:8, l:24)			  ## l2cap.c:1591:23
 1e09ae8:    40 94             	r0 = r2 + 4			  ## l2cap.c:1591:21
 1e09aea:    22 04             	r2 = r0.l (u)			  ## l2cap.c:1593:18
 1e09aec:    52 e0 16 30       	if (r2 < 5) goto 44 <.GJTIE645_0_0_+0x46 : 1e09b1c >			  ## l2cap.c:1593:18
 1e09af0:    40 70             	r0 = 4
 1e09af2:    43 70             	r3 = 4
 1e09af4:    25 96             	r5 = r3 + 2			  ## l2cap.c:1595:13
 1e09af6:    65 05             	r5 = r5.l (u)			  ## l2cap.c:1596:24
 1e09af8:    46 b3             	r6 = r1 + r5			  ## l2cap.c:1596:24
 1e09afa:    17 6c             	r7 = b[r6 + 1] (u)			  ## l2cap.c:1596:24
 1e09afc:    06 6c             	r6 = b[r6 + 0] (u)			  ## l2cap.c:1596:24
 1e09afe:    c8 fd 40 67       	r6 <= insert(r7, p:8, l:8)			  ## l2cap.c:1596:24
 1e09b02:    07 3c             	if (r6 != 0) goto 14 <.GJTIE645_0_0_+0x3C : 1e09b12 >			  ## l2cap.c:1596:24
 1e09b04:    10 09             	r0 += r1			  ## l2cap.c:1594:24
 1e09b06:    16 60             	r6 = b[r0 + 1] (u)			  ## l2cap.c:1594:24
 1e09b08:    00 60             	r0 = b[r0 + 0] (u)			  ## l2cap.c:1594:24
 1e09b0a:    c8 fd 40 06       	r0 <= insert(r6, p:8, l:8)			  ## l2cap.c:1594:24
 1e09b0e:    20 e0 a1 00       	if (r0 == 2) goto 322 <.GJTIE645_0_0_+0x17E : 1e09c54 >			  ## l2cap.c:1594:24
 1e09b12:    40 96             	r0 = r3 + 4			  ## l2cap.c:1593:12
 1e09b14:    23 9a             	r3 = r5 + 2			  ## l2cap.c:1597:13
 1e09b16:    20 04             	r0 = r0.l (u)			  ## l2cap.c:1593:12
 1e09b18:    20 f2 ec 3f       	if (r0 < r2) goto -40 <.GJTIE645_0_0_+0x1E : 1e09af4 >			  ## l2cap.c:1593:12
 1e09b1c:    e3 58             	r3 = h[r4 + 28] (u)			  ## l2cap.c:1660:123
 1e09b1e:    42 69             	r2 = b[r4 + 20] (u)			  ## l2cap.c:1660:82
 1e09b20:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:1660:17
 1e09b22:    f4 58             	r4 = h[r4 + 30] (u)			  ## l2cap.c:1660:155
 1e09b24:    21 70             	r1 = 2			  ## l2cap.c:1660:17
 1e09b26:    0c 02             	[sp] = r4			  ## l2cap.c:1660:17
 1e09b28:    bf f3 9d fb       	call -2246 <l2cap_send_signaling_packet : 1e09266 >			  ## l2cap.c:1660:17
 1e09b2c:    c3 1f             	goto -122 <l2cap_signaling_handler_channel+0x26 : 1e09ab4 >			  ## l2cap.c:1660:17
 1e09b2e:    30 e0 c1 1f       	if (r0 != 3) goto -126 <l2cap_signaling_handler_channel+0x26 : 1e09ab4 >
 1e09b32:    80 62             	r0 = b[r1 + 8] (u)			  ## l2cap.c:1671:22
 1e09b34:    92 62             	r2 = b[r1 + 9] (u)			  ## l2cap.c:1671:22
 1e09b36:    03 08             	r3 = r0			  ## l2cap.c:1671:22
 1e09b38:    d8 fd 40 32       	r3 <= insert(r2, p:8, l:24)			  ## l2cap.c:1671:22
 1e09b3c:    e2 04             	r2 = r3.l (u)			  ## l2cap.c:1671:22
 1e09b3e:    12 e0 b9 0f       	if (r2 == 1) goto -142 <l2cap_signaling_handler_channel+0x26 : 1e09ab4 >			  ## l2cap.c:1671:22
 1e09b42:    72 34             	if (r2 != 0) goto 228 <.GJTIE645_0_0_+0x152 : 1e09c28 >
 1e09b44:    50 62             	r0 = b[r1 + 5] (u)			  ## l2cap.c:1677:57
 1e09b46:    41 62             	r1 = b[r1 + 4] (u)			  ## l2cap.c:1677:57
 1e09b48:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## l2cap.c:1677:57
 1e09b4c:    09 59             	h[r4 + 32] = r1			  ## l2cap.c:1677:55
 1e09b4e:    70 70             	r0 = 7			  ## l2cap.c:1678:50
 1e09b50:    28 69             	b[r4 + 18] = r0			  ## l2cap.c:1678:50
 1e09b52:    80 58             	r0 = h[r4 + 16] (u)			  ## l2cap.c:646:97
 1e09b54:    10 b1             	r0 |= 4			  ## l2cap.c:646:107
 1e09b56:    88 58             	h[r4 + 16] = r0			  ## l2cap.c:646:42
 1e09b58:    ad 1f             	goto -166 <l2cap_signaling_handler_channel+0x26 : 1e09ab4 >			  ## l2cap.c:646:42
 1e09b5a:    50 e0 5a 00       	if (r0 == 5) goto 180 <.GJTIE645_0_0_+0x13C : 1e09c12 >			  ## l2cap.c:1712:9
 1e09b5e:    40 e0 98 10       	if (r0 != 4) goto 304 <.GJTIE645_0_0_+0x1BC : 1e09c92 >
 1e09b62:    80 58             	r0 = h[r4 + 16] (u)			  ## l2cap.c:646:97
 1e09b64:    0a fd 08 09       	r10 = r0 | 8			  ## l2cap.c:646:107
 1e09b68:    1a f7 10 40       	h[r4 + 16] = r10			  ## l2cap.c:646:42
 1e09b6c:    63 62             	r3 = b[r1 + 6] (u)			  ## l2cap.c:1529:17
 1e09b6e:    15 62             	r5 = b[r1 + 1] (u)			  ## l2cap.c:1530:48
 1e09b70:    3d 69             	b[r4 + 19] = r5			  ## l2cap.c:1530:46
 1e09b72:    00 f3 06 30       	if ((r3 & 1) == 0) goto 12 <.GJTIE645_0_0_+0xAC : 1e09b82 >			  ## l2cap.c:1530:46
 1e09b76:    02 fb 08 01       	r2 = 264 <DRIVER_RAM_TOTAL+0x16 : 108 >			  ## l2cap.c:646:107
 1e09b7a:    e0 fd 20 a0       	r10 = r0 | r2			  ## l2cap.c:646:107
 1e09b7e:    1a f7 10 40       	h[r4 + 16] = r10			  ## l2cap.c:646:42
 1e09b82:    30 62             	r0 = b[r1 + 3] (u)			  ## l2cap.c:1539:27
 1e09b84:    23 62             	r3 = b[r1 + 2] (u)			  ## l2cap.c:1539:27
 1e09b86:    d8 fd 40 30       	r3 <= insert(r0, p:8, l:24)			  ## l2cap.c:1539:27
 1e09b8a:    40 96             	r0 = r3 + 4			  ## l2cap.c:1539:25
 1e09b8c:    29 04             	r9 = r0.l (u)			  ## l2cap.c:1541:22
 1e09b8e:    99 e0 36 30       	if (r9 < 9) goto 108 <.GJTIE645_0_0_+0x128 : 1e09bfe >			  ## l2cap.c:1541:22
 1e09b92:    80 70             	r0 = 8
 1e09b94:    86 70             	r6 = 8
 1e09b96:    00 fa 00 10       	r0 = b[r1+r0] (u)			  ## l2cap.c:1542:30
 1e09b9a:    13 9c             	r3 = r6 + 1			  ## l2cap.c:1546:16
 1e09b9c:    e3 04             	r3 = r3.l (u)			  ## l2cap.c:1547:22
 1e09b9e:    05 fa 00 13       	r5 = b[r1+r3] (u)			  ## l2cap.c:1547:22
 1e09ba2:    37 fd 80 09       	r7 = r0 & 4294967167			  ## l2cap.c:1543:43
 1e09ba6:    10 04             	r0 = r0.b0 (s)			  ## l2cap.c:1542:30
 1e09ba8:    26 80             	r6 += 2			  ## l2cap.c:1547:33
 1e09baa:    17 e0 0c 10       	if (r7 != 1) goto 24 <.GJTIE645_0_0_+0xF0 : 1e09bc6 >			  ## l2cap.c:1547:33
 1e09bae:    25 e0 0a 10       	if (r5 != 2) goto 20 <.GJTIE645_0_0_+0xF0 : 1e09bc6 >
 1e09bb2:    a3 05             	r3 = r6.l (u)			  ## l2cap.c:1550:57
 1e09bb4:    13 09             	r3 += r1			  ## l2cap.c:1550:57
 1e09bb6:    12 66             	r2 = b[r3 + 1] (u)			  ## l2cap.c:1550:57
 1e09bb8:    03 66             	r3 = b[r3 + 0] (u)			  ## l2cap.c:1550:57
 1e09bba:    d8 fd 40 32       	r3 <= insert(r2, p:8, l:24)			  ## l2cap.c:1550:57
 1e09bbe:    2b 59             	h[r4 + 36] = r3			  ## l2cap.c:1550:55
 1e09bc0:    1a b3             	r10 |= 64			  ## l2cap.c:646:107
 1e09bc2:    1a f7 10 40       	h[r4 + 16] = r10			  ## l2cap.c:646:42
 1e09bc6:    73 fc ff ff       	r3 = r7 + -1
 1e09bca:    00 e0 0e b0       	ifs (r0 < 0) goto 28 <.GJTIE645_0_0_+0x114 : 1e09bea >			  ## l2cap.c:1573:34
 1e09bce:    c0 04             	r0 = r3.b0 (u)
 1e09bd0:    60 e0 11 30       	if (r0 < 6) goto 34 <.GJTIE645_0_0_+0x120 : 1e09bf6 >
 1e09bd4:    17 f9 0b 80       	b[r8 + 11] = r7			  ## l2cap.c:1575:64
 1e09bd8:    a0 05             	r0 = r6.l (u)			  ## l2cap.c:1576:72
 1e09bda:    10 09             	r0 += r1			  ## l2cap.c:1576:72
 1e09bdc:    12 60             	r2 = b[r0 + 1] (u)			  ## l2cap.c:1576:72
 1e09bde:    00 60             	r0 = b[r0 + 0] (u)			  ## l2cap.c:1576:72
 1e09be0:    d8 fd 40 02       	r0 <= insert(r2, p:8, l:24)			  ## l2cap.c:1576:72
 1e09be4:    a8 59             	h[r4 + 52] = r0			  ## l2cap.c:1576:70
 1e09be6:    9a b4             	r10 |= 512			  ## l2cap.c:646:107
 1e09be8:    04 18             	goto 8 <.GJTIE645_0_0_+0x11C : 1e09bf2 >			  ## l2cap.c:646:107
 1e09bea:    c0 04             	r0 = r3.b0 (u)
 1e09bec:    60 e0 03 30       	if (r0 < 6) goto 6 <.GJTIE645_0_0_+0x120 : 1e09bf6 >
 1e09bf0:    1a b4             	r10 |= 256			  ## l2cap.c:646:107
 1e09bf2:    1a f7 10 40       	h[r4 + 16] = r10
 1e09bf6:    56 09             	r6 += r5			  ## l2cap.c:1583:17
 1e09bf8:    a0 05             	r0 = r6.l (u)			  ## l2cap.c:1541:16
 1e09bfa:    90 f2 cc 3f       	if (r0 < r9) goto -104 <.GJTIE645_0_0_+0xC0 : 1e09b96 >			  ## l2cap.c:1541:16
 1e09bfe:    28 f3 48 a0       	if ((r10 & 256) != 0) goto 144 <.GJTIE645_0_0_+0x1BC : 1e09c92 >
 1e09c02:    00 fd 01 a9       	r0 = r10 | 1			  ## l2cap.c:646:107
 1e09c06:    44 18             	goto 136 <.GJTIE645_0_0_+0x1BA : 1e09c90 >			  ## l2cap.c:646:107
 1e09c08:    70 e0 54 1f       	if (r0 != 7) goto -344 <l2cap_signaling_handler_channel+0x26 : 1e09ab4 >
 1e09c0c:    40 08             	r0 = r4			  ## l2cap.c:1750:13
 1e09c0e:    d9 14             	call -1614 <l2cap_finialize_channel_close : 1e095c2 >			  ## l2cap.c:1750:13
 1e09c10:    51 1f             	goto -350 <l2cap_signaling_handler_channel+0x26 : 1e09ab4 >
 1e09c12:    90 62             	r0 = b[r1 + 9] (u)			  ## l2cap.c:1724:22
 1e09c14:    81 62             	r1 = b[r1 + 8] (u)			  ## l2cap.c:1724:22
 1e09c16:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## l2cap.c:1724:22
 1e09c1a:    60 04             	r0 = r1.l (u)			  ## l2cap.c:1724:22
 1e09c1c:    10 e0 12 00       	if (r0 == 1) goto 36 <.GJTIE645_0_0_+0x16E : 1e09c44 >			  ## l2cap.c:1725:17
 1e09c20:    16 30             	if (r0 != 0) goto 44 <.GJTIE645_0_0_+0x178 : 1e09c4e >
 1e09c22:    80 58             	r0 = h[r4 + 16] (u)			  ## l2cap.c:646:97
 1e09c24:    90 b0             	r0 |= 2			  ## l2cap.c:646:107
 1e09c26:    34 18             	goto 104 <.GJTIE645_0_0_+0x1BA : 1e09c90 >			  ## l2cap.c:646:107
 1e09c28:    11 70             	r1 = 1			  ## l2cap.c:1688:50
 1e09c2a:    29 69             	b[r4 + 18] = r1			  ## l2cap.c:1688:50
 1e09c2c:    30 86             	r0 += 99			  ## l2cap.c:1691:96
 1e09c2e:    01 04             	r1 = r0.b0 (u)			  ## l2cap.c:1691:17
 1e09c30:    40 08             	r0 = r4			  ## l2cap.c:1691:17
 1e09c32:    61 14             	call -1854 <l2cap_emit_channel_opened : 1e094f6 >			  ## l2cap.c:1691:17
 1e09c34:    00 4a             	r0 = [r5 + 0]			  ## l2cap.c:1699:17
 1e09c36:    80 80             	r0 += 8			  ## l2cap.c:1699:17
 1e09c38:    41 08             	r1 = r4			  ## l2cap.c:1699:17
 1e09c3a:    bf f3 f8 f1       	call -7184 <btstack_linked_list_remove : 1e0802e >			  ## l2cap.c:1699:17
 1e09c3e:    40 08             	r0 = r4			  ## l2cap.c:1700:17
 1e09c40:    3a 14             	call -1932 <btstack_memory_l2cap_channel_free : 1e094b6 >			  ## l2cap.c:1700:17
 1e09c42:    38 1f             	goto -400 <l2cap_signaling_handler_channel+0x26 : 1e09ab4 >			  ## l2cap.c:1700:17
 1e09c44:    00 4a             	r0 = [r5 + 0]			  ## l2cap.c:1727:40
 1e09c46:    00 f9 28 00       	r0 = b[r0 + 40] (u)			  ## l2cap.c:1727:24
 1e09c4a:    24 f3 18 00       	if ((r0 & 16) != 0) goto 48 <.GJTIE645_0_0_+0x1A8 : 1e09c7e >			  ## l2cap.c:1727:24
 1e09c4e:    d0 70             	r0 = 13			  ## l2cap.c:1733:50
 1e09c50:    28 69             	b[r4 + 18] = r0			  ## l2cap.c:1733:50
 1e09c52:    1f 18             	goto 62 <.GJTIE645_0_0_+0x1BC : 1e09c92 >			  ## l2cap.c:1733:50
 1e09c54:    40 96             	r0 = r3 + 4			  ## l2cap.c:1599:66
 1e09c56:    20 04             	r0 = r0.l (u)			  ## l2cap.c:1599:66
 1e09c58:    10 09             	r0 += r1			  ## l2cap.c:1599:66
 1e09c5a:    01 60             	r1 = b[r0 + 0] (u)			  ## l2cap.c:1599:66
 1e09c5c:    12 60             	r2 = b[r0 + 1] (u)			  ## l2cap.c:1599:66
 1e09c5e:    23 60             	r3 = b[r0 + 2] (u)			  ## l2cap.c:1599:66
 1e09c60:    30 60             	r0 = b[r0 + 3] (u)			  ## l2cap.c:1599:66
 1e09c62:    15 08             	r5 = r1			  ## l2cap.c:1599:66
 1e09c64:    c8 fd 40 52       	r5 <= insert(r2, p:8, l:8)			  ## l2cap.c:1599:66
 1e09c68:    c8 fd 80 53       	r5 <= insert(r3, p:16, l:8)			  ## l2cap.c:1599:66
 1e09c6c:    c8 fd c0 50       	r5 <= insert(r0, p:24, l:8)			  ## l2cap.c:1599:66
 1e09c70:    ad 48             	[r4 + 40] = r5			  ## l2cap.c:1599:64
 1e09c72:    24 f3 53 1f       	if ((r1 & 16) != 0) goto -346 <.GJTIE645_0_0_+0x46 : 1e09b1c >			  ## l2cap.c:1599:64
 1e09c76:    00 70             	r0 = 0			  ## l2cap.c:1603:57
 1e09c78:    10 f9 02 80       	b[r8 + 2] = r0			  ## l2cap.c:1603:57
 1e09c7c:    4f 1f             	goto -354 <.GJTIE645_0_0_+0x46 : 1e09b1c >			  ## l2cap.c:1603:57
 1e09c7e:    80 58             	r0 = h[r4 + 16] (u)			  ## l2cap.c:651:97
 1e09c80:    01 70             	r1 = 0			  ## l2cap.c:1729:57
 1e09c82:    11 f9 02 80       	b[r8 + 2] = r1			  ## l2cap.c:1729:57
 1e09c86:    71 70             	r1 = 7			  ## l2cap.c:1730:50
 1e09c88:    29 69             	b[r4 + 18] = r1			  ## l2cap.c:1730:50
 1e09c8a:    30 fd 14 09       	r0 = r0 & 4294967275			  ## l2cap.c:651:107
 1e09c8e:    10 b1             	r0 |= 4			  ## l2cap.c:646:107
 1e09c90:    88 58             	h[r4 + 16] = r0
 1e09c92:    80 58             	r0 = h[r4 + 16] (u)			  ## l2cap.c:1615:37
 1e09c94:    20 fd 22 09       	r0 = r0 & 34			  ## l2cap.c:1739:13
 1e09c98:    20 e2 0c 1f       	if (r0 != 34) goto -488 <l2cap_signaling_handler_channel+0x26 : 1e09ab4 >			  ## l2cap.c:1739:13
 1e09c9c:    80 70             	r0 = 8			  ## l2cap.c:1741:46
 1e09c9e:    28 69             	b[r4 + 18] = r0			  ## l2cap.c:1741:46
 1e09ca0:    01 70             	r1 = 0			  ## l2cap.c:1742:13
 1e09ca2:    40 08             	r0 = r4			  ## l2cap.c:1742:13
 1e09ca4:    28 14             	call -1968 <l2cap_emit_channel_opened : 1e094f6 >			  ## l2cap.c:1742:13
 1e09ca6:    11 70             	r1 = 1			  ## l2cap.c:1743:13
 1e09ca8:    40 08             	r0 = r4			  ## l2cap.c:1743:13
 1e09caa:    61 14             	call -1854 <l2cap_emit_credits : 1e0956e >			  ## l2cap.c:1743:13
 1e09cac:    03 1f             	goto -506 <l2cap_signaling_handler_channel+0x26 : 1e09ab4 >			  ## l2cap.c:1743:13


l2cap_get_channel_for_local_cid:
 1e09cae:    75 01             	[--sp] = {rets, r5, r4}			  ## l2cap.c:465:0
 1e09cb0:    05 08             	r5 = r0			  ## l2cap.c:465:0
 1e09cb2:    97 f3 73 e8       	call 3133670 <local_irq_disable : 106d9c >			  ## l2cap.c:468:5
 1e09cb6:    c0 ff 98 1a 00 00 	r0 = 6808 <l2cap_stack : 1a98 >			  ## l2cap.c:469:33
 1e09cbc:    00 40             	r0 = [r0 + 0]			  ## l2cap.c:469:33
 1e09cbe:    24 40             	r4 = [r0 + 8]			  ## l2cap.c:469:33
 1e09cc0:    05 28             	if (r4 == 0) goto 10 <l2cap_get_channel_for_local_cid+0x1E : 1e09ccc >
 1e09cc2:    f0 58             	r0 = h[r4 + 30] (u)			  ## l2cap.c:471:40
 1e09cc4:    50 f2 06 00       	if (r0 == r5) goto 12 <l2cap_get_channel_for_local_cid+0x26 : 1e09cd4 >			  ## l2cap.c:471:40
 1e09cc8:    04 48             	r4 = [r4 + 0]
 1e09cca:    fb 39             	if (r4 != 0) goto -10 <l2cap_get_channel_for_local_cid+0x14 : 1e09cc2 >
 1e09ccc:    97 f3 64 e8       	call 3133640 <local_irq_enable : 106d98 >			  ## l2cap.c:477:5
 1e09cd0:    04 70             	r4 = 0			  ## l2cap.c:477:5
 1e09cd2:    02 18             	goto 4 <l2cap_get_channel_for_local_cid+0x2A : 1e09cd8 >
 1e09cd4:    97 f3 60 e8       	call 3133632 <local_irq_enable : 106d98 >			  ## l2cap.c:472:13
 1e09cd8:    40 08             	r0 = r4			  ## l2cap.c:479:1
 1e09cda:    55 01             	{pc, r5, r4} = [sp++]			  ## l2cap.c:479:1


l2cap_packet_handler:
 1e09cdc:    7f 01             	[--sp] = {rets, r15-r4}			  ## l2cap.c:2067:0
 1e09cde:    e2 0b             	sp += -60			  ## l2cap.c:2067:0
 1e09ce0:    29 08             	r9 = r2			  ## l2cap.c:2067:0
 1e09ce2:    1f 08             	r15 = r1			  ## l2cap.c:2067:0
 1e09ce4:    ca ff 98 1a 00 00 	r10 = 6808 <l2cap_stack : 1a98 >			  ## l2cap.c:2067:0
 1e09cea:    20 e0 28 00       	if (r0 == 2) goto 80 <.GJTIE648_1_1_+0x1C : 1e09d3e >			  ## l2cap.c:2068:5
 1e09cee:    40 e0 a9 12       	if (r0 != 4) goto 1362 <.GJTIE648_0_0_+0x4CA : 1e0a244 >
 1e09cf2:    00 62             	r0 = b[r1 + 0] (u)
 1e09cf4:    01 fc fd ff       	r1 = r0 + -3			  ## l2cap.c:1220:5
 1e09cf8:    01 e1 4f 81       	if (r1 > 16) goto 670 <.GJTIE648_0_0_+0x220 : 1e09f9a >
 1e09cfc:    48 c0             	r0 = r1 << 1
 1e09cfe:    b0 00             	tbh [r0]


.GJTIL648_1_1_:
 1e09d00:    c4 01     < 452 : 0x1C4 >
 1e09d02:    8a 02     < 650 : 0x28A >
 1e09d04:    0c 02     < 524 : 0x20C >
 1e09d06:    11 00     < 17 : 0x11 >
 1e09d08:    8a 02     < 650 : 0x28A >
 1e09d0a:    11 00     < 17 : 0x11 >
 1e09d0c:    8a 02     < 650 : 0x28A >
 1e09d0e:    8a 02     < 650 : 0x28A >
 1e09d10:    8a 02     < 650 : 0x28A >
 1e09d12:    8a 02     < 650 : 0x28A >
 1e09d14:    8a 02     < 650 : 0x28A >
 1e09d16:    88 02     < 648 : 0x288 >
 1e09d18:    88 02     < 648 : 0x288 >
 1e09d1a:    8a 02     < 650 : 0x28A >
 1e09d1c:    8a 02     < 650 : 0x28A >
 1e09d1e:    8a 02     < 650 : 0x28A >
 1e09d20:    62 02     < 610 : 0x262 >
 1e09d22:    02 f9 04 f0       	r2 = b[r15 + 4] (u)
 1e09d26:    00 f9 03 f0       	r0 = b[r15 + 3] (u)
 1e09d2a:    01 f9 02 f0       	r1 = b[r15 + 2] (u)
 1e09d2e:    d8 fd 40 02       	r0 <= insert(r2, p:8, l:24)
 1e09d32:    20 04             	r0 = r0.l (u)
 1e09d34:    01 e0 63 02       	if (r1 == 0) goto 1222 <.GJTIE648_0_0_+0x484 : 1e0a1fe >
 1e09d38:    bf f3 f3 f9       	call -3098 <hci_disconnect_cmd : 1e09122 >
 1e09d3c:    69 1a             	goto 1234 <.GJTIE648_0_0_+0x496 : 1e0a210 >
 1e09d3e:    70 62             	r0 = b[r1 + 7] (u)			  ## l2cap.c:1997:22
 1e09d40:    61 62             	r1 = b[r1 + 6] (u)			  ## l2cap.c:1997:22
 1e09d42:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## l2cap.c:1997:22
 1e09d46:    60 04             	r0 = r1.l (u)
 1e09d48:    01 fc ff ff       	r1 = r0 + -1			  ## l2cap.c:2004:5
 1e09d4c:    51 e0 45 81       	if (r1 > 5) goto 650 <.GJTIE648_0_0_+0x260 : 1e09fda >			  ## l2cap.c:2004:5
 1e09d50:    03 f9 01 f0       	r3 = b[r15 + 1] (u)			  ## l2cap.c:1998:31
 1e09d54:    02 f9 00 f0       	r2 = b[r15 + 0] (u)			  ## l2cap.c:1998:31
 1e09d58:    1b c2             	r3 = r3 << 8			  ## l2cap.c:1998:31
 1e09d5a:    23 fd 0f 3a       	r3 = r3 & 3840			  ## l2cap.c:1998:31
 1e09d5e:    e0 fd 20 43       	r4 = r3 | r2			  ## l2cap.c:1998:31
 1e09d62:    4c 02             	[sp+16] = r4			  ## l2cap.c:1998:31
 1e09d64:    4d c0             	r5 = r1 << 1			  ## l2cap.c:1998:31
 1e09d66:    c4 ff a8 1a 00 00 	r4 = 6824 <l2cap_fixed_channels : 1aa8 >			  ## l2cap.c:1998:31
 1e09d6c:    b5 00             	tbh [r5]			  ## l2cap.c:1998:31


.GJTIL648_0_0_:
 1e09d6e:    06 00     < 6 : 0x6 >
 1e09d70:    36 01     < 310 : 0x136 >
 1e09d72:    36 01     < 310 : 0x136 >
 1e09d74:    42 01     < 322 : 0x142 >
 1e09d76:    4f 01     < 335 : 0x14F >
 1e09d78:    81 01     < 385 : 0x181 >
 1e09d7a:    99 e0 61 32       	if (r9 < 9) goto 1218 <.GJTIE648_0_0_+0x4C6 : 1e0a240 >
 1e09d7e:    c0 a2             	r0 = sp + 44
 1e09d80:    20 80             	r0 += 2
 1e09d82:    28 02             	[sp+8] = r0
 1e09d84:    84 70             	r4 = 8
 1e09d86:    0e 70             	r14 = 0
 1e09d88:    40 02             	r0 = [sp+16]
 1e09d8a:    27 04             	r7 = r0.l (u)
 1e09d8c:    c8 ff 48 1b 00 00 	r8 = 6984 <__user_info+0x88 : 1b48 >
 1e09d92:    e9 18             	goto 466 <.GJTIE648_0_0_+0x1EC : 1e09f66 >
 1e09d94:    a1 e0 37 00       	if (r1 == 10) goto 110 <.GJTIE648_0_0_+0x8C : 1e09e06 >			  ## l2cap.c:1787:5
 1e09d98:    21 e0 3e 10       	if (r1 != 2) goto 124 <.GJTIE648_0_0_+0x9E : 1e09e18 >
 1e09d9c:    60 6c             	r0 = b[r6 + 6] (u)			  ## l2cap.c:1790:26
 1e09d9e:    71 6c             	r1 = b[r6 + 7] (u)			  ## l2cap.c:1790:26
 1e09da0:    52 6c             	r2 = b[r6 + 5] (u)			  ## l2cap.c:1789:26
 1e09da2:    0a f9 04 60       	r10 = b[r6 + 4] (u)			  ## l2cap.c:1789:26
 1e09da6:    0b c2             	r3 = r1 << 8			  ## l2cap.c:1790:26
 1e09da8:    f0 fd 40 b2       	r11 = r2 << 8			  ## l2cap.c:1789:26
 1e09dac:    81 08             	r1 = r8			  ## l2cap.c:1789:26
 1e09dae:    32 42             	r2 = [r1 + 12]			  ## avctp_user.c:2941:19
 1e09db0:    1d f3 02 20       	if ((r2 & 536870912) == 0) goto 4 <.GJTIE648_0_0_+0x3E : 1e09db8 >			  ## avctp_user.c:2941:19
 1e09db4:    1e f9 11 10       	b[r1 + 17] = r14			  ## avctp_user.c:2942:29
 1e09db8:    81 81             	r1 += 24			  ## avctp_user.c:2940:5
 1e09dba:    82 fc 18 00       	r2 = r8 + 24			  ## avctp_user.c:2940:5
 1e09dbe:    21 f2 f6 3f       	if (r1 < r2) goto -20 <.GJTIE648_0_0_+0x34 : 1e09dae >			  ## avctp_user.c:2940:5
 1e09dc2:    c1 ff 98 1a 00 00 	r1 = 6808 <l2cap_stack : 1a98 >			  ## l2cap.c:2275:33
 1e09dc8:    02 42             	r2 = [r1 + 0]			  ## l2cap.c:2275:33
 1e09dca:    0d f6 04 20       	r13 = [r2 + 4]			  ## l2cap.c:2275:33
 1e09dce:    e0 fd 00 c3       	r12 = r3 | r0			  ## l2cap.c:1790:26
 1e09dd2:    0d e0 0c 00       	if (r13 == 0) goto 24 <.GJTIE648_0_0_+0x74 : 1e09dee >			  ## l2cap.c:1790:26
 1e09dd6:    e0 fd a0 bb       	r11 = r11 | r10			  ## l2cap.c:1789:26
 1e09dda:    00 f7 04 d0       	r0 = h[r13 + 4] (u)			  ## l2cap.c:2277:22
 1e09dde:    e6 fd 00 1b       	r1 = r11.l (u)			  ## l2cap.c:2277:26
 1e09de2:    10 f2 30 00       	if (r0 == r1) goto 96 <.GJTIE648_0_0_+0xCC : 1e09e46 >			  ## l2cap.c:2277:26
 1e09de6:    0d f6 00 d0       	r13 = [r13 + 0]
 1e09dea:    0d e0 f6 1f       	if (r13 != 0) goto -20 <.GJTIE648_0_0_+0x60 : 1e09dda >
 1e09dee:    e6 fd 00 3c       	r3 = r12.l (u)			  ## l2cap.c:1442:9
 1e09df2:    21 70             	r1 = 2			  ## l2cap.c:1442:9
 1e09df4:    20 70             	r0 = 2			  ## l2cap.c:1442:9
 1e09df6:    08 02             	[sp] = r0
 1e09df8:    70 08             	r0 = r7
 1e09dfa:    52 08             	r2 = r5
 1e09dfc:    18 16             	call -976 <l2cap_register_signaling_response : 1e09a2e >
 1e09dfe:    ca ff 98 1a 00 00 	r10 = 6808 <l2cap_stack : 1a98 >
 1e09e04:    c0 18             	goto 384 <.GJTIE648_0_0_+0x20C : 1e09f86 >
 1e09e06:    50 6c             	r0 = b[r6 + 5] (u)			  ## l2cap.c:1806:28
 1e09e08:    41 6c             	r1 = b[r6 + 4] (u)			  ## l2cap.c:1806:28
 1e09e0a:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## l2cap.c:1806:28
 1e09e0e:    60 04             	r0 = r1.l (u)			  ## l2cap.c:1807:13
 1e09e10:    a1 70             	r1 = 10			  ## l2cap.c:1807:13
 1e09e12:    03 70             	r3 = 0			  ## l2cap.c:1807:13
 1e09e14:    08 02             	[sp] = r0			  ## l2cap.c:1807:13
 1e09e16:    b4 18             	goto 360 <.GJTIE648_0_0_+0x206 : 1e09f80 >			  ## l2cap.c:1807:13
 1e09e18:    00 f6 00 a0       	r0 = [r10 + 0]			  ## l2cap.c:1822:37
 1e09e1c:    20 40             	r0 = [r0 + 8]			  ## l2cap.c:1822:37
 1e09e1e:    b3 20             	if (r0 == 0) goto 358 <.GJTIE648_0_0_+0x20C : 1e09f86 >
 1e09e20:    53 6c             	r3 = b[r6 + 5] (u)			  ## l2cap.c:1817:16
 1e09e22:    42 6c             	r2 = b[r6 + 4] (u)			  ## l2cap.c:1817:16
 1e09e24:    c8 fd 40 23       	r2 <= insert(r3, p:8, l:8)			  ## l2cap.c:1817:16
 1e09e28:    23 50             	r3 = h[r0 + 4] (u)			  ## l2cap.c:1824:26
 1e09e2a:    73 f2 09 10       	if (r3 != r7) goto 18 <.GJTIE648_0_0_+0xC6 : 1e09e40 >			  ## l2cap.c:1824:26
 1e09e2e:    20 f3 04 10       	if ((r1 & 1) != 0) goto 8 <.GJTIE648_0_0_+0xC0 : 1e09e3a >
 1e09e32:    f3 50             	r3 = h[r0 + 30] (u)			  ## l2cap.c:1833:25
 1e09e34:    23 f2 04 10       	if (r3 != r2) goto 8 <.GJTIE648_0_0_+0xC6 : 1e09e40 >			  ## l2cap.c:1833:25
 1e09e38:    8e 18             	goto 284 <.GJTIE648_0_0_+0x1DC : 1e09f56 >			  ## l2cap.c:1833:25
 1e09e3a:    43 61             	r3 = b[r0 + 20] (u)			  ## l2cap.c:1827:52
 1e09e3c:    53 f2 8b 00       	if (r3 == r5) goto 278 <.GJTIE648_0_0_+0x1DC : 1e09f56 >			  ## l2cap.c:1827:52
 1e09e40:    00 40             	r0 = [r0 + 0]
 1e09e42:    f2 31             	if (r0 != 0) goto -28 <.GJTIE648_0_0_+0xAE : 1e09e28 >
 1e09e44:    a0 18             	goto 320 <.GJTIE648_0_0_+0x20C : 1e09f86 >
 1e09e46:    3a 02             	[sp+12] = r2
 1e09e48:    70 08             	r0 = r7			  ## l2cap.c:1446:27
 1e09e4a:    bf f3 68 f9       	call -3376 <connection_address_for_handle : 1e0911e >			  ## l2cap.c:1446:27
 1e09e4e:    03 08             	r3 = r0			  ## l2cap.c:1446:27
 1e09e50:    ca ff 98 1a 00 00 	r10 = 6808 <l2cap_stack : 1a98 >
 1e09e56:    97 26             	if (r3 == 0) goto 302 <.GJTIE648_0_0_+0x20C : 1e09f86 >
 1e09e58:    08 16             	call -1008 <btstack_memory_l2cap_channel_get : 1e09a6a >			  ## l2cap.c:1454:35
 1e09e5a:    0a 08             	r10 = r0			  ## l2cap.c:1454:35
 1e09e5c:    7f 20             	if (r0 == 0) goto 254 <.GJTIE648_0_0_+0x1E2 : 1e09f5c >			  ## l2cap.c:1454:35
 1e09e5e:    60 81             	r0 += 22			  ## l2cap.c:1462:5
 1e09e60:    62 70             	r2 = 6			  ## l2cap.c:1462:5
 1e09e62:    18 02             	[sp+4] = r0			  ## l2cap.c:1462:5
 1e09e64:    31 08             	r1 = r3			  ## l2cap.c:1462:5
 1e09e66:    97 f3 3d e8       	call 3133562 <memcpy : 106ee4 >			  ## l2cap.c:1462:5
 1e09e6a:    1b f7 1c a0       	h[r10 + 28] = r11			  ## l2cap.c:1463:36
 1e09e6e:    40 02             	r0 = [sp+16]			  ## l2cap.c:1464:21
 1e09e70:    10 f7 04 a0       	h[r10 + 4] = r0			  ## l2cap.c:1464:21
 1e09e74:    00 f6 08 d0       	r0 = [r13 + 8]			  ## l2cap.c:1465:36
 1e09e78:    10 f6 08 a0       	[r10 + 8] = r0			  ## l2cap.c:1465:25
 1e09e7c:    00 f6 0c d0       	r0 = [r13 + 12]			  ## l2cap.c:1466:40
 1e09e80:    10 f6 0c a0       	[r10 + 12] = r0			  ## l2cap.c:1466:29
 1e09e84:    32 02             	r2 = [sp+12]			  ## l2cap.c:1466:29
 1e09e86:    b0 55             	r0 = h[r2 + 54] (u)			  ## l2cap.c:133:59
 1e09e88:    11 90             	r1 = r0 + 1			  ## l2cap.c:133:59
 1e09e8a:    b9 55             	h[r2 + 54] = r1			  ## l2cap.c:133:59
 1e09e8c:    10 f7 1e a0       	h[r10 + 30] = r0			  ## l2cap.c:1467:43
 1e09e90:    1c f7 20 a0       	h[r10 + 32] = r12			  ## l2cap.c:1468:43
 1e09e94:    00 f7 06 d0       	r0 = h[r13 + 6] (u)			  ## l2cap.c:1469:54
 1e09e98:    10 f7 22 a0       	h[r10 + 34] = r0			  ## l2cap.c:1469:43
 1e09e9c:    c1 ff 90 09 00 00 	r1 = 2448 <stack_configs_app : 990 >			  ## l2cap.c:973:33
 1e09ea2:    53 63             	r3 = b[r1 + 21] (u)			  ## l2cap.c:973:33
 1e09ea4:    01 fb a0 02       	r1 = 672 <_MASK_MEM_SIZE+0xC : 2a0 >			  ## l2cap.c:976:13
 1e09ea8:    12 08             	r2 = r1			  ## l2cap.c:976:13
 1e09eaa:    00 f3 02 30       	if ((r3 & 1) == 0) goto 4 <.GJTIE648_0_0_+0x138 : 1e09eb2 >			  ## l2cap.c:976:13
 1e09eae:    02 fb ee 03       	r2 = 1006 <BTCTLER_LE_RAM_TOTAL+0x10 : 3ee >			  ## l2cap.c:976:13
 1e09eb2:    12 f7 24 a0       	h[r10 + 36] = r2			  ## l2cap.c:1470:43
 1e09eb6:    15 f9 13 a0       	b[r10 + 19] = r5			  ## l2cap.c:1471:46
 1e09eba:    32 02             	r2 = [sp+12]			  ## l2cap.c:1473:39
 1e09ebc:    02 f9 28 20       	r2 = b[r2 + 40] (u)			  ## l2cap.c:1473:39
 1e09ec0:    92 d0             	r2 = r2 >> 2			  ## l2cap.c:1473:9
 1e09ec2:    22 fd 04 29       	r2 = r2 & 4			  ## l2cap.c:1473:9
 1e09ec6:    12 f9 26 a0       	b[r10 + 38] = r2			  ## l2cap.c:1473:9
 1e09eca:    c2 ff 90 09 00 00 	r2 = 2448 <stack_configs_app : 990 >			  ## l2cap.c:973:33
 1e09ed0:    52 65             	r2 = b[r2 + 21] (u)			  ## l2cap.c:973:33
 1e09ed2:    00 f3 02 20       	if ((r2 & 1) == 0) goto 4 <.GJTIE648_0_0_+0x160 : 1e09eda >			  ## l2cap.c:973:33
 1e09ed6:    01 fb ee 03       	r1 = 1006 <BTCTLER_LE_RAM_TOTAL+0x10 : 3ee >			  ## l2cap.c:976:13
 1e09eda:    10 f2 02 90       	if (r0 <= r1) goto 4 <.GJTIE648_0_0_+0x168 : 1e09ee2 >
 1e09ede:    11 f7 22 a0       	h[r10 + 34] = r1			  ## l2cap.c:1480:46
 1e09ee2:    40 70             	r0 = 4			  ## l2cap.c:1484:38
 1e09ee4:    10 f9 12 a0       	b[r10 + 18] = r0			  ## l2cap.c:1484:38
 1e09ee8:    1e f7 10 a0       	h[r10 + 16] = r14			  ## l2cap.c:1485:42
 1e09eec:    30 02             	r0 = [sp+12]			  ## l2cap.c:1488:5
 1e09eee:    80 80             	r0 += 8			  ## l2cap.c:1488:5
 1e09ef0:    a1 08             	r1 = r10			  ## l2cap.c:1488:5
 1e09ef2:    c3 15             	call -1146 <btstack_linked_list_add : 1e09a7a >			  ## l2cap.c:1488:5
 1e09ef4:    20 77             	r0 = 114			  ## l2cap.c:356:14
 1e09ef6:    d0 f5 2c 00       	b[sp+44] = r0			  ## l2cap.c:356:14
 1e09efa:    e0 70             	r0 = 14			  ## l2cap.c:357:14
 1e09efc:    d0 f5 2d 00       	b[sp+45] = r0			  ## l2cap.c:357:14
 1e09f00:    62 70             	r2 = 6			  ## utils.c:188:5
 1e09f02:    20 02             	r0 = [sp+8]			  ## utils.c:188:5
 1e09f04:    11 02             	r1 = [sp+4]			  ## utils.c:188:5
 1e09f06:    97 f3 ed e7       	call 3133402 <memcpy : 106ee4 >			  ## utils.c:188:5
 1e09f0a:    00 f7 04 a0       	r0 = h[r10 + 4] (u)			  ## l2cap.c:359:37
 1e09f0e:    d0 f5 34 00       	b[sp+52] = r0			  ## utils.c:160:19
 1e09f12:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e09f14:    d0 f5 35 00       	b[sp+53] = r0			  ## utils.c:161:19
 1e09f18:    00 f7 1c a0       	r0 = h[r10 + 28] (u)			  ## l2cap.c:360:55
 1e09f1c:    d0 f5 36 00       	b[sp+54] = r0			  ## utils.c:160:19
 1e09f20:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e09f22:    d0 f5 37 00       	b[sp+55] = r0			  ## utils.c:161:19
 1e09f26:    00 f7 1e a0       	r0 = h[r10 + 30] (u)			  ## l2cap.c:361:55
 1e09f2a:    d0 f5 38 00       	b[sp+56] = r0			  ## utils.c:160:19
 1e09f2e:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e09f30:    d0 f5 39 00       	b[sp+57] = r0			  ## utils.c:161:19
 1e09f34:    00 f7 20 a0       	r0 = h[r10 + 32] (u)			  ## l2cap.c:362:55
 1e09f38:    d0 f5 3a 00       	b[sp+58] = r0			  ## utils.c:160:19
 1e09f3c:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e09f3e:    d0 f5 3b 00       	b[sp+59] = r0			  ## utils.c:161:19
 1e09f42:    c2 a2             	r2 = sp + 44			  ## utils.c:161:19
 1e09f44:    41 70             	r1 = 4			  ## l2cap.c:363:5
 1e09f46:    03 71             	r3 = 16			  ## l2cap.c:363:5
 1e09f48:    a0 08             	r0 = r10			  ## l2cap.c:363:5
 1e09f4a:    bf f3 bf fa       	call -2690 <l2cap_dispatch : 1e094cc >			  ## l2cap.c:363:5
 1e09f4e:    ca ff 98 1a 00 00 	r10 = 6808 <l2cap_stack : 1a98 >			  ## l2cap.c:363:5
 1e09f54:    18 18             	goto 48 <.GJTIE648_0_0_+0x20C : 1e09f86 >			  ## l2cap.c:363:5
 1e09f56:    61 08             	r1 = r6
 1e09f58:    9a 15             	call -1228 <l2cap_signaling_handler_channel : 1e09a8e >
 1e09f5a:    15 18             	goto 42 <.GJTIE648_0_0_+0x20C : 1e09f86 >
 1e09f5c:    e6 fd 00 3c       	r3 = r12.l (u)			  ## l2cap.c:1457:9
 1e09f60:    21 70             	r1 = 2			  ## l2cap.c:1457:9
 1e09f62:    40 70             	r0 = 4			  ## l2cap.c:1457:9
 1e09f64:    48 1f             	goto -368 <.GJTIE648_0_0_+0x7C : 1e09df6 >			  ## l2cap.c:1457:9
 1e09f66:    80 fb 40 6f       	r6 = r15 + r4			  ## l2cap.c:2010:55
 1e09f6a:    01 6c             	r1 = b[r6 + 0] (u)			  ## l2cap.c:1777:17
 1e09f6c:    15 6c             	r5 = b[r6 + 1] (u)			  ## l2cap.c:1778:17
 1e09f6e:    04 22             	if (r1 == 0) goto 8 <.GJTIE648_0_0_+0x1FE : 1e09f78 >			  ## l2cap.c:1778:17
 1e09f70:    91 e0 02 00       	if (r1 == 9) goto 4 <.GJTIE648_0_0_+0x1FE : 1e09f78 >
 1e09f74:    c1 e0 0e 3f       	if (r1 < 12) goto -484 <.GJTIE648_0_0_+0x1A : 1e09d94 >
 1e09f78:    11 70             	r1 = 1			  ## l2cap.c:1782:9
 1e09f7a:    03 70             	r3 = 0			  ## l2cap.c:1782:9
 1e09f7c:    1e f5 00 00       	[sp] = r14			  ## l2cap.c:1782:9
 1e09f80:    70 08             	r0 = r7
 1e09f82:    52 08             	r2 = r5
 1e09f84:    54 15             	call -1368 <l2cap_register_signaling_response : 1e09a2e >
 1e09f86:    30 6c             	r0 = b[r6 + 3] (u)			  ## l2cap.c:2013:69
 1e09f88:    21 6c             	r1 = b[r6 + 2] (u)			  ## l2cap.c:2013:69
 1e09f8a:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## l2cap.c:2013:69
 1e09f8e:    40 b8             	r0 = r4 + r1			  ## l2cap.c:2013:67
 1e09f90:    40 80             	r0 += 4			  ## l2cap.c:2013:28
 1e09f92:    24 04             	r4 = r0.l (u)			  ## l2cap.c:2008:16
 1e09f94:    94 f2 e7 3f       	if (r4 < r9) goto -50 <.GJTIE648_0_0_+0x1EC : 1e09f66 >			  ## l2cap.c:2008:16
 1e09f98:    53 19             	goto 678 <.GJTIE648_0_0_+0x4C6 : 1e0a240 >			  ## l2cap.c:2008:16
 1e09f9a:    80 e1 23 01       	if (r0 == 24) goto 582 <.GJTIE648_0_0_+0x46A : 1e0a1e4 >
 1e09f9e:    30 e7 39 11       	if (r0 != 115) goto 626 <.GJTIE648_0_0_+0x49A : 1e0a214 >
 1e09fa2:    01 f6 00 a0       	r1 = [r10 + 0]			  ## l2cap.c:1384:37
 1e09fa6:    02 f9 03 f0       	r2 = b[r15 + 3] (u)			  ## l2cap.c:1379:18
 1e09faa:    00 f9 02 f0       	r0 = b[r15 + 2] (u)			  ## l2cap.c:1379:18
 1e09fae:    21 42             	r1 = [r1 + 8]			  ## l2cap.c:1379:18
 1e09fb0:    d8 fd 40 02       	r0 <= insert(r2, p:8, l:24)			  ## l2cap.c:1379:18
 1e09fb4:    0d 22             	if (r1 == 0) goto 26 <.GJTIE648_0_0_+0x256 : 1e09fd0 >			  ## l2cap.c:1379:18
 1e09fb6:    02 70             	r2 = 0
 1e09fb8:    23 04             	r3 = r0.l (u)
 1e09fba:    24 52             	r4 = h[r1 + 4] (u)			  ## l2cap.c:1386:27
 1e09fbc:    34 f2 04 10       	if (r4 != r3) goto 8 <.GJTIE648_0_0_+0x24E : 1e09fc8 >			  ## l2cap.c:1386:27
 1e09fc0:    e4 52             	r4 = h[r1 + 28] (u)			  ## l2cap.c:1386:76
 1e09fc2:    14 e0 01 00       	if (r4 == 1) goto 2 <.GJTIE648_0_0_+0x24E : 1e09fc8 >
 1e09fc6:    12 70             	r2 = 1
 1e09fc8:    01 42             	r1 = [r1 + 0]
 1e09fca:    f7 33             	if (r1 != 0) goto -18 <.GJTIE648_0_0_+0x240 : 1e09fba >
 1e09fcc:    02 e0 22 11       	if (r2 != 0) goto 580 <.GJTIE648_0_0_+0x49A : 1e0a214 >
 1e09fd0:    20 04             	r0 = r0.l (u)			  ## l2cap.c:1393:9
 1e09fd2:    31 71             	r1 = 19			  ## l2cap.c:1393:9
 1e09fd4:    bf f3 a5 f8       	call -3766 <hci_disconnect_cmd : 1e09122 >			  ## l2cap.c:1393:9
 1e09fd8:    1d 19             	goto 570 <.GJTIE648_0_0_+0x49A : 1e0a214 >			  ## l2cap.c:1393:9
 1e09fda:    69 16             	call -814 <l2cap_get_channel_for_local_cid : 1e09cae >			  ## l2cap.c:2055:36
 1e09fdc:    00 e0 30 01       	if (r0 == 0) goto 608 <.GJTIE648_0_0_+0x4C6 : 1e0a240 >
 1e09fe0:    f2 fc 08 00       	r2 = r15 + 8			  ## l2cap.c:2057:57
 1e09fe4:    91 fc f8 ff       	r1 = r9 + -8			  ## l2cap.c:2057:93
 1e09fe8:    63 04             	r3 = r1.l (u)			  ## l2cap.c:2057:13
 1e09fea:    61 70             	r1 = 6			  ## l2cap.c:2057:13
 1e09fec:    bf f3 6e fa       	call -2852 <l2cap_dispatch : 1e094cc >			  ## l2cap.c:2057:13
 1e09ff0:    27 19             	goto 590 <.GJTIE648_0_0_+0x4C6 : 1e0a240 >
 1e09ff2:    04 48             	r4 = [r4 + 0]			  ## l2cap.c:2037:90
 1e09ff4:    04 e0 24 01       	if (r4 == 0) goto 584 <.GJTIE648_0_0_+0x4C6 : 1e0a240 >			  ## l2cap.c:2037:90
 1e09ff8:    40 02             	r0 = [sp+16]			  ## l2cap.c:2038:17
 1e09ffa:    21 04             	r1 = r0.l (u)			  ## l2cap.c:2038:17
 1e09ffc:    f2 fc 08 00       	r2 = r15 + 8			  ## l2cap.c:2038:128
 1e0a000:    90 fc f8 ff       	r0 = r9 + -8			  ## l2cap.c:2038:164
 1e0a004:    23 04             	r3 = r0.l (u)			  ## l2cap.c:2038:17
 1e0a006:    80 70             	r0 = 8			  ## l2cap.c:2038:17
 1e0a008:    84 00             	call r4			  ## l2cap.c:2038:17
 1e0a00a:    1a 19             	goto 564 <.GJTIE648_0_0_+0x4C6 : 1e0a240 >			  ## l2cap.c:2038:17
 1e0a00c:    00 f9 0b f0       	r0 = b[r15 + 11] (u)			  ## l2cap.c:2023:28
 1e0a010:    01 f9 0a f0       	r1 = b[r15 + 10] (u)			  ## l2cap.c:2023:28
 1e0a014:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## l2cap.c:2023:28
 1e0a018:    c0 92             	r0 = r1 + 12			  ## l2cap.c:2024:43
 1e0a01a:    90 f2 11 81       	if (r0 > r9) goto 546 <.GJTIE648_0_0_+0x4C6 : 1e0a240 >			  ## l2cap.c:2024:43
 1e0a01e:    05 f9 09 f0       	r5 = b[r15 + 9] (u)			  ## l2cap.c:2022:31
 1e0a022:    07 f9 08 f0       	r7 = b[r15 + 8] (u)			  ## l2cap.c:1879:22
 1e0a026:    f6 fc 08 00       	r6 = r15 + 8			  ## l2cap.c:2027:76
 1e0a02a:    21 70             	r1 = 2			  ## l2cap.c:1880:22
 1e0a02c:    60 08             	r0 = r6			  ## l2cap.c:1880:22
 1e0a02e:    bf f3 46 ee       	call -9076 <little_endian_read_16 : 1e07cbe >			  ## l2cap.c:1880:22
 1e0a032:    77 e0 05 01       	if (r7 == 7) goto 522 <.GJTIE648_0_0_+0x4C6 : 1e0a240 >			  ## l2cap.c:1880:22
 1e0a036:    c4 ff 9c 1a 00 00 	r4 = 6812 <le_l2cap_event_packet_handler : 1a9c >
 1e0a03c:    37 e1 f5 00       	if (r7 == 19) goto 490 <.GJTIE648_0_0_+0x4B0 : 1e0a22a >
 1e0a040:    27 e1 f5 10       	if (r7 != 18) goto 490 <.GJTIE648_0_0_+0x4B4 : 1e0a22e >
 1e0a044:    80 e0 f3 30       	if (r0 < 8) goto 486 <.GJTIE648_0_0_+0x4B4 : 1e0a22e >
 1e0a048:    40 02             	r0 = [sp+16]			  ## l2cap.c:1891:22
 1e0a04a:    28 04             	r8 = r0.l (u)			  ## l2cap.c:1891:22
 1e0a04c:    80 08             	r0 = r8			  ## l2cap.c:1891:22
 1e0a04e:    bf f3 5b ee       	call -9034 <le_hci_connection_for_handle : 1e07d08 >			  ## l2cap.c:1891:22
 1e0a052:    07 08             	r7 = r0			  ## l2cap.c:1891:22
 1e0a054:    07 e0 70 01       	if (r7 == 0) goto 736 <.GJTIE648_0_0_+0x5BE : 1e0a338 >
 1e0a058:    00 f9 28 70       	r0 = b[r7 + 40] (u)			  ## l2cap.c:1893:29
 1e0a05c:    00 e0 33 01       	if (r0 == 0) goto 614 <.GJTIE648_0_0_+0x54C : 1e0a2c6 >			  ## l2cap.c:1893:17
 1e0a060:    02 f9 11 f0       	r2 = b[r15 + 17] (u)			  ## l2cap.c:1897:17
 1e0a064:    00 70             	r0 = 0			  ## l2cap.c:1897:17
 1e0a066:    f1 71             	r1 = 31			  ## l2cap.c:1897:17
 1e0a068:    03 70             	r3 = 0			  ## l2cap.c:1897:17
 1e0a06a:    08 02             	[sp] = r0			  ## l2cap.c:1897:17
 1e0a06c:    80 08             	r0 = r8			  ## l2cap.c:1897:17
 1e0a06e:    e6 18             	goto 460 <.GJTIE648_0_0_+0x4C2 : 1e0a23c >			  ## l2cap.c:1897:17
 1e0a070:    24 48             	r4 = [r4 + 8]			  ## l2cap.c:2045:97
 1e0a072:    e6 28             	if (r4 == 0) goto 460 <.GJTIE648_0_0_+0x4C6 : 1e0a240 >			  ## l2cap.c:2045:97
 1e0a074:    40 02             	r0 = [sp+16]			  ## l2cap.c:2046:17
 1e0a076:    21 04             	r1 = r0.l (u)			  ## l2cap.c:2046:17
 1e0a078:    f2 fc 08 00       	r2 = r15 + 8			  ## l2cap.c:2046:134
 1e0a07c:    90 fc f8 ff       	r0 = r9 + -8			  ## l2cap.c:2046:170
 1e0a080:    23 04             	r3 = r0.l (u)			  ## l2cap.c:2046:17
 1e0a082:    90 70             	r0 = 9			  ## l2cap.c:2046:17
 1e0a084:    84 00             	call r4			  ## l2cap.c:2046:17
 1e0a086:    dc 18             	goto 440 <.GJTIE648_0_0_+0x4C6 : 1e0a240 >			  ## l2cap.c:2046:17
 1e0a088:    00 f9 0a f0       	r0 = b[r15 + 10] (u)			  ## utils.c:188:5
 1e0a08c:    01 f9 09 f0       	r1 = b[r15 + 9] (u)			  ## utils.c:188:5
 1e0a090:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## utils.c:188:5
 1e0a094:    91 f5 20 00       	h[sp+32] = r1			  ## utils.c:188:5
 1e0a098:    00 f9 08 f0       	r0 = b[r15 + 8] (u)			  ## utils.c:188:5
 1e0a09c:    01 f9 07 f0       	r1 = b[r15 + 7] (u)			  ## utils.c:188:5
 1e0a0a0:    02 f9 06 f0       	r2 = b[r15 + 6] (u)			  ## utils.c:188:5
 1e0a0a4:    03 f9 05 f0       	r3 = b[r15 + 5] (u)			  ## utils.c:188:5
 1e0a0a8:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## utils.c:188:5
 1e0a0ac:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## utils.c:188:5
 1e0a0b0:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## utils.c:188:5
 1e0a0b4:    7b 02             	[sp+28] = r3			  ## utils.c:188:5
 1e0a0b6:    00 f9 0b f0       	r0 = b[r15 + 11] (u)			  ## utils.c:188:5
 1e0a0ba:    90 b0             	r0 |= 2			  ## l2cap.c:1268:42
 1e0a0bc:    20 e0 aa 00       	if (r0 == 2) goto 340 <.GJTIE648_0_0_+0x49A : 1e0a214 >			  ## l2cap.c:1268:42
 1e0a0c0:    00 f9 02 f0       	r0 = b[r15 + 2] (u)			  ## l2cap.c:1271:13
 1e0a0c4:    c1 20             	if (r0 == 0) goto 386 <.GJTIE648_0_0_+0x4CE : 1e0a248 >			  ## l2cap.c:1271:13
 1e0a0c6:    c0 a1             	r0 = sp + 28
 1e0a0c8:    51 72             	r1 = 37			  ## l2cap.c:1279:13
 1e0a0ca:    02 70             	r2 = 0			  ## l2cap.c:1279:13
 1e0a0cc:    bf f3 ca f7       	call -4204 <check_l2cap_authentication_flag : 1e09064 >			  ## l2cap.c:1279:13
 1e0a0d0:    01 f6 00 a0       	r1 = [r10 + 0]			  ## l2cap.c:1130:44
 1e0a0d4:    20 42             	r0 = [r1 + 8]			  ## l2cap.c:1131:16
 1e0a0d6:    9e 20             	if (r0 == 0) goto 316 <.GJTIE648_0_0_+0x49A : 1e0a214 >			  ## l2cap.c:1131:16
 1e0a0d8:    05 f9 02 f0       	r5 = b[r15 + 2] (u)			  ## l2cap.c:1281:62
 1e0a0dc:    84 92             	r4 = r1 + 8			  ## l2cap.c:1130:57
 1e0a0de:    46 08             	r6 = r4			  ## l2cap.c:1130:57
 1e0a0e0:    67 08             	r7 = r6
 1e0a0e2:    06 08             	r6 = r0
 1e0a0e4:    60 9d             	r0 = r6 + 22			  ## l2cap.c:1133:15
 1e0a0e6:    c1 a1             	r1 = sp + 28			  ## l2cap.c:1133:15
 1e0a0e8:    62 70             	r2 = 6			  ## l2cap.c:1133:15
 1e0a0ea:    97 f3 ff e6       	call 3132926 <memcmp : 106eec >			  ## l2cap.c:1133:15
 1e0a0ee:    10 30             	if (r0 != 0) goto 32 <.GJTIE648_0_0_+0x396 : 1e0a110 >			  ## l2cap.c:1133:13
 1e0a0f0:    00 4c             	r0 = [r6 + 0]			  ## l2cap.c:1134:34
 1e0a0f2:    08 4e             	[r7 + 0] = r0			  ## l2cap.c:1134:22
 1e0a0f4:    20 6d             	r0 = b[r6 + 18] (u)			  ## l2cap.c:1135:44
 1e0a0f6:    70 b0             	r0 &= 4294967294			  ## l2cap.c:1135:90
 1e0a0f8:    20 e0 07 10       	if (r0 != 2) goto 14 <.GJTIE648_0_0_+0x390 : 1e0a10a >			  ## l2cap.c:1135:90
 1e0a0fc:    60 08             	r0 = r6			  ## l2cap.c:1137:17
 1e0a0fe:    51 08             	r1 = r5			  ## l2cap.c:1137:17
 1e0a100:    bf f3 f9 f9       	call -3086 <l2cap_emit_channel_opened : 1e094f6 >			  ## l2cap.c:1137:17
 1e0a104:    60 08             	r0 = r6			  ## l2cap.c:1140:17
 1e0a106:    bf f3 d6 f9       	call -3156 <btstack_memory_l2cap_channel_free : 1e094b6 >			  ## l2cap.c:1140:17
 1e0a10a:    06 48             	r6 = [r4 + 0]			  ## l2cap.c:1131:16
 1e0a10c:    eb 3d             	if (r6 != 0) goto -42 <.GJTIE648_0_0_+0x36A : 1e0a0e4 >
 1e0a10e:    82 18             	goto 260 <.GJTIE648_0_0_+0x49A : 1e0a214 >
 1e0a110:    00 4c             	r0 = [r6 + 0]			  ## l2cap.c:1131:16
 1e0a112:    64 08             	r4 = r6			  ## l2cap.c:1131:16
 1e0a114:    e5 31             	if (r0 != 0) goto -54 <.GJTIE648_0_0_+0x366 : 1e0a0e0 >			  ## l2cap.c:1131:16
 1e0a116:    7e 18             	goto 252 <.GJTIE648_0_0_+0x49A : 1e0a214 >			  ## l2cap.c:1131:16
 1e0a118:    72 e0 7c 30       	if (r2 < 7) goto 248 <.GJTIE648_0_0_+0x49A : 1e0a214 >
 1e0a11c:    00 f9 06 f0       	r0 = b[r15 + 6] (u)			  ## l2cap.c:1307:21
 1e0a120:    90 b0             	r0 |= 2			  ## l2cap.c:1315:13
 1e0a122:    00 04             	r0 = r0.b0 (u)			  ## l2cap.c:1315:13
 1e0a124:    20 e0 76 00       	if (r0 == 2) goto 236 <.GJTIE648_0_0_+0x49A : 1e0a214 >			  ## l2cap.c:1315:13
 1e0a128:    00 f9 0c f0       	r0 = b[r15 + 12] (u)			  ## utils.c:188:5
 1e0a12c:    02 f9 0b f0       	r2 = b[r15 + 11] (u)			  ## utils.c:188:5
 1e0a130:    01 f9 04 f0       	r1 = b[r15 + 4] (u)			  ## l2cap.c:1330:18
 1e0a134:    04 f9 03 f0       	r4 = b[r15 + 3] (u)			  ## l2cap.c:1330:18
 1e0a138:    d8 fd 40 20       	r2 <= insert(r0, p:8, l:24)			  ## utils.c:188:5
 1e0a13c:    92 f5 18 00       	h[sp+24] = r2			  ## utils.c:188:5
 1e0a140:    00 f9 0a f0       	r0 = b[r15 + 10] (u)			  ## utils.c:188:5
 1e0a144:    03 f9 09 f0       	r3 = b[r15 + 9] (u)			  ## utils.c:188:5
 1e0a148:    05 f9 08 f0       	r5 = b[r15 + 8] (u)			  ## utils.c:188:5
 1e0a14c:    06 f9 07 f0       	r6 = b[r15 + 7] (u)			  ## utils.c:188:5
 1e0a150:    c8 fd 40 30       	r3 <= insert(r0, p:8, l:8)			  ## utils.c:188:5
 1e0a154:    02 f6 00 a0       	r2 = [r10 + 0]			  ## l2cap.c:1333:33
 1e0a158:    c8 fd 40 65       	r6 <= insert(r5, p:8, l:8)			  ## utils.c:188:5
 1e0a15c:    d0 fd 80 63       	r6 <= insert(r3, p:16, l:16)			  ## utils.c:188:5
 1e0a160:    5e 02             	[sp+20] = r6			  ## utils.c:188:5
 1e0a162:    20 44             	r0 = [r2 + 8]			  ## l2cap.c:1334:20
 1e0a164:    29 20             	if (r0 == 0) goto 82 <.GJTIE648_0_0_+0x43E : 1e0a1b8 >			  ## l2cap.c:1334:20
 1e0a166:    86 94             	r6 = r2 + 8			  ## l2cap.c:1333:46
 1e0a168:    c8 fd 40 41       	r4 <= insert(r1, p:8, l:8)			  ## l2cap.c:1330:18
 1e0a16c:    65 08             	r5 = r6			  ## l2cap.c:1330:18
 1e0a16e:    57 08             	r7 = r5
 1e0a170:    05 08             	r5 = r0
 1e0a172:    61 9b             	r1 = r5 + 22			  ## l2cap.c:1340:17
 1e0a174:    40 a1             	r0 = sp + 20			  ## l2cap.c:1340:17
 1e0a176:    62 70             	r2 = 6			  ## l2cap.c:1340:17
 1e0a178:    97 f3 b8 e6       	call 3132784 <memcmp : 106eec >			  ## l2cap.c:1340:17
 1e0a17c:    1a 30             	if (r0 != 0) goto 52 <.GJTIE648_0_0_+0x438 : 1e0a1b2 >			  ## l2cap.c:1340:17
 1e0a17e:    20 5a             	r0 = h[r5 + 4] (u)			  ## l2cap.c:1341:21
 1e0a180:    02 20             	if (r0 == 0) goto 4 <.GJTIE648_0_0_+0x40C : 1e0a186 >			  ## l2cap.c:1341:21
 1e0a182:    40 f2 16 10       	if (r0 != r4) goto 44 <.GJTIE648_0_0_+0x438 : 1e0a1b2 >
 1e0a186:    00 4e             	r0 = [r7 + 0]			  ## l2cap.c:1344:36
 1e0a188:    00 40             	r0 = [r0 + 0]			  ## l2cap.c:1344:42
 1e0a18a:    01 9b             	r1 = r5 + 16			  ## l2cap.c:1340:17
 1e0a18c:    08 4e             	[r7 + 0] = r0			  ## l2cap.c:1344:30
 1e0a18e:    20 62             	r0 = b[r1 + 2] (u)			  ## l2cap.c:1345:53
 1e0a190:    70 b0             	r0 &= 4294967294			  ## l2cap.c:1345:80
 1e0a192:    80 e0 04 10       	if (r0 != 8) goto 8 <.GJTIE648_0_0_+0x424 : 1e0a19e >			  ## l2cap.c:1345:80
 1e0a196:    50 08             	r0 = r5			  ## l2cap.c:1349:25
 1e0a198:    bf f3 ff f9       	call -3074 <l2cap_emit_channel_closed : 1e0959a >			  ## l2cap.c:1349:25
 1e0a19c:    04 18             	goto 8 <.GJTIE648_0_0_+0x42C : 1e0a1a6 >			  ## l2cap.c:1349:25
 1e0a19e:    01 75             	r1 = 80			  ## l2cap.c:1347:25
 1e0a1a0:    50 08             	r0 = r5			  ## l2cap.c:1347:25
 1e0a1a2:    bf f3 a8 f9       	call -3248 <l2cap_emit_channel_opened : 1e094f6 >			  ## l2cap.c:1347:25
 1e0a1a6:    50 08             	r0 = r5			  ## l2cap.c:1351:21
 1e0a1a8:    bf f3 85 f9       	call -3318 <btstack_memory_l2cap_channel_free : 1e094b6 >			  ## l2cap.c:1351:21
 1e0a1ac:    05 4c             	r5 = [r6 + 0]			  ## l2cap.c:1334:20
 1e0a1ae:    e1 3b             	if (r5 != 0) goto -62 <.GJTIE648_0_0_+0x3F8 : 1e0a172 >			  ## l2cap.c:1334:20
 1e0a1b0:    03 18             	goto 6 <.GJTIE648_0_0_+0x43E : 1e0a1b8 >			  ## l2cap.c:1334:20
 1e0a1b2:    00 4a             	r0 = [r5 + 0]			  ## l2cap.c:1334:20
 1e0a1b4:    56 08             	r6 = r5			  ## l2cap.c:1334:20
 1e0a1b6:    db 31             	if (r0 != 0) goto -74 <.GJTIE648_0_0_+0x3F4 : 1e0a16e >			  ## l2cap.c:1334:20
 1e0a1b8:    40 a1             	r0 = sp + 20
 1e0a1ba:    51 72             	r1 = 37			  ## l2cap.c:1361:9
 1e0a1bc:    02 70             	r2 = 0			  ## l2cap.c:1361:9
 1e0a1be:    bf f3 51 f7       	call -4446 <check_l2cap_authentication_flag : 1e09064 >			  ## l2cap.c:1361:9
 1e0a1c2:    28 18             	goto 80 <.GJTIE648_0_0_+0x49A : 1e0a214 >			  ## l2cap.c:1361:9
 1e0a1c4:    bf f3 18 fa       	call -3024 <l2cap_run : 1e095f8 >			  ## l2cap.c:1366:9
 1e0a1c8:    00 f6 00 a0       	r0 = [r10 + 0]			  ## l2cap.c:384:33
 1e0a1cc:    25 40             	r5 = [r0 + 8]			  ## l2cap.c:384:33
 1e0a1ce:    22 2a             	if (r5 == 0) goto 68 <.GJTIE648_0_0_+0x49A : 1e0a214 >
 1e0a1d0:    20 6b             	r0 = b[r5 + 18] (u)			  ## l2cap.c:389:44
 1e0a1d2:    80 e0 04 10       	if (r0 != 8) goto 8 <.GJTIE648_0_0_+0x464 : 1e0a1de >			  ## l2cap.c:389:44
 1e0a1d6:    11 70             	r1 = 1			  ## l2cap.c:393:17
 1e0a1d8:    50 08             	r0 = r5			  ## l2cap.c:393:17
 1e0a1da:    bf f3 c8 f9       	call -3184 <l2cap_emit_credits : 1e0956e >			  ## l2cap.c:393:17
 1e0a1de:    05 4a             	r5 = [r5 + 0]
 1e0a1e0:    f7 3b             	if (r5 != 0) goto -18 <.GJTIE648_0_0_+0x456 : 1e0a1d0 >
 1e0a1e2:    18 18             	goto 48 <.GJTIE648_0_0_+0x49A : 1e0a214 >
 1e0a1e4:    f5 fc 02 00       	r5 = r15 + 2			  ## l2cap.c:1396:55
 1e0a1e8:    71 72             	r1 = 39			  ## l2cap.c:1396:22
 1e0a1ea:    02 70             	r2 = 0			  ## l2cap.c:1396:22
 1e0a1ec:    50 08             	r0 = r5			  ## l2cap.c:1396:22
 1e0a1ee:    bf f3 39 f7       	call -4494 <check_l2cap_authentication_flag : 1e09064 >			  ## l2cap.c:1396:22
 1e0a1f2:    01 08             	r1 = r0			  ## l2cap.c:1396:22
 1e0a1f4:    0f 22             	if (r1 == 0) goto 30 <.GJTIE648_0_0_+0x49A : 1e0a214 >			  ## l2cap.c:1396:22
 1e0a1f6:    50 08             	r0 = r5			  ## l2cap.c:1399:13
 1e0a1f8:    bf f3 f4 f6       	call -4632 <handle_remote_dev_type : 1e08fe4 >			  ## l2cap.c:1399:13
 1e0a1fc:    0b 18             	goto 22 <.GJTIE648_0_0_+0x49A : 1e0a214 >			  ## l2cap.c:1399:13
 1e0a1fe:    bf f3 8e f7       	call -4324 <connection_address_for_handle : 1e0911e >
 1e0a202:    08 20             	if (r0 == 0) goto 16 <.GJTIE648_0_0_+0x49A : 1e0a214 >
 1e0a204:    41 72             	r1 = 36
 1e0a206:    22 72             	r2 = 34
 1e0a208:    bf f3 2c f7       	call -4520 <check_l2cap_authentication_flag : 1e09064 >
 1e0a20c:    bf f3 fe ee       	call -8708 <stack_run_loop_resume : 1e0800c >
 1e0a210:    bf f3 f2 f9       	call -3100 <l2cap_run : 1e095f8 >
 1e0a214:    00 f6 00 a0       	r0 = [r10 + 0]			  ## l2cap.c:1408:5
 1e0a218:    04 40             	r4 = [r0 + 0]			  ## l2cap.c:1408:18
 1e0a21a:    00 70             	r0 = 0			  ## l2cap.c:1408:5
 1e0a21c:    41 70             	r1 = 4			  ## l2cap.c:1408:5
 1e0a21e:    02 70             	r2 = 0			  ## l2cap.c:1408:5
 1e0a220:    19 f5 00 00       	[sp] = r9			  ## l2cap.c:1408:5
 1e0a224:    f3 08             	r3 = r15			  ## l2cap.c:1408:5
 1e0a226:    84 00             	call r4			  ## l2cap.c:1408:5
 1e0a228:    0d 18             	goto 26 <.GJTIE648_0_0_+0x4CA : 1e0a244 >			  ## l2cap.c:1408:5
 1e0a22a:    20 e0 2f 20       	if (r0 >= 2) goto 94 <.GJTIE648_0_0_+0x512 : 1e0a28c >
 1e0a22e:    02 70             	r2 = 0			  ## l2cap.c:2029:17
 1e0a230:    40 02             	r0 = [sp+16]			  ## l2cap.c:2029:17
 1e0a232:    20 04             	r0 = r0.l (u)			  ## l2cap.c:2029:17
 1e0a234:    f1 71             	r1 = 31			  ## l2cap.c:2029:17
 1e0a236:    03 70             	r3 = 0			  ## l2cap.c:2029:17
 1e0a238:    0a 02             	[sp] = r2			  ## l2cap.c:2029:17
 1e0a23a:    52 08             	r2 = r5			  ## l2cap.c:2029:17
 1e0a23c:    bf f3 f7 fb       	call -2066 <l2cap_register_signaling_response : 1e09a2e >
 1e0a240:    bf f3 da f9       	call -3148 <l2cap_run : 1e095f8 >			  ## l2cap.c:2063:5
 1e0a244:    1e 0a             	sp += 60
 1e0a246:    5f 01             	{pc, r15-r4} = [sp++]			  ## l2cap.c:2078:1
 1e0a248:    04 f6 00 a0       	r4 = [r10 + 0]			  ## l2cap.c:1151:33
 1e0a24c:    26 48             	r6 = [r4 + 8]			  ## l2cap.c:1151:33
 1e0a24e:    e0 2d             	if (r6 == 0) goto -64 <.GJTIE648_0_0_+0x496 : 1e0a210 >
 1e0a250:    00 f9 04 f0       	r0 = b[r15 + 4] (u)			  ## l2cap.c:1272:22
 1e0a254:    07 f9 03 f0       	r7 = b[r15 + 3] (u)			  ## l2cap.c:1272:22
 1e0a258:    f5 fc 05 00       	r5 = r15 + 5			  ## l2cap.c:1266:32
 1e0a25c:    d8 fd 40 70       	r7 <= insert(r0, p:8, l:24)			  ## l2cap.c:1272:22
 1e0a260:    a8 70             	r8 = 10			  ## l2cap.c:1272:22
 1e0a262:    60 9d             	r0 = r6 + 22			  ## l2cap.c:1153:15
 1e0a264:    62 70             	r2 = 6			  ## l2cap.c:1153:15
 1e0a266:    51 08             	r1 = r5			  ## l2cap.c:1153:15
 1e0a268:    97 f3 40 e6       	call 3132544 <memcmp : 106eec >			  ## l2cap.c:1153:15
 1e0a26c:    0c 30             	if (r0 != 0) goto 24 <.GJTIE648_0_0_+0x50C : 1e0a286 >			  ## l2cap.c:1153:15
 1e0a26e:    00 9d             	r0 = r6 + 16			  ## l2cap.c:1153:15
 1e0a270:    20 60             	r0 = b[r0 + 2] (u)			  ## l2cap.c:1154:44
 1e0a272:    70 b0             	r0 &= 4294967294			  ## l2cap.c:1154:90
 1e0a274:    20 e0 07 10       	if (r0 != 2) goto 14 <.GJTIE648_0_0_+0x50C : 1e0a286 >			  ## l2cap.c:1154:90
 1e0a278:    18 f9 12 60       	b[r6 + 18] = r8			  ## l2cap.c:1156:50
 1e0a27c:    2f 5c             	h[r6 + 4] = r7			  ## l2cap.c:1157:33
 1e0a27e:    b0 59             	r0 = h[r4 + 54] (u)			  ## l2cap.c:133:59
 1e0a280:    11 90             	r1 = r0 + 1			  ## l2cap.c:133:59
 1e0a282:    b9 59             	h[r4 + 54] = r1			  ## l2cap.c:133:59
 1e0a284:    f8 5c             	h[r6 + 30] = r0			  ## l2cap.c:1158:54
 1e0a286:    06 4c             	r6 = [r6 + 0]
 1e0a288:    ec 3d             	if (r6 != 0) goto -40 <.GJTIE648_0_0_+0x4E8 : 1e0a262 >
 1e0a28a:    c2 1f             	goto -124 <.GJTIE648_0_0_+0x496 : 1e0a210 >
 1e0a28c:    41 70             	r1 = 4			  ## l2cap.c:1976:18
 1e0a28e:    45 70             	r5 = 4			  ## l2cap.c:1976:18
 1e0a290:    60 08             	r0 = r6			  ## l2cap.c:1976:18
 1e0a292:    bf f3 14 ed       	call -9688 <little_endian_read_16 : 1e07cbe >			  ## l2cap.c:1976:18
 1e0a296:    71 77             	r1 = 119			  ## l2cap.c:1848:14
 1e0a298:    d1 f5 1c 00       	b[sp+28] = r1			  ## l2cap.c:1848:14
 1e0a29c:    d5 f5 1d 00       	b[sp+29] = r5			  ## l2cap.c:1849:14
 1e0a2a0:    d2 f5 1e 00       	b[sp+30] = r2			  ## utils.c:83:19
 1e0a2a4:    19 d2             	r1 = r3 >> 8			  ## utils.c:84:21
 1e0a2a6:    02 48             	r2 = [r4 + 0]			  ## l2cap.c:1858:10
 1e0a2a8:    d1 f5 1f 00       	b[sp+31] = r1			  ## utils.c:84:19
 1e0a2ac:    d0 f5 20 00       	b[sp+32] = r0			  ## utils.c:83:19
 1e0a2b0:    00 d2             	r0 = r0 >> 8			  ## utils.c:84:21
 1e0a2b2:    d0 f5 21 00       	b[sp+33] = r0			  ## utils.c:84:19
 1e0a2b6:    c4 25             	if (r2 == 0) goto -120 <.GJTIE648_0_0_+0x4C6 : 1e0a240 >			  ## utils.c:84:19
 1e0a2b8:    c2 a1             	r2 = sp + 28
 1e0a2ba:    40 70             	r0 = 4			  ## l2cap.c:1861:5
 1e0a2bc:    01 70             	r1 = 0			  ## l2cap.c:1861:5
 1e0a2be:    63 70             	r3 = 6			  ## l2cap.c:1861:5
 1e0a2c0:    bf f3 98 b5       	call -38096 <__ble_comm_cbk_packet_handler : 1e00df4 >			  ## l2cap.c:1861:5
 1e0a2c4:    bd 1f             	goto -134 <.GJTIE648_0_0_+0x4C6 : 1e0a240 >			  ## l2cap.c:1861:5
 1e0a2c6:    c0 ff 7e 1a 00 00 	r0 = 6782 <report_bss_size+0x12E : 1a7e >			  ## hci_vendor.c:2296:27
 1e0a2cc:    51 50             	r1 = h[r0 + 10] (u)			  ## hci_vendor.c:2296:27
 1e0a2ce:    49 02             	[sp+16] = r1			  ## hci_vendor.c:2296:27
 1e0a2d0:    0c f7 08 00       	r12 = h[r0 + 8] (u)			  ## hci_vendor.c:2296:27
 1e0a2d4:    0d f7 06 00       	r13 = h[r0 + 6] (u)			  ## hci_vendor.c:2296:27
 1e0a2d8:    0e f7 04 00       	r14 = h[r0 + 4] (u)			  ## hci_vendor.c:2296:27
 1e0a2dc:    0a f7 02 00       	r10 = h[r0 + 2] (u)			  ## hci_vendor.c:2296:27
 1e0a2e0:    0b f7 00 00       	r11 = h[r0 + 0] (u)			  ## hci_vendor.c:2296:27
 1e0a2e4:    41 70             	r1 = 4			  ## l2cap.c:1903:45
 1e0a2e6:    60 08             	r0 = r6			  ## l2cap.c:1903:45
 1e0a2e8:    bf f3 e9 ec       	call -9774 <little_endian_read_16 : 1e07cbe >			  ## l2cap.c:1903:45
 1e0a2ec:    09 08             	r9 = r0			  ## l2cap.c:1903:45
 1e0a2ee:    61 70             	r1 = 6			  ## l2cap.c:1904:45
 1e0a2f0:    60 08             	r0 = r6			  ## l2cap.c:1904:45
 1e0a2f2:    bf f3 e4 ec       	call -9784 <little_endian_read_16 : 1e07cbe >			  ## l2cap.c:1904:45
 1e0a2f6:    02 08             	r2 = r0			  ## l2cap.c:1904:45
 1e0a2f8:    81 70             	r1 = 8			  ## l2cap.c:1905:40
 1e0a2fa:    60 08             	r0 = r6			  ## l2cap.c:1905:40
 1e0a2fc:    bf f3 df ec       	call -9794 <little_endian_read_16 : 1e07cbe >			  ## l2cap.c:1905:40
 1e0a300:    03 08             	r3 = r0			  ## l2cap.c:1905:40
 1e0a302:    a1 70             	r1 = 10			  ## l2cap.c:1906:47
 1e0a304:    60 08             	r0 = r6			  ## l2cap.c:1906:47
 1e0a306:    bf f3 da ec       	call -9804 <little_endian_read_16 : 1e07cbe >			  ## l2cap.c:1906:47
 1e0a30a:    b9 f2 11 30       	if (r9 < r11) goto 34 <.GJTIE648_0_0_+0x5B6 : 1e0a330 >
 1e0a30e:    a2 f2 0f 80       	if (r2 > r10) goto 30 <.GJTIE648_0_0_+0x5B6 : 1e0a330 >
 1e0a312:    e3 f2 0d 30       	if (r3 < r14) goto 26 <.GJTIE648_0_0_+0x5B6 : 1e0a330 >
 1e0a316:    d3 f2 0b 80       	if (r3 > r13) goto 22 <.GJTIE648_0_0_+0x5B6 : 1e0a330 >
 1e0a31a:    c0 f2 09 30       	if (r0 < r12) goto 18 <.GJTIE648_0_0_+0x5B6 : 1e0a330 >
 1e0a31e:    41 02             	r1 = [sp+16]
 1e0a320:    10 f2 06 80       	if (r0 > r1) goto 12 <.GJTIE648_0_0_+0x5B6 : 1e0a330 >
 1e0a324:    f0 fc 0c 00       	r0 = r15 + 12			  ## l2cap.c:1930:59
 1e0a328:    81 08             	r1 = r8			  ## l2cap.c:1930:21
 1e0a32a:    bf f3 de df       	call -16452 <l2cap_connection_update_request_just : 1e062ea >			  ## l2cap.c:1930:21
 1e0a32e:    3d 20             	if (r0 == 0) goto 122 <.GJTIE648_0_0_+0x630 : 1e0a3aa >			  ## l2cap.c:1930:21
 1e0a330:    40 70             	r0 = 4			  ## l2cap.c:1950:59
 1e0a332:    b8 4e             	[r7 + 44] = r0			  ## l2cap.c:1950:59
 1e0a334:    15 f9 30 70       	b[r7 + 48] = r5			  ## l2cap.c:1952:56
 1e0a338:    00 48             	r0 = [r4 + 0]			  ## l2cap.c:1959:14
 1e0a33a:    82 21             	if (r0 == 0) goto -252 <.GJTIE648_0_0_+0x4C6 : 1e0a240 >			  ## l2cap.c:1959:14
 1e0a33c:    60 77             	r0 = 118			  ## l2cap.c:1963:18
 1e0a33e:    d0 f5 22 00       	b[sp+34] = r0			  ## l2cap.c:1963:18
 1e0a342:    80 70             	r0 = 8			  ## l2cap.c:1963:18
 1e0a344:    d0 f5 23 00       	b[sp+35] = r0			  ## l2cap.c:1964:18
 1e0a348:    00 f9 0e f0       	r0 = b[r15 + 14] (u)			  ## l2cap.c:1965:9
 1e0a34c:    01 f9 12 f0       	r1 = b[r15 + 18] (u)			  ## l2cap.c:1965:9
 1e0a350:    02 f9 0c f0       	r2 = b[r15 + 12] (u)			  ## l2cap.c:1965:9
 1e0a354:    03 f9 0d f0       	r3 = b[r15 + 13] (u)			  ## l2cap.c:1965:9
 1e0a358:    04 f9 13 f0       	r4 = b[r15 + 19] (u)			  ## l2cap.c:1965:9
 1e0a35c:    05 f9 11 f0       	r5 = b[r15 + 17] (u)			  ## l2cap.c:1965:9
 1e0a360:    06 f9 10 f0       	r6 = b[r15 + 16] (u)			  ## l2cap.c:1965:9
 1e0a364:    07 f9 0f f0       	r7 = b[r15 + 15] (u)			  ## l2cap.c:1965:9
 1e0a368:    d4 f5 2b 00       	b[sp+43] = r4			  ## l2cap.c:1965:9
 1e0a36c:    d5 f5 29 00       	b[sp+41] = r5			  ## l2cap.c:1965:9
 1e0a370:    d6 f5 28 00       	b[sp+40] = r6			  ## l2cap.c:1965:9
 1e0a374:    d7 f5 27 00       	b[sp+39] = r7			  ## l2cap.c:1965:9
 1e0a378:    d3 f5 25 00       	b[sp+37] = r3			  ## l2cap.c:1965:9
 1e0a37c:    d2 f5 24 00       	b[sp+36] = r2			  ## l2cap.c:1965:9
 1e0a380:    c8 fd 40 14       	r1 <= insert(r4, p:8, l:8)			  ## l2cap.c:1965:9
 1e0a384:    d0 fd 80 61       	r6 <= insert(r1, p:16, l:16)			  ## l2cap.c:1965:9
 1e0a388:    31 d4             	r1 = r6 >> 16			  ## l2cap.c:1965:9
 1e0a38a:    d1 f5 2a 00       	b[sp+42] = r1			  ## l2cap.c:1965:9
 1e0a38e:    c8 fd 40 07       	r0 <= insert(r7, p:8, l:8)			  ## l2cap.c:1965:9
 1e0a392:    d0 fd 80 20       	r2 <= insert(r0, p:16, l:16)			  ## l2cap.c:1965:9
 1e0a396:    10 d4             	r0 = r2 >> 16			  ## l2cap.c:1965:9
 1e0a398:    d0 f5 26 00       	b[sp+38] = r0			  ## l2cap.c:1965:9
 1e0a39c:    22 a2             	r2 = sp + 34			  ## l2cap.c:1965:9
 1e0a39e:    40 70             	r0 = 4			  ## l2cap.c:1968:9
 1e0a3a0:    01 70             	r1 = 0			  ## l2cap.c:1968:9
 1e0a3a2:    a3 70             	r3 = 10			  ## l2cap.c:1968:9
 1e0a3a4:    bf f3 26 b5       	call -38324 <__ble_comm_cbk_packet_handler : 1e00df4 >			  ## l2cap.c:1968:9
 1e0a3a8:    4b 1f             	goto -362 <.GJTIE648_0_0_+0x4C6 : 1e0a240 >			  ## l2cap.c:1968:9
 1e0a3aa:    41 70             	r1 = 4			  ## l2cap.c:1935:44
 1e0a3ac:    60 08             	r0 = r6			  ## l2cap.c:1935:44
 1e0a3ae:    bf f3 86 ec       	call -9972 <little_endian_read_16 : 1e07cbe >			  ## l2cap.c:1935:44
 1e0a3b2:    08 08             	r8 = r0			  ## l2cap.c:1935:44
 1e0a3b4:    61 70             	r1 = 6			  ## l2cap.c:1936:44
 1e0a3b6:    60 08             	r0 = r6			  ## l2cap.c:1936:44
 1e0a3b8:    bf f3 81 ec       	call -9982 <little_endian_read_16 : 1e07cbe >			  ## l2cap.c:1936:44
 1e0a3bc:    03 08             	r3 = r0			  ## l2cap.c:1936:44
 1e0a3be:    81 70             	r1 = 8			  ## l2cap.c:1937:39
 1e0a3c0:    60 08             	r0 = r6			  ## l2cap.c:1937:39
 1e0a3c2:    bf f3 7c ec       	call -9992 <little_endian_read_16 : 1e07cbe >			  ## l2cap.c:1937:39
 1e0a3c6:    02 08             	r2 = r0			  ## l2cap.c:1937:39
 1e0a3c8:    a1 70             	r1 = 10			  ## l2cap.c:1938:46
 1e0a3ca:    60 08             	r0 = r6			  ## l2cap.c:1938:46
 1e0a3cc:    bf f3 77 ec       	call -10002 <little_endian_read_16 : 1e07cbe >			  ## l2cap.c:1938:46
 1e0a3d0:    cb f4 02 79       	[r7 + 44] = 2			  ## l2cap.c:1944:59
 1e0a3d4:    18 f7 32 70       	h[r7 + 50] = r8			  ## l2cap.c:1945:50
 1e0a3d8:    ab 5f             	h[r7 + 52] = r3			  ## l2cap.c:1946:50
 1e0a3da:    ba 5f             	h[r7 + 54] = r2			  ## l2cap.c:1947:45
 1e0a3dc:    c8 5f             	h[r7 + 56] = r0			  ## l2cap.c:1948:52
 1e0a3de:    aa 1f             	goto -172 <.GJTIE648_0_0_+0x5BA : 1e0a334 >			  ## l2cap.c:1948:52


btstack_memory_le_hci_connection_free:
 1e0a3e0:    c1 ff 94 1a 00 00 	r1 = 6804 <le_stack_pool : 1a94 >			  ## btstack_memory.c:226:0
 1e0a3e6:    01 42             	r1 = [r1 + 0]			  ## btstack_memory.c:227:23
 1e0a3e8:    02 42             	r2 = [r1 + 0]			  ## btstack_memory.c:227:23
 1e0a3ea:    05 24             	if (r2 == 0) goto 10 <btstack_memory_le_hci_connection_free+0x16 : 1e0a3f6 >
 1e0a3ec:    23 08             	r3 = r2
 1e0a3ee:    03 f2 04 00       	if (r3 == r0) goto 8 <btstack_memory_le_hci_connection_free+0x1A : 1e0a3fa >
 1e0a3f2:    03 46             	r3 = [r3 + 0]
 1e0a3f4:    fc 37             	if (r3 != 0) goto -8 <btstack_memory_le_hci_connection_free+0xE : 1e0a3ee >
 1e0a3f6:    0a 40             	[r0 + 0] = r2			  ## btstack_memory.c:45:25
 1e0a3f8:    08 42             	[r1 + 0] = r0			  ## btstack_memory.c:46:25
 1e0a3fa:    20 00             	rts			  ## btstack_memory.c:228:1


le_hci_connection_for_bd_addr_and_type:
 1e0a3fc:    76 01             	[--sp] = {rets, r6-r4}			  ## hci_vendor.c:308:0
 1e0a3fe:    fa 0b             	sp += -12			  ## hci_vendor.c:308:0
 1e0a400:    14 08             	r4 = r1			  ## hci_vendor.c:308:0
 1e0a402:    05 08             	r5 = r0			  ## hci_vendor.c:308:0
 1e0a404:    c0 ff 60 18 00 00 	r0 = 6240 <report_irq_stack_end : 1860 >			  ## btstack_linked_list.c:162:14
 1e0a40a:    01 40             	r1 = [r0 + 0]			  ## btstack_linked_list.c:163:16
 1e0a40c:    02 70             	r2 = 0			  ## btstack_linked_list.c:163:16
 1e0a40e:    0a 02             	[sp] = r2			  ## btstack_linked_list.c:161:25
 1e0a410:    18 02             	[sp+4] = r0			  ## btstack_linked_list.c:162:14
 1e0a412:    29 02             	[sp+8] = r1			  ## btstack_linked_list.c:163:14
 1e0a414:    00 a0             	r0 = sp + 0
 1e0a416:    bf f3 59 ec       	call -10062 <btstack_linked_list_iterator_has_next : 1e07ccc >			  ## hci_vendor.c:319:12
 1e0a41a:    0e 20             	if (r0 == 0) goto 28 <le_hci_connection_for_bd_addr_and_type+0x3C : 1e0a438 >
 1e0a41c:    00 a0             	r0 = sp + 0
 1e0a41e:    bf f3 63 ec       	call -10042 <btstack_linked_list_iterator_next : 1e07ce8 >			  ## hci_vendor.c:320:67
 1e0a422:    06 08             	r6 = r0			  ## hci_vendor.c:320:67
 1e0a424:    30 4c             	r0 = [r6 + 12]			  ## hci_vendor.c:321:25
 1e0a426:    40 f2 f5 1f       	if (r0 != r4) goto -22 <le_hci_connection_for_bd_addr_and_type+0x18 : 1e0a414 >			  ## hci_vendor.c:321:25
 1e0a42a:    01 9d             	r1 = r6 + 16			  ## hci_vendor.c:324:38
 1e0a42c:    62 70             	r2 = 6			  ## hci_vendor.c:324:13
 1e0a42e:    50 08             	r0 = r5			  ## hci_vendor.c:324:13
 1e0a430:    97 f3 5c e5       	call 3132088 <memcmp : 106eec >			  ## hci_vendor.c:324:13
 1e0a434:    ef 31             	if (r0 != 0) goto -34 <le_hci_connection_for_bd_addr_and_type+0x18 : 1e0a414 >			  ## hci_vendor.c:324:13
 1e0a436:    01 18             	goto 2 <le_hci_connection_for_bd_addr_and_type+0x3E : 1e0a43a >			  ## hci_vendor.c:324:13
 1e0a438:    06 70             	r6 = 0
 1e0a43a:    60 08             	r0 = r6			  ## hci_vendor.c:337:1
 1e0a43c:    06 0a             	sp += 12			  ## hci_vendor.c:337:1
 1e0a43e:    56 01             	{pc, r6-r4} = [sp++]			  ## hci_vendor.c:337:1


le_create_connection_for_bd_addr_and_type:
 1e0a440:    77 01             	[--sp] = {rets, r7-r4}			  ## hci_vendor.c:283:0
 1e0a442:    c2 ff 94 1a 00 00 	r2 = 6804 <le_stack_pool : 1a94 >			  ## btstack_memory.c:223:29
 1e0a448:    02 44             	r2 = [r2 + 0]			  ## btstack_memory.c:223:29
 1e0a44a:    04 44             	r4 = [r2 + 0]			  ## btstack_memory.c:66:23
 1e0a44c:    15 08             	r5 = r1
 1e0a44e:    06 08             	r6 = r0
 1e0a450:    20 28             	if (r4 == 0) goto 64 <le_create_connection_for_bd_addr_and_type+0x52 : 1e0a492 >
 1e0a452:    00 48             	r0 = [r4 + 0]			  ## btstack_memory.c:72:31
 1e0a454:    08 44             	[r2 + 0] = r0			  ## btstack_memory.c:72:23
 1e0a456:    01 70             	r1 = 0			  ## hci_vendor.c:290:5
 1e0a458:    02 fb d4 04       	r2 = 1236 <BTCTLER_CONTROLLER_DATA_SIZE+0x16 : 4d4 >			  ## hci_vendor.c:290:5
 1e0a45c:    07 70             	r7 = 0			  ## hci_vendor.c:290:5
 1e0a45e:    40 08             	r0 = r4			  ## hci_vendor.c:290:5
 1e0a460:    97 f3 46 e5       	call 3132044 <memset : 106ef0 >			  ## hci_vendor.c:290:5
 1e0a464:    00 99             	r0 = r4 + 16			  ## hci_vendor.c:291:5
 1e0a466:    62 70             	r2 = 6			  ## hci_vendor.c:291:5
 1e0a468:    61 08             	r1 = r6			  ## hci_vendor.c:291:5
 1e0a46a:    97 f3 3b e5       	call 3132022 <memcpy : 106ee4 >			  ## hci_vendor.c:291:5
 1e0a46e:    3d 48             	[r4 + 12] = r5			  ## hci_vendor.c:292:24
 1e0a470:    c0 ff ff ff 00 00 	r0 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## hci_vendor.c:293:22
 1e0a476:    28 58             	h[r4 + 4] = r0			  ## hci_vendor.c:293:22
 1e0a478:    bf 48             	[r4 + 44] = r7			  ## hci_vendor.c:298:41
 1e0a47a:    40 fc cc 04       	r0 = r4 + 1228			  ## hci_vendor.c:298:41
 1e0a47e:    6f 60             	b[r0 + 6] = r7			  ## hci_vendor.c:296:33
 1e0a480:    2f 50             	h[r0 + 4] = r7			  ## hci_vendor.c:296:33
 1e0a482:    1f 50             	h[r0 + 2] = r7			  ## hci_vendor.c:296:33
 1e0a484:    c0 ff 60 18 00 00 	r0 = 6240 <report_irq_stack_end : 1860 >			  ## hci_vendor.c:300:5
 1e0a48a:    41 08             	r1 = r4			  ## hci_vendor.c:300:5
 1e0a48c:    bf f3 f5 fa       	call -2582 <btstack_linked_list_add : 1e09a7a >			  ## hci_vendor.c:300:5
 1e0a490:    01 18             	goto 2 <le_create_connection_for_bd_addr_and_type+0x54 : 1e0a494 >			  ## hci_vendor.c:300:5
 1e0a492:    04 70             	r4 = 0
 1e0a494:    40 08             	r0 = r4			  ## hci_vendor.c:302:1
 1e0a496:    57 01             	{pc, r7-r4} = [sp++]			  ## hci_vendor.c:302:1


hci_run_for_acl_data_send:
 1e0a498:    76 01             	[--sp] = {rets, r6-r4}			  ## hci_vendor.c:2131:0
 1e0a49a:    fa 0b             	sp += -12			  ## hci_vendor.c:2131:0
 1e0a49c:    c6 ff 60 18 00 00 	r6 = 6240 <report_irq_stack_end : 1860 >			  ## hci_vendor.c:2131:0
 1e0a4a2:    00 f7 18 62       	r0 = h[r6 + 536] (u)			  ## hci_vendor.c:2138:22
 1e0a4a6:    21 20             	if (r0 == 0) goto 66 <hci_run_for_acl_data_send+0x52 : 1e0a4ea >			  ## hci_vendor.c:2138:22
 1e0a4a8:    90 6c             	r0 = b[r6 + 9] (u)			  ## hci_vendor.c:2139:39
 1e0a4aa:    81 6c             	r1 = b[r6 + 8] (u)			  ## hci_vendor.c:2139:39
 1e0a4ac:    00 c2             	r0 = r0 << 8			  ## hci_vendor.c:2139:39
 1e0a4ae:    20 fd 0f 0a       	r0 = r0 & 3840			  ## hci_vendor.c:2139:39
 1e0a4b2:    e0 fd 10 40       	r4 = r0 | r1			  ## hci_vendor.c:2139:39
 1e0a4b6:    40 08             	r0 = r4			  ## hci_vendor.c:2127:12
 1e0a4b8:    bf f3 41 f7       	call -4478 <hci_number_free_acl_slots_for_handle : 1e0933e >			  ## hci_vendor.c:2127:12
 1e0a4bc:    10 e0 15 b0       	ifs (r0 < 1) goto 42 <hci_run_for_acl_data_send+0x52 : 1e0a4ea >			  ## hci_vendor.c:2127:12
 1e0a4c0:    25 05             	r5 = r4.l (u)			  ## hci_vendor.c:2141:47
 1e0a4c2:    50 08             	r0 = r5			  ## hci_vendor.c:2141:47
 1e0a4c4:    bf f3 20 ec       	call -10176 <le_hci_connection_for_handle : 1e07d08 >			  ## hci_vendor.c:2141:47
 1e0a4c8:    04 08             	r4 = r0			  ## hci_vendor.c:2141:47
 1e0a4ca:    09 28             	if (r4 == 0) goto 18 <hci_run_for_acl_data_send+0x46 : 1e0a4de >			  ## hci_vendor.c:2142:17
 1e0a4cc:    50 08             	r0 = r5			  ## hci_vendor.c:2127:12
 1e0a4ce:    bf f3 36 f7       	call -4500 <hci_number_free_acl_slots_for_handle : 1e0933e >			  ## hci_vendor.c:2127:12
 1e0a4d2:    00 e0 0a d0       	ifs (r0 <= 0) goto 20 <hci_run_for_acl_data_send+0x52 : 1e0a4ea >			  ## hci_vendor.c:2127:12
 1e0a4d6:    40 08             	r0 = r4			  ## hci_vendor.c:2144:21
 1e0a4d8:    bf f3 56 f7       	call -4436 <le_hci_send_acl_packet_fragments : 1e09388 >			  ## hci_vendor.c:2144:21
 1e0a4dc:    1d 18             	goto 58 <hci_run_for_acl_data_send+0x80 : 1e0a518 >			  ## hci_vendor.c:2144:21
 1e0a4de:    60 fc 15 02       	r0 = r6 + 533			  ## hci_vendor.c:2150:52
 1e0a4e2:    01 70             	r1 = 0			  ## hci_vendor.c:2150:52
 1e0a4e4:    52 70             	r2 = 5			  ## hci_vendor.c:2150:52
 1e0a4e6:    97 f3 03 e5       	call 3131910 <memset : 106ef0 >			  ## hci_vendor.c:2150:52
 1e0a4ea:    04 4c             	r4 = [r6 + 0]
 1e0a4ec:    15 28             	if (r4 == 0) goto 42 <hci_run_for_acl_data_send+0x80 : 1e0a518 >
 1e0a4ee:    05 70             	r5 = 0
 1e0a4f0:    c6 ff ff ff 00 00 	r6 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >
 1e0a4f6:    b0 48             	r0 = [r4 + 44]			  ## hci_vendor.c:2159:25
 1e0a4f8:    30 e0 0c 10       	if (r0 != 3) goto 24 <hci_run_for_acl_data_send+0x7C : 1e0a514 >			  ## hci_vendor.c:2159:25
 1e0a4fc:    bd 48             	[r4 + 44] = r5			  ## hci_vendor.c:2160:55
 1e0a4fe:    9d 59             	h[r4 + 50] = r5			  ## hci_vendor.c:2163:46
 1e0a500:    b3 59             	r3 = h[r4 + 54] (u)			  ## hci_vendor.c:2179:13
 1e0a502:    a1 59             	r1 = h[r4 + 52] (u)			  ## hci_vendor.c:2179:13
 1e0a504:    20 58             	r0 = h[r4 + 4] (u)			  ## hci_vendor.c:2179:13
 1e0a506:    c2 59             	r2 = h[r4 + 56] (u)			  ## hci_vendor.c:2179:13
 1e0a508:    2e 02             	[sp+8] = r6			  ## hci_vendor.c:2179:13
 1e0a50a:    1d 02             	[sp+4] = r5			  ## hci_vendor.c:2179:13
 1e0a50c:    0a 02             	[sp] = r2			  ## hci_vendor.c:2179:13
 1e0a50e:    12 08             	r2 = r1			  ## hci_vendor.c:2179:13
 1e0a510:    80 f3 04 9d       	call 80392 <ll_hci_connection_update : 1e1df1c >			  ## hci_vendor.c:2179:13
 1e0a514:    04 48             	r4 = [r4 + 0]
 1e0a516:    ef 39             	if (r4 != 0) goto -34 <hci_run_for_acl_data_send+0x5E : 1e0a4f6 >
 1e0a518:    06 0a             	sp += 12
 1e0a51a:    56 01             	{pc, r6-r4} = [sp++]			  ## hci_vendor.c:2191:1


btstack_task:
 1e0a51c:    70 0b             	sp += -288			  ## btstack_task.c:84:0
 1e0a51e:    bf f3 64 f2       	call -6968 <btstack_task_init : 1e089ea >			  ## btstack_task.c:88:5
 1e0a522:    00 70             	r0 = 0			  ## btstack_task.c:92:5
 1e0a524:    31 70             	r1 = 3			  ## btstack_task.c:92:5
 1e0a526:    b2 72             	r2 = 43			  ## btstack_task.c:92:5
 1e0a528:    0a 70             	r10 = 0			  ## btstack_task.c:92:5
 1e0a52a:    bf f3 1b ef       	call -8650 <update_bt_current_status : 1e08364 >			  ## btstack_task.c:92:5
 1e0a52e:    c0 ff 80 09 00 00 	r0 = 2432 <is_btstack_lowpower_active : 980 >			  ## btstack_task.c:92:5
 1e0a534:    1a f9 00 00       	b[r0 + 0] = r10			  ## btstack_task.c:92:5
 1e0a538:    c0 a1             	r0 = sp + 28			  ## btstack_task.c:92:5
 1e0a53a:    cb 90             	r11 = r0 + 12
 1e0a53c:    91 ab             	r1 = sp + 185
 1e0a53e:    c1 80             	r1 += 12
 1e0a540:    69 02             	[sp+24] = r1
 1e0a542:    e1 fb 16 01       	r1 = sp + 278
 1e0a546:    41 80             	r1 += 4
 1e0a548:    19 02             	[sp+4] = r1
 1e0a54a:    6c 90             	r12 = r0 + 6
 1e0a54c:    7d 90             	r13 = r0 + 7
 1e0a54e:    b1 90             	r1 = r0 + 11
 1e0a550:    09 02             	[sp] = r1
 1e0a552:    9e 90             	r14 = r0 + 9
 1e0a554:    4f 90             	r15 = r0 + 4
 1e0a556:    c9 ff ff ff bf ff 	r9 = 4290772991 <uECC_vli_cmp_unsafe+0x1AF9003 : 1bfffff >
 1e0a55c:    1b f5 14 00       	[sp+20] = r11
 1e0a560:    1c f5 10 00       	[sp+16] = r12
 1e0a564:    1d f5 0c 00       	[sp+12] = r13
 1e0a568:    1e f5 08 00       	[sp+8] = r14
 1e0a56c:    c1 a1             	r1 = sp + 28
 1e0a56e:    00 70             	r0 = 0			  ## btstack_task.c:101:15
 1e0a570:    02 72             	r2 = 32			  ## btstack_task.c:101:15
 1e0a572:    97 f3 2d e4       	call 3131482 <os_taskq_pend : 106dd0 >			  ## btstack_task.c:101:15
 1e0a576:    d0 e0 f9 1f       	if (r0 != 13) goto -14 <btstack_task+0x50 : 1e0a56c >			  ## btstack_task.c:103:13
 1e0a57a:    70 02             	r0 = [sp+28]			  ## btstack_task.c:107:17
 1e0a57c:    90 09             	r0 += r9			  ## btstack_task.c:107:9
 1e0a57e:    50 e0 43 84       	if (r0 > 5) goto 2182 <.GJTIE658_3_3_+0x36C : 1e0ae08 >			  ## btstack_task.c:107:9
 1e0a582:    41 c0             	r1 = r0 << 1
 1e0a584:    b1 00             	tbh [r1]


.GJTIL658_0_0_:
 1e0a586:    06 00     < 6 : 0x6 >
 1e0a588:    6d 00     < 109 : 0x6D >
 1e0a58a:    41 04     < 1089 : 0x441 >
 1e0a58c:    86 00     < 134 : 0x86 >
 1e0a58e:    41 04     < 1089 : 0x441 >
 1e0a590:    8d 00     < 141 : 0x8D >
 1e0a592:    c1 f5 20 00       	r1 = b[sp+32] (u)
 1e0a596:    10 fc fd ff       	r0 = r1 + -3			  ## hci_vendor.c:407:5
 1e0a59a:    07 70             	r7 = 0			  ## hci_vendor.c:407:5
 1e0a59c:    50 e1 b0 80       	if (r0 > 21) goto 352 <.GJTIE658_1_1_+0x130 : 1e0a700 >			  ## hci_vendor.c:407:5
 1e0a5a0:    41 c0             	r1 = r0 << 1
 1e0a5a2:    b1 00             	tbh [r1]


.GJTIL658_1_1_:
 1e0a5a4:    16 00     < 22 : 0x16 >
 1e0a5a6:    0b 01     < 267 : 0x10B >
 1e0a5a8:    26 01     < 294 : 0x126 >
 1e0a5aa:    4d 01     < 333 : 0x14D >
 1e0a5ac:    1e 04     < 1054 : 0x41E >
 1e0a5ae:    7f 01     < 383 : 0x17F >
 1e0a5b0:    1e 04     < 1054 : 0x41E >
 1e0a5b2:    1e 04     < 1054 : 0x41E >
 1e0a5b4:    1e 04     < 1054 : 0x41E >
 1e0a5b6:    1e 04     < 1054 : 0x41E >
 1e0a5b8:    1e 04     < 1054 : 0x41E >
 1e0a5ba:    89 02     < 649 : 0x289 >
 1e0a5bc:    1e 04     < 1054 : 0x41E >
 1e0a5be:    1e 04     < 1054 : 0x41E >
 1e0a5c0:    1e 04     < 1054 : 0x41E >
 1e0a5c2:    1e 04     < 1054 : 0x41E >
 1e0a5c4:    86 01     < 390 : 0x186 >
 1e0a5c6:    ac 01     < 428 : 0x1AC >
 1e0a5c8:    1e 04     < 1054 : 0x41E >
 1e0a5ca:    be 01     < 446 : 0x1BE >
 1e0a5cc:    ec 01     < 492 : 0x1EC >
 1e0a5ce:    2c 02     < 556 : 0x22C >
 1e0a5d0:    c0 f5 22 00       	r0 = b[sp+34] (u)			  ## hci_vendor.c:625:14
 1e0a5d4:    50 e0 f8 02       	if (r0 == 5) goto 1520 <.GJTIE658_3_3_+0x12C : 1e0abc8 >			  ## hci_vendor.c:625:13
 1e0a5d8:    00 e0 02 14       	if (r0 != 0) goto 2052 <.GJTIE658_3_3_+0x344 : 1e0ade0 >
 1e0a5dc:    c0 f5 2b 00       	r0 = b[sp+43] (u)			  ## hci_vendor.c:626:17
 1e0a5e0:    10 e0 fe 13       	if (r0 != 1) goto 2044 <.GJTIE658_3_3_+0x344 : 1e0ade0 >			  ## hci_vendor.c:626:17
 1e0a5e4:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >
 1e0a5ea:    04 08             	r4 = r0
 1e0a5ec:    40 69             	r0 = b[r4 + 20] (u)			  ## hci_vendor.c:160:32
 1e0a5ee:    31 69             	r1 = b[r4 + 19] (u)			  ## hci_vendor.c:160:32
 1e0a5f0:    22 69             	r2 = b[r4 + 18] (u)			  ## hci_vendor.c:160:32
 1e0a5f2:    13 69             	r3 = b[r4 + 17] (u)			  ## hci_vendor.c:160:32
 1e0a5f4:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_vendor.c:160:32
 1e0a5f8:    50 69             	r0 = b[r4 + 21] (u)			  ## hci_vendor.c:160:32
 1e0a5fa:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## hci_vendor.c:160:32
 1e0a5fe:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## hci_vendor.c:160:32
 1e0a602:    99 d1             	r1 = r3 >> 6			  ## hci_vendor.c:160:69
 1e0a604:    c6 fd d0 10       	r1 <= insert(r0, p:26, l:6)			  ## hci_vendor.c:160:69
 1e0a608:    1a d5             	r2 = r3 >> 20			  ## hci_vendor.c:160:32
 1e0a60a:    c8 fd 60 20       	r2 <= insert(r0, p:12, l:8)			  ## hci_vendor.c:160:32
 1e0a60e:    e0 fd 10 02       	r0 = r2 | r1			  ## hci_vendor.c:160:47
 1e0a612:    24 fd 01 09       	r4 = r0 & 1			  ## hci_vendor.c:160:47
 1e0a616:    41 ae             	r1 = sp + 228			  ## hci_vendor.c:160:47
 1e0a618:    e0 08             	r0 = r14			  ## remote_device_db.c:348:9
 1e0a61a:    42 08             	r2 = r4			  ## remote_device_db.c:348:9
 1e0a61c:    bf f3 32 f3       	call -6556 <get_link_key : 1e08c84 >			  ## remote_device_db.c:348:9
 1e0a620:    05 20             	if (r0 == 0) goto 10 <.GJTIE658_1_1_+0x5C : 1e0a62c >			  ## remote_device_db.c:348:9
 1e0a622:    41 ae             	r1 = sp + 228
 1e0a624:    e0 08             	r0 = r14			  ## remote_device_db.c:349:9
 1e0a626:    42 08             	r2 = r4			  ## remote_device_db.c:349:9
 1e0a628:    bf f3 a9 f4       	call -5806 <put_link_key : 1e08f7e >			  ## remote_device_db.c:349:9
 1e0a62c:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >
 1e0a632:    03 08             	r3 = r0
 1e0a634:    40 67             	r0 = b[r3 + 20] (u)			  ## hci_vendor.c:628:42
 1e0a636:    31 67             	r1 = b[r3 + 19] (u)			  ## hci_vendor.c:628:42
 1e0a638:    22 67             	r2 = b[r3 + 18] (u)			  ## hci_vendor.c:628:42
 1e0a63a:    13 67             	r3 = b[r3 + 17] (u)			  ## hci_vendor.c:628:42
 1e0a63c:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_vendor.c:628:42
 1e0a640:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## hci_vendor.c:628:42
 1e0a644:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## hci_vendor.c:628:42
 1e0a648:    34 f3 ca 33       	if ((r3 & 1048576) != 0) goto 1940 <.GJTIE658_3_3_+0x344 : 1e0ade0 >			  ## hci_vendor.c:628:42
 1e0a64c:    f1 7f             	r1 = 255			  ## hci_vendor.c:631:32
 1e0a64e:    e0 08             	r0 = r14			  ## hci_vendor.c:631:32
 1e0a650:    bf f3 c8 f4       	call -5744 <handle_remote_dev_type : 1e08fe4 >			  ## hci_vendor.c:631:32
 1e0a654:    02 08             	r2 = r0			  ## hci_vendor.c:631:32
 1e0a656:    11 70             	r1 = 1			  ## hci_vendor.c:632:21
 1e0a658:    e0 08             	r0 = r14			  ## hci_vendor.c:632:21
 1e0a65a:    bf f3 52 f5       	call -5468 <remote_dev_company_ioctrl : 1e09102 >			  ## hci_vendor.c:632:21
 1e0a65e:    c0 1b             	goto 1920 <.GJTIE658_3_3_+0x344 : 1e0ade0 >			  ## hci_vendor.c:632:21
 1e0a660:    84 02             	r4 = [sp+32]			  ## btstack_task.c:112:35
 1e0a662:    16 68             	r6 = b[r4 + 1] (u)			  ## hci_vendor.c:1160:22
 1e0a664:    00 68             	r0 = b[r4 + 0] (u)			  ## hci_vendor.c:1160:22
 1e0a666:    31 c2             	r1 = r6 << 8			  ## hci_vendor.c:1160:22
 1e0a668:    21 fd 0f 1a       	r1 = r1 & 3840			  ## hci_vendor.c:1160:22
 1e0a66c:    50 b2             	r0 |= r1			  ## hci_vendor.c:1160:22
 1e0a66e:    00 e5 28 20       	if (r0 >= 80) goto 80 <.GJTIE658_1_1_+0xF2 : 1e0a6c2 >			  ## hci_vendor.c:1160:22
 1e0a672:    08 f5 24 00       	r8 = [sp+36]			  ## btstack_task.c:112:43
 1e0a676:    37 68             	r7 = b[r4 + 3] (u)			  ## hci_vendor.c:1020:22
 1e0a678:    25 68             	r5 = b[r4 + 2] (u)			  ## hci_vendor.c:1020:22
 1e0a67a:    20 04             	r0 = r0.l (u)			  ## hci_vendor.c:118:48
 1e0a67c:    80 f3 73 a0       	call 82150 <lmp_private_remote_addr_for_handler : 1e1e766 >			  ## hci_vendor.c:118:12
 1e0a680:    00 e0 c2 03       	if (r0 == 0) goto 1924 <.GJTIE658_3_3_+0x36C : 1e0ae08 >
 1e0a684:    82 fd 20 06       	r0 = uextra(r6, p:4, l:2)			  ## hci_vendor.c:1028:5
 1e0a688:    20 e0 76 00       	if (r0 == 2) goto 236 <.GJTIE658_2_2_+0x50 : 1e0a778 >			  ## hci_vendor.c:1028:5
 1e0a68c:    10 e0 7a 00       	if (r0 == 1) goto 244 <.GJTIE658_2_2_+0x5C : 1e0a784 >
 1e0a690:    bb 1b             	goto 1910 <.GJTIE658_3_3_+0x36C : 1e0ae08 >
 1e0a692:    80 02             	r0 = [sp+32]			  ## btstack_task.c:115:35
 1e0a694:    97 f3 ba e3       	call 3131252 <os_sem_post : 106e0c >			  ## btstack_task.c:115:13
 1e0a698:    40 71             	r0 = 20			  ## btstack_task.c:116:13
 1e0a69a:    97 f3 8d e3       	call 3131162 <os_time_dly : 106db8 >			  ## btstack_task.c:116:13
 1e0a69e:    b4 1b             	goto 1896 <.GJTIE658_3_3_+0x36C : 1e0ae08 >			  ## btstack_task.c:116:13
 1e0a6a0:    c0 ff 98 1a 00 00 	r0 = 6808 <l2cap_stack : 1a98 >			  ## l2cap.c:403:33
 1e0a6a6:    00 40             	r0 = [r0 + 0]			  ## l2cap.c:403:33
 1e0a6a8:    24 40             	r4 = [r0 + 8]			  ## l2cap.c:403:33
 1e0a6aa:    04 e0 ad 03       	if (r4 == 0) goto 1882 <.GJTIE658_3_3_+0x36C : 1e0ae08 >
 1e0a6ae:    20 69             	r0 = b[r4 + 18] (u)			  ## l2cap.c:407:44
 1e0a6b0:    80 e0 04 10       	if (r0 != 8) goto 8 <.GJTIE658_1_1_+0xEC : 1e0a6bc >			  ## l2cap.c:407:44
 1e0a6b4:    01 70             	r1 = 0			  ## l2cap.c:410:13
 1e0a6b6:    40 08             	r0 = r4			  ## l2cap.c:410:13
 1e0a6b8:    bf f3 59 f7       	call -4430 <l2cap_emit_credits : 1e0956e >			  ## l2cap.c:410:13
 1e0a6bc:    04 48             	r4 = [r4 + 0]
 1e0a6be:    f7 39             	if (r4 != 0) goto -18 <.GJTIE658_1_1_+0xDE : 1e0a6ae >
 1e0a6c0:    a3 1b             	goto 1862 <.GJTIE658_3_3_+0x36C : 1e0ae08 >
 1e0a6c2:    20 04             	r0 = r0.l (u)			  ## hci_vendor.c:1061:33
 1e0a6c4:    bf f3 20 eb       	call -10688 <le_hci_connection_for_handle : 1e07d08 >			  ## hci_vendor.c:1061:33
 1e0a6c8:    31 68             	r1 = b[r4 + 3] (u)			  ## hci_vendor.c:1063:22
 1e0a6ca:    26 68             	r6 = b[r4 + 2] (u)			  ## hci_vendor.c:1063:22
 1e0a6cc:    08 08             	r8 = r0			  ## hci_vendor.c:1061:33
 1e0a6ce:    14 20             	if (r0 == 0) goto 40 <.GJTIE658_1_1_+0x128 : 1e0a6f8 >
 1e0a6d0:    10 68             	r0 = b[r4 + 1] (u)			  ## hci_vendor.c:1062:21
 1e0a6d2:    d8 fd 40 61       	r6 <= insert(r1, p:8, l:24)			  ## hci_vendor.c:1063:22
 1e0a6d6:    82 fd 20 00       	r0 = uextra(r0, p:4, l:2)			  ## hci_vendor.c:1070:5
 1e0a6da:    85 fc ce 04       	r5 = r8 + 1230			  ## hci_vendor.c:1070:5
 1e0a6de:    20 e0 55 00       	if (r0 == 2) goto 170 <.GJTIE658_2_2_+0x64 : 1e0a78c >			  ## hci_vendor.c:1070:5
 1e0a6e2:    10 e0 09 10       	if (r0 != 1) goto 18 <.GJTIE658_1_1_+0x128 : 1e0a6f8 >
 1e0a6e6:    00 5a             	r0 = h[r5 + 0] (u)			  ## hci_vendor.c:1074:13
 1e0a6e8:    07 20             	if (r0 == 0) goto 14 <.GJTIE658_1_1_+0x128 : 1e0a6f8 >			  ## hci_vendor.c:1074:13
 1e0a6ea:    a2 05             	r2 = r6.l (u)			  ## hci_vendor.c:1078:43
 1e0a6ec:    81 b0             	r1 = r0 + r2			  ## hci_vendor.c:1078:41
 1e0a6ee:    03 ff 12 12 08 02 	if (r1 < 530) goto 1040 <.GJTIE658_3_3_+0x68 : 1e0ab04 >			  ## hci_vendor.c:1078:13
 1e0a6f4:    1a f7 00 50       	h[r5 + 0] = r10			  ## hci_vendor.c:1079:41
 1e0a6f8:    40 08             	r0 = r4
 1e0a6fa:    80 f3 27 9c       	call 79950 <ll_hci_private_free_dma_rx : 1e1df4c >
 1e0a6fe:    84 1b             	goto 1800 <.GJTIE658_3_3_+0x36C : 1e0ae08 >
 1e0a700:    10 fc cf ff       	r0 = r1 + -49
 1e0a704:    d0 e0 6c 83       	if (r0 > 13) goto 1752 <.GJTIE658_3_3_+0x344 : 1e0ade0 >
 1e0a708:    41 c0             	r1 = r0 << 1
 1e0a70a:    b1 00             	tbh [r1]


.GJTIL658_2_2_:
 1e0a70c:    0e 00     < 14 : 0xE >
 1e0a70e:    6a 03     < 874 : 0x36A >
 1e0a710:    96 01     < 406 : 0x196 >
 1e0a712:    9d 01     < 413 : 0x19D >
 1e0a714:    6a 03     < 874 : 0x36A >
 1e0a716:    a0 01     < 416 : 0x1A0 >
 1e0a718:    6a 03     < 874 : 0x36A >
 1e0a71a:    6a 03     < 874 : 0x36A >
 1e0a71c:    6a 03     < 874 : 0x36A >
 1e0a71e:    6a 03     < 874 : 0x36A >
 1e0a720:    ad 01     < 429 : 0x1AD >
 1e0a722:    6a 03     < 874 : 0x36A >
 1e0a724:    6a 03     < 874 : 0x36A >
 1e0a726:    b7 01     < 439 : 0x1B7 >
 1e0a728:    00 70             	r0 = 0			  ## hci_vendor.c:480:9
 1e0a72a:    12 73             	r2 = 49			  ## hci_vendor.c:480:9
 1e0a72c:    03 70             	r3 = 0			  ## hci_vendor.c:480:9
 1e0a72e:    c1 ff 00 49 43 48 	r1 = 1212369152 <uECC_vli_cmp_unsafe+0x32D904 : 434900 >			  ## hci_vendor.c:480:9
 1e0a734:    bf f3 fd ed       	call -9222 <bt_event_update_to_user : 1e08332 >			  ## hci_vendor.c:480:9
 1e0a738:    03 18             	goto 6 <.GJTIE658_2_2_+0x18 : 1e0a740 >			  ## hci_vendor.c:480:9
 1e0a73a:    30 70             	r0 = 3			  ## hci_vendor.c:483:13
 1e0a73c:    97 f3 3c e3       	call 3131000 <os_time_dly : 106db8 >			  ## hci_vendor.c:483:13
 1e0a740:    bf f3 2b f2       	call -7082 <get_is_in_background_flag : 1e08b9a >
 1e0a744:    fa 31             	if (r0 != 0) goto -12 <.GJTIE658_2_2_+0x12 : 1e0a73a >
 1e0a746:    a0 70             	r0 = 10			  ## hci_vendor.c:486:9
 1e0a748:    97 f3 36 e3       	call 3130988 <os_time_dly : 106db8 >			  ## hci_vendor.c:486:9
 1e0a74c:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >			  ## hci_vendor.c:486:9
 1e0a752:    03 08             	r3 = r0			  ## hci_vendor.c:486:9
 1e0a754:    40 67             	r0 = b[r3 + 20] (u)			  ## hci_vendor.c:490:71
 1e0a756:    31 67             	r1 = b[r3 + 19] (u)			  ## hci_vendor.c:490:71
 1e0a758:    22 67             	r2 = b[r3 + 18] (u)			  ## hci_vendor.c:490:71
 1e0a75a:    13 67             	r3 = b[r3 + 17] (u)			  ## hci_vendor.c:490:71
 1e0a75c:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_vendor.c:490:71
 1e0a760:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## hci_vendor.c:490:71
 1e0a764:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## hci_vendor.c:490:71
 1e0a768:    82 fd c0 03       	r0 = uextra(r3, p:24, l:2)			  ## hci_vendor.c:490:9
 1e0a76c:    82 fd d0 13       	r1 = uextra(r3, p:26, l:2)			  ## hci_vendor.c:490:9
 1e0a770:    1a d7             	r2 = r3 >> 28			  ## hci_vendor.c:491:110
 1e0a772:    80 f3 8b a0       	call 82198 <lmp_hci_io_capability_request_reply : 1e1e88c >			  ## hci_vendor.c:490:9
 1e0a776:    34 1b             	goto 1640 <.GJTIE658_3_3_+0x344 : 1e0ade0 >			  ## hci_vendor.c:490:9
 1e0a778:    e6 fd 00 08       	r0 = r8.l (u)
 1e0a77c:    c8 fd 40 57       	r5 <= insert(r7, p:8, l:8)			  ## hci_vendor.c:1020:22
 1e0a780:    50 e0 a0 81       	if (r0 > 5) goto 832 <.GJTIE658_3_3_+0x28 : 1e0aac4 >			  ## hci_vendor.c:1020:22
 1e0a784:    40 08             	r0 = r4
 1e0a786:    bf f3 f0 dd       	call -17440 <lmp_hci_private_free_acl_packet : 1e0636a >
 1e0a78a:    33 1b             	goto 1638 <.GJTIE658_3_3_+0x356 : 1e0adf2 >
 1e0a78c:    00 5a             	r0 = h[r5 + 0] (u)			  ## hci_vendor.c:1111:19
 1e0a78e:    02 20             	if (r0 == 0) goto 4 <.GJTIE658_2_2_+0x6C : 1e0a794 >			  ## hci_vendor.c:1111:19
 1e0a790:    1a f7 00 50       	h[r5 + 0] = r10			  ## hci_vendor.c:1112:41
 1e0a794:    50 68             	r0 = b[r4 + 5] (u)			  ## hci_vendor.c:1116:33
 1e0a796:    47 68             	r7 = b[r4 + 4] (u)			  ## hci_vendor.c:1116:33
 1e0a798:    d8 fd 40 70       	r7 <= insert(r0, p:8, l:24)			  ## hci_vendor.c:1116:33
 1e0a79c:    e0 05             	r0 = r7.l (u)			  ## hci_vendor.c:1120:27
 1e0a79e:    49 90             	r9 = r0 + 4			  ## hci_vendor.c:1120:40
 1e0a7a0:    a0 05             	r0 = r6.l (u)			  ## hci_vendor.c:1120:13
 1e0a7a2:    90 f2 a8 21       	if (r0 >= r9) goto 848 <.GJTIE658_3_3_+0x5A : 1e0aaf6 >			  ## hci_vendor.c:1120:13
 1e0a7a6:    03 ff 0e 02 f1 01 	if (r0 < 526) goto 994 <.GJTIE658_3_3_+0xF2 : 1e0ab8e >			  ## hci_vendor.c:1135:17
 1e0a7ac:    40 08             	r0 = r4			  ## hci_vendor.c:1136:17
 1e0a7ae:    80 f3 cd 9b       	call 79770 <ll_hci_private_free_dma_rx : 1e1df4c >			  ## hci_vendor.c:1136:17
 1e0a7b2:    c9 ff ff ff bf ff 	r9 = 4290772991 <uECC_vli_cmp_unsafe+0x1AF9003 : 1bfffff >			  ## hci_vendor.c:1136:17
 1e0a7b8:    27 1b             	goto 1614 <.GJTIE658_3_3_+0x36C : 1e0ae08 >			  ## hci_vendor.c:1136:17
 1e0a7ba:    c0 f5 2b 00       	r0 = b[sp+43] (u)			  ## hci_vendor.c:572:14
 1e0a7be:    14 20             	if (r0 == 0) goto 40 <.GJTIE658_2_2_+0xC0 : 1e0a7e8 >			  ## hci_vendor.c:572:14
 1e0a7c0:    20 e0 27 02       	if (r0 == 2) goto 1102 <.GJTIE658_3_3_+0x176 : 1e0ac12 >
 1e0a7c4:    10 e0 28 12       	if (r0 != 1) goto 1104 <.GJTIE658_3_3_+0x17C : 1e0ac18 >
 1e0a7c8:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >
 1e0a7ce:    03 08             	r3 = r0
 1e0a7d0:    40 67             	r0 = b[r3 + 20] (u)			  ## hci_vendor.c:579:37
 1e0a7d2:    31 67             	r1 = b[r3 + 19] (u)			  ## hci_vendor.c:579:37
 1e0a7d4:    22 67             	r2 = b[r3 + 18] (u)			  ## hci_vendor.c:579:37
 1e0a7d6:    13 67             	r3 = b[r3 + 17] (u)			  ## hci_vendor.c:579:37
 1e0a7d8:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_vendor.c:579:37
 1e0a7dc:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## hci_vendor.c:579:37
 1e0a7e0:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## hci_vendor.c:579:37
 1e0a7e4:    34 f3 ab 32       	if ((r3 & 1048576) != 0) goto 1366 <.GJTIE658_3_3_+0x2A2 : 1e0ad3e >			  ## hci_vendor.c:579:37
 1e0a7e8:    10 70             	r0 = 1
 1e0a7ea:    80 f3 6e a0       	call 82140 <lmp_hci_accept_connection_request : 1e1e8ca >
 1e0a7ee:    f8 1a             	goto 1520 <.GJTIE658_3_3_+0x344 : 1e0ade0 >
 1e0a7f0:    c1 f5 24 00       	r1 = b[sp+36] (u)			  ## hci_vendor.c:790:18
 1e0a7f4:    c7 f5 23 00       	r7 = b[sp+35] (u)			  ## hci_vendor.c:790:18
 1e0a7f8:    c0 f5 22 00       	r0 = b[sp+34] (u)			  ## hci_vendor.c:790:18
 1e0a7fc:    d8 fd 40 71       	r7 <= insert(r1, p:8, l:24)			  ## hci_vendor.c:790:18
 1e0a800:    e4 05             	r4 = r7.l (u)			  ## hci_vendor.c:790:18
 1e0a802:    f4 e4 97 81       	if (r4 > 79) goto 814 <.GJTIE658_3_3_+0x98 : 1e0ab34 >			  ## hci_vendor.c:794:13
 1e0a806:    c1 f5 26 00       	r1 = b[sp+38] (u)			  ## hci_vendor.c:788:21
 1e0a80a:    c2 f5 25 00       	r2 = b[sp+37] (u)			  ## hci_vendor.c:787:21
 1e0a80e:    00 e0 e7 12       	if (r0 != 0) goto 1486 <.GJTIE658_3_3_+0x344 : 1e0ade0 >			  ## hci_vendor.c:787:21
 1e0a812:    d0 76             	r0 = 109			  ## hci_vendor.c:215:14
 1e0a814:    d0 f5 16 01       	b[sp+278] = r0			  ## hci_vendor.c:215:14
 1e0a818:    80 70             	r0 = 8			  ## hci_vendor.c:216:14
 1e0a81a:    d0 f5 17 01       	b[sp+279] = r0			  ## hci_vendor.c:216:14
 1e0a81e:    d2 f5 18 01       	b[sp+280] = r2			  ## hci_vendor.c:217:14
 1e0a822:    d1 f5 19 01       	b[sp+281] = r1			  ## hci_vendor.c:218:14
 1e0a826:    62 70             	r2 = 6			  ## utils.c:188:5
 1e0a828:    10 02             	r0 = [sp+4]			  ## utils.c:188:5
 1e0a82a:    01 02             	r1 = [sp]			  ## utils.c:188:5
 1e0a82c:    97 f3 5a e3       	call 3131060 <memcpy : 106ee4 >			  ## utils.c:188:5
 1e0a830:    e1 fb 16 01       	r1 = sp + 278			  ## utils.c:188:5
 1e0a834:    40 70             	r0 = 4			  ## hci_vendor.c:220:5
 1e0a836:    a2 70             	r2 = 10			  ## hci_vendor.c:220:5
 1e0a838:    bf f3 50 fa       	call -2912 <l2cap_packet_handler : 1e09cdc >			  ## hci_vendor.c:220:5
 1e0a83c:    d1 1a             	goto 1442 <.GJTIE658_3_3_+0x344 : 1e0ade0 >			  ## hci_vendor.c:220:5
 1e0a83e:    c0 f5 24 00       	r0 = b[sp+36] (u)
 1e0a842:    c4 f5 23 00       	r4 = b[sp+35] (u)
 1e0a846:    c1 f5 22 00       	r1 = b[sp+34] (u)			  ## hci_vendor.c:451:13
 1e0a84a:    d8 fd 40 40       	r4 <= insert(r0, p:8, l:24)			  ## hci_vendor.c:451:13
 1e0a84e:    01 e0 b5 01       	if (r1 == 0) goto 874 <.GJTIE658_3_3_+0x120 : 1e0abbc >			  ## hci_vendor.c:451:13
 1e0a852:    25 05             	r5 = r4.l (u)			  ## hci_vendor.c:455:56
 1e0a854:    50 08             	r0 = r5			  ## hci_vendor.c:455:20
 1e0a856:    80 f3 86 9f       	call 81676 <lmp_private_remote_addr_for_handler : 1e1e766 >			  ## hci_vendor.c:455:20
 1e0a85a:    c1 ff 90 09 00 00 	r1 = 2448 <stack_configs_app : 990 >			  ## hci_vendor.c:455:20
 1e0a860:    17 08             	r7 = r1			  ## hci_vendor.c:455:20
 1e0a862:    41 6f             	r1 = b[r7 + 20] (u)			  ## hci_vendor.c:160:32
 1e0a864:    32 6f             	r2 = b[r7 + 19] (u)			  ## hci_vendor.c:160:32
 1e0a866:    23 6f             	r3 = b[r7 + 18] (u)			  ## hci_vendor.c:160:32
 1e0a868:    16 6f             	r6 = b[r7 + 17] (u)			  ## hci_vendor.c:160:32
 1e0a86a:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## hci_vendor.c:160:32
 1e0a86e:    51 6f             	r1 = b[r7 + 21] (u)			  ## hci_vendor.c:160:32
 1e0a870:    c8 fd 40 63       	r6 <= insert(r3, p:8, l:8)			  ## hci_vendor.c:160:32
 1e0a874:    d0 fd 80 62       	r6 <= insert(r2, p:16, l:16)			  ## hci_vendor.c:160:32
 1e0a878:    b2 d1             	r2 = r6 >> 6			  ## hci_vendor.c:160:69
 1e0a87a:    c6 fd d0 21       	r2 <= insert(r1, p:26, l:6)			  ## hci_vendor.c:160:69
 1e0a87e:    33 d5             	r3 = r6 >> 20			  ## hci_vendor.c:160:32
 1e0a880:    c8 fd 60 31       	r3 <= insert(r1, p:12, l:8)			  ## hci_vendor.c:160:32
 1e0a884:    e0 fd 20 13       	r1 = r3 | r2			  ## hci_vendor.c:160:47
 1e0a888:    21 fd 01 19       	r1 = r1 & 1			  ## hci_vendor.c:458:17
 1e0a88c:    bf f3 42 f1       	call -7548 <delete_link_key : 1e08b14 >			  ## hci_vendor.c:458:17
 1e0a890:    c0 f5 22 00       	r0 = b[sp+34] (u)			  ## hci_vendor.c:461:17
 1e0a894:    60 e0 a0 02       	if (r0 == 6) goto 1344 <.GJTIE658_3_3_+0x33C : 1e0add8 >			  ## hci_vendor.c:461:17
 1e0a898:    51 70             	r1 = 5			  ## hci_vendor.c:464:17
 1e0a89a:    50 08             	r0 = r5			  ## hci_vendor.c:464:17
 1e0a89c:    80 f3 ba 9f       	call 81780 <lmp_hci_disconnect : 1e1e814 >			  ## hci_vendor.c:464:17
 1e0a8a0:    9b 1a             	goto 1334 <.GJTIE658_3_3_+0x33C : 1e0add8 >			  ## hci_vendor.c:464:17
 1e0a8a2:    c0 f5 24 00       	r0 = b[sp+36] (u)			  ## hci_vendor.c:470:18
 1e0a8a6:    c4 f5 23 00       	r4 = b[sp+35] (u)			  ## hci_vendor.c:470:18
 1e0a8aa:    d8 fd 40 40       	r4 <= insert(r0, p:8, l:24)			  ## hci_vendor.c:470:18
 1e0a8ae:    94 1a             	goto 1320 <.GJTIE658_3_3_+0x33C : 1e0add8 >			  ## hci_vendor.c:470:18
 1e0a8b0:    c0 f5 22 00       	r0 = b[sp+34] (u)			  ## hci_vendor.c:539:29
 1e0a8b4:    00 e0 94 02       	if (r0 == 0) goto 1320 <.GJTIE658_3_3_+0x344 : 1e0ade0 >			  ## hci_vendor.c:539:29
 1e0a8b8:    35 70             	r5 = 3
 1e0a8ba:    06 70             	r6 = 0
 1e0a8bc:    f0 08             	r0 = r15			  ## hci_vendor.c:540:26
 1e0a8be:    51 08             	r1 = r5			  ## hci_vendor.c:540:26
 1e0a8c0:    bf f3 fd e9       	call -11270 <little_endian_read_16 : 1e07cbe >			  ## hci_vendor.c:540:26
 1e0a8c4:    04 08             	r4 = r0			  ## hci_vendor.c:540:26
 1e0a8c6:    04 e5 13 30       	if (r4 < 80) goto 38 <.GJTIE658_2_2_+0x1C8 : 1e0a8f0 >			  ## hci_vendor.c:540:26
 1e0a8ca:    21 9a             	r1 = r5 + 2			  ## hci_vendor.c:546:24
 1e0a8cc:    f0 08             	r0 = r15			  ## hci_vendor.c:547:40
 1e0a8ce:    bf f3 f6 e9       	call -11284 <little_endian_read_16 : 1e07cbe >			  ## hci_vendor.c:547:40
 1e0a8d2:    07 08             	r7 = r0			  ## hci_vendor.c:547:40
 1e0a8d4:    45 80             	r5 += 4			  ## hci_vendor.c:548:24
 1e0a8d6:    40 08             	r0 = r4			  ## hci_vendor.c:550:45
 1e0a8d8:    bf f3 16 ea       	call -11220 <le_hci_connection_for_handle : 1e07d08 >			  ## hci_vendor.c:550:45
 1e0a8dc:    09 20             	if (r0 == 0) goto 18 <.GJTIE658_2_2_+0x1C8 : 1e0a8f0 >
 1e0a8de:    03 f9 d2 04       	r3 = b[r0 + 1234] (u)			  ## hci_vendor.c:555:21
 1e0a8e2:    e2 b7             	r2 = r3 - r7			  ## hci_vendor.c:557:48
 1e0a8e4:    01 70             	r1 = 0			  ## hci_vendor.c:555:21
 1e0a8e6:    73 f2 01 30       	if (r3 < r7) goto 2 <.GJTIE658_2_2_+0x1C4 : 1e0a8ec >			  ## hci_vendor.c:555:21
 1e0a8ea:    21 08             	r1 = r2			  ## hci_vendor.c:555:21
 1e0a8ec:    11 f9 d2 04       	b[r0 + 1234] = r1			  ## hci_vendor.c:557:48
 1e0a8f0:    c0 f5 22 00       	r0 = b[sp+34] (u)			  ## hci_vendor.c:539:29
 1e0a8f4:    16 80             	r6 += 1			  ## hci_vendor.c:539:41
 1e0a8f6:    06 f2 e1 bf       	ifs (r6 < r0) goto -62 <.GJTIE658_2_2_+0x194 : 1e0a8bc >
 1e0a8fa:    6e 1a             	goto 1244 <.GJTIE658_3_3_+0x33C : 1e0add8 >
 1e0a8fc:    c0 f5 24 00       	r0 = b[sp+36] (u)			  ## hci_vendor.c:431:18
 1e0a900:    c4 f5 23 00       	r4 = b[sp+35] (u)			  ## hci_vendor.c:431:18
 1e0a904:    d8 fd 40 40       	r4 <= insert(r0, p:8, l:24)			  ## hci_vendor.c:431:18
 1e0a908:    20 05             	r0 = r4.l (u)			  ## hci_vendor.c:432:52
 1e0a90a:    80 f3 2c 9f       	call 81496 <lmp_private_remote_addr_for_handler : 1e1e766 >			  ## hci_vendor.c:432:16
 1e0a90e:    c1 f5 25 00       	r1 = b[sp+37] (u)			  ## hci_vendor.c:433:13
 1e0a912:    01 e0 76 01       	if (r1 == 0) goto 748 <.GJTIE658_3_3_+0x166 : 1e0ac02 >			  ## hci_vendor.c:433:13
 1e0a916:    21 e0 5f 12       	if (r1 != 2) goto 1214 <.GJTIE658_3_3_+0x33C : 1e0add8 >
 1e0a91a:    02 72             	r2 = 32			  ## hci_vendor.c:437:13
 1e0a91c:    23 70             	r3 = 2			  ## hci_vendor.c:437:13
 1e0a91e:    73 19             	goto 742 <.GJTIE658_3_3_+0x16A : 1e0ac06 >			  ## hci_vendor.c:437:13
 1e0a920:    00 70             	r0 = 0			  ## hci_vendor.c:728:9
 1e0a922:    62 71             	r2 = 22			  ## hci_vendor.c:728:9
 1e0a924:    03 70             	r3 = 0			  ## hci_vendor.c:728:9
 1e0a926:    c1 ff 00 49 43 48 	r1 = 1212369152 <uECC_vli_cmp_unsafe+0x32D904 : 434900 >			  ## hci_vendor.c:728:9
 1e0a92c:    bf f3 01 ed       	call -9726 <bt_event_update_to_user : 1e08332 >			  ## hci_vendor.c:728:9
 1e0a930:    03 18             	goto 6 <.GJTIE658_2_2_+0x210 : 1e0a938 >			  ## hci_vendor.c:728:9
 1e0a932:    30 70             	r0 = 3			  ## hci_vendor.c:731:13
 1e0a934:    97 f3 40 e2       	call 3130496 <os_time_dly : 106db8 >			  ## hci_vendor.c:731:13
 1e0a938:    bf f3 2f f1       	call -7586 <get_is_in_background_flag : 1e08b9a >
 1e0a93c:    fa 31             	if (r0 != 0) goto -12 <.GJTIE658_2_2_+0x20A : 1e0a932 >
 1e0a93e:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >
 1e0a944:    04 08             	r4 = r0
 1e0a946:    40 69             	r0 = b[r4 + 20] (u)			  ## hci_vendor.c:160:32
 1e0a948:    31 69             	r1 = b[r4 + 19] (u)			  ## hci_vendor.c:160:32
 1e0a94a:    22 69             	r2 = b[r4 + 18] (u)			  ## hci_vendor.c:160:32
 1e0a94c:    13 69             	r3 = b[r4 + 17] (u)			  ## hci_vendor.c:160:32
 1e0a94e:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_vendor.c:160:32
 1e0a952:    50 69             	r0 = b[r4 + 21] (u)			  ## hci_vendor.c:160:32
 1e0a954:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## hci_vendor.c:160:32
 1e0a958:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## hci_vendor.c:160:32
 1e0a95c:    99 d1             	r1 = r3 >> 6			  ## hci_vendor.c:160:69
 1e0a95e:    c6 fd d0 10       	r1 <= insert(r0, p:26, l:6)			  ## hci_vendor.c:160:69
 1e0a962:    1a d5             	r2 = r3 >> 20			  ## hci_vendor.c:160:32
 1e0a964:    c8 fd 60 20       	r2 <= insert(r0, p:12, l:8)			  ## hci_vendor.c:160:32
 1e0a968:    e0 fd 10 02       	r0 = r2 | r1			  ## hci_vendor.c:160:47
 1e0a96c:    21 fd 01 09       	r1 = r0 & 1			  ## hci_vendor.c:736:9
 1e0a970:    c0 08             	r0 = r12			  ## hci_vendor.c:736:9
 1e0a972:    bf f3 cf f0       	call -7778 <delete_link_key : 1e08b14 >			  ## hci_vendor.c:736:9
 1e0a976:    80 f3 b2 9f       	call 81764 <lmp_hci_pin_code_request_reply : 1e1e8de >			  ## hci_vendor.c:745:13
 1e0a97a:    32 1a             	goto 1124 <.GJTIE658_3_3_+0x344 : 1e0ade0 >			  ## hci_vendor.c:745:13
 1e0a97c:    c5 ff 90 09 00 00 	r5 = 2448 <stack_configs_app : 990 >
 1e0a982:    40 6b             	r0 = b[r5 + 20] (u)			  ## hci_vendor.c:160:32
 1e0a984:    31 6b             	r1 = b[r5 + 19] (u)			  ## hci_vendor.c:160:32
 1e0a986:    22 6b             	r2 = b[r5 + 18] (u)			  ## hci_vendor.c:160:32
 1e0a988:    13 6b             	r3 = b[r5 + 17] (u)			  ## hci_vendor.c:160:32
 1e0a98a:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_vendor.c:160:32
 1e0a98e:    50 6b             	r0 = b[r5 + 21] (u)			  ## hci_vendor.c:160:32
 1e0a990:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## hci_vendor.c:160:32
 1e0a994:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## hci_vendor.c:160:32
 1e0a998:    99 d1             	r1 = r3 >> 6			  ## hci_vendor.c:160:69
 1e0a99a:    c6 fd d0 10       	r1 <= insert(r0, p:26, l:6)			  ## hci_vendor.c:160:69
 1e0a99e:    1a d5             	r2 = r3 >> 20			  ## hci_vendor.c:160:32
 1e0a9a0:    c8 fd 60 20       	r2 <= insert(r0, p:12, l:8)			  ## hci_vendor.c:160:32
 1e0a9a4:    e0 fd 10 02       	r0 = r2 | r1			  ## hci_vendor.c:160:47
 1e0a9a8:    22 fd 01 09       	r2 = r0 & 1			  ## hci_vendor.c:701:32
 1e0a9ac:    c1 a9             	r1 = sp + 156			  ## hci_vendor.c:701:32
 1e0a9ae:    c0 08             	r0 = r12			  ## hci_vendor.c:701:32
 1e0a9b0:    bf f3 68 f1       	call -7472 <get_link_key : 1e08c84 >			  ## hci_vendor.c:701:32
 1e0a9b4:    41 6b             	r1 = b[r5 + 20] (u)			  ## hci_vendor.c:160:32
 1e0a9b6:    32 6b             	r2 = b[r5 + 19] (u)			  ## hci_vendor.c:160:32
 1e0a9b8:    23 6b             	r3 = b[r5 + 18] (u)			  ## hci_vendor.c:160:32
 1e0a9ba:    14 6b             	r4 = b[r5 + 17] (u)			  ## hci_vendor.c:160:32
 1e0a9bc:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## hci_vendor.c:160:32
 1e0a9c0:    51 6b             	r1 = b[r5 + 21] (u)			  ## hci_vendor.c:160:32
 1e0a9c2:    c8 fd 40 43       	r4 <= insert(r3, p:8, l:8)			  ## hci_vendor.c:160:32
 1e0a9c6:    d0 fd 80 42       	r4 <= insert(r2, p:16, l:16)			  ## hci_vendor.c:160:32
 1e0a9ca:    a2 d1             	r2 = r4 >> 6			  ## hci_vendor.c:160:69
 1e0a9cc:    c6 fd d0 21       	r2 <= insert(r1, p:26, l:6)			  ## hci_vendor.c:160:69
 1e0a9d0:    23 d5             	r3 = r4 >> 20			  ## hci_vendor.c:160:32
 1e0a9d2:    c8 fd 60 31       	r3 <= insert(r1, p:12, l:8)			  ## hci_vendor.c:160:32
 1e0a9d6:    e0 fd 20 13       	r1 = r3 | r2			  ## hci_vendor.c:160:47
 1e0a9da:    22 fd 01 19       	r2 = r1 & 1			  ## remote_device_db.c:221:10
 1e0a9de:    04 08             	r4 = r0			  ## hci_vendor.c:701:32
 1e0a9e0:    40 af             	r0 = sp + 244
 1e0a9e2:    c1 08             	r1 = r12			  ## remote_device_db.c:221:10
 1e0a9e4:    bf f3 22 f1       	call -7612 <get_database : 1e08c2c >			  ## remote_device_db.c:221:10
 1e0a9e8:    31 70             	r1 = 3			  ## hci_vendor.c:703:62
 1e0a9ea:    02 20             	if (r0 == 0) goto 4 <.GJTIE658_2_2_+0x2C8 : 1e0a9f0 >			  ## hci_vendor.c:703:62
 1e0a9ec:    c1 f5 fc 00       	r1 = b[sp+252] (u)			  ## hci_vendor.c:703:62
 1e0a9f0:    50 08             	r0 = r5			  ## hci_vendor.c:703:60
 1e0a9f2:    69 50             	h[r0 + 12] = r1			  ## hci_vendor.c:703:60
 1e0a9f4:    e6 28             	if (r4 == 0) goto 460 <.GJTIE658_3_3_+0x126 : 1e0abc2 >			  ## hci_vendor.c:707:17
 1e0a9f6:    80 f3 6e 9f       	call 81628 <lmp_hci_link_key_request_reply : 1e1e8d6 >			  ## hci_vendor.c:710:17
 1e0a9fa:    06 1a             	goto 1036 <.GJTIE658_3_3_+0x36C : 1e0ae08 >			  ## hci_vendor.c:710:17
 1e0a9fc:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >
 1e0aa02:    04 08             	r4 = r0
 1e0aa04:    40 69             	r0 = b[r4 + 20] (u)			  ## hci_vendor.c:160:32
 1e0aa06:    31 69             	r1 = b[r4 + 19] (u)			  ## hci_vendor.c:160:32
 1e0aa08:    22 69             	r2 = b[r4 + 18] (u)			  ## hci_vendor.c:160:32
 1e0aa0a:    13 69             	r3 = b[r4 + 17] (u)			  ## hci_vendor.c:160:32
 1e0aa0c:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_vendor.c:160:32
 1e0aa10:    50 69             	r0 = b[r4 + 21] (u)			  ## hci_vendor.c:160:32
 1e0aa12:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## hci_vendor.c:160:32
 1e0aa16:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## hci_vendor.c:160:32
 1e0aa1a:    99 d1             	r1 = r3 >> 6			  ## hci_vendor.c:160:69
 1e0aa1c:    c6 fd d0 10       	r1 <= insert(r0, p:26, l:6)			  ## hci_vendor.c:160:69
 1e0aa20:    1a d5             	r2 = r3 >> 20			  ## hci_vendor.c:160:32
 1e0aa22:    c8 fd 60 20       	r2 <= insert(r0, p:12, l:8)			  ## hci_vendor.c:160:32
 1e0aa26:    e0 fd 10 02       	r0 = r2 | r1			  ## hci_vendor.c:160:47
 1e0aa2a:    22 fd 01 09       	r2 = r0 & 1			  ## hci_vendor.c:721:9
 1e0aa2e:    c0 08             	r0 = r12			  ## hci_vendor.c:721:9
 1e0aa30:    b1 08             	r1 = r11			  ## hci_vendor.c:721:9
 1e0aa32:    bf f3 a4 f2       	call -6840 <put_link_key : 1e08f7e >			  ## hci_vendor.c:721:9
 1e0aa36:    d4 19             	goto 936 <.GJTIE658_3_3_+0x344 : 1e0ade0 >			  ## hci_vendor.c:721:9
 1e0aa38:    81 70             	r1 = 8			  ## hci_vendor.c:497:18
 1e0aa3a:    f0 08             	r0 = r15			  ## hci_vendor.c:497:18
 1e0aa3c:    bf f3 bb f0       	call -7818 <little_endian_read_32 : 1e08bb6 >			  ## hci_vendor.c:497:18
 1e0aa40:    03 08             	r3 = r0			  ## hci_vendor.c:497:18
 1e0aa42:    32 73             	r2 = 51			  ## hci_vendor.c:499:9
 1e0aa44:    13 18             	goto 38 <.GJTIE658_2_2_+0x344 : 1e0aa6c >			  ## hci_vendor.c:499:9
 1e0aa46:    42 73             	r2 = 52			  ## hci_vendor.c:505:9
 1e0aa48:    03 70             	r3 = 0			  ## hci_vendor.c:505:9
 1e0aa4a:    10 18             	goto 32 <.GJTIE658_2_2_+0x344 : 1e0aa6c >			  ## hci_vendor.c:505:9
 1e0aa4c:    11 70             	r1 = 1			  ## hci_vendor.c:123:12
 1e0aa4e:    d0 08             	r0 = r13			  ## hci_vendor.c:123:12
 1e0aa50:    80 f3 1e 9f       	call 81468 <lmp_private_handler_for_remote_addr : 1e1e890 >			  ## hci_vendor.c:123:12
 1e0aa54:    c1 f5 22 00       	r1 = b[sp+34] (u)			  ## hci_vendor.c:518:13
 1e0aa58:    04 08             	r4 = r0			  ## hci_vendor.c:123:12
 1e0aa5a:    01 e0 bd 01       	if (r1 == 0) goto 890 <.GJTIE658_3_3_+0x33C : 1e0add8 >			  ## hci_vendor.c:123:12
 1e0aa5e:    51 70             	r1 = 5			  ## hci_vendor.c:519:13
 1e0aa60:    80 f3 d8 9e       	call 81328 <lmp_hci_disconnect : 1e1e814 >			  ## hci_vendor.c:519:13
 1e0aa64:    b9 19             	goto 882 <.GJTIE658_3_3_+0x33C : 1e0add8 >			  ## hci_vendor.c:519:13
 1e0aa66:    c3 f5 23 00       	r3 = b[sp+35] (u)			  ## hci_vendor.c:511:80
 1e0aa6a:    b2 73             	r2 = 59			  ## hci_vendor.c:511:9
 1e0aa6c:    c0 08             	r0 = r12
 1e0aa6e:    c1 ff 00 49 43 48 	r1 = 1212369152 <uECC_vli_cmp_unsafe+0x32D904 : 434900 >
 1e0aa74:    bf f3 5d ec       	call -10054 <bt_event_update_to_user : 1e08332 >
 1e0aa78:    b3 19             	goto 870 <.GJTIE658_3_3_+0x344 : 1e0ade0 >
 1e0aa7a:    c0 f5 22 00       	r0 = b[sp+34] (u)
 1e0aa7e:    f0 8f             	r0 += -1			  ## hci_vendor.c:847:13
 1e0aa80:    90 e0 19 80       	if (r0 > 9) goto 50 <.GJTIE658_3_3_+0x1A : 1e0aab6 >			  ## hci_vendor.c:847:13
 1e0aa84:    41 c0             	r1 = r0 << 1
 1e0aa86:    b1 00             	tbh [r1]


.GJTIL658_3_3_:
 1e0aa88:    0a 00     < 10 : 0xA >
 1e0aa8a:    cb 00     < 203 : 0xCB >
 1e0aa8c:    32 01     < 306 : 0x132 >
 1e0aa8e:    17 00     < 23 : 0x17 >
 1e0aa90:    17 00     < 23 : 0x17 >
 1e0aa92:    17 00     < 23 : 0x17 >
 1e0aa94:    17 00     < 23 : 0x17 >
 1e0aa96:    17 00     < 23 : 0x17 >
 1e0aa98:    17 00     < 23 : 0x17 >
 1e0aa9a:    47 01     < 327 : 0x147 >
 1e0aa9c:    c4 f5 27 00       	r4 = b[sp+39] (u)			  ## hci_vendor.c:901:29
 1e0aaa0:    b0 08             	r0 = r11			  ## hci_vendor.c:903:24
 1e0aaa2:    41 08             	r1 = r4			  ## hci_vendor.c:903:24
 1e0aaa4:    ab 14             	call -1706 <le_hci_connection_for_bd_addr_and_type : 1e0a3fc >			  ## hci_vendor.c:903:24
 1e0aaa6:    c1 f5 23 00       	r1 = b[sp+35] (u)			  ## hci_vendor.c:910:21
 1e0aaaa:    05 08             	r5 = r0			  ## hci_vendor.c:903:24
 1e0aaac:    01 e0 4b 01       	if (r1 == 0) goto 662 <.GJTIE658_3_3_+0x2AA : 1e0ad46 >			  ## hci_vendor.c:910:21
 1e0aab0:    05 e0 3e 01       	if (r5 == 0) goto 636 <.GJTIE658_3_3_+0x294 : 1e0ad30 >
 1e0aab4:    3b 19             	goto 630 <.GJTIE658_3_3_+0x290 : 1e0ad2c >
 1e0aab6:    c0 f5 21 00       	r0 = b[sp+33] (u)
 1e0aaba:    11 90             	r1 = r0 + 1
 1e0aabc:    f0 08             	r0 = r15
 1e0aabe:    bf f3 86 f0       	call -7924 <le_hci_emit_event : 1e08bce >
 1e0aac2:    a2 19             	goto 836 <.GJTIE658_3_3_+0x36C : 1e0ae08 >
 1e0aac4:    50 68             	r0 = b[r4 + 5] (u)			  ## hci_vendor.c:1039:24
 1e0aac6:    41 68             	r1 = b[r4 + 4] (u)			  ## hci_vendor.c:1039:24
 1e0aac8:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_vendor.c:1039:24
 1e0aacc:    40 92             	r0 = r1 + 4			  ## hci_vendor.c:1042:40
 1e0aace:    05 f2 90 31       	if (r5 < r0) goto 800 <.GJTIE658_3_3_+0x356 : 1e0adf2 >			  ## hci_vendor.c:1042:40
 1e0aad2:    40 9a             	r0 = r5 + 4			  ## hci_vendor.c:1043:74
 1e0aad4:    22 04             	r2 = r0.l (u)			  ## hci_vendor.c:1043:13
 1e0aad6:    20 70             	r0 = 2			  ## hci_vendor.c:1043:13
 1e0aad8:    41 08             	r1 = r4			  ## hci_vendor.c:1043:13
 1e0aada:    bf f3 ff f8       	call -3586 <l2cap_packet_handler : 1e09cdc >			  ## hci_vendor.c:1043:13
 1e0aade:    97 f3 5d e1       	call 3130042 <local_irq_disable : 106d9c >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:192:5
 1e0aae2:    00 f7 ee 4f       	r0 = h[r4 + -18] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:193:14
 1e0aae6:    24 f3 03 00       	if ((r0 & 16) != 0) goto 6 <.GJTIE658_3_3_+0x54 : 1e0aaf0 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:193:14
 1e0aaea:    90 b1             	r0 |= 8			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:194:20
 1e0aaec:    10 f7 ee 4f       	h[r4 + -18] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:194:20
 1e0aaf0:    97 f3 52 e1       	call 3130020 <local_irq_enable : 106d98 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:196:5
 1e0aaf4:    7e 19             	goto 764 <.GJTIE658_3_3_+0x356 : 1e0adf2 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:196:5
 1e0aaf6:    40 9c             	r0 = r6 + 4			  ## hci_vendor.c:1132:74
 1e0aaf8:    22 04             	r2 = r0.l (u)			  ## hci_vendor.c:1132:13
 1e0aafa:    20 70             	r0 = 2			  ## hci_vendor.c:1132:13
 1e0aafc:    41 08             	r1 = r4			  ## hci_vendor.c:1132:13
 1e0aafe:    bf f3 ed f8       	call -3622 <l2cap_packet_handler : 1e09cdc >			  ## hci_vendor.c:1132:13
 1e0ab02:    55 18             	goto 170 <.GJTIE658_3_3_+0x112 : 1e0abae >			  ## hci_vendor.c:1132:13
 1e0ab04:    80 09             	r0 += r8			  ## hci_vendor.c:1087:17
 1e0ab06:    00 fc bc 02       	r0 = r0 + 700			  ## hci_vendor.c:1087:17
 1e0ab0a:    41 98             	r1 = r4 + 4			  ## hci_vendor.c:1087:79
 1e0ab0c:    97 f3 ea e1       	call 3130324 <memcpy : 106ee4 >			  ## hci_vendor.c:1087:9
 1e0ab10:    00 5a             	r0 = h[r5 + 0] (u)			  ## hci_vendor.c:1088:37
 1e0ab12:    60 09             	r0 += r6			  ## hci_vendor.c:1088:37
 1e0ab14:    08 5a             	h[r5 + 0] = r0			  ## hci_vendor.c:1088:37
 1e0ab16:    11 5a             	r1 = h[r5 + 2] (u)			  ## hci_vendor.c:1091:44
 1e0ab18:    22 04             	r2 = r0.l (u)			  ## hci_vendor.c:1091:13
 1e0ab1a:    80 92             	r0 = r1 + 8			  ## hci_vendor.c:1091:79
 1e0ab1c:    02 f2 4a 30       	if (r2 < r0) goto 148 <.GJTIE658_3_3_+0x118 : 1e0abb4 >			  ## hci_vendor.c:1091:79
 1e0ab20:    81 fc bc 02       	r1 = r8 + 700			  ## hci_vendor.c:1100:56
 1e0ab24:    20 70             	r0 = 2			  ## hci_vendor.c:1100:13
 1e0ab26:    bf f3 d9 f8       	call -3662 <l2cap_packet_handler : 1e09cdc >			  ## hci_vendor.c:1100:13
 1e0ab2a:    1a f7 02 50       	h[r5 + 2] = r10			  ## hci_vendor.c:1102:44
 1e0ab2e:    1a f7 00 50       	h[r5 + 0] = r10			  ## hci_vendor.c:1103:41
 1e0ab32:    40 18             	goto 128 <.GJTIE658_3_3_+0x118 : 1e0abb4 >			  ## hci_vendor.c:1103:41
 1e0ab34:    00 e0 60 11       	if (r0 != 0) goto 704 <.GJTIE658_3_3_+0x35C : 1e0adf8 >
 1e0ab38:    c5 ff 60 18 00 00 	r5 = 6240 <report_irq_stack_end : 1860 >
 1e0ab3e:    00 f7 18 52       	r0 = h[r5 + 536] (u)			  ## hci_vendor.c:821:34
 1e0ab42:    06 20             	if (r0 == 0) goto 12 <.GJTIE658_3_3_+0xB4 : 1e0ab50 >			  ## hci_vendor.c:821:34
 1e0ab44:    50 fc 15 02       	r0 = r5 + 533			  ## hci_vendor.c:823:56
 1e0ab48:    01 70             	r1 = 0			  ## hci_vendor.c:823:56
 1e0ab4a:    52 70             	r2 = 5			  ## hci_vendor.c:823:56
 1e0ab4c:    97 f3 d0 e1       	call 3130272 <memset : 106ef0 >			  ## hci_vendor.c:823:56
 1e0ab50:    c0 f5 21 00       	r0 = b[sp+33] (u)			  ## hci_vendor.c:827:43
 1e0ab54:    11 90             	r1 = r0 + 1			  ## hci_vendor.c:827:53
 1e0ab56:    f0 08             	r0 = r15			  ## hci_vendor.c:827:17
 1e0ab58:    bf f3 39 f0       	call -8078 <le_hci_emit_event : 1e08bce >			  ## hci_vendor.c:827:17
 1e0ab5c:    00 4a             	r0 = [r5 + 0]			  ## btstack_linked_list.c:163:16
 1e0ab5e:    1a f5 ac 00       	[sp+172] = r10			  ## btstack_linked_list.c:161:25
 1e0ab62:    15 f5 b0 00       	[sp+176] = r5			  ## btstack_linked_list.c:162:14
 1e0ab66:    10 f5 b4 00       	[sp+180] = r0			  ## btstack_linked_list.c:163:14
 1e0ab6a:    0c 18             	goto 24 <.GJTIE658_3_3_+0xE8 : 1e0ab84 >			  ## btstack_linked_list.c:163:14
 1e0ab6c:    c0 aa             	r0 = sp + 172
 1e0ab6e:    bf f3 bb e8       	call -11914 <btstack_linked_list_iterator_next : 1e07ce8 >			  ## hci_vendor.c:274:61
 1e0ab72:    01 08             	r1 = r0			  ## hci_vendor.c:274:61
 1e0ab74:    20 52             	r0 = h[r1 + 4] (u)			  ## hci_vendor.c:275:19
 1e0ab76:    40 f2 05 10       	if (r0 != r4) goto 10 <.GJTIE658_3_3_+0xE8 : 1e0ab84 >			  ## hci_vendor.c:275:19
 1e0ab7a:    50 08             	r0 = r5			  ## hci_vendor.c:276:13
 1e0ab7c:    bf f3 57 ea       	call -11090 <btstack_linked_list_remove : 1e0802e >			  ## hci_vendor.c:276:13
 1e0ab80:    10 08             	r0 = r1			  ## hci_vendor.c:277:13
 1e0ab82:    2e 14             	call -1956 <btstack_memory_le_hci_connection_free : 1e0a3e0 >			  ## hci_vendor.c:277:13
 1e0ab84:    c0 aa             	r0 = sp + 172
 1e0ab86:    bf f3 a1 e8       	call -11966 <btstack_linked_list_iterator_has_next : 1e07ccc >
 1e0ab8a:    f0 31             	if (r0 != 0) goto -32 <.GJTIE658_3_3_+0xD0 : 1e0ab6c >
 1e0ab8c:    3d 19             	goto 634 <.GJTIE658_3_3_+0x36C : 1e0ae08 >
 1e0ab8e:    88 fc bc 02       	r8 = r8 + 700			  ## hci_vendor.c:1141:21
 1e0ab92:    46 90             	r6 = r0 + 4			  ## hci_vendor.c:1141:75
 1e0ab94:    80 08             	r0 = r8			  ## hci_vendor.c:1141:13
 1e0ab96:    41 08             	r1 = r4			  ## hci_vendor.c:1141:13
 1e0ab98:    62 08             	r2 = r6			  ## hci_vendor.c:1141:13
 1e0ab9a:    97 f3 a3 e1       	call 3130182 <memcpy : 106ee4 >			  ## hci_vendor.c:1141:13
 1e0ab9e:    0e 5a             	h[r5 + 0] = r6			  ## hci_vendor.c:1142:44
 1e0aba0:    1f 5a             	h[r5 + 2] = r7			  ## hci_vendor.c:1143:44
 1e0aba2:    e6 fd 00 29       	r2 = r9.l (u)			  ## hci_vendor.c:1144:13
 1e0aba6:    21 70             	r1 = 2			  ## hci_vendor.c:1144:13
 1e0aba8:    80 08             	r0 = r8			  ## hci_vendor.c:1144:13
 1e0abaa:    bf f3 c6 f2       	call -6772 <bt_store_16 : 1e0913a >			  ## hci_vendor.c:1144:13
 1e0abae:    c9 ff ff ff bf ff 	r9 = 4290772991 <uECC_vli_cmp_unsafe+0x1AF9003 : 1bfffff >
 1e0abb4:    40 08             	r0 = r4
 1e0abb6:    80 f3 c9 99       	call 78738 <ll_hci_private_free_dma_rx : 1e1df4c >
 1e0abba:    24 19             	goto 584 <.GJTIE658_3_3_+0x368 : 1e0ae04 >
 1e0abbc:    80 f3 f9 9d       	call 80882 <lmp_hci_set_connection_encryption : 1e1e7b2 >			  ## hci_vendor.c:452:13
 1e0abc0:    0f 19             	goto 542 <.GJTIE658_3_3_+0x344 : 1e0ade0 >			  ## hci_vendor.c:452:13
 1e0abc2:    80 f3 8a 9e       	call 81172 <lmp_hci_link_key_request_negative_reply : 1e1e8da >			  ## hci_vendor.c:712:17
 1e0abc6:    20 19             	goto 576 <.GJTIE658_3_3_+0x36C : 1e0ae08 >			  ## hci_vendor.c:712:17
 1e0abc8:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >
 1e0abce:    04 08             	r4 = r0
 1e0abd0:    40 69             	r0 = b[r4 + 20] (u)			  ## hci_vendor.c:160:32
 1e0abd2:    31 69             	r1 = b[r4 + 19] (u)			  ## hci_vendor.c:160:32
 1e0abd4:    22 69             	r2 = b[r4 + 18] (u)			  ## hci_vendor.c:160:32
 1e0abd6:    13 69             	r3 = b[r4 + 17] (u)			  ## hci_vendor.c:160:32
 1e0abd8:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_vendor.c:160:32
 1e0abdc:    50 69             	r0 = b[r4 + 21] (u)			  ## hci_vendor.c:160:32
 1e0abde:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## hci_vendor.c:160:32
 1e0abe2:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## hci_vendor.c:160:32
 1e0abe6:    99 d1             	r1 = r3 >> 6			  ## hci_vendor.c:160:69
 1e0abe8:    c6 fd d0 10       	r1 <= insert(r0, p:26, l:6)			  ## hci_vendor.c:160:69
 1e0abec:    1a d5             	r2 = r3 >> 20			  ## hci_vendor.c:160:32
 1e0abee:    c8 fd 60 20       	r2 <= insert(r0, p:12, l:8)			  ## hci_vendor.c:160:32
 1e0abf2:    e0 fd 10 02       	r0 = r2 | r1			  ## hci_vendor.c:160:47
 1e0abf6:    21 fd 01 09       	r1 = r0 & 1			  ## hci_vendor.c:653:17
 1e0abfa:    e0 08             	r0 = r14			  ## hci_vendor.c:653:17
 1e0abfc:    bf f3 8a ef       	call -8428 <delete_link_key : 1e08b14 >			  ## hci_vendor.c:653:17
 1e0ac00:    ef 18             	goto 478 <.GJTIE658_3_3_+0x344 : 1e0ade0 >			  ## hci_vendor.c:653:17
 1e0ac02:    02 72             	r2 = 32			  ## hci_vendor.c:444:13
 1e0ac04:    03 70             	r3 = 0			  ## hci_vendor.c:444:13
 1e0ac06:    c1 ff 00 4e 4f 43 	r1 = 1129270784 <uECC_vli_cmp_unsafe+0x13EDE04 : 14f4e00 >
 1e0ac0c:    bf f3 91 eb       	call -10462 <bt_event_update_to_user : 1e08332 >
 1e0ac10:    e3 18             	goto 454 <.GJTIE658_3_3_+0x33C : 1e0add8 >
 1e0ac12:    80 f3 5c 9e       	call 81080 <lmp_hci_accept_sco_connection_request : 1e1e8ce >			  ## hci_vendor.c:587:13
 1e0ac16:    e4 18             	goto 456 <.GJTIE658_3_3_+0x344 : 1e0ade0 >			  ## hci_vendor.c:587:13
 1e0ac18:    80 f3 5b 9e       	call 81078 <lmp_hci_reject_connection_request : 1e1e8d2 >			  ## hci_vendor.c:595:13
 1e0ac1c:    e1 18             	goto 450 <.GJTIE658_3_3_+0x344 : 1e0ade0 >			  ## hci_vendor.c:595:13
 1e0ac1e:    c5 f5 23 00       	r5 = b[sp+35] (u)			  ## hci_vendor.c:344:23
 1e0ac22:    c0 f5 21 00       	r0 = b[sp+33] (u)			  ## hci_vendor.c:854:56
 1e0ac26:    28 90             	r8 = r0 + 2			  ## hci_vendor.c:854:66
 1e0ac28:    54 2a             	if (r5 == 0) goto 168 <.GJTIE658_3_3_+0x236 : 1e0acd2 >
 1e0ac2a:    e6 fd 00 08       	r0 = r8.l (u)
 1e0ac2e:    50 e0 50 30       	if (r0 < 5) goto 160 <.GJTIE658_3_3_+0x236 : 1e0acd2 >
 1e0ac32:    4e 70             	r14 = 4
 1e0ac34:    19 70             	r9 = 1
 1e0ac36:    80 fb e0 1f       	r1 = r15 + r14
 1e0ac3a:    80 62             	r0 = b[r1 + 8] (u)			  ## hci_vendor.c:351:43
 1e0ac3c:    22 7e             	r2 = 226			  ## hci_vendor.c:354:22
 1e0ac3e:    d2 f5 b9 00       	b[sp+185] = r2			  ## hci_vendor.c:354:22
 1e0ac42:    04 08             	r4 = r0			  ## utils.c:232:12
 1e0ac44:    f0 e1 01 30       	if (r0 < 31) goto 2 <.GJTIE658_3_3_+0x1AE : 1e0ac4a >			  ## utils.c:232:12
 1e0ac48:    f4 71             	r4 = 31
 1e0ac4a:    a2 98             	r2 = r4 + 10			  ## hci_vendor.c:352:33
 1e0ac4c:    d2 f5 ba 00       	b[sp+186] = r2			  ## hci_vendor.c:355:22
 1e0ac50:    22 62             	r2 = b[r1 + 2] (u)			  ## hci_vendor.c:356:9
 1e0ac52:    63 62             	r3 = b[r1 + 6] (u)			  ## hci_vendor.c:356:9
 1e0ac54:    06 62             	r6 = b[r1 + 0] (u)			  ## hci_vendor.c:356:9
 1e0ac56:    0c f9 01 10       	r12 = b[r1 + 1] (u)			  ## hci_vendor.c:356:9
 1e0ac5a:    0b f9 07 10       	r11 = b[r1 + 7] (u)			  ## hci_vendor.c:356:9
 1e0ac5e:    0a f9 05 10       	r10 = b[r1 + 5] (u)			  ## hci_vendor.c:356:9
 1e0ac62:    0d f9 04 10       	r13 = b[r1 + 4] (u)			  ## hci_vendor.c:356:9
 1e0ac66:    31 62             	r1 = b[r1 + 3] (u)			  ## hci_vendor.c:356:9
 1e0ac68:    db f5 c2 00       	b[sp+194] = r11			  ## hci_vendor.c:356:9
 1e0ac6c:    da f5 c0 00       	b[sp+192] = r10			  ## hci_vendor.c:356:9
 1e0ac70:    dd f5 bf 00       	b[sp+191] = r13			  ## hci_vendor.c:356:9
 1e0ac74:    d1 f5 be 00       	b[sp+190] = r1			  ## hci_vendor.c:356:9
 1e0ac78:    dc f5 bc 00       	b[sp+188] = r12			  ## hci_vendor.c:356:9
 1e0ac7c:    d6 f5 bb 00       	b[sp+187] = r6			  ## hci_vendor.c:356:9
 1e0ac80:    c8 fd 40 3b       	r3 <= insert(r11, p:8, l:8)			  ## hci_vendor.c:356:9
 1e0ac84:    d0 fd 80 d3       	r13 <= insert(r3, p:16, l:16)			  ## hci_vendor.c:356:9
 1e0ac88:    f2 fd 80 3d       	r3 = r13 >> 16			  ## hci_vendor.c:356:9
 1e0ac8c:    d3 f5 c1 00       	b[sp+193] = r3			  ## hci_vendor.c:356:9
 1e0ac90:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## hci_vendor.c:356:9
 1e0ac94:    e1 fc 09 00       	r1 = r14 + 9			  ## hci_vendor.c:359:38
 1e0ac98:    43 b8             	r3 = r4 + r1			  ## hci_vendor.c:359:42
 1e0ac9a:    03 fa 00 f3       	r3 = b[r15+r3] (u)			  ## hci_vendor.c:359:24
 1e0ac9e:    d0 fd 80 62       	r6 <= insert(r2, p:16, l:16)			  ## hci_vendor.c:356:9
 1e0aca2:    32 d4             	r2 = r6 >> 16			  ## hci_vendor.c:356:9
 1e0aca4:    d2 f5 bd 00       	b[sp+189] = r2			  ## hci_vendor.c:356:9
 1e0aca8:    d3 f5 c3 00       	b[sp+195] = r3			  ## hci_vendor.c:359:22
 1e0acac:    d0 f5 c4 00       	b[sp+196] = r0			  ## hci_vendor.c:360:22
 1e0acb0:    f1 09             	r1 += r15			  ## hci_vendor.c:361:30
 1e0acb2:    60 02             	r0 = [sp+24]			  ## hci_vendor.c:361:9
 1e0acb4:    42 08             	r2 = r4			  ## hci_vendor.c:361:9
 1e0acb6:    97 f3 15 e1       	call 3129898 <memcpy : 106ee4 >			  ## hci_vendor.c:361:9
 1e0acba:    c1 98             	r1 = r4 + 12			  ## hci_vendor.c:362:13
 1e0acbc:    90 ab             	r0 = sp + 185
 1e0acbe:    bf f3 86 ef       	call -8436 <le_hci_emit_event : 1e08bce >			  ## hci_vendor.c:364:9
 1e0acc2:    80 fb 40 0e       	r0 = r14 + r4			  ## hci_vendor.c:363:31
 1e0acc6:    ae 90             	r14 = r0 + 10			  ## hci_vendor.c:363:16
 1e0acc8:    59 f2 03 a0       	ifs (r9 >= r5) goto 6 <.GJTIE658_3_3_+0x236 : 1e0acd2 >
 1e0accc:    19 80             	r9 += 1			  ## hci_vendor.c:350:33
 1e0acce:    8e f2 b2 bf       	ifs (r14 < r8) goto -156 <.GJTIE658_3_3_+0x19A : 1e0ac36 >			  ## hci_vendor.c:350:33
 1e0acd2:    0a 70             	r10 = 0
 1e0acd4:    0b f5 14 00       	r11 = [sp+20]
 1e0acd8:    0c f5 10 00       	r12 = [sp+16]
 1e0acdc:    0d f5 0c 00       	r13 = [sp+12]
 1e0ace0:    0e f5 08 00       	r14 = [sp+8]
 1e0ace4:    c9 ff ff ff bf ff 	r9 = 4290772991 <uECC_vli_cmp_unsafe+0x1AF9003 : 1bfffff >
 1e0acea:    7a 18             	goto 244 <.GJTIE658_3_3_+0x344 : 1e0ade0 >
 1e0acec:    41 70             	r1 = 4			  ## hci_vendor.c:977:26
 1e0acee:    f0 08             	r0 = r15			  ## hci_vendor.c:977:26
 1e0acf0:    bf f3 e5 e7       	call -12342 <little_endian_read_16 : 1e07cbe >			  ## hci_vendor.c:977:26
 1e0acf4:    04 08             	r4 = r0			  ## hci_vendor.c:977:26
 1e0acf6:    bf f3 07 e8       	call -12274 <le_hci_connection_for_handle : 1e07d08 >			  ## hci_vendor.c:978:24
 1e0acfa:    02 08             	r2 = r0			  ## hci_vendor.c:978:24
 1e0acfc:    6d 24             	if (r2 == 0) goto 218 <.GJTIE658_3_3_+0x33C : 1e0add8 >
 1e0acfe:    61 70             	r1 = 6			  ## hci_vendor.c:980:47
 1e0ad00:    f0 08             	r0 = r15			  ## hci_vendor.c:980:47
 1e0ad02:    bf f3 dc e7       	call -12360 <little_endian_read_16 : 1e07cbe >			  ## hci_vendor.c:980:47
 1e0ad06:    38 54             	h[r2 + 6] = r0			  ## hci_vendor.c:980:45
 1e0ad08:    81 70             	r1 = 8			  ## hci_vendor.c:981:46
 1e0ad0a:    f0 08             	r0 = r15			  ## hci_vendor.c:981:46
 1e0ad0c:    bf f3 d7 e7       	call -12370 <little_endian_read_16 : 1e07cbe >			  ## hci_vendor.c:981:46
 1e0ad10:    48 54             	h[r2 + 8] = r0			  ## hci_vendor.c:981:44
 1e0ad12:    a1 70             	r1 = 10			  ## hci_vendor.c:982:53
 1e0ad14:    5d 18             	goto 186 <.GJTIE658_3_3_+0x334 : 1e0add0 >			  ## hci_vendor.c:982:53
 1e0ad16:    c4 f5 27 00       	r4 = b[sp+39] (u)			  ## hci_vendor.c:862:29
 1e0ad1a:    b0 08             	r0 = r11			  ## hci_vendor.c:864:24
 1e0ad1c:    41 08             	r1 = r4			  ## hci_vendor.c:864:24
 1e0ad1e:    bf f3 6d fb       	call -2342 <le_hci_connection_for_bd_addr_and_type : 1e0a3fc >			  ## hci_vendor.c:864:24
 1e0ad22:    c1 f5 23 00       	r1 = b[sp+35] (u)			  ## btstack_event.h:3699:16
 1e0ad26:    02 08             	r2 = r0			  ## hci_vendor.c:864:24
 1e0ad28:    37 22             	if (r1 == 0) goto 110 <.GJTIE658_3_3_+0x2FC : 1e0ad98 >			  ## hci_vendor.c:867:21
 1e0ad2a:    02 24             	if (r2 == 0) goto 4 <.GJTIE658_3_3_+0x294 : 1e0ad30 >
 1e0ad2c:    bf f3 58 fb       	call -2384 <btstack_memory_le_hci_connection_free : 1e0a3e0 >
 1e0ad30:    c0 f5 21 00       	r0 = b[sp+33] (u)
 1e0ad34:    11 90             	r1 = r0 + 1
 1e0ad36:    f0 08             	r0 = r15
 1e0ad38:    bf f3 49 ef       	call -8558 <le_hci_emit_event : 1e08bce >
 1e0ad3c:    51 18             	goto 162 <.GJTIE658_3_3_+0x344 : 1e0ade0 >
 1e0ad3e:    a0 7a             	r0 = 170			  ## hci_vendor.c:580:17
 1e0ad40:    80 f3 c3 9d       	call 80774 <lmp_hci_accept_connection_request : 1e1e8ca >			  ## hci_vendor.c:580:17
 1e0ad44:    4d 18             	goto 154 <.GJTIE658_3_3_+0x344 : 1e0ade0 >			  ## hci_vendor.c:580:17
 1e0ad46:    06 3a             	if (r5 != 0) goto 12 <.GJTIE658_3_3_+0x2B8 : 1e0ad54 >
 1e0ad48:    b0 08             	r0 = r11			  ## hci_vendor.c:938:28
 1e0ad4a:    41 08             	r1 = r4			  ## hci_vendor.c:938:28
 1e0ad4c:    bf f3 78 fb       	call -2320 <le_create_connection_for_bd_addr_and_type : 1e0a440 >			  ## hci_vendor.c:938:28
 1e0ad50:    05 08             	r5 = r0			  ## hci_vendor.c:938:28
 1e0ad52:    46 2a             	if (r5 == 0) goto 140 <.GJTIE658_3_3_+0x344 : 1e0ade0 >
 1e0ad54:    c0 f5 26 00       	r0 = b[sp+38] (u)			  ## hci_vendor.c:946:31
 1e0ad58:    10 f9 28 50       	b[r5 + 40] = r0			  ## hci_vendor.c:946:29
 1e0ad5c:    41 70             	r1 = 4			  ## hci_vendor.c:947:36
 1e0ad5e:    f0 08             	r0 = r15			  ## hci_vendor.c:947:36
 1e0ad60:    bf f3 ad e7       	call -12454 <little_endian_read_16 : 1e07cbe >			  ## hci_vendor.c:947:36
 1e0ad64:    04 08             	r4 = r0			  ## hci_vendor.c:947:36
 1e0ad66:    2c 5a             	h[r5 + 4] = r4			  ## hci_vendor.c:947:34
 1e0ad68:    e1 70             	r1 = 14			  ## hci_vendor.c:950:43
 1e0ad6a:    f0 08             	r0 = r15			  ## hci_vendor.c:950:43
 1e0ad6c:    bf f3 a7 e7       	call -12466 <little_endian_read_16 : 1e07cbe >			  ## hci_vendor.c:950:43
 1e0ad70:    38 5a             	h[r5 + 6] = r0			  ## hci_vendor.c:950:41
 1e0ad72:    01 71             	r1 = 16			  ## hci_vendor.c:951:42
 1e0ad74:    f0 08             	r0 = r15			  ## hci_vendor.c:951:42
 1e0ad76:    bf f3 a2 e7       	call -12476 <little_endian_read_16 : 1e07cbe >			  ## hci_vendor.c:951:42
 1e0ad7a:    48 5a             	h[r5 + 8] = r0			  ## hci_vendor.c:951:40
 1e0ad7c:    11 71             	r1 = 17			  ## hci_vendor.c:952:49
 1e0ad7e:    f0 08             	r0 = r15			  ## hci_vendor.c:952:49
 1e0ad80:    bf f3 9d e7       	call -12486 <little_endian_read_16 : 1e07cbe >			  ## hci_vendor.c:952:49
 1e0ad84:    58 5a             	h[r5 + 10] = r0			  ## hci_vendor.c:952:47
 1e0ad86:    80 9b             	r0 = r5 + 24			  ## hci_vendor.c:954:50
 1e0ad88:    c1 9b             	r1 = r5 + 28			  ## hci_vendor.c:954:68
 1e0ad8a:    80 f3 a9 98       	call 78162 <hci_ll_get_device_address : 1e1dee0 >			  ## hci_vendor.c:954:17
 1e0ad8e:    50 fc 22 00       	r0 = r5 + 34			  ## hci_vendor.c:955:39
 1e0ad92:    80 f3 85 98       	call 78090 <le_controller_get_mac : 1e1dea0 >			  ## hci_vendor.c:955:17
 1e0ad96:    20 18             	goto 64 <.GJTIE658_3_3_+0x33C : 1e0add8 >			  ## hci_vendor.c:955:17
 1e0ad98:    06 34             	if (r2 != 0) goto 12 <.GJTIE658_3_3_+0x30A : 1e0ada6 >
 1e0ad9a:    b0 08             	r0 = r11			  ## hci_vendor.c:878:28
 1e0ad9c:    41 08             	r1 = r4			  ## hci_vendor.c:878:28
 1e0ad9e:    bf f3 4f fb       	call -2402 <le_create_connection_for_bd_addr_and_type : 1e0a440 >			  ## hci_vendor.c:878:28
 1e0ada2:    02 08             	r2 = r0			  ## hci_vendor.c:878:28
 1e0ada4:    1d 24             	if (r2 == 0) goto 58 <.GJTIE658_3_3_+0x344 : 1e0ade0 >
 1e0ada6:    c0 f5 26 00       	r0 = b[sp+38] (u)			  ## btstack_event.h:3719:16
 1e0adaa:    10 f9 28 20       	b[r2 + 40] = r0			  ## hci_vendor.c:885:29
 1e0adae:    41 70             	r1 = 4			  ## btstack_event.h:3709:16
 1e0adb0:    f0 08             	r0 = r15			  ## btstack_event.h:3709:16
 1e0adb2:    bf f3 84 e7       	call -12536 <little_endian_read_16 : 1e07cbe >			  ## btstack_event.h:3709:16
 1e0adb6:    04 08             	r4 = r0			  ## btstack_event.h:3709:16
 1e0adb8:    2c 54             	h[r2 + 4] = r4			  ## hci_vendor.c:886:34
 1e0adba:    a1 71             	r1 = 26			  ## btstack_event.h:3773:16
 1e0adbc:    f0 08             	r0 = r15			  ## btstack_event.h:3773:16
 1e0adbe:    bf f3 7e e7       	call -12548 <little_endian_read_16 : 1e07cbe >			  ## btstack_event.h:3773:16
 1e0adc2:    38 54             	h[r2 + 6] = r0			  ## hci_vendor.c:889:41
 1e0adc4:    c1 71             	r1 = 28			  ## btstack_event.h:3783:16
 1e0adc6:    f0 08             	r0 = r15			  ## btstack_event.h:3783:16
 1e0adc8:    bf f3 79 e7       	call -12558 <little_endian_read_16 : 1e07cbe >			  ## btstack_event.h:3783:16
 1e0adcc:    48 54             	h[r2 + 8] = r0			  ## hci_vendor.c:890:40
 1e0adce:    e1 71             	r1 = 30			  ## btstack_event.h:3793:16
 1e0add0:    f0 08             	r0 = r15
 1e0add2:    bf f3 74 e7       	call -12568 <little_endian_read_16 : 1e07cbe >
 1e0add6:    58 54             	h[r2 + 10] = r0
 1e0add8:    20 05             	r0 = r4.l (u)			  ## hci_vendor.c:998:16
 1e0adda:    47 08             	r7 = r4			  ## hci_vendor.c:998:16
 1e0addc:    f0 e4 0c 80       	if (r0 > 79) goto 24 <.GJTIE658_3_3_+0x35C : 1e0adf8 >			  ## hci_vendor.c:998:16
 1e0ade0:    c0 f5 21 00       	r0 = b[sp+33] (u)			  ## hci_vendor.c:999:56
 1e0ade4:    12 90             	r2 = r0 + 1			  ## hci_vendor.c:999:66
 1e0ade6:    40 70             	r0 = 4			  ## hci_vendor.c:999:9
 1e0ade8:    f1 08             	r1 = r15			  ## hci_vendor.c:999:9
 1e0adea:    bf f3 77 f7       	call -4370 <l2cap_packet_handler : 1e09cdc >			  ## hci_vendor.c:999:9
 1e0adee:    e0 05             	r0 = r7.l (u)			  ## hci_vendor.c:1011:18
 1e0adf0:    0b 20             	if (r0 == 0) goto 22 <.GJTIE658_3_3_+0x36C : 1e0ae08 >			  ## hci_vendor.c:1011:18
 1e0adf2:    80 f3 97 9d       	call 80686 <lmp_hci_host_num_of_completed_packets : 1e1e924 >
 1e0adf6:    08 18             	goto 16 <.GJTIE658_3_3_+0x36C : 1e0ae08 >
 1e0adf8:    c0 f5 21 00       	r0 = b[sp+33] (u)			  ## hci_vendor.c:1004:39
 1e0adfc:    11 90             	r1 = r0 + 1			  ## hci_vendor.c:1004:49
 1e0adfe:    f0 08             	r0 = r15			  ## hci_vendor.c:1004:13
 1e0ae00:    bf f3 e5 ee       	call -8758 <le_hci_emit_event : 1e08bce >			  ## hci_vendor.c:1004:13
 1e0ae04:    bf f3 48 fb       	call -2416 <hci_run_for_acl_data_send : 1e0a498 >
 1e0ae08:    c0 ff 88 09 00 00 	r0 = 2440 <stack_run_loop_head : 988 >
 1e0ae0e:    04 40             	r4 = [r0 + 0]
 1e0ae10:    06 28             	if (r4 == 0) goto 12 <.GJTIE658_3_3_+0x382 : 1e0ae1e >
 1e0ae12:    11 48             	r1 = [r4 + 4]			  ## run_loop.c:37:16
 1e0ae14:    02 22             	if (r1 == 0) goto 4 <.GJTIE658_3_3_+0x37E : 1e0ae1a >			  ## run_loop.c:37:16
 1e0ae16:    40 08             	r0 = r4			  ## run_loop.c:38:13
 1e0ae18:    81 00             	call r1			  ## run_loop.c:38:13
 1e0ae1a:    04 48             	r4 = [r4 + 0]
 1e0ae1c:    fa 39             	if (r4 != 0) goto -12 <.GJTIE658_3_3_+0x376 : 1e0ae12 >
 1e0ae1e:    c0 ff 00 00 00 00 	r0 = 0 <umoddi3.bc : 0 >			  ## btstack_task.c:140:13
 1e0ae24:    00 e0 a2 0b       	if (r0 == 0) goto -2236 <btstack_task+0x50 : 1e0a56c >			  ## btstack_task.c:140:13
 1e0ae28:    8f f3 ea a8       	call 2052564 <umoddi3.bc : 0 >			  ## btstack_task.c:141:13
 1e0ae2c:    ff f3 9e fb       	goto -2244 <btstack_task+0x50 : 1e0a56c >			  ## btstack_task.c:141:13


hci_can_send_acl_le_packet_now:
 1e0ae30:    34 00             	[--sp] = rets			  ## hci_vendor.c:2118:0
 1e0ae32:    c0 ff 60 18 00 00 	r0 = 6240 <report_irq_stack_end : 1860 >			  ## hci_vendor.c:2119:22
 1e0ae38:    01 f9 15 02       	r1 = b[r0 + 533] (u)			  ## hci_vendor.c:2119:22
 1e0ae3c:    00 70             	r0 = 0			  ## hci_vendor.c:2119:22
 1e0ae3e:    07 32             	if (r1 != 0) goto 14 <hci_can_send_acl_le_packet_now+0x1E : 1e0ae4e >			  ## hci_vendor.c:2119:22
 1e0ae40:    bf f3 58 f2       	call -6992 <hci_number_free_acl_slots_for_connection_type : 1e092f4 >			  ## hci_vendor.c:2114:12
 1e0ae44:    01 08             	r1 = r0			  ## hci_vendor.c:2114:12
 1e0ae46:    10 70             	r0 = 1			  ## hci_vendor.c:2114:72
 1e0ae48:    01 e0 01 c0       	ifs (r1 > 0) goto 2 <hci_can_send_acl_le_packet_now+0x1E : 1e0ae4e >			  ## hci_vendor.c:2114:72
 1e0ae4c:    00 70             	r0 = 0			  ## hci_vendor.c:2114:72
 1e0ae4e:    30 00             	pc = [sp++]			  ## hci_vendor.c:2123:1


l2cap_notify_channel_can_send:
 1e0ae50:    79 01             	[--sp] = {rets, r9-r4}			  ## l2cap.c:428:0
 1e0ae52:    fe 0b             	sp += -4			  ## l2cap.c:428:0
 1e0ae54:    c4 ff ac 1a 00 00 	r4 = 6828 <l2cap_fixed_channels+0x4 : 1aac >			  ## l2cap.c:428:0
 1e0ae5a:    05 70             	r5 = 0			  ## l2cap.c:428:0
 1e0ae5c:    88 77             	r8 = 120			  ## l2cap.c:428:0
 1e0ae5e:    29 70             	r9 = 2			  ## l2cap.c:428:0
 1e0ae60:    06 70             	r6 = 0			  ## l2cap.c:428:0
 1e0ae62:    07 f6 fc 4f       	r7 = [r4 + -4]			  ## l2cap.c:431:38
 1e0ae66:    20 2e             	if (r7 == 0) goto 64 <l2cap_notify_channel_can_send+0x58 : 1e0aea8 >
 1e0ae68:    00 68             	r0 = b[r4 + 0] (u)			  ## l2cap.c:434:38
 1e0ae6a:    1e 20             	if (r0 == 0) goto 60 <l2cap_notify_channel_can_send+0x58 : 1e0aea8 >			  ## l2cap.c:434:38
 1e0ae6c:    26 e0 20 00       	if (r6 == 2) goto 64 <l2cap_notify_channel_can_send+0x60 : 1e0aeb0 >
 1e0ae70:    df 17             	call -66 <hci_can_send_acl_le_packet_now : 1e0ae30 >			  ## l2cap.c:439:24
 1e0ae72:    1a 20             	if (r0 == 0) goto 52 <l2cap_notify_channel_can_send+0x58 : 1e0aea8 >
 1e0ae74:    0d 68             	b[r4 + 0] = r5			  ## l2cap.c:446:58
 1e0ae76:    06 2c             	if (r6 == 0) goto 12 <l2cap_notify_channel_can_send+0x34 : 1e0ae84 >			  ## l2cap.c:446:58
 1e0ae78:    26 e0 06 00       	if (r6 == 2) goto 12 <l2cap_notify_channel_can_send+0x38 : 1e0ae88 >
 1e0ae7c:    16 e0 06 10       	if (r6 != 1) goto 12 <l2cap_notify_channel_can_send+0x3C : 1e0ae8c >
 1e0ae80:    60 70             	r0 = 6
 1e0ae82:    05 18             	goto 10 <l2cap_notify_channel_can_send+0x3E : 1e0ae8e >
 1e0ae84:    40 70             	r0 = 4
 1e0ae86:    03 18             	goto 6 <l2cap_notify_channel_can_send+0x3E : 1e0ae8e >
 1e0ae88:    20 70             	r0 = 2
 1e0ae8a:    01 18             	goto 2 <l2cap_notify_channel_can_send+0x3E : 1e0ae8e >
 1e0ae8c:    00 70             	r0 = 0
 1e0ae8e:    d8 f5 00 00       	b[sp] = r8			  ## l2cap.c:191:14
 1e0ae92:    d9 f5 01 00       	b[sp+1] = r9			  ## l2cap.c:192:14
 1e0ae96:    d0 f5 02 00       	b[sp+2] = r0			  ## utils.c:160:19
 1e0ae9a:    d5 f5 03 00       	b[sp+3] = r5			  ## utils.c:161:19
 1e0ae9e:    21 04             	r1 = r0.l (u)			  ## l2cap.c:195:5
 1e0aea0:    02 a0             	r2 = sp + 0			  ## l2cap.c:195:5
 1e0aea2:    40 70             	r0 = 4			  ## l2cap.c:195:5
 1e0aea4:    43 70             	r3 = 4			  ## l2cap.c:195:5
 1e0aea6:    87 00             	call r7			  ## l2cap.c:195:5
 1e0aea8:    16 80             	r6 += 1			  ## l2cap.c:430:54
 1e0aeaa:    84 80             	r4 += 8			  ## l2cap.c:430:19
 1e0aeac:    36 e0 d9 1f       	if (r6 != 3) goto -78 <l2cap_notify_channel_can_send+0x12 : 1e0ae62 >			  ## l2cap.c:430:19
 1e0aeb0:    02 0a             	sp += 4
 1e0aeb2:    59 01             	{pc, r9-r4} = [sp++]			  ## l2cap.c:449:1


l2cap_hci_event_handler:
 1e0aeb4:    34 00             	[--sp] = rets			  ## l2cap.c:1168:0
 1e0aeb6:    00 64             	r0 = b[r2 + 0] (u)			  ## btstack_event.h:40:16
 1e0aeb8:    f0 e0 06 00       	if (r0 == 15) goto 12 <l2cap_hci_event_handler+0x14 : 1e0aec8 >			  ## l2cap.c:1170:5
 1e0aebc:    30 e1 06 10       	if (r0 != 19) goto 12 <l2cap_hci_event_handler+0x18 : 1e0aecc >
 1e0aec0:    bf f3 9a f3       	call -6348 <l2cap_run : 1e095f8 >			  ## l2cap.c:1174:9
 1e0aec4:    88 01             	{rets} = [sp++]			  ## l2cap.c:1176:9
 1e0aec6:    c4 1f             	goto -120 <l2cap_notify_channel_can_send : 1e0ae50 >			  ## l2cap.c:1176:9
 1e0aec8:    bf f3 96 f3       	call -6356 <l2cap_run : 1e095f8 >			  ## l2cap.c:1181:9
 1e0aecc:    30 00             	pc = [sp++]			  ## l2cap.c:1204:1


user_cmd_loop_suspend:
 1e0aece:    c1 ff c0 1a 00 00 	r1 = 6848 <__user_info : 1ac0 >			  ## avctp_user.c:3141:0
 1e0aed4:    00 f7 12 11       	r0 = h[r1 + 274] (u)			  ## avctp_user.c:3142:35
 1e0aed8:    02 fd 01 0a       	r2 = r0 | 256			  ## avctp_user.c:3142:35
 1e0aedc:    00 70             	r0 = 0			  ## avctp_user.c:3143:5
 1e0aede:    12 f7 12 11       	h[r1 + 274] = r2			  ## avctp_user.c:3142:35
 1e0aee2:    20 00             	rts			  ## avctp_user.c:3143:5


user_cmd_loop_resume:
 1e0aee4:    c1 ff c0 1a 00 00 	r1 = 6848 <__user_info : 1ac0 >			  ## avctp_user.c:3146:0
 1e0aeea:    00 f7 12 11       	r0 = h[r1 + 274] (u)			  ## avctp_user.c:3147:35
 1e0aeee:    32 fd 01 0a       	r2 = r0 & 4294967039			  ## avctp_user.c:3147:35
 1e0aef2:    00 70             	r0 = 0			  ## avctp_user.c:3148:5
 1e0aef4:    12 f7 12 11       	h[r1 + 274] = r2			  ## avctp_user.c:3147:35
 1e0aef8:    20 00             	rts			  ## avctp_user.c:3148:5


btstack_run_loop_remove_timer:
 1e0aefa:    20 04             	r0 = r0.l (u)			  ## btstack_sys_timer.c:169:0
 1e0aefc:    c0 f3 c3 2f       	goto 24454 <sys_timer_del : 1e10e86 >			  ## btstack_sys_timer.c:174:5


user_cmd_loop_release:
 1e0af00:    75 01             	[--sp] = {rets, r5, r4}			  ## avctp_user.c:3122:0
 1e0af02:    c5 ff c0 1a 00 00 	r5 = 6848 <__user_info : 1ac0 >			  ## avctp_user.c:3122:0
 1e0af08:    00 f9 12 51       	r0 = b[r5 + 274] (u)			  ## avctp_user.c:3124:9
 1e0af0c:    04 70             	r4 = 0			  ## avctp_user.c:3124:9
 1e0af0e:    26 f3 1e 00       	if ((r0 & 64) != 0) goto 60 <user_cmd_loop_release+0x4E : 1e0af4e >			  ## avctp_user.c:3124:9
 1e0af12:    50 fc 88 00       	r0 = r5 + 136
 1e0af16:    31 40             	r1 = [r0 + 12]			  ## avctp_user.c:3128:20
 1e0af18:    1d f3 02 10       	if ((r1 & 536870912) == 0) goto 4 <user_cmd_loop_release+0x20 : 1e0af20 >			  ## avctp_user.c:3128:20
 1e0af1c:    31 50             	r1 = h[r0 + 6] (u)			  ## avctp_user.c:3128:38
 1e0af1e:    16 32             	if (r1 != 0) goto 44 <user_cmd_loop_release+0x4C : 1e0af4c >			  ## avctp_user.c:3128:38
 1e0af20:    80 81             	r0 += 24			  ## avctp_user.c:3127:5
 1e0af22:    51 fc a0 00       	r1 = r5 + 160			  ## avctp_user.c:3127:5
 1e0af26:    10 f2 f6 3f       	if (r0 < r1) goto -20 <user_cmd_loop_release+0x16 : 1e0af16 >			  ## avctp_user.c:3127:5
 1e0af2a:    50 fc 7c 00       	r0 = r5 + 124			  ## avctp_user.c:3132:5
 1e0af2e:    bf f3 87 e8       	call -12018 <stack_run_loop_remove : 1e08040 >			  ## avctp_user.c:3132:5
 1e0af32:    00 f6 b8 50       	r0 = [r5 + 184]			  ## avctp_user.c:3132:5
 1e0af36:    e1 17             	call -62 <btstack_run_loop_remove_timer : 1e0aefa >			  ## avctp_user.c:3133:5
 1e0af38:    00 f7 12 51       	r0 = h[r5 + 274] (u)			  ## avctp_user.c:3134:30
 1e0af3c:    c1 ff bf fe 00 00 	r1 = 65215 <boot_arg_list+0x2BF : febf >			  ## avctp_user.c:3135:35
 1e0af42:    50 b3             	r0 &= r1			  ## avctp_user.c:3135:35
 1e0af44:    10 b3             	r0 |= 64			  ## avctp_user.c:3135:35
 1e0af46:    10 f7 12 51       	h[r5 + 274] = r0			  ## avctp_user.c:3135:35
 1e0af4a:    01 18             	goto 2 <user_cmd_loop_release+0x4E : 1e0af4e >			  ## avctp_user.c:3135:35
 1e0af4c:    14 70             	r4 = 1
 1e0af4e:    40 08             	r0 = r4			  ## avctp_user.c:3137:1
 1e0af50:    55 01             	{pc, r5, r4} = [sp++]			  ## avctp_user.c:3137:1


update_connectiong_mac_addr:
 1e0af52:    c1 ff d4 1b 00 00 	r1 = 7124 <__user_info+0x114 : 1bd4 >			  ## avctp_user.c:1308:0
 1e0af58:    c2 f4 00 19       	[r1 + 8] = 0			  ## avctp_user.c:1311:25
 1e0af5c:    03 08             	r3 = r0			  ## avctp_user.c:1311:25
 1e0af5e:    60 70             	r0 = 6
 1e0af60:    68 62             	b[r1 + 6] = r0			  ## avctp_user.c:1312:29
 1e0af62:    62 70             	r2 = 6			  ## avctp_user.c:1313:5
 1e0af64:    10 08             	r0 = r1			  ## avctp_user.c:1313:5
 1e0af66:    31 08             	r1 = r3			  ## avctp_user.c:1313:5
 1e0af68:    d7 f3 bc df       	goto 3129208 <memcpy : 106ee4 >			  ## avctp_user.c:1313:5


aec_sco_connection_start:
 1e0af6c:    78 01             	[--sp] = {rets, r8-r4}			  ## bt_audio.c:121:0
 1e0af6e:    c6 ff 90 09 00 00 	r6 = 2448 <stack_configs_app : 990 >			  ## bt_audio.c:121:0
 1e0af74:    43 6d             	r3 = b[r6 + 20] (u)			  ## bt_audio.c:123:29
 1e0af76:    34 6d             	r4 = b[r6 + 19] (u)			  ## bt_audio.c:123:29
 1e0af78:    25 6d             	r5 = b[r6 + 18] (u)			  ## bt_audio.c:123:29
 1e0af7a:    17 6d             	r7 = b[r6 + 17] (u)			  ## bt_audio.c:123:29
 1e0af7c:    c8 fd 40 43       	r4 <= insert(r3, p:8, l:8)			  ## bt_audio.c:123:29
 1e0af80:    c8 fd 40 75       	r7 <= insert(r5, p:8, l:8)			  ## bt_audio.c:123:29
 1e0af84:    53 6d             	r3 = b[r6 + 21] (u)			  ## bt_audio.c:123:29
 1e0af86:    d0 fd 80 74       	r7 <= insert(r4, p:16, l:16)			  ## bt_audio.c:123:29
 1e0af8a:    f5 05             	r5 = r7.l (s)			  ## bt_audio.c:123:9
 1e0af8c:    23 08             	r3 = r2			  ## bt_audio.c:123:9
 1e0af8e:    18 08             	r8 = r1
 1e0af90:    04 08             	r4 = r0
 1e0af92:    05 e0 31 b0       	ifs (r5 < 0) goto 98 <aec_sco_connection_start+0x8C : 1e0aff8 >
 1e0af96:    2e f3 24 70       	if ((r7 & 16384) != 0) goto 72 <aec_sco_connection_start+0x76 : 1e0afe2 >			  ## bt_audio.c:126:9
 1e0af9a:    20 6d             	r0 = b[r6 + 18] (u)			  ## bt_audio.c:127:50
 1e0af9c:    31 6d             	r1 = b[r6 + 19] (u)			  ## bt_audio.c:127:50
 1e0af9e:    52 6d             	r2 = b[r6 + 21] (u)			  ## bt_audio.c:127:50
 1e0afa0:    15 6d             	r5 = b[r6 + 17] (u)			  ## bt_audio.c:127:50
 1e0afa2:    47 6d             	r7 = b[r6 + 20] (u)			  ## bt_audio.c:127:50
 1e0afa4:    4f 6d             	b[r6 + 20] = r7			  ## bt_audio.c:127:50
 1e0afa6:    1d 6d             	b[r6 + 17] = r5			  ## bt_audio.c:127:50
 1e0afa8:    5a 6d             	b[r6 + 21] = r2			  ## bt_audio.c:127:50
 1e0afaa:    c8 fd 40 17       	r1 <= insert(r7, p:8, l:8)			  ## bt_audio.c:127:50
 1e0afae:    c8 fd 40 50       	r5 <= insert(r0, p:8, l:8)			  ## bt_audio.c:127:50
 1e0afb2:    d0 fd 80 51       	r5 <= insert(r1, p:16, l:16)			  ## bt_audio.c:127:50
 1e0afb6:    28 d4             	r0 = r5 >> 16			  ## bt_audio.c:127:50
 1e0afb8:    38 6d             	b[r6 + 19] = r0			  ## bt_audio.c:127:50
 1e0afba:    00 fd 80 5a       	r0 = r5 | 32768			  ## bt_audio.c:127:50
 1e0afbe:    00 d2             	r0 = r0 >> 8			  ## bt_audio.c:127:50
 1e0afc0:    28 6d             	b[r6 + 18] = r0			  ## bt_audio.c:127:50
 1e0afc2:    a0 9d             	r0 = r6 + 26			  ## bt_audio.c:128:9
 1e0afc4:    62 70             	r2 = 6			  ## bt_audio.c:128:9
 1e0afc6:    31 08             	r1 = r3			  ## bt_audio.c:128:9
 1e0afc8:    97 f3 8c df       	call 3129112 <memcpy : 106ee4 >			  ## bt_audio.c:128:9
 1e0afcc:    d0 fd 80 48       	r4 <= insert(r8, p:16, l:16)			  ## bt_audio.c:134:107
 1e0afd0:    c1 ff 00 4e 4f 43 	r1 = 1129270784 <uECC_vli_cmp_unsafe+0x13EDE04 : 14f4e00 >			  ## bt_audio.c:134:9
 1e0afd6:    00 70             	r0 = 0			  ## bt_audio.c:134:9
 1e0afd8:    92 71             	r2 = 25			  ## bt_audio.c:134:9
 1e0afda:    43 08             	r3 = r4			  ## bt_audio.c:134:9
 1e0afdc:    18 01             	{rets, r8-r4} = [sp++]			  ## bt_audio.c:134:9
 1e0afde:    ff f3 a8 e9       	goto -11440 <bt_event_update_to_user : 1e08332 >			  ## bt_audio.c:134:9
 1e0afe2:    c1 ff ee bd e0 01 	r1 = 31505902 <send_sco_disconn : 1e0bdee >			  ## bt_audio.c:142:29
 1e0afe8:    00 70             	r0 = 0			  ## bt_audio.c:142:29
 1e0afea:    42 76             	r2 = 100			  ## bt_audio.c:142:29
 1e0afec:    80 f3 9c 30       	call 24888 <sys_timeout_add : 1e11128 >			  ## bt_audio.c:142:29
 1e0aff0:    c1 ff c2 09 00 00 	r1 = 2498 <disable_sco_timer : 9c2 >			  ## bt_audio.c:142:27
 1e0aff6:    08 52             	h[r1 + 0] = r0			  ## bt_audio.c:142:27
 1e0aff8:    58 01             	{pc, r8-r4} = [sp++]			  ## bt_audio.c:145:1


free_conn_for_addr:
 1e0affa:    77 01             	[--sp] = {rets, r7-r4}			  ## avctp_user.c:329:0
 1e0affc:    16 08             	r6 = r1			  ## avctp_user.c:329:0
 1e0affe:    05 08             	r5 = r0			  ## avctp_user.c:329:0
 1e0b000:    bf f3 81 e9       	call -11518 <get_conn_for_addr : 1e08306 >			  ## avctp_user.c:330:25
 1e0b004:    04 08             	r4 = r0			  ## avctp_user.c:330:25
 1e0b006:    c7 ff c0 1a 00 00 	r7 = 6848 <__user_info : 1ac0 >
 1e0b00c:    0d 2c             	if (r6 == 0) goto 26 <free_conn_for_addr+0x2E : 1e0b028 >
 1e0b00e:    0c 28             	if (r4 == 0) goto 24 <free_conn_for_addr+0x2E : 1e0b028 >
 1e0b010:    00 69             	r0 = b[r4 + 16] (u)			  ## avctp_user.c:335:23
 1e0b012:    26 f3 03 00       	if ((r0 & 64) != 0) goto 6 <free_conn_for_addr+0x22 : 1e0b01c >			  ## avctp_user.c:335:23
 1e0b016:    70 fc a1 00       	r0 = r7 + 161			  ## avctp_user.c:338:17
 1e0b01a:    02 18             	goto 4 <free_conn_for_addr+0x26 : 1e0b020 >			  ## avctp_user.c:338:17
 1e0b01c:    70 fc 0a 01       	r0 = r7 + 266			  ## avctp_user.c:336:17
 1e0b020:    62 70             	r2 = 6
 1e0b022:    51 08             	r1 = r5
 1e0b024:    97 f3 5e df       	call 3129020 <memcpy : 106ee4 >
 1e0b028:    15 28             	if (r4 == 0) goto 42 <free_conn_for_addr+0x5A : 1e0b054 >
 1e0b02a:    00 69             	r0 = b[r4 + 16] (u)			  ## avctp_user.c:345:22
 1e0b02c:    31 48             	r1 = [r4 + 12]			  ## avctp_user.c:345:22
 1e0b02e:    08 69             	b[r4 + 16] = r0			  ## avctp_user.c:345:22
 1e0b030:    30 fd 20 1c       	r0 = r1 & 3758096383			  ## avctp_user.c:345:22
 1e0b034:    38 48             	[r4 + 12] = r0			  ## avctp_user.c:345:22
 1e0b036:    00 f7 12 71       	r0 = h[r7 + 274] (u)			  ## avctp_user.c:346:37
 1e0b03a:    31 fd 07 09       	r1 = r0 & 4294967288			  ## avctp_user.c:346:37
 1e0b03e:    70 80             	r0 += 7			  ## avctp_user.c:346:37
 1e0b040:    20 fd 07 09       	r0 = r0 & 7			  ## avctp_user.c:346:37
 1e0b044:    50 b2             	r0 |= r1			  ## avctp_user.c:346:37
 1e0b046:    10 f7 12 71       	h[r7 + 274] = r0			  ## avctp_user.c:346:37
 1e0b04a:    01 70             	r1 = 0			  ## avctp_user.c:350:9
 1e0b04c:    82 71             	r2 = 24			  ## avctp_user.c:350:9
 1e0b04e:    40 08             	r0 = r4			  ## avctp_user.c:350:9
 1e0b050:    97 f3 4e df       	call 3128988 <memset : 106ef0 >			  ## avctp_user.c:350:9
 1e0b054:    70 fc 88 00       	r0 = r7 + 136
 1e0b058:    31 40             	r1 = [r0 + 12]			  ## avctp_user.c:354:19
 1e0b05a:    3d f3 06 10       	if ((r1 & 536870912) != 0) goto 12 <free_conn_for_addr+0x70 : 1e0b06a >			  ## avctp_user.c:354:19
 1e0b05e:    80 81             	r0 += 24			  ## avctp_user.c:352:5
 1e0b060:    71 fc a0 00       	r1 = r7 + 160			  ## avctp_user.c:352:5
 1e0b064:    10 f2 f8 3f       	if (r0 < r1) goto -16 <free_conn_for_addr+0x5E : 1e0b058 >			  ## avctp_user.c:352:5
 1e0b068:    57 01             	{pc, r7-r4} = [sp++]
 1e0b06a:    21 50             	r1 = h[r0 + 4] (u)			  ## avctp_user.c:356:13
 1e0b06c:    11 f7 cc 70       	h[r7 + 204] = r1			  ## avctp_user.c:356:13
 1e0b070:    00 40             	r0 = [r0 + 0]			  ## avctp_user.c:356:13
 1e0b072:    10 f6 c8 70       	[r7 + 200] = r0			  ## avctp_user.c:356:13
 1e0b076:    57 01             	{pc, r7-r4} = [sp++]			  ## avctp_user.c:356:13


packet_handler:
 1e0b078:    79 01             	[--sp] = {rets, r9-r4}			  ## btstack_main.c:189:0
 1e0b07a:    fc 0b             	sp += -8			  ## btstack_main.c:189:0
 1e0b07c:    34 08             	r4 = r3			  ## btstack_main.c:189:0
 1e0b07e:    41 e0 4b 11       	if (r1 != 4) goto 662 <.GJTIE669_0_0_+0x270 : 1e0b318 >			  ## btstack_main.c:189:0
 1e0b082:    00 68             	r0 = b[r4 + 0] (u)			  ## btstack_main.c:189:0
 1e0b084:    c0 e6 17 d0       	ifs (r0 <= 108) goto 46 <.GJTIE669_0_0_+0xE : 1e0b0b6 >			  ## btstack_main.c:189:0
 1e0b088:    01 fc 0b ff       	r1 = r0 + -245			  ## btstack_main.c:189:0
 1e0b08c:    91 e0 73 80       	if (r1 > 9) goto 230 <.GJTIE669_0_0_+0xCE : 1e0b176 >			  ## btstack_main.c:189:0
 1e0b090:    48 c0             	r0 = r1 << 1			  ## btstack_main.c:189:0
 1e0b092:    b0 00             	tbh [r0]			  ## btstack_main.c:189:0


.GJTIL669_0_0_:
 1e0b094:    0a 00     < 10 : 0xA >
 1e0b096:    8e 00     < 142 : 0x8E >
 1e0b098:    91 00     < 145 : 0x91 >
 1e0b09a:    42 01     < 322 : 0x142 >
 1e0b09c:    94 00     < 148 : 0x94 >
 1e0b09e:    42 01     < 322 : 0x142 >
 1e0b0a0:    42 01     < 322 : 0x142 >
 1e0b0a2:    42 01     < 322 : 0x142 >
 1e0b0a4:    42 01     < 322 : 0x142 >
 1e0b0a6:    9a 00     < 154 : 0x9A >
 1e0b0a8:    23 68             	r3 = b[r4 + 2] (u)			  ## btstack_main.c:319:90
 1e0b0aa:    30 98             	r0 = r4 + 3			  ## btstack_main.c:319:38
 1e0b0ac:    c1 ff 00 49 43 48 	r1 = 1212369152 <uECC_vli_cmp_unsafe+0x32D904 : 434900 >			  ## btstack_main.c:319:13
 1e0b0b2:    52 7f             	r2 = 245			  ## btstack_main.c:319:13
 1e0b0b4:    2f 19             	goto 606 <.GJTIE669_0_0_+0x26C : 1e0b314 >
 1e0b0b6:    c6 ff 90 09 00 00 	r6 = 2448 <stack_configs_app : 990 >
 1e0b0bc:    30 e0 1e 00       	if (r0 == 3) goto 60 <.GJTIE669_0_0_+0x54 : 1e0b0fc >
 1e0b0c0:    50 e0 37 00       	if (r0 == 5) goto 110 <.GJTIE669_0_0_+0x8A : 1e0b132 >
 1e0b0c4:    c0 e2 28 11       	if (r0 != 44) goto 592 <.GJTIE669_0_0_+0x270 : 1e0b318 >
 1e0b0c8:    a0 68             	r0 = b[r4 + 10] (u)			  ## btstack_main.c:272:13
 1e0b0ca:    91 68             	r1 = b[r4 + 9] (u)			  ## btstack_main.c:272:13
 1e0b0cc:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## btstack_main.c:272:13
 1e0b0d0:    91 f5 04 00       	h[sp+4] = r1			  ## btstack_main.c:272:13
 1e0b0d4:    80 68             	r0 = b[r4 + 8] (u)			  ## btstack_main.c:272:13
 1e0b0d6:    71 68             	r1 = b[r4 + 7] (u)			  ## btstack_main.c:272:13
 1e0b0d8:    62 68             	r2 = b[r4 + 6] (u)			  ## btstack_main.c:272:13
 1e0b0da:    53 68             	r3 = b[r4 + 5] (u)			  ## btstack_main.c:272:13
 1e0b0dc:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## btstack_main.c:272:13
 1e0b0e0:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## btstack_main.c:272:13
 1e0b0e4:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## btstack_main.c:272:13
 1e0b0e8:    0b 02             	[sp] = r3			  ## btstack_main.c:272:13
 1e0b0ea:    11 69             	r1 = b[r4 + 17] (u)			  ## btstack_main.c:273:50
 1e0b0ec:    02 69             	r2 = b[r4 + 16] (u)			  ## btstack_main.c:273:50
 1e0b0ee:    20 69             	r0 = b[r4 + 18] (u)			  ## btstack_main.c:273:13
 1e0b0f0:    d8 fd 40 21       	r2 <= insert(r1, p:8, l:24)			  ## btstack_main.c:273:50
 1e0b0f4:    a1 04             	r1 = r2.l (u)			  ## btstack_main.c:273:13
 1e0b0f6:    02 a0             	r2 = sp + 0			  ## btstack_main.c:273:13
 1e0b0f8:    39 17             	call -398 <aec_sco_connection_start : 1e0af6c >			  ## btstack_main.c:273:13
 1e0b0fa:    0e 19             	goto 540 <.GJTIE669_0_0_+0x270 : 1e0b318 >			  ## btstack_main.c:273:13
 1e0b0fc:    a0 68             	r0 = b[r4 + 10] (u)			  ## btstack_main.c:198:13
 1e0b0fe:    91 68             	r1 = b[r4 + 9] (u)			  ## btstack_main.c:198:13
 1e0b100:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## btstack_main.c:198:13
 1e0b104:    91 f5 04 00       	h[sp+4] = r1			  ## btstack_main.c:198:13
 1e0b108:    80 68             	r0 = b[r4 + 8] (u)			  ## btstack_main.c:198:13
 1e0b10a:    71 68             	r1 = b[r4 + 7] (u)			  ## btstack_main.c:198:13
 1e0b10c:    62 68             	r2 = b[r4 + 6] (u)			  ## btstack_main.c:198:13
 1e0b10e:    53 68             	r3 = b[r4 + 5] (u)			  ## btstack_main.c:198:13
 1e0b110:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## btstack_main.c:198:13
 1e0b114:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## btstack_main.c:198:13
 1e0b118:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## btstack_main.c:198:13
 1e0b11c:    0b 02             	[sp] = r3			  ## btstack_main.c:198:13
 1e0b11e:    21 68             	r1 = b[r4 + 2] (u)			  ## btstack_main.c:199:17
 1e0b120:    b0 68             	r0 = b[r4 + 11] (u)			  ## btstack_main.c:199:17
 1e0b122:    5d 22             	if (r1 == 0) goto 186 <.GJTIE669_0_0_+0x136 : 1e0b1de >			  ## btstack_main.c:199:17
 1e0b124:    10 e0 f8 10       	if (r0 != 1) goto 496 <.GJTIE669_0_0_+0x270 : 1e0b318 >
 1e0b128:    05 a0             	r5 = sp + 0
 1e0b12a:    01 70             	r1 = 0			  ## btstack_main.c:218:21
 1e0b12c:    50 08             	r0 = r5			  ## btstack_main.c:218:21
 1e0b12e:    65 17             	call -310 <free_conn_for_addr : 1e0affa >			  ## btstack_main.c:218:21
 1e0b130:    eb 18             	goto 470 <.GJTIE669_0_0_+0x260 : 1e0b308 >			  ## btstack_main.c:218:21
 1e0b132:    c0 68             	r0 = b[r4 + 12] (u)			  ## utils.c:188:5
 1e0b134:    b1 68             	r1 = b[r4 + 11] (u)			  ## utils.c:188:5
 1e0b136:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## utils.c:188:5
 1e0b13a:    91 f5 04 00       	h[sp+4] = r1			  ## utils.c:188:5
 1e0b13e:    a0 68             	r0 = b[r4 + 10] (u)			  ## utils.c:188:5
 1e0b140:    91 68             	r1 = b[r4 + 9] (u)			  ## utils.c:188:5
 1e0b142:    82 68             	r2 = b[r4 + 8] (u)			  ## utils.c:188:5
 1e0b144:    73 68             	r3 = b[r4 + 7] (u)			  ## utils.c:188:5
 1e0b146:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## utils.c:188:5
 1e0b14a:    95 02             	r5 = [sp+36]			  ## utils.c:188:5
 1e0b14c:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## utils.c:188:5
 1e0b150:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## utils.c:188:5
 1e0b154:    0b 02             	[sp] = r3			  ## utils.c:188:5
 1e0b156:    00 a0             	r0 = sp + 0			  ## utils.c:188:5
 1e0b158:    fc 16             	call -520 <update_connectiong_mac_addr : 1e0af52 >			  ## btstack_main.c:246:13
 1e0b15a:    75 e0 dd 30       	if (r5 < 7) goto 442 <.GJTIE669_0_0_+0x270 : 1e0b318 >			  ## btstack_main.c:246:13
 1e0b15e:    60 68             	r0 = b[r4 + 6] (u)			  ## btstack_main.c:248:21
 1e0b160:    4a 20             	if (r0 == 0) goto 148 <.GJTIE669_0_0_+0x14E : 1e0b1f6 >			  ## btstack_main.c:248:21
 1e0b162:    20 e0 48 00       	if (r0 == 2) goto 144 <.GJTIE669_0_0_+0x14E : 1e0b1f6 >
 1e0b166:    10 e0 d7 10       	if (r0 != 1) goto 430 <.GJTIE669_0_0_+0x270 : 1e0b318 >
 1e0b16a:    05 a0             	r5 = sp + 0
 1e0b16c:    11 70             	r1 = 1			  ## btstack_main.c:250:21
 1e0b16e:    50 08             	r0 = r5			  ## btstack_main.c:250:21
 1e0b170:    44 17             	call -376 <free_conn_for_addr : 1e0affa >			  ## btstack_main.c:250:21
 1e0b172:    53 68             	r3 = b[r4 + 5] (u)			  ## btstack_main.c:254:105
 1e0b174:    ca 18             	goto 404 <.GJTIE669_0_0_+0x262 : 1e0b30a >			  ## btstack_main.c:254:105
 1e0b176:    d0 e6 cf 10       	if (r0 != 109) goto 414 <.GJTIE669_0_0_+0x270 : 1e0b318 >
 1e0b17a:    90 68             	r0 = b[r4 + 9] (u)			  ## utils.c:188:5
 1e0b17c:    81 68             	r1 = b[r4 + 8] (u)			  ## utils.c:188:5
 1e0b17e:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## utils.c:188:5
 1e0b182:    91 f5 04 00       	h[sp+4] = r1			  ## utils.c:188:5
 1e0b186:    70 68             	r0 = b[r4 + 7] (u)			  ## utils.c:188:5
 1e0b188:    61 68             	r1 = b[r4 + 6] (u)			  ## utils.c:188:5
 1e0b18a:    52 68             	r2 = b[r4 + 5] (u)			  ## utils.c:188:5
 1e0b18c:    43 68             	r3 = b[r4 + 4] (u)			  ## utils.c:188:5
 1e0b18e:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## utils.c:188:5
 1e0b192:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## utils.c:188:5
 1e0b196:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## utils.c:188:5
 1e0b19a:    0b 02             	[sp] = r3			  ## utils.c:188:5
 1e0b19c:    30 68             	r0 = b[r4 + 3] (u)			  ## btstack_main.c:286:18
 1e0b19e:    10 e0 bb 10       	if (r0 != 1) goto 374 <.GJTIE669_0_0_+0x270 : 1e0b318 >			  ## btstack_main.c:286:18
 1e0b1a2:    23 68             	r3 = b[r4 + 2] (u)			  ## btstack_main.c:291:101
 1e0b1a4:    00 a0             	r0 = sp + 0			  ## btstack_main.c:291:101
 1e0b1a6:    c1 ff 00 49 43 48 	r1 = 1212369152 <uECC_vli_cmp_unsafe+0x32D904 : 434900 >			  ## btstack_main.c:291:21
 1e0b1ac:    d2 76             	r2 = 109			  ## btstack_main.c:291:21
 1e0b1ae:    b2 18             	goto 356 <.GJTIE669_0_0_+0x26C : 1e0b314 >			  ## btstack_main.c:291:21
 1e0b1b0:    00 70             	r0 = 0			  ## btstack_main.c:346:13
 1e0b1b2:    31 73             	r1 = 51			  ## btstack_main.c:346:13
 1e0b1b4:    05 18             	goto 10 <.GJTIE669_0_0_+0x118 : 1e0b1c0 >			  ## btstack_main.c:346:13
 1e0b1b6:    00 70             	r0 = 0			  ## btstack_main.c:342:13
 1e0b1b8:    81 70             	r1 = 8			  ## btstack_main.c:342:13
 1e0b1ba:    02 18             	goto 4 <.GJTIE669_0_0_+0x118 : 1e0b1c0 >			  ## btstack_main.c:342:13
 1e0b1bc:    20 98             	r0 = r4 + 2			  ## btstack_main.c:337:39
 1e0b1be:    51 70             	r1 = 5			  ## btstack_main.c:337:13
 1e0b1c0:    02 70             	r2 = 0
 1e0b1c2:    bf f3 cf e8       	call -11874 <update_bt_current_status : 1e08364 >
 1e0b1c6:    a8 18             	goto 336 <.GJTIE669_0_0_+0x270 : 1e0b318 >
 1e0b1c8:    20 68             	r0 = b[r4 + 2] (u)			  ## btstack_main.c:298:17
 1e0b1ca:    45 20             	if (r0 == 0) goto 138 <.GJTIE669_0_0_+0x1AE : 1e0b256 >			  ## btstack_main.c:298:17
 1e0b1cc:    bf f3 cd e9       	call -11366 <set_remote_test_flag : 1e0856a >			  ## btstack_main.c:299:17
 1e0b1d0:    23 68             	r3 = b[r4 + 2] (u)			  ## btstack_main.c:301:97
 1e0b1d2:    02 68             	r2 = b[r4 + 0] (u)			  ## btstack_main.c:301:17
 1e0b1d4:    00 a0             	r0 = sp + 0			  ## btstack_main.c:301:17
 1e0b1d6:    c1 ff 00 49 43 48 	r1 = 1212369152 <uECC_vli_cmp_unsafe+0x32D904 : 434900 >			  ## btstack_main.c:301:17
 1e0b1dc:    9b 18             	goto 310 <.GJTIE669_0_0_+0x26C : 1e0b314 >			  ## btstack_main.c:301:17
 1e0b1de:    10 e0 44 10       	if (r0 != 1) goto 136 <.GJTIE669_0_0_+0x1C2 : 1e0b26a >			  ## btstack_main.c:200:21
 1e0b1e2:    40 68             	r0 = b[r4 + 4] (u)			  ## btstack_main.c:202:62
 1e0b1e4:    37 68             	r7 = b[r4 + 3] (u)			  ## btstack_main.c:202:62
 1e0b1e6:    d8 fd 40 70       	r7 <= insert(r0, p:8, l:24)			  ## btstack_main.c:202:62
 1e0b1ea:    00 a0             	r0 = sp + 0			  ## btstack_main.c:202:62
 1e0b1ec:    bf f3 8b e8       	call -12010 <get_conn_for_addr : 1e08306 >			  ## avctp_user.c:289:12
 1e0b1f0:    44 20             	if (r0 == 0) goto 136 <.GJTIE669_0_0_+0x1D2 : 1e0b27a >
 1e0b1f2:    3f 50             	h[r0 + 6] = r7			  ## avctp_user.c:292:34
 1e0b1f4:    86 18             	goto 268 <.GJTIE669_0_0_+0x25A : 1e0b302 >			  ## avctp_user.c:292:34
 1e0b1f6:    50 6d             	r0 = b[r6 + 21] (u)			  ## bt_audio.c:148:30
 1e0b1f8:    40 6d             	r0 = b[r6 + 20] (u)			  ## bt_audio.c:148:30
 1e0b1fa:    31 6d             	r1 = b[r6 + 19] (u)			  ## bt_audio.c:148:30
 1e0b1fc:    22 6d             	r2 = b[r6 + 18] (u)			  ## bt_audio.c:148:30
 1e0b1fe:    13 6d             	r3 = b[r6 + 17] (u)			  ## bt_audio.c:148:30
 1e0b200:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## bt_audio.c:148:30
 1e0b204:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## bt_audio.c:148:30
 1e0b208:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## bt_audio.c:148:30
 1e0b20c:    f0 04             	r0 = r3.l (s)			  ## bt_audio.c:148:10
 1e0b20e:    f0 ef 83 c0       	ifs (r0 > -1) goto 262 <.GJTIE669_0_0_+0x270 : 1e0b318 >			  ## bt_audio.c:148:10
 1e0b212:    c1 ff 00 4e 4f 43 	r1 = 1129270784 <uECC_vli_cmp_unsafe+0x13EDE04 : 14f4e00 >			  ## bt_audio.c:156:5
 1e0b218:    00 70             	r0 = 0			  ## bt_audio.c:156:5
 1e0b21a:    92 71             	r2 = 25			  ## bt_audio.c:156:5
 1e0b21c:    f3 7f             	r3 = 255			  ## bt_audio.c:156:5
 1e0b21e:    04 70             	r4 = 0			  ## bt_audio.c:156:5
 1e0b220:    bf f3 87 e8       	call -12018 <bt_event_update_to_user : 1e08332 >			  ## bt_audio.c:156:5
 1e0b224:    20 6d             	r0 = b[r6 + 18] (u)			  ## bt_audio.c:157:46
 1e0b226:    11 6d             	r1 = b[r6 + 17] (u)			  ## bt_audio.c:157:46
 1e0b228:    42 6d             	r2 = b[r6 + 20] (u)			  ## bt_audio.c:157:46
 1e0b22a:    33 6d             	r3 = b[r6 + 19] (u)			  ## bt_audio.c:157:46
 1e0b22c:    55 6d             	r5 = b[r6 + 21] (u)			  ## bt_audio.c:157:46
 1e0b22e:    5d 6d             	b[r6 + 21] = r5			  ## bt_audio.c:157:46
 1e0b230:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## bt_audio.c:157:46
 1e0b234:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## bt_audio.c:157:46
 1e0b238:    d0 fd 80 13       	r1 <= insert(r3, p:16, l:16)			  ## bt_audio.c:157:46
 1e0b23c:    30 fd 80 1a       	r0 = r1 & 4294934527			  ## bt_audio.c:157:46
 1e0b240:    18 6d             	b[r6 + 17] = r0			  ## bt_audio.c:157:46
 1e0b242:    01 d6             	r1 = r0 >> 24			  ## bt_audio.c:157:46
 1e0b244:    49 6d             	b[r6 + 20] = r1			  ## bt_audio.c:157:46
 1e0b246:    01 d4             	r1 = r0 >> 16			  ## bt_audio.c:157:46
 1e0b248:    39 6d             	b[r6 + 19] = r1			  ## bt_audio.c:157:46
 1e0b24a:    00 d2             	r0 = r0 >> 8			  ## bt_audio.c:157:46
 1e0b24c:    28 6d             	b[r6 + 18] = r0			  ## bt_audio.c:157:46
 1e0b24e:    fc 5c             	h[r6 + 30] = r4			  ## bt_audio.c:158:5
 1e0b250:    ec 5c             	h[r6 + 28] = r4			  ## bt_audio.c:158:5
 1e0b252:    dc 5c             	h[r6 + 26] = r4			  ## bt_audio.c:158:5
 1e0b254:    61 18             	goto 194 <.GJTIE669_0_0_+0x270 : 1e0b318 >			  ## bt_audio.c:158:5
 1e0b256:    bf f3 d9 ec       	call -9806 <get_remote_test_flag : 1e08c0c >			  ## btstack_main.c:312:24
 1e0b25a:    5e 20             	if (r0 == 0) goto 188 <.GJTIE669_0_0_+0x270 : 1e0b318 >
 1e0b25c:    00 a0             	r0 = sp + 0
 1e0b25e:    c1 ff 00 49 43 48 	r1 = 1212369152 <uECC_vli_cmp_unsafe+0x32D904 : 434900 >			  ## btstack_main.c:313:17
 1e0b264:    e2 7f             	r2 = 254			  ## btstack_main.c:313:17
 1e0b266:    03 70             	r3 = 0			  ## btstack_main.c:313:17
 1e0b268:    55 18             	goto 170 <.GJTIE669_0_0_+0x26C : 1e0b314 >			  ## btstack_main.c:313:17
 1e0b26a:    90 b0             	r0 |= 2			  ## btstack_main.c:212:58
 1e0b26c:    20 e0 54 10       	if (r0 != 2) goto 168 <.GJTIE669_0_0_+0x270 : 1e0b318 >			  ## btstack_main.c:212:58
 1e0b270:    02 a0             	r2 = sp + 0
 1e0b272:    20 70             	r0 = 2			  ## btstack_main.c:214:21
 1e0b274:    e1 71             	r1 = 30			  ## btstack_main.c:214:21
 1e0b276:    7a 16             	call -780 <aec_sco_connection_start : 1e0af6c >			  ## btstack_main.c:214:21
 1e0b278:    4f 18             	goto 158 <.GJTIE669_0_0_+0x270 : 1e0b318 >			  ## btstack_main.c:214:21
 1e0b27a:    c0 ff c0 1a 00 00 	r0 = 6848 <__user_info : 1ac0 >
 1e0b280:    05 fc 88 00       	r5 = r0 + 136
 1e0b284:    31 4a             	r1 = [r5 + 12]			  ## avctp_user.c:296:20
 1e0b286:    1d f3 06 10       	if ((r1 & 536870912) == 0) goto 12 <.GJTIE669_0_0_+0x1EE : 1e0b296 >			  ## avctp_user.c:296:20
 1e0b28a:    85 81             	r5 += 24			  ## avctp_user.c:295:5
 1e0b28c:    01 fc a0 00       	r1 = r0 + 160			  ## avctp_user.c:295:5
 1e0b290:    15 f2 f8 3f       	if (r5 < r1) goto -16 <.GJTIE669_0_0_+0x1DC : 1e0b284 >			  ## avctp_user.c:295:5
 1e0b294:    36 18             	goto 108 <.GJTIE669_0_0_+0x25A : 1e0b302 >			  ## avctp_user.c:295:5
 1e0b296:    02 6b             	r2 = b[r5 + 16] (u)			  ## avctp_user.c:296:20
 1e0b298:    0a 6b             	b[r5 + 16] = r2			  ## avctp_user.c:297:26
 1e0b29a:    91 be             	r1 |= 536870912			  ## avctp_user.c:297:26
 1e0b29c:    39 4a             	[r5 + 12] = r1			  ## avctp_user.c:297:26
 1e0b29e:    01 f7 12 01       	r1 = h[r0 + 274] (u)			  ## avctp_user.c:298:41
 1e0b2a2:    32 fd 07 19       	r2 = r1 & 4294967288			  ## avctp_user.c:298:41
 1e0b2a6:    11 80             	r1 += 1			  ## avctp_user.c:298:41
 1e0b2a8:    21 fd 07 19       	r1 = r1 & 7			  ## avctp_user.c:298:41
 1e0b2ac:    51 b4             	r1 |= r2			  ## avctp_user.c:298:41
 1e0b2ae:    11 f7 12 01       	h[r0 + 274] = r1			  ## avctp_user.c:298:41
 1e0b2b2:    08 f6 0c 50       	r8 = [r5 + 12]			  ## avctp_user.c:299:30
 1e0b2b6:    09 f9 10 50       	r9 = b[r5 + 16] (u)			  ## avctp_user.c:299:30
 1e0b2ba:    01 a0             	r1 = sp + 0			  ## avctp_user.c:299:30
 1e0b2bc:    62 70             	r2 = 6			  ## avctp_user.c:302:13
 1e0b2be:    50 08             	r0 = r5			  ## avctp_user.c:302:13
 1e0b2c0:    97 f3 10 de       	call 3128352 <memcpy : 106ee4 >			  ## avctp_user.c:302:13
 1e0b2c4:    00 70             	r0 = 0			  ## avctp_user.c:302:13
 1e0b2c6:    a8 6a             	b[r5 + 10] = r0			  ## avctp_user.c:303:46
 1e0b2c8:    3f 5a             	h[r5 + 6] = r7			  ## avctp_user.c:304:38
 1e0b2ca:    20 fd 87 99       	r0 = r9 & 135			  ## avctp_user.c:307:29
 1e0b2ce:    08 6b             	b[r5 + 16] = r0			  ## avctp_user.c:307:29
 1e0b2d0:    c0 ff f0 0f f0 ff 	r0 = 4293922800 <bank_code_load_addr+0xDD9F8 : 1f00ff0 >			  ## avctp_user.c:307:29
 1e0b2d6:    e2 fd 80 00       	r0 = r0 & r8			  ## avctp_user.c:307:29
 1e0b2da:    00 fd 05 09       	r0 = r0 | 5			  ## avctp_user.c:307:29
 1e0b2de:    38 4a             	[r5 + 12] = r0			  ## avctp_user.c:307:29
 1e0b2e0:    30 6d             	r0 = b[r6 + 19] (u)			  ## avctp_user.c:308:53
 1e0b2e2:    41 6d             	r1 = b[r6 + 20] (u)			  ## avctp_user.c:308:53
 1e0b2e4:    22 6d             	r2 = b[r6 + 18] (u)			  ## avctp_user.c:308:53
 1e0b2e6:    13 6d             	r3 = b[r6 + 17] (u)			  ## avctp_user.c:308:53
 1e0b2e8:    55 6d             	r5 = b[r6 + 21] (u)			  ## avctp_user.c:308:53
 1e0b2ea:    49 6d             	b[r6 + 20] = r1			  ## avctp_user.c:308:53
 1e0b2ec:    2a 6d             	b[r6 + 18] = r2			  ## avctp_user.c:308:53
 1e0b2ee:    1b 6d             	b[r6 + 17] = r3			  ## avctp_user.c:308:53
 1e0b2f0:    5d 6d             	b[r6 + 21] = r5			  ## avctp_user.c:308:53
 1e0b2f2:    c8 fd 40 01       	r0 <= insert(r1, p:8, l:8)			  ## avctp_user.c:308:53
 1e0b2f6:    d0 fd 80 30       	r3 <= insert(r0, p:16, l:16)			  ## avctp_user.c:308:53
 1e0b2fa:    00 fd 40 3b       	r0 = r3 | 4194304			  ## avctp_user.c:308:53
 1e0b2fe:    00 d4             	r0 = r0 >> 16			  ## avctp_user.c:308:53
 1e0b300:    38 6d             	b[r6 + 19] = r0			  ## avctp_user.c:308:53
 1e0b302:    05 a0             	r5 = sp + 0
 1e0b304:    50 08             	r0 = r5			  ## btstack_main.c:205:21
 1e0b306:    25 16             	call -950 <update_connectiong_mac_addr : 1e0af52 >			  ## btstack_main.c:205:21
 1e0b308:    23 68             	r3 = b[r4 + 2] (u)
 1e0b30a:    02 68             	r2 = b[r4 + 0] (u)
 1e0b30c:    c1 ff 00 49 43 48 	r1 = 1212369152 <uECC_vli_cmp_unsafe+0x32D904 : 434900 >
 1e0b312:    50 08             	r0 = r5
 1e0b314:    bf f3 0d e8       	call -12262 <bt_event_update_to_user : 1e08332 >
 1e0b318:    04 0a             	sp += 8
 1e0b31a:    59 01             	{pc, r9-r4} = [sp++]			  ## btstack_main.c:350:1


att_send_set_mtu_size:
 1e0b31c:    77 01             	[--sp] = {rets, r7-r4}			  ## att_send.c:642:0
 1e0b31e:    c5 ff e0 1b 00 00 	r5 = 7136 <att_s_hdl : 1be0 >			  ## att_send.c:642:0
 1e0b324:    02 4a             	r2 = [r5 + 0]			  ## att_send.c:643:5
 1e0b326:    14 08             	r4 = r1			  ## att_send.c:643:5
 1e0b328:    1f 24             	if (r2 == 0) goto 62 <att_send_set_mtu_size+0x4C : 1e0b368 >
 1e0b32a:    02 86             	r2 += 96			  ## att_send.c:121:52
 1e0b32c:    01 70             	r1 = 0			  ## att_send.c:121:52
 1e0b32e:    06 70             	r6 = 0			  ## att_send.c:121:52
 1e0b330:    03 70             	r3 = 0			  ## att_send.c:121:52
 1e0b332:    07 f8 00 26       	r7 = h[r2+r6] (u)			  ## att_send.c:121:52
 1e0b336:    bf d1             	r7 = r7 >> 6			  ## att_send.c:121:52
 1e0b338:    07 f2 06 00       	if (r7 == r0) goto 12 <att_send_set_mtu_size+0x2C : 1e0b348 >			  ## att_send.c:121:13
 1e0b33c:    11 80             	r1 += 1			  ## att_send.c:120:23
 1e0b33e:    13 80             	r3 += 1			  ## att_send.c:120:43
 1e0b340:    46 80             	r6 += 4			  ## att_send.c:120:23
 1e0b342:    83 e0 f6 bf       	ifs (r3 < 8) goto -20 <att_send_set_mtu_size+0x16 : 1e0b332 >			  ## att_send.c:120:23
 1e0b346:    57 01             	{pc, r7-r4} = [sp++]			  ## att_send.c:662:1
 1e0b348:    40 04             	r0 = r1.b0 (u)			  ## att_send.c:648:19
 1e0b34a:    80 e0 0d 80       	if (r0 > 8) goto 26 <att_send_set_mtu_size+0x4C : 1e0b368 >
 1e0b34e:    97 f3 25 dd       	call 3127882 <local_irq_disable : 106d9c >			  ## att_send.c:652:5
 1e0b352:    00 4a             	r0 = [r5 + 0]			  ## att_send.c:654:20
 1e0b354:    01 f7 b0 00       	r1 = h[r0 + 176] (u)			  ## att_send.c:654:28
 1e0b358:    60 09             	r0 += r6			  ## att_send.c:654:28
 1e0b35a:    41 f2 01 80       	if (r1 > r4) goto 2 <att_send_set_mtu_size+0x44 : 1e0b360 >			  ## att_send.c:654:28
 1e0b35e:    14 08             	r4 = r1			  ## att_send.c:656:5
 1e0b360:    14 f7 62 00       	h[r0 + 98] = r4
 1e0b364:    97 f3 18 dd       	call 3127856 <local_irq_enable : 106d98 >			  ## att_send.c:660:5
 1e0b368:    57 01             	{pc, r7-r4} = [sp++]			  ## att_send.c:662:1


l2cap_request_can_send_fix_channel_now_event:
 1e0b36a:    34 00             	[--sp] = rets			  ## l2cap.c:2186:0
 1e0b36c:    20 e0 06 00       	if (r0 == 2) goto 12 <l2cap_request_can_send_fix_channel_now_event+0x12 : 1e0b37c >			  ## l2cap.c:214:5
 1e0b370:    40 e0 06 00       	if (r0 == 4) goto 12 <l2cap_request_can_send_fix_channel_now_event+0x16 : 1e0b380 >
 1e0b374:    60 e0 0d 10       	if (r0 != 6) goto 26 <l2cap_request_can_send_fix_channel_now_event+0x28 : 1e0b392 >
 1e0b378:    10 70             	r0 = 1
 1e0b37a:    03 18             	goto 6 <l2cap_request_can_send_fix_channel_now_event+0x18 : 1e0b382 >
 1e0b37c:    20 70             	r0 = 2
 1e0b37e:    01 18             	goto 2 <l2cap_request_can_send_fix_channel_now_event+0x18 : 1e0b382 >
 1e0b380:    00 70             	r0 = 0
 1e0b382:    c0 c0             	r0 = r0 << 3			  ## l2cap.c:2193:33
 1e0b384:    c1 ff a8 1a 00 00 	r1 = 6824 <l2cap_fixed_channels : 1aa8 >			  ## l2cap.c:2193:33
 1e0b38a:    10 09             	r0 += r1			  ## l2cap.c:2193:33
 1e0b38c:    11 70             	r1 = 1			  ## l2cap.c:2193:58
 1e0b38e:    49 60             	b[r0 + 4] = r1			  ## l2cap.c:2193:58
 1e0b390:    5f 15             	call -1346 <l2cap_notify_channel_can_send : 1e0ae50 >			  ## l2cap.c:2194:5
 1e0b392:    30 00             	pc = [sp++]			  ## l2cap.c:2195:1


big_endian_store_16:
 1e0b394:    13 d2             	r3 = r2 >> 8			  ## utils.c:106:0
 1e0b396:    13 fa 00 01       	b[r0+r1] = r3			  ## utils.c:107:19
 1e0b39a:    11 80             	r1 += 1			  ## utils.c:107:15
 1e0b39c:    61 04             	r1 = r1.l (u)			  ## utils.c:108:5
 1e0b39e:    12 fa 00 01       	b[r0+r1] = r2			  ## utils.c:108:19
 1e0b3a2:    20 00             	rts			  ## utils.c:109:1


reverse_128:
 1e0b3a4:    f2 70             	r2 = 15			  ## utils.c:144:0
 1e0b3a6:    83 f9 01 00       	r3 = b[r0 ++= 1] (u)			  ## utils.c:124:28
 1e0b3aa:    13 fa 00 12       	b[r1+r2] = r3			  ## utils.c:124:26
 1e0b3ae:    f2 8f             	r2 += -1			  ## utils.c:123:19
 1e0b3b0:    f2 ef f9 1f       	if (r2 != -1) goto -14 <reverse_128+0x2 : 1e0b3a6 >			  ## utils.c:123:5
 1e0b3b4:    20 00             	rts			  ## utils.c:146:1


reverse_bd_addr:
 1e0b3b6:    52 70             	r2 = 5			  ## utils.c:153:0
 1e0b3b8:    83 f9 01 00       	r3 = b[r0 ++= 1] (u)			  ## utils.c:124:28
 1e0b3bc:    13 fa 00 12       	b[r1+r2] = r3			  ## utils.c:124:26
 1e0b3c0:    f2 8f             	r2 += -1			  ## utils.c:123:19
 1e0b3c2:    f2 ef f9 1f       	if (r2 != -1) goto -14 <reverse_bd_addr+0x2 : 1e0b3b8 >			  ## utils.c:123:5
 1e0b3c6:    20 00             	rts			  ## utils.c:155:1


btstack_linked_list_empty:
 1e0b3c8:    01 08             	r1 = r0			  ## btstack_linked_list.c:59:0
 1e0b3ca:    10 70             	r0 = 1			  ## btstack_linked_list.c:60:18
 1e0b3cc:    01 22             	if (r1 == 0) goto 2 <btstack_linked_list_empty+0x8 : 1e0b3d0 >			  ## btstack_linked_list.c:60:18
 1e0b3ce:    00 70             	r0 = 0			  ## btstack_linked_list.c:60:18
 1e0b3d0:    20 00             	rts			  ## btstack_linked_list.c:60:5


l2cap_can_send_fixed_channel_packet_now:
 1e0b3d2:    ff f3 bd ef       	goto -8326 <hci_can_send_acl_packet_now : 1e09350 >			  ## l2cap.c:2198:0


l2cap_send_prepared_connectionless:
 1e0b3d6:    78 01             	[--sp] = {rets, r8-r4}			  ## l2cap.c:2137:0
 1e0b3d8:    c5 ff 60 18 00 00 	r5 = 6240 <report_irq_stack_end : 1860 >			  ## l2cap.c:2137:0
 1e0b3de:    03 f9 15 52       	r3 = b[r5 + 533] (u)			  ## hci_vendor.c:1946:25
 1e0b3e2:    24 08             	r4 = r2			  ## hci_vendor.c:1946:25
 1e0b3e4:    18 08             	r8 = r1
 1e0b3e6:    06 08             	r6 = r0
 1e0b3e8:    77 75             	r7 = 87
 1e0b3ea:    1a 26             	if (r3 == 0) goto 52 <l2cap_send_prepared_connectionless+0x4A : 1e0b420 >
 1e0b3ec:    bf f3 a7 ef       	call -8370 <hci_number_free_acl_slots_for_handle : 1e0933e >			  ## hci_vendor.c:2127:12
 1e0b3f0:    10 e0 16 b0       	ifs (r0 < 1) goto 44 <l2cap_send_prepared_connectionless+0x4A : 1e0b420 >			  ## hci_vendor.c:2127:12
 1e0b3f4:    80 9a             	r0 = r5 + 8			  ## l2cap.c:2126:5
 1e0b3f6:    01 70             	r1 = 0			  ## l2cap.c:2126:5
 1e0b3f8:    62 08             	r2 = r6			  ## l2cap.c:2126:5
 1e0b3fa:    bf f3 50 e7       	call -12640 <little_endian_store_16 : 1e0829e >			  ## l2cap.c:2126:5
 1e0b3fe:    41 98             	r1 = r4 + 4			  ## l2cap.c:2128:48
 1e0b400:    62 04             	r2 = r1.l (u)			  ## l2cap.c:2128:5
 1e0b402:    21 70             	r1 = 2			  ## l2cap.c:2128:5
 1e0b404:    bf f3 4b e7       	call -12650 <little_endian_store_16 : 1e0829e >			  ## l2cap.c:2128:5
 1e0b408:    41 70             	r1 = 4			  ## l2cap.c:2130:5
 1e0b40a:    42 08             	r2 = r4			  ## l2cap.c:2130:5
 1e0b40c:    bf f3 47 e7       	call -12658 <little_endian_store_16 : 1e0829e >			  ## l2cap.c:2130:5
 1e0b410:    61 70             	r1 = 6			  ## l2cap.c:2132:5
 1e0b412:    82 08             	r2 = r8			  ## l2cap.c:2132:5
 1e0b414:    bf f3 43 e7       	call -12666 <little_endian_store_16 : 1e0829e >			  ## l2cap.c:2132:5
 1e0b418:    80 98             	r0 = r4 + 8			  ## l2cap.c:2155:58
 1e0b41a:    bf f3 09 f0       	call -8174 <hci_le_send_acl_packet_buffer : 1e09430 >			  ## l2cap.c:2155:12
 1e0b41e:    07 08             	r7 = r0			  ## l2cap.c:2155:12
 1e0b420:    70 08             	r0 = r7			  ## l2cap.c:2156:1
 1e0b422:    58 01             	{pc, r8-r4} = [sp++]			  ## l2cap.c:2156:1


l2cap_send_connectionless:
 1e0b424:    76 01             	[--sp] = {rets, r6-r4}			  ## l2cap.c:2160:0
 1e0b426:    24 08             	r4 = r2			  ## l2cap.c:2160:0
 1e0b428:    16 08             	r6 = r1			  ## l2cap.c:2160:0
 1e0b42a:    05 08             	r5 = r0			  ## l2cap.c:2160:0
 1e0b42c:    bf f3 90 ef       	call -8416 <hci_can_send_acl_packet_now : 1e09350 >			  ## l2cap.c:2162:10
 1e0b430:    0d 20             	if (r0 == 0) goto 26 <l2cap_send_connectionless+0x28 : 1e0b44c >			  ## l2cap.c:2162:10
 1e0b432:    bf f3 9e ef       	call -8388 <hci_reserve_packet_buffer : 1e09372 >			  ## l2cap.c:2166:5
 1e0b436:    c0 ff 70 18 00 00 	r0 = 6256 <report_irq_stack_end+0x10 : 1870 >			  ## l2cap.c:2170:5
 1e0b43c:    61 08             	r1 = r6			  ## l2cap.c:2170:5
 1e0b43e:    42 08             	r2 = r4			  ## l2cap.c:2170:5
 1e0b440:    97 f3 50 dd       	call 3127968 <memcpy : 106ee4 >			  ## l2cap.c:2170:5
 1e0b444:    61 70             	r1 = 6			  ## l2cap.c:2172:12
 1e0b446:    50 08             	r0 = r5			  ## l2cap.c:2172:12
 1e0b448:    42 08             	r2 = r4			  ## l2cap.c:2172:12
 1e0b44a:    c5 17             	call -118 <l2cap_send_prepared_connectionless : 1e0b3d6 >			  ## l2cap.c:2172:12
 1e0b44c:    56 01             	{pc, r6-r4} = [sp++]


gap_le_get_own_address:
 1e0b44e:    75 01             	[--sp] = {rets, r5, r4}			  ## hci_vendor.c:2196:0
 1e0b450:    fc 0b             	sp += -8			  ## hci_vendor.c:2196:0
 1e0b452:    24 08             	r4 = r2			  ## hci_vendor.c:2196:0
 1e0b454:    15 08             	r5 = r1			  ## hci_vendor.c:2196:0
 1e0b456:    bf f3 57 e4       	call -14162 <le_hci_connection_for_handle : 1e07d08 >			  ## hci_vendor.c:2199:39
 1e0b45a:    16 20             	if (r0 == 0) goto 44 <gap_le_get_own_address+0x3A : 1e0b488 >			  ## hci_vendor.c:2201:9
 1e0b45c:    61 40             	r1 = [r0 + 24]			  ## hci_vendor.c:2202:34
 1e0b45e:    09 6a             	b[r5 + 0] = r1			  ## hci_vendor.c:2202:20
 1e0b460:    01 f9 21 00       	r1 = b[r0 + 33] (u)			  ## hci_vendor.c:2203:9
 1e0b464:    02 f9 20 00       	r2 = b[r0 + 32] (u)			  ## hci_vendor.c:2203:9
 1e0b468:    d8 fd 40 21       	r2 <= insert(r1, p:8, l:24)			  ## hci_vendor.c:2203:9
 1e0b46c:    92 f5 04 00       	h[sp+4] = r2			  ## hci_vendor.c:2203:9
 1e0b470:    f1 61             	r1 = b[r0 + 31] (u)			  ## hci_vendor.c:2203:9
 1e0b472:    e2 61             	r2 = b[r0 + 30] (u)			  ## hci_vendor.c:2203:9
 1e0b474:    d3 61             	r3 = b[r0 + 29] (u)			  ## hci_vendor.c:2203:9
 1e0b476:    c0 61             	r0 = b[r0 + 28] (u)			  ## hci_vendor.c:2203:9
 1e0b478:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## hci_vendor.c:2203:9
 1e0b47c:    c8 fd 40 03       	r0 <= insert(r3, p:8, l:8)			  ## hci_vendor.c:2203:9
 1e0b480:    d0 fd 80 02       	r0 <= insert(r2, p:16, l:16)			  ## hci_vendor.c:2203:9
 1e0b484:    08 02             	[sp] = r0			  ## hci_vendor.c:2203:9
 1e0b486:    05 18             	goto 10 <gap_le_get_own_address+0x44 : 1e0b492 >			  ## hci_vendor.c:2203:9
 1e0b488:    00 70             	r0 = 0			  ## hci_vendor.c:2205:20
 1e0b48a:    08 6a             	b[r5 + 0] = r0			  ## hci_vendor.c:2205:20
 1e0b48c:    00 a0             	r0 = sp + 0			  ## hci_vendor.c:2205:20
 1e0b48e:    80 f3 07 95       	call 76302 <le_controller_get_mac : 1e1dea0 >			  ## hci_vendor.c:2206:9
 1e0b492:    00 a0             	r0 = sp + 0
 1e0b494:    41 08             	r1 = r4			  ## hci_vendor.c:2210:5
 1e0b496:    bf f3 bd e8       	call -11910 <swapX : 1e08614 >			  ## hci_vendor.c:2210:5
 1e0b49a:    04 0a             	sp += 8			  ## hci_vendor.c:2210:5
 1e0b49c:    55 01             	{pc, r5, r4} = [sp++]			  ## hci_vendor.c:2211:1


btstack_set_timer:
 1e0b49e:    74 01             	[--sp] = {rets, r4}			  ## btstack_sys_timer.c:106:0
 1e0b4a0:    04 08             	r4 = r0			  ## btstack_sys_timer.c:106:0
 1e0b4a2:    22 48             	r2 = [r4 + 8]			  ## btstack_sys_timer.c:142:41
 1e0b4a4:    20 fd 0f 19       	r0 = r1 & 15			  ## btstack_sys_timer.c:71:9
 1e0b4a8:    31 fd 0f 2b       	r1 = r2 & 4293984255			  ## btstack_sys_timer.c:143:20
 1e0b4ac:    c4 fd 80 10       	r1 <= insert(r0, p:16, l:4)			  ## btstack_sys_timer.c:143:20
 1e0b4b0:    29 48             	[r4 + 8] = r1			  ## btstack_sys_timer.c:143:20
 1e0b4b2:    a2 04             	r2 = r2.l (u)			  ## btstack_sys_timer.c:144:55
 1e0b4b4:    30 e0 06 00       	if (r0 == 3) goto 12 <btstack_set_timer+0x26 : 1e0b4c4 >			  ## btstack_sys_timer.c:71:9
 1e0b4b8:    20 e0 09 00       	if (r0 == 2) goto 18 <btstack_set_timer+0x30 : 1e0b4ce >
 1e0b4bc:    10 e0 06 10       	if (r0 != 1) goto 12 <btstack_set_timer+0x2E : 1e0b4cc >
 1e0b4c0:    a2 70             	r2 = 10
 1e0b4c2:    05 18             	goto 10 <btstack_set_timer+0x30 : 1e0b4ce >
 1e0b4c4:    00 fb e8 03       	r0 = 1000 <BTCTLER_LE_RAM_TOTAL+0xA : 3e8 >			  ## btstack_sys_timer.c:77:25
 1e0b4c8:    12 0e             	r2 = r2 * r0			  ## btstack_sys_timer.c:77:25
 1e0b4ca:    01 18             	goto 2 <btstack_set_timer+0x30 : 1e0b4ce >
 1e0b4cc:    02 70             	r2 = 0
 1e0b4ce:    31 48             	r1 = [r4 + 12]			  ## btstack_sys_timer.c:145:59
 1e0b4d0:    40 08             	r0 = r4			  ## btstack_sys_timer.c:145:19
 1e0b4d2:    80 f3 90 2d       	call 23328 <sys_timer_add : 1e10ff6 >			  ## btstack_sys_timer.c:145:19
 1e0b4d6:    18 48             	[r4 + 4] = r0			  ## btstack_sys_timer.c:145:17
 1e0b4d8:    54 01             	{pc, r4} = [sp++]			  ## btstack_sys_timer.c:148:1


big_endian_read_32:
 1e0b4da:    01 09             	r1 += r0			  ## utils.c:101:0
 1e0b4dc:    22 62             	r2 = b[r1 + 2] (u)			  ## utils.c:102:47
 1e0b4de:    30 62             	r0 = b[r1 + 3] (u)			  ## utils.c:102:13
 1e0b4e0:    13 62             	r3 = b[r1 + 1] (u)			  ## utils.c:102:86
 1e0b4e2:    01 62             	r1 = b[r1 + 0] (u)			  ## utils.c:102:126
 1e0b4e4:    c8 fd 40 02       	r0 <= insert(r2, p:8, l:8)			  ## utils.c:102:43
 1e0b4e8:    c8 fd 80 03       	r0 <= insert(r3, p:16, l:8)			  ## utils.c:102:82
 1e0b4ec:    c8 fd c0 01       	r0 <= insert(r1, p:24, l:8)			  ## utils.c:102:122
 1e0b4f0:    20 00             	rts			  ## utils.c:102:5


reverse_56:
 1e0b4f2:    62 70             	r2 = 6			  ## utils.c:136:0
 1e0b4f4:    83 f9 01 00       	r3 = b[r0 ++= 1] (u)			  ## utils.c:124:28
 1e0b4f8:    13 fa 00 12       	b[r1+r2] = r3			  ## utils.c:124:26
 1e0b4fc:    f2 8f             	r2 += -1			  ## utils.c:123:19
 1e0b4fe:    f2 ef f9 1f       	if (r2 != -1) goto -14 <reverse_56+0x2 : 1e0b4f4 >			  ## utils.c:123:5
 1e0b502:    20 00             	rts			  ## utils.c:138:1


ble_list_reconnect_device_is_exist:
 1e0b504:    7b 01             	[--sp] = {rets, r11-r4}			  ## remote_device_list.c:642:0
 1e0b506:    e6 0b             	sp += -52			  ## remote_device_list.c:642:0
 1e0b508:    cb ff b4 09 00 00 	r11 = 2484 <remote_info_hdl : 9b4 >			  ## remote_device_list.c:642:0
 1e0b50e:    03 f9 02 b0       	r3 = b[r11 + 2] (u)			  ## remote_device_list.c:652:22
 1e0b512:    29 08             	r9 = r2			  ## remote_device_list.c:652:22
 1e0b514:    15 08             	r5 = r1			  ## remote_device_list.c:652:22
 1e0b516:    06 08             	r6 = r0			  ## remote_device_list.c:652:22
 1e0b518:    0a 70             	r10 = 0			  ## remote_device_list.c:652:22
 1e0b51a:    42 26             	if (r3 == 0) goto 132 <ble_list_reconnect_device_is_exist+0x9C : 1e0b5a0 >			  ## remote_device_list.c:652:22
 1e0b51c:    01 f9 01 b0       	r1 = b[r11 + 1] (u)			  ## remote_device_list.c:658:29
 1e0b520:    00 a0             	r0 = sp + 0			  ## remote_device_list.c:658:29
 1e0b522:    60 ff 0f 19 3c 00 	if ((r1 & 15) == 0) goto 120 <ble_list_reconnect_device_is_exist+0x9C : 1e0b5a0 >
 1e0b528:    08 91             	r8 = r0 + 16			  ## remote_device_list.c:667:39
 1e0b52a:    00 a0             	r0 = sp + 0			  ## remote_device_list.c:667:39
 1e0b52c:    07 fc 20 00       	r7 = r0 + 32			  ## remote_device_list.c:667:39
 1e0b530:    04 70             	r4 = 0			  ## remote_device_list.c:667:39
 1e0b532:    01 05             	r1 = r4.b0 (u)			  ## remote_device_list.c:659:13
 1e0b534:    00 a0             	r0 = sp + 0			  ## remote_device_list.c:659:13
 1e0b536:    bf f3 76 e8       	call -12052 <get_list_exist_item : 1e08626 >			  ## remote_device_list.c:659:13
 1e0b53a:    28 20             	if (r0 == 0) goto 80 <ble_list_reconnect_device_is_exist+0x88 : 1e0b58c >
 1e0b53c:    1b 2a             	if (r5 == 0) goto 54 <ble_list_reconnect_device_is_exist+0x70 : 1e0b574 >
 1e0b53e:    01 a0             	r1 = sp + 0
 1e0b540:    60 08             	r0 = r6			  ## remote_device_list.c:666:32
 1e0b542:    72 08             	r2 = r7			  ## remote_device_list.c:666:32
 1e0b544:    bf f3 8b e8       	call -12010 <check_random_addr : 1e0865e >			  ## remote_device_list.c:666:32
 1e0b548:    10 e0 06 10       	if (r0 != 1) goto 12 <ble_list_reconnect_device_is_exist+0x54 : 1e0b558 >			  ## remote_device_list.c:666:32
 1e0b54c:    02 71             	r2 = 16			  ## remote_device_list.c:667:32
 1e0b54e:    80 08             	r0 = r8			  ## remote_device_list.c:667:32
 1e0b550:    91 08             	r1 = r9			  ## remote_device_list.c:667:32
 1e0b552:    97 f3 cb dc       	call 3127702 <memcmp : 106eec >			  ## remote_device_list.c:667:32
 1e0b556:    23 20             	if (r0 == 0) goto 70 <ble_list_reconnect_device_is_exist+0x9A : 1e0b59e >			  ## remote_device_list.c:667:32
 1e0b558:    c0 f5 27 00       	r0 = b[sp+39] (u)			  ## remote_device_list.c:672:32
 1e0b55c:    22 f3 16 00       	if ((r0 & 4) != 0) goto 44 <ble_list_reconnect_device_is_exist+0x88 : 1e0b58c >			  ## remote_device_list.c:672:32
 1e0b560:    02 71             	r2 = 16			  ## remote_device_list.c:673:26
 1e0b562:    80 08             	r0 = r8			  ## remote_device_list.c:673:26
 1e0b564:    91 08             	r1 = r9			  ## remote_device_list.c:673:26
 1e0b566:    97 f3 c1 dc       	call 3127682 <memcmp : 106eec >			  ## remote_device_list.c:673:26
 1e0b56a:    11 70             	r1 = 1
 1e0b56c:    01 20             	if (r0 == 0) goto 2 <ble_list_reconnect_device_is_exist+0x6C : 1e0b570 >
 1e0b56e:    a1 08             	r1 = r10			  ## remote_device_list.c:672:21
 1e0b570:    1a 08             	r10 = r1
 1e0b572:    0c 18             	goto 24 <ble_list_reconnect_device_is_exist+0x88 : 1e0b58c >
 1e0b574:    62 70             	r2 = 6			  ## remote_device_list.c:661:26
 1e0b576:    70 08             	r0 = r7			  ## remote_device_list.c:661:26
 1e0b578:    61 08             	r1 = r6			  ## remote_device_list.c:661:26
 1e0b57a:    97 f3 b7 dc       	call 3127662 <memcmp : 106eec >			  ## remote_device_list.c:661:26
 1e0b57e:    06 30             	if (r0 != 0) goto 12 <ble_list_reconnect_device_is_exist+0x88 : 1e0b58c >			  ## remote_device_list.c:661:26
 1e0b580:    02 71             	r2 = 16			  ## remote_device_list.c:661:66
 1e0b582:    80 08             	r0 = r8			  ## remote_device_list.c:661:66
 1e0b584:    91 08             	r1 = r9			  ## remote_device_list.c:661:66
 1e0b586:    97 f3 b1 dc       	call 3127650 <memcmp : 106eec >			  ## remote_device_list.c:661:66
 1e0b58a:    09 20             	if (r0 == 0) goto 18 <ble_list_reconnect_device_is_exist+0x9A : 1e0b59e >			  ## remote_device_list.c:661:66
 1e0b58c:    00 f9 01 b0       	r0 = b[r11 + 1] (u)			  ## remote_device_list.c:658:29
 1e0b590:    20 fd 0f 09       	r0 = r0 & 15			  ## remote_device_list.c:658:29
 1e0b594:    14 80             	r4 += 1			  ## remote_device_list.c:658:43
 1e0b596:    01 05             	r1 = r4.b0 (u)			  ## remote_device_list.c:658:43
 1e0b598:    01 f2 cb 3f       	if (r1 < r0) goto -106 <ble_list_reconnect_device_is_exist+0x2E : 1e0b532 >			  ## remote_device_list.c:658:43
 1e0b59c:    01 18             	goto 2 <ble_list_reconnect_device_is_exist+0x9C : 1e0b5a0 >			  ## remote_device_list.c:658:43
 1e0b59e:    1a 70             	r10 = 1
 1e0b5a0:    e4 fd 00 0a       	r0 = r10.b0 (u)			  ## remote_device_list.c:685:1
 1e0b5a4:    1a 0a             	sp += 52			  ## remote_device_list.c:685:1
 1e0b5a6:    5b 01             	{pc, r11-r4} = [sp++]			  ## remote_device_list.c:685:1


reverse_64:
 1e0b5a8:    72 70             	r2 = 7			  ## utils.c:140:0
 1e0b5aa:    83 f9 01 00       	r3 = b[r0 ++= 1] (u)			  ## utils.c:124:28
 1e0b5ae:    13 fa 00 12       	b[r1+r2] = r3			  ## utils.c:124:26
 1e0b5b2:    f2 8f             	r2 += -1			  ## utils.c:123:19
 1e0b5b4:    f2 ef f9 1f       	if (r2 != -1) goto -14 <reverse_64+0x2 : 1e0b5aa >			  ## utils.c:123:5
 1e0b5b8:    20 00             	rts			  ## utils.c:142:1


gap_le_get_own_address_random_type:
 1e0b5ba:    74 01             	[--sp] = {rets, r4}			  ## hci_vendor.c:2241:0
 1e0b5bc:    bf f3 a4 e3       	call -14520 <le_hci_connection_for_handle : 1e07d08 >			  ## hci_vendor.c:2243:39
 1e0b5c0:    04 08             	r4 = r0			  ## hci_vendor.c:2243:39
 1e0b5c2:    00 70             	r0 = 0
 1e0b5c4:    12 28             	if (r4 == 0) goto 36 <gap_le_get_own_address_random_type+0x30 : 1e0b5ea >
 1e0b5c6:    61 48             	r1 = [r4 + 24]			  ## hci_vendor.c:2245:35
 1e0b5c8:    10 22             	if (r1 == 0) goto 32 <gap_le_get_own_address_random_type+0x30 : 1e0b5ea >			  ## hci_vendor.c:2245:35
 1e0b5ca:    c0 99             	r0 = r4 + 28			  ## hci_vendor.c:2246:17
 1e0b5cc:    61 70             	r1 = 6			  ## hci_vendor.c:2246:9
 1e0b5ce:    80 f3 81 1e       	call 15618 <put_buf : 1e0f2d4 >			  ## hci_vendor.c:2246:9
 1e0b5d2:    00 f9 21 40       	r0 = b[r4 + 33] (u)			  ## hci_vendor.c:2248:17
 1e0b5d6:    11 70             	r1 = 1			  ## hci_vendor.c:2248:9
 1e0b5d8:    f0 eb 01 80       	if (r0 > 191) goto 2 <gap_le_get_own_address_random_type+0x24 : 1e0b5de >			  ## hci_vendor.c:2248:9
 1e0b5dc:    21 70             	r1 = 2			  ## hci_vendor.c:2248:9
 1e0b5de:    22 fd c0 09       	r2 = r0 & 192			  ## hci_vendor.c:2248:44
 1e0b5e2:    30 70             	r0 = 3			  ## hci_vendor.c:2248:9
 1e0b5e4:    02 e4 01 00       	if (r2 == 64) goto 2 <gap_le_get_own_address_random_type+0x30 : 1e0b5ea >			  ## hci_vendor.c:2248:9
 1e0b5e8:    10 08             	r0 = r1			  ## hci_vendor.c:2248:9
 1e0b5ea:    00 04             	r0 = r0.b0 (u)			  ## hci_vendor.c:2264:5
 1e0b5ec:    54 01             	{pc, r4} = [sp++]			  ## hci_vendor.c:2264:5


gap_le_get_own_id_address:
 1e0b5ee:    75 01             	[--sp] = {rets, r5, r4}			  ## hci_vendor.c:2214:0
 1e0b5f0:    fc 0b             	sp += -8			  ## hci_vendor.c:2214:0
 1e0b5f2:    24 08             	r4 = r2			  ## hci_vendor.c:2214:0
 1e0b5f4:    15 08             	r5 = r1			  ## hci_vendor.c:2214:0
 1e0b5f6:    bf f3 87 e3       	call -14578 <le_hci_connection_for_handle : 1e07d08 >			  ## hci_vendor.c:2217:39
 1e0b5fa:    01 70             	r1 = 0
 1e0b5fc:    09 6a             	b[r5 + 0] = r1			  ## hci_vendor.c:2219:16
 1e0b5fe:    09 20             	if (r0 == 0) goto 18 <gap_le_get_own_id_address+0x24 : 1e0b612 >			  ## hci_vendor.c:2220:9
 1e0b600:    25 a0             	r5 = sp + 2
 1e0b602:    50 08             	r0 = r5			  ## hci_vendor.c:2221:9
 1e0b604:    80 f3 4c 94       	call 75928 <le_controller_get_mac : 1e1dea0 >			  ## hci_vendor.c:2221:9
 1e0b608:    50 08             	r0 = r5			  ## hci_vendor.c:2223:9
 1e0b60a:    41 08             	r1 = r4			  ## hci_vendor.c:2223:9
 1e0b60c:    bf f3 02 e8       	call -12284 <swapX : 1e08614 >			  ## hci_vendor.c:2223:9
 1e0b610:    04 18             	goto 8 <gap_le_get_own_id_address+0x2C : 1e0b61a >			  ## hci_vendor.c:2223:9
 1e0b612:    62 70             	r2 = 6			  ## hci_vendor.c:2225:9
 1e0b614:    40 08             	r0 = r4			  ## hci_vendor.c:2225:9
 1e0b616:    97 f3 6b dc       	call 3127510 <memset : 106ef0 >			  ## hci_vendor.c:2225:9
 1e0b61a:    04 0a             	sp += 8
 1e0b61c:    55 01             	{pc, r5, r4} = [sp++]			  ## hci_vendor.c:2227:1


delete_device_by_index:
 1e0b61e:    76 01             	[--sp] = {rets, r6-r4}			  ## remote_device_list.c:256:0
 1e0b620:    e6 0b             	sp += -52			  ## remote_device_list.c:256:0
 1e0b622:    04 08             	r4 = r0			  ## remote_device_list.c:256:0
 1e0b624:    94 e0 2d 80       	if (r4 > 9) goto 90 <delete_device_by_index+0x64 : 1e0b682 >			  ## remote_device_list.c:256:0
 1e0b628:    05 a0             	r5 = sp + 0			  ## remote_device_list.c:256:0
 1e0b62a:    f1 7f             	r1 = 255			  ## remote_device_list.c:268:5
 1e0b62c:    42 73             	r2 = 52			  ## remote_device_list.c:268:5
 1e0b62e:    f6 7f             	r6 = 255			  ## remote_device_list.c:268:5
 1e0b630:    50 08             	r0 = r5			  ## remote_device_list.c:268:5
 1e0b632:    97 f3 5d dc       	call 3127482 <memset : 106ef0 >			  ## remote_device_list.c:268:5
 1e0b636:    40 fc 76 00       	r0 = r4 + 118			  ## remote_device_list.c:269:43
 1e0b63a:    42 73             	r2 = 52			  ## remote_device_list.c:269:5
 1e0b63c:    51 08             	r1 = r5			  ## remote_device_list.c:269:5
 1e0b63e:    80 f3 03 30       	call 24582 <syscfg_write : 1e11648 >			  ## remote_device_list.c:269:5
 1e0b642:    c1 ff b4 09 00 00 	r1 = 2484 <remote_info_hdl : 9b4 >			  ## remote_device_list.c:269:5
 1e0b648:    42 b8             	r2 = r4 + r1			  ## remote_device_list.c:269:43
 1e0b64a:    40 64             	r0 = b[r2 + 4] (u)			  ## remote_device_list.c:272:14
 1e0b64c:    4e 64             	b[r2 + 4] = r6			  ## remote_device_list.c:273:30
 1e0b64e:    12 62             	r2 = b[r1 + 1] (u)			  ## remote_device_list.c:274:33
 1e0b650:    60 ff 0f 29 0e 00 	if ((r2 & 15) == 0) goto 28 <delete_device_by_index+0x54 : 1e0b672 >			  ## remote_device_list.c:274:33
 1e0b656:    22 fd 0f 29       	r2 = r2 & 15			  ## remote_device_list.c:274:33
 1e0b65a:    43 92             	r3 = r1 + 4			  ## remote_device_list.c:274:33
 1e0b65c:    04 66             	r4 = b[r3 + 0] (u)			  ## remote_device_list.c:275:13
 1e0b65e:    00 ff ff 40 04 00 	if (r4 == 255) goto 8 <delete_device_by_index+0x4E : 1e0b66c >			  ## remote_device_list.c:275:13
 1e0b664:    04 f2 02 90       	if (r4 <= r0) goto 4 <delete_device_by_index+0x4E : 1e0b66c >
 1e0b668:    f4 8f             	r4 += -1			  ## remote_device_list.c:276:33
 1e0b66a:    0c 66             	b[r3 + 0] = r4			  ## remote_device_list.c:276:33
 1e0b66c:    13 80             	r3 += 1			  ## remote_device_list.c:274:23
 1e0b66e:    52 f3 f5 ff       	if (--r2 != 0) goto -22 <delete_device_by_index+0x3E : 1e0b65c >			  ## remote_device_list.c:274:23
 1e0b672:    20 62             	r0 = b[r1 + 2] (u)			  ## remote_device_list.c:282:17
 1e0b674:    02 20             	if (r0 == 0) goto 4 <delete_device_by_index+0x5C : 1e0b67a >			  ## remote_device_list.c:282:17
 1e0b676:    f0 8f             	r0 += -1			  ## remote_device_list.c:283:26
 1e0b678:    28 62             	b[r1 + 2] = r0			  ## remote_device_list.c:283:26
 1e0b67a:    50 77             	r0 = 117			  ## remote_device_list.c:232:9
 1e0b67c:    e2 70             	r2 = 14			  ## remote_device_list.c:232:9
 1e0b67e:    80 f3 e3 2f       	call 24518 <syscfg_write : 1e11648 >			  ## remote_device_list.c:232:9
 1e0b682:    1a 0a             	sp += 52
 1e0b684:    56 01             	{pc, r6-r4} = [sp++]


ble_list_pair_add:
 1e0b686:    7e 01             	[--sp] = {rets, r14-r4}			  ## remote_device_list.c:503:0
 1e0b688:    cc 0b             	sp += -104			  ## remote_device_list.c:503:0
 1e0b68a:    0e f5 9c 00       	r14 = [sp+156]			  ## remote_device_list.c:503:0
 1e0b68e:    0c f9 01 e0       	r12 = b[r14 + 1] (u)			  ## remote_device_list.c:521:25
 1e0b692:    39 08             	r9 = r3			  ## remote_device_list.c:521:25
 1e0b694:    25 08             	r5 = r2
 1e0b696:    1a 08             	r10 = r1
 1e0b698:    08 08             	r8 = r0
 1e0b69a:    08 20             	if (r0 == 0) goto 16 <ble_list_pair_add+0x26 : 1e0b6ac >
 1e0b69c:    00 f9 00 e0       	r0 = b[r14 + 0] (u)			  ## remote_device_list.c:517:25
 1e0b6a0:    21 fd 0c c9       	r1 = r12 & 12			  ## remote_device_list.c:518:37
 1e0b6a4:    20 fd 03 09       	r0 = r0 & 3			  ## remote_device_list.c:517:37
 1e0b6a8:    e0 fd 00 c1       	r12 = r1 | r0			  ## remote_device_list.c:517:121
 1e0b6ac:    00 a0             	r0 = sp + 0
 1e0b6ae:    f1 7f             	r1 = 255			  ## remote_device_list.c:524:5
 1e0b6b0:    42 73             	r2 = 52			  ## remote_device_list.c:524:5
 1e0b6b2:    97 f3 1d dc       	call 3127354 <memset : 106ef0 >			  ## remote_device_list.c:524:5
 1e0b6b6:    cb ff b4 09 00 00 	r11 = 2484 <remote_info_hdl : 9b4 >			  ## remote_device_list.c:524:5
 1e0b6bc:    01 f9 02 b0       	r1 = b[r11 + 2] (u)			  ## remote_device_list.c:365:22
 1e0b6c0:    f0 7d             	r0 = 223			  ## remote_device_list.c:365:22
 1e0b6c2:    38 22             	if (r1 == 0) goto 112 <ble_list_pair_add+0xAE : 1e0b734 >			  ## remote_device_list.c:365:22
 1e0b6c4:    01 f9 01 b0       	r1 = b[r11 + 1] (u)			  ## remote_device_list.c:370:29
 1e0b6c8:    60 ff 0f 19 33 00 	if ((r1 & 15) == 0) goto 102 <ble_list_pair_add+0xAE : 1e0b734 >			  ## remote_device_list.c:370:29
 1e0b6ce:    40 a3             	r0 = sp + 52
 1e0b6d0:    0d fc 20 00       	r13 = r0 + 32
 1e0b6d4:    06 70             	r6 = 0
 1e0b6d6:    04 70             	r4 = 0
 1e0b6d8:    87 05             	r7 = r6.b0 (u)			  ## remote_device_list.c:371:13
 1e0b6da:    40 a3             	r0 = sp + 52			  ## remote_device_list.c:371:13
 1e0b6dc:    71 08             	r1 = r7			  ## remote_device_list.c:371:13
 1e0b6de:    bf f3 a2 e7       	call -12476 <get_list_exist_item : 1e08626 >			  ## remote_device_list.c:371:13
 1e0b6e2:    1d 20             	if (r0 == 0) goto 58 <ble_list_pair_add+0x98 : 1e0b71e >
 1e0b6e4:    06 2a             	if (r5 == 0) goto 12 <ble_list_pair_add+0x6C : 1e0b6f2 >
 1e0b6e6:    22 f3 0b c0       	if ((r12 & 4) != 0) goto 22 <ble_list_pair_add+0x7A : 1e0b700 >
 1e0b6ea:    c0 f5 5b 00       	r0 = b[sp+91] (u)			  ## remote_device_list.c:374:27
 1e0b6ee:    22 f3 07 00       	if ((r0 & 4) != 0) goto 14 <ble_list_pair_add+0x7A : 1e0b700 >			  ## remote_device_list.c:374:27
 1e0b6f2:    62 70             	r2 = 6
 1e0b6f4:    d0 08             	r0 = r13
 1e0b6f6:    a1 08             	r1 = r10
 1e0b6f8:    97 f3 f8 db       	call 3127280 <memcmp : 106eec >
 1e0b6fc:    10 30             	if (r0 != 0) goto 32 <ble_list_pair_add+0x98 : 1e0b71e >
 1e0b6fe:    0d 18             	goto 26 <ble_list_pair_add+0x94 : 1e0b71a >
 1e0b700:    41 a3             	r1 = sp + 52
 1e0b702:    02 71             	r2 = 16			  ## remote_device_list.c:383:33
 1e0b704:    90 08             	r0 = r9			  ## remote_device_list.c:383:33
 1e0b706:    97 f3 f1 db       	call 3127266 <memcmp : 106eec >			  ## remote_device_list.c:383:33
 1e0b70a:    09 30             	if (r0 != 0) goto 18 <ble_list_pair_add+0x98 : 1e0b71e >			  ## remote_device_list.c:383:33
 1e0b70c:    a0 08             	r0 = r10			  ## remote_device_list.c:384:36
 1e0b70e:    91 08             	r1 = r9			  ## remote_device_list.c:384:36
 1e0b710:    d2 08             	r2 = r13			  ## remote_device_list.c:384:36
 1e0b712:    bf f3 a4 e7       	call -12472 <check_random_addr : 1e0865e >			  ## remote_device_list.c:384:36
 1e0b716:    10 e0 02 10       	if (r0 != 1) goto 4 <ble_list_pair_add+0x98 : 1e0b71e >			  ## remote_device_list.c:384:36
 1e0b71a:    70 08             	r0 = r7
 1e0b71c:    80 17             	call -256 <delete_device_by_index : 1e0b61e >
 1e0b71e:    00 f9 01 b0       	r0 = b[r11 + 1] (u)			  ## remote_device_list.c:370:29
 1e0b722:    14 80             	r4 += 1			  ## remote_device_list.c:370:43
 1e0b724:    20 fd 0f 09       	r0 = r0 & 15			  ## remote_device_list.c:370:21
 1e0b728:    16 80             	r6 += 1			  ## remote_device_list.c:370:19
 1e0b72a:    04 f2 d5 3f       	if (r4 < r0) goto -86 <ble_list_pair_add+0x52 : 1e0b6d8 >			  ## remote_device_list.c:370:19
 1e0b72e:    c0 f5 26 00       	r0 = b[sp+38] (u)
 1e0b732:    f0 b2             	r0 &= 4294967263			  ## remote_device_list.c:403:1
 1e0b734:    69 c1             	r1 = r5 << 5			  ## remote_device_list.c:538:20
 1e0b736:    26 fd 20 19       	r6 = r1 & 32			  ## remote_device_list.c:538:20
 1e0b73a:    50 bc             	r0 |= r6			  ## remote_device_list.c:538:20
 1e0b73c:    d0 f5 26 00       	b[sp+38] = r0			  ## remote_device_list.c:538:20
 1e0b740:    23 f3 0e c0       	if ((r12 & 8) != 0) goto 28 <ble_list_pair_add+0xDA : 1e0b760 >			  ## remote_device_list.c:538:20
 1e0b744:    14 2a             	if (r5 == 0) goto 40 <ble_list_pair_add+0xE8 : 1e0b76e >
 1e0b746:    00 f9 00 a0       	r0 = b[r10 + 0] (u)			  ## remote_device_list.c:542:32
 1e0b74a:    20 fd c0 09       	r0 = r0 & 192			  ## remote_device_list.c:542:45
 1e0b74e:    00 e4 0e 10       	if (r0 != 64) goto 28 <ble_list_pair_add+0xE8 : 1e0b76e >			  ## remote_device_list.c:542:45
 1e0b752:    00 a0             	r0 = sp + 0
 1e0b754:    00 82             	r0 += 32			  ## remote_device_list.c:552:13
 1e0b756:    f1 7f             	r1 = 255			  ## remote_device_list.c:552:13
 1e0b758:    62 70             	r2 = 6			  ## remote_device_list.c:552:13
 1e0b75a:    97 f3 c9 db       	call 3127186 <memset : 106ef0 >			  ## remote_device_list.c:552:13
 1e0b75e:    0e 18             	goto 28 <ble_list_pair_add+0xF6 : 1e0b77c >			  ## remote_device_list.c:552:13
 1e0b760:    00 a0             	r0 = sp + 0
 1e0b762:    00 82             	r0 += 32			  ## remote_device_list.c:540:9
 1e0b764:    62 70             	r2 = 6			  ## remote_device_list.c:540:9
 1e0b766:    a1 08             	r1 = r10			  ## remote_device_list.c:540:9
 1e0b768:    97 f3 bc db       	call 3127160 <memcpy : 106ee4 >			  ## remote_device_list.c:540:9
 1e0b76c:    07 18             	goto 14 <ble_list_pair_add+0xF6 : 1e0b77c >			  ## remote_device_list.c:540:9
 1e0b76e:    00 a0             	r0 = sp + 0
 1e0b770:    00 82             	r0 += 32
 1e0b772:    62 70             	r2 = 6
 1e0b774:    a1 08             	r1 = r10
 1e0b776:    97 f3 b5 db       	call 3127146 <memcpy : 106ee4 >
 1e0b77a:    9c b1             	r12 |= 8
 1e0b77c:    22 f3 06 c0       	if ((r12 & 4) != 0) goto 12 <ble_list_pair_add+0x106 : 1e0b78c >
 1e0b780:    f0 07             	r0 = -1			  ## remote_device_list.c:559:9
 1e0b782:    38 02             	[sp+12] = r0			  ## remote_device_list.c:559:9
 1e0b784:    28 02             	[sp+8] = r0			  ## remote_device_list.c:559:9
 1e0b786:    18 02             	[sp+4] = r0			  ## remote_device_list.c:559:9
 1e0b788:    08 02             	[sp] = r0			  ## remote_device_list.c:559:9
 1e0b78a:    05 18             	goto 10 <ble_list_pair_add+0x110 : 1e0b796 >			  ## remote_device_list.c:559:9
 1e0b78c:    00 a0             	r0 = sp + 0
 1e0b78e:    02 71             	r2 = 16			  ## remote_device_list.c:557:9
 1e0b790:    91 08             	r1 = r9			  ## remote_device_list.c:557:9
 1e0b792:    97 f3 a7 db       	call 3127118 <memcpy : 106ee4 >			  ## remote_device_list.c:557:9
 1e0b796:    00 a0             	r0 = sp + 0
 1e0b798:    00 81             	r0 += 16
 1e0b79a:    20 f3 05 c0       	if ((r12 & 1) != 0) goto 10 <ble_list_pair_add+0x122 : 1e0b7a8 >
 1e0b79e:    f1 7f             	r1 = 255			  ## remote_device_list.c:565:9
 1e0b7a0:    02 71             	r2 = 16			  ## remote_device_list.c:565:9
 1e0b7a2:    97 f3 a5 db       	call 3127114 <memset : 106ef0 >			  ## remote_device_list.c:565:9
 1e0b7a6:    05 18             	goto 10 <ble_list_pair_add+0x12C : 1e0b7b2 >			  ## remote_device_list.c:565:9
 1e0b7a8:    01 f5 98 00       	r1 = [sp+152]
 1e0b7ac:    02 71             	r2 = 16			  ## remote_device_list.c:563:9
 1e0b7ae:    97 f3 99 db       	call 3127090 <memcpy : 106ee4 >			  ## remote_device_list.c:563:9
 1e0b7b2:    dc f5 27 00       	b[sp+39] = r12			  ## remote_device_list.c:568:23
 1e0b7b6:    00 f9 02 e0       	r0 = b[r14 + 2] (u)			  ## remote_device_list.c:571:24
 1e0b7ba:    f0 fd 20 18       	r1 = r8 << 4			  ## remote_device_list.c:570:15
 1e0b7be:    21 fd 10 19       	r1 = r1 & 16			  ## remote_device_list.c:570:15
 1e0b7c2:    51 bc             	r1 |= r6			  ## remote_device_list.c:570:15
 1e0b7c4:    80 c1             	r0 = r0 << 6			  ## remote_device_list.c:571:22
 1e0b7c6:    50 b2             	r0 |= r1			  ## remote_device_list.c:571:22
 1e0b7c8:    00 fd 0a 09       	r0 = r0 | 10			  ## remote_device_list.c:571:22
 1e0b7cc:    d0 f5 26 00       	b[sp+38] = r0			  ## remote_device_list.c:571:22
 1e0b7d0:    00 f9 03 e0       	r0 = b[r14 + 3] (u)			  ## remote_device_list.c:573:31
 1e0b7d4:    d0 f5 32 00       	b[sp+50] = r0			  ## remote_device_list.c:573:29
 1e0b7d8:    00 f9 04 e0       	r0 = b[r14 + 4] (u)			  ## remote_device_list.c:574:26
 1e0b7dc:    01 f9 05 e0       	r1 = b[r14 + 5] (u)			  ## remote_device_list.c:575:33
 1e0b7e0:    20 fd 0f 09       	r0 = r0 & 15			  ## remote_device_list.c:574:24
 1e0b7e4:    dc fd 20 01       	r0 <= insert(r1, p:4, l:28)			  ## remote_device_list.c:575:31
 1e0b7e8:    d0 f5 33 00       	b[sp+51] = r0			  ## remote_device_list.c:575:31
 1e0b7ec:    00 f9 07 e0       	r0 = b[r14 + 7] (u)			  ## remote_device_list.c:576:5
 1e0b7f0:    01 f9 06 e0       	r1 = b[r14 + 6] (u)			  ## remote_device_list.c:576:5
 1e0b7f4:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## remote_device_list.c:576:5
 1e0b7f8:    91 f5 30 00       	h[sp+48] = r1			  ## remote_device_list.c:576:5
 1e0b7fc:    00 f9 0f e0       	r0 = b[r14 + 15] (u)			  ## remote_device_list.c:577:5
 1e0b800:    01 f9 0e e0       	r1 = b[r14 + 14] (u)			  ## remote_device_list.c:577:5
 1e0b804:    02 f9 0d e0       	r2 = b[r14 + 13] (u)			  ## remote_device_list.c:577:5
 1e0b808:    03 f9 0c e0       	r3 = b[r14 + 12] (u)			  ## remote_device_list.c:577:5
 1e0b80c:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## remote_device_list.c:577:5
 1e0b810:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## remote_device_list.c:577:5
 1e0b814:    00 f9 09 e0       	r0 = b[r14 + 9] (u)			  ## remote_device_list.c:577:5
 1e0b818:    02 f9 0b e0       	r2 = b[r14 + 11] (u)			  ## remote_device_list.c:577:5
 1e0b81c:    04 f9 0a e0       	r4 = b[r14 + 10] (u)			  ## remote_device_list.c:577:5
 1e0b820:    05 f9 08 e0       	r5 = b[r14 + 8] (u)			  ## remote_device_list.c:577:5
 1e0b824:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## remote_device_list.c:577:5
 1e0b828:    bb 02             	[sp+44] = r3			  ## remote_device_list.c:577:5
 1e0b82a:    c8 fd 40 42       	r4 <= insert(r2, p:8, l:8)			  ## remote_device_list.c:577:5
 1e0b82e:    c8 fd 40 50       	r5 <= insert(r0, p:8, l:8)			  ## remote_device_list.c:577:5
 1e0b832:    02 f9 01 b0       	r2 = b[r11 + 1] (u)			  ## remote_device_list.c:296:38
 1e0b836:    03 f9 02 b0       	r3 = b[r11 + 2] (u)			  ## remote_device_list.c:296:17
 1e0b83a:    d0 fd 80 54       	r5 <= insert(r4, p:16, l:16)			  ## remote_device_list.c:577:5
 1e0b83e:    ad 02             	[sp+40] = r5			  ## remote_device_list.c:577:5
 1e0b840:    21 fd 0f 29       	r1 = r2 & 15			  ## remote_device_list.c:296:38
 1e0b844:    f0 7f             	r0 = 255
 1e0b846:    13 f2 05 30       	if (r3 < r1) goto 10 <ble_list_pair_add+0x1CE : 1e0b854 >
 1e0b84a:    00 70             	r0 = 0
 1e0b84c:    60 ff 30 29 2b 00 	if ((r2 & 48) == 0) goto 86 <ble_list_pair_add+0x222 : 1e0b8a8 >
 1e0b852:    2a 22             	if (r1 == 0) goto 84 <ble_list_pair_add+0x222 : 1e0b8a8 >
 1e0b854:    04 70             	r4 = 0
 1e0b856:    65 77             	r5 = 118
 1e0b858:    02 70             	r2 = 0
 1e0b85a:    80 fb b0 62       	r6 = r2 + r11			  ## remote_device_list.c:305:13
 1e0b85e:    43 6c             	r3 = b[r6 + 4] (u)			  ## remote_device_list.c:305:13
 1e0b860:    03 f2 06 00       	if (r3 == r0) goto 12 <ble_list_pair_add+0x1EA : 1e0b870 >			  ## remote_device_list.c:305:13
 1e0b864:    14 80             	r4 += 1			  ## remote_device_list.c:304:23
 1e0b866:    12 80             	r2 += 1			  ## remote_device_list.c:304:47
 1e0b868:    15 80             	r5 += 1			  ## remote_device_list.c:304:23
 1e0b86a:    12 f2 f6 bf       	ifs (r2 < r1) goto -20 <ble_list_pair_add+0x1D4 : 1e0b85a >			  ## remote_device_list.c:304:23
 1e0b86e:    1b 18             	goto 54 <ble_list_pair_add+0x220 : 1e0b8a6 >			  ## remote_device_list.c:304:23
 1e0b870:    00 ff ff 00 02 00 	if (r0 == 255) goto 4 <ble_list_pair_add+0x1F4 : 1e0b87a >
 1e0b876:    00 05             	r0 = r4.b0 (u)			  ## remote_device_list.c:307:17
 1e0b878:    d2 16             	call -604 <delete_device_by_index : 1e0b61e >			  ## remote_device_list.c:307:17
 1e0b87a:    60 05             	r0 = r5.l (u)			  ## remote_device_list.c:488:15
 1e0b87c:    01 a0             	r1 = sp + 0			  ## remote_device_list.c:488:15
 1e0b87e:    42 73             	r2 = 52			  ## remote_device_list.c:488:15
 1e0b880:    80 f3 e2 2e       	call 24004 <syscfg_write : 1e11648 >			  ## remote_device_list.c:488:15
 1e0b884:    10 e0 0f b0       	ifs (r0 < 1) goto 30 <ble_list_pair_add+0x220 : 1e0b8a6 >
 1e0b888:    14 f9 03 b0       	b[r11 + 3] = r4			  ## remote_device_list.c:490:37
 1e0b88c:    00 f9 02 b0       	r0 = b[r11 + 2] (u)			  ## remote_device_list.c:491:47
 1e0b890:    48 6c             	b[r6 + 4] = r0			  ## remote_device_list.c:491:37
 1e0b892:    10 80             	r0 += 1			  ## remote_device_list.c:492:26
 1e0b894:    10 f9 02 b0       	b[r11 + 2] = r0			  ## remote_device_list.c:492:26
 1e0b898:    50 77             	r0 = 117			  ## remote_device_list.c:232:9
 1e0b89a:    e2 70             	r2 = 14			  ## remote_device_list.c:232:9
 1e0b89c:    b1 08             	r1 = r11			  ## remote_device_list.c:232:9
 1e0b89e:    80 f3 d3 2e       	call 23974 <syscfg_write : 1e11648 >			  ## remote_device_list.c:232:9
 1e0b8a2:    10 70             	r0 = 1			  ## remote_device_list.c:232:9
 1e0b8a4:    01 18             	goto 2 <ble_list_pair_add+0x222 : 1e0b8a8 >			  ## remote_device_list.c:232:9
 1e0b8a6:    00 70             	r0 = 0
 1e0b8a8:    34 0a             	sp += 104
 1e0b8aa:    5e 01             	{pc, r14-r4} = [sp++]			  ## remote_device_list.c:579:1


ble_list_get_conn_addr_item:
 1e0b8ac:    74 01             	[--sp] = {rets, r4}			  ## remote_device_list.c:354:0
 1e0b8ae:    24 08             	r4 = r2			  ## remote_device_list.c:354:0
 1e0b8b0:    32 08             	r2 = r3			  ## remote_device_list.c:355:12
 1e0b8b2:    43 08             	r3 = r4			  ## remote_device_list.c:355:12
 1e0b8b4:    14 01             	{rets, r4} = [sp++]			  ## remote_device_list.c:355:12
 1e0b8b6:    ff f3 fb e6       	goto -12810 <get_conn_addr_item : 1e086b0 >			  ## remote_device_list.c:355:12


l2cap_reserve_packet_buffer:
 1e0b8ba:    ff f3 5a ed       	goto -9548 <hci_reserve_packet_buffer : 1e09372 >			  ## l2cap.c:2114:0


btstack_memory_gatt_client_get:
 1e0b8be:    c0 ff 94 1a 00 00 	r0 = 6804 <le_stack_pool : 1a94 >			  ## btstack_memory.c:244:0
 1e0b8c4:    01 40             	r1 = [r0 + 0]			  ## btstack_memory.c:245:38
 1e0b8c6:    10 42             	r0 = [r1 + 4]			  ## btstack_memory.c:66:23
 1e0b8c8:    03 20             	if (r0 == 0) goto 6 <btstack_memory_gatt_client_get+0x12 : 1e0b8d0 >
 1e0b8ca:    02 40             	r2 = [r0 + 0]			  ## btstack_memory.c:72:31
 1e0b8cc:    1a 42             	[r1 + 4] = r2			  ## btstack_memory.c:72:23
 1e0b8ce:    20 00             	rts			  ## btstack_memory.c:245:5
 1e0b8d0:    00 70             	r0 = 0
 1e0b8d2:    20 00             	rts			  ## btstack_memory.c:245:5


att_operation_cmd_send:
 1e0b8d4:    7a 01             	[--sp] = {rets, r10-r4}			  ## att_send.c:460:0
 1e0b8d6:    c8 ff e0 1b 00 00 	r8 = 7136 <att_s_hdl : 1be0 >			  ## att_send.c:460:0
 1e0b8dc:    0a f6 00 80       	r10 = [r8 + 0]			  ## att_send.c:460:0
 1e0b8e0:    09 f5 20 00       	r9 = [sp+32]			  ## att_send.c:460:0
 1e0b8e4:    07 70             	r7 = 0			  ## att_send.c:460:0
 1e0b8e6:    06 76             	r6 = 96			  ## att_send.c:460:0
 1e0b8e8:    05 70             	r5 = 0			  ## att_send.c:460:0
 1e0b8ea:    04 f8 00 a6       	r4 = h[r10+r6] (u)			  ## att_send.c:121:52
 1e0b8ee:    a4 d1             	r4 = r4 >> 6			  ## att_send.c:121:52
 1e0b8f0:    04 f2 07 00       	if (r4 == r0) goto 14 <att_operation_cmd_send+0x2E : 1e0b902 >			  ## att_send.c:121:13
 1e0b8f4:    46 80             	r6 += 4			  ## att_send.c:120:23
 1e0b8f6:    15 80             	r5 += 1			  ## att_send.c:120:43
 1e0b8f8:    17 80             	r7 += 1			  ## att_send.c:120:23
 1e0b8fa:    85 e0 f6 bf       	ifs (r5 < 8) goto -20 <att_operation_cmd_send+0x16 : 1e0b8ea >			  ## att_send.c:120:23
 1e0b8fe:    07 70             	r7 = 0
 1e0b900:    04 18             	goto 8 <att_operation_cmd_send+0x36 : 1e0b90a >
 1e0b902:    c4 05             	r4 = r7.b0 (u)			  ## att_send.c:464:43
 1e0b904:    07 70             	r7 = 0			  ## att_send.c:464:43
 1e0b906:    84 e0 02 90       	if (r4 <= 8) goto 4 <att_operation_cmd_send+0x3A : 1e0b90e >			  ## att_send.c:464:43
 1e0b90a:    00 70             	r0 = 0
 1e0b90c:    2b 18             	goto 86 <.GJTIE741_0_0_+0x46 : 1e0b964 >
 1e0b90e:    f1 8f             	r1 += -1			  ## att_send.c:472:5
 1e0b910:    51 e0 f5 8f       	if (r1 > 5) goto -22 <att_operation_cmd_send+0x2A : 1e0b8fe >			  ## att_send.c:472:5
 1e0b914:    44 75             	r4 = 84
 1e0b916:    a1 00             	tbb [r1]


.GJTIS741_0_0_:
 1e0b918:    03     < 3 : 0x3 >
 1e0b919:    09     < 9 : 0x9 >
 1e0b91a:    1c     < 28 : 0x1C >
 1e0b91b:    1c     < 28 : 0x1C >
 1e0b91c:    1c     < 28 : 0x1C >
 1e0b91d:    1a     < 26 : 0x1A >
 1e0b91e:    21 08             	r1 = r2			  ## att_send.c:474:19
 1e0b920:    32 08             	r2 = r3			  ## att_send.c:474:19
 1e0b922:    93 08             	r3 = r9			  ## att_send.c:474:19
 1e0b924:    80 f3 83 15       	call 11014 <att_server_notify : 1e0e42e >			  ## att_send.c:474:19
 1e0b928:    05 18             	goto 10 <.GJTIE741_0_0_+0x16 : 1e0b934 >
 1e0b92a:    21 08             	r1 = r2			  ## att_send.c:478:19
 1e0b92c:    32 08             	r2 = r3			  ## att_send.c:478:19
 1e0b92e:    93 08             	r3 = r9			  ## att_send.c:478:19
 1e0b930:    80 f3 aa 15       	call 11092 <att_server_indicate : 1e0e488 >			  ## att_send.c:478:19
 1e0b934:    04 08             	r4 = r0
 1e0b936:    70 75             	r0 = 87
 1e0b938:    17 70             	r7 = 1
 1e0b93a:    0c ff 8f 40 15 00 	ifs (r4 > 143) goto 42 <.GJTIE741_0_0_+0x4C : 1e0b96a >			  ## att_send.c:505:5
 1e0b940:    54 e5 1e c0       	ifs (r4 > 85) goto 60 <.GJTIE741_0_0_+0x62 : 1e0b980 >
 1e0b944:    0b 28             	if (r4 == 0) goto 22 <.GJTIE741_0_0_+0x3E : 1e0b95c >
 1e0b946:    44 e5 03 00       	if (r4 == 84) goto 6 <.GJTIE741_0_0_+0x32 : 1e0b950 >
 1e0b94a:    09 18             	goto 18 <.GJTIE741_0_0_+0x40 : 1e0b95e >
 1e0b94c:    80 f3 74 18       	call 12520 <gatt_client_write_value_of_characteristic_without_response : 1e0ea38 >			  ## att_send.c:482:19
 1e0b950:    c0 ff 71 57 e1 01 	r0 = 31545201 <update_target_end+0x28E9 : 1e15771 >			  ## att_send.c:526:9
 1e0b956:    41 08             	r1 = r4			  ## att_send.c:526:9
 1e0b958:    80 f3 b7 1b       	call 14190 <printf : 1e0f0ca >			  ## att_send.c:526:9
 1e0b95c:    07 70             	r7 = 0
 1e0b95e:    00 70             	r0 = 0
 1e0b960:    0a f6 00 80       	r10 = [r8 + 0]
 1e0b964:    17 f9 b2 a0       	b[r10 + 178] = r7
 1e0b968:    5a 01             	{pc, r10-r4} = [sp++]			  ## att_send.c:540:1
 1e0b96a:    41 fc 6c ff       	r1 = r4 + -148
 1e0b96e:    21 e0 f7 3f       	if (r1 < 2) goto -18 <.GJTIE741_0_0_+0x42 : 1e0b960 >
 1e0b972:    00 ff 90 40 f4 ff 	if (r4 == 144) goto -24 <.GJTIE741_0_0_+0x42 : 1e0b960 >
 1e0b978:    00 ff 97 40 e9 ff 	if (r4 == 151) goto -46 <.GJTIE741_0_0_+0x32 : 1e0b950 >
 1e0b97e:    ef 1f             	goto -34 <.GJTIE741_0_0_+0x40 : 1e0b95e >
 1e0b980:    64 e5 e6 0f       	if (r4 == 86) goto -52 <.GJTIE741_0_0_+0x32 : 1e0b950 >
 1e0b984:    74 e5 ec 0f       	if (r4 == 87) goto -40 <.GJTIE741_0_0_+0x42 : 1e0b960 >
 1e0b988:    ea 1f             	goto -44 <.GJTIE741_0_0_+0x40 : 1e0b95e >


__ble_thread_loop_handler:
 1e0b98a:    7f 01             	[--sp] = {rets, r15-r4}			  ## btstack_main.c:771:0
 1e0b98c:    e6 0b             	sp += -52			  ## btstack_main.c:771:0
 1e0b98e:    c6 ff 40 1c 00 00 	r6 = 7232 <btstack_global_info : 1c40 >			  ## btstack_main.c:771:0
 1e0b994:    90 4c             	r0 = [r6 + 36]			  ## btstack_main.c:771:0
 1e0b996:    80 f3 16 28       	call 20524 <cbuf_get_data_size : 1e109c6 >			  ## btstack_main.c:552:12
 1e0b99a:    00 e0 16 01       	if (r0 == 0) goto 556 <.GJTIE745_1_1_+0x7A : 1e0bbca >			  ## btstack_main.c:552:12
 1e0b99e:    1d 70             	r13 = 1
 1e0b9a0:    0c 70             	r12 = 0
 1e0b9a2:    39 71             	r9 = 19
 1e0b9a4:    c8 ff e0 66 e1 01 	r8 = 31549152 <gpio_regs+0x224 : 1e166e0 >
 1e0b9aa:    ca ff 8e 09 00 00 	r10 = 2446 <gap_request_connection_parameter_update.le_con_param_update_identifier : 98e >
 1e0b9b0:    cb ff 64 0f 00 00 	r11 = 3940 <config_hci_ll_param.0 : f64 >
 1e0b9b6:    c5 9c             	r5 = r6 + 12			  ## btstack_main.c:553:9
 1e0b9b8:    01 a2             	r1 = sp + 32			  ## btstack_main.c:553:9
 1e0b9ba:    42 70             	r2 = 4			  ## btstack_main.c:553:9
 1e0b9bc:    50 08             	r0 = r5			  ## btstack_main.c:553:9
 1e0b9be:    80 f3 11 28       	call 20514 <cbuf_read : 1e109e4 >			  ## btstack_main.c:553:9
 1e0b9c2:    80 f5 22 00       	r0 = h[sp+34] (u)			  ## btstack_main.c:554:13
 1e0b9c6:    05 20             	if (r0 == 0) goto 10 <__ble_thread_loop_handler+0x48 : 1e0b9d2 >			  ## btstack_main.c:554:13
 1e0b9c8:    82 c0             	r2 = r0 << 2			  ## btstack_main.c:555:68
 1e0b9ca:    c1 a0             	r1 = sp + 12			  ## btstack_main.c:555:68
 1e0b9cc:    50 08             	r0 = r5			  ## btstack_main.c:555:13
 1e0b9ce:    80 f3 09 28       	call 20498 <cbuf_read : 1e109e4 >			  ## btstack_main.c:555:13
 1e0b9d2:    80 f5 20 00       	r0 = h[sp+32] (u)
 1e0b9d6:    01 fc ff ff       	r1 = r0 + -1			  ## btstack_main.c:561:9
 1e0b9da:    e1 e1 26 80       	if (r1 > 30) goto 76 <.GJTIE745_0_0_+0xA : 1e0ba2a >			  ## btstack_main.c:561:9
 1e0b9de:    48 c0             	r0 = r1 << 1
 1e0b9e0:    b0 00             	tbh [r0]


.GJTIL745_0_0_:
 1e0b9e2:    1f 00     < 31 : 0x1F >
 1e0b9e4:    36 00     < 54 : 0x36 >
 1e0b9e6:    44 00     < 68 : 0x44 >
 1e0b9e8:    4a 00     < 74 : 0x4A >
 1e0b9ea:    50 00     < 80 : 0x50 >
 1e0b9ec:    5a 00     < 90 : 0x5A >
 1e0b9ee:    ef 00     < 239 : 0xEF >
 1e0b9f0:    5e 00     < 94 : 0x5E >
 1e0b9f2:    ef 00     < 239 : 0xEF >
 1e0b9f4:    ef 00     < 239 : 0xEF >
 1e0b9f6:    64 00     < 100 : 0x64 >
 1e0b9f8:    88 00     < 136 : 0x88 >
 1e0b9fa:    ef 00     < 239 : 0xEF >
 1e0b9fc:    ef 00     < 239 : 0xEF >
 1e0b9fe:    8b 00     < 139 : 0x8B >
 1e0ba00:    90 00     < 144 : 0x90 >
 1e0ba02:    93 00     < 147 : 0x93 >
 1e0ba04:    a2 00     < 162 : 0xA2 >
 1e0ba06:    a9 00     < 169 : 0xA9 >
 1e0ba08:    ef 00     < 239 : 0xEF >
 1e0ba0a:    b0 00     < 176 : 0xB0 >
 1e0ba0c:    be 00     < 190 : 0xBE >
 1e0ba0e:    c5 00     < 197 : 0xC5 >
 1e0ba10:    ef 00     < 239 : 0xEF >
 1e0ba12:    ef 00     < 239 : 0xEF >
 1e0ba14:    ef 00     < 239 : 0xEF >
 1e0ba16:    c8 00     < 200 : 0xC8 >
 1e0ba18:    ef 00     < 239 : 0xEF >
 1e0ba1a:    cf 00     < 207 : 0xCF >
 1e0ba1c:    d3 00     < 211 : 0xD3 >
 1e0ba1e:    52 00     < 82 : 0x52 >
 1e0ba20:    c0 f5 0c 00       	r0 = b[sp+12] (u)			  ## btstack_main.c:563:13
 1e0ba24:    80 f3 95 92       	call 75050 <ll_hci_adv_enable : 1e1df52 >			  ## btstack_main.c:563:13
 1e0ba28:    cb 18             	goto 406 <.GJTIE745_1_1_+0x70 : 1e0bbc0 >			  ## btstack_main.c:563:13
 1e0ba2a:    01 ff 82 00 c8 00 	if (r0 != 130) goto 400 <.GJTIE745_1_1_+0x70 : 1e0bbc0 >
 1e0ba30:    40 02             	r0 = [sp+16]			  ## btstack_main.c:679:68
 1e0ba32:    23 50             	r3 = h[r0 + 4] (u)			  ## btstack_main.c:680:17
 1e0ba34:    12 50             	r2 = h[r0 + 2] (u)			  ## btstack_main.c:680:17
 1e0ba36:    01 50             	r1 = h[r0 + 0] (u)			  ## btstack_main.c:680:17
 1e0ba38:    34 50             	r4 = h[r0 + 6] (u)			  ## btstack_main.c:680:17
 1e0ba3a:    80 f5 0c 00       	r0 = h[sp+12] (u)			  ## btstack_main.c:680:17
 1e0ba3e:    1d f5 08 00       	[sp+8] = r13			  ## btstack_main.c:680:17
 1e0ba42:    1d f5 04 00       	[sp+4] = r13			  ## btstack_main.c:680:17
 1e0ba46:    0c 02             	[sp] = r4			  ## btstack_main.c:680:17
 1e0ba48:    80 f3 68 92       	call 74960 <ll_hci_connection_update : 1e1df1c >			  ## btstack_main.c:680:17
 1e0ba4c:    b9 18             	goto 370 <.GJTIE745_1_1_+0x70 : 1e0bbc0 >			  ## btstack_main.c:680:17
 1e0ba4e:    c2 f5 10 00       	r2 = b[sp+16] (u)			  ## btstack_main.c:533:5
 1e0ba52:    80 f5 0c 00       	r0 = h[sp+12] (u)			  ## btstack_main.c:533:5
 1e0ba56:    c1 f5 14 00       	r1 = b[sp+20] (u)			  ## btstack_main.c:533:5
 1e0ba5a:    9c f5 28 00       	h[sp+40] = r12			  ## btstack_main.c:532:5
 1e0ba5e:    1c f5 24 00       	[sp+36] = r12			  ## btstack_main.c:532:5
 1e0ba62:    19 02             	[sp+4] = r1			  ## btstack_main.c:533:5
 1e0ba64:    41 a2             	r1 = sp + 36			  ## btstack_main.c:533:5
 1e0ba66:    03 70             	r3 = 0			  ## btstack_main.c:533:5
 1e0ba68:    59 18             	goto 178 <.GJTIE745_0_0_+0xFC : 1e0bb1c >			  ## btstack_main.c:533:5
 1e0ba6a:    41 02             	r1 = [sp+16]			  ## btstack_main.c:575:53
 1e0ba6c:    c0 f5 0c 00       	r0 = b[sp+12] (u)			  ## btstack_main.c:575:13
 1e0ba70:    80 f3 b0 92       	call 75104 <ll_hci_adv_set_data : 1e1dfd4 >			  ## btstack_main.c:575:13
 1e0ba74:    a5 18             	goto 330 <.GJTIE745_1_1_+0x70 : 1e0bbc0 >			  ## btstack_main.c:575:13
 1e0ba76:    41 02             	r1 = [sp+16]			  ## btstack_main.c:579:67
 1e0ba78:    c0 f5 0c 00       	r0 = b[sp+12] (u)			  ## btstack_main.c:579:13
 1e0ba7c:    80 f3 d5 92       	call 75178 <ll_hci_adv_scan_response_set_data : 1e1e02a >			  ## btstack_main.c:579:13
 1e0ba80:    9f 18             	goto 318 <.GJTIE745_1_1_+0x70 : 1e0bbc0 >			  ## btstack_main.c:579:13
 1e0ba82:    19 f5 10 00       	[sp+16] = r9			  ## btstack_main.c:617:21
 1e0ba86:    30 02             	r0 = [sp+12]			  ## btstack_main.c:620:21
 1e0ba88:    9b 20             	if (r0 == 0) goto 310 <.GJTIE745_1_1_+0x70 : 1e0bbc0 >			  ## btstack_main.c:620:21
 1e0ba8a:    c1 f5 10 00       	r1 = b[sp+16] (u)			  ## btstack_main.c:621:21
 1e0ba8e:    20 04             	r0 = r0.l (u)			  ## btstack_main.c:621:21
 1e0ba90:    80 f3 81 93       	call 75522 <ll_hci_disconnect : 1e1e196 >			  ## btstack_main.c:621:21
 1e0ba94:    95 18             	goto 298 <.GJTIE745_1_1_+0x70 : 1e0bbc0 >			  ## btstack_main.c:621:21
 1e0ba96:    30 02             	r0 = [sp+12]			  ## btstack_main.c:601:63
 1e0ba98:    10 f6 b0 60       	[r6 + 176] = r0			  ## btstack_main.c:601:53
 1e0ba9c:    91 18             	goto 290 <.GJTIE745_1_1_+0x70 : 1e0bbc0 >			  ## btstack_main.c:601:53
 1e0ba9e:    bf f3 31 e2       	call -15262 <att_get_default_conn_handle : 1e07f04 >			  ## btstack_main.c:606:39
 1e0baa2:    81 f5 0c 00       	r1 = h[sp+12] (u)			  ## btstack_main.c:606:17
 1e0baa6:    3a 14             	call -1932 <att_send_set_mtu_size : 1e0b31c >			  ## btstack_main.c:606:17
 1e0baa8:    8b 18             	goto 278 <.GJTIE745_1_1_+0x70 : 1e0bbc0 >			  ## btstack_main.c:606:17
 1e0baaa:    40 02             	r0 = [sp+16]			  ## btstack_main.c:687:68
 1e0baac:    0e f7 06 00       	r14 = h[r0 + 6] (u)			  ## btstack_main.c:689:94
 1e0bab0:    0f f7 04 00       	r15 = h[r0 + 4] (u)			  ## btstack_main.c:689:71
 1e0bab4:    14 50             	r4 = h[r0 + 2] (u)			  ## btstack_main.c:688:113
 1e0bab6:    07 50             	r7 = h[r0 + 0] (u)			  ## btstack_main.c:688:85
 1e0bab8:    80 f5 0c 00       	r0 = h[sp+12] (u)			  ## l2cap.c:2087:39
 1e0babc:    bf f3 24 e1       	call -15800 <le_hci_connection_for_handle : 1e07d08 >			  ## l2cap.c:2087:39
 1e0bac0:    05 08             	r5 = r0			  ## l2cap.c:2087:39
 1e0bac2:    7e 2a             	if (r5 == 0) goto 252 <.GJTIE745_1_1_+0x70 : 1e0bbc0 >
 1e0bac4:    80 08             	r0 = r8			  ## l2cap.c:2091:5
 1e0bac6:    80 f3 56 1c       	call 14508 <puts : 1e0f376 >			  ## l2cap.c:2091:5
 1e0baca:    9f 5b             	h[r5 + 50] = r7			  ## l2cap.c:2092:38
 1e0bacc:    ac 5b             	h[r5 + 52] = r4			  ## l2cap.c:2093:38
 1e0bace:    1f f7 36 50       	h[r5 + 54] = r15			  ## l2cap.c:2094:33
 1e0bad2:    1e f7 38 50       	h[r5 + 56] = r14			  ## l2cap.c:2095:40
 1e0bad6:    1d f6 2c 50       	[r5 + 44] = r13			  ## l2cap.c:2096:47
 1e0bada:    00 f9 00 a0       	r0 = b[r10 + 0] (u)			  ## l2cap.c:2097:50
 1e0bade:    10 f9 30 50       	b[r5 + 48] = r0			  ## l2cap.c:2097:48
 1e0bae2:    bf f3 89 ed       	call -9454 <l2cap_run : 1e095f8 >			  ## l2cap.c:2098:5
 1e0bae6:    00 f9 00 a0       	r0 = b[r10 + 0] (u)			  ## l2cap.c:2100:39
 1e0baea:    10 80             	r0 += 1			  ## l2cap.c:2100:39
 1e0baec:    10 f9 00 a0       	b[r10 + 0] = r0			  ## l2cap.c:2101:40
 1e0baf0:    67 18             	goto 206 <.GJTIE745_1_1_+0x70 : 1e0bbc0 >			  ## l2cap.c:2101:40
 1e0baf2:    11 70             	r1 = 1
 1e0baf4:    49 02             	[sp+16] = r1			  ## btstack_main.c:587:21
 1e0baf6:    34 18             	goto 104 <.GJTIE745_1_1_+0x10 : 1e0bb60 >			  ## btstack_main.c:587:21
 1e0baf8:    30 02             	r0 = [sp+12]			  ## btstack_main.c:628:64
 1e0bafa:    61 90             	r1 = r0 + 6			  ## btstack_main.c:630:79
 1e0bafc:    80 f3 5b 93       	call 75446 <ll_hci_create_conn : 1e1e1b6 >			  ## btstack_main.c:630:17
 1e0bb00:    5f 18             	goto 190 <.GJTIE745_1_1_+0x70 : 1e0bbc0 >
 1e0bb02:    80 f3 c8 93       	call 75664 <ll_hci_create_conn_cancel : 1e1e296 >			  ## btstack_main.c:643:17
 1e0bb06:    5c 18             	goto 184 <.GJTIE745_1_1_+0x70 : 1e0bbc0 >			  ## btstack_main.c:643:17
 1e0bb08:    61 02             	r1 = [sp+24]			  ## btstack_main.c:571:72
 1e0bb0a:    83 f9 01 10       	r3 = b[r1 ++= 1] (u)			  ## btstack_main.c:542:5
 1e0bb0e:    c2 f5 10 00       	r2 = b[sp+16] (u)			  ## btstack_main.c:542:5
 1e0bb12:    80 f5 0c 00       	r0 = h[sp+12] (u)			  ## btstack_main.c:542:5
 1e0bb16:    c4 f5 14 00       	r4 = b[sp+20] (u)			  ## btstack_main.c:542:5
 1e0bb1a:    1c 02             	[sp+4] = r4			  ## btstack_main.c:542:5
 1e0bb1c:    09 02             	[sp] = r1
 1e0bb1e:    01 08             	r1 = r0
 1e0bb20:    80 f3 20 92       	call 74816 <ll_hci_adv_set_params : 1e1df64 >
 1e0bb24:    4d 18             	goto 154 <.GJTIE745_1_1_+0x70 : 1e0bbc0 >
 1e0bb26:    c1 f5 10 00       	r1 = b[sp+16] (u)			  ## btstack_main.c:650:17
 1e0bb2a:    80 f5 0c 00       	r0 = h[sp+12] (u)			  ## btstack_main.c:650:17
 1e0bb2e:    80 f3 ba 93       	call 75636 <ll_hci_vendor_send_key_num : 1e1e2a6 >			  ## btstack_main.c:650:17
 1e0bb32:    46 18             	goto 140 <.GJTIE745_1_1_+0x70 : 1e0bbc0 >			  ## btstack_main.c:650:17
 1e0bb34:    81 f5 10 00       	r1 = h[sp+16] (u)			  ## btstack_main.c:655:17
 1e0bb38:    80 f5 0c 00       	r0 = h[sp+12] (u)			  ## btstack_main.c:655:17
 1e0bb3c:    80 f3 c3 93       	call 75654 <ll_vendor_latency_hold_cnt : 1e1e2c6 >			  ## btstack_main.c:655:17
 1e0bb40:    3f 18             	goto 126 <.GJTIE745_1_1_+0x70 : 1e0bbc0 >			  ## btstack_main.c:655:17
 1e0bb42:    30 02             	r0 = [sp+12]			  ## btstack_main.c:583:37
 1e0bb44:    30 e0 3c 80       	if (r0 > 3) goto 120 <.GJTIE745_1_1_+0x70 : 1e0bbc0 >
 1e0bb48:    41 02             	r1 = [sp+16]			  ## btstack_main.c:583:46
 1e0bb4a:    a0 00             	tbb [r0]


.GJTIS745_1_1_:
 1e0bb4c:    02     < 2 : 0x2 >
 1e0bb4d:    22     < 34 : 0x22 >
 1e0bb4e:    2a     < 42 : 0x2A >
 1e0bb4f:    32     < 50 : 0x32 >
 1e0bb50:    00 f9 00 b0       	r0 = b[r11 + 0] (u)			  ## btstack_main.c:831:42
 1e0bb54:    21 fd 03 19       	r1 = r1 & 3			  ## btstack_main.c:831:42
 1e0bb58:    30 fd 03 09       	r0 = r0 & 4294967292			  ## btstack_main.c:831:42
 1e0bb5c:    2e 18             	goto 92 <.GJTIE745_1_1_+0x6A : 1e0bbba >			  ## btstack_main.c:831:42
 1e0bb5e:    41 02             	r1 = [sp+16]
 1e0bb60:    c0 f5 0c 00       	r0 = b[sp+12] (u)			  ## btstack_main.c:590:17
 1e0bb64:    41 04             	r1 = r1.b0 (u)			  ## btstack_main.c:590:17
 1e0bb66:    80 f3 06 93       	call 75276 <ll_hci_scan_enable : 1e1e176 >			  ## btstack_main.c:590:17
 1e0bb6a:    2a 18             	goto 84 <.GJTIE745_1_1_+0x70 : 1e0bbc0 >			  ## btstack_main.c:590:17
 1e0bb6c:    80 f3 5c 14       	call 10424 <att_server_send_request : 1e0e428 >			  ## btstack_main.c:667:17
 1e0bb70:    27 18             	goto 78 <.GJTIE745_1_1_+0x70 : 1e0bbc0 >			  ## btstack_main.c:667:17
 1e0bb72:    81 f5 10 00       	r1 = h[sp+16] (u)			  ## btstack_main.c:612:17
 1e0bb76:    80 f5 0c 00       	r0 = h[sp+12] (u)			  ## btstack_main.c:612:17
 1e0bb7a:    bf f3 cf fb       	call -2146 <att_send_set_mtu_size : 1e0b31c >			  ## btstack_main.c:612:17
 1e0bb7e:    20 18             	goto 64 <.GJTIE745_1_1_+0x70 : 1e0bbc0 >			  ## btstack_main.c:612:17
 1e0bb80:    c0 a0             	r0 = sp + 12
 1e0bb82:    80 f3 d0 0d       	call 7072 <sm_cmd_request_resume : 1e0d726 >			  ## btstack_main.c:673:17
 1e0bb86:    1c 18             	goto 56 <.GJTIE745_1_1_+0x70 : 1e0bbc0 >			  ## btstack_main.c:673:17
 1e0bb88:    30 02             	r0 = [sp+12]			  ## btstack_main.c:636:48
 1e0bb8a:    80 f3 71 93       	call 75490 <ll_hci_create_conn_ext : 1e1e270 >			  ## btstack_main.c:636:17
 1e0bb8e:    18 18             	goto 48 <.GJTIE745_1_1_+0x70 : 1e0bbc0 >			  ## btstack_main.c:636:17
 1e0bb90:    00 f9 00 b0       	r0 = b[r11 + 0] (u)			  ## btstack_main.c:835:43
 1e0bb94:    30 fd 0c 09       	r0 = r0 & 4294967283			  ## btstack_main.c:835:43
 1e0bb98:    89 c0             	r1 = r1 << 2			  ## btstack_main.c:835:43
 1e0bb9a:    21 fd 0c 19       	r1 = r1 & 12			  ## btstack_main.c:835:43
 1e0bb9e:    0d 18             	goto 26 <.GJTIE745_1_1_+0x6A : 1e0bbba >			  ## btstack_main.c:835:43
 1e0bba0:    00 f9 00 b0       	r0 = b[r11 + 0] (u)			  ## btstack_main.c:839:44
 1e0bba4:    30 fd 30 09       	r0 = r0 & 4294967247			  ## btstack_main.c:839:44
 1e0bba8:    09 c1             	r1 = r1 << 4			  ## btstack_main.c:839:44
 1e0bbaa:    21 fd 30 19       	r1 = r1 & 48			  ## btstack_main.c:839:44
 1e0bbae:    05 18             	goto 10 <.GJTIE745_1_1_+0x6A : 1e0bbba >			  ## btstack_main.c:839:44
 1e0bbb0:    00 f9 00 b0       	r0 = b[r11 + 0] (u)			  ## btstack_main.c:843:49
 1e0bbb4:    89 c1             	r1 = r1 << 6			  ## btstack_main.c:843:49
 1e0bbb6:    20 fd 3f 09       	r0 = r0 & 63			  ## btstack_main.c:843:49
 1e0bbba:    50 b2             	r0 |= r1
 1e0bbbc:    10 f9 00 b0       	b[r11 + 0] = r0
 1e0bbc0:    90 4c             	r0 = [r6 + 36]
 1e0bbc2:    80 f3 00 27       	call 19968 <cbuf_get_data_size : 1e109c6 >			  ## btstack_main.c:552:12
 1e0bbc6:    00 e0 f6 1e       	if (r0 != 0) goto -532 <__ble_thread_loop_handler+0x2C : 1e0b9b6 >			  ## btstack_main.c:552:12
 1e0bbca:    c5 ff e0 1b 00 00 	r5 = 7136 <att_s_hdl : 1be0 >
 1e0bbd0:    04 4a             	r4 = [r5 + 0]			  ## att_send.c:622:5
 1e0bbd2:    5e 28             	if (r4 == 0) goto 188 <.GJTIE745_1_1_+0x140 : 1e0bc90 >			  ## att_send.c:622:5
 1e0bbd4:    41 fc a4 00       	r1 = r4 + 164
 1e0bbd8:    e0 62             	r0 = b[r1 + 14] (u)			  ## att_send.c:625:17
 1e0bbda:    0c 20             	if (r0 == 0) goto 24 <.GJTIE745_1_1_+0xA4 : 1e0bbf4 >			  ## att_send.c:625:17
 1e0bbdc:    23 42             	r3 = [r1 + 8]			  ## att_send.c:626:149
 1e0bbde:    12 52             	r2 = h[r1 + 2] (u)			  ## att_send.c:626:9
 1e0bbe0:    00 52             	r0 = h[r1 + 0] (u)			  ## att_send.c:626:9
 1e0bbe2:    21 52             	r1 = h[r1 + 4] (u)			  ## att_send.c:626:93
 1e0bbe4:    34 fd f0 1a       	r4 = r1 & 4294905855			  ## att_send.c:626:9
 1e0bbe8:    09 d3             	r1 = r1 >> 12			  ## att_send.c:626:93
 1e0bbea:    0c 02             	[sp] = r4			  ## att_send.c:626:9
 1e0bbec:    73 16             	call -794 <att_operation_cmd_send : 1e0b8d4 >			  ## att_send.c:626:9
 1e0bbee:    04 4a             	r4 = [r5 + 0]
 1e0bbf0:    11 70             	r1 = 1
 1e0bbf2:    01 18             	goto 2 <.GJTIE745_1_1_+0xA6 : 1e0bbf6 >
 1e0bbf4:    01 70             	r1 = 0
 1e0bbf6:    00 f6 98 40       	r0 = [r4 + 152]
 1e0bbfa:    80 f3 e4 26       	call 19912 <cbuf_get_data_size : 1e109c6 >			  ## att_send.c:630:9
 1e0bbfe:    32 20             	if (r0 == 0) goto 100 <.GJTIE745_1_1_+0x114 : 1e0bc64 >			  ## att_send.c:630:9
 1e0bc00:    08 fb ff 0f       	r8 = 4095 <sys_clock_limit+0x43 : fff >
 1e0bc04:    00 f9 b2 40       	r0 = b[r4 + 178] (u)			  ## att_send.c:589:21
 1e0bc08:    2e 30             	if (r0 != 0) goto 92 <.GJTIE745_1_1_+0x116 : 1e0bc66 >			  ## att_send.c:589:21
 1e0bc0a:    00 f6 98 40       	r0 = [r4 + 152]
 1e0bc0e:    80 f3 da 26       	call 19892 <cbuf_get_data_size : 1e109c6 >			  ## att_send.c:594:18
 1e0bc12:    29 20             	if (r0 == 0) goto 82 <.GJTIE745_1_1_+0x116 : 1e0bc66 >			  ## att_send.c:594:18
 1e0bc14:    40 fc 80 00       	r0 = r4 + 128			  ## att_send.c:598:28
 1e0bc18:    c1 a2             	r1 = sp + 44			  ## att_send.c:598:28
 1e0bc1a:    62 70             	r2 = 6			  ## att_send.c:598:9
 1e0bc1c:    80 f3 e2 26       	call 19908 <cbuf_read : 1e109e4 >			  ## att_send.c:598:9
 1e0bc20:    87 f5 30 00       	r7 = h[sp+48] (u)			  ## att_send.c:599:23
 1e0bc24:    34 fd f0 7a       	r4 = r7 & 4294905855			  ## att_send.c:599:23
 1e0bc28:    87 f0 08 00       	if ((r7 & r8) == 0) goto 16 <.GJTIE745_1_1_+0xEC : 1e0bc3c >			  ## att_send.c:599:23
 1e0bc2c:    00 4a             	r0 = [r5 + 0]			  ## att_send.c:600:24
 1e0bc2e:    01 f6 ac 00       	r1 = [r0 + 172]			  ## att_send.c:600:56
 1e0bc32:    00 fc 80 00       	r0 = r0 + 128			  ## att_send.c:600:32
 1e0bc36:    42 08             	r2 = r4			  ## att_send.c:600:13
 1e0bc38:    80 f3 d4 26       	call 19880 <cbuf_read : 1e109e4 >			  ## att_send.c:600:13
 1e0bc3c:    00 4a             	r0 = [r5 + 0]			  ## att_send.c:603:109
 1e0bc3e:    03 f6 ac 00       	r3 = [r0 + 172]			  ## att_send.c:603:117
 1e0bc42:    82 f5 2e 00       	r2 = h[sp+46] (u)			  ## att_send.c:603:19
 1e0bc46:    80 f5 2c 00       	r0 = h[sp+44] (u)			  ## att_send.c:603:19
 1e0bc4a:    39 d3             	r1 = r7 >> 12			  ## att_send.c:603:75
 1e0bc4c:    0c 02             	[sp] = r4			  ## att_send.c:603:19
 1e0bc4e:    42 16             	call -892 <att_operation_cmd_send : 1e0b8d4 >			  ## att_send.c:603:19
 1e0bc50:    04 4a             	r4 = [r5 + 0]			  ## att_send.c:603:19
 1e0bc52:    70 e5 d7 1f       	if (r0 != 87) goto -82 <.GJTIE745_1_1_+0xB4 : 1e0bc04 >
 1e0bc56:    40 fc a4 00       	r0 = r4 + 164			  ## att_send.c:607:29
 1e0bc5a:    c1 a2             	r1 = sp + 44
 1e0bc5c:    62 70             	r2 = 6			  ## att_send.c:607:13
 1e0bc5e:    97 f3 41 d9       	call 3125890 <memcpy : 106ee4 >			  ## att_send.c:607:13
 1e0bc62:    01 18             	goto 2 <.GJTIE745_1_1_+0x116 : 1e0bc66 >
 1e0bc64:    15 22             	if (r1 == 0) goto 42 <.GJTIE745_1_1_+0x140 : 1e0bc90 >
 1e0bc66:    14 28             	if (r4 == 0) goto 40 <.GJTIE745_1_1_+0x140 : 1e0bc90 >
 1e0bc68:    40 fc 60 00       	r0 = r4 + 96			  ## att_send.c:131:37
 1e0bc6c:    01 70             	r1 = 0			  ## att_send.c:131:37
 1e0bc6e:    82 f7 04 00       	r2 = h[r0 ++= 4] (u)			  ## att_send.c:131:37
 1e0bc72:    02 e4 04 20       	if (r2 >= 64) goto 8 <.GJTIE745_1_1_+0x12E : 1e0bc7e >			  ## att_send.c:131:37
 1e0bc76:    11 80             	r1 += 1			  ## att_send.c:130:35
 1e0bc78:    71 e0 f9 df       	ifs (r1 <= 7) goto -14 <.GJTIE745_1_1_+0x11E : 1e0bc6e >
 1e0bc7c:    09 18             	goto 18 <.GJTIE745_1_1_+0x140 : 1e0bc90 >
 1e0bc7e:    00 f9 b5 60       	r0 = b[r6 + 181] (u)			  ## btstack_main.c:1077:33
 1e0bc82:    20 fd 07 09       	r0 = r0 & 7			  ## att_send.c:308:9
 1e0bc86:    20 e0 01 00       	if (r0 == 2) goto 2 <.GJTIE745_1_1_+0x13C : 1e0bc8c >			  ## att_send.c:308:9
 1e0bc8a:    02 30             	if (r0 != 0) goto 4 <.GJTIE745_1_1_+0x140 : 1e0bc90 >
 1e0bc8c:    80 f3 3d 14       	call 10362 <att_server_request_can_send_now_event : 1e0e50a >
 1e0bc90:    00 f6 b0 60       	r0 = [r6 + 176]			  ## btstack_main.c:779:30
 1e0bc94:    01 20             	if (r0 == 0) goto 2 <.GJTIE745_1_1_+0x148 : 1e0bc98 >			  ## btstack_main.c:779:30
 1e0bc96:    80 00             	call r0			  ## btstack_main.c:780:9
 1e0bc98:    00 f9 b4 60       	r0 = b[r6 + 180] (u)			  ## btstack_main.c:783:31
 1e0bc9c:    20 fd f0 09       	r0 = r0 & 240			  ## btstack_main.c:783:40
 1e0bca0:    01 ff a0 00 2c 00 	if (r0 != 160) goto 88 <.GJTIE745_1_1_+0x1AE : 1e0bcfe >			  ## btstack_main.c:783:40
 1e0bca6:    c0 ff 60 18 00 00 	r0 = 6240 <report_irq_stack_end : 1860 >			  ## btstack_linked_list.c:60:12
 1e0bcac:    00 40             	r0 = [r0 + 0]			  ## btstack_linked_list.c:60:12
 1e0bcae:    04 20             	if (r0 == 0) goto 8 <.GJTIE745_1_1_+0x168 : 1e0bcb8 >			  ## btstack_linked_list.c:60:12
 1e0bcb0:    70 75             	r0 = 87			  ## btstack_main.c:789:17
 1e0bcb2:    80 f3 8f 1b       	call 14110 <putchar : 1e0f3d4 >			  ## btstack_main.c:789:17
 1e0bcb6:    23 18             	goto 70 <.GJTIE745_1_1_+0x1AE : 1e0bcfe >			  ## btstack_main.c:789:17
 1e0bcb8:    c0 ff 1c 1c 00 00 	r0 = 7196 <btstack_stack : 1c1c >			  ## btstack_main.c:787:54
 1e0bcbe:    10 40             	r0 = [r0 + 4]			  ## btstack_main.c:787:54
 1e0bcc0:    c4 ff 94 1a 00 00 	r4 = 6804 <le_stack_pool : 1a94 >			  ## btstack_main.c:787:54
 1e0bcc6:    08 48             	[r4 + 0] = r0			  ## btstack_memory.c:439:19
 1e0bcc8:    80 f3 7b 0d       	call 6902 <sm_exit : 1e0d7c2 >			  ## btstack_memory.c:441:5
 1e0bccc:    01 48             	r1 = [r4 + 0]			  ## btstack_memory.c:445:9
 1e0bcce:    20 42             	r0 = [r1 + 8]			  ## btstack_memory.c:445:9
 1e0bcd0:    05 20             	if (r0 == 0) goto 10 <.GJTIE745_1_1_+0x18C : 1e0bcdc >			  ## btstack_memory.c:445:9
 1e0bcd2:    80 f3 9b 1e       	call 15670 <free : 1e0fa0c >			  ## btstack_memory.c:446:9
 1e0bcd6:    01 48             	r1 = [r4 + 0]			  ## btstack_memory.c:447:9
 1e0bcd8:    c2 f4 00 19       	[r1 + 8] = 0			  ## btstack_memory.c:447:53
 1e0bcdc:    30 42             	r0 = [r1 + 12]			  ## btstack_memory.c:452:9
 1e0bcde:    05 20             	if (r0 == 0) goto 10 <.GJTIE745_1_1_+0x19A : 1e0bcea >			  ## btstack_memory.c:452:9
 1e0bce0:    80 f3 94 1e       	call 15656 <free : 1e0fa0c >			  ## btstack_memory.c:453:9
 1e0bce4:    00 48             	r0 = [r4 + 0]			  ## btstack_memory.c:454:9
 1e0bce6:    c3 f4 00 09       	[r0 + 12] = 0			  ## btstack_memory.c:454:47
 1e0bcea:    00 f9 b4 60       	r0 = b[r6 + 180] (u)			  ## btstack_main.c:794:34
 1e0bcee:    60 ff 0f 09 02 00 	if ((r0 & 15) == 0) goto 4 <.GJTIE745_1_1_+0x1A8 : 1e0bcf8 >			  ## btstack_main.c:794:34
 1e0bcf4:    80 f3 da 90       	call 74164 <ll_hci_destory : 1e1deac >			  ## btstack_main.c:796:13
 1e0bcf8:    00 70             	r0 = 0			  ## btstack_main.c:798:39
 1e0bcfa:    10 f9 b4 60       	b[r6 + 180] = r0			  ## btstack_main.c:798:39
 1e0bcfe:    1a 0a             	sp += 52
 1e0bd00:    5f 01             	{pc, r15-r4} = [sp++]			  ## btstack_main.c:802:1


l2cap_max_le_mtu:
 1e0bd02:    c0 ff 8c 09 00 00 	r0 = 2444 <le_att_mtu_size : 98c >			  ## l2cap.c:986:0
 1e0bd08:    00 50             	r0 = h[r0 + 0] (u)			  ## l2cap.c:988:5
 1e0bd0a:    20 00             	rts			  ## l2cap.c:988:5


l2cap_release_packet_buffer:
 1e0bd0c:    c0 ff 60 18 00 00 	r0 = 6240 <report_irq_stack_end : 1860 >			  ## l2cap.c:2119:0
 1e0bd12:    01 70             	r1 = 0			  ## hci_vendor.c:1940:45
 1e0bd14:    11 f9 15 02       	b[r0 + 533] = r1			  ## hci_vendor.c:1940:45
 1e0bd18:    20 00             	rts			  ## l2cap.c:2121:1


ble_list_delete_device:
 1e0bd1a:    7a 01             	[--sp] = {rets, r10-r4}			  ## remote_device_list.c:765:0
 1e0bd1c:    e6 0b             	sp += -52			  ## remote_device_list.c:765:0
 1e0bd1e:    c6 ff b4 09 00 00 	r6 = 2484 <remote_info_hdl : 9b4 >			  ## remote_device_list.c:765:0
 1e0bd24:    22 6c             	r2 = b[r6 + 2] (u)			  ## remote_device_list.c:772:22
 1e0bd26:    19 08             	r9 = r1			  ## remote_device_list.c:772:22
 1e0bd28:    0a 08             	r10 = r0			  ## remote_device_list.c:772:22
 1e0bd2a:    2f 24             	if (r2 == 0) goto 94 <ble_list_delete_device+0x70 : 1e0bd8a >			  ## remote_device_list.c:772:22
 1e0bd2c:    10 6c             	r0 = b[r6 + 1] (u)			  ## remote_device_list.c:777:29
 1e0bd2e:    60 ff 0f 09 2b 00 	if ((r0 & 15) == 0) goto 86 <ble_list_delete_device+0x70 : 1e0bd8a >			  ## remote_device_list.c:777:29
 1e0bd34:    00 a0             	r0 = sp + 0
 1e0bd36:    08 fc 20 00       	r8 = r0 + 32
 1e0bd3a:    04 70             	r4 = 0
 1e0bd3c:    05 70             	r5 = 0
 1e0bd3e:    07 05             	r7 = r4.b0 (u)			  ## remote_device_list.c:778:13
 1e0bd40:    00 a0             	r0 = sp + 0			  ## remote_device_list.c:778:13
 1e0bd42:    71 08             	r1 = r7			  ## remote_device_list.c:778:13
 1e0bd44:    bf f3 6f e4       	call -14114 <get_list_exist_item : 1e08626 >			  ## remote_device_list.c:778:13
 1e0bd48:    16 20             	if (r0 == 0) goto 44 <ble_list_delete_device+0x5C : 1e0bd76 >
 1e0bd4a:    c0 f5 26 00       	r0 = b[sp+38] (u)			  ## remote_device_list.c:779:22
 1e0bd4e:    20 fd 0f 09       	r0 = r0 & 15			  ## remote_device_list.c:779:22
 1e0bd52:    a0 e0 10 10       	if (r0 != 10) goto 32 <ble_list_delete_device+0x5C : 1e0bd76 >			  ## remote_device_list.c:779:22
 1e0bd56:    09 e0 08 00       	if (r9 == 0) goto 16 <ble_list_delete_device+0x50 : 1e0bd6a >			  ## remote_device_list.c:780:21
 1e0bd5a:    01 a0             	r1 = sp + 0
 1e0bd5c:    a0 08             	r0 = r10			  ## remote_device_list.c:781:33
 1e0bd5e:    82 08             	r2 = r8			  ## remote_device_list.c:781:33
 1e0bd60:    bf f3 7d e4       	call -14086 <check_random_addr : 1e0865e >			  ## remote_device_list.c:781:33
 1e0bd64:    10 e0 07 10       	if (r0 != 1) goto 14 <ble_list_delete_device+0x5C : 1e0bd76 >			  ## remote_device_list.c:781:33
 1e0bd68:    0e 18             	goto 28 <ble_list_delete_device+0x6C : 1e0bd86 >			  ## remote_device_list.c:781:33
 1e0bd6a:    62 70             	r2 = 6			  ## remote_device_list.c:786:30
 1e0bd6c:    a0 08             	r0 = r10			  ## remote_device_list.c:786:30
 1e0bd6e:    81 08             	r1 = r8			  ## remote_device_list.c:786:30
 1e0bd70:    97 f3 bc d8       	call 3125624 <memcmp : 106eec >			  ## remote_device_list.c:786:30
 1e0bd74:    08 20             	if (r0 == 0) goto 16 <ble_list_delete_device+0x6C : 1e0bd86 >			  ## remote_device_list.c:786:30
 1e0bd76:    10 6c             	r0 = b[r6 + 1] (u)			  ## remote_device_list.c:777:29
 1e0bd78:    15 80             	r5 += 1			  ## remote_device_list.c:777:43
 1e0bd7a:    20 fd 0f 09       	r0 = r0 & 15			  ## remote_device_list.c:777:21
 1e0bd7e:    14 80             	r4 += 1			  ## remote_device_list.c:777:19
 1e0bd80:    05 f2 dd 3f       	if (r5 < r0) goto -70 <ble_list_delete_device+0x24 : 1e0bd3e >			  ## remote_device_list.c:777:19
 1e0bd84:    02 18             	goto 4 <ble_list_delete_device+0x70 : 1e0bd8a >			  ## remote_device_list.c:777:19
 1e0bd86:    70 08             	r0 = r7			  ## remote_device_list.c:796:9
 1e0bd88:    4a 14             	call -1900 <delete_device_by_index : 1e0b61e >			  ## remote_device_list.c:796:9
 1e0bd8a:    1a 0a             	sp += 52
 1e0bd8c:    5a 01             	{pc, r10-r4} = [sp++]


reverse_24:
 1e0bd8e:    22 70             	r2 = 2			  ## utils.c:128:0
 1e0bd90:    83 f9 01 00       	r3 = b[r0 ++= 1] (u)			  ## utils.c:124:28
 1e0bd94:    13 fa 00 12       	b[r1+r2] = r3			  ## utils.c:124:26
 1e0bd98:    f2 8f             	r2 += -1			  ## utils.c:123:19
 1e0bd9a:    f2 ef f9 1f       	if (r2 != -1) goto -14 <reverse_24+0x2 : 1e0bd90 >			  ## utils.c:123:5
 1e0bd9e:    20 00             	rts			  ## utils.c:130:1


big_endian_read_16:
 1e0bda0:    10 09             	r0 += r1			  ## utils.c:96:0
 1e0bda2:    01 60             	r1 = b[r0 + 0] (u)			  ## utils.c:97:46
 1e0bda4:    10 60             	r0 = b[r0 + 1] (u)			  ## utils.c:97:12
 1e0bda6:    c8 fd 40 01       	r0 <= insert(r1, p:8, l:8)			  ## utils.c:97:43
 1e0bdaa:    20 00             	rts			  ## utils.c:97:5


ble_list_pair_is_allow:
 1e0bdac:    74 01             	[--sp] = {rets, r4}			  ## remote_device_list.c:689:0
 1e0bdae:    e6 0b             	sp += -52			  ## remote_device_list.c:689:0
 1e0bdb0:    c2 ff b4 09 00 00 	r2 = 2484 <remote_info_hdl : 9b4 >			  ## remote_device_list.c:689:0
 1e0bdb6:    13 64             	r3 = b[r2 + 1] (u)			  ## remote_device_list.c:691:18
 1e0bdb8:    04 08             	r4 = r0			  ## remote_device_list.c:691:18
 1e0bdba:    00 70             	r0 = 0
 1e0bdbc:    60 ff 0f 39 14 00 	if ((r3 & 15) == 0) goto 40 <ble_list_pair_is_allow+0x3E : 1e0bdea >
 1e0bdc2:    26 f3 12 30       	if ((r3 & 64) != 0) goto 36 <ble_list_pair_is_allow+0x3E : 1e0bdea >
 1e0bdc6:    10 70             	r0 = 1
 1e0bdc8:    61 ff 30 39 0e 00 	if ((r3 & 48) != 0) goto 28 <ble_list_pair_is_allow+0x3E : 1e0bdea >
 1e0bdce:    22 64             	r2 = b[r2 + 2] (u)			  ## remote_device_list.c:701:45
 1e0bdd0:    23 fd 0f 39       	r3 = r3 & 15			  ## remote_device_list.c:691:18
 1e0bdd4:    32 f2 09 30       	if (r2 < r3) goto 18 <ble_list_pair_is_allow+0x3E : 1e0bdea >			  ## remote_device_list.c:691:18
 1e0bdd8:    02 a0             	r2 = sp + 0
 1e0bdda:    f3 7f             	r3 = 255			  ## remote_device_list.c:586:9
 1e0bddc:    40 08             	r0 = r4			  ## remote_device_list.c:586:9
 1e0bdde:    bf f3 67 e4       	call -14130 <get_conn_addr_item : 1e086b0 >			  ## remote_device_list.c:586:9
 1e0bde2:    01 08             	r1 = r0			  ## remote_device_list.c:586:9
 1e0bde4:    10 70             	r0 = 1			  ## remote_device_list.c:586:9
 1e0bde6:    01 32             	if (r1 != 0) goto 2 <ble_list_pair_is_allow+0x3E : 1e0bdea >			  ## remote_device_list.c:586:9
 1e0bde8:    00 70             	r0 = 0			  ## remote_device_list.c:586:9
 1e0bdea:    1a 0a             	sp += 52
 1e0bdec:    54 01             	{pc, r4} = [sp++]			  ## remote_device_list.c:705:1


send_sco_disconn:
 1e0bdee:    74 01             	[--sp] = {rets, r4}			  ## bt_audio.c:111:0
 1e0bdf0:    c4 ff c2 09 00 00 	r4 = 2498 <disable_sco_timer : 9c2 >			  ## bt_audio.c:111:0
 1e0bdf6:    00 58             	r0 = h[r4 + 0] (u)			  ## bt_audio.c:113:9
 1e0bdf8:    04 20             	if (r0 == 0) goto 8 <send_sco_disconn+0x14 : 1e0be02 >
 1e0bdfa:    80 f3 43 28       	call 20614 <sys_timeout_del : 1e10e84 >			  ## bt_audio.c:115:9
 1e0bdfe:    00 70             	r0 = 0			  ## bt_audio.c:116:27
 1e0be00:    08 58             	h[r4 + 0] = r0			  ## bt_audio.c:116:27
 1e0be02:    54 01             	{pc, r4} = [sp++]			  ## bt_audio.c:118:1


a2dp_suspend:
 1e0be04:    00 70             	r0 = 0			  ## a2dp.c:1706:0
 1e0be06:    20 00             	rts			  ## a2dp.c:1711:1


a2dp_resume:
 1e0be08:    00 70             	r0 = 0			  ## a2dp.c:1713:0
 1e0be0a:    20 00             	rts			  ## a2dp.c:1718:1


a2dp_release:
 1e0be0c:    00 70             	r0 = 0			  ## a2dp.c:1691:0
 1e0be0e:    20 00             	rts			  ## a2dp.c:1704:1


__sink_media_close:
 1e0be10:    74 01             	[--sp] = {rets, r4}			  ## a2dp_sink.c:49:0
 1e0be12:    04 08             	r4 = r0			  ## a2dp_sink.c:49:0
 1e0be14:    d0 49             	r0 = [r4 + 116]			  ## a2dp_sink.c:52:17
 1e0be16:    06 20             	if (r0 == 0) goto 12 <__sink_media_close+0x14 : 1e0be24 >			  ## a2dp_sink.c:52:17
 1e0be18:    51 40             	r1 = [r0 + 20]			  ## a2dp_sink.c:60:40
 1e0be1a:    02 22             	if (r1 == 0) goto 4 <__sink_media_close+0x10 : 1e0be20 >			  ## a2dp_sink.c:60:40
 1e0be1c:    40 08             	r0 = r4			  ## a2dp_sink.c:61:9
 1e0be1e:    81 00             	call r1			  ## a2dp_sink.c:61:9
 1e0be20:    dd f4 00 49       	[r4 + 116] = 0			  ## a2dp_sink.c:63:18
 1e0be24:    54 01             	{pc, r4} = [sp++]			  ## a2dp_sink.c:73:1


__sink_channel_open:
 1e0be26:    75 01             	[--sp] = {rets, r5, r4}			  ## a2dp_sink.c:77:0
 1e0be28:    15 08             	r5 = r1			  ## a2dp_sink.c:77:0
 1e0be2a:    04 08             	r4 = r0			  ## a2dp_sink.c:77:0
 1e0be2c:    08 2a             	if (r5 == 0) goto 16 <__sink_channel_open+0x18 : 1e0be3e >			  ## a2dp_sink.c:77:0
 1e0be2e:    f0 17             	call -32 <__sink_media_close : 1e0be10 >			  ## a2dp_sink.c:80:9
 1e0be30:    25 e0 05 10       	if (r5 != 2) goto 10 <__sink_channel_open+0x18 : 1e0be3e >
 1e0be34:    01 f7 68 40       	r1 = h[r4 + 104] (u)			  ## a2dp_sink.c:84:9
 1e0be38:    40 08             	r0 = r4			  ## a2dp_sink.c:84:9
 1e0be3a:    80 f3 75 95       	call 76522 <lmp_private_set_a2dp_channel : 1e1e928 >			  ## a2dp_sink.c:84:9
 1e0be3e:    00 70             	r0 = 0			  ## a2dp_sink.c:86:5
 1e0be40:    55 01             	{pc, r5, r4} = [sp++]			  ## a2dp_sink.c:86:5


__sink_event_credits:
 1e0be42:    20 00             	rts			  ## a2dp_sink.c:90:0


__sink_media_packet:
 1e0be44:    78 01             	[--sp] = {rets, r8-r4}			  ## a2dp_sink.c:114:0
 1e0be46:    24 08             	r4 = r2			  ## a2dp_sink.c:114:0
 1e0be48:    15 08             	r5 = r1			  ## a2dp_sink.c:114:0
 1e0be4a:    06 08             	r6 = r0			  ## a2dp_sink.c:114:0
 1e0be4c:    c4 e0 32 30       	if (r4 < 12) goto 100 <__sink_media_packet+0x70 : 1e0beb4 >			  ## a2dp_sink.c:114:0
 1e0be50:    01 f7 6a 60       	r1 = h[r6 + 106] (u)			  ## a2dp_sink.c:124:32
 1e0be54:    10 70             	r0 = 1			  ## a2dp_sink.c:124:32
 1e0be56:    01 32             	if (r1 != 0) goto 2 <__sink_media_packet+0x16 : 1e0be5a >			  ## a2dp_sink.c:124:32
 1e0be58:    00 70             	r0 = 0			  ## a2dp_sink.c:124:9
 1e0be5a:    11 6a             	r1 = b[r5 + 1] (u)			  ## a2dp_sink.c:122:43
 1e0be5c:    02 6a             	r2 = b[r5 + 0] (u)			  ## a2dp_sink.c:122:43
 1e0be5e:    d8 fd 40 21       	r2 <= insert(r1, p:8, l:24)			  ## a2dp_sink.c:122:43
 1e0be62:    91 c0             	r1 = r2 << 2			  ## a2dp_sink.c:122:46
 1e0be64:    21 fd 3c 19       	r1 = r1 & 60			  ## a2dp_sink.c:122:46
 1e0be68:    c1 80             	r1 += 12			  ## a2dp_sink.c:122:33
 1e0be6a:    11 b0             	r1 |= 1			  ## a2dp_sink.c:122:50
 1e0be6c:    08 b2             	r8 = r1 + r0			  ## a2dp_sink.c:124:9
 1e0be6e:    84 f2 21 30       	if (r4 < r8) goto 66 <__sink_media_packet+0x70 : 1e0beb4 >
 1e0be72:    d0 4d             	r0 = [r6 + 116]			  ## a2dp_sink.c:133:17
 1e0be74:    08 20             	if (r0 == 0) goto 16 <__sink_media_packet+0x42 : 1e0be86 >			  ## a2dp_sink.c:133:17
 1e0be76:    32 40             	r2 = [r0 + 12]			  ## a2dp_sink.c:160:19
 1e0be78:    80 fb 80 05       	r0 = r5 + r8			  ## a2dp_sink.c:160:32
 1e0be7c:    90 fb 80 14       	r1 = r4 - r8			  ## a2dp_sink.c:160:47
 1e0be80:    61 04             	r1 = r1.l (u)			  ## a2dp_sink.c:160:5
 1e0be82:    18 01             	{rets, r8-r4} = [sp++]			  ## a2dp_sink.c:160:5
 1e0be84:    92 00             	goto r2			  ## a2dp_sink.c:160:5
 1e0be86:    c0 ff 74 7b e0 01 	r0 = 31488884 <a2dp_source_media_codec_end : 1e07b74 >
 1e0be8c:    c7 ff 74 7b e0 01 	r7 = 31488884 <a2dp_source_media_codec_end : 1e07b74 >
 1e0be92:    07 f2 0d 20       	if (r7 >= r0) goto 26 <__sink_media_packet+0x6C : 1e0beb0 >
 1e0be96:    01 f9 7d 60       	r1 = b[r6 + 125] (u)			  ## a2dp_sink.c:136:43
 1e0be9a:    02 4e             	r2 = [r7 + 0]			  ## a2dp_sink.c:36:20
 1e0be9c:    12 f2 04 00       	if (r2 == r1) goto 8 <__sink_media_packet+0x64 : 1e0bea8 >			  ## a2dp_sink.c:36:20
 1e0bea0:    87 81             	r7 += 24			  ## a2dp_sink.c:35:5
 1e0bea2:    07 f2 fa 3f       	if (r7 < r0) goto -12 <__sink_media_packet+0x56 : 1e0be9a >
 1e0bea6:    04 18             	goto 8 <__sink_media_packet+0x6C : 1e0beb0 >
 1e0bea8:    11 4e             	r1 = [r7 + 4]			  ## a2dp_sink.c:37:24
 1e0beaa:    00 70             	r0 = 0			  ## a2dp_sink.c:37:17
 1e0beac:    81 00             	call r1			  ## a2dp_sink.c:37:17
 1e0beae:    03 20             	if (r0 == 0) goto 6 <__sink_media_packet+0x72 : 1e0beb6 >			  ## a2dp_sink.c:37:17
 1e0beb0:    dd f4 00 69       	[r6 + 116] = 0			  ## a2dp_sink.c:136:22
 1e0beb4:    58 01             	{pc, r8-r4} = [sp++]			  ## a2dp_sink.c:162:1
 1e0beb6:    11 4e             	r1 = [r7 + 4]			  ## a2dp_sink.c:40:20
 1e0beb8:    10 70             	r0 = 1			  ## a2dp_sink.c:40:13
 1e0beba:    81 00             	call r1			  ## a2dp_sink.c:40:13
 1e0bebc:    df 4d             	[r6 + 116] = r7			  ## a2dp_sink.c:136:22
 1e0bebe:    21 4e             	r1 = [r7 + 8]			  ## a2dp_sink.c:140:23
 1e0bec0:    60 08             	r0 = r6			  ## a2dp_sink.c:140:9
 1e0bec2:    81 00             	call r1			  ## a2dp_sink.c:140:9
 1e0bec4:    d0 4d             	r0 = [r6 + 116]			  ## a2dp_sink.c:140:9
 1e0bec6:    d7 1f             	goto -82 <__sink_media_packet+0x32 : 1e0be76 >			  ## a2dp_sink.c:140:9


__sink_media_suspend:
 1e0bec8:    a3 1f             	goto -186 <__sink_media_close : 1e0be10 >			  ## a2dp_sink.c:166:0


avctp_suspend:
 1e0beca:    00 70             	r0 = 0			  ## avctp.c:1363:0
 1e0becc:    20 00             	rts			  ## avctp.c:1378:1


avctp_resume:
 1e0bece:    00 70             	r0 = 0			  ## avctp.c:1359:0
 1e0bed0:    20 00             	rts			  ## avctp.c:1360:5


avctp_release:
 1e0bed2:    00 70             	r0 = 0			  ## avctp.c:1341:0
 1e0bed4:    20 00             	rts			  ## avctp.c:1357:1


profile_avctp_at_same_time:
 1e0bed6:    20 00             	rts			  ## avctp.c:1221:0


hfp_suspend:
 1e0bed8:    00 70             	r0 = 0			  ## hfp_profile.c:2033:0
 1e0beda:    20 00             	rts			  ## hfp_profile.c:2039:1


hfp_resume:
 1e0bedc:    00 70             	r0 = 0			  ## hfp_profile.c:2025:0
 1e0bede:    20 00             	rts			  ## hfp_profile.c:2031:1


hfp_release:
 1e0bee0:    00 70             	r0 = 0			  ## hfp_profile.c:2008:0
 1e0bee2:    20 00             	rts			  ## hfp_profile.c:2022:1


hid_suspend:
 1e0bee4:    00 70             	r0 = 0			  ## hid.c:807:0
 1e0bee6:    20 00             	rts			  ## hid.c:813:1


hid_resume:
 1e0bee8:    00 70             	r0 = 0			  ## hid.c:798:0
 1e0beea:    20 00             	rts			  ## hid.c:804:1


hid_release:
 1e0beec:    00 70             	r0 = 0			  ## hid.c:781:0
 1e0beee:    20 00             	rts			  ## hid.c:795:1


spp_suspend:
 1e0bef0:    00 70             	r0 = 0			  ## spp_profile.c:356:0
 1e0bef2:    20 00             	rts			  ## spp_profile.c:357:5


spp_resume:
 1e0bef4:    00 70             	r0 = 0			  ## spp_profile.c:352:0
 1e0bef6:    20 00             	rts			  ## spp_profile.c:353:5


spp_release:
 1e0bef8:    00 70             	r0 = 0			  ## spp_profile.c:337:0
 1e0befa:    20 00             	rts			  ## spp_profile.c:349:1


sdp_suspend:
 1e0befc:    00 70             	r0 = 0			  ## sdp.c:961:0
 1e0befe:    20 00             	rts			  ## sdp.c:962:5


sdp_resume:
 1e0bf00:    00 70             	r0 = 0			  ## sdp.c:957:0
 1e0bf02:    20 00             	rts			  ## sdp.c:958:5


sdp_release:
 1e0bf04:    00 70             	r0 = 0			  ## sdp.c:933:0
 1e0bf06:    20 00             	rts			  ## sdp.c:954:1


iap_suspend:
 1e0bf08:    00 70             	r0 = 0			  ## iap_profile.c:489:0
 1e0bf0a:    20 00             	rts			  ## iap_profile.c:490:5


iap_resume:
 1e0bf0c:    00 70             	r0 = 0			  ## iap_profile.c:485:0
 1e0bf0e:    20 00             	rts			  ## iap_profile.c:486:5


iap_release:
 1e0bf10:    00 70             	r0 = 0			  ## iap_profile.c:469:0
 1e0bf12:    20 00             	rts			  ## iap_profile.c:482:1


hci_packet_handler:
 1e0bf14:    7b 01             	[--sp] = {rets, r11-r4}			  ## btstack_task.c:150:0
 1e0bf16:    fc 0b             	sp += -8			  ## btstack_task.c:150:0
 1e0bf18:    24 08             	r4 = r2			  ## btstack_task.c:150:0
 1e0bf1a:    15 08             	r5 = r1			  ## btstack_task.c:150:0
 1e0bf1c:    06 08             	r6 = r0			  ## btstack_task.c:150:0
 1e0bf1e:    30 98             	r0 = r4 + 3			  ## btstack_task.c:150:0
 1e0bf20:    f2 fd 10 80       	r8 = r0 >> 2			  ## btstack_task.c:150:0
 1e0bf24:    c7 ff 8e 56 e1 01 	r7 = 31544974 <update_target_end+0x2806 : 1e1568e >			  ## btstack_task.c:150:0
 1e0bf2a:    c9 ff 02 00 40 00 	r9 = 4194306 <uECC_vli_cmp_unsafe+0x2F9006 : 400002 >			  ## btstack_task.c:150:0
 1e0bf30:    ca ff af 56 e1 01 	r10 = 31545007 <update_target_end+0x2827 : 1e156af >			  ## btstack_task.c:150:0
 1e0bf36:    9b fc ff ff       	r11 = r9 + -1			  ## btstack_task.c:150:0
 1e0bf3a:    24 18             	goto 72 <hci_packet_handler+0x70 : 1e0bf84 >			  ## btstack_task.c:150:0
 1e0bf3c:    70 08             	r0 = r7			  ## btstack_task.c:156:19
 1e0bf3e:    b1 08             	r1 = r11			  ## btstack_task.c:156:19
 1e0bf40:    82 08             	r2 = r8			  ## btstack_task.c:156:19
 1e0bf42:    53 08             	r3 = r5			  ## btstack_task.c:156:19
 1e0bf44:    06 18             	goto 12 <hci_packet_handler+0x3E : 1e0bf52 >			  ## btstack_task.c:156:19
 1e0bf46:    0d 02             	[sp] = r5			  ## btstack_task.c:160:20
 1e0bf48:    1c 02             	[sp+4] = r4			  ## btstack_task.c:161:20
 1e0bf4a:    03 a0             	r3 = sp + 0			  ## btstack_task.c:161:20
 1e0bf4c:    22 70             	r2 = 2			  ## btstack_task.c:162:19
 1e0bf4e:    70 08             	r0 = r7			  ## btstack_task.c:162:19
 1e0bf50:    91 08             	r1 = r9			  ## btstack_task.c:162:19
 1e0bf52:    97 f3 45 d7       	call 3124874 <os_taskq_post_type : 106de0 >
 1e0bf56:    50 e1 19 10       	if (r0 != 21) goto 50 <hci_packet_handler+0x78 : 1e0bf8c >
 1e0bf5a:    28 fb 00 0b       	r0 = icfg			  ## cpu.h:72:5
 1e0bf5e:    02 04             	r2 = r0.b0 (u)			  ## cpu.h:73:17
 1e0bf60:    a0 08             	r0 = r10			  ## btstack_task.c:171:9
 1e0bf62:    61 08             	r1 = r6			  ## btstack_task.c:171:9
 1e0bf64:    80 f3 b1 18       	call 12642 <printf : 1e0f0ca >			  ## btstack_task.c:171:9
 1e0bf68:    28 fb 00 0b       	r0 = icfg			  ## cpu.h:72:5
 1e0bf6c:    61 ff ff 09 0d 00 	if ((r0 & 255) != 0) goto 26 <hci_packet_handler+0x78 : 1e0bf8c >
 1e0bf72:    8f f3 59 b9       	call 2060978 <os_current_task : 3228 >			  ## btstack_task.c:175:21
 1e0bf76:    71 08             	r1 = r7			  ## btstack_task.c:175:14
 1e0bf78:    97 f3 bc d7       	call 3125112 <strcmp : 106ef4 >			  ## btstack_task.c:175:14
 1e0bf7c:    07 20             	if (r0 == 0) goto 14 <hci_packet_handler+0x78 : 1e0bf8c >			  ## btstack_task.c:175:14
 1e0bf7e:    20 70             	r0 = 2			  ## btstack_task.c:179:9
 1e0bf80:    97 f3 1a d7       	call 3124788 <os_time_dly : 106db8 >			  ## btstack_task.c:179:9
 1e0bf84:    26 e0 df 0f       	if (r6 == 2) goto -66 <hci_packet_handler+0x32 : 1e0bf46 >			  ## btstack_task.c:154:9
 1e0bf88:    46 e0 d8 0f       	if (r6 == 4) goto -80 <hci_packet_handler+0x28 : 1e0bf3c >
 1e0bf8c:    04 0a             	sp += 8
 1e0bf8e:    5b 01             	{pc, r11-r4} = [sp++]


le_device_db_init:
 1e0bf90:    34 00             	[--sp] = rets			  ## le_device_db_memory.c:104:0
 1e0bf92:    80 73             	r0 = 56			  ## le_device_db_memory.c:115:17
 1e0bf94:    80 f3 0f 1d       	call 14878 <malloc : 1e0f9b6 >			  ## le_device_db_memory.c:115:17
 1e0bf98:    02 08             	r2 = r0			  ## le_device_db_memory.c:115:17
 1e0bf9a:    02 34             	if (r2 != 0) goto 4 <le_device_db_init+0x10 : 1e0bfa0 >			  ## le_device_db_memory.c:115:17
 1e0bf9c:    8f f3 20 ba       	call 2061376 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e0bfa0:    c0 ff f8 1c 00 00 	r0 = 7416 <le_global_db_info.0 : 1cf8 >			  ## le_device_db_memory.c:119:35
 1e0bfa6:    0a 40             	[r0 + 0] = r2			  ## le_device_db_memory.c:119:35
 1e0bfa8:    c0 f4 ff 29       	[r2 + 0] = 255			  ## le_device_db_memory.c:169:42
 1e0bfac:    30 00             	pc = [sp++]			  ## le_device_db_memory.c:123:1


le_device_db_count:
 1e0bfae:    c0 ff f8 1c 00 00 	r0 = 7416 <le_global_db_info.0 : 1cf8 >			  ## le_device_db_memory.c:146:0
 1e0bfb4:    00 40             	r0 = [r0 + 0]			  ## le_device_db_memory.c:155:13
 1e0bfb6:    01 40             	r1 = [r0 + 0]			  ## le_device_db_memory.c:155:36
 1e0bfb8:    10 70             	r0 = 1			  ## le_device_db_memory.c:155:13
 1e0bfba:    01 ff ff 10 01 00 	if (r1 != 255) goto 2 <le_device_db_count+0x14 : 1e0bfc2 >			  ## le_device_db_memory.c:155:13
 1e0bfc0:    00 70             	r0 = 0			  ## le_device_db_memory.c:155:13
 1e0bfc2:    20 00             	rts			  ## le_device_db_memory.c:160:1


le_device_db_info:
 1e0bfc4:    76 01             	[--sp] = {rets, r6-r4}			  ## le_device_db_memory.c:208:0
 1e0bfc6:    34 08             	r4 = r3			  ## le_device_db_memory.c:208:0
 1e0bfc8:    23 08             	r3 = r2			  ## le_device_db_memory.c:208:0
 1e0bfca:    05 08             	r5 = r0			  ## le_device_db_memory.c:208:0
 1e0bfcc:    f5 ef 19 d0       	ifs (r5 <= -1) goto 50 <le_device_db_info+0x3E : 1e0c002 >			  ## le_device_db_memory.c:208:0
 1e0bfd0:    c6 ff f8 1c 00 00 	r6 = 7416 <le_global_db_info.0 : 1cf8 >			  ## le_device_db_memory.c:208:0
 1e0bfd6:    04 22             	if (r1 == 0) goto 8 <le_device_db_info+0x1C : 1e0bfe0 >			  ## le_device_db_memory.c:208:0
 1e0bfd8:    a0 f6 00 65       	r0 = [r6+r5<<2]			  ## le_device_db_memory.c:224:22
 1e0bfdc:    00 40             	r0 = [r0 + 0]			  ## le_device_db_memory.c:224:49
 1e0bfde:    08 42             	[r1 + 0] = r0			  ## le_device_db_memory.c:224:20
 1e0bfe0:    07 26             	if (r3 == 0) goto 14 <le_device_db_info+0x2C : 1e0bff0 >
 1e0bfe2:    a0 f6 00 65       	r0 = [r6+r5<<2]			  ## le_device_db_memory.c:227:22
 1e0bfe6:    41 90             	r1 = r0 + 4			  ## le_device_db_memory.c:227:9
 1e0bfe8:    62 70             	r2 = 6			  ## le_device_db_memory.c:227:9
 1e0bfea:    30 08             	r0 = r3			  ## le_device_db_memory.c:227:9
 1e0bfec:    97 f3 7a d7       	call 3124980 <memcpy : 106ee4 >			  ## le_device_db_memory.c:227:9
 1e0bff0:    18 28             	if (r4 == 0) goto 48 <le_device_db_info+0x5E : 1e0c022 >
 1e0bff2:    a0 f6 00 65       	r0 = [r6+r5<<2]			  ## le_device_db_memory.c:230:21
 1e0bff6:    a1 90             	r1 = r0 + 10			  ## le_device_db_memory.c:230:9
 1e0bff8:    02 71             	r2 = 16			  ## le_device_db_memory.c:230:9
 1e0bffa:    40 08             	r0 = r4			  ## le_device_db_memory.c:230:9
 1e0bffc:    97 f3 72 d7       	call 3124964 <memcpy : 106ee4 >			  ## le_device_db_memory.c:230:9
 1e0c000:    56 01             	{pc, r6-r4} = [sp++]			  ## le_device_db_memory.c:232:1
 1e0c002:    02 22             	if (r1 == 0) goto 4 <le_device_db_info+0x44 : 1e0c008 >
 1e0c004:    c0 f4 ff 19       	[r1 + 0] = 255			  ## le_device_db_memory.c:212:24
 1e0c008:    05 26             	if (r3 == 0) goto 10 <le_device_db_info+0x50 : 1e0c014 >
 1e0c00a:    01 70             	r1 = 0			  ## le_device_db_memory.c:215:13
 1e0c00c:    62 70             	r2 = 6			  ## le_device_db_memory.c:215:13
 1e0c00e:    30 08             	r0 = r3			  ## le_device_db_memory.c:215:13
 1e0c010:    97 f3 6e d7       	call 3124956 <memset : 106ef0 >			  ## le_device_db_memory.c:215:13
 1e0c014:    06 28             	if (r4 == 0) goto 12 <le_device_db_info+0x5E : 1e0c022 >
 1e0c016:    01 70             	r1 = 0			  ## le_device_db_memory.c:218:13
 1e0c018:    02 71             	r2 = 16			  ## le_device_db_memory.c:218:13
 1e0c01a:    40 08             	r0 = r4			  ## le_device_db_memory.c:218:13
 1e0c01c:    16 01             	{rets, r6-r4} = [sp++]			  ## le_device_db_memory.c:218:13
 1e0c01e:    d7 f3 67 d7       	goto 3124942 <memset : 106ef0 >			  ## le_device_db_memory.c:218:13
 1e0c022:    56 01             	{pc, r6-r4} = [sp++]			  ## le_device_db_memory.c:232:1


le_device_db_encryption_get:
 1e0c024:    7a 01             	[--sp] = {rets, r10-r4}			  ## le_device_db_memory.c:256:0
 1e0c026:    00 e0 3c b0       	ifs (r0 < 0) goto 120 <le_device_db_encryption_get+0x7E : 1e0c0a2 >			  ## le_device_db_memory.c:256:0
 1e0c02a:    c4 ff f8 1c 00 00 	r4 = 7416 <le_global_db_info.0 : 1cf8 >			  ## le_device_db_memory.c:256:0
 1e0c030:    a0 f6 00 40       	r0 = [r4+r0<<2]			  ## le_device_db_memory.c:261:37
 1e0c034:    a4 91             	r4 = r0 + 26
 1e0c036:    02 22             	if (r1 == 0) goto 4 <le_device_db_encryption_get+0x18 : 1e0c03c >
 1e0c038:    80 58             	r0 = h[r4 + 16] (u)			  ## le_device_db_memory.c:265:25
 1e0c03a:    08 52             	h[r1 + 0] = r0			  ## le_device_db_memory.c:265:15
 1e0c03c:    20 24             	if (r2 == 0) goto 64 <le_device_db_encryption_get+0x5A : 1e0c07e >
 1e0c03e:    40 69             	r0 = b[r4 + 20] (u)			  ## le_device_db_memory.c:268:9
 1e0c040:    81 69             	r1 = b[r4 + 24] (u)			  ## le_device_db_memory.c:268:9
 1e0c042:    25 69             	r5 = b[r4 + 18] (u)			  ## le_device_db_memory.c:268:9
 1e0c044:    08 f9 13 40       	r8 = b[r4 + 19] (u)			  ## le_device_db_memory.c:268:9
 1e0c048:    97 69             	r7 = b[r4 + 25] (u)			  ## le_device_db_memory.c:268:9
 1e0c04a:    09 f9 17 40       	r9 = b[r4 + 23] (u)			  ## le_device_db_memory.c:268:9
 1e0c04e:    66 69             	r6 = b[r4 + 22] (u)			  ## le_device_db_memory.c:268:9
 1e0c050:    0a f9 15 40       	r10 = b[r4 + 21] (u)			  ## le_device_db_memory.c:268:9
 1e0c054:    7f 64             	b[r2 + 7] = r7			  ## le_device_db_memory.c:268:9
 1e0c056:    19 f9 05 20       	b[r2 + 5] = r9			  ## le_device_db_memory.c:268:9
 1e0c05a:    4e 64             	b[r2 + 4] = r6			  ## le_device_db_memory.c:268:9
 1e0c05c:    1a f9 03 20       	b[r2 + 3] = r10			  ## le_device_db_memory.c:268:9
 1e0c060:    18 f9 01 20       	b[r2 + 1] = r8			  ## le_device_db_memory.c:268:9
 1e0c064:    0d 64             	b[r2 + 0] = r5			  ## le_device_db_memory.c:268:9
 1e0c066:    c8 fd 40 17       	r1 <= insert(r7, p:8, l:8)			  ## le_device_db_memory.c:268:9
 1e0c06a:    d0 fd 80 61       	r6 <= insert(r1, p:16, l:16)			  ## le_device_db_memory.c:268:9
 1e0c06e:    31 d4             	r1 = r6 >> 16			  ## le_device_db_memory.c:268:9
 1e0c070:    69 64             	b[r2 + 6] = r1			  ## le_device_db_memory.c:268:9
 1e0c072:    c8 fd 40 0a       	r0 <= insert(r10, p:8, l:8)			  ## le_device_db_memory.c:268:9
 1e0c076:    d0 fd 80 50       	r5 <= insert(r0, p:16, l:16)			  ## le_device_db_memory.c:268:9
 1e0c07a:    28 d4             	r0 = r5 >> 16			  ## le_device_db_memory.c:268:9
 1e0c07c:    28 64             	b[r2 + 2] = r0			  ## le_device_db_memory.c:268:9
 1e0c07e:    85 02             	r5 = [sp+32]
 1e0c080:    05 26             	if (r3 == 0) goto 10 <le_device_db_encryption_get+0x68 : 1e0c08c >
 1e0c082:    02 71             	r2 = 16			  ## le_device_db_memory.c:271:9
 1e0c084:    30 08             	r0 = r3			  ## le_device_db_memory.c:271:9
 1e0c086:    41 08             	r1 = r4			  ## le_device_db_memory.c:271:9
 1e0c088:    97 f3 2c d7       	call 3124824 <memcpy : 106ee4 >			  ## le_device_db_memory.c:271:9
 1e0c08c:    90 02             	r0 = [sp+36]
 1e0c08e:    02 2a             	if (r5 == 0) goto 4 <le_device_db_encryption_get+0x70 : 1e0c094 >
 1e0c090:    a1 69             	r1 = b[r4 + 26] (u)			  ## le_device_db_memory.c:274:21
 1e0c092:    09 4a             	[r5 + 0] = r1			  ## le_device_db_memory.c:274:19
 1e0c094:    a1 02             	r1 = [sp+40]
 1e0c096:    02 20             	if (r0 == 0) goto 4 <le_device_db_encryption_get+0x78 : 1e0c09c >
 1e0c098:    b2 69             	r2 = b[r4 + 27] (u)			  ## le_device_db_memory.c:277:26
 1e0c09a:    0a 40             	[r0 + 0] = r2			  ## le_device_db_memory.c:277:24
 1e0c09c:    02 22             	if (r1 == 0) goto 4 <le_device_db_encryption_get+0x7E : 1e0c0a2 >
 1e0c09e:    c0 69             	r0 = b[r4 + 28] (u)			  ## le_device_db_memory.c:280:23
 1e0c0a0:    08 42             	[r1 + 0] = r0			  ## le_device_db_memory.c:280:21
 1e0c0a2:    5a 01             	{pc, r10-r4} = [sp++]			  ## le_device_db_memory.c:282:1


le_device_db_add:
 1e0c0a4:    75 01             	[--sp] = {rets, r5, r4}			  ## le_device_db_memory.c:173:0
 1e0c0a6:    c3 ff f8 1c 00 00 	r3 = 7416 <le_global_db_info.0 : 1cf8 >			  ## le_device_db_memory.c:182:13
 1e0c0ac:    05 46             	r5 = [r3 + 0]			  ## le_device_db_memory.c:182:13
 1e0c0ae:    03 4a             	r3 = [r5 + 0]			  ## le_device_db_memory.c:182:36
 1e0c0b0:    24 08             	r4 = r2			  ## le_device_db_memory.c:182:36
 1e0c0b2:    02 08             	r2 = r0
 1e0c0b4:    f0 07             	r0 = -1
 1e0c0b6:    01 ff ff 30 0b 00 	if (r3 != 255) goto 22 <le_device_db_add+0x2E : 1e0c0d2 >
 1e0c0bc:    0a 4a             	[r5 + 0] = r2			  ## le_device_db_memory.c:196:42
 1e0c0be:    40 9a             	r0 = r5 + 4			  ## le_device_db_memory.c:197:5
 1e0c0c0:    62 70             	r2 = 6			  ## le_device_db_memory.c:197:5
 1e0c0c2:    97 f3 0f d7       	call 3124766 <memcpy : 106ee4 >			  ## le_device_db_memory.c:197:5
 1e0c0c6:    a0 9a             	r0 = r5 + 10			  ## le_device_db_memory.c:198:5
 1e0c0c8:    02 71             	r2 = 16			  ## le_device_db_memory.c:198:5
 1e0c0ca:    41 08             	r1 = r4			  ## le_device_db_memory.c:198:5
 1e0c0cc:    97 f3 0a d7       	call 3124756 <memcpy : 106ee4 >			  ## le_device_db_memory.c:198:5
 1e0c0d0:    00 70             	r0 = 0			  ## le_device_db_memory.c:198:5
 1e0c0d2:    55 01             	{pc, r5, r4} = [sp++]			  ## le_device_db_memory.c:203:1


le_device_db_encryption_set:
 1e0c0d4:    79 01             	[--sp] = {rets, r9-r4}			  ## le_device_db_memory.c:235:0
 1e0c0d6:    00 e0 32 b0       	ifs (r0 < 0) goto 100 <le_device_db_encryption_set+0x6A : 1e0c13e >			  ## le_device_db_memory.c:235:0
 1e0c0da:    c4 ff f8 1c 00 00 	r4 = 7416 <le_global_db_info.0 : 1cf8 >			  ## le_device_db_memory.c:235:0
 1e0c0e0:    a0 f6 00 40       	r0 = [r4+r0<<2]			  ## le_device_db_memory.c:242:37
 1e0c0e4:    a4 91             	r4 = r0 + 26
 1e0c0e6:    89 58             	h[r4 + 16] = r1			  ## le_device_db_memory.c:243:18
 1e0c0e8:    1e 24             	if (r2 == 0) goto 60 <le_device_db_encryption_set+0x52 : 1e0c126 >			  ## le_device_db_memory.c:243:18
 1e0c0ea:    20 64             	r0 = b[r2 + 2] (u)			  ## le_device_db_memory.c:245:9
 1e0c0ec:    61 64             	r1 = b[r2 + 6] (u)			  ## le_device_db_memory.c:245:9
 1e0c0ee:    05 64             	r5 = b[r2 + 0] (u)			  ## le_device_db_memory.c:245:9
 1e0c0f0:    08 f9 01 20       	r8 = b[r2 + 1] (u)			  ## le_device_db_memory.c:245:9
 1e0c0f4:    77 64             	r7 = b[r2 + 7] (u)			  ## le_device_db_memory.c:245:9
 1e0c0f6:    09 f9 05 20       	r9 = b[r2 + 5] (u)			  ## le_device_db_memory.c:245:9
 1e0c0fa:    46 64             	r6 = b[r2 + 4] (u)			  ## le_device_db_memory.c:245:9
 1e0c0fc:    32 64             	r2 = b[r2 + 3] (u)			  ## le_device_db_memory.c:245:9
 1e0c0fe:    9f 69             	b[r4 + 25] = r7			  ## le_device_db_memory.c:245:9
 1e0c100:    19 f9 17 40       	b[r4 + 23] = r9			  ## le_device_db_memory.c:245:9
 1e0c104:    6e 69             	b[r4 + 22] = r6			  ## le_device_db_memory.c:245:9
 1e0c106:    5a 69             	b[r4 + 21] = r2			  ## le_device_db_memory.c:245:9
 1e0c108:    18 f9 13 40       	b[r4 + 19] = r8			  ## le_device_db_memory.c:245:9
 1e0c10c:    2d 69             	b[r4 + 18] = r5			  ## le_device_db_memory.c:245:9
 1e0c10e:    c8 fd 40 17       	r1 <= insert(r7, p:8, l:8)			  ## le_device_db_memory.c:245:9
 1e0c112:    d0 fd 80 61       	r6 <= insert(r1, p:16, l:16)			  ## le_device_db_memory.c:245:9
 1e0c116:    31 d4             	r1 = r6 >> 16			  ## le_device_db_memory.c:245:9
 1e0c118:    89 69             	b[r4 + 24] = r1			  ## le_device_db_memory.c:245:9
 1e0c11a:    c8 fd 40 02       	r0 <= insert(r2, p:8, l:8)			  ## le_device_db_memory.c:245:9
 1e0c11e:    d0 fd 80 50       	r5 <= insert(r0, p:16, l:16)			  ## le_device_db_memory.c:245:9
 1e0c122:    28 d4             	r0 = r5 >> 16			  ## le_device_db_memory.c:245:9
 1e0c124:    48 69             	b[r4 + 20] = r0			  ## le_device_db_memory.c:245:9
 1e0c126:    95 02             	r5 = [sp+36]
 1e0c128:    86 02             	r6 = [sp+32]
 1e0c12a:    77 02             	r7 = [sp+28]
 1e0c12c:    05 26             	if (r3 == 0) goto 10 <le_device_db_encryption_set+0x64 : 1e0c138 >
 1e0c12e:    02 71             	r2 = 16			  ## le_device_db_memory.c:248:9
 1e0c130:    40 08             	r0 = r4			  ## le_device_db_memory.c:248:9
 1e0c132:    31 08             	r1 = r3			  ## le_device_db_memory.c:248:9
 1e0c134:    97 f3 d6 d6       	call 3124652 <memcpy : 106ee4 >			  ## le_device_db_memory.c:248:9
 1e0c138:    af 69             	b[r4 + 26] = r7			  ## le_device_db_memory.c:250:22
 1e0c13a:    be 69             	b[r4 + 27] = r6			  ## le_device_db_memory.c:251:27
 1e0c13c:    cd 69             	b[r4 + 28] = r5			  ## le_device_db_memory.c:252:24
 1e0c13e:    59 01             	{pc, r9-r4} = [sp++]			  ## le_device_db_memory.c:253:1


le_device_db_exit:
 1e0c140:    74 01             	[--sp] = {rets, r4}			  ## le_device_db_memory.c:126:0
 1e0c142:    c4 ff f8 1c 00 00 	r4 = 7416 <le_global_db_info.0 : 1cf8 >			  ## le_device_db_memory.c:126:0
 1e0c148:    00 48             	r0 = [r4 + 0]			  ## le_device_db_memory.c:132:13
 1e0c14a:    04 20             	if (r0 == 0) goto 8 <le_device_db_exit+0x14 : 1e0c154 >			  ## le_device_db_memory.c:132:13
 1e0c14c:    80 f3 5e 1c       	call 14524 <free : 1e0fa0c >			  ## le_device_db_memory.c:133:13
 1e0c150:    c0 f4 00 49       	[r4 + 0] = 0			  ## le_device_db_memory.c:134:35
 1e0c154:    54 01             	{pc, r4} = [sp++]			  ## le_device_db_memory.c:137:1


le_device_db_remove:
 1e0c156:    00 e0 07 b0       	ifs (r0 < 0) goto 14 <le_device_db_remove+0x12 : 1e0c168 >			  ## le_device_db_memory.c:164:0
 1e0c15a:    c1 ff f8 1c 00 00 	r1 = 7416 <le_global_db_info.0 : 1cf8 >			  ## le_device_db_memory.c:164:0
 1e0c160:    a0 f6 00 10       	r0 = [r1+r0<<2]			  ## le_device_db_memory.c:169:5
 1e0c164:    c0 f4 ff 09       	[r0 + 0] = 255			  ## le_device_db_memory.c:169:42
 1e0c168:    20 00             	rts			  ## le_device_db_memory.c:170:1
 1e0c16a:    00 00             	nop


stk_generation_method:
 1e0c16c:    00 00             	nop
 1e0c16e:    00 00             	nop
 1e0c170:    00 00             	nop
 1e0c172:    00 00             	nop
 1e0c174:    02 00             	idle
 1e0c176:    00 00             	nop
 1e0c178:    00 00             	nop
 1e0c17a:    00 00             	nop
 1e0c17c:    02 00             	idle
 1e0c17e:    00 00             	nop
 1e0c180:    00 00             	nop
 1e0c182:    00 00             	nop
 1e0c184:    00 00             	nop
 1e0c186:    00 00             	nop
 1e0c188:    02 00             	idle
 1e0c18a:    00 00             	nop
 1e0c18c:    00 00             	nop
 1e0c18e:    00 00             	nop
 1e0c190:    02 00             	idle
 1e0c192:    00 00             	nop
 1e0c194:    01 00             	nop
 1e0c196:    00 00             	nop
 1e0c198:    01 00             	nop
 1e0c19a:    00 00             	nop
 1e0c19c:    03 00             	idle
 1e0c19e:    00 00             	nop
 1e0c1a0:    00 00             	nop
 1e0c1a2:    00 00             	nop
 1e0c1a4:    01 00             	nop
 1e0c1a6:    00 00             	nop
 1e0c1a8:    00 00             	nop
 1e0c1aa:    00 00             	nop
 1e0c1ac:    00 00             	nop
 1e0c1ae:    00 00             	nop
 1e0c1b0:    00 00             	nop
 1e0c1b2:    00 00             	nop
 1e0c1b4:    00 00             	nop
 1e0c1b6:    00 00             	nop
 1e0c1b8:    00 00             	nop
 1e0c1ba:    00 00             	nop
 1e0c1bc:    01 00             	nop
 1e0c1be:    00 00             	nop
 1e0c1c0:    01 00             	nop
 1e0c1c2:    00 00             	nop
 1e0c1c4:    02 00             	idle
 1e0c1c6:    00 00             	nop
 1e0c1c8:    00 00             	nop
 1e0c1ca:    00 00             	nop
 1e0c1cc:    01 00             	nop
 1e0c1ce:    00 00             	nop


sm_pdu_size:
 1e0c1d0:    00 07             	r0 = -16
 1e0c1d2:    07 11             	call 526 <sm_set_master_request_pair+0x8 : 1e0c3e2 >
 1e0c1d4:    11 02             	r1 = [sp+4]
 1e0c1d6:    11 0b             	sp += -480
 1e0c1d8:    11 08             	r1 = r1
 1e0c1da:    11 02             	r1 = [sp+4]
 1e0c1dc:    41 11             	call 642 <sm_d1_d_prime+0xA : 1e0c460 >
 1e0c1de:    02 00             	idle


sm_just_works_confirm:
 1e0c1e0:    74 01             	[--sp] = {rets, r4}			  ## sm.c:5282:0
 1e0c1e2:    bf f3 91 dd       	call -17630 <le_hci_connection_for_handle : 1e07d08 >			  ## sm.c:5074:36
 1e0c1e6:    04 08             	r4 = r0			  ## sm.c:5074:36
 1e0c1e8:    18 28             	if (r4 == 0) goto 48 <sm_just_works_confirm+0x3A : 1e0c21a >
 1e0c1ea:    97 f3 d7 d5       	call 3124142 <local_irq_disable : 106d9c >			  ## sm.c:5288:5
 1e0c1ee:    c0 ff c4 09 00 00 	r0 = 2500 <sm_global_info : 9c4 >			  ## sm.c:5289:5
 1e0c1f4:    00 40             	r0 = [r0 + 0]			  ## sm.c:5289:5
 1e0c1f6:    21 70             	r1 = 2			  ## sm.c:5289:29
 1e0c1f8:    59 61             	b[r0 + 21] = r1			  ## sm.c:5289:29
 1e0c1fa:    21 49             	r1 = [r4 + 72]			  ## sm.c:5290:18
 1e0c1fc:    31 e0 06 10       	if (r1 != 3) goto 12 <sm_just_works_confirm+0x2C : 1e0c20c >			  ## sm.c:5290:18
 1e0c200:    01 f9 30 00       	r1 = b[r0 + 48] (u)			  ## sm.c:5291:20
 1e0c204:    f0 73             	r0 = 63			  ## sm.c:5291:13
 1e0c206:    01 32             	if (r1 != 0) goto 2 <sm_just_works_confirm+0x2A : 1e0c20a >			  ## sm.c:5291:13
 1e0c208:    60 70             	r0 = 6			  ## sm.c:5291:13
 1e0c20a:    28 49             	[r4 + 72] = r0
 1e0c20c:    97 f3 c4 d5       	call 3124104 <local_irq_enable : 106d98 >			  ## sm.c:5303:5
 1e0c210:    20 70             	r0 = 2			  ## sm.c:5471:5
 1e0c212:    11 70             	r1 = 1			  ## sm.c:5471:5
 1e0c214:    22 70             	r2 = 2			  ## sm.c:5471:5
 1e0c216:    bf f3 30 df       	call -16800 <ble_user_cmd_prepare : 1e0807a >			  ## sm.c:5471:5
 1e0c21a:    54 01             	{pc, r4} = [sp++]			  ## sm.c:5306:1


sm_passkey_input:
 1e0c21c:    77 01             	[--sp] = {rets, r7-r4}			  ## sm.c:5317:0
 1e0c21e:    15 08             	r5 = r1			  ## sm.c:5317:0
 1e0c220:    bf f3 72 dd       	call -17692 <le_hci_connection_for_handle : 1e07d08 >			  ## sm.c:5074:36
 1e0c224:    04 08             	r4 = r0			  ## sm.c:5074:36
 1e0c226:    1f 28             	if (r4 == 0) goto 62 <sm_passkey_input+0x4A : 1e0c266 >
 1e0c228:    97 f3 b8 d5       	call 3124080 <local_irq_disable : 106d9c >			  ## sm.c:5323:5
 1e0c22c:    c0 ff c4 09 00 00 	r0 = 2500 <sm_global_info : 9c4 >
 1e0c232:    07 40             	r7 = [r0 + 0]
 1e0c234:    76 fc 20 00       	r6 = r7 + 32			  ## sm.c:618:5
 1e0c238:    01 70             	r1 = 0			  ## sm.c:619:25
 1e0c23a:    02 71             	r2 = 16			  ## sm.c:619:25
 1e0c23c:    60 08             	r0 = r6			  ## sm.c:619:25
 1e0c23e:    97 f3 57 d6       	call 3124398 <memset : 106ef0 >			  ## sm.c:619:25
 1e0c242:    60 08             	r0 = r6			  ## sm.c:5325:5
 1e0c244:    51 08             	r1 = r5			  ## sm.c:5325:5
 1e0c246:    bf f3 22 e0       	call -16316 <big_endian_store_32 : 1e0828e >			  ## sm.c:5325:5
 1e0c24a:    30 70             	r0 = 3			  ## sm.c:5325:5
 1e0c24c:    58 6f             	b[r7 + 21] = r0			  ## sm.c:5326:29
 1e0c24e:    20 49             	r0 = [r4 + 72]			  ## sm.c:5327:18
 1e0c250:    30 e0 02 10       	if (r0 != 3) goto 4 <sm_passkey_input+0x3C : 1e0c258 >			  ## sm.c:5327:18
 1e0c254:    d2 f4 06 49       	[r4 + 72] = 6			  ## sm.c:5328:34
 1e0c258:    97 f3 9e d5       	call 3124028 <local_irq_enable : 106d98 >			  ## sm.c:5337:5
 1e0c25c:    20 70             	r0 = 2			  ## sm.c:5471:5
 1e0c25e:    11 70             	r1 = 1			  ## sm.c:5471:5
 1e0c260:    22 70             	r2 = 2			  ## sm.c:5471:5
 1e0c262:    bf f3 0a df       	call -16876 <ble_user_cmd_prepare : 1e0807a >			  ## sm.c:5471:5
 1e0c266:    57 01             	{pc, r7-r4} = [sp++]			  ## sm.c:5340:1


sm_allow_ltk_reconstruction_without_le_device_db_entry:
 1e0c268:    c1 ff c4 09 00 00 	r1 = 2500 <sm_global_info : 9c4 >			  ## sm.c:5068:0
 1e0c26e:    01 42             	r1 = [r1 + 0]			  ## sm.c:5069:5
 1e0c270:    10 f9 40 11       	b[r1 + 320] = r0			  ## sm.c:5069:59
 1e0c274:    20 00             	rts			  ## sm.c:5070:1


sm_set_io_capabilities:
 1e0c276:    c1 ff c4 09 00 00 	r1 = 2500 <sm_global_info : 9c4 >			  ## sm.c:4816:0
 1e0c27c:    01 42             	r1 = [r1 + 0]			  ## sm.c:4818:5
 1e0c27e:    02 f7 3a 11       	r2 = h[r1 + 314] (u)			  ## sm.c:4818:32
 1e0c282:    23 fd 0f 09       	r3 = r0 & 15			  ## sm.c:4818:32
 1e0c286:    22 fd ff 2a       	r2 = r2 & 65280			  ## sm.c:4818:32
 1e0c28a:    52 b6             	r2 |= r3			  ## sm.c:4818:32
 1e0c28c:    00 c1             	r0 = r0 << 4			  ## sm.c:4812:39
 1e0c28e:    00 04             	r0 = r0.b0 (u)			  ## sm.c:4812:39
 1e0c290:    50 b4             	r0 |= r2			  ## sm.c:4812:39
 1e0c292:    10 f7 3a 11       	h[r1 + 314] = r0			  ## sm.c:4812:39
 1e0c296:    20 00             	rts			  ## sm.c:4820:1


sm_init:
 1e0c298:    79 01             	[--sp] = {rets, r9-r4}			  ## sm.c:4893:0
 1e0c29a:    ee 0b             	sp += -36			  ## sm.c:4893:0
 1e0c29c:    c9 ff c4 09 00 00 	r9 = 2500 <sm_global_info : 9c4 >			  ## sm.c:4893:0
 1e0c2a2:    00 f6 00 90       	r0 = [r9 + 0]			  ## sm.c:4893:0
 1e0c2a6:    02 20             	if (r0 == 0) goto 4 <sm_init+0x14 : 1e0c2ac >			  ## sm.c:4893:0
 1e0c2a8:    8f f3 9a b8       	call 2060596 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e0c2ac:    00 fb e0 01       	r0 = 480 <BTCTLER_CL_BSS_SIZE+0x1C : 1e0 >			  ## sm.c:4902:24
 1e0c2b0:    80 f3 81 1b       	call 14082 <malloc : 1e0f9b6 >			  ## sm.c:4902:24
 1e0c2b4:    03 30             	if (r0 != 0) goto 6 <sm_init+0x24 : 1e0c2bc >			  ## sm.c:4902:24
 1e0c2b6:    8f f3 93 b8       	call 2060582 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e0c2ba:    00 70             	r0 = 0			  ## cpu.h:148:5
 1e0c2bc:    10 f6 00 90       	[r9 + 0] = r0			  ## sm.c:4904:12
 1e0c2c0:    bf f3 63 e2       	call -15162 <ble_list_init : 1e0878a >			  ## sm.c:4906:5
 1e0c2c4:    04 f6 00 90       	r4 = [r9 + 0]			  ## sm.c:4907:12
 1e0c2c8:    01 70             	r1 = 0			  ## sm.c:4907:5
 1e0c2ca:    02 fb e0 01       	r2 = 480 <BTCTLER_CL_BSS_SIZE+0x1C : 1e0 >			  ## sm.c:4907:5
 1e0c2ce:    07 70             	r7 = 0			  ## sm.c:4907:5
 1e0c2d0:    40 08             	r0 = r4			  ## sm.c:4907:5
 1e0c2d2:    97 f3 0d d6       	call 3124250 <memset : 106ef0 >			  ## sm.c:4907:5
 1e0c2d6:    c8 ff ff ff 00 00 	r8 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## sm.c:4908:41
 1e0c2dc:    18 f7 90 41       	h[r4 + 400] = r8			  ## sm.c:4908:41
 1e0c2e0:    30 70             	r0 = 3			  ## sm.c:4909:5
 1e0c2e2:    c9 17             	call -110 <sm_set_io_capabilities : 1e0c276 >			  ## sm.c:4909:5
 1e0c2e4:    01 a0             	r1 = sp + 0			  ## sm.c:4909:5
 1e0c2e6:    d0 76             	r0 = 109			  ## sm.c:4913:15
 1e0c2e8:    22 72             	r2 = 34			  ## sm.c:4913:15
 1e0c2ea:    80 f3 41 29       	call 21122 <syscfg_read : 1e11570 >			  ## sm.c:4913:15
 1e0c2ee:    20 e2 06 10       	if (r0 != 34) goto 12 <sm_init+0x66 : 1e0c2fe >
 1e0c2f2:    80 f5 00 00       	r0 = h[sp] (u)			  ## sm.c:4915:27
 1e0c2f6:    01 fb a1 55       	r1 = 21921 <report_overlay_end+0x259 : 55a1 >
 1e0c2fa:    10 f2 15 00       	if (r0 == r1) goto 42 <sm_init+0x90 : 1e0c328 >
 1e0c2fe:    00 fb a1 55       	r0 = 21921 <report_overlay_end+0x259 : 55a1 >			  ## sm.c:4919:24
 1e0c302:    90 f5 00 00       	h[sp] = r0			  ## sm.c:4919:24
 1e0c306:    c0 ff 00 3b 1e 00 	r0 = 1981184 <uECC_vli_cmp_unsafe+0xDCB04 : 1e3b00 >
 1e0c30c:    01 40             	r1 = [r0 + 0]			  ## cpu.h:133:21
 1e0c30e:    02 a0             	r2 = sp + 0			  ## cpu.h:133:21
 1e0c310:    72 09             	r2 += r7			  ## sm.c:4923:30
 1e0c312:    29 64             	b[r2 + 2] = r1			  ## sm.c:4923:30
 1e0c314:    09 d2             	r1 = r1 >> 8			  ## sm.c:4924:40
 1e0c316:    17 80             	r7 += 1			  ## sm.c:4921:30
 1e0c318:    29 65             	b[r2 + 18] = r1			  ## sm.c:4924:30
 1e0c31a:    07 e1 f7 1f       	if (r7 != 16) goto -18 <sm_init+0x74 : 1e0c30c >			  ## sm.c:4921:9
 1e0c31e:    01 a0             	r1 = sp + 0
 1e0c320:    d0 76             	r0 = 109			  ## sm.c:4926:15
 1e0c322:    22 72             	r2 = 34			  ## sm.c:4926:15
 1e0c324:    80 f3 90 29       	call 21280 <syscfg_write : 1e11648 >			  ## sm.c:4926:15
 1e0c328:    07 f6 00 90       	r7 = [r9 + 0]			  ## sm.c:4844:12
 1e0c32c:    06 a0             	r6 = sp + 0			  ## sm.c:4844:12
 1e0c32e:    01 fd 02 69       	r1 = r6 | 2			  ## sm.c:4940:15
 1e0c332:    74 fc 34 01       	r4 = r7 + 308
 1e0c336:    40 fc 6c 00       	r0 = r4 + 108			  ## sm.c:4844:5
 1e0c33a:    02 71             	r2 = 16			  ## sm.c:4844:5
 1e0c33c:    05 71             	r5 = 16			  ## sm.c:4844:5
 1e0c33e:    97 f3 d1 d5       	call 3124130 <memcpy : 106ee4 >			  ## sm.c:4844:5
 1e0c342:    21 9d             	r1 = r6 + 18			  ## sm.c:4941:15
 1e0c344:    40 fc 7c 00       	r0 = r4 + 124			  ## sm.c:4850:5
 1e0c348:    02 71             	r2 = 16			  ## sm.c:4850:5
 1e0c34a:    97 f3 cb d5       	call 3124118 <memcpy : 106ee4 >			  ## sm.c:4850:5
 1e0c34e:    f0 70             	r0 = 15			  ## sm.c:4943:48
 1e0c350:    18 68             	b[r4 + 1] = r0			  ## sm.c:4943:48
 1e0c352:    2d 68             	b[r4 + 2] = r5			  ## sm.c:4948:40
 1e0c354:    70 70             	r0 = 7			  ## sm.c:4949:40
 1e0c356:    38 68             	b[r4 + 3] = r0			  ## sm.c:4949:40
 1e0c358:    f0 07             	r0 = -1			  ## sm.c:4949:40
 1e0c35a:    28 48             	[r4 + 8] = r0			  ## sm.c:4951:61
 1e0c35c:    01 70             	r1 = 0			  ## sm.c:4951:61
 1e0c35e:    c9 68             	b[r4 + 12] = r1			  ## sm.c:4952:59
 1e0c360:    49 48             	[r4 + 16] = r1			  ## sm.c:4957:23
 1e0c362:    59 48             	[r4 + 20] = r1			  ## sm.c:4958:23
 1e0c364:    f9 48             	[r4 + 60] = r1			  ## sm.c:4959:29
 1e0c366:    88 48             	[r4 + 32] = r0			  ## sm.c:4960:40
 1e0c368:    99 48             	[r4 + 36] = r1			  ## sm.c:4961:57
 1e0c36a:    d9 48             	[r4 + 52] = r1			  ## sm.c:4962:40
 1e0c36c:    e9 48             	[r4 + 56] = r1			  ## sm.c:4963:49
 1e0c36e:    18 f7 90 71       	h[r7 + 400] = r8			  ## sm.c:4966:41
 1e0c372:    09 68             	b[r4 + 0] = r1			  ## sm.c:4968:39
 1e0c374:    c0 ff c2 d8 e0 01 	r0 = 31512770 <sm_event_packet_handler : 1e0d8c2 >			  ## sm.c:4971:54
 1e0c37a:    38 49             	[r4 + 76] = r0			  ## sm.c:4971:54
 1e0c37c:    40 fc 48 00       	r0 = r4 + 72			  ## sm.c:4971:45
 1e0c380:    bf f3 f4 e1       	call -15384 <hci_add_event_handler : 1e0876c >			  ## sm.c:4972:5
 1e0c384:    c0 ff 82 df e0 01 	r0 = 31514498 <sm_pdu_handler : 1e0df82 >			  ## sm.c:4975:5
 1e0c38a:    61 70             	r1 = 6			  ## sm.c:4975:5
 1e0c38c:    bf f3 ed e2       	call -14886 <l2cap_register_fixed_channel : 1e0896a >			  ## sm.c:4975:5
 1e0c390:    00 f6 00 90       	r0 = [r9 + 0]			  ## sm.c:4887:5
 1e0c394:    41 76             	r1 = 100			  ## sm.c:4887:33
 1e0c396:    11 f7 9c 01       	h[r0 + 412] = r1			  ## sm.c:4887:33
 1e0c39a:    00 fc 40 01       	r0 = r0 + 320			  ## sm.c:4887:33
 1e0c39e:    13 60             	r3 = b[r0 + 1] (u)			  ## sm.c:3730:33
 1e0c3a0:    11 70             	r1 = 1			  ## sm.c:3730:25
 1e0c3a2:    32 70             	r2 = 3			  ## sm.c:3730:25
 1e0c3a4:    61 ff 0f 39 01 00 	if ((r3 & 15) != 0) goto 2 <sm_init+0x114 : 1e0c3ac >			  ## sm.c:3730:25
 1e0c3aa:    12 70             	r2 = 1			  ## sm.c:3730:25
 1e0c3ac:    1a 40             	[r0 + 4] = r2			  ## sm.c:3730:23
 1e0c3ae:    29 40             	[r0 + 8] = r1			  ## sm.c:3730:23
 1e0c3b0:    12 0a             	sp += 36			  ## sm.c:3730:23
 1e0c3b2:    59 01             	{pc, r9-r4} = [sp++]			  ## sm.c:4989:1


sm_set_authentication_requirements:
 1e0c3b4:    c1 ff c4 09 00 00 	r1 = 2500 <sm_global_info : 9c4 >			  ## sm.c:4797:0
 1e0c3ba:    01 42             	r1 = [r1 + 0]			  ## sm.c:4805:5
 1e0c3bc:    f0 b1             	r0 &= 4294967287			  ## sm.c:4802:18
 1e0c3be:    10 f9 38 11       	b[r1 + 312] = r0			  ## sm.c:4805:25
 1e0c3c2:    10 f9 39 11       	b[r1 + 313] = r0			  ## sm.c:4793:32
 1e0c3c6:    20 00             	rts			  ## sm.c:4807:1


sm_set_encryption_key_size_range:
 1e0c3c8:    c2 ff c4 09 00 00 	r2 = 2500 <sm_global_info : 9c4 >			  ## sm.c:4784:0
 1e0c3ce:    02 44             	r2 = [r2 + 0]			  ## sm.c:4786:5
 1e0c3d0:    10 f9 37 21       	b[r2 + 311] = r0			  ## sm.c:4786:40
 1e0c3d4:    11 f9 36 21       	b[r2 + 310] = r1			  ## sm.c:4787:40
 1e0c3d8:    20 00             	rts			  ## sm.c:4788:1


sm_set_master_request_pair:
 1e0c3da:    c1 ff c4 09 00 00 	r1 = 2500 <sm_global_info : 9c4 >			  ## sm.c:4829:0
 1e0c3e0:    01 42             	r1 = [r1 + 0]			  ## sm.c:4831:5
 1e0c3e2:    02 f7 3a 11       	r2 = h[r1 + 314] (u)			  ## sm.c:4831:33
 1e0c3e6:    00 c3             	r0 = r0 << 12			  ## sm.c:4831:33
 1e0c3e8:    20 fd 30 0a       	r0 = r0 & 12288			  ## sm.c:4831:33
 1e0c3ec:    32 fd 30 2a       	r2 = r2 & 4294955007			  ## sm.c:4831:33
 1e0c3f0:    50 b4             	r0 |= r2			  ## sm.c:4831:33
 1e0c3f2:    10 f7 3a 11       	h[r1 + 314] = r0			  ## sm.c:4831:33
 1e0c3f6:    20 00             	rts			  ## sm.c:4832:1


sm_set_request_security:
 1e0c3f8:    c1 ff c4 09 00 00 	r1 = 2500 <sm_global_info : 9c4 >			  ## sm.c:4823:0
 1e0c3fe:    01 42             	r1 = [r1 + 0]			  ## sm.c:4825:5
 1e0c400:    02 f7 3a 11       	r2 = h[r1 + 314] (u)			  ## sm.c:4825:33
 1e0c404:    00 c2             	r0 = r0 << 8			  ## sm.c:4825:33
 1e0c406:    20 fd 0f 0a       	r0 = r0 & 3840			  ## sm.c:4825:33
 1e0c40a:    32 fd 0f 2a       	r2 = r2 & 4294963455			  ## sm.c:4825:33
 1e0c40e:    50 b4             	r0 |= r2			  ## sm.c:4825:33
 1e0c410:    10 f7 3a 11       	h[r1 + 314] = r0			  ## sm.c:4825:33
 1e0c414:    20 00             	rts			  ## sm.c:4826:1


sm_add_event_handler:
 1e0c416:    c1 ff c4 09 00 00 	r1 = 2500 <sm_global_info : 9c4 >			  ## sm.c:4772:0
 1e0c41c:    02 42             	r2 = [r1 + 0]			  ## sm.c:4774:5
 1e0c41e:    01 08             	r1 = r0			  ## sm.c:4774:5
 1e0c420:    20 fc 8c 01       	r0 = r2 + 396			  ## sm.c:4774:5
 1e0c424:    ff f3 98 e1       	goto -15568 <btstack_linked_list_add_tail : 1e08758 >			  ## sm.c:4774:5


sm_event_callback_set:
 1e0c428:    c0 ff c4 09 00 00 	r0 = 2500 <sm_global_info : 9c4 >			  ## sm.c:4757:0
 1e0c42e:    00 40             	r0 = [r0 + 0]			  ## sm.c:4760:5
 1e0c430:    c1 ff 44 0a e0 01 	r1 = 31459908 <__ble_comm_cbk_sm_packet_handler : 1e00a44 >			  ## sm.c:4760:53
 1e0c436:    11 f6 88 01       	[r0 + 392] = r1			  ## sm.c:4760:53
 1e0c43a:    00 fc 84 01       	r0 = r0 + 388			  ## sm.c:4760:44
 1e0c43e:    eb 1f             	goto -42 <sm_add_event_handler : 1e0c416 >			  ## sm.c:4761:5


reset_PK_cb_register_ext:
 1e0c440:    c0 ff c4 09 00 00 	r0 = 2500 <sm_global_info : 9c4 >			  ## sm.c:5461:0
 1e0c446:    00 40             	r0 = [r0 + 0]			  ## sm.c:5462:9
 1e0c448:    05 20             	if (r0 == 0) goto 10 <reset_PK_cb_register_ext+0x14 : 1e0c454 >			  ## sm.c:5462:9
 1e0c44a:    c1 ff 62 0b e0 01 	r1 = 31460194 <__ble_comm_cbk_passkey_input : 1e00b62 >			  ## sm.c:5463:35
 1e0c450:    11 f6 98 01       	[r0 + 408] = r1			  ## sm.c:5463:35
 1e0c454:    20 00             	rts			  ## sm.c:5465:1


sm_d1_d_prime:
 1e0c456:    76 01             	[--sp] = {rets, r6-r4}			  ## sm.c:783:0
 1e0c458:    24 08             	r4 = r2			  ## sm.c:783:0
 1e0c45a:    15 08             	r5 = r1			  ## sm.c:783:0
 1e0c45c:    06 08             	r6 = r0			  ## sm.c:783:0
 1e0c45e:    01 70             	r1 = 0			  ## sm.c:785:5
 1e0c460:    02 71             	r2 = 16			  ## sm.c:785:5
 1e0c462:    40 08             	r0 = r4			  ## sm.c:785:5
 1e0c464:    97 f3 44 d5       	call 3123848 <memset : 106ef0 >			  ## sm.c:785:5
 1e0c468:    c1 70             	r1 = 12			  ## sm.c:786:5
 1e0c46a:    40 08             	r0 = r4			  ## sm.c:786:5
 1e0c46c:    52 08             	r2 = r5			  ## sm.c:786:5
 1e0c46e:    bf f3 91 f7       	call -4318 <big_endian_store_16 : 1e0b394 >			  ## sm.c:786:5
 1e0c472:    e1 70             	r1 = 14			  ## sm.c:787:5
 1e0c474:    62 08             	r2 = r6			  ## sm.c:787:5
 1e0c476:    16 01             	{rets, r6-r4} = [sp++]			  ## sm.c:787:5
 1e0c478:    ff f3 8c f7       	goto -4328 <big_endian_store_16 : 1e0b394 >			  ## sm.c:787:5


sm_aes128_start:
 1e0c47c:    75 01             	[--sp] = {rets, r5, r4}			  ## sm.c:739:0
 1e0c47e:    f0 0b             	sp += -32			  ## sm.c:739:0
 1e0c480:    c3 ff c4 09 00 00 	r3 = 2500 <sm_global_info : 9c4 >			  ## sm.c:740:5
 1e0c486:    03 46             	r3 = [r3 + 0]			  ## sm.c:740:5
 1e0c488:    14 08             	r4 = r1			  ## sm.c:740:5
 1e0c48a:    11 70             	r1 = 1			  ## sm.c:740:29
 1e0c48c:    11 f6 70 31       	[r3 + 368] = r1			  ## sm.c:740:29
 1e0c490:    12 f6 74 31       	[r3 + 372] = r2			  ## sm.c:741:31
 1e0c494:    05 a1             	r5 = sp + 16			  ## sm.c:741:31
 1e0c496:    51 08             	r1 = r5			  ## sm.c:762:5
 1e0c498:    bf f3 84 f7       	call -4344 <reverse_128 : 1e0b3a4 >			  ## sm.c:762:5
 1e0c49c:    01 a0             	r1 = sp + 0
 1e0c49e:    40 08             	r0 = r4			  ## sm.c:763:5
 1e0c4a0:    bf f3 80 f7       	call -4352 <reverse_128 : 1e0b3a4 >			  ## sm.c:763:5
 1e0c4a4:    50 08             	r0 = r5			  ## sm.c:765:5
 1e0c4a6:    80 f3 1e 8f       	call 73276 <ll_hci_encryption : 1e1e2e6 >			  ## sm.c:765:5
 1e0c4aa:    10 0a             	sp += 32
 1e0c4ac:    55 01             	{pc, r5, r4} = [sp++]			  ## sm.c:767:1


sm_dispatch_event:
 1e0c4ae:    77 01             	[--sp] = {rets, r7-r4}			  ## sm.c:959:0
 1e0c4b0:    fa 0b             	sp += -12			  ## sm.c:959:0
 1e0c4b2:    c2 ff c4 09 00 00 	r2 = 2500 <sm_global_info : 9c4 >			  ## sm.c:966:5
 1e0c4b8:    02 44             	r2 = [r2 + 0]			  ## sm.c:966:5
 1e0c4ba:    14 08             	r4 = r1			  ## sm.c:966:5
 1e0c4bc:    05 08             	r5 = r0			  ## sm.c:966:5
 1e0c4be:    21 fc 8c 01       	r1 = r2 + 396			  ## sm.c:966:5
 1e0c4c2:    00 a0             	r0 = sp + 0			  ## sm.c:966:5
 1e0c4c4:    bf f3 8e e8       	call -12004 <btstack_linked_list_iterator_init : 1e095e4 >			  ## sm.c:966:5
 1e0c4c8:    0b 18             	goto 22 <sm_dispatch_event+0x32 : 1e0c4e0 >
 1e0c4ca:    06 a0             	r6 = sp + 0
 1e0c4cc:    60 08             	r0 = r6			  ## sm.c:968:100
 1e0c4ce:    bf f3 0b dc       	call -18410 <btstack_linked_list_iterator_next : 1e07ce8 >			  ## sm.c:968:100
 1e0c4d2:    17 40             	r7 = [r0 + 4]			  ## sm.c:969:16
 1e0c4d4:    40 70             	r0 = 4			  ## sm.c:969:9
 1e0c4d6:    01 70             	r1 = 0			  ## sm.c:969:9
 1e0c4d8:    52 08             	r2 = r5			  ## sm.c:969:9
 1e0c4da:    43 08             	r3 = r4			  ## sm.c:969:9
 1e0c4dc:    87 00             	call r7			  ## sm.c:969:9
 1e0c4de:    60 08             	r0 = r6			  ## sm.c:967:12
 1e0c4e0:    bf f3 f4 db       	call -18456 <btstack_linked_list_iterator_has_next : 1e07ccc >
 1e0c4e4:    f2 31             	if (r0 != 0) goto -28 <sm_dispatch_event+0x1C : 1e0c4ca >
 1e0c4e6:    06 0a             	sp += 12
 1e0c4e8:    57 01             	{pc, r7-r4} = [sp++]			  ## sm.c:971:1


sm_notify_client_base:
 1e0c4ea:    75 01             	[--sp] = {rets, r5, r4}			  ## sm.c:974:0
 1e0c4ec:    f8 0b             	sp += -16			  ## sm.c:974:0
 1e0c4ee:    24 08             	r4 = r2			  ## sm.c:974:0
 1e0c4f0:    12 08             	r2 = r1			  ## sm.c:974:0
 1e0c4f2:    d0 f5 00 00       	b[sp] = r0			  ## sm.c:951:14
 1e0c4f6:    e0 70             	r0 = 14			  ## sm.c:952:14
 1e0c4f8:    d0 f5 01 00       	b[sp+1] = r0			  ## sm.c:952:14
 1e0c4fc:    05 a0             	r5 = sp + 0			  ## sm.c:952:14
 1e0c4fe:    21 70             	r1 = 2			  ## sm.c:953:5
 1e0c500:    50 08             	r0 = r5			  ## sm.c:953:5
 1e0c502:    bf f3 cc de       	call -17000 <little_endian_store_16 : 1e0829e >			  ## sm.c:953:5
 1e0c506:    d4 f5 04 00       	b[sp+4] = r4			  ## sm.c:954:14
 1e0c50a:    51 9a             	r1 = r5 + 5			  ## sm.c:955:31
 1e0c50c:    30 08             	r0 = r3			  ## sm.c:955:5
 1e0c50e:    bf f3 52 f7       	call -4444 <reverse_bd_addr : 1e0b3b6 >			  ## sm.c:955:5
 1e0c512:    01 71             	r1 = 16			  ## sm.c:978:5
 1e0c514:    50 08             	r0 = r5			  ## sm.c:978:5
 1e0c516:    cb 17             	call -106 <sm_dispatch_event : 1e0c4ae >			  ## sm.c:978:5
 1e0c518:    08 0a             	sp += 16			  ## sm.c:978:5
 1e0c51a:    55 01             	{pc, r5, r4} = [sp++]			  ## sm.c:979:1


sm_notify_client_index:
 1e0c51c:    79 01             	[--sp] = {rets, r9-r4}			  ## sm.c:1001:0
 1e0c51e:    f0 0b             	sp += -32			  ## sm.c:1001:0
 1e0c520:    38 08             	r8 = r3			  ## sm.c:1001:0
 1e0c522:    29 08             	r9 = r2			  ## sm.c:1001:0
 1e0c524:    17 08             	r7 = r1			  ## sm.c:1001:0
 1e0c526:    05 08             	r5 = r0			  ## sm.c:1001:0
 1e0c528:    f4 02             	r4 = [sp+60]			  ## sm.c:1001:0
 1e0c52a:    41 a1             	r1 = sp + 20			  ## sm.c:1001:0
 1e0c52c:    a6 a1             	r6 = sp + 26			  ## sm.c:1001:0
 1e0c52e:    03 70             	r3 = 0			  ## sm.c:1005:5
 1e0c530:    40 08             	r0 = r4			  ## sm.c:1005:5
 1e0c532:    62 08             	r2 = r6			  ## sm.c:1005:5
 1e0c534:    bf f3 46 fd       	call -1396 <le_device_db_info : 1e0bfc4 >			  ## sm.c:1005:5
 1e0c538:    d5 f5 01 00       	b[sp+1] = r5			  ## sm.c:951:14
 1e0c53c:    10 71             	r0 = 17			  ## sm.c:952:14
 1e0c53e:    d0 f5 02 00       	b[sp+2] = r0			  ## sm.c:952:14
 1e0c542:    15 a0             	r5 = sp + 1			  ## sm.c:952:14
 1e0c544:    21 70             	r1 = 2			  ## sm.c:953:5
 1e0c546:    50 08             	r0 = r5			  ## sm.c:953:5
 1e0c548:    72 08             	r2 = r7			  ## sm.c:953:5
 1e0c54a:    bf f3 a8 de       	call -17072 <little_endian_store_16 : 1e0829e >			  ## sm.c:953:5
 1e0c54e:    d9 f5 05 00       	b[sp+5] = r9			  ## sm.c:954:14
 1e0c552:    51 9a             	r1 = r5 + 5			  ## sm.c:955:31
 1e0c554:    80 08             	r0 = r8			  ## sm.c:955:5
 1e0c556:    bf f3 2e f7       	call -4516 <reverse_bd_addr : 1e0b3b6 >			  ## sm.c:955:5
 1e0c55a:    50 02             	r0 = [sp+20]			  ## sm.c:1009:17
 1e0c55c:    d0 f5 0c 00       	b[sp+12] = r0			  ## sm.c:1009:15
 1e0c560:    c1 9a             	r1 = r5 + 12			  ## sm.c:1010:40
 1e0c562:    60 08             	r0 = r6			  ## sm.c:1010:5
 1e0c564:    bf f3 27 f7       	call -4530 <reverse_bd_addr : 1e0b3b6 >			  ## sm.c:1010:5
 1e0c568:    d4 f5 13 00       	b[sp+19] = r4			  ## sm.c:1011:15
 1e0c56c:    31 71             	r1 = 19			  ## sm.c:1012:5
 1e0c56e:    50 08             	r0 = r5			  ## sm.c:1012:5
 1e0c570:    9e 17             	call -196 <sm_dispatch_event : 1e0c4ae >			  ## sm.c:1012:5
 1e0c572:    10 0a             	sp += 32			  ## sm.c:1012:5
 1e0c574:    59 01             	{pc, r9-r4} = [sp++]			  ## sm.c:1013:1


sm_address_resolution_handle_event:
 1e0c576:    79 01             	[--sp] = {rets, r9-r4}			  ## sm.c:1575:0
 1e0c578:    f2 0b             	sp += -28			  ## sm.c:1575:0
 1e0c57a:    c8 ff c4 09 00 00 	r8 = 2500 <sm_global_info : 9c4 >			  ## sm.c:1575:0
 1e0c580:    01 f6 00 80       	r1 = [r8 + 0]			  ## sm.c:1578:29
 1e0c584:    12 fc 54 01       	r2 = r1 + 340			  ## sm.c:1578:29
 1e0c588:    47 44             	r7 = [r2 + 16]			  ## sm.c:1580:29
 1e0c58a:    53 44             	r3 = [r2 + 20]			  ## sm.c:1579:46
 1e0c58c:    09 f6 00 20       	r9 = [r2 + 0]			  ## sm.c:1578:37
 1e0c590:    04 70             	r4 = 0
 1e0c592:    5c 44             	[r2 + 20] = r4			  ## sm.c:1583:40
 1e0c594:    4c 44             	[r2 + 16] = r4			  ## sm.c:1584:43
 1e0c596:    c0 f4 ff 2f       	[r2 + 0] = 4294967295			  ## sm.c:1585:40
 1e0c59a:    06 08             	r6 = r0
 1e0c59c:    23 e0 3f 10       	if (r3 != 2) goto 126 <sm_address_resolution_handle_event+0xA8 : 1e0c61e >
 1e0c5a0:    04 5e             	r4 = h[r7 + 0] (u)			  ## sm.c:1597:37
 1e0c5a2:    16 e0 0d 00       	if (r6 == 1) goto 26 <sm_address_resolution_handle_event+0x4A : 1e0c5c0 >			  ## sm.c:1598:9
 1e0c5a6:    3b 3c             	if (r6 != 0) goto 118 <sm_address_resolution_handle_event+0xA8 : 1e0c61e >
 1e0c5a8:    c4 f4 03 79       	[r7 + 16] = 3			  ## sm.c:1600:48
 1e0c5ac:    19 f6 30 70       	[r7 + 48] = r9			  ## sm.c:1601:43
 1e0c5b0:    20 6e             	r0 = b[r7 + 2] (u)			  ## sm.c:1603:32
 1e0c5b2:    10 20             	if (r0 == 0) goto 32 <sm_address_resolution_handle_event+0x5E : 1e0c5d4 >			  ## sm.c:1603:17
 1e0c5b4:    30 4e             	r0 = [r7 + 12]			  ## sm.c:1605:36
 1e0c5b6:    60 e2 37 10       	if (r0 != 38) goto 110 <sm_address_resolution_handle_event+0xB2 : 1e0c628 >			  ## sm.c:1605:36
 1e0c5ba:    c3 f4 25 79       	[r7 + 12] = 37			  ## sm.c:1606:52
 1e0c5be:    34 18             	goto 104 <sm_address_resolution_handle_event+0xB2 : 1e0c628 >			  ## sm.c:1606:52
 1e0c5c0:    c4 f4 04 79       	[r7 + 16] = 4			  ## sm.c:1625:48
 1e0c5c4:    20 6e             	r0 = b[r7 + 2] (u)			  ## sm.c:1626:32
 1e0c5c6:    1f 20             	if (r0 == 0) goto 62 <sm_address_resolution_handle_event+0x90 : 1e0c606 >			  ## sm.c:1626:17
 1e0c5c8:    30 4e             	r0 = [r7 + 12]			  ## sm.c:1628:36
 1e0c5ca:    60 e2 3a 10       	if (r0 != 38) goto 116 <sm_address_resolution_handle_event+0xCC : 1e0c642 >			  ## sm.c:1628:36
 1e0c5ce:    c3 f4 27 79       	[r7 + 12] = 39			  ## sm.c:1629:52
 1e0c5d2:    37 18             	goto 110 <sm_address_resolution_handle_event+0xCC : 1e0c642 >			  ## sm.c:1629:52
 1e0c5d4:    40 6e             	r0 = b[r7 + 4] (u)			  ## sm.c:1611:33
 1e0c5d6:    02 30             	if (r0 != 0) goto 4 <sm_address_resolution_handle_event+0x66 : 1e0c5dc >			  ## sm.c:1611:33
 1e0c5d8:    30 6e             	r0 = b[r7 + 3] (u)			  ## sm.c:1611:73
 1e0c5da:    26 20             	if (r0 == 0) goto 76 <sm_address_resolution_handle_event+0xB2 : 1e0c628 >			  ## sm.c:1611:73
 1e0c5dc:    05 70             	r5 = 0
 1e0c5de:    3d 6e             	b[r7 + 3] = r5			  ## sm.c:1614:57
 1e0c5e0:    4d 6e             	b[r7 + 4] = r5			  ## sm.c:1615:49
 1e0c5e2:    2d 02             	[sp+8] = r5			  ## sm.c:1616:13
 1e0c5e4:    1d 02             	[sp+4] = r5			  ## sm.c:1616:13
 1e0c5e6:    c3 a0             	r3 = sp + 12			  ## sm.c:1616:13
 1e0c5e8:    01 70             	r1 = 0			  ## sm.c:1616:13
 1e0c5ea:    02 70             	r2 = 0			  ## sm.c:1616:13
 1e0c5ec:    0d 02             	[sp] = r5			  ## sm.c:1616:13
 1e0c5ee:    90 08             	r0 = r9			  ## sm.c:1616:13
 1e0c5f0:    bf f3 18 fd       	call -1488 <le_device_db_encryption_get : 1e0c024 >			  ## sm.c:1616:13
 1e0c5f4:    c0 a0             	r0 = sp + 12
 1e0c5f6:    00 fa 00 05       	r0 = b[r0+r5] (u)			  ## sm.c:597:13
 1e0c5fa:    0f 30             	if (r0 != 0) goto 30 <sm_address_resolution_handle_event+0xA4 : 1e0c61a >			  ## sm.c:597:13
 1e0c5fc:    15 80             	r5 += 1			  ## sm.c:596:29
 1e0c5fe:    f5 e0 f9 df       	ifs (r5 <= 15) goto -14 <sm_address_resolution_handle_event+0x7E : 1e0c5f4 >
 1e0c602:    80 73             	r0 = 56
 1e0c604:    0b 18             	goto 22 <sm_address_resolution_handle_event+0xA6 : 1e0c61c >
 1e0c606:    40 6e             	r0 = b[r7 + 4] (u)			  ## sm.c:1634:33
 1e0c608:    02 30             	if (r0 != 0) goto 4 <sm_address_resolution_handle_event+0x98 : 1e0c60e >			  ## sm.c:1634:33
 1e0c60a:    30 6e             	r0 = b[r7 + 3] (u)			  ## sm.c:1634:73
 1e0c60c:    1a 20             	if (r0 == 0) goto 52 <sm_address_resolution_handle_event+0xCC : 1e0c642 >			  ## sm.c:1634:73
 1e0c60e:    00 70             	r0 = 0			  ## sm.c:1637:57
 1e0c610:    38 6e             	b[r7 + 3] = r0			  ## sm.c:1637:57
 1e0c612:    48 6e             	b[r7 + 4] = r0			  ## sm.c:1638:49
 1e0c614:    c3 f4 38 79       	[r7 + 12] = 56			  ## sm.c:1639:44
 1e0c618:    14 18             	goto 40 <sm_address_resolution_handle_event+0xCC : 1e0c642 >			  ## sm.c:1639:44
 1e0c61a:    50 73             	r0 = 53
 1e0c61c:    38 4e             	[r7 + 12] = r0
 1e0c61e:    16 e0 0e 00       	if (r6 == 1) goto 28 <sm_address_resolution_handle_event+0xC8 : 1e0c63e >
 1e0c622:    16 3c             	if (r6 != 0) goto 44 <sm_address_resolution_handle_event+0xDA : 1e0c650 >
 1e0c624:    01 f6 00 80       	r1 = [r8 + 0]
 1e0c628:    02 f9 5c 11       	r2 = b[r1 + 348] (u)			  ## sm.c:1650:9
 1e0c62c:    e6 fd 00 59       	r5 = r9.l (u)			  ## sm.c:1650:9
 1e0c630:    13 fc 5d 01       	r3 = r1 + 349			  ## sm.c:1650:124
 1e0c634:    a0 7d             	r0 = 218			  ## sm.c:1650:9
 1e0c636:    0d 02             	[sp] = r5			  ## sm.c:1650:9
 1e0c638:    41 08             	r1 = r4			  ## sm.c:1650:9
 1e0c63a:    70 17             	call -288 <sm_notify_client_index : 1e0c51c >			  ## sm.c:1650:9
 1e0c63c:    09 18             	goto 18 <sm_address_resolution_handle_event+0xDA : 1e0c650 >			  ## sm.c:1650:9
 1e0c63e:    01 f6 00 80       	r1 = [r8 + 0]
 1e0c642:    02 f9 5c 11       	r2 = b[r1 + 348] (u)			  ## sm.c:1653:9
 1e0c646:    13 fc 5d 01       	r3 = r1 + 349			  ## sm.c:1653:120
 1e0c64a:    90 7d             	r0 = 217			  ## sm.c:1653:9
 1e0c64c:    41 08             	r1 = r4			  ## sm.c:1653:9
 1e0c64e:    4d 17             	call -358 <sm_notify_client_base : 1e0c4ea >			  ## sm.c:1653:9
 1e0c650:    0e 0a             	sp += 28
 1e0c652:    59 01             	{pc, r9-r4} = [sp++]			  ## sm.c:1656:1


sm_notify_client_process:
 1e0c654:    76 01             	[--sp] = {rets, r6-r4}			  ## sm.c:991:0
 1e0c656:    f8 0b             	sp += -16			  ## sm.c:991:0
 1e0c658:    34 08             	r4 = r3			  ## sm.c:991:0
 1e0c65a:    23 08             	r3 = r2			  ## sm.c:991:0
 1e0c65c:    15 08             	r5 = r1			  ## sm.c:991:0
 1e0c65e:    02 08             	r2 = r0			  ## sm.c:991:0
 1e0c660:    00 fb df 0e       	r0 = 3807 <le_param+0x27 : edf >			  ## sm.c:951:14
 1e0c664:    90 f5 00 00       	h[sp] = r0			  ## sm.c:951:14
 1e0c668:    06 a0             	r6 = sp + 0			  ## sm.c:951:14
 1e0c66a:    21 70             	r1 = 2			  ## sm.c:953:5
 1e0c66c:    60 08             	r0 = r6			  ## sm.c:953:5
 1e0c66e:    bf f3 16 de       	call -17364 <little_endian_store_16 : 1e0829e >			  ## sm.c:953:5
 1e0c672:    d5 f5 04 00       	b[sp+4] = r5			  ## sm.c:954:14
 1e0c676:    51 9c             	r1 = r6 + 5			  ## sm.c:955:31
 1e0c678:    30 08             	r0 = r3			  ## sm.c:955:5
 1e0c67a:    bf f3 9c f6       	call -4808 <reverse_bd_addr : 1e0b3b6 >			  ## sm.c:955:5
 1e0c67e:    b1 70             	r1 = 11			  ## sm.c:995:5
 1e0c680:    60 08             	r0 = r6			  ## sm.c:995:5
 1e0c682:    42 08             	r2 = r4			  ## sm.c:995:5
 1e0c684:    bf f3 f0 dd       	call -17440 <little_endian_store_32 : 1e08268 >			  ## sm.c:995:5
 1e0c688:    01 71             	r1 = 16			  ## sm.c:996:5
 1e0c68a:    11 17             	call -478 <sm_dispatch_event : 1e0c4ae >			  ## sm.c:996:5
 1e0c68c:    08 0a             	sp += 16			  ## sm.c:996:5
 1e0c68e:    56 01             	{pc, r6-r4} = [sp++]			  ## sm.c:997:1


sm_init_setup:
 1e0c690:    79 01             	[--sp] = {rets, r9-r4}			  ## sm.c:1478:0
 1e0c692:    04 08             	r4 = r0			  ## sm.c:1478:0
 1e0c694:    c5 ff c4 09 00 00 	r5 = 2500 <sm_global_info : 9c4 >			  ## sm.c:1478:0
 1e0c69a:    06 4a             	r6 = [r5 + 0]			  ## sm.c:1481:5
 1e0c69c:    50 68             	r0 = b[r4 + 5] (u)			  ## sm.c:1481:41
 1e0c69e:    67 fc 28 01       	r7 = r6 + 296			  ## sm.c:1481:41
 1e0c6a2:    28 6e             	b[r7 + 2] = r0			  ## sm.c:1481:30
 1e0c6a4:    69 98             	r9 = r4 + 6			  ## sm.c:1482:5
 1e0c6a6:    30 9e             	r0 = r7 + 3			  ## sm.c:1482:5
 1e0c6a8:    62 70             	r2 = 6			  ## sm.c:1482:5
 1e0c6aa:    91 08             	r1 = r9			  ## sm.c:1482:5
 1e0c6ac:    97 f3 1a d4       	call 3123252 <memcpy : 106ee4 >			  ## sm.c:1482:5
 1e0c6b0:    b3 4f             	r3 = [r7 + 108]			  ## sm.c:1486:17
 1e0c6b2:    08 26             	if (r3 == 0) goto 16 <sm_init_setup+0x34 : 1e0c6c4 >			  ## sm.c:1486:17
 1e0c6b4:    50 68             	r0 = b[r4 + 5] (u)			  ## sm.c:1487:25
 1e0c6b6:    62 fc 20 00       	r2 = r6 + 32			  ## sm.c:1487:103
 1e0c6ba:    91 08             	r1 = r9			  ## sm.c:1487:25
 1e0c6bc:    83 00             	call r3			  ## sm.c:1487:25
 1e0c6be:    06 4a             	r6 = [r5 + 0]			  ## sm.c:1487:25
 1e0c6c0:    08 08             	r8 = r0			  ## sm.c:1487:25
 1e0c6c2:    01 18             	goto 2 <sm_init_setup+0x36 : 1e0c6c6 >
 1e0c6c4:    08 70             	r8 = 0
 1e0c6c6:    21 68             	r1 = b[r4 + 2] (u)			  ## sm.c:1493:9
 1e0c6c8:    00 58             	r0 = h[r4 + 0] (u)			  ## sm.c:1503:41
 1e0c6ca:    65 fc 40 00       	r5 = r6 + 64			  ## sm.c:1503:41
 1e0c6ce:    67 fc 36 01       	r7 = r6 + 310			  ## sm.c:1503:41
 1e0c6d2:    12 22             	if (r1 == 0) goto 36 <sm_init_setup+0x68 : 1e0c6f8 >			  ## sm.c:1493:9
 1e0c6d4:    51 fc 50 00       	r1 = r5 + 80			  ## sm.c:1496:60
 1e0c6d8:    52 fc 57 00       	r2 = r5 + 87			  ## sm.c:1496:76
 1e0c6dc:    bf f3 b7 f6       	call -4754 <gap_le_get_own_address : 1e0b44e >			  ## sm.c:1496:9
 1e0c6e0:    50 68             	r0 = b[r4 + 5] (u)			  ## sm.c:1497:42
 1e0c6e2:    10 f9 8f 60       	b[r6 + 143] = r0			  ## sm.c:1497:31
 1e0c6e6:    50 fc 51 00       	r0 = r5 + 81			  ## sm.c:1498:9
 1e0c6ea:    62 70             	r2 = 6			  ## sm.c:1498:9
 1e0c6ec:    91 08             	r1 = r9			  ## sm.c:1498:9
 1e0c6ee:    97 f3 f9 d3       	call 3123186 <memcpy : 106ee4 >			  ## sm.c:1498:9
 1e0c6f2:    20 9e             	r0 = r7 + 2			  ## sm.c:1499:28
 1e0c6f4:    81 9a             	r1 = r5 + 8			  ## sm.c:1495:32
 1e0c6f6:    1d 18             	goto 58 <sm_init_setup+0xA2 : 1e0c732 >
 1e0c6f8:    51 fc 4f 00       	r1 = r5 + 79			  ## sm.c:1503:60
 1e0c6fc:    52 fc 51 00       	r2 = r5 + 81			  ## sm.c:1503:76
 1e0c700:    bf f3 a5 f6       	call -4790 <gap_le_get_own_address : 1e0b44e >			  ## sm.c:1503:9
 1e0c704:    50 68             	r0 = b[r4 + 5] (u)			  ## sm.c:1504:42
 1e0c706:    10 f9 90 60       	b[r6 + 144] = r0			  ## sm.c:1504:31
 1e0c70a:    50 fc 57 00       	r0 = r5 + 87			  ## sm.c:1505:9
 1e0c70e:    62 70             	r2 = 6			  ## sm.c:1505:9
 1e0c710:    91 08             	r1 = r9			  ## sm.c:1505:9
 1e0c712:    97 f3 e7 d3       	call 3123150 <memcpy : 106ee4 >			  ## sm.c:1505:9
 1e0c716:    23 68             	r3 = b[r4 + 2] (u)			  ## sm.c:1507:86
 1e0c718:    22 9e             	r2 = r7 + 2			  ## sm.c:1449:28
 1e0c71a:    30 9e             	r0 = r7 + 3			  ## sm.c:1451:28
 1e0c71c:    01 08             	r1 = r0			  ## sm.c:1448:9
 1e0c71e:    01 26             	if (r3 == 0) goto 2 <sm_init_setup+0x92 : 1e0c722 >			  ## sm.c:1448:9
 1e0c720:    21 08             	r1 = r2			  ## sm.c:1448:9
 1e0c722:    01 62             	r1 = b[r1 + 0] (u)
 1e0c724:    21 fd 01 19       	r1 = r1 & 1			  ## sm.c:1454:18
 1e0c728:    01 fd 06 19       	r1 = r1 | 6			  ## sm.c:1454:9
 1e0c72c:    69 6a             	b[r5 + 6] = r1			  ## sm.h:201:19
 1e0c72e:    79 6a             	b[r5 + 7] = r1			  ## sm.h:205:19
 1e0c730:    11 9a             	r1 = r5 + 1			  ## sm.c:1502:32
 1e0c732:    23 5e             	r3 = h[r7 + 4] (u)
 1e0c734:    24 68             	r4 = b[r4 + 2] (u)			  ## sm.c:1523:9
 1e0c736:    1a d1             	r2 = r3 >> 4			  ## sm.c:1526:68
 1e0c738:    01 28             	if (r4 == 0) goto 2 <sm_init_setup+0xAC : 1e0c73c >			  ## sm.c:1526:68
 1e0c73a:    32 08             	r2 = r3			  ## sm.c:1523:9
 1e0c73c:    00 60             	r0 = b[r0 + 0] (u)
 1e0c73e:    22 fd 0f 29       	r2 = r2 & 15
 1e0c742:    1a 62             	b[r1 + 1] = r2			  ## sm.h:185:19
 1e0c744:    18 f9 02 10       	b[r1 + 2] = r8			  ## sm.h:189:19
 1e0c748:    38 62             	b[r1 + 3] = r0			  ## sm.h:193:19
 1e0c74a:    00 6e             	r0 = b[r7 + 0] (u)			  ## sm.c:1531:74
 1e0c74c:    48 62             	b[r1 + 4] = r0			  ## sm.h:197:19
 1e0c74e:    59 01             	{pc, r9-r4} = [sp++]			  ## sm.c:1532:1


sm_stk_generation_init:
 1e0c750:    78 01             	[--sp] = {rets, r8-r4}			  ## sm.c:1535:0
 1e0c752:    04 08             	r4 = r0			  ## sm.c:1535:0
 1e0c754:    c0 ff c4 09 00 00 	r0 = 2500 <sm_global_info : 9c4 >			  ## sm.c:1535:0
 1e0c75a:    21 68             	r1 = b[r4 + 2] (u)			  ## sm.c:1539:9
 1e0c75c:    05 40             	r5 = [r0 + 0]			  ## sm.c:1539:9
 1e0c75e:    05 22             	if (r1 == 0) goto 10 <sm_stk_generation_init+0x1A : 1e0c76a >			  ## sm.c:1539:9
 1e0c760:    50 fc 47 00       	r0 = r5 + 71			  ## sm.h:176:16
 1e0c764:    51 fc 41 00       	r1 = r5 + 65			  ## sm.c:1541:38
 1e0c768:    04 18             	goto 8 <sm_stk_generation_init+0x22 : 1e0c772 >
 1e0c76a:    50 fc 4d 00       	r0 = r5 + 77			  ## sm.h:172:16
 1e0c76e:    51 fc 48 00       	r1 = r5 + 72			  ## sm.c:1545:38
 1e0c772:    41 62             	r1 = b[r1 + 4] (u)			  ## sm.h:168:16
 1e0c774:    57 fc 34 01       	r7 = r5 + 308
 1e0c778:    32 6e             	r2 = b[r7 + 3] (u)			  ## sm.c:4188:25
 1e0c77a:    12 f2 03 90       	if (r2 <= r1) goto 6 <sm_stk_generation_init+0x34 : 1e0c784 >			  ## sm.c:4188:9
 1e0c77e:    00 70             	r0 = 0			  ## sm.c:1550:44
 1e0c780:    58 69             	b[r4 + 21] = r0			  ## sm.c:1550:44
 1e0c782:    14 18             	goto 40 <sm_stk_generation_init+0x5C : 1e0c7ac >			  ## sm.c:1550:44
 1e0c784:    22 6e             	r2 = b[r7 + 2] (u)			  ## sm.c:4191:17
 1e0c786:    08 f9 00 00       	r8 = b[r0 + 0] (u)			  ## sm.c:4191:17
 1e0c78a:    12 f2 01 80       	if (r2 > r1) goto 2 <sm_stk_generation_init+0x40 : 1e0c790 >			  ## sm.c:4191:17
 1e0c78e:    21 08             	r1 = r2			  ## sm.c:4192:9
 1e0c790:    59 69             	b[r4 + 21] = r1			  ## sm.c:1550:44
 1e0c792:    0c 22             	if (r1 == 0) goto 24 <sm_stk_generation_init+0x5C : 1e0c7ac >			  ## sm.c:1550:44
 1e0c794:    00 70             	r0 = 0
 1e0c796:    78 4a             	[r5 + 28] = r0			  ## sm.c:1032:37
 1e0c798:    56 fc 30 00       	r6 = r5 + 48			  ## sm.c:1032:37
 1e0c79c:    08 6c             	b[r6 + 0] = r0			  ## sm.c:1041:38
 1e0c79e:    30 6d             	r0 = b[r6 + 19] (u)			  ## sm.h:160:16
 1e0c7a0:    07 20             	if (r0 == 0) goto 14 <sm_stk_generation_init+0x60 : 1e0c7b0 >			  ## sm.h:160:16
 1e0c7a2:    a0 6d             	r0 = b[r6 + 26] (u)			  ## sm.h:160:16
 1e0c7a4:    05 20             	if (r0 == 0) goto 10 <sm_stk_generation_init+0x60 : 1e0c7b0 >			  ## sm.h:160:16
 1e0c7a6:    c7 f4 05 59       	[r5 + 28] = 5			  ## sm.c:1055:41
 1e0c7aa:    42 18             	goto 132 <.GJTIE708_0_0_ : 1e0c830 >			  ## sm.c:1055:41
 1e0c7ac:    60 70             	r0 = 6
 1e0c7ae:    58 01             	{pc, r8-r4} = [sp++]			  ## sm.c:1572:1
 1e0c7b0:    40 6d             	r0 = b[r6 + 20] (u)			  ## sm.h:164:16
 1e0c7b2:    22 f3 03 00       	if ((r0 & 4) != 0) goto 6 <sm_stk_generation_init+0x6C : 1e0c7bc >			  ## sm.h:164:16
 1e0c7b6:    b0 6d             	r0 = b[r6 + 27] (u)			  ## sm.h:164:16
 1e0c7b8:    02 f3 3d 00       	if ((r0 & 4) == 0) goto 122 <.GJTIE708_0_0_+0x6 : 1e0c836 >			  ## sm.h:164:16
 1e0c7bc:    50 fc 20 00       	r0 = r5 + 32			  ## sm.c:618:5
 1e0c7c0:    01 70             	r1 = 0			  ## sm.c:619:25
 1e0c7c2:    02 71             	r2 = 16			  ## sm.c:619:25
 1e0c7c4:    97 f3 94 d3       	call 3122984 <memset : 106ef0 >			  ## sm.c:619:25
 1e0c7c8:    20 6d             	r0 = b[r6 + 18] (u)			  ## sm.h:156:16
 1e0c7ca:    40 e0 34 80       	if (r0 > 4) goto 104 <.GJTIE708_0_0_+0x6 : 1e0c836 >			  ## sm.h:156:16
 1e0c7ce:    91 6d             	r1 = b[r6 + 25] (u)			  ## sm.h:156:16
 1e0c7d0:    41 e0 1e 90       	if (r1 <= 4) goto 60 <sm_stk_generation_init+0xC0 : 1e0c810 >			  ## sm.h:156:16
 1e0c7d4:    30 18             	goto 96 <.GJTIE708_0_0_+0x6 : 1e0c836 >			  ## sm.h:156:16
 1e0c7d6:    30 70             	r0 = 3
 1e0c7d8:    00 f3 19 10       	if ((r1 & 1) == 0) goto 50 <sm_stk_generation_init+0xBE : 1e0c80e >
 1e0c7dc:    00 70             	r0 = 0
 1e0c7de:    21 fd 01 89       	r1 = r8 & 1			  ## sm.c:1097:17
 1e0c7e2:    61 fb 00 19       	r1 = 0 - r1			  ## sm.c:1097:17
 1e0c7e6:    21 fd 03 19       	r1 = r1 & 3			  ## sm.c:1097:9
 1e0c7ea:    02 fd 0c 19       	r2 = r1 | 12			  ## sm.c:1103:15
 1e0c7ee:    98 6b             	b[r5 + 25] = r0			  ## sm.c:1113:45
 1e0c7f0:    01 f3 01 80       	if ((r8 & 2) == 0) goto 2 <sm_stk_generation_init+0xA6 : 1e0c7f6 >			  ## sm.c:1113:45
 1e0c7f4:    21 08             	r1 = r2			  ## sm.c:1101:9
 1e0c7f6:    f0 fd 10 28       	r2 = r8 << 2			  ## sm.c:1105:9
 1e0c7fa:    22 fd 10 29       	r2 = r2 & 16			  ## sm.c:1105:9
 1e0c7fe:    51 b4             	r1 |= r2			  ## sm.c:1105:9
 1e0c800:    79 6b             	b[r5 + 23] = r1			  ## sm.c:1114:41
 1e0c802:    89 6b             	b[r5 + 24] = r1			  ## sm.c:1115:46
 1e0c804:    41 69             	r1 = b[r4 + 20] (u)			  ## sm.c:1569:42
 1e0c806:    21 fd 0f 19       	r1 = r1 & 15			  ## sm.c:1569:42
 1e0c80a:    11 b2             	r1 |= 16			  ## sm.c:1569:42
 1e0c80c:    49 69             	b[r4 + 20] = r1			  ## sm.c:1569:42
 1e0c80e:    58 01             	{pc, r8-r4} = [sp++]			  ## sm.c:1572:1
 1e0c810:    80 c0             	r0 = r0 << 2			  ## sm.c:1087:39
 1e0c812:    42 71             	r2 = 20			  ## sm.c:1087:39
 1e0c814:    80 fe 20 01       	r0 += r1 * r2			  ## sm.c:1087:39
 1e0c818:    c1 ff 6c c1 e0 01 	r1 = 31506796 <stk_generation_method : 1e0c16c >			  ## sm.c:1087:39
 1e0c81e:    80 f6 00 01       	r0 = [r0+r1]			  ## sm.c:1087:39
 1e0c822:    78 4a             	[r5 + 28] = r0			  ## sm.c:1087:37
 1e0c824:    50 e0 0c 80       	if (r0 > 5) goto 24 <.GJTIE708_0_0_+0x10 : 1e0c840 >			  ## sm.c:1087:37
 1e0c828:    a0 00             	tbb [r0]


.GJTIS708_0_0_:
 1e0c82a:    06     < 6 : 0x6 >
 1e0c82b:    08     < 8 : 0x8 >
 1e0c82c:    08     < 8 : 0x8 >
 1e0c82d:    08     < 8 : 0x8 >
 1e0c82e:    0d     < 13 : 0xD >
 1e0c82f:    03     < 3 : 0x3 >
 1e0c830:    10 6e             	r0 = b[r7 + 1] (u)			  ## sm.c:4236:25
 1e0c832:    41 d0             	r1 = r0 >> 1			  ## sm.c:4236:92
 1e0c834:    d0 1f             	goto -96 <sm_stk_generation_init+0x86 : 1e0c7d6 >			  ## sm.c:4236:92
 1e0c836:    11 6e             	r1 = b[r7 + 1] (u)			  ## sm.c:4230:25
 1e0c838:    ce 1f             	goto -100 <sm_stk_generation_init+0x86 : 1e0c7d6 >			  ## sm.c:4230:25
 1e0c83a:    10 6e             	r0 = b[r7 + 1] (u)			  ## sm.c:4234:25
 1e0c83c:    81 d0             	r1 = r0 >> 2			  ## sm.c:4234:96
 1e0c83e:    cb 1f             	goto -106 <sm_stk_generation_init+0x86 : 1e0c7d6 >			  ## sm.c:4234:96
 1e0c840:    30 70             	r0 = 3
 1e0c842:    58 01             	{pc, r8-r4} = [sp++]			  ## sm.c:1572:1
 1e0c844:    10 6e             	r0 = b[r7 + 1] (u)			  ## sm.c:4238:25
 1e0c846:    c1 d0             	r1 = r0 >> 3			  ## sm.c:4238:107
 1e0c848:    c6 1f             	goto -116 <sm_stk_generation_init+0x86 : 1e0c7d6 >			  ## sm.c:4238:107


sm_timeout_stop:
 1e0c84a:    74 01             	[--sp] = {rets, r4}			  ## sm.c:660:0
 1e0c84c:    c4 ff c4 09 00 00 	r4 = 2500 <sm_global_info : 9c4 >			  ## sm.c:660:0
 1e0c852:    00 48             	r0 = [r4 + 0]			  ## sm.c:661:9
 1e0c854:    10 40             	r0 = [r0 + 4]			  ## sm.c:661:27
 1e0c856:    05 20             	if (r0 == 0) goto 10 <sm_timeout_stop+0x18 : 1e0c862 >			  ## sm.c:661:27
 1e0c858:    bf f3 4f f3       	call -6498 <btstack_run_loop_remove_timer : 1e0aefa >			  ## sm.c:662:9
 1e0c85c:    00 48             	r0 = [r4 + 0]			  ## sm.c:663:9
 1e0c85e:    c1 f4 00 09       	[r0 + 4] = 0			  ## sm.c:663:35
 1e0c862:    54 01             	{pc, r4} = [sp++]			  ## sm.c:665:1


sm_timeout_start:
 1e0c864:    74 01             	[--sp] = {rets, r4}			  ## sm.c:668:0
 1e0c866:    04 08             	r4 = r0			  ## sm.c:668:0
 1e0c868:    f0 17             	call -32 <sm_timeout_stop : 1e0c84a >			  ## sm.c:669:5
 1e0c86a:    c0 ff c4 09 00 00 	r0 = 2500 <sm_global_info : 9c4 >			  ## sm.c:670:13
 1e0c870:    00 40             	r0 = [r0 + 0]			  ## sm.c:670:13
 1e0c872:    01 70             	r1 = 0			  ## sm.c:670:5
 1e0c874:    19 40             	[r0 + 4] = r1			  ## sm.c:670:5
 1e0c876:    09 40             	[r0 + 0] = r1			  ## sm.c:670:5
 1e0c878:    c2 f4 1e 09       	[r0 + 8] = 30			  ## sm.c:671:40
 1e0c87c:    c1 ff a0 d8 e0 01 	r1 = 31512736 <sm_timeout_handler : 1e0d8a0 >			  ## sm.c:672:31
 1e0c882:    39 40             	[r0 + 12] = r1			  ## sm.c:672:31
 1e0c884:    4c 40             	[r0 + 16] = r4			  ## sm.c:673:31
 1e0c886:    31 78             	r1 = 131			  ## sm.c:674:5
 1e0c888:    14 01             	{rets, r4} = [sp++]			  ## sm.c:674:5
 1e0c88a:    ff f3 08 f6       	goto -5104 <btstack_set_timer : 1e0b49e >			  ## sm.c:674:5


sm_done_for_handle:
 1e0c88e:    74 01             	[--sp] = {rets, r4}			  ## sm.c:1435:0
 1e0c890:    c4 ff c4 09 00 00 	r4 = 2500 <sm_global_info : 9c4 >			  ## sm.c:1435:0
 1e0c896:    01 48             	r1 = [r4 + 0]			  ## sm.c:1436:9
 1e0c898:    01 f7 90 11       	r1 = h[r1 + 400] (u)			  ## sm.c:1436:17
 1e0c89c:    01 f2 07 10       	if (r1 != r0) goto 14 <sm_done_for_handle+0x20 : 1e0c8ae >			  ## sm.c:1436:17
 1e0c8a0:    d4 17             	call -88 <sm_timeout_stop : 1e0c84a >			  ## sm.c:1437:9
 1e0c8a2:    00 48             	r0 = [r4 + 0]			  ## sm.c:1438:9
 1e0c8a4:    c1 ff ff ff 00 00 	r1 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## sm.c:1438:45
 1e0c8aa:    11 f7 90 01       	h[r0 + 400] = r1			  ## sm.c:1438:45
 1e0c8ae:    54 01             	{pc, r4} = [sp++]			  ## sm.c:1441:1


sm_set_timeout_disconnect:
 1e0c8b0:    76 01             	[--sp] = {rets, r6-r4}			  ## sm.c:565:0
 1e0c8b2:    15 08             	r5 = r1			  ## sm.c:565:0
 1e0c8b4:    04 08             	r4 = r0			  ## sm.c:565:0
 1e0c8b6:    20 05             	r0 = r4.l (u)			  ## sm.c:5074:36
 1e0c8b8:    bf f3 26 da       	call -19380 <le_hci_connection_for_handle : 1e07d08 >			  ## sm.c:5074:36
 1e0c8bc:    01 fc 3c 00       	r1 = r0 + 60			  ## sm.c:5078:22
 1e0c8c0:    06 70             	r6 = 0			  ## sm.c:5078:22
 1e0c8c2:    01 20             	if (r0 == 0) goto 2 <sm_set_timeout_disconnect+0x16 : 1e0c8c6 >			  ## sm.c:5078:22
 1e0c8c4:    16 08             	r6 = r1			  ## sm.c:5075:9
 1e0c8c6:    12 20             	if (r0 == 0) goto 36 <sm_set_timeout_disconnect+0x3C : 1e0c8ec >
 1e0c8c8:    d0 4c             	r0 = [r6 + 52]			  ## sm.c:572:18
 1e0c8ca:    05 20             	if (r0 == 0) goto 10 <sm_set_timeout_disconnect+0x26 : 1e0c8d6 >			  ## sm.c:572:18
 1e0c8cc:    20 04             	r0 = r0.l (u)			  ## sm.c:573:9
 1e0c8ce:    80 f3 da 22       	call 17844 <sys_timer_del : 1e10e86 >			  ## sm.c:573:9
 1e0c8d2:    cd f4 00 69       	[r6 + 52] = 0			  ## sm.c:574:32
 1e0c8d6:    15 f9 2e 60       	b[r6 + 46] = r5			  ## sm.c:578:32
 1e0c8da:    c1 ff 56 d8 e0 01 	r1 = 31512662 <sm_disconnect : 1e0d856 >			  ## sm.c:580:34
 1e0c8e0:    02 fb 2c 01       	r2 = 300 <DRIVER_RAM_TOTAL+0x3A : 12c >			  ## sm.c:580:34
 1e0c8e4:    40 08             	r0 = r4			  ## sm.c:580:34
 1e0c8e6:    80 f3 1f 24       	call 18494 <sys_timeout_add : 1e11128 >			  ## sm.c:580:34
 1e0c8ea:    d8 4c             	[r6 + 52] = r0			  ## sm.c:580:32
 1e0c8ec:    56 01             	{pc, r6-r4} = [sp++]			  ## sm.c:584:1


sm_notify_client_passkey:
 1e0c8ee:    75 01             	[--sp] = {rets, r5, r4}			  ## sm.c:982:0
 1e0c8f0:    f8 0b             	sp += -16			  ## sm.c:982:0
 1e0c8f2:    24 08             	r4 = r2			  ## sm.c:982:0
 1e0c8f4:    12 08             	r2 = r1			  ## sm.c:982:0
 1e0c8f6:    d0 f5 00 00       	b[sp] = r0			  ## sm.c:951:14
 1e0c8fa:    e0 70             	r0 = 14			  ## sm.c:952:14
 1e0c8fc:    d0 f5 01 00       	b[sp+1] = r0			  ## sm.c:952:14
 1e0c900:    05 a0             	r5 = sp + 0			  ## sm.c:952:14
 1e0c902:    21 70             	r1 = 2			  ## sm.c:953:5
 1e0c904:    50 08             	r0 = r5			  ## sm.c:953:5
 1e0c906:    bf f3 ca dc       	call -18028 <little_endian_store_16 : 1e0829e >			  ## sm.c:953:5
 1e0c90a:    d4 f5 04 00       	b[sp+4] = r4			  ## sm.c:954:14
 1e0c90e:    51 9a             	r1 = r5 + 5			  ## sm.c:955:31
 1e0c910:    30 08             	r0 = r3			  ## sm.c:955:5
 1e0c912:    bf f3 50 f5       	call -5472 <reverse_bd_addr : 1e0b3b6 >			  ## sm.c:955:5
 1e0c916:    72 02             	r2 = [sp+28]
 1e0c918:    b1 70             	r1 = 11			  ## sm.c:986:5
 1e0c91a:    50 08             	r0 = r5			  ## sm.c:986:5
 1e0c91c:    bf f3 a4 dc       	call -18104 <little_endian_store_32 : 1e08268 >			  ## sm.c:986:5
 1e0c920:    01 71             	r1 = 16			  ## sm.c:987:5
 1e0c922:    c5 15             	call -1142 <sm_dispatch_event : 1e0c4ae >			  ## sm.c:987:5
 1e0c924:    08 0a             	sp += 16			  ## sm.c:987:5
 1e0c926:    55 01             	{pc, r5, r4} = [sp++]			  ## sm.c:988:1


sm_trigger_user_response:
 1e0c928:    76 01             	[--sp] = {rets, r6-r4}			  ## sm.c:1378:0
 1e0c92a:    fe 0b             	sp += -4			  ## sm.c:1378:0
 1e0c92c:    c1 ff c4 09 00 00 	r1 = 2500 <sm_global_info : 9c4 >			  ## sm.c:1380:5
 1e0c932:    01 42             	r1 = [r1 + 0]			  ## sm.c:1380:5
 1e0c934:    02 70             	r2 = 0			  ## sm.c:1380:29
 1e0c936:    5a 63             	b[r1 + 21] = r2			  ## sm.c:1380:29
 1e0c938:    72 42             	r2 = [r1 + 28]			  ## sm.c:1382:20
 1e0c93a:    04 08             	r4 = r0			  ## sm.c:1382:20
 1e0c93c:    42 e0 42 80       	if (r2 > 4) goto 132 <.GJTIE717_0_0_+0x7C : 1e0c9c4 >
 1e0c940:    a2 00             	tbb [r2]


.GJTIS717_0_0_:
 1e0c942:    03     < 3 : 0x3 >
 1e0c943:    0a     < 10 : 0xA >
 1e0c944:    0f     < 15 : 0xF >
 1e0c945:    20     < 32 : 0x20 >
 1e0c946:    28     < 40 : 0x28 >
 1e0c947:    00     < 0 : 0x0 >
 1e0c948:    10 70             	r0 = 1			  ## sm.c:1408:33
 1e0c94a:    58 63             	b[r1 + 21] = r0			  ## sm.c:1408:33
 1e0c94c:    52 68             	r2 = b[r4 + 5] (u)			  ## sm.c:1409:9
 1e0c94e:    81 f7 06 40       	r1 = h[r4 ++= 6] (u)			  ## sm.c:1409:9
 1e0c952:    00 7d             	r0 = 208			  ## sm.c:1409:9
 1e0c954:    1c 18             	goto 56 <.GJTIE717_0_0_+0x46 : 1e0c98e >			  ## sm.c:1409:9
 1e0c956:    55 68             	r5 = b[r4 + 5] (u)			  ## sm.c:1388:100
 1e0c958:    20 68             	r0 = b[r4 + 2] (u)			  ## sm.c:1384:13
 1e0c95a:    06 58             	r6 = h[r4 + 0] (u)			  ## sm.c:1388:80
 1e0c95c:    2c 30             	if (r0 != 0) goto 88 <.GJTIE717_0_0_+0x6E : 1e0c9b6 >			  ## sm.c:1388:80
 1e0c95e:    04 18             	goto 8 <.GJTIE717_0_0_+0x20 : 1e0c968 >			  ## sm.c:1388:80
 1e0c960:    55 68             	r5 = b[r4 + 5] (u)			  ## sm.c:1396:95
 1e0c962:    20 68             	r0 = b[r4 + 2] (u)			  ## sm.c:1392:13
 1e0c964:    06 58             	r6 = h[r4 + 0] (u)			  ## sm.c:1396:75
 1e0c966:    27 20             	if (r0 == 0) goto 78 <.GJTIE717_0_0_+0x6E : 1e0c9b6 >			  ## sm.c:1396:75
 1e0c968:    10 fc 20 00       	r0 = r1 + 32
 1e0c96c:    c1 70             	r1 = 12
 1e0c96e:    bf f3 b4 f5       	call -5272 <big_endian_read_32 : 1e0b4da >
 1e0c972:    01 08             	r1 = r0
 1e0c974:    63 98             	r3 = r4 + 6
 1e0c976:    20 7d             	r0 = 210
 1e0c978:    09 02             	[sp] = r1
 1e0c97a:    61 08             	r1 = r6
 1e0c97c:    52 08             	r2 = r5
 1e0c97e:    b7 17             	call -146 <sm_notify_client_passkey : 1e0c8ee >
 1e0c980:    21 18             	goto 66 <.GJTIE717_0_0_+0x7C : 1e0c9c4 >
 1e0c982:    10 70             	r0 = 1			  ## sm.c:1400:33
 1e0c984:    58 63             	b[r1 + 21] = r0			  ## sm.c:1400:33
 1e0c986:    52 68             	r2 = b[r4 + 5] (u)			  ## sm.c:1401:9
 1e0c988:    81 f7 06 40       	r1 = h[r4 ++= 6] (u)			  ## sm.c:1401:9
 1e0c98c:    40 7d             	r0 = 212			  ## sm.c:1401:9
 1e0c98e:    43 08             	r3 = r4
 1e0c990:    18 18             	goto 48 <.GJTIE717_0_0_+0x7A : 1e0c9c2 >
 1e0c992:    10 70             	r0 = 1			  ## sm.c:1404:33
 1e0c994:    58 63             	b[r1 + 21] = r0			  ## sm.c:1404:33
 1e0c996:    55 68             	r5 = b[r4 + 5] (u)			  ## sm.c:1405:9
 1e0c998:    86 f7 06 40       	r6 = h[r4 ++= 6] (u)			  ## sm.c:1405:9
 1e0c99c:    10 fc 20 00       	r0 = r1 + 32			  ## sm.c:1405:164
 1e0c9a0:    c1 70             	r1 = 12			  ## sm.c:1405:145
 1e0c9a2:    bf f3 9a f5       	call -5324 <big_endian_read_32 : 1e0b4da >			  ## sm.c:1405:145
 1e0c9a6:    01 08             	r1 = r0			  ## sm.c:1405:145
 1e0c9a8:    60 7d             	r0 = 214			  ## sm.c:1405:9
 1e0c9aa:    09 02             	[sp] = r1			  ## sm.c:1405:9
 1e0c9ac:    61 08             	r1 = r6			  ## sm.c:1405:9
 1e0c9ae:    52 08             	r2 = r5			  ## sm.c:1405:9
 1e0c9b0:    43 08             	r3 = r4			  ## sm.c:1405:9
 1e0c9b2:    9d 17             	call -198 <sm_notify_client_passkey : 1e0c8ee >			  ## sm.c:1405:9
 1e0c9b4:    07 18             	goto 14 <.GJTIE717_0_0_+0x7C : 1e0c9c4 >			  ## sm.c:1405:9
 1e0c9b6:    10 70             	r0 = 1
 1e0c9b8:    58 63             	b[r1 + 21] = r0
 1e0c9ba:    63 98             	r3 = r4 + 6
 1e0c9bc:    40 7d             	r0 = 212
 1e0c9be:    61 08             	r1 = r6
 1e0c9c0:    52 08             	r2 = r5
 1e0c9c2:    93 15             	call -1242 <sm_notify_client_base : 1e0c4ea >
 1e0c9c4:    02 0a             	sp += 4
 1e0c9c6:    56 01             	{pc, r6-r4} = [sp++]			  ## sm.c:1416:1


sm_c1_t1:
 1e0c9c8:    76 01             	[--sp] = {rets, r6-r4}			  ## sm.c:801:0
 1e0c9ca:    f8 0b             	sp += -16			  ## sm.c:801:0
 1e0c9cc:    35 08             	r5 = r3			  ## sm.c:801:0
 1e0c9ce:    16 08             	r6 = r1			  ## sm.c:801:0
 1e0c9d0:    04 08             	r4 = r0			  ## sm.c:801:0
 1e0c9d2:    01 a0             	r1 = sp + 0			  ## sm.c:801:0
 1e0c9d4:    20 08             	r0 = r2			  ## sm.c:811:5
 1e0c9d6:    bf f3 8c f5       	call -5352 <reverse_56 : 1e0b4f2 >			  ## sm.c:811:5
 1e0c9da:    71 80             	r1 += 7			  ## sm.c:812:23
 1e0c9dc:    60 08             	r0 = r6			  ## sm.c:812:5
 1e0c9de:    bf f3 88 f5       	call -5360 <reverse_56 : 1e0b4f2 >			  ## sm.c:812:5
 1e0c9e2:    81 02             	r1 = [sp+32]
 1e0c9e4:    90 02             	r0 = [sp+36]
 1e0c9e6:    d1 f5 0e 00       	b[sp+14] = r1			  ## sm.c:813:12
 1e0c9ea:    d5 f5 0f 00       	b[sp+15] = r5			  ## sm.c:814:12
 1e0c9ee:    01 70             	r1 = 0
 1e0c9f0:    02 fa 00 41       	r2 = b[r4+r1] (u)			  ## sm.c:821:17
 1e0c9f4:    03 a0             	r3 = sp + 0			  ## sm.c:821:17
 1e0c9f6:    03 fa 00 31       	r3 = b[r3+r1] (u)			  ## sm.c:821:24
 1e0c9fa:    d2 b6             	r2 ^= r3			  ## sm.c:821:22
 1e0c9fc:    12 fa 00 01       	b[r0+r1] = r2			  ## sm.c:821:15
 1e0ca00:    11 80             	r1 += 1			  ## sm.c:820:26
 1e0ca02:    01 e1 f5 1f       	if (r1 != 16) goto -22 <sm_c1_t1+0x28 : 1e0c9f0 >			  ## sm.c:820:5
 1e0ca06:    08 0a             	sp += 16
 1e0ca08:    56 01             	{pc, r6-r4} = [sp++]			  ## sm.c:824:1


sm_key_distribution_all_received:
 1e0ca0a:    61 70             	r1 = 6			  ## sm.c:1419:0
 1e0ca0c:    60 ff ff 09 01 00 	if ((r0 & 255) == 0) goto 2 <sm_key_distribution_all_received+0xA : 1e0ca14 >			  ## sm.c:1421:9
 1e0ca12:    51 70             	r1 = 5			  ## sm.c:1421:9
 1e0ca14:    c0 ff c4 09 00 00 	r0 = 2500 <sm_global_info : 9c4 >
 1e0ca1a:    00 40             	r0 = [r0 + 0]
 1e0ca1c:    01 09             	r1 += r0
 1e0ca1e:    01 f9 48 10       	r1 = b[r1 + 72] (u)			  ## sm.c:1097:9
 1e0ca22:    22 fd 01 19       	r2 = r1 & 1			  ## sm.c:1097:17
 1e0ca26:    62 fb 00 29       	r2 = 0 - r2			  ## sm.c:1097:17
 1e0ca2a:    22 fd 03 29       	r2 = r2 & 3			  ## sm.c:1097:9
 1e0ca2e:    03 fd 0c 29       	r3 = r2 | 12			  ## sm.c:1103:15
 1e0ca32:    01 f3 01 10       	if ((r1 & 2) == 0) goto 2 <sm_key_distribution_all_received+0x2E : 1e0ca38 >
 1e0ca36:    32 08             	r2 = r3			  ## sm.c:1101:9
 1e0ca38:    93 61             	r3 = b[r0 + 25] (u)			  ## sm.c:1431:26
 1e0ca3a:    88 c0             	r0 = r1 << 2			  ## sm.c:1105:9
 1e0ca3c:    20 fd 10 09       	r0 = r0 & 16			  ## sm.c:1105:9
 1e0ca40:    e0 fd 00 12       	r1 = r2 | r0			  ## sm.c:1105:9
 1e0ca44:    10 70             	r0 = 1
 1e0ca46:    31 f2 01 00       	if (r1 == r3) goto 2 <sm_key_distribution_all_received+0x42 : 1e0ca4c >
 1e0ca4a:    00 70             	r0 = 0
 1e0ca4c:    20 00             	rts			  ## sm.c:1431:5


sm_key_distribution_handle_all_received:
 1e0ca4e:    78 01             	[--sp] = {rets, r8-r4}			  ## sm.c:1659:0
 1e0ca50:    e2 0b             	sp += -60			  ## sm.c:1659:0
 1e0ca52:    c7 ff c4 09 00 00 	r7 = 2500 <sm_global_info : 9c4 >			  ## sm.c:1659:0
 1e0ca58:    04 4e             	r4 = [r7 + 0]			  ## sm.c:1664:9
 1e0ca5a:    91 69             	r1 = b[r4 + 25] (u)			  ## sm.c:1664:16
 1e0ca5c:    08 08             	r8 = r0			  ## sm.c:1664:16
 1e0ca5e:    02 f3 19 10       	if ((r1 & 4) == 0) goto 50 <sm_key_distribution_handle_all_received+0x46 : 1e0ca94 >
 1e0ca62:    bf f3 a4 fa       	call -2744 <le_device_db_count : 1e0bfae >			  ## sm.c:1666:25
 1e0ca66:    10 e0 15 b0       	ifs (r0 < 1) goto 42 <sm_key_distribution_handle_all_received+0x46 : 1e0ca94 >			  ## sm.c:1666:25
 1e0ca6a:    05 70             	r5 = 0
 1e0ca6c:    01 a2             	r1 = sp + 32
 1e0ca6e:    62 a2             	r2 = sp + 38
 1e0ca70:    c6 a2             	r6 = sp + 44
 1e0ca72:    50 08             	r0 = r5			  ## sm.c:1670:13
 1e0ca74:    63 08             	r3 = r6			  ## sm.c:1670:13
 1e0ca76:    bf f3 a5 fa       	call -2742 <le_device_db_info : 1e0bfc4 >			  ## sm.c:1670:13
 1e0ca7a:    04 4e             	r4 = [r7 + 0]			  ## sm.c:1671:29
 1e0ca7c:    41 fc 0a 01       	r1 = r4 + 266			  ## sm.c:1671:29
 1e0ca80:    02 71             	r2 = 16			  ## sm.c:1671:17
 1e0ca82:    60 08             	r0 = r6			  ## sm.c:1671:17
 1e0ca84:    97 f3 32 d2       	call 3122276 <memcmp : 106eec >			  ## sm.c:1671:17
 1e0ca88:    2e 20             	if (r0 == 0) goto 92 <sm_key_distribution_handle_all_received+0x98 : 1e0cae6 >			  ## sm.c:1671:17
 1e0ca8a:    15 80             	r5 += 1			  ## sm.c:1666:48
 1e0ca8c:    bf f3 8f fa       	call -2786 <le_device_db_count : 1e0bfae >			  ## sm.c:1666:25
 1e0ca90:    05 f2 ec bf       	ifs (r5 < r0) goto -40 <sm_key_distribution_handle_all_received+0x1E : 1e0ca6c >			  ## sm.c:1666:25
 1e0ca94:    f5 07             	r5 = -1
 1e0ca96:    00 f9 2a 41       	r0 = b[r4 + 298] (u)			  ## sm.c:1681:35
 1e0ca9a:    0a 20             	if (r0 == 0) goto 20 <sm_key_distribution_handle_all_received+0x62 : 1e0cab0 >			  ## sm.c:1681:35
 1e0ca9c:    41 fc 2b 01       	r1 = r4 + 299			  ## sm.c:1698:66
 1e0caa0:    42 fc 0a 01       	r2 = r4 + 266			  ## sm.c:1698:90
 1e0caa4:    bf f3 fe fa       	call -2564 <le_device_db_add : 1e0c0a4 >			  ## sm.c:1698:23
 1e0caa8:    05 08             	r5 = r0			  ## sm.c:1698:23
 1e0caaa:    05 e0 24 a0       	ifs (r5 >= 0) goto 72 <sm_key_distribution_handle_all_received+0xA8 : 1e0caf6 >
 1e0caae:    62 18             	goto 196 <sm_key_distribution_handle_all_received+0x126 : 1e0cb74 >
 1e0cab0:    bf f3 7d fa       	call -2822 <le_device_db_count : 1e0bfae >			  ## sm.c:1683:25
 1e0cab4:    10 e0 1a b0       	ifs (r0 < 1) goto 52 <sm_key_distribution_handle_all_received+0x9E : 1e0caec >			  ## sm.c:1683:25
 1e0cab8:    06 70             	r6 = 0
 1e0caba:    41 a1             	r1 = sp + 20
 1e0cabc:    a2 a1             	r2 = sp + 26
 1e0cabe:    03 70             	r3 = 0			  ## sm.c:1686:13
 1e0cac0:    60 08             	r0 = r6			  ## sm.c:1686:13
 1e0cac2:    bf f3 7f fa       	call -2818 <le_device_db_info : 1e0bfc4 >			  ## sm.c:1686:13
 1e0cac6:    50 02             	r0 = [sp+20]			  ## sm.c:1688:17
 1e0cac8:    08 30             	if (r0 != 0) goto 16 <sm_key_distribution_handle_all_received+0x8C : 1e0cada >
 1e0caca:    00 4e             	r0 = [r7 + 0]			  ## sm.c:1688:75
 1e0cacc:    01 fc 2b 01       	r1 = r0 + 299			  ## sm.c:1688:75
 1e0cad0:    a0 a1             	r0 = sp + 26			  ## sm.c:1688:75
 1e0cad2:    62 70             	r2 = 6			  ## sm.c:1688:59
 1e0cad4:    97 f3 0a d2       	call 3122196 <memcmp : 106eec >			  ## sm.c:1688:59
 1e0cad8:    0b 20             	if (r0 == 0) goto 22 <sm_key_distribution_handle_all_received+0xA2 : 1e0caf0 >			  ## sm.c:1688:59
 1e0cada:    16 80             	r6 += 1			  ## sm.c:1683:48
 1e0cadc:    bf f3 67 fa       	call -2866 <le_device_db_count : 1e0bfae >			  ## sm.c:1683:25
 1e0cae0:    06 f2 eb bf       	ifs (r6 < r0) goto -42 <sm_key_distribution_handle_all_received+0x6C : 1e0caba >			  ## sm.c:1683:25
 1e0cae4:    06 18             	goto 12 <sm_key_distribution_handle_all_received+0xA4 : 1e0caf2 >			  ## sm.c:1683:25
 1e0cae6:    f5 ef 06 c0       	ifs (r5 > -1) goto 12 <sm_key_distribution_handle_all_received+0xA8 : 1e0caf6 >
 1e0caea:    d5 1f             	goto -86 <sm_key_distribution_handle_all_received+0x48 : 1e0ca96 >
 1e0caec:    00 70             	r0 = 0
 1e0caee:    d6 1f             	goto -84 <sm_key_distribution_handle_all_received+0x4E : 1e0ca9c >
 1e0caf0:    65 08             	r5 = r6
 1e0caf2:    f5 ef 43 d0       	ifs (r5 <= -1) goto 134 <sm_key_distribution_handle_all_received+0x12E : 1e0cb7c >
 1e0caf6:    00 4e             	r0 = [r7 + 0]			  ## sm.c:1702:79
 1e0caf8:    01 f7 00 80       	r1 = h[r8 + 0] (u)			  ## sm.c:1702:9
 1e0cafc:    02 f9 2a 01       	r2 = b[r0 + 298] (u)			  ## sm.c:1702:9
 1e0cb00:    64 05             	r4 = r5.l (u)			  ## sm.c:1702:9
 1e0cb02:    03 fc 2b 01       	r3 = r0 + 299			  ## sm.c:1702:105
 1e0cb06:    e0 7d             	r0 = 222			  ## sm.c:1702:9
 1e0cb08:    0c 02             	[sp] = r4			  ## sm.c:1702:9
 1e0cb0a:    08 15             	call -1520 <sm_notify_client_index : 1e0c51c >			  ## sm.c:1702:9
 1e0cb0c:    00 4e             	r0 = [r7 + 0]			  ## sm.c:1720:13
 1e0cb0e:    01 f9 30 00       	r1 = b[r0 + 48] (u)			  ## sm.c:1720:20
 1e0cb12:    15 22             	if (r1 == 0) goto 42 <sm_key_distribution_handle_all_received+0xF0 : 1e0cb3e >			  ## sm.c:1720:13
 1e0cb14:    01 70             	r1 = 0
 1e0cb16:    49 02             	[sp+16] = r1			  ## sm.c:1723:13
 1e0cb18:    39 02             	[sp+12] = r1			  ## sm.c:1723:13
 1e0cb1a:    02 f6 20 80       	r2 = [r8 + 32]			  ## sm.c:1725:88
 1e0cb1e:    11 70             	r1 = 1			  ## sm.c:1725:122
 1e0cb20:    32 e0 01 00       	if (r2 == 3) goto 2 <sm_key_distribution_handle_all_received+0xD8 : 1e0cb26 >			  ## sm.c:1725:122
 1e0cb24:    01 70             	r1 = 0			  ## sm.c:1725:122
 1e0cb26:    04 f9 15 80       	r4 = b[r8 + 21] (u)			  ## sm.c:1724:83
 1e0cb2a:    02 f9 14 80       	r2 = b[r8 + 20] (u)			  ## sm.c:1725:50
 1e0cb2e:    29 02             	[sp+8] = r1			  ## sm.c:1724:13
 1e0cb30:    11 d1             	r1 = r2 >> 4			  ## sm.c:1725:50
 1e0cb32:    19 02             	[sp+4] = r1			  ## sm.c:1724:13
 1e0cb34:    03 fc 9d 00       	r3 = r0 + 157			  ## sm.c:1724:68
 1e0cb38:    c2 a0             	r2 = sp + 12			  ## sm.c:1724:68
 1e0cb3a:    01 70             	r1 = 0			  ## sm.c:1724:13
 1e0cb3c:    17 18             	goto 46 <sm_key_distribution_handle_all_received+0x11E : 1e0cb6c >			  ## sm.c:1724:13
 1e0cb3e:    91 61             	r1 = b[r0 + 25] (u)			  ## sm.c:1729:26
 1e0cb40:    21 fd 03 19       	r1 = r1 & 3			  ## sm.c:1730:18
 1e0cb44:    31 e0 16 10       	if (r1 != 3) goto 44 <sm_key_distribution_handle_all_received+0x126 : 1e0cb74 >			  ## sm.c:1730:18
 1e0cb48:    01 f6 20 80       	r1 = [r8 + 32]			  ## sm.c:1733:128
 1e0cb4c:    12 70             	r2 = 1			  ## sm.c:1733:162
 1e0cb4e:    31 e0 01 00       	if (r1 == 3) goto 2 <sm_key_distribution_handle_all_received+0x106 : 1e0cb54 >			  ## sm.c:1733:162
 1e0cb52:    02 70             	r2 = 0
 1e0cb54:    00 fc f0 00       	r0 = r0 + 240
 1e0cb58:    01 50             	r1 = h[r0 + 0] (u)			  ## sm.c:1732:13
 1e0cb5a:    04 f9 15 80       	r4 = b[r8 + 21] (u)			  ## sm.c:1733:41
 1e0cb5e:    03 f9 14 80       	r3 = b[r8 + 20] (u)			  ## sm.c:1733:90
 1e0cb62:    2a 02             	[sp+8] = r2			  ## sm.c:1732:13
 1e0cb64:    1a d1             	r2 = r3 >> 4			  ## sm.c:1733:90
 1e0cb66:    1a 02             	[sp+4] = r2			  ## sm.c:1732:13
 1e0cb68:    22 90             	r2 = r0 + 2			  ## sm.c:1732:75
 1e0cb6a:    a3 90             	r3 = r0 + 10			  ## sm.c:1732:96
 1e0cb6c:    0c 02             	[sp] = r4
 1e0cb6e:    50 08             	r0 = r5
 1e0cb70:    bf f3 b0 fa       	call -2720 <le_device_db_encryption_set : 1e0c0d4 >
 1e0cb74:    15 f6 30 80       	[r8 + 48] = r5			  ## sm.c:1739:29
 1e0cb78:    1e 0a             	sp += 60			  ## sm.c:1739:29
 1e0cb7a:    58 01             	{pc, r8-r4} = [sp++]			  ## sm.c:1740:1
 1e0cb7c:    04 4e             	r4 = [r7 + 0]
 1e0cb7e:    00 f9 2a 41       	r0 = b[r4 + 298] (u)
 1e0cb82:    8c 1f             	goto -232 <sm_key_distribution_handle_all_received+0x4E : 1e0ca9c >


sm_run:
 1e0cb84:    7f 01             	[--sp] = {rets, r15-r4}			  ## sm.c:2359:0
 1e0cb86:    42 0b             	sp += -380			  ## sm.c:2359:0
 1e0cb88:    cf ff c4 09 00 00 	r15 = 2500 <sm_global_info : 9c4 >			  ## sm.c:2359:0
 1e0cb8e:    05 f6 00 f0       	r5 = [r15 + 0]			  ## sm.c:2380:13
 1e0cb92:    56 fc 44 01       	r6 = r5 + 324			  ## sm.c:2380:13
 1e0cb96:    00 4c             	r0 = [r6 + 0]			  ## sm.c:2380:21
 1e0cb98:    30 e0 08 00       	if (r0 == 3) goto 16 <sm_run+0x28 : 1e0cbac >			  ## sm.c:2380:5
 1e0cb9c:    10 e0 08 10       	if (r0 != 1) goto 16 <sm_run+0x2C : 1e0cbb0 >
 1e0cba0:    b0 4c             	r0 = [r6 + 44]			  ## sm.c:2383:21
 1e0cba2:    06 30             	if (r0 != 0) goto 12 <sm_run+0x2C : 1e0cbb0 >			  ## sm.c:2383:21
 1e0cba4:    e4 fb 54 01       	r4 = sp + 340
 1e0cba8:    10 70             	r0 = 1			  ## sm.c:2386:13
 1e0cbaa:    76 18             	goto 236 <sm_run+0x114 : 1e0cc98 >			  ## sm.c:2386:13
 1e0cbac:    b0 4c             	r0 = [r6 + 44]			  ## sm.c:2394:21
 1e0cbae:    71 20             	if (r0 == 0) goto 226 <sm_run+0x10E : 1e0cc92 >			  ## sm.c:2394:21
 1e0cbb0:    10 4c             	r0 = [r6 + 4]			  ## sm.c:2421:21
 1e0cbb2:    60 e0 0c 00       	if (r0 == 6) goto 24 <sm_run+0x4A : 1e0cbce >			  ## sm.c:2421:5
 1e0cbb6:    40 e0 11 00       	if (r0 == 4) goto 34 <sm_run+0x58 : 1e0cbdc >
 1e0cbba:    20 e0 11 10       	if (r0 != 2) goto 34 <sm_run+0x5C : 1e0cbe0 >
 1e0cbbe:    c1 f4 03 69       	[r6 + 4] = 3			  ## sm.c:1175:23
 1e0cbc2:    cd f4 00 69       	[r6 + 52] = 0			  ## sm.c:721:31
 1e0cbc6:    80 f3 21 8c       	call 71746 <ll_hci_get_le_rand : 1e1e40c >			  ## sm.c:723:5
 1e0cbca:    c0 f3 49 05       	goto 2706 <.GJTIE731_0_0_+0x624 : 1e0d660 >			  ## sm.c:723:5
 1e0cbce:    c1 f4 01 69       	[r6 + 4] = 1			  ## sm.c:2438:27
 1e0cbd2:    80 9c             	r0 = r6 + 8			  ## sm.c:2440:35
 1e0cbd4:    80 f3 22 8c       	call 71748 <ll_hci_set_random_address : 1e1e41c >			  ## sm.c:2440:9
 1e0cbd8:    c0 f3 42 05       	goto 2692 <.GJTIE731_0_0_+0x624 : 1e0d660 >			  ## sm.c:2440:9
 1e0cbdc:    b0 4c             	r0 = [r6 + 44]			  ## sm.c:2428:21
 1e0cbde:    8a 20             	if (r0 == 0) goto 276 <sm_run+0x170 : 1e0ccf4 >			  ## sm.c:2428:21
 1e0cbe0:    90 4c             	r0 = [r6 + 36]			  ## sm.c:1123:20
 1e0cbe2:    2e 30             	if (r0 != 0) goto 92 <sm_run+0xBC : 1e0cc40 >			  ## sm.c:1123:20
 1e0cbe4:    e0 fb 64 01       	r0 = sp + 356
 1e0cbe8:    bf f3 02 e5       	call -13820 <hci_connections_get_iterator : 1e095f0 >			  ## sm.c:2466:9
 1e0cbec:    e0 fb 64 01       	r0 = sp + 356
 1e0cbf0:    bf f3 6c d8       	call -20264 <btstack_linked_list_iterator_has_next : 1e07ccc >			  ## sm.c:2467:16
 1e0cbf4:    25 20             	if (r0 == 0) goto 74 <sm_run+0xBC : 1e0cc40 >
 1e0cbf6:    e0 fb 64 01       	r0 = sp + 356
 1e0cbfa:    bf f3 75 d8       	call -20246 <btstack_linked_list_iterator_next : 1e07ce8 >			  ## sm.c:2468:75
 1e0cbfe:    04 08             	r4 = r0			  ## sm.c:2468:75
 1e0cc00:    30 49             	r0 = [r4 + 76]			  ## sm.c:2470:32
 1e0cc02:    10 e0 f3 1f       	if (r0 != 1) goto -26 <sm_run+0x68 : 1e0cbec >			  ## sm.c:2470:32
 1e0cc06:    08 f7 3c 40       	r8 = h[r4 + 60] (u)			  ## sm.c:1133:5
 1e0cc0a:    05 f9 41 40       	r5 = b[r4 + 65] (u)			  ## sm.c:2472:67
 1e0cc0e:    90 9d             	r0 = r6 + 25			  ## sm.c:1128:5
 1e0cc10:    47 fc 42 00       	r7 = r4 + 66			  ## sm.c:2472:112
 1e0cc14:    62 70             	r2 = 6			  ## sm.c:1128:5
 1e0cc16:    71 08             	r1 = r7			  ## sm.c:1128:5
 1e0cc18:    97 f3 64 d1       	call 3121864 <memcpy : 106ee4 >			  ## sm.c:1128:5
 1e0cc1c:    8d 6d             	b[r6 + 24] = r5			  ## sm.c:1129:45
 1e0cc1e:    c4 f4 00 69       	[r6 + 16] = 0			  ## sm.c:1130:40
 1e0cc22:    29 70             	r9 = 2			  ## sm.c:1131:40
 1e0cc24:    19 f6 24 60       	[r6 + 36] = r9			  ## sm.c:1131:40
 1e0cc28:    40 fc 3c 00       	r0 = r4 + 60			  ## sm.c:2469:66
 1e0cc2c:    88 4c             	[r6 + 32] = r0			  ## sm.c:1132:43
 1e0cc2e:    80 7d             	r0 = 216			  ## sm.c:1133:5
 1e0cc30:    81 08             	r1 = r8			  ## sm.c:1133:5
 1e0cc32:    52 08             	r2 = r5			  ## sm.c:1133:5
 1e0cc34:    73 08             	r3 = r7			  ## sm.c:1133:5
 1e0cc36:    59 14             	call -1870 <sm_notify_client_base : 1e0c4ea >			  ## sm.c:1133:5
 1e0cc38:    19 f6 4c 40       	[r4 + 76] = r9			  ## sm.c:2473:52
 1e0cc3c:    05 f6 00 f0       	r5 = [r15 + 0]			  ## sm.c:2473:52
 1e0cc40:    57 fc 54 01       	r7 = r5 + 340
 1e0cc44:    50 4e             	r0 = [r7 + 20]			  ## sm.c:1123:20
 1e0cc46:    35 20             	if (r0 == 0) goto 106 <sm_run+0x12E : 1e0ccb2 >			  ## sm.c:1123:20
 1e0cc48:    04 f6 54 51       	r4 = [r5 + 340]			  ## sm.c:2492:24
 1e0cc4c:    1d 18             	goto 58 <sm_run+0x104 : 1e0cc88 >			  ## sm.c:2492:24
 1e0cc4e:    e1 fb 30 01       	r1 = sp + 304
 1e0cc52:    e2 fb 2a 01       	r2 = sp + 298
 1e0cc56:    e3 fb 1a 01       	r3 = sp + 282
 1e0cc5a:    40 08             	r0 = r4			  ## sm.c:2496:13
 1e0cc5c:    bf f3 b2 f9       	call -3228 <le_device_db_info : 1e0bfc4 >			  ## sm.c:2496:13
 1e0cc60:    05 f6 00 f0       	r5 = [r15 + 0]			  ## sm.c:2499:17
 1e0cc64:    56 fc 54 01       	r6 = r5 + 340			  ## sm.c:2499:17
 1e0cc68:    84 6c             	r4 = b[r6 + 8] (u)			  ## sm.c:2499:25
 1e0cc6a:    00 f5 30 01       	r0 = [sp+304]			  ## sm.c:2499:60
 1e0cc6e:    04 f2 07 10       	if (r4 != r0) goto 14 <sm_run+0xFC : 1e0cc80 >
 1e0cc72:    91 9c             	r1 = r6 + 9			  ## sm.c:2499:86
 1e0cc74:    e0 fb 2a 01       	r0 = sp + 298			  ## sm.c:2499:86
 1e0cc78:    62 70             	r2 = 6			  ## sm.c:2499:73
 1e0cc7a:    97 f3 37 d1       	call 3121774 <memcmp : 106eec >			  ## sm.c:2499:73
 1e0cc7e:    6d 20             	if (r0 == 0) goto 218 <sm_run+0x1D6 : 1e0cd5a >			  ## sm.c:2499:73
 1e0cc80:    53 38             	if (r4 != 0) goto 166 <sm_run+0x1A4 : 1e0cd28 >
 1e0cc82:    00 4c             	r0 = [r6 + 0]			  ## sm.c:2506:51
 1e0cc84:    14 90             	r4 = r0 + 1			  ## sm.c:2506:51
 1e0cc86:    0c 4c             	[r6 + 0] = r4			  ## sm.c:2506:51
 1e0cc88:    bf f3 91 f9       	call -3294 <le_device_db_count : 1e0bfae >
 1e0cc8c:    04 f2 df bf       	ifs (r4 < r0) goto -66 <sm_run+0xCA : 1e0cc4e >
 1e0cc90:    6a 18             	goto 212 <sm_run+0x1E2 : 1e0cd66 >
 1e0cc92:    e4 fb 44 01       	r4 = sp + 324
 1e0cc96:    30 70             	r0 = 3			  ## sm.c:2397:13
 1e0cc98:    01 70             	r1 = 0
 1e0cc9a:    42 08             	r2 = r4
 1e0cc9c:    bf f3 db fb       	call -2122 <sm_d1_d_prime : 1e0c456 >
 1e0cca0:    00 f6 00 f0       	r0 = [r15 + 0]
 1e0cca4:    00 fc 44 01       	r0 = r0 + 324
 1e0cca8:    01 40             	r1 = [r0 + 0]
 1e0ccaa:    11 80             	r1 += 1
 1e0ccac:    51 f6 6c 00       	[r0 ++= 108] = r1
 1e0ccb0:    35 18             	goto 106 <sm_run+0x198 : 1e0cd1c >
 1e0ccb2:    63 4e             	r3 = [r7 + 24]
 1e0ccb4:    30 08             	r0 = r3			  ## sm.c:2481:14
 1e0ccb6:    bf f3 87 f3       	call -6386 <btstack_linked_list_empty : 1e0b3c8 >			  ## sm.c:2481:14
 1e0ccba:    5d 30             	if (r0 != 0) goto 186 <sm_run+0x1F2 : 1e0cd76 >			  ## sm.c:2481:14
 1e0ccbc:    80 9f             	r0 = r7 + 24			  ## sm.c:2481:14
 1e0ccbe:    31 08             	r1 = r3			  ## sm.c:2483:13
 1e0ccc0:    bf f3 b5 d9       	call -19606 <btstack_linked_list_remove : 1e0802e >			  ## sm.c:2483:13
 1e0ccc4:    c4 66             	r4 = b[r3 + 12] (u)			  ## sm.c:2484:55
 1e0ccc6:    90 9e             	r0 = r7 + 9			  ## sm.c:1128:5
 1e0ccc8:    46 96             	r6 = r3 + 4			  ## sm.c:2484:79
 1e0ccca:    62 70             	r2 = 6			  ## sm.c:1128:5
 1e0cccc:    61 08             	r1 = r6			  ## sm.c:1128:5
 1e0ccce:    97 f3 09 d1       	call 3121682 <memcpy : 106ee4 >			  ## sm.c:1128:5
 1e0ccd2:    8c 6e             	b[r7 + 8] = r4			  ## sm.c:1129:45
 1e0ccd4:    00 70             	r0 = 0			  ## sm.c:1129:45
 1e0ccd6:    08 4e             	[r7 + 0] = r0			  ## sm.c:1130:40
 1e0ccd8:    c5 f4 01 79       	[r7 + 20] = 1			  ## sm.c:1131:40
 1e0ccdc:    48 4e             	[r7 + 16] = r0			  ## sm.c:1132:43
 1e0ccde:    80 7d             	r0 = 216			  ## sm.c:1133:5
 1e0cce0:    01 70             	r1 = 0			  ## sm.c:1133:5
 1e0cce2:    42 08             	r2 = r4			  ## sm.c:1133:5
 1e0cce4:    63 08             	r3 = r6			  ## sm.c:1133:5
 1e0cce6:    01 14             	call -2046 <sm_notify_client_base : 1e0c4ea >			  ## sm.c:1133:5
 1e0cce8:    05 f6 00 f0       	r5 = [r15 + 0]			  ## sm.c:1133:5
 1e0ccec:    00 f6 68 51       	r0 = [r5 + 360]			  ## sm.c:1133:5
 1e0ccf0:    ab 31             	if (r0 != 0) goto -170 <sm_run+0xC4 : 1e0cc48 >			  ## sm.c:1133:5
 1e0ccf2:    41 18             	goto 130 <sm_run+0x1F2 : 1e0cd76 >			  ## sm.c:1133:5
 1e0ccf4:    00 70             	r0 = 0
 1e0ccf6:    d0 f5 40 01       	b[sp+320] = r0			  ## sm.c:775:5
 1e0ccfa:    10 f5 3c 01       	[sp+316] = r0			  ## sm.c:775:5
 1e0ccfe:    10 f5 38 01       	[sp+312] = r0			  ## sm.c:775:5
 1e0cd02:    10 f5 34 01       	[sp+308] = r0			  ## sm.c:775:5
 1e0cd06:    e4 fb 34 01       	r4 = sp + 308			  ## sm.c:775:5
 1e0cd0a:    d0 98             	r0 = r4 + 13			  ## sm.c:776:13
 1e0cd0c:    81 9c             	r1 = r6 + 8			  ## sm.c:2430:27
 1e0cd0e:    32 70             	r2 = 3			  ## sm.c:776:5
 1e0cd10:    97 f3 e8 d0       	call 3121616 <memcpy : 106ee4 >			  ## sm.c:776:5
 1e0cd14:    c1 f4 05 69       	[r6 + 4] = 5			  ## sm.c:1175:23
 1e0cd18:    50 fc d0 01       	r0 = r5 + 464			  ## sm.c:2432:29
 1e0cd1c:    02 70             	r2 = 0
 1e0cd1e:    41 08             	r1 = r4
 1e0cd20:    bf f3 ac fb       	call -2216 <sm_aes128_start : 1e0c47c >
 1e0cd24:    c0 f3 9c 04       	goto 2360 <.GJTIE731_0_0_+0x624 : 1e0d660 >
 1e0cd28:    70 4c             	r0 = [r6 + 28]			  ## sm.c:2510:25
 1e0cd2a:    10 e0 1a 00       	if (r0 == 1) goto 52 <sm_run+0x1DE : 1e0cd62 >			  ## sm.c:2510:25
 1e0cd2e:    00 70             	r0 = 0
 1e0cd30:    d0 f5 14 01       	b[sp+276] = r0			  ## sm.c:775:5
 1e0cd34:    10 f5 10 01       	[sp+272] = r0			  ## sm.c:775:5
 1e0cd38:    10 f5 0c 01       	[sp+268] = r0			  ## sm.c:775:5
 1e0cd3c:    10 f5 08 01       	[sp+264] = r0			  ## sm.c:775:5
 1e0cd40:    e4 fb 08 01       	r4 = sp + 264			  ## sm.c:775:5
 1e0cd44:    d0 98             	r0 = r4 + 13			  ## sm.c:776:13
 1e0cd46:    91 9c             	r1 = r6 + 9			  ## sm.c:2518:27
 1e0cd48:    32 70             	r2 = 3			  ## sm.c:776:5
 1e0cd4a:    97 f3 cb d0       	call 3121558 <memcpy : 106ee4 >			  ## sm.c:776:5
 1e0cd4e:    c1 f4 01 69       	[r6 + 4] = 1			  ## sm.c:2519:65
 1e0cd52:    42 4c             	r2 = [r6 + 16]			  ## sm.c:2520:51
 1e0cd54:    e0 fb 1a 01       	r0 = sp + 282			  ## sm.c:2520:51
 1e0cd58:    e2 1f             	goto -60 <sm_run+0x19A : 1e0cd1e >			  ## sm.c:2520:51
 1e0cd5a:    00 70             	r0 = 0			  ## sm.c:2501:17
 1e0cd5c:    0c 14             	call -2024 <sm_address_resolution_handle_event : 1e0c576 >			  ## sm.c:2501:17
 1e0cd5e:    05 f6 00 f0       	r5 = [r15 + 0]			  ## sm.c:2501:17
 1e0cd62:    04 f6 54 51       	r4 = [r5 + 340]
 1e0cd66:    bf f3 22 f9       	call -3516 <le_device_db_count : 1e0bfae >			  ## sm.c:2524:51
 1e0cd6a:    04 f2 04 b0       	ifs (r4 < r0) goto 8 <sm_run+0x1F2 : 1e0cd76 >			  ## sm.c:2524:51
 1e0cd6e:    10 70             	r0 = 1			  ## sm.c:2526:13
 1e0cd70:    02 14             	call -2044 <sm_address_resolution_handle_event : 1e0c576 >			  ## sm.c:2526:13
 1e0cd72:    05 f6 00 f0       	r5 = [r15 + 0]			  ## sm.c:2526:13
 1e0cd76:    e0 fb 64 01       	r0 = sp + 356
 1e0cd7a:    bf f3 39 e4       	call -14222 <hci_connections_get_iterator : 1e095f0 >			  ## sm.c:2531:5
 1e0cd7e:    ce ff ff ff 00 00 	r14 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >
 1e0cd84:    00 f7 90 51       	r0 = h[r5 + 400] (u)			  ## sm.c:2532:21
 1e0cd88:    e0 f2 1b 10       	if (r0 != r14) goto 54 <sm_run+0x23E : 1e0cdc2 >			  ## sm.c:2532:21
 1e0cd8c:    e0 fb 64 01       	r0 = sp + 356
 1e0cd90:    bf f3 9c d7       	call -20680 <btstack_linked_list_iterator_has_next : 1e07ccc >			  ## sm.c:2532:79
 1e0cd94:    16 20             	if (r0 == 0) goto 44 <sm_run+0x23E : 1e0cdc2 >
 1e0cd96:    e0 fb 64 01       	r0 = sp + 356
 1e0cd9a:    bf f3 a5 d7       	call -20662 <btstack_linked_list_iterator_next : 1e07ce8 >			  ## sm.c:2533:71
 1e0cd9e:    04 08             	r4 = r0			  ## sm.c:2533:71
 1e0cda0:    20 49             	r0 = [r4 + 72]			  ## sm.c:2536:32
 1e0cda2:    70 e2 ef 1f       	if (r0 != 39) goto -34 <sm_run+0x200 : 1e0cd84 >			  ## sm.c:2536:32
 1e0cda6:    d2 f4 23 49       	[r4 + 72] = 35			  ## sm.c:2539:44
 1e0cdaa:    e0 59             	r0 = h[r4 + 60] (u)			  ## sm.c:2541:13
 1e0cdac:    80 f3 3d 8b       	call 71290 <ll_hci_long_term_key_request_nagative_reply : 1e1e42a >			  ## sm.c:2541:13
 1e0cdb0:    01 f9 41 40       	r1 = b[r4 + 65] (u)			  ## sm.c:2543:13
 1e0cdb4:    e0 59             	r0 = h[r4 + 60] (u)			  ## sm.c:2543:13
 1e0cdb6:    42 fc 42 00       	r2 = r4 + 66			  ## sm.c:2544:38
 1e0cdba:    23 70             	r3 = 2			  ## sm.c:2543:13
 1e0cdbc:    4b 14             	call -1898 <sm_notify_client_process : 1e0c654 >			  ## sm.c:2543:13
 1e0cdbe:    c0 f3 4f 04       	goto 2206 <.GJTIE731_0_0_+0x624 : 1e0d660 >			  ## sm.c:2543:13
 1e0cdc2:    10 ad             	r0 = sp + 209
 1e0cdc4:    18 90             	r8 = r0 + 1
 1e0cdc6:    c9 ff 86 64 e1 01 	r9 = 31548550 <sm_run.buffer : 1e16486 >
 1e0cdcc:    0a 70             	r10 = 0
 1e0cdce:    fb 7f             	r11 = 255
 1e0cdd0:    e0 fb 64 01       	r0 = sp + 356
 1e0cdd4:    bf f3 0c e4       	call -14312 <hci_connections_get_iterator : 1e095f0 >			  ## sm.c:2576:9
 1e0cdd8:    ca 18             	goto 404 <sm_run+0x3EA : 1e0cf6e >
 1e0cdda:    e0 fb 64 01       	r0 = sp + 356
 1e0cdde:    bf f3 75 d7       	call -20758 <btstack_linked_list_iterator_has_next : 1e07ccc >			  ## sm.c:2577:83
 1e0cde2:    00 e0 3d 04       	if (r0 == 0) goto 2170 <.GJTIE731_0_0_+0x624 : 1e0d660 >
 1e0cde6:    e0 fb 64 01       	r0 = sp + 356
 1e0cdea:    bf f3 7d d7       	call -20742 <btstack_linked_list_iterator_next : 1e07ce8 >			  ## sm.c:2578:75
 1e0cdee:    07 08             	r7 = r0			  ## sm.c:2578:75
 1e0cdf0:    20 4f             	r0 = [r7 + 72]			  ## sm.c:2585:36
 1e0cdf2:    74 fc 3c 00       	r4 = r7 + 60			  ## sm.c:2579:65
 1e0cdf6:    5c fc ac 00       	r12 = r5 + 172			  ## sm.c:2579:65
 1e0cdfa:    80 e2 34 c0       	ifs (r0 > 40) goto 104 <sm_run+0x2E2 : 1e0ce66 >			  ## sm.c:2579:65
 1e0cdfe:    10 e0 a2 00       	if (r0 == 1) goto 324 <sm_run+0x3C2 : 1e0cf46 >
 1e0ce02:    40 e2 48 00       	if (r0 == 36) goto 144 <sm_run+0x312 : 1e0ce96 >
 1e0ce06:    50 e2 a1 10       	if (r0 != 37) goto 322 <sm_run+0x3C8 : 1e0cf4c >
 1e0ce0a:    1a f9 01 c0       	b[r12 + 1] = r10			  ## sm.c:1472:26
 1e0ce0e:    1b f9 16 50       	b[r5 + 22] = r11			  ## sm.c:1473:37
 1e0ce12:    50 fc 20 00       	r0 = r5 + 32			  ## sm.c:618:5
 1e0ce16:    01 70             	r1 = 0			  ## sm.c:619:25
 1e0ce18:    02 71             	r2 = 16			  ## sm.c:619:25
 1e0ce1a:    97 f3 69 d0       	call 3121362 <memset : 106ef0 >			  ## sm.c:619:25
 1e0ce1e:    60 59             	r0 = h[r4 + 44] (u)			  ## sm.c:2345:5
 1e0ce20:    51 59             	r1 = h[r4 + 42] (u)			  ## sm.c:2345:5
 1e0ce22:    42 59             	r2 = h[r4 + 40] (u)			  ## sm.c:2345:5
 1e0ce24:    33 59             	r3 = h[r4 + 38] (u)			  ## sm.c:2345:5
 1e0ce26:    d0 fd 80 10       	r1 <= insert(r0, p:16, l:16)			  ## sm.c:2345:5
 1e0ce2a:    11 f7 0c c0       	h[r12 + 12] = r1			  ## sm.c:2345:5
 1e0ce2e:    d0 fd 80 32       	r3 <= insert(r2, p:16, l:16)			  ## sm.c:2345:5
 1e0ce32:    13 f7 08 c0       	h[r12 + 8] = r3			  ## sm.c:2345:5
 1e0ce36:    08 d4             	r0 = r1 >> 16			  ## sm.c:2345:5
 1e0ce38:    10 f7 0e c0       	h[r12 + 14] = r0			  ## sm.c:2345:5
 1e0ce3c:    18 d4             	r0 = r3 >> 16			  ## sm.c:2345:5
 1e0ce3e:    10 f7 0a c0       	h[r12 + 10] = r0			  ## sm.c:2345:5
 1e0ce42:    20 59             	r0 = h[r4 + 36] (u)			  ## sm.c:2346:43
 1e0ce44:    10 f7 06 c0       	h[r12 + 6] = r0			  ## sm.c:2346:26
 1e0ce48:    84 fd c0 01       	r0 = uextra(r1, p:24, l:4)			  ## sm.c:2349:77
 1e0ce4c:    10 80             	r0 += 1			  ## sm.c:2349:85
 1e0ce4e:    58 69             	b[r4 + 21] = r0			  ## sm.c:2349:50
 1e0ce50:    00 f9 0f c0       	r0 = b[r12 + 15] (u)			  ## sm.c:2351:51
 1e0ce54:    41 69             	r1 = b[r4 + 20] (u)			  ## sm.c:2351:48
 1e0ce56:    20 fd 10 09       	r0 = r0 & 16			  ## sm.c:2351:48
 1e0ce5a:    21 fd 0f 19       	r1 = r1 & 15			  ## sm.c:2351:48
 1e0ce5e:    50 b2             	r0 |= r1			  ## sm.c:2351:48
 1e0ce60:    48 69             	b[r4 + 20] = r0			  ## sm.c:2351:48
 1e0ce62:    f0 72             	r0 = 47			  ## sm.c:2351:48
 1e0ce64:    6f 18             	goto 222 <sm_run+0x3C0 : 1e0cf44 >			  ## sm.c:2351:48
 1e0ce66:    90 e2 22 00       	if (r0 == 41) goto 68 <sm_run+0x32A : 1e0ceae >
 1e0ce6a:    50 e3 3b 00       	if (r0 == 53) goto 118 <sm_run+0x360 : 1e0cee4 >
 1e0ce6e:    80 e3 6d 10       	if (r0 != 56) goto 218 <sm_run+0x3C8 : 1e0cf4c >
 1e0ce72:    1a f9 01 c0       	b[r12 + 1] = r10			  ## sm.c:1472:26
 1e0ce76:    1b f9 16 50       	b[r5 + 22] = r11			  ## sm.c:1473:37
 1e0ce7a:    50 fc 20 00       	r0 = r5 + 32			  ## sm.c:618:5
 1e0ce7e:    01 70             	r1 = 0			  ## sm.c:619:25
 1e0ce80:    02 71             	r2 = 16			  ## sm.c:619:25
 1e0ce82:    97 f3 35 d0       	call 3121258 <memset : 106ef0 >			  ## sm.c:619:25
 1e0ce86:    40 08             	r0 = r4			  ## sm.c:2638:17
 1e0ce88:    03 14             	call -2042 <sm_init_setup : 1e0c690 >			  ## sm.c:2638:17
 1e0ce8a:    40 08             	r0 = r4			  ## sm.c:2639:17
 1e0ce8c:    eb 14             	call -1578 <sm_timeout_start : 1e0c864 >			  ## sm.c:2639:17
 1e0ce8e:    05 f6 00 f0       	r5 = [r15 + 0]			  ## sm.c:2639:17
 1e0ce92:    90 73             	r0 = 57			  ## sm.c:2639:17
 1e0ce94:    57 18             	goto 174 <sm_run+0x3C0 : 1e0cf44 >			  ## sm.c:2639:17
 1e0ce96:    e0 5f             	r0 = h[r7 + 60] (u)			  ## sm.c:2589:21
 1e0ce98:    bf f3 9b f2       	call -6858 <l2cap_can_send_fixed_channel_packet_now : 1e0b3d2 >			  ## sm.c:2589:21
 1e0ce9c:    5a 20             	if (r0 == 0) goto 180 <sm_run+0x3CE : 1e0cf52 >			  ## sm.c:2589:21
 1e0ce9e:    c3 f4 28 49       	[r4 + 12] = 40			  ## sm.c:2591:52
 1e0cea2:    00 58             	r0 = h[r4 + 0] (u)			  ## sm.c:2592:21
 1e0cea4:    22 70             	r2 = 2			  ## sm.c:2592:21
 1e0cea6:    91 08             	r1 = r9			  ## sm.c:2592:21
 1e0cea8:    bf f3 bc f2       	call -6792 <l2cap_send_connectionless : 1e0b424 >			  ## sm.c:2592:21
 1e0ceac:    4f 18             	goto 158 <sm_run+0x3C8 : 1e0cf4c >			  ## sm.c:2592:21
 1e0ceae:    1a f9 01 c0       	b[r12 + 1] = r10			  ## sm.c:1472:26
 1e0ceb2:    1b f9 16 50       	b[r5 + 22] = r11			  ## sm.c:1473:37
 1e0ceb6:    50 fc 20 00       	r0 = r5 + 32			  ## sm.c:618:5
 1e0ceba:    01 70             	r1 = 0			  ## sm.c:619:25
 1e0cebc:    02 71             	r2 = 16			  ## sm.c:619:25
 1e0cebe:    97 f3 17 d0       	call 3121198 <memset : 106ef0 >			  ## sm.c:619:25
 1e0cec2:    40 08             	r0 = r4			  ## sm.c:2602:17
 1e0cec4:    bf f3 e4 fb       	call -2104 <sm_init_setup : 1e0c690 >			  ## sm.c:2602:17
 1e0cec8:    05 f6 00 f0       	r5 = [r15 + 0]			  ## sm.c:2604:25
 1e0cecc:    61 99             	r1 = r4 + 22			  ## sm.c:2604:17
 1e0cece:    50 fc 41 00       	r0 = r5 + 65			  ## sm.c:2604:17
 1e0ced2:    72 70             	r2 = 7			  ## sm.c:2604:17
 1e0ced4:    97 f3 06 d0       	call 3121164 <memcpy : 106ee4 >			  ## sm.c:2604:17
 1e0ced8:    40 08             	r0 = r4			  ## sm.c:2605:23
 1e0ceda:    3a 14             	call -1932 <sm_stk_generation_init : 1e0c750 >			  ## sm.c:2605:23
 1e0cedc:    3e 20             	if (r0 == 0) goto 124 <sm_run+0x3D6 : 1e0cf5a >			  ## sm.c:2606:21
 1e0cede:    48 6b             	b[r5 + 20] = r0			  ## sm.c:2607:53
 1e0cee0:    10 70             	r0 = 1			  ## sm.c:2607:53
 1e0cee2:    30 18             	goto 96 <sm_run+0x3C0 : 1e0cf44 >
 1e0cee4:    1a f9 01 c0       	b[r12 + 1] = r10			  ## sm.c:1472:26
 1e0cee8:    1b f9 16 50       	b[r5 + 22] = r11			  ## sm.c:1473:37
 1e0ceec:    50 fc 20 00       	r0 = r5 + 32			  ## sm.c:618:5
 1e0cef0:    01 70             	r1 = 0			  ## sm.c:619:25
 1e0cef2:    02 71             	r2 = 16			  ## sm.c:619:25
 1e0cef4:    97 f3 fc cf       	call 3121144 <memset : 106ef0 >			  ## sm.c:619:25
 1e0cef8:    c0 48             	r0 = [r4 + 48]			  ## sm.c:2327:24
 1e0cefa:    00 e0 22 b0       	ifs (r0 < 0) goto 68 <sm_run+0x3BE : 1e0cf42 >			  ## sm.c:2327:24
 1e0cefe:    e1 fb 70 01       	r1 = sp + 368
 1e0cf02:    29 02             	[sp+8] = r1			  ## sm.c:2333:5
 1e0cf04:    e1 fb 74 01       	r1 = sp + 372			  ## sm.c:2333:5
 1e0cf08:    19 02             	[sp+4] = r1			  ## sm.c:2333:5
 1e0cf0a:    e6 fb 78 01       	r6 = sp + 376			  ## sm.c:2333:5
 1e0cf0e:    c1 fc 44 00       	r1 = r12 + 68			  ## sm.c:2333:72
 1e0cf12:    c2 fc 46 00       	r2 = r12 + 70			  ## sm.c:2333:86
 1e0cf16:    c3 fc 4e 00       	r3 = r12 + 78			  ## sm.c:2333:107
 1e0cf1a:    0e 02             	[sp] = r6			  ## sm.c:2333:5
 1e0cf1c:    bf f3 82 f8       	call -3836 <le_device_db_encryption_get : 1e0c024 >			  ## sm.c:2333:5
 1e0cf20:    00 f5 78 01       	r0 = [sp+376]			  ## sm.c:2336:52
 1e0cf24:    58 69             	b[r4 + 21] = r0			  ## sm.c:2336:50
 1e0cf26:    40 69             	r0 = b[r4 + 20] (u)			  ## sm.c:2337:48
 1e0cf28:    c1 f5 74 01       	r1 = b[sp+372] (u)			  ## sm.c:2337:50
 1e0cf2c:    20 fd 0f 09       	r0 = r0 & 15			  ## sm.c:2337:48
 1e0cf30:    dc fd 20 01       	r0 <= insert(r1, p:4, l:28)			  ## sm.c:2337:48
 1e0cf34:    48 69             	b[r4 + 20] = r0			  ## sm.c:2337:48
 1e0cf36:    01 f5 70 01       	r1 = [sp+368]			  ## sm.c:2338:56
 1e0cf3a:    30 70             	r0 = 3			  ## sm.c:2338:56
 1e0cf3c:    01 32             	if (r1 != 0) goto 2 <sm_run+0x3BC : 1e0cf40 >			  ## sm.c:2338:56
 1e0cf3e:    00 70             	r0 = 0
 1e0cf40:    88 48             	[r4 + 32] = r0			  ## sm.c:2338:54
 1e0cf42:    60 73             	r0 = 54
 1e0cf44:    38 48             	[r4 + 12] = r0
 1e0cf46:    e0 5f             	r0 = h[r7 + 60] (u)			  ## sm.c:2681:70
 1e0cf48:    10 f7 90 51       	h[r5 + 400] = r0			  ## sm.c:2681:53
 1e0cf4c:    05 f6 00 f0       	r5 = [r15 + 0]			  ## sm.c:2577:17
 1e0cf50:    0e 18             	goto 28 <sm_run+0x3EA : 1e0cf6e >			  ## sm.c:2577:17
 1e0cf52:    60 70             	r0 = 6			  ## sm.c:2594:21
 1e0cf54:    bf f3 09 f2       	call -7150 <l2cap_request_can_send_fix_channel_now_event : 1e0b36a >			  ## sm.c:2594:21
 1e0cf58:    f9 1f             	goto -14 <sm_run+0x3C8 : 1e0cf4c >			  ## sm.c:2594:21
 1e0cf5a:    40 08             	r0 = r4			  ## sm.c:2611:17
 1e0cf5c:    83 14             	call -1786 <sm_timeout_start : 1e0c864 >			  ## sm.c:2611:17
 1e0cf5e:    05 f6 00 f0       	r5 = [r15 + 0]			  ## sm.c:2613:21
 1e0cf62:    71 4a             	r1 = [r5 + 28]			  ## sm.c:2613:28
 1e0cf64:    40 70             	r0 = 4			  ## sm.c:2613:28
 1e0cf66:    21 e0 ed 0f       	if (r1 == 2) goto -38 <sm_run+0x3C0 : 1e0cf44 >			  ## sm.c:2613:28
 1e0cf6a:    a0 72             	r0 = 42
 1e0cf6c:    eb 1f             	goto -42 <sm_run+0x3C0 : 1e0cf44 >
 1e0cf6e:    00 f7 90 51       	r0 = h[r5 + 400] (u)
 1e0cf72:    e0 f2 32 0f       	if (r0 == r14) goto -412 <sm_run+0x256 : 1e0cdda >
 1e0cf76:    bf f3 c7 d6       	call -21106 <le_hci_connection_for_handle : 1e07d08 >			  ## sm.c:5074:36
 1e0cf7a:    01 fc 3c 00       	r1 = r0 + 60			  ## sm.c:5078:22
 1e0cf7e:    0c 70             	r12 = 0			  ## sm.c:5078:22
 1e0cf80:    01 20             	if (r0 == 0) goto 2 <sm_run+0x400 : 1e0cf84 >			  ## sm.c:5078:22
 1e0cf82:    1c 08             	r12 = r1			  ## sm.c:5075:9
 1e0cf84:    00 e0 6c 03       	if (r0 == 0) goto 1752 <.GJTIE731_0_0_+0x624 : 1e0d660 >
 1e0cf88:    05 f6 00 f0       	r5 = [r15 + 0]			  ## sm.c:2715:54
 1e0cf8c:    57 fc 90 01       	r7 = r5 + 400			  ## sm.c:2715:54
 1e0cf90:    00 5e             	r0 = h[r7 + 0] (u)			  ## sm.c:2715:14
 1e0cf92:    bf f3 1e f2       	call -7108 <l2cap_can_send_fixed_channel_packet_now : 1e0b3d2 >			  ## sm.c:2715:14
 1e0cf96:    00 e0 a5 01       	if (r0 == 0) goto 842 <.GJTIE731_0_0_+0x2A8 : 1e0d2e4 >			  ## sm.c:2715:14
 1e0cf9a:    60 6b             	r0 = b[r5 + 22] (u)			  ## sm.c:2722:20
 1e0cf9c:    01 ff ff 00 a5 01 	if (r0 != 255) goto 842 <.GJTIE731_0_0_+0x2B0 : 1e0d2ec >			  ## sm.c:2722:20
 1e0cfa2:    02 f6 0c c0       	r2 = [r12 + 12]			  ## sm.c:2738:29
 1e0cfa6:    23 fc ff ff       	r3 = r2 + -1			  ## sm.c:2738:9
 1e0cfaa:    c3 e3 94 81       	if (r3 > 60) goto 808 <.GJTIE731_0_0_+0x29A : 1e0d2d6 >			  ## sm.c:2738:9
 1e0cfae:    5e c0             	r6 = r3 << 1
 1e0cfb0:    50 fc 30 00       	r0 = r5 + 48
 1e0cfb4:    54 fc 8c 00       	r4 = r5 + 140
 1e0cfb8:    5d fc b4 00       	r13 = r5 + 180
 1e0cfbc:    51 fc 34 01       	r1 = r5 + 308
 1e0cfc0:    b6 00             	tbh [r6]


.GJTIL731_0_0_:
 1e0cfc2:    45 00     < 69 : 0x45 >
 1e0cfc4:    8a 01     < 394 : 0x18A >
 1e0cfc6:    8a 01     < 394 : 0x18A >
 1e0cfc8:    a4 01     < 420 : 0x1A4 >
 1e0cfca:    8a 01     < 394 : 0x18A >
 1e0cfcc:    a4 01     < 420 : 0x1A4 >
 1e0cfce:    8a 01     < 394 : 0x18A >
 1e0cfd0:    a4 01     < 420 : 0x1A4 >
 1e0cfd2:    8a 01     < 394 : 0x18A >
 1e0cfd4:    6d 00     < 109 : 0x6D >
 1e0cfd6:    8a 01     < 394 : 0x18A >
 1e0cfd8:    3d 00     < 61 : 0x3D >
 1e0cfda:    8a 01     < 394 : 0x18A >
 1e0cfdc:    77 00     < 119 : 0x77 >
 1e0cfde:    8a 01     < 394 : 0x18A >
 1e0cfe0:    3d 00     < 61 : 0x3D >
 1e0cfe2:    8a 01     < 394 : 0x18A >
 1e0cfe4:    b8 01     < 440 : 0x1B8 >
 1e0cfe6:    8f 00     < 143 : 0x8F >
 1e0cfe8:    a3 00     < 163 : 0xA3 >
 1e0cfea:    8a 01     < 394 : 0x18A >
 1e0cfec:    8a 01     < 394 : 0x18A >
 1e0cfee:    a4 01     < 420 : 0x1A4 >
 1e0cff0:    8a 01     < 394 : 0x18A >
 1e0cff2:    a4 01     < 420 : 0x1A4 >
 1e0cff4:    8a 01     < 394 : 0x18A >
 1e0cff6:    ae 00     < 174 : 0xAE >
 1e0cff8:    8a 01     < 394 : 0x18A >
 1e0cffa:    41 00     < 65 : 0x41 >
 1e0cffc:    8a 01     < 394 : 0x18A >
 1e0cffe:    b2 00     < 178 : 0xB2 >
 1e0d000:    8a 01     < 394 : 0x18A >
 1e0d002:    b5 00     < 181 : 0xB5 >
 1e0d004:    8a 01     < 394 : 0x18A >
 1e0d006:    8a 01     < 394 : 0x18A >
 1e0d008:    8a 01     < 394 : 0x18A >
 1e0d00a:    8a 01     < 394 : 0x18A >
 1e0d00c:    8a 01     < 394 : 0x18A >
 1e0d00e:    8a 01     < 394 : 0x18A >
 1e0d010:    8a 01     < 394 : 0x18A >
 1e0d012:    8a 01     < 394 : 0x18A >
 1e0d014:    c9 01     < 457 : 0x1C9 >
 1e0d016:    8a 01     < 394 : 0x18A >
 1e0d018:    8a 01     < 394 : 0x18A >
 1e0d01a:    8a 01     < 394 : 0x18A >
 1e0d01c:    0d 02     < 525 : 0x20D >
 1e0d01e:    ce 00     < 206 : 0xCE >
 1e0d020:    8a 01     < 394 : 0x18A >
 1e0d022:    41 00     < 65 : 0x41 >
 1e0d024:    8a 01     < 394 : 0x18A >
 1e0d026:    14 02     < 532 : 0x214 >
 1e0d028:    8a 01     < 394 : 0x18A >
 1e0d02a:    8a 01     < 394 : 0x18A >
 1e0d02c:    32 02     < 562 : 0x232 >
 1e0d02e:    8a 01     < 394 : 0x18A >
 1e0d030:    8a 01     < 394 : 0x18A >
 1e0d032:    d2 00     < 210 : 0xD2 >
 1e0d034:    8a 01     < 394 : 0x18A >
 1e0d036:    8a 01     < 394 : 0x18A >
 1e0d038:    8a 01     < 394 : 0x18A >
 1e0d03a:    59 02     < 601 : 0x259 >
 1e0d03c:    f0 42             	r0 = [r1 + 60]			  ## sm.c:3037:25
 1e0d03e:    10 e0 4a 01       	if (r0 == 1) goto 660 <.GJTIE731_0_0_+0x29A : 1e0d2d6 >			  ## sm.c:3037:25
 1e0d042:    6b 19             	goto 726 <.GJTIE731_0_0_+0x2DE : 1e0d31a >			  ## sm.c:3037:25
 1e0d044:    f0 42             	r0 = [r1 + 60]			  ## sm.c:3047:25
 1e0d046:    00 e0 46 11       	if (r0 != 0) goto 652 <.GJTIE731_0_0_+0x29A : 1e0d2d6 >			  ## sm.c:3047:25
 1e0d04a:    6f 19             	goto 734 <.GJTIE731_0_0_+0x2EE : 1e0d32a >			  ## sm.c:3047:25
 1e0d04c:    50 70             	r0 = 5			  ## sm.c:2743:23
 1e0d04e:    d0 f5 f2 00       	b[sp+242] = r0			  ## sm.c:2743:23
 1e0d052:    40 6b             	r0 = b[r5 + 20] (u)			  ## sm.c:2744:32
 1e0d054:    d0 f5 f3 00       	b[sp+243] = r0			  ## sm.c:2744:23
 1e0d058:    01 f9 02 c0       	r1 = b[r12 + 2] (u)			  ## sm.c:2745:55
 1e0d05c:    30 72             	r0 = 35			  ## sm.c:2745:43
 1e0d05e:    01 32             	if (r1 != 0) goto 2 <.GJTIE731_0_0_+0x26 : 1e0d062 >			  ## sm.c:2745:43
 1e0d060:    40 73             	r0 = 52			  ## sm.c:2745:43
 1e0d062:    10 f6 0c c0       	[r12 + 12] = r0			  ## sm.c:2745:41
 1e0d066:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## sm.c:2746:13
 1e0d06a:    21 af             	r1 = sp + 242			  ## sm.c:2746:13
 1e0d06c:    22 70             	r2 = 2			  ## sm.c:2746:13
 1e0d06e:    bf f3 d9 f1       	call -7246 <l2cap_send_connectionless : 1e0b424 >			  ## sm.c:2746:13
 1e0d072:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## sm.c:2747:13
 1e0d076:    0b 14             	call -2026 <sm_done_for_handle : 1e0c88e >			  ## sm.c:2747:13
 1e0d078:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## sm.c:2748:39
 1e0d07c:    51 70             	r1 = 5			  ## sm.c:2748:13
 1e0d07e:    18 14             	call -2000 <sm_set_timeout_disconnect : 1e0c8b0 >			  ## sm.c:2748:13
 1e0d080:    00 f6 00 f0       	r0 = [r15 + 0]			  ## sm.c:2750:69
 1e0d084:    42 61             	r2 = b[r0 + 20] (u)			  ## sm.c:2750:69
 1e0d086:    01 f9 05 c0       	r1 = b[r12 + 5] (u)			  ## sm.c:2749:13
 1e0d08a:    80 f7 06 c0       	r0 = h[r12 ++= 6] (u)			  ## sm.c:2749:13
 1e0d08e:    33 70             	r3 = 3			  ## sm.c:2750:66
 1e0d090:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## sm.c:2750:66
 1e0d094:    c2 08             	r2 = r12
 1e0d096:    bf f3 dd fa       	call -2630 <sm_notify_client_process : 1e0c654 >
 1e0d09a:    1d 19             	goto 570 <.GJTIE731_0_0_+0x29A : 1e0d2d6 >
 1e0d09c:    f0 42             	r0 = [r1 + 60]			  ## sm.c:3079:25
 1e0d09e:    10 e0 1a 01       	if (r0 == 1) goto 564 <.GJTIE731_0_0_+0x29A : 1e0d2d6 >			  ## sm.c:3079:25
 1e0d0a2:    33 68             	r3 = b[r4 + 3] (u)			  ## sm.c:3083:13
 1e0d0a4:    44 68             	r4 = b[r4 + 4] (u)			  ## sm.c:3083:13
 1e0d0a6:    47 af             	r7 = sp + 244			  ## sm.c:3083:13
 1e0d0a8:    1f 02             	[sp+4] = r7			  ## sm.c:3083:13
 1e0d0aa:    50 fc 4f 00       	r0 = r5 + 79			  ## sm.c:3083:22
 1e0d0ae:    09 18             	goto 18 <.GJTIE731_0_0_+0x86 : 1e0d0c2 >			  ## sm.c:3083:22
 1e0d0b0:    f0 42             	r0 = [r1 + 60]			  ## sm.c:3069:25
 1e0d0b2:    10 e0 10 01       	if (r0 == 1) goto 544 <.GJTIE731_0_0_+0x29A : 1e0d2d6 >			  ## sm.c:3069:25
 1e0d0b6:    33 68             	r3 = b[r4 + 3] (u)			  ## sm.c:3073:13
 1e0d0b8:    44 68             	r4 = b[r4 + 4] (u)			  ## sm.c:3073:13
 1e0d0ba:    47 af             	r7 = sp + 244			  ## sm.c:3073:13
 1e0d0bc:    1f 02             	[sp+4] = r7			  ## sm.c:3073:13
 1e0d0be:    50 fc 6f 00       	r0 = r5 + 111			  ## sm.c:3073:22
 1e0d0c2:    51 fc 41 00       	r1 = r5 + 65
 1e0d0c6:    52 fc 48 00       	r2 = r5 + 72
 1e0d0ca:    0c 02             	[sp] = r4
 1e0d0cc:    7d 14             	call -1798 <sm_c1_t1 : 1e0c9c8 >
 1e0d0ce:    00 f6 0c c0       	r0 = [r12 + 12]
 1e0d0d2:    10 80             	r0 += 1
 1e0d0d4:    10 f6 0c c0       	[r12 + 12] = r0
 1e0d0d8:    50 fc 20 00       	r0 = r5 + 32
 1e0d0dc:    71 08             	r1 = r7
 1e0d0de:    f8 18             	goto 496 <.GJTIE731_0_0_+0x294 : 1e0d2d0 >
 1e0d0e0:    40 70             	r0 = 4			  ## sm.c:3013:23
 1e0d0e2:    d0 f5 d1 00       	b[sp+209] = r0			  ## sm.c:3013:23
 1e0d0e6:    50 fc 4f 00       	r0 = r5 + 79			  ## sm.c:3014:25
 1e0d0ea:    81 08             	r1 = r8			  ## sm.c:3014:13
 1e0d0ec:    bf f3 5a f1       	call -7500 <reverse_128 : 1e0b3a4 >			  ## sm.c:3014:13
 1e0d0f0:    01 f9 02 c0       	r1 = b[r12 + 2] (u)			  ## sm.c:3015:17
 1e0d0f4:    d0 72             	r0 = 45			  ## sm.c:3015:17
 1e0d0f6:    01 32             	if (r1 != 0) goto 2 <.GJTIE731_0_0_+0xBE : 1e0d0fa >			  ## sm.c:3015:17
 1e0d0f8:    c0 73             	r0 = 60			  ## sm.c:3015:17
 1e0d0fa:    10 f6 0c c0       	[r12 + 12] = r0
 1e0d0fe:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## sm.c:3020:13
 1e0d102:    11 ad             	r1 = sp + 209			  ## sm.c:3020:13
 1e0d104:    12 71             	r2 = 17			  ## sm.c:3020:13
 1e0d106:    38 18             	goto 112 <.GJTIE731_0_0_+0x13C : 1e0d178 >			  ## sm.c:3020:13
 1e0d108:    f0 42             	r0 = [r1 + 60]			  ## sm.c:3089:25
 1e0d10a:    10 e0 e4 00       	if (r0 == 1) goto 456 <.GJTIE731_0_0_+0x29A : 1e0d2d6 >			  ## sm.c:3089:25
 1e0d10e:    00 f9 02 c0       	r0 = b[r12 + 2] (u)			  ## sm.c:3093:17
 1e0d112:    a5 20             	if (r0 == 0) goto 330 <.GJTIE731_0_0_+0x222 : 1e0d25e >			  ## sm.c:3093:17
 1e0d114:    51 fc 6f 00       	r1 = r5 + 111			  ## sm.c:3094:55
 1e0d118:    50 fc 4f 00       	r0 = r5 + 79			  ## sm.c:3094:31
 1e0d11c:    a4 18             	goto 328 <.GJTIE731_0_0_+0x22A : 1e0d266 >
 1e0d11e:    f0 42             	r0 = [r1 + 60]			  ## sm.c:3103:25
 1e0d120:    10 e0 d9 00       	if (r0 == 1) goto 434 <.GJTIE731_0_0_+0x29A : 1e0d2d6 >			  ## sm.c:3103:25
 1e0d124:    b7 19             	goto 878 <.GJTIE731_0_0_+0x458 : 1e0d494 >			  ## sm.c:3103:25
 1e0d126:    f0 42             	r0 = [r1 + 60]			  ## sm.c:3058:25
 1e0d128:    d6 30             	if (r0 != 0) goto 428 <.GJTIE731_0_0_+0x29A : 1e0d2d6 >			  ## sm.c:3058:25
 1e0d12a:    dc 19             	goto 952 <.GJTIE731_0_0_+0x4A8 : 1e0d4e4 >			  ## sm.c:3058:25
 1e0d12c:    72 6b             	r2 = b[r5 + 23] (u)			  ## sm.c:3189:24
 1e0d12e:    20 f3 ea 21       	if ((r2 & 1) != 0) goto 980 <.GJTIE731_0_0_+0x4CA : 1e0d506 >			  ## sm.c:3189:24
 1e0d132:    21 f3 1f 22       	if ((r2 & 2) != 0) goto 1086 <.GJTIE731_0_0_+0x538 : 1e0d574 >
 1e0d136:    22 f3 53 22       	if ((r2 & 4) != 0) goto 1190 <.GJTIE731_0_0_+0x5A4 : 1e0d5e0 >
 1e0d13a:    23 f3 5b 22       	if ((r2 & 8) != 0) goto 1206 <.GJTIE731_0_0_+0x5B8 : 1e0d5f4 >
 1e0d13e:    24 f3 72 22       	if ((r2 & 16) != 0) goto 1252 <.GJTIE731_0_0_+0x5EA : 1e0d626 >
 1e0d142:    00 f9 02 c0       	r0 = b[r12 + 2] (u)			  ## sm.c:3276:17
 1e0d146:    1e 20             	if (r0 == 0) goto 60 <.GJTIE731_0_0_+0x148 : 1e0d184 >			  ## sm.c:3276:17
 1e0d148:    60 14             	call -1856 <sm_key_distribution_all_received : 1e0ca0a >			  ## sm.c:3278:21
 1e0d14a:    86 20             	if (r0 == 0) goto 268 <.GJTIE731_0_0_+0x21C : 1e0d258 >			  ## sm.c:3278:21
 1e0d14c:    c0 08             	r0 = r12			  ## sm.c:3279:21
 1e0d14e:    7f 14             	call -1794 <sm_key_distribution_handle_all_received : 1e0ca4e >			  ## sm.c:3279:21
 1e0d150:    c3 f4 23 c9       	[r12 + 12] = 35			  ## sm.c:3280:49
 1e0d154:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## sm.c:3282:21
 1e0d158:    bf f3 99 fb       	call -2254 <sm_done_for_handle : 1e0c88e >			  ## sm.c:3282:21
 1e0d15c:    bc 18             	goto 376 <.GJTIE731_0_0_+0x29A : 1e0d2d6 >			  ## sm.c:3282:21
 1e0d15e:    f0 42             	r0 = [r1 + 60]			  ## sm.c:3164:25
 1e0d160:    10 e0 b9 00       	if (r0 == 1) goto 370 <.GJTIE731_0_0_+0x29A : 1e0d2d6 >			  ## sm.c:3164:25
 1e0d164:    d9 19             	goto 946 <.GJTIE731_0_0_+0x4DC : 1e0d518 >			  ## sm.c:3164:25
 1e0d166:    11 70             	r1 = 1			  ## sm.h:181:19
 1e0d168:    19 61             	b[r0 + 17] = r1			  ## sm.h:181:19
 1e0d16a:    c3 f4 3a c9       	[r12 + 12] = 58			  ## sm.c:2868:41
 1e0d16e:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## sm.c:2869:13
 1e0d172:    51 fc 41 00       	r1 = r5 + 65			  ## sm.c:2867:40
 1e0d176:    72 70             	r2 = 7			  ## sm.c:2869:13
 1e0d178:    bf f3 54 f1       	call -7512 <l2cap_send_connectionless : 1e0b424 >
 1e0d17c:    c0 08             	r0 = r12
 1e0d17e:    bf f3 71 fb       	call -2334 <sm_timeout_start : 1e0c864 >
 1e0d182:    a9 18             	goto 338 <.GJTIE731_0_0_+0x29A : 1e0d2d6 >
 1e0d184:    c3 f4 34 c9       	[r12 + 12] = 52			  ## sm.c:3288:45
 1e0d188:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## sm.c:3289:17
 1e0d18c:    bf f3 7f fb       	call -2306 <sm_done_for_handle : 1e0c88e >			  ## sm.c:3289:17
 1e0d190:    00 f6 00 f0       	r0 = [r15 + 0]			  ## sm.c:3291:22
 1e0d194:    01 f9 40 01       	r1 = b[r0 + 320] (u)			  ## sm.c:3291:30
 1e0d198:    9e 32             	if (r1 != 0) goto 316 <.GJTIE731_0_0_+0x29A : 1e0d2d6 >			  ## sm.c:3291:30
 1e0d19a:    01 f9 39 01       	r1 = b[r0 + 313] (u)			  ## sm.c:3291:88
 1e0d19e:    00 f3 9a 10       	if ((r1 & 1) == 0) goto 308 <.GJTIE731_0_0_+0x29A : 1e0d2d6 >			  ## sm.c:3291:88
 1e0d1a2:    81 61             	r1 = b[r0 + 24] (u)			  ## sm.c:3295:42
 1e0d1a4:    d1 f5 14 00       	b[sp+20] = r1			  ## sm.c:3295:33
 1e0d1a8:    91 61             	r1 = b[r0 + 25] (u)			  ## sm.c:3296:42
 1e0d1aa:    d1 f5 15 00       	b[sp+21] = r1			  ## sm.c:3296:33
 1e0d1ae:    da f5 16 00       	b[sp+22] = r10			  ## sm.c:3297:33
 1e0d1b2:    01 f9 15 c0       	r1 = b[r12 + 21] (u)			  ## sm.c:3299:47
 1e0d1b6:    d1 f5 17 00       	b[sp+23] = r1			  ## sm.c:3299:33
 1e0d1ba:    01 f9 14 c0       	r1 = b[r12 + 20] (u)			  ## sm.c:3300:47
 1e0d1be:    09 d1             	r1 = r1 >> 4			  ## sm.c:3300:47
 1e0d1c0:    d1 f5 18 00       	b[sp+24] = r1			  ## sm.c:3300:33
 1e0d1c4:    01 f6 20 c0       	r1 = [r12 + 32]			  ## sm.c:3301:47
 1e0d1c8:    d1 f5 19 00       	b[sp+25] = r1			  ## sm.c:3301:33
 1e0d1cc:    02 f7 f0 00       	r2 = h[r0 + 240] (u)			  ## sm.c:3304:21
 1e0d1d0:    40 a1             	r0 = sp + 20			  ## sm.c:3304:21
 1e0d1d2:    48 02             	[sp+16] = r0			  ## sm.c:3304:21
 1e0d1d4:    61 70             	r1 = 6			  ## sm.c:3304:21
 1e0d1d6:    bf f3 62 d8       	call -20284 <little_endian_store_16 : 1e0829e >			  ## sm.c:3304:21
 1e0d1da:    00 f6 00 f0       	r0 = [r15 + 0]			  ## sm.c:3305:42
 1e0d1de:    38 02             	[sp+12] = r0			  ## sm.c:3305:42
 1e0d1e0:    03 fc f2 00       	r3 = r0 + 242			  ## sm.c:3305:42
 1e0d1e4:    22 66             	r2 = b[r3 + 2] (u)			  ## sm.c:3305:21
 1e0d1e6:    64 66             	r4 = b[r3 + 6] (u)			  ## sm.c:3305:21
 1e0d1e8:    05 66             	r5 = b[r3 + 0] (u)			  ## sm.c:3305:21
 1e0d1ea:    0d f9 01 30       	r13 = b[r3 + 1] (u)			  ## sm.c:3305:21
 1e0d1ee:    77 66             	r7 = b[r3 + 7] (u)			  ## sm.c:3305:21
 1e0d1f0:    56 66             	r6 = b[r3 + 5] (u)			  ## sm.c:3305:21
 1e0d1f2:    40 66             	r0 = b[r3 + 4] (u)			  ## sm.c:3305:21
 1e0d1f4:    31 66             	r1 = b[r3 + 3] (u)			  ## sm.c:3305:21
 1e0d1f6:    d7 f5 23 00       	b[sp+35] = r7			  ## sm.c:3305:21
 1e0d1fa:    d6 f5 21 00       	b[sp+33] = r6			  ## sm.c:3305:21
 1e0d1fe:    d0 f5 20 00       	b[sp+32] = r0			  ## sm.c:3305:21
 1e0d202:    d1 f5 1f 00       	b[sp+31] = r1			  ## sm.c:3305:21
 1e0d206:    dd f5 1d 00       	b[sp+29] = r13			  ## sm.c:3305:21
 1e0d20a:    d5 f5 1c 00       	b[sp+28] = r5			  ## sm.c:3305:21
 1e0d20e:    c8 fd 40 47       	r4 <= insert(r7, p:8, l:8)			  ## sm.c:3305:21
 1e0d212:    d0 fd 80 04       	r0 <= insert(r4, p:16, l:16)			  ## sm.c:3305:21
 1e0d216:    00 d4             	r0 = r0 >> 16			  ## sm.c:3305:21
 1e0d218:    d0 f5 22 00       	b[sp+34] = r0			  ## sm.c:3305:21
 1e0d21c:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## sm.c:3305:21
 1e0d220:    d0 fd 80 52       	r5 <= insert(r2, p:16, l:16)			  ## sm.c:3305:21
 1e0d224:    28 d4             	r0 = r5 >> 16			  ## sm.c:3305:21
 1e0d226:    d0 f5 1e 00       	b[sp+30] = r0			  ## sm.c:3305:21
 1e0d22a:    30 02             	r0 = [sp+12]			  ## sm.c:3306:25
 1e0d22c:    02 f9 2a 01       	r2 = b[r0 + 298] (u)			  ## sm.c:3306:25
 1e0d230:    07 f9 02 c0       	r7 = b[r12 + 2] (u)			  ## sm.c:3306:25
 1e0d234:    40 02             	r0 = [sp+16]			  ## sm.c:3306:25
 1e0d236:    18 02             	[sp+4] = r0			  ## sm.c:3306:25
 1e0d238:    80 96             	r0 = r3 + 8			  ## sm.c:3307:43
 1e0d23a:    31 fc 39 00       	r1 = r3 + 57			  ## sm.c:3306:64
 1e0d23e:    83 81             	r3 += 24			  ## sm.c:3306:114
 1e0d240:    08 02             	[sp] = r0			  ## sm.c:3306:25
 1e0d242:    70 08             	r0 = r7			  ## sm.c:3306:25
 1e0d244:    bf f3 1f f2       	call -7106 <ble_list_pair_add : 1e0b686 >			  ## sm.c:3306:25
 1e0d248:    13 71             	r3 = 17			  ## sm.c:3306:25
 1e0d24a:    01 20             	if (r0 == 0) goto 2 <.GJTIE731_0_0_+0x212 : 1e0d24e >			  ## sm.c:3306:25
 1e0d24c:    03 71             	r3 = 16
 1e0d24e:    01 f9 05 c0       	r1 = b[r12 + 5] (u)			  ## sm.c:3312:21
 1e0d252:    80 f7 06 c0       	r0 = h[r12 ++= 6] (u)			  ## sm.c:3312:21
 1e0d256:    1e 1f             	goto -452 <.GJTIE731_0_0_+0x58 : 1e0d094 >			  ## sm.c:3312:21
 1e0d258:    c3 f4 22 c9       	[r12 + 12] = 34			  ## sm.c:3284:49
 1e0d25c:    3c 18             	goto 120 <.GJTIE731_0_0_+0x29A : 1e0d2d6 >			  ## sm.c:3284:49
 1e0d25e:    51 fc 4f 00       	r1 = r5 + 79			  ## sm.c:3096:54
 1e0d262:    50 fc 6f 00       	r0 = r5 + 111			  ## sm.c:3096:31
 1e0d266:    f2 62             	r2 = b[r1 + 15] (u)			  ## sm.c:853:5
 1e0d268:    e3 62             	r3 = b[r1 + 14] (u)			  ## sm.c:853:5
 1e0d26a:    d4 62             	r4 = b[r1 + 13] (u)			  ## sm.c:853:5
 1e0d26c:    c6 62             	r6 = b[r1 + 12] (u)			  ## sm.c:853:5
 1e0d26e:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## sm.c:853:5
 1e0d272:    c8 fd 40 64       	r6 <= insert(r4, p:8, l:8)			  ## sm.c:853:5
 1e0d276:    92 62             	r2 = b[r1 + 9] (u)			  ## sm.c:853:5
 1e0d278:    b4 62             	r4 = b[r1 + 11] (u)			  ## sm.c:853:5
 1e0d27a:    a7 62             	r7 = b[r1 + 10] (u)			  ## sm.c:853:5
 1e0d27c:    81 62             	r1 = b[r1 + 8] (u)			  ## sm.c:853:5
 1e0d27e:    d0 fd 80 63       	r6 <= insert(r3, p:16, l:16)			  ## sm.c:853:5
 1e0d282:    16 f5 00 01       	[sp+256] = r6			  ## sm.c:853:5
 1e0d286:    c8 fd 40 74       	r7 <= insert(r4, p:8, l:8)			  ## sm.c:853:5
 1e0d28a:    c8 fd 40 12       	r1 <= insert(r2, p:8, l:8)			  ## sm.c:853:5
 1e0d28e:    d0 fd 80 17       	r1 <= insert(r7, p:16, l:16)			  ## sm.c:853:5
 1e0d292:    11 f5 fc 00       	[sp+252] = r1			  ## sm.c:853:5
 1e0d296:    f1 60             	r1 = b[r0 + 15] (u)			  ## sm.c:854:5
 1e0d298:    e2 60             	r2 = b[r0 + 14] (u)			  ## sm.c:854:5
 1e0d29a:    d3 60             	r3 = b[r0 + 13] (u)			  ## sm.c:854:5
 1e0d29c:    c4 60             	r4 = b[r0 + 12] (u)			  ## sm.c:854:5
 1e0d29e:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## sm.c:854:5
 1e0d2a2:    c8 fd 40 43       	r4 <= insert(r3, p:8, l:8)			  ## sm.c:854:5
 1e0d2a6:    91 60             	r1 = b[r0 + 9] (u)			  ## sm.c:854:5
 1e0d2a8:    b3 60             	r3 = b[r0 + 11] (u)			  ## sm.c:854:5
 1e0d2aa:    a6 60             	r6 = b[r0 + 10] (u)			  ## sm.c:854:5
 1e0d2ac:    80 60             	r0 = b[r0 + 8] (u)			  ## sm.c:854:5
 1e0d2ae:    d0 fd 80 42       	r4 <= insert(r2, p:16, l:16)			  ## sm.c:854:5
 1e0d2b2:    14 f5 f8 00       	[sp+248] = r4			  ## sm.c:854:5
 1e0d2b6:    c8 fd 40 63       	r6 <= insert(r3, p:8, l:8)			  ## sm.c:854:5
 1e0d2ba:    c8 fd 40 01       	r0 <= insert(r1, p:8, l:8)			  ## sm.c:854:5
 1e0d2be:    d0 fd 80 06       	r0 <= insert(r6, p:16, l:16)			  ## sm.c:854:5
 1e0d2c2:    10 f5 f4 00       	[sp+244] = r0			  ## sm.c:854:5
 1e0d2c6:    c3 f4 15 c9       	[r12 + 12] = 21			  ## sm.c:1167:30
 1e0d2ca:    50 fc 20 00       	r0 = r5 + 32			  ## sm.c:3099:29
 1e0d2ce:    41 af             	r1 = sp + 244			  ## sm.c:3099:29
 1e0d2d0:    c2 08             	r2 = r12
 1e0d2d2:    bf f3 d3 f8       	call -3674 <sm_aes128_start : 1e0c47c >
 1e0d2d6:    05 f6 00 f0       	r5 = [r15 + 0]			  ## sm.c:3324:13
 1e0d2da:    00 f7 90 51       	r0 = h[r5 + 400] (u)			  ## sm.c:3324:21
 1e0d2de:    e0 f2 77 0d       	if (r0 == r14) goto -1298 <sm_run+0x24C : 1e0cdd0 >			  ## sm.c:3324:21
 1e0d2e2:    be 19             	goto 892 <.GJTIE731_0_0_+0x624 : 1e0d660 >			  ## sm.c:3324:21
 1e0d2e4:    60 70             	r0 = 6			  ## sm.c:2717:13
 1e0d2e6:    bf f3 40 f0       	call -8064 <l2cap_request_can_send_fix_channel_now_event : 1e0b36a >			  ## sm.c:2717:13
 1e0d2ea:    ba 19             	goto 884 <.GJTIE731_0_0_+0x624 : 1e0d660 >			  ## sm.c:2717:13
 1e0d2ec:    e1 70             	r1 = 14			  ## sm.c:2724:23
 1e0d2ee:    d1 f5 06 01       	b[sp+262] = r1			  ## sm.c:2724:23
 1e0d2f2:    d0 f5 07 01       	b[sp+263] = r0			  ## sm.c:2725:23
 1e0d2f6:    f0 7f             	r0 = 255			  ## sm.c:2726:45
 1e0d2f8:    68 6b             	b[r5 + 22] = r0			  ## sm.c:2726:45
 1e0d2fa:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## sm.c:2727:13
 1e0d2fe:    e1 fb 06 01       	r1 = sp + 262			  ## sm.c:2727:13
 1e0d302:    22 70             	r2 = 2			  ## sm.c:2727:13
 1e0d304:    bf f3 8e f0       	call -7908 <l2cap_send_connectionless : 1e0b424 >			  ## sm.c:2727:13
 1e0d308:    ab 19             	goto 854 <.GJTIE731_0_0_+0x624 : 1e0d660 >
 1e0d30a:    10 94             	r0 = r2 + 1			  ## sm.c:1167:91
 1e0d30c:    10 f6 0c c0       	[r12 + 12] = r0			  ## sm.c:1167:30
 1e0d310:    1c f6 44 10       	[r1 + 68] = r12			  ## sm.c:721:31
 1e0d314:    80 f3 7a 88       	call 69876 <ll_hci_get_le_rand : 1e1e40c >			  ## sm.c:723:5
 1e0d318:    a3 19             	goto 838 <.GJTIE731_0_0_+0x624 : 1e0d660 >			  ## sm.c:723:5
 1e0d31a:    10 94             	r0 = r2 + 1			  ## sm.c:1167:91
 1e0d31c:    10 f6 0c c0       	[r12 + 12] = r0			  ## sm.c:1167:30
 1e0d320:    50 fc 20 00       	r0 = r5 + 32			  ## sm.c:3041:29
 1e0d324:    51 fc 31 00       	r1 = r5 + 49			  ## sm.c:3041:43
 1e0d328:    21 19             	goto 578 <.GJTIE731_0_0_+0x530 : 1e0d56c >			  ## sm.c:3041:43
 1e0d32a:    20 59             	r0 = h[r4 + 36] (u)			  ## sm.c:3049:17
 1e0d32c:    16 ac             	r6 = sp + 193			  ## sm.c:3049:17
 1e0d32e:    01 70             	r1 = 0			  ## sm.c:3049:17
 1e0d330:    dc 18             	goto 440 <.GJTIE731_0_0_+0x4AE : 1e0d4ea >			  ## sm.c:3049:17
 1e0d332:    30 70             	r0 = 3			  ## sm.c:3114:23
 1e0d334:    d0 f5 a0 00       	b[sp+160] = r0			  ## sm.c:3114:23
 1e0d338:    50 fc 5f 00       	r0 = r5 + 95			  ## sm.c:3115:25
 1e0d33c:    05 aa             	r5 = sp + 160			  ## sm.c:3115:25
 1e0d33e:    11 9a             	r1 = r5 + 1			  ## sm.c:3115:51
 1e0d340:    bf f3 30 f0       	call -8096 <reverse_128 : 1e0b3a4 >			  ## sm.c:3115:13
 1e0d344:    01 f9 02 c0       	r1 = b[r12 + 2] (u)			  ## sm.c:3116:17
 1e0d348:    c0 72             	r0 = 44			  ## sm.c:3116:17
 1e0d34a:    01 32             	if (r1 != 0) goto 2 <.GJTIE731_0_0_+0x312 : 1e0d34e >			  ## sm.c:3116:17
 1e0d34c:    b0 73             	r0 = 59			  ## sm.c:3116:17
 1e0d34e:    10 f6 0c c0       	[r12 + 12] = r0
 1e0d352:    7d 19             	goto 762 <.GJTIE731_0_0_+0x612 : 1e0d64e >
 1e0d354:    22 70             	r2 = 2
 1e0d356:    8a 61             	b[r0 + 24] = r2			  ## sm.h:181:19
 1e0d358:    04 f9 02 c0       	r4 = b[r12 + 2] (u)			  ## sm.c:2986:89
 1e0d35c:    43 92             	r3 = r1 + 4			  ## sm.c:1449:28
 1e0d35e:    52 92             	r2 = r1 + 5			  ## sm.c:1451:28
 1e0d360:    01 28             	if (r4 == 0) goto 2 <.GJTIE731_0_0_+0x328 : 1e0d364 >			  ## sm.c:1451:28
 1e0d362:    32 08             	r2 = r3			  ## sm.c:1448:9
 1e0d364:    01 60             	r1 = b[r0 + 0] (u)			  ## sm.c:2988:24
 1e0d366:    02 64             	r2 = b[r2 + 0] (u)			  ## sm.c:2988:24
 1e0d368:    b3 72             	r3 = 43			  ## sm.c:2988:17
 1e0d36a:    01 22             	if (r1 == 0) goto 2 <.GJTIE731_0_0_+0x332 : 1e0d36e >
 1e0d36c:    03 74             	r3 = 64			  ## sm.c:2988:17
 1e0d36e:    22 fd 01 29       	r2 = r2 & 1			  ## sm.c:1454:18
 1e0d372:    02 fd 06 29       	r2 = r2 | 6			  ## sm.c:1454:9
 1e0d376:    13 f6 0c c0       	[r12 + 12] = r3			  ## sm.c:1454:9
 1e0d37a:    01 22             	if (r1 == 0) goto 2 <.GJTIE731_0_0_+0x342 : 1e0d37e >			  ## sm.c:1454:9
 1e0d37c:    62 70             	r2 = 6
 1e0d37e:    61 61             	r1 = b[r0 + 22] (u)			  ## sm.c:2997:80
 1e0d380:    51 b5             	r1 &= r2			  ## sm.c:2997:147
 1e0d382:    d9 61             	b[r0 + 29] = r1			  ## sm.h:201:19
 1e0d384:    71 61             	r1 = b[r0 + 23] (u)			  ## sm.c:2998:80
 1e0d386:    52 b3             	r2 &= r1			  ## sm.c:2998:147
 1e0d388:    ea 61             	b[r0 + 30] = r2			  ## sm.h:205:19
 1e0d38a:    03 70             	r3 = 0			  ## sm.h:205:19
 1e0d38c:    20 fd 01 29       	r0 = r2 & 1			  ## sm.c:1097:17
 1e0d390:    60 fb 00 09       	r0 = 0 - r0			  ## sm.c:1097:17
 1e0d394:    20 fd 03 09       	r0 = r0 & 3			  ## sm.c:1097:9
 1e0d398:    02 fd 0c 09       	r2 = r0 | 12			  ## sm.c:1103:15
 1e0d39c:    9b 6b             	b[r5 + 25] = r3			  ## sm.c:1113:45
 1e0d39e:    01 f3 01 10       	if ((r1 & 2) == 0) goto 2 <.GJTIE731_0_0_+0x368 : 1e0d3a4 >
 1e0d3a2:    20 08             	r0 = r2			  ## sm.c:1101:9
 1e0d3a4:    89 c0             	r1 = r1 << 2			  ## sm.c:1105:9
 1e0d3a6:    21 fd 10 19       	r1 = r1 & 16			  ## sm.c:1105:9
 1e0d3aa:    50 b2             	r0 |= r1			  ## sm.c:1105:9
 1e0d3ac:    78 6b             	b[r5 + 23] = r0			  ## sm.c:1114:41
 1e0d3ae:    88 6b             	b[r5 + 24] = r0			  ## sm.c:1115:46
 1e0d3b0:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## sm.c:3002:13
 1e0d3b4:    51 fc 48 00       	r1 = r5 + 72			  ## sm.c:2985:40
 1e0d3b8:    72 70             	r2 = 7			  ## sm.c:3002:13
 1e0d3ba:    bf f3 33 f0       	call -8090 <l2cap_send_connectionless : 1e0b424 >			  ## sm.c:3002:13
 1e0d3be:    c0 08             	r0 = r12			  ## sm.c:679:5
 1e0d3c0:    bf f3 50 fa       	call -2912 <sm_timeout_start : 1e0c864 >			  ## sm.c:679:5
 1e0d3c4:    00 f6 00 f0       	r0 = [r15 + 0]			  ## sm.c:3005:18
 1e0d3c8:    01 f9 30 00       	r1 = b[r0 + 48] (u)			  ## sm.c:3005:25
 1e0d3cc:    03 22             	if (r1 == 0) goto 6 <.GJTIE731_0_0_+0x398 : 1e0d3d4 >
 1e0d3ce:    70 40             	r0 = [r0 + 28]			  ## sm.c:3005:61
 1e0d3d0:    00 e0 46 11       	if (r0 != 0) goto 652 <.GJTIE731_0_0_+0x624 : 1e0d660 >			  ## sm.c:3005:61
 1e0d3d4:    c0 08             	r0 = r12			  ## sm.c:3006:17
 1e0d3d6:    bf f3 a7 fa       	call -2738 <sm_trigger_user_response : 1e0c928 >			  ## sm.c:3006:17
 1e0d3da:    42 19             	goto 644 <.GJTIE731_0_0_+0x624 : 1e0d660 >
 1e0d3dc:    d0 86             	r0 += 109			  ## sm.c:3128:25
 1e0d3de:    01 a9             	r1 = sp + 144			  ## sm.c:3128:25
 1e0d3e0:    bf f3 e0 ef       	call -8256 <reverse_128 : 1e0b3a4 >			  ## sm.c:3128:13
 1e0d3e4:    c3 f4 16 c9       	[r12 + 12] = 22			  ## sm.c:3129:41
 1e0d3e8:    19 18             	goto 50 <.GJTIE731_0_0_+0x3E0 : 1e0d41c >			  ## sm.c:3129:41
 1e0d3ea:    02 f9 02 c0       	r2 = b[r12 + 2] (u)			  ## sm.c:3141:17
 1e0d3ee:    0f 24             	if (r2 == 0) goto 30 <.GJTIE731_0_0_+0x3D2 : 1e0d40e >			  ## sm.c:3141:17
 1e0d3f0:    c1 62             	r1 = b[r1 + 12] (u)			  ## sm.c:3141:64
 1e0d3f2:    0d 32             	if (r1 != 0) goto 26 <.GJTIE731_0_0_+0x3D2 : 1e0d40e >			  ## sm.c:3141:64
 1e0d3f4:    01 f9 05 c0       	r1 = b[r12 + 5] (u)			  ## sm.c:3142:22
 1e0d3f8:    c6 fc 06 00       	r6 = r12 + 6			  ## sm.c:3142:57
 1e0d3fc:    02 fc 6d 00       	r2 = r0 + 109			  ## sm.c:3143:57
 1e0d400:    60 08             	r0 = r6			  ## sm.c:3142:22
 1e0d402:    bf f3 7f f0       	call -7938 <ble_list_reconnect_device_is_exist : 1e0b504 >			  ## sm.c:3142:22
 1e0d406:    00 e0 3d 01       	if (r0 == 0) goto 634 <.GJTIE731_0_0_+0x648 : 1e0d684 >			  ## sm.c:3142:21
 1e0d40a:    05 f6 00 f0       	r5 = [r15 + 0]
 1e0d40e:    50 fc 9d 00       	r0 = r5 + 157			  ## sm.c:3153:25
 1e0d412:    01 a8             	r1 = sp + 128			  ## sm.c:3153:25
 1e0d414:    bf f3 c6 ef       	call -8308 <reverse_128 : 1e0b3a4 >			  ## sm.c:3153:13
 1e0d418:    c3 f4 23 c9       	[r12 + 12] = 35			  ## sm.c:3154:41
 1e0d41c:    00 f7 00 c0       	r0 = h[r12 + 0] (u)
 1e0d420:    80 f3 27 88       	call 69710 <ll_hci_long_term_key_request_reply : 1e1e472 >
 1e0d424:    1d 19             	goto 570 <.GJTIE731_0_0_+0x624 : 1e0d660 >
 1e0d426:    40 fc 6e 00       	r0 = r4 + 110			  ## sm.c:2853:25
 1e0d42a:    25 ae             	r5 = sp + 226			  ## sm.c:2853:25
 1e0d42c:    51 08             	r1 = r5			  ## sm.c:2853:13
 1e0d42e:    bf f3 b9 ef       	call -8334 <reverse_128 : 1e0b3a4 >			  ## sm.c:2853:13
 1e0d432:    c3 f4 37 c9       	[r12 + 12] = 55			  ## sm.c:2854:41
 1e0d436:    46 fc 66 00       	r6 = r4 + 102			  ## sm.c:2855:53
 1e0d43a:    01 70             	r1 = 0			  ## sm.c:2855:34
 1e0d43c:    60 08             	r0 = r6			  ## sm.c:2855:34
 1e0d43e:    bf f3 4c f0       	call -8040 <big_endian_read_32 : 1e0b4da >			  ## sm.c:2855:34
 1e0d442:    07 08             	r7 = r0			  ## sm.c:2855:34
 1e0d444:    41 70             	r1 = 4			  ## sm.c:2856:34
 1e0d446:    60 08             	r0 = r6			  ## sm.c:2856:34
 1e0d448:    bf f3 47 f0       	call -8050 <big_endian_read_32 : 1e0b4da >			  ## sm.c:2856:34
 1e0d44c:    03 f7 3c d0       	r3 = h[r13 + 60] (u)			  ## sm.c:2860:13
 1e0d450:    01 f7 00 c0       	r1 = h[r12 + 0] (u)			  ## sm.c:2860:13
 1e0d454:    02 08             	r2 = r0			  ## sm.c:2856:34
 1e0d456:    0d 02             	[sp] = r5			  ## sm.c:2860:13
 1e0d458:    10 08             	r0 = r1			  ## sm.c:2860:13
 1e0d45a:    21 08             	r1 = r2			  ## sm.c:2860:13
 1e0d45c:    72 08             	r2 = r7			  ## sm.c:2860:13
 1e0d45e:    80 f3 ed 87       	call 69594 <ll_hci_start_encryption : 1e1e43c >			  ## sm.c:2860:13
 1e0d462:    01 f9 05 c0       	r1 = b[r12 + 5] (u)			  ## sm.c:2861:13
 1e0d466:    80 f7 06 c0       	r0 = h[r12 ++= 6] (u)			  ## sm.c:2861:13
 1e0d46a:    13 70             	r3 = 1			  ## sm.c:2861:13
 1e0d46c:    c2 08             	r2 = r12			  ## sm.c:2861:13
 1e0d46e:    bf f3 f1 f8       	call -3614 <sm_notify_client_process : 1e0c654 >			  ## sm.c:2861:13
 1e0d472:    f6 18             	goto 492 <.GJTIE731_0_0_+0x624 : 1e0d660 >			  ## sm.c:2861:13
 1e0d474:    d0 86             	r0 += 109			  ## sm.c:3177:25
 1e0d476:    05 a7             	r5 = sp + 112			  ## sm.c:3177:25
 1e0d478:    51 08             	r1 = r5			  ## sm.c:3177:13
 1e0d47a:    bf f3 93 ef       	call -8410 <reverse_128 : 1e0b3a4 >			  ## sm.c:3177:13
 1e0d47e:    c3 f4 16 c9       	[r12 + 12] = 22			  ## sm.c:3178:41
 1e0d482:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## sm.c:3182:13
 1e0d486:    01 70             	r1 = 0			  ## sm.c:3182:13
 1e0d488:    02 70             	r2 = 0			  ## sm.c:3182:13
 1e0d48a:    03 70             	r3 = 0			  ## sm.c:3182:13
 1e0d48c:    0d 02             	[sp] = r5			  ## sm.c:3182:13
 1e0d48e:    80 f3 d5 87       	call 69546 <ll_hci_start_encryption : 1e1e43c >			  ## sm.c:3182:13
 1e0d492:    e6 18             	goto 460 <.GJTIE731_0_0_+0x624 : 1e0d660 >			  ## sm.c:3182:13
 1e0d494:    00 70             	r0 = 0			  ## sm.c:795:5
 1e0d496:    10 f5 f8 00       	[sp+248] = r0			  ## sm.c:795:5
 1e0d49a:    10 f5 f4 00       	[sp+244] = r0			  ## sm.c:795:5
 1e0d49e:    00 f9 07 d0       	r0 = b[r13 + 7] (u)			  ## sm.c:796:5
 1e0d4a2:    01 f9 06 d0       	r1 = b[r13 + 6] (u)			  ## sm.c:796:5
 1e0d4a6:    02 f9 05 d0       	r2 = b[r13 + 5] (u)			  ## sm.c:796:5
 1e0d4aa:    03 f9 04 d0       	r3 = b[r13 + 4] (u)			  ## sm.c:796:5
 1e0d4ae:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## sm.c:796:5
 1e0d4b2:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## sm.c:796:5
 1e0d4b6:    00 f9 01 d0       	r0 = b[r13 + 1] (u)			  ## sm.c:796:5
 1e0d4ba:    02 f9 03 d0       	r2 = b[r13 + 3] (u)			  ## sm.c:796:5
 1e0d4be:    04 f9 02 d0       	r4 = b[r13 + 2] (u)			  ## sm.c:796:5
 1e0d4c2:    05 f9 00 d0       	r5 = b[r13 + 0] (u)			  ## sm.c:796:5
 1e0d4c6:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## sm.c:796:5
 1e0d4ca:    13 f5 00 01       	[sp+256] = r3			  ## sm.c:796:5
 1e0d4ce:    c8 fd 40 42       	r4 <= insert(r2, p:8, l:8)			  ## sm.c:796:5
 1e0d4d2:    c8 fd 40 50       	r5 <= insert(r0, p:8, l:8)			  ## sm.c:796:5
 1e0d4d6:    d0 fd 80 54       	r5 <= insert(r4, p:16, l:16)			  ## sm.c:796:5
 1e0d4da:    15 f5 fc 00       	[sp+252] = r5			  ## sm.c:796:5
 1e0d4de:    c3 f4 1c c9       	[r12 + 12] = 28			  ## sm.c:1167:30
 1e0d4e2:    41 18             	goto 130 <.GJTIE731_0_0_+0x52A : 1e0d566 >			  ## sm.c:1167:30
 1e0d4e4:    20 59             	r0 = h[r4 + 36] (u)			  ## sm.c:3060:17
 1e0d4e6:    16 ab             	r6 = sp + 177			  ## sm.c:3060:17
 1e0d4e8:    11 70             	r1 = 1			  ## sm.c:3060:17
 1e0d4ea:    62 08             	r2 = r6
 1e0d4ec:    bf f3 b3 f7       	call -4250 <sm_d1_d_prime : 1e0c456 >
 1e0d4f0:    00 f6 0c c0       	r0 = [r12 + 12]
 1e0d4f4:    10 80             	r0 += 1
 1e0d4f6:    10 f6 0c c0       	[r12 + 12] = r0
 1e0d4fa:    00 f6 00 f0       	r0 = [r15 + 0]
 1e0d4fe:    00 fc a0 01       	r0 = r0 + 416
 1e0d502:    61 08             	r1 = r6
 1e0d504:    33 18             	goto 102 <.GJTIE731_0_0_+0x530 : 1e0d56c >
 1e0d506:    31 fd 01 29       	r1 = r2 & 4294967294			  ## sm.c:3190:53
 1e0d50a:    79 6b             	b[r5 + 23] = r1			  ## sm.c:3190:53
 1e0d50c:    61 70             	r1 = 6			  ## sm.c:3192:27
 1e0d50e:    d1 f5 5f 00       	b[sp+95] = r1			  ## sm.c:3192:27
 1e0d512:    d0 86             	r0 += 109			  ## sm.c:3193:29
 1e0d514:    f5 a5             	r5 = sp + 95			  ## sm.c:3193:29
 1e0d516:    98 18             	goto 304 <.GJTIE731_0_0_+0x60C : 1e0d648 >			  ## sm.c:3193:29
 1e0d518:    00 70             	r0 = 0			  ## sm.c:795:5
 1e0d51a:    10 f5 f8 00       	[sp+248] = r0			  ## sm.c:795:5
 1e0d51e:    10 f5 f4 00       	[sp+244] = r0			  ## sm.c:795:5
 1e0d522:    00 f9 07 d0       	r0 = b[r13 + 7] (u)			  ## sm.c:796:5
 1e0d526:    01 f9 06 d0       	r1 = b[r13 + 6] (u)			  ## sm.c:796:5
 1e0d52a:    02 f9 05 d0       	r2 = b[r13 + 5] (u)			  ## sm.c:796:5
 1e0d52e:    03 f9 04 d0       	r3 = b[r13 + 4] (u)			  ## sm.c:796:5
 1e0d532:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## sm.c:796:5
 1e0d536:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## sm.c:796:5
 1e0d53a:    00 f9 01 d0       	r0 = b[r13 + 1] (u)			  ## sm.c:796:5
 1e0d53e:    02 f9 03 d0       	r2 = b[r13 + 3] (u)			  ## sm.c:796:5
 1e0d542:    04 f9 02 d0       	r4 = b[r13 + 2] (u)			  ## sm.c:796:5
 1e0d546:    05 f9 00 d0       	r5 = b[r13 + 0] (u)			  ## sm.c:796:5
 1e0d54a:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## sm.c:796:5
 1e0d54e:    13 f5 00 01       	[sp+256] = r3			  ## sm.c:796:5
 1e0d552:    c8 fd 40 42       	r4 <= insert(r2, p:8, l:8)			  ## sm.c:796:5
 1e0d556:    c8 fd 40 50       	r5 <= insert(r0, p:8, l:8)			  ## sm.c:796:5
 1e0d55a:    d0 fd 80 54       	r5 <= insert(r4, p:16, l:16)			  ## sm.c:796:5
 1e0d55e:    15 f5 fc 00       	[sp+252] = r5			  ## sm.c:796:5
 1e0d562:    c3 f4 30 c9       	[r12 + 12] = 48			  ## sm.c:1167:30
 1e0d566:    70 fc 30 00       	r0 = r7 + 48
 1e0d56a:    41 af             	r1 = sp + 244
 1e0d56c:    c2 08             	r2 = r12
 1e0d56e:    bf f3 85 f7       	call -4342 <sm_aes128_start : 1e0c47c >
 1e0d572:    76 18             	goto 236 <.GJTIE731_0_0_+0x624 : 1e0d660 >
 1e0d574:    30 fd 02 29       	r0 = r2 & 4294967293			  ## sm.c:3201:53
 1e0d578:    78 6b             	b[r5 + 23] = r0			  ## sm.c:3201:53
 1e0d57a:    70 70             	r0 = 7			  ## sm.c:3203:27
 1e0d57c:    d0 f5 54 00       	b[sp+84] = r0			  ## sm.c:3203:27
 1e0d580:    32 59             	r2 = h[r4 + 38] (u)			  ## sm.c:3204:17
 1e0d582:    46 a5             	r6 = sp + 84			  ## sm.c:3204:17
 1e0d584:    11 70             	r1 = 1			  ## sm.c:3204:17
 1e0d586:    60 08             	r0 = r6			  ## sm.c:3204:17
 1e0d588:    bf f3 89 d6       	call -21230 <little_endian_store_16 : 1e0829e >			  ## sm.c:3204:17
 1e0d58c:    00 f6 00 f0       	r0 = [r15 + 0]			  ## sm.c:3205:28
 1e0d590:    31 9c             	r1 = r6 + 3			  ## sm.c:3205:51
 1e0d592:    00 fc b4 00       	r0 = r0 + 180			  ## sm.c:3205:28
 1e0d596:    bf f3 07 f0       	call -8178 <reverse_64 : 1e0b5a8 >			  ## sm.c:3205:17
 1e0d59a:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## sm.c:3209:17
 1e0d59e:    b2 70             	r2 = 11			  ## sm.c:3209:17
 1e0d5a0:    61 08             	r1 = r6			  ## sm.c:3209:17
 1e0d5a2:    bf f3 3f ef       	call -8578 <l2cap_send_connectionless : 1e0b424 >			  ## sm.c:3209:17
 1e0d5a6:    c0 08             	r0 = r12			  ## sm.c:679:5
 1e0d5a8:    bf f3 5c f9       	call -3400 <sm_timeout_start : 1e0c864 >			  ## sm.c:679:5
 1e0d5ac:    00 f6 00 f0       	r0 = [r15 + 0]			  ## sm.c:3213:45
 1e0d5b0:    00 fc b2 00       	r0 = r0 + 178			  ## sm.c:3213:45
 1e0d5b4:    01 50             	r1 = h[r0 + 0] (u)			  ## sm.c:3213:52
 1e0d5b6:    11 f7 24 c0       	h[r12 + 36] = r1			  ## sm.c:3213:43
 1e0d5ba:    41 50             	r1 = h[r0 + 8] (u)			  ## sm.c:3214:17
 1e0d5bc:    32 50             	r2 = h[r0 + 6] (u)			  ## sm.c:3214:17
 1e0d5be:    23 50             	r3 = h[r0 + 4] (u)			  ## sm.c:3214:17
 1e0d5c0:    10 50             	r0 = h[r0 + 2] (u)			  ## sm.c:3214:17
 1e0d5c2:    d0 fd 80 21       	r2 <= insert(r1, p:16, l:16)			  ## sm.c:3214:17
 1e0d5c6:    12 f7 2a c0       	h[r12 + 42] = r2			  ## sm.c:3214:17
 1e0d5ca:    d0 fd 80 03       	r0 <= insert(r3, p:16, l:16)			  ## sm.c:3214:17
 1e0d5ce:    10 f7 26 c0       	h[r12 + 38] = r0			  ## sm.c:3214:17
 1e0d5d2:    11 d4             	r1 = r2 >> 16			  ## sm.c:3214:17
 1e0d5d4:    11 f7 2c c0       	h[r12 + 44] = r1			  ## sm.c:3214:17
 1e0d5d8:    00 d4             	r0 = r0 >> 16			  ## sm.c:3214:17
 1e0d5da:    10 f7 28 c0       	h[r12 + 40] = r0			  ## sm.c:3214:17
 1e0d5de:    40 18             	goto 128 <.GJTIE731_0_0_+0x624 : 1e0d660 >			  ## sm.c:3214:17
 1e0d5e0:    30 fd 04 29       	r0 = r2 & 4294967291			  ## sm.c:3218:53
 1e0d5e4:    78 6b             	b[r5 + 23] = r0			  ## sm.c:3218:53
 1e0d5e6:    80 70             	r0 = 8			  ## sm.c:3220:27
 1e0d5e8:    d0 f5 43 00       	b[sp+67] = r0			  ## sm.c:3220:27
 1e0d5ec:    70 fc 40 00       	r0 = r7 + 64			  ## sm.c:3221:29
 1e0d5f0:    35 a4             	r5 = sp + 67			  ## sm.c:3221:29
 1e0d5f2:    2a 18             	goto 84 <.GJTIE731_0_0_+0x60C : 1e0d648 >			  ## sm.c:3221:29
 1e0d5f4:    30 fd 08 29       	r0 = r2 & 4294967287			  ## sm.c:3231:53
 1e0d5f8:    78 6b             	b[r5 + 23] = r0			  ## sm.c:3231:53
 1e0d5fa:    90 70             	r0 = 9			  ## sm.c:3234:27
 1e0d5fc:    d0 f5 35 00       	b[sp+53] = r0			  ## sm.c:3234:27
 1e0d600:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## sm.c:3238:25
 1e0d604:    bf f3 d9 ef       	call -8270 <gap_le_get_own_address_random_type : 1e0b5ba >			  ## sm.c:3238:25
 1e0d608:    01 fc ff ff       	r1 = r0 + -1			  ## sm.c:3238:17
 1e0d60c:    21 e0 2a 30       	if (r1 < 2) goto 84 <.GJTIE731_0_0_+0x628 : 1e0d664 >			  ## sm.c:3238:17
 1e0d610:    02 20             	if (r0 == 0) goto 4 <.GJTIE731_0_0_+0x5DA : 1e0d616 >
 1e0d612:    30 e0 2e 10       	if (r0 != 3) goto 92 <.GJTIE731_0_0_+0x636 : 1e0d672 >
 1e0d616:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## sm.c:3247:21
 1e0d61a:    51 a3             	r1 = sp + 53			  ## sm.c:3247:21
 1e0d61c:    11 80             	r1 += 1			  ## sm.c:3247:71
 1e0d61e:    d2 a3             	r2 = sp + 61			  ## sm.c:3247:71
 1e0d620:    bf f3 e5 ef       	call -8246 <gap_le_get_own_id_address : 1e0b5ee >			  ## sm.c:3247:21
 1e0d624:    26 18             	goto 76 <.GJTIE731_0_0_+0x636 : 1e0d672 >			  ## sm.c:3247:21
 1e0d626:    30 fd 10 29       	r0 = r2 & 4294967279			  ## sm.c:3258:53
 1e0d62a:    78 6b             	b[r5 + 23] = r0			  ## sm.c:3258:53
 1e0d62c:    01 62             	r1 = b[r1 + 0] (u)			  ## sm.c:3261:29
 1e0d62e:    40 fc 40 00       	r0 = r4 + 64			  ## sm.c:3261:29
 1e0d632:    06 22             	if (r1 == 0) goto 12 <.GJTIE731_0_0_+0x604 : 1e0d640 >			  ## sm.c:3261:29
 1e0d634:    20 fb cc 1f       	r1 = 3435973836			  ## sm.c:3262:21
 1e0d638:    39 40             	[r0 + 12] = r1			  ## sm.c:3262:21
 1e0d63a:    29 40             	[r0 + 8] = r1			  ## sm.c:3262:21
 1e0d63c:    19 40             	[r0 + 4] = r1			  ## sm.c:3262:21
 1e0d63e:    09 49             	[r4 + 64] = r1			  ## sm.c:3262:21
 1e0d640:    a1 70             	r1 = 10			  ## sm.c:3266:27
 1e0d642:    d1 f5 24 00       	b[sp+36] = r1			  ## sm.c:3266:27
 1e0d646:    45 a2             	r5 = sp + 36			  ## sm.c:3266:27
 1e0d648:    11 9a             	r1 = r5 + 1
 1e0d64a:    bf f3 ab ee       	call -8874 <reverse_128 : 1e0b3a4 >
 1e0d64e:    00 f7 00 c0       	r0 = h[r12 + 0] (u)
 1e0d652:    12 71             	r2 = 17
 1e0d654:    51 08             	r1 = r5
 1e0d656:    bf f3 e5 ee       	call -8758 <l2cap_send_connectionless : 1e0b424 >
 1e0d65a:    c0 08             	r0 = r12
 1e0d65c:    bf f3 02 f9       	call -3580 <sm_timeout_start : 1e0c864 >
 1e0d660:    be 0a             	sp += 380
 1e0d662:    5f 01             	{pc, r15-r4} = [sp++]			  ## sm.c:3328:1
 1e0d664:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## sm.c:3241:21
 1e0d668:    51 a3             	r1 = sp + 53			  ## sm.c:3241:21
 1e0d66a:    11 80             	r1 += 1			  ## sm.c:3241:68
 1e0d66c:    d2 a3             	r2 = sp + 61			  ## sm.c:3241:68
 1e0d66e:    bf f3 ee ee       	call -8740 <gap_le_get_own_address : 1e0b44e >			  ## sm.c:3241:21
 1e0d672:    55 a3             	r5 = sp + 53
 1e0d674:    21 9a             	r1 = r5 + 2			  ## sm.c:3250:49
 1e0d676:    d0 a3             	r0 = sp + 61			  ## sm.c:3250:49
 1e0d678:    bf f3 9d ee       	call -8902 <reverse_bd_addr : 1e0b3b6 >			  ## sm.c:3250:17
 1e0d67c:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## sm.c:3253:17
 1e0d680:    82 70             	r2 = 8			  ## sm.c:3253:17
 1e0d682:    e8 1f             	goto -48 <.GJTIE731_0_0_+0x618 : 1e0d654 >			  ## sm.c:3253:17
 1e0d684:    c3 f4 23 c9       	[r12 + 12] = 35			  ## sm.c:3144:49
 1e0d688:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## sm.c:3145:21
 1e0d68c:    80 f3 cd 86       	call 69018 <ll_hci_long_term_key_request_nagative_reply : 1e1e42a >			  ## sm.c:3145:21
 1e0d690:    01 f9 05 c0       	r1 = b[r12 + 5] (u)			  ## sm.c:3147:21
 1e0d694:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## sm.c:3147:21
 1e0d698:    23 70             	r3 = 2			  ## sm.c:3147:21
 1e0d69a:    62 08             	r2 = r6			  ## sm.c:3147:21
 1e0d69c:    bf f3 da f7       	call -4172 <sm_notify_client_process : 1e0c654 >			  ## sm.c:3147:21
 1e0d6a0:    df 1f             	goto -66 <.GJTIE731_0_0_+0x624 : 1e0d660 >			  ## sm.c:3147:21


sm_master_pair_get_list:
 1e0d6a2:    76 01             	[--sp] = {rets, r6-r4}			  ## sm.c:3754:0
 1e0d6a4:    e6 0b             	sp += -52			  ## sm.c:3754:0
 1e0d6a6:    c6 ff c4 09 00 00 	r6 = 2500 <sm_global_info : 9c4 >			  ## sm.c:3754:0
 1e0d6ac:    01 4c             	r1 = [r6 + 0]			  ## sm.c:3756:10
 1e0d6ae:    01 f9 40 11       	r1 = b[r1 + 320] (u)			  ## sm.c:3756:18
 1e0d6b2:    04 08             	r4 = r0			  ## sm.c:3756:18
 1e0d6b4:    05 70             	r5 = 0
 1e0d6b6:    34 32             	if (r1 != 0) goto 104 <sm_master_pair_get_list+0x7E : 1e0d720 >
 1e0d6b8:    22 68             	r2 = b[r4 + 2] (u)			  ## sm.c:3757:12
 1e0d6ba:    51 68             	r1 = b[r4 + 5] (u)			  ## sm.c:3757:12
 1e0d6bc:    60 98             	r0 = r4 + 6			  ## sm.c:3757:40
 1e0d6be:    03 a0             	r3 = sp + 0			  ## sm.c:3757:40
 1e0d6c0:    bf f3 f4 f0       	call -7704 <ble_list_get_conn_addr_item : 1e0b8ac >			  ## sm.c:3757:12
 1e0d6c4:    2d 20             	if (r0 == 0) goto 90 <sm_master_pair_get_list+0x7E : 1e0d720 >
 1e0d6c6:    02 a0             	r2 = sp + 0
 1e0d6c8:    20 fc 30 00       	r0 = r2 + 48			  ## sm.c:3759:53
 1e0d6cc:    01 70             	r1 = 0			  ## sm.c:3759:31
 1e0d6ce:    bf f3 f6 d2       	call -23060 <little_endian_read_16 : 1e07cbe >			  ## sm.c:3759:31
 1e0d6d2:    01 4c             	r1 = [r6 + 0]			  ## sm.c:3759:9
 1e0d6d4:    13 fc f0 00       	r3 = r1 + 240			  ## sm.c:3759:9
 1e0d6d8:    08 56             	h[r3 + 0] = r0			  ## sm.c:3759:29
 1e0d6da:    b0 02             	r0 = [sp+44]			  ## sm.c:3760:9
 1e0d6dc:    a1 02             	r1 = [sp+40]			  ## sm.c:3760:9
 1e0d6de:    68 66             	b[r3 + 6] = r0			  ## sm.c:3760:9
 1e0d6e0:    29 66             	b[r3 + 2] = r1			  ## sm.c:3760:9
 1e0d6e2:    05 d6             	r5 = r0 >> 24			  ## sm.c:3760:9
 1e0d6e4:    9d 66             	b[r3 + 9] = r5			  ## sm.c:3760:9
 1e0d6e6:    05 d4             	r5 = r0 >> 16			  ## sm.c:3760:9
 1e0d6e8:    8d 66             	b[r3 + 8] = r5			  ## sm.c:3760:9
 1e0d6ea:    00 d2             	r0 = r0 >> 8			  ## sm.c:3760:9
 1e0d6ec:    78 66             	b[r3 + 7] = r0			  ## sm.c:3760:9
 1e0d6ee:    08 d6             	r0 = r1 >> 24			  ## sm.c:3760:9
 1e0d6f0:    58 66             	b[r3 + 5] = r0			  ## sm.c:3760:9
 1e0d6f2:    08 d4             	r0 = r1 >> 16			  ## sm.c:3760:9
 1e0d6f4:    48 66             	b[r3 + 4] = r0			  ## sm.c:3760:9
 1e0d6f6:    08 d2             	r0 = r1 >> 8			  ## sm.c:3760:9
 1e0d6f8:    38 66             	b[r3 + 3] = r0			  ## sm.c:3760:9
 1e0d6fa:    01 95             	r1 = r2 + 16			  ## sm.c:3761:9
 1e0d6fc:    a0 96             	r0 = r3 + 10			  ## sm.c:3761:9
 1e0d6fe:    02 71             	r2 = 16			  ## sm.c:3761:9
 1e0d700:    97 f3 f0 cb       	call 3119072 <memcpy : 106ee4 >			  ## sm.c:3761:9
 1e0d704:    c0 f5 32 00       	r0 = b[sp+50] (u)			  ## sm.c:3762:60
 1e0d708:    58 69             	b[r4 + 21] = r0			  ## sm.c:3762:48
 1e0d70a:    40 69             	r0 = b[r4 + 20] (u)			  ## sm.c:3763:46
 1e0d70c:    c1 f5 33 00       	r1 = b[sp+51] (u)			  ## sm.c:3763:58
 1e0d710:    20 fd 0f 09       	r0 = r0 & 15			  ## sm.c:3763:46
 1e0d714:    dc fd 20 01       	r0 <= insert(r1, p:4, l:28)			  ## sm.c:3763:46
 1e0d718:    48 69             	b[r4 + 20] = r0			  ## sm.c:3763:46
 1e0d71a:    08 d1             	r0 = r1 >> 4			  ## sm.c:3764:64
 1e0d71c:    88 48             	[r4 + 32] = r0			  ## sm.c:3764:52
 1e0d71e:    15 70             	r5 = 1			  ## sm.c:3764:52
 1e0d720:    50 08             	r0 = r5			  ## sm.c:3769:1
 1e0d722:    1a 0a             	sp += 52			  ## sm.c:3769:1
 1e0d724:    56 01             	{pc, r6-r4} = [sp++]			  ## sm.c:3769:1


sm_cmd_request_resume:
 1e0d726:    75 01             	[--sp] = {rets, r5, r4}			  ## sm.c:5476:0
 1e0d728:    f0 0b             	sp += -32			  ## sm.c:5476:0
 1e0d72a:    01 40             	r1 = [r0 + 0]			  ## sm.c:5481:13
 1e0d72c:    21 e0 29 00       	if (r1 == 2) goto 82 <sm_cmd_request_resume+0x5C : 1e0d782 >			  ## sm.c:5481:13
 1e0d730:    11 e0 29 10       	if (r1 != 1) goto 82 <sm_cmd_request_resume+0x60 : 1e0d786 >
 1e0d734:    20 50             	r0 = h[r0 + 4] (u)			  ## sm.c:5074:36
 1e0d736:    bf f3 e7 d2       	call -23090 <le_hci_connection_for_handle : 1e07d08 >			  ## sm.c:5074:36
 1e0d73a:    01 fc 3c 00       	r1 = r0 + 60			  ## sm.c:5078:22
 1e0d73e:    04 70             	r4 = 0			  ## sm.c:5078:22
 1e0d740:    01 20             	if (r0 == 0) goto 2 <sm_cmd_request_resume+0x1E : 1e0d744 >			  ## sm.c:5078:22
 1e0d742:    14 08             	r4 = r1			  ## sm.c:5075:9
 1e0d744:    20 20             	if (r0 == 0) goto 64 <sm_cmd_request_resume+0x60 : 1e0d786 >
 1e0d746:    21 68             	r1 = b[r4 + 2] (u)			  ## sm.c:5152:9
 1e0d748:    30 48             	r0 = [r4 + 12]			  ## sm.c:5152:9
 1e0d74a:    08 22             	if (r1 == 0) goto 16 <sm_cmd_request_resume+0x36 : 1e0d75c >			  ## sm.c:5152:9
 1e0d74c:    30 e2 01 00       	if (r0 == 35) goto 2 <sm_cmd_request_resume+0x2C : 1e0d752 >
 1e0d750:    18 30             	if (r0 != 0) goto 48 <sm_cmd_request_resume+0x5C : 1e0d782 >
 1e0d752:    c3 f4 24 49       	[r4 + 12] = 36			  ## sm.c:5128:34
 1e0d756:    bf f3 15 fa       	call -3030 <sm_run : 1e0cb84 >			  ## sm.c:5129:9
 1e0d75a:    13 18             	goto 38 <sm_cmd_request_resume+0x5C : 1e0d782 >			  ## sm.c:5129:9
 1e0d75c:    10 20             	if (r0 == 0) goto 32 <sm_cmd_request_resume+0x58 : 1e0d77e >
 1e0d75e:    40 e3 10 10       	if (r0 != 52) goto 32 <sm_cmd_request_resume+0x5C : 1e0d782 >
 1e0d762:    40 08             	r0 = r4			  ## sm.c:5156:17
 1e0d764:    9e 17             	call -196 <sm_master_pair_get_list : 1e0d6a2 >			  ## sm.c:5156:17
 1e0d766:    03 20             	if (r0 == 0) goto 6 <sm_cmd_request_resume+0x48 : 1e0d76e >			  ## sm.c:5156:17
 1e0d768:    c3 f4 35 49       	[r4 + 12] = 53			  ## sm.c:5157:42
 1e0d76c:    0a 18             	goto 20 <sm_cmd_request_resume+0x5C : 1e0d782 >			  ## sm.c:5157:42
 1e0d76e:    40 48             	r0 = [r4 + 16]			  ## sm.c:5162:34
 1e0d770:    30 e0 0b 00       	if (r0 == 3) goto 22 <sm_cmd_request_resume+0x64 : 1e0d78a >			  ## sm.c:5162:17
 1e0d774:    40 e0 03 10       	if (r0 != 4) goto 6 <sm_cmd_request_resume+0x58 : 1e0d77e >
 1e0d778:    c3 f4 38 49       	[r4 + 12] = 56			  ## sm.c:5164:46
 1e0d77c:    02 18             	goto 4 <sm_cmd_request_resume+0x5C : 1e0d782 >			  ## sm.c:5164:46
 1e0d77e:    10 70             	r0 = 1
 1e0d780:    48 68             	b[r4 + 4] = r0
 1e0d782:    bf f3 ff f9       	call -3074 <sm_run : 1e0cb84 >
 1e0d786:    10 0a             	sp += 32
 1e0d788:    55 01             	{pc, r5, r4} = [sp++]			  ## sm.c:5493:1
 1e0d78a:    c0 48             	r0 = [r4 + 48]			  ## sm.c:5167:58
 1e0d78c:    05 70             	r5 = 0			  ## sm.c:5167:58
 1e0d78e:    2d 02             	[sp+8] = r5			  ## sm.c:5167:21
 1e0d790:    1d 02             	[sp+4] = r5			  ## sm.c:5167:21
 1e0d792:    e1 a1             	r1 = sp + 30			  ## sm.c:5167:21
 1e0d794:    e3 a0             	r3 = sp + 14
 1e0d796:    02 70             	r2 = 0			  ## sm.c:5167:21
 1e0d798:    0d 02             	[sp] = r5			  ## sm.c:5167:21
 1e0d79a:    bf f3 43 f4       	call -6010 <le_device_db_encryption_get : 1e0c024 >			  ## sm.c:5167:21
 1e0d79e:    00 70             	r0 = 0
 1e0d7a0:    e1 a0             	r1 = sp + 14
 1e0d7a2:    01 fa 00 10       	r1 = b[r1+r0] (u)			  ## sm.c:597:13
 1e0d7a6:    04 32             	if (r1 != 0) goto 8 <sm_cmd_request_resume+0x8A : 1e0d7b0 >			  ## sm.c:597:13
 1e0d7a8:    10 80             	r0 += 1			  ## sm.c:596:29
 1e0d7aa:    f0 e0 f9 df       	ifs (r0 <= 15) goto -14 <sm_cmd_request_resume+0x7A : 1e0d7a0 >
 1e0d7ae:    15 70             	r5 = 1
 1e0d7b0:    81 f5 1e 00       	r1 = h[sp+30] (u)			  ## sm.c:5168:49
 1e0d7b4:    80 73             	r0 = 56			  ## sm.c:5168:46
 1e0d7b6:    01 22             	if (r1 == 0) goto 2 <sm_cmd_request_resume+0x94 : 1e0d7ba >			  ## sm.c:5168:46
 1e0d7b8:    50 73             	r0 = 53			  ## sm.c:5168:46
 1e0d7ba:    01 3a             	if (r5 != 0) goto 2 <sm_cmd_request_resume+0x98 : 1e0d7be >
 1e0d7bc:    50 73             	r0 = 53			  ## sm.c:5168:46
 1e0d7be:    38 48             	[r4 + 12] = r0
 1e0d7c0:    e0 1f             	goto -64 <sm_cmd_request_resume+0x5C : 1e0d782 >


sm_exit:
 1e0d7c2:    74 01             	[--sp] = {rets, r4}			  ## sm.c:4992:0
 1e0d7c4:    bf f3 bc f4       	call -5768 <le_device_db_exit : 1e0c140 >			  ## sm.c:4995:5
 1e0d7c8:    c4 ff c4 09 00 00 	r4 = 2500 <sm_global_info : 9c4 >			  ## sm.c:4995:5
 1e0d7ce:    00 48             	r0 = [r4 + 0]			  ## sm.c:4997:9
 1e0d7d0:    04 20             	if (r0 == 0) goto 8 <sm_exit+0x18 : 1e0d7da >			  ## sm.c:4997:9
 1e0d7d2:    80 f3 1b 11       	call 8758 <free : 1e0fa0c >			  ## sm.c:4998:9
 1e0d7d6:    c0 f4 00 49       	[r4 + 0] = 0			  ## sm.c:4999:16
 1e0d7da:    54 01             	{pc, r4} = [sp++]			  ## sm.c:5001:1


sm_encryption_key_size:
 1e0d7dc:    34 00             	[--sp] = rets			  ## sm.c:5083:0
 1e0d7de:    bf f3 93 d2       	call -23258 <le_hci_connection_for_handle : 1e07d08 >			  ## sm.c:5074:36
 1e0d7e2:    01 08             	r1 = r0			  ## sm.c:5074:36
 1e0d7e4:    13 fc 3c 00       	r3 = r1 + 60			  ## sm.c:5078:22
 1e0d7e8:    00 70             	r0 = 0			  ## sm.c:5078:22
 1e0d7ea:    02 70             	r2 = 0			  ## sm.c:5075:9
 1e0d7ec:    01 22             	if (r1 == 0) goto 2 <sm_encryption_key_size+0x14 : 1e0d7f0 >			  ## sm.c:5075:9
 1e0d7ee:    32 08             	r2 = r3			  ## sm.c:5075:9
 1e0d7f0:    05 22             	if (r1 == 0) goto 10 <sm_encryption_key_size+0x20 : 1e0d7fc >
 1e0d7f2:    41 65             	r1 = b[r2 + 20] (u)			  ## sm.c:5088:19
 1e0d7f4:    60 ff 0f 19 01 00 	if ((r1 & 15) == 0) goto 2 <sm_encryption_key_size+0x20 : 1e0d7fc >			  ## sm.c:5088:19
 1e0d7fa:    50 65             	r0 = b[r2 + 21] (u)			  ## sm.c:5091:12
 1e0d7fc:    30 00             	pc = [sp++]			  ## sm.c:5092:1


sm_authenticated:
 1e0d7fe:    34 00             	[--sp] = rets			  ## sm.c:5095:0
 1e0d800:    bf f3 82 d2       	call -23292 <le_hci_connection_for_handle : 1e07d08 >			  ## sm.c:5074:36
 1e0d804:    01 08             	r1 = r0			  ## sm.c:5074:36
 1e0d806:    00 70             	r0 = 0
 1e0d808:    06 22             	if (r1 == 0) goto 12 <sm_authenticated+0x18 : 1e0d816 >
 1e0d80a:    01 f9 50 10       	r1 = b[r1 + 80] (u)			  ## sm.c:5100:19
 1e0d80e:    60 ff 0f 19 01 00 	if ((r1 & 15) == 0) goto 2 <sm_authenticated+0x18 : 1e0d816 >			  ## sm.c:5100:19
 1e0d814:    08 d1             	r0 = r1 >> 4			  ## sm.c:5103:21
 1e0d816:    30 00             	pc = [sp++]			  ## sm.c:5104:1


sm_authorization_state:
 1e0d818:    34 00             	[--sp] = rets			  ## sm.c:5107:0
 1e0d81a:    bf f3 75 d2       	call -23318 <le_hci_connection_for_handle : 1e07d08 >			  ## sm.c:5074:36
 1e0d81e:    01 08             	r1 = r0			  ## sm.c:5074:36
 1e0d820:    13 fc 3c 00       	r3 = r1 + 60			  ## sm.c:5078:22
 1e0d824:    00 70             	r0 = 0			  ## sm.c:5078:22
 1e0d826:    02 70             	r2 = 0			  ## sm.c:5075:9
 1e0d828:    01 22             	if (r1 == 0) goto 2 <sm_authorization_state+0x14 : 1e0d82c >			  ## sm.c:5075:9
 1e0d82a:    32 08             	r2 = r3			  ## sm.c:5075:9
 1e0d82c:    07 22             	if (r1 == 0) goto 14 <sm_authorization_state+0x24 : 1e0d83c >
 1e0d82e:    41 65             	r1 = b[r2 + 20] (u)			  ## sm.c:5114:19
 1e0d830:    01 e1 04 30       	if (r1 < 16) goto 8 <sm_authorization_state+0x24 : 1e0d83c >			  ## sm.c:5114:19
 1e0d834:    60 ff 0f 19 01 00 	if ((r1 & 15) == 0) goto 2 <sm_authorization_state+0x24 : 1e0d83c >
 1e0d83a:    80 44             	r0 = [r2 + 32]			  ## sm.c:5120:21
 1e0d83c:    30 00             	pc = [sp++]			  ## sm.c:5121:1


sm_api_request_pairing:
 1e0d83e:    74 01             	[--sp] = {rets, r4}			  ## sm.c:5559:0
 1e0d840:    04 08             	r4 = r0			  ## sm.c:5559:0
 1e0d842:    bf f3 61 d2       	call -23358 <le_hci_connection_for_handle : 1e07d08 >			  ## sm.c:5074:36
 1e0d846:    06 20             	if (r0 == 0) goto 12 <sm_api_request_pairing+0x16 : 1e0d854 >
 1e0d848:    d0 71             	r0 = 29			  ## sm.c:5567:14
 1e0d84a:    21 70             	r1 = 2			  ## sm.c:5567:14
 1e0d84c:    12 70             	r2 = 1			  ## sm.c:5567:14
 1e0d84e:    43 08             	r3 = r4			  ## sm.c:5567:14
 1e0d850:    bf f3 13 d4       	call -22490 <ble_user_cmd_prepare : 1e0807a >			  ## sm.c:5567:14
 1e0d854:    54 01             	{pc, r4} = [sp++]


sm_disconnect:
 1e0d856:    75 01             	[--sp] = {rets, r5, r4}			  ## sm.c:549:0
 1e0d858:    25 04             	r5 = r0.l (u)			  ## sm.c:551:5
 1e0d85a:    50 08             	r0 = r5			  ## sm.c:551:5
 1e0d85c:    bf f3 17 f8       	call -4050 <sm_done_for_handle : 1e0c88e >			  ## sm.c:551:5
 1e0d860:    50 08             	r0 = r5			  ## sm.c:5074:36
 1e0d862:    bf f3 51 d2       	call -23390 <le_hci_connection_for_handle : 1e07d08 >			  ## sm.c:5074:36
 1e0d866:    01 fc 3c 00       	r1 = r0 + 60			  ## sm.c:5078:22
 1e0d86a:    04 70             	r4 = 0			  ## sm.c:5078:22
 1e0d86c:    01 20             	if (r0 == 0) goto 2 <sm_disconnect+0x1A : 1e0d870 >			  ## sm.c:5078:22
 1e0d86e:    14 08             	r4 = r1			  ## sm.c:5075:9
 1e0d870:    16 20             	if (r0 == 0) goto 44 <sm_disconnect+0x48 : 1e0d89e >
 1e0d872:    01 f9 2e 40       	r1 = b[r4 + 46] (u)			  ## sm.c:557:34
 1e0d876:    c0 ff f1 57 e1 01 	r0 = 31545329 <update_target_end+0x2969 : 1e157f1 >			  ## sm.c:557:5
 1e0d87c:    80 f3 25 0c       	call 6218 <printf : 1e0f0ca >			  ## sm.c:557:5
 1e0d880:    31 71             	r1 = 19			  ## sm.c:558:5
 1e0d882:    50 08             	r0 = r5			  ## sm.c:558:5
 1e0d884:    80 f3 87 84       	call 67854 <ll_hci_disconnect : 1e1e196 >			  ## sm.c:558:5
 1e0d888:    02 f9 2e 40       	r2 = b[r4 + 46] (u)			  ## sm.c:560:64
 1e0d88c:    51 68             	r1 = b[r4 + 5] (u)			  ## sm.c:559:5
 1e0d88e:    80 f7 06 40       	r0 = h[r4 ++= 6] (u)			  ## sm.c:559:5
 1e0d892:    f3 70             	r3 = 15			  ## sm.c:560:61
 1e0d894:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## sm.c:560:61
 1e0d898:    42 08             	r2 = r4			  ## sm.c:559:5
 1e0d89a:    bf f3 db f6       	call -4682 <sm_notify_client_process : 1e0c654 >			  ## sm.c:559:5
 1e0d89e:    55 01             	{pc, r5, r4} = [sp++]			  ## sm.c:561:1


sm_timeout_handler:
 1e0d8a0:    74 01             	[--sp] = {rets, r4}			  ## sm.c:646:0
 1e0d8a2:    44 40             	r4 = [r0 + 16]			  ## sm.c:648:58
 1e0d8a4:    c3 f4 02 49       	[r4 + 12] = 2			  ## sm.c:649:30
 1e0d8a8:    00 58             	r0 = h[r4 + 0] (u)			  ## sm.c:650:5
 1e0d8aa:    bf f3 f0 f7       	call -4128 <sm_done_for_handle : 1e0c88e >			  ## sm.c:650:5
 1e0d8ae:    bf f3 69 f9       	call -3374 <sm_run : 1e0cb84 >			  ## sm.c:653:5
 1e0d8b2:    51 68             	r1 = b[r4 + 5] (u)			  ## sm.c:655:5
 1e0d8b4:    80 f7 06 40       	r0 = h[r4 ++= 6] (u)			  ## sm.c:655:5
 1e0d8b8:    43 70             	r3 = 4			  ## sm.c:655:5
 1e0d8ba:    42 08             	r2 = r4			  ## sm.c:655:5
 1e0d8bc:    14 01             	{rets, r4} = [sp++]			  ## sm.c:655:5
 1e0d8be:    ff f3 c9 f6       	goto -4718 <sm_notify_client_process : 1e0c654 >			  ## sm.c:655:5


sm_event_packet_handler:
 1e0d8c2:    7a 01             	[--sp] = {rets, r10-r4}			  ## sm.c:3808:0
 1e0d8c4:    d0 0b             	sp += -96			  ## sm.c:3808:0
 1e0d8c6:    24 08             	r4 = r2			  ## sm.c:3808:0
 1e0d8c8:    40 e0 98 12       	if (r0 != 4) goto 1328 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >			  ## sm.c:3808:0
 1e0d8cc:    00 68             	r0 = b[r4 + 0] (u)			  ## sm.c:3808:0
 1e0d8ce:    c7 ff c4 09 00 00 	r7 = 2500 <sm_global_info : 9c4 >			  ## sm.c:3808:0
 1e0d8d4:    d0 e0 3c d0       	ifs (r0 <= 13) goto 120 <sm_event_packet_handler+0x8E : 1e0d950 >			  ## sm.c:3808:0
 1e0d8d8:    e0 e0 61 00       	if (r0 == 14) goto 194 <sm_event_packet_handler+0xDC : 1e0d99e >			  ## sm.c:3808:0
 1e0d8dc:    00 e3 80 00       	if (r0 == 48) goto 256 <sm_event_packet_handler+0x11E : 1e0d9e0 >			  ## sm.c:3808:0
 1e0d8e0:    e0 e3 8c 12       	if (r0 != 62) goto 1304 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >			  ## sm.c:3808:0
 1e0d8e4:    20 68             	r0 = b[r4 + 2] (u)			  ## sm.c:3853:21
 1e0d8e6:    50 e0 b3 00       	if (r0 == 5) goto 358 <sm_event_packet_handler+0x18E : 1e0da50 >			  ## sm.c:3853:13
 1e0d8ea:    10 e0 87 12       	if (r0 != 1) goto 1294 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >
 1e0d8ee:    30 68             	r0 = b[r4 + 3] (u)			  ## sm.c:3858:21
 1e0d8f0:    00 e0 86 12       	if (r0 != 0) goto 1292 <.GJTIE779_0_0_+0xFA : 1e0de00 >			  ## sm.c:3858:21
 1e0d8f4:    41 70             	r1 = 4			  ## sm.c:3862:30
 1e0d8f6:    40 08             	r0 = r4			  ## sm.c:3862:30
 1e0d8f8:    bf f3 e1 d1       	call -23614 <little_endian_read_16 : 1e07cbe >			  ## sm.c:3862:30
 1e0d8fc:    06 08             	r6 = r0			  ## sm.c:3862:30
 1e0d8fe:    bf f3 03 d2       	call -23546 <le_hci_connection_for_handle : 1e07d08 >			  ## sm.c:5074:36
 1e0d902:    01 fc 3c 00       	r1 = r0 + 60			  ## sm.c:5078:22
 1e0d906:    05 70             	r5 = 0			  ## sm.c:5078:22
 1e0d908:    01 20             	if (r0 == 0) goto 2 <sm_event_packet_handler+0x4A : 1e0d90c >			  ## sm.c:5078:22
 1e0d90a:    15 08             	r5 = r1			  ## sm.c:5075:9
 1e0d90c:    00 e0 76 02       	if (r0 == 0) goto 1260 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >
 1e0d910:    0e 5a             	h[r5 + 0] = r6			  ## sm.c:3868:36
 1e0d912:    60 68             	r0 = b[r4 + 6] (u)			  ## sm.c:3869:36
 1e0d914:    28 6a             	b[r5 + 2] = r0			  ## sm.c:3869:34
 1e0d916:    70 68             	r0 = b[r4 + 7] (u)			  ## sm.c:3870:46
 1e0d918:    58 6a             	b[r5 + 5] = r0			  ## sm.c:3870:44
 1e0d91a:    80 98             	r0 = r4 + 8			  ## sm.c:3871:34
 1e0d91c:    61 9a             	r1 = r5 + 6			  ## sm.c:3871:45
 1e0d91e:    bf f3 4a ed       	call -9580 <reverse_bd_addr : 1e0b3b6 >			  ## sm.c:3871:17
 1e0d922:    00 70             	r0 = 0			  ## sm.c:3871:17
 1e0d924:    d8 4a             	[r5 + 52] = r0			  ## sm.c:3875:40
 1e0d926:    48 6b             	b[r5 + 20] = r0			  ## sm.c:3878:54
 1e0d928:    88 4a             	[r5 + 32] = r0			  ## sm.c:3879:60
 1e0d92a:    cc f4 ff 5f       	[r5 + 48] = 4294967295			  ## sm.c:3880:41
 1e0d92e:    c4 f4 01 59       	[r5 + 16] = 1			  ## sm.c:3883:46
 1e0d932:    20 6a             	r0 = b[r5 + 2] (u)			  ## sm.c:3886:21
 1e0d934:    00 e0 b9 01       	if (r0 == 0) goto 882 <sm_event_packet_handler+0x3E8 : 1e0dcaa >			  ## sm.c:3886:21
 1e0d938:    30 4a             	r0 = [r5 + 12]			  ## sm.c:3888:34
 1e0d93a:    00 e0 5f 12       	if (r0 != 0) goto 1214 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >			  ## sm.c:3888:34
 1e0d93e:    00 4e             	r0 = [r7 + 0]			  ## sm.c:3889:29
 1e0d940:    01 f7 3a 01       	r1 = h[r0 + 314] (u)			  ## sm.c:3889:37
 1e0d944:    40 72             	r0 = 36			  ## sm.c:3889:29
 1e0d946:    61 ff 0f 1a 57 02 	if ((r1 & 3840) != 0) goto 1198 <.GJTIE779_0_0_+0xF4 : 1e0ddfa >			  ## sm.c:3889:29
 1e0d94c:    30 72             	r0 = 35			  ## sm.c:3889:29
 1e0d94e:    55 1a             	goto 1194 <.GJTIE779_0_0_+0xF4 : 1e0ddfa >			  ## sm.c:3889:29
 1e0d950:    50 e0 5e 00       	if (r0 == 5) goto 188 <sm_event_packet_handler+0x14E : 1e0da10 >
 1e0d954:    80 e0 52 12       	if (r0 != 8) goto 1188 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >
 1e0d958:    31 70             	r1 = 3			  ## sm.c:4017:26
 1e0d95a:    40 08             	r0 = r4			  ## sm.c:4017:26
 1e0d95c:    bf f3 af d1       	call -23714 <little_endian_read_16 : 1e07cbe >			  ## sm.c:4017:26
 1e0d960:    bf f3 d2 d1       	call -23644 <le_hci_connection_for_handle : 1e07d08 >			  ## sm.c:5074:36
 1e0d964:    01 fc 3c 00       	r1 = r0 + 60			  ## sm.c:5078:22
 1e0d968:    05 70             	r5 = 0			  ## sm.c:5078:22
 1e0d96a:    01 20             	if (r0 == 0) goto 2 <sm_event_packet_handler+0xAC : 1e0d96e >			  ## sm.c:5078:22
 1e0d96c:    15 08             	r5 = r1			  ## sm.c:5075:9
 1e0d96e:    00 e0 45 02       	if (r0 == 0) goto 1162 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >
 1e0d972:    50 68             	r0 = b[r4 + 5] (u)			  ## sm.c:4023:48
 1e0d974:    41 6b             	r1 = b[r5 + 20] (u)			  ## sm.c:4023:46
 1e0d976:    22 fd 0f 09       	r2 = r0 & 15			  ## sm.c:4023:46
 1e0d97a:    21 fd f0 19       	r1 = r1 & 240			  ## sm.c:4023:46
 1e0d97e:    51 b4             	r1 |= r2			  ## sm.c:4023:46
 1e0d980:    49 6b             	b[r5 + 20] = r1			  ## sm.c:4023:46
 1e0d982:    60 ff 0f 09 8c 00 	if ((r0 & 15) == 0) goto 280 <sm_event_packet_handler+0x1DE : 1e0daa0 >			  ## sm.c:4023:46
 1e0d988:    30 4a             	r0 = [r5 + 12]			  ## sm.c:4059:30
 1e0d98a:    60 e1 c0 00       	if (r0 == 22) goto 384 <sm_event_packet_handler+0x24C : 1e0db0e >			  ## sm.c:4059:13
 1e0d98e:    70 e3 35 12       	if (r0 != 55) goto 1130 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >
 1e0d992:    c3 f4 34 59       	[r5 + 12] = 52
 1e0d996:    00 5a             	r0 = h[r5 + 0] (u)
 1e0d998:    bf f3 79 f7       	call -4366 <sm_done_for_handle : 1e0c88e >
 1e0d99c:    2f 1a             	goto 1118 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >
 1e0d99e:    31 70             	r1 = 3			  ## sm.c:4150:17
 1e0d9a0:    40 08             	r0 = r4			  ## sm.c:4150:17
 1e0d9a2:    bf f3 8c d1       	call -23784 <little_endian_read_16 : 1e07cbe >			  ## sm.c:4150:17
 1e0d9a6:    01 fb 18 20       	r1 = 8216 <btif_cfg+0x1C : 2018 >			  ## sm.c:4150:17
 1e0d9aa:    10 f2 66 00       	if (r0 == r1) goto 204 <sm_event_packet_handler+0x1B8 : 1e0da7a >			  ## sm.c:4150:17
 1e0d9ae:    f1 8f             	r1 += -1
 1e0d9b0:    10 f2 24 12       	if (r0 != r1) goto 1096 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >
 1e0d9b4:    06 4e             	r6 = [r7 + 0]			  ## sm.c:3349:5
 1e0d9b6:    01 70             	r1 = 0			  ## sm.c:3349:5
 1e0d9b8:    65 fc 40 01       	r5 = r6 + 320			  ## sm.c:3349:5
 1e0d9bc:    c9 4a             	[r5 + 48] = r1			  ## sm.c:3349:29
 1e0d9be:    62 4a             	r2 = [r5 + 24]			  ## sm.c:3351:17
 1e0d9c0:    60 98             	r0 = r4 + 6			  ## sm.c:4151:46
 1e0d9c2:    ad 24             	if (r2 == 0) goto 346 <sm_event_packet_handler+0x25C : 1e0db1e >			  ## sm.c:3351:9
 1e0d9c4:    69 4a             	[r5 + 24] = r1			  ## sm.c:3352:61
 1e0d9c6:    11 a4             	r1 = sp + 65			  ## sm.c:3352:61
 1e0d9c8:    bf f3 e1 f1       	call -7230 <reverse_24 : 1e0bd8e >			  ## sm.c:3355:9
 1e0d9cc:    50 fc 20 00       	r0 = r5 + 32			  ## sm.c:3356:21
 1e0d9d0:    32 70             	r2 = 3			  ## sm.c:3356:13
 1e0d9d2:    97 f3 8b ca       	call 3118358 <memcmp : 106eec >			  ## sm.c:3356:13
 1e0d9d6:    d4 20             	if (r0 == 0) goto 424 <sm_event_packet_handler+0x2BE : 1e0db80 >			  ## sm.c:3356:13
 1e0d9d8:    50 4a             	r0 = [r5 + 20]			  ## sm.c:3362:43
 1e0d9da:    10 80             	r0 += 1			  ## sm.c:3362:43
 1e0d9dc:    58 4a             	[r5 + 20] = r0			  ## sm.c:3362:43
 1e0d9de:    0e 1a             	goto 1052 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >			  ## sm.c:3362:43
 1e0d9e0:    31 70             	r1 = 3			  ## sm.c:4089:26
 1e0d9e2:    40 08             	r0 = r4			  ## sm.c:4089:26
 1e0d9e4:    bf f3 6b d1       	call -23850 <little_endian_read_16 : 1e07cbe >			  ## sm.c:4089:26
 1e0d9e8:    bf f3 8e d1       	call -23780 <le_hci_connection_for_handle : 1e07d08 >			  ## sm.c:5074:36
 1e0d9ec:    02 fc 3c 00       	r2 = r0 + 60			  ## sm.c:5078:22
 1e0d9f0:    01 70             	r1 = 0			  ## sm.c:5078:22
 1e0d9f2:    01 20             	if (r0 == 0) goto 2 <sm_event_packet_handler+0x134 : 1e0d9f6 >			  ## sm.c:5078:22
 1e0d9f4:    21 08             	r1 = r2			  ## sm.c:5075:9
 1e0d9f6:    00 e0 01 02       	if (r0 == 0) goto 1026 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >
 1e0d9fa:    30 42             	r0 = [r1 + 12]			  ## sm.c:4098:30
 1e0d9fc:    60 e1 67 00       	if (r0 == 22) goto 206 <sm_event_packet_handler+0x20C : 1e0dace >			  ## sm.c:4098:13
 1e0da00:    70 e3 fc 11       	if (r0 != 55) goto 1016 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >
 1e0da04:    c3 f4 34 19       	[r1 + 12] = 52			  ## sm.c:4100:42
 1e0da08:    00 52             	r0 = h[r1 + 0] (u)			  ## sm.c:4101:17
 1e0da0a:    bf f3 40 f7       	call -4480 <sm_done_for_handle : 1e0c88e >			  ## sm.c:4101:17
 1e0da0e:    f6 19             	goto 1004 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >
 1e0da10:    31 70             	r1 = 3			  ## sm.c:4119:26
 1e0da12:    40 08             	r0 = r4			  ## sm.c:4119:26
 1e0da14:    bf f3 53 d1       	call -23898 <little_endian_read_16 : 1e07cbe >			  ## sm.c:4119:26
 1e0da18:    05 08             	r5 = r0			  ## sm.c:4119:26
 1e0da1a:    bf f3 38 f7       	call -4496 <sm_done_for_handle : 1e0c88e >			  ## sm.c:4120:13
 1e0da1e:    50 08             	r0 = r5			  ## sm.c:5074:36
 1e0da20:    bf f3 72 d1       	call -23836 <le_hci_connection_for_handle : 1e07d08 >			  ## sm.c:5074:36
 1e0da24:    01 fc 3c 00       	r1 = r0 + 60			  ## sm.c:5078:22
 1e0da28:    05 70             	r5 = 0			  ## sm.c:5078:22
 1e0da2a:    01 20             	if (r0 == 0) goto 2 <sm_event_packet_handler+0x16C : 1e0da2e >			  ## sm.c:5078:22
 1e0da2c:    15 08             	r5 = r1			  ## sm.c:5075:9
 1e0da2e:    00 e0 e5 01       	if (r0 == 0) goto 970 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >
 1e0da32:    d0 4a             	r0 = [r5 + 52]			  ## sm.c:4126:26
 1e0da34:    05 20             	if (r0 == 0) goto 10 <sm_event_packet_handler+0x17E : 1e0da40 >			  ## sm.c:4126:26
 1e0da36:    20 04             	r0 = r0.l (u)			  ## sm.c:4127:17
 1e0da38:    80 f3 25 1a       	call 13386 <sys_timer_del : 1e10e86 >			  ## sm.c:4127:17
 1e0da3c:    cd f4 00 59       	[r5 + 52] = 0			  ## sm.c:4128:40
 1e0da40:    20 6a             	r0 = b[r5 + 2] (u)			  ## sm.c:4132:26
 1e0da42:    39 20             	if (r0 == 0) goto 114 <sm_event_packet_handler+0x1F4 : 1e0dab6 >			  ## sm.c:4132:26
 1e0da44:    c0 4a             	r0 = [r5 + 48]			  ## sm.c:4136:53
 1e0da46:    f0 ef 3e 00       	if (r0 == -1) goto 124 <sm_event_packet_handler+0x204 : 1e0dac6 >			  ## sm.c:4136:53
 1e0da4a:    bf f3 84 f3       	call -6392 <le_device_db_remove : 1e0c156 >
 1e0da4e:    3b 18             	goto 118 <sm_event_packet_handler+0x204 : 1e0dac6 >
 1e0da50:    31 70             	r1 = 3			  ## sm.c:3920:30
 1e0da52:    40 08             	r0 = r4			  ## sm.c:3920:30
 1e0da54:    bf f3 33 d1       	call -23962 <little_endian_read_16 : 1e07cbe >			  ## sm.c:3920:30
 1e0da58:    bf f3 56 d1       	call -23892 <le_hci_connection_for_handle : 1e07d08 >			  ## sm.c:5074:36
 1e0da5c:    01 fc 3c 00       	r1 = r0 + 60			  ## sm.c:5078:22
 1e0da60:    06 70             	r6 = 0			  ## sm.c:5078:22
 1e0da62:    01 20             	if (r0 == 0) goto 2 <sm_event_packet_handler+0x1A4 : 1e0da66 >			  ## sm.c:5078:22
 1e0da64:    16 08             	r6 = r1			  ## sm.c:5075:9
 1e0da66:    00 e0 c9 01       	if (r0 == 0) goto 914 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >
 1e0da6a:    30 4c             	r0 = [r6 + 12]			  ## sm.c:3927:30
 1e0da6c:    d0 e5 8c 00       	if (r0 == 93) goto 280 <sm_event_packet_handler+0x2C6 : 1e0db88 >			  ## sm.c:3927:21
 1e0da70:    d0 e2 8d 10       	if (r0 != 45) goto 282 <sm_event_packet_handler+0x2CC : 1e0db8e >
 1e0da74:    c3 f4 14 69       	[r6 + 12] = 20			  ## sm.c:3928:46
 1e0da78:    c1 19             	goto 898 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >			  ## sm.c:3928:46
 1e0da7a:    05 4e             	r5 = [r7 + 0]			  ## sm.c:3612:13
 1e0da7c:    56 fc 3c 01       	r6 = r5 + 316			  ## sm.c:3612:13
 1e0da80:    30 4c             	r0 = [r6 + 12]			  ## sm.c:3612:21
 1e0da82:    69 98             	r9 = r4 + 6			  ## sm.c:4157:42
 1e0da84:    30 e0 29 10       	if (r0 != 3) goto 82 <sm_event_packet_handler+0x218 : 1e0dada >			  ## sm.c:3612:5
 1e0da88:    00 9d             	r0 = r6 + 16
 1e0da8a:    62 70             	r2 = 6			  ## sm.c:3627:13
 1e0da8c:    64 70             	r4 = 6			  ## sm.c:3627:13
 1e0da8e:    91 08             	r1 = r9			  ## sm.c:3627:13
 1e0da90:    97 f3 28 ca       	call 3118160 <memcpy : 106ee4 >			  ## sm.c:3627:13
 1e0da94:    00 6d             	r0 = b[r6 + 16] (u)			  ## sm.c:3628:42
 1e0da96:    20 fd 3f 09       	r0 = r0 & 63			  ## sm.c:3628:42
 1e0da9a:    08 6d             	b[r6 + 16] = r0			  ## sm.c:3628:42
 1e0da9c:    3c 4c             	[r6 + 12] = r4			  ## sm.c:3628:42
 1e0da9e:    ae 19             	goto 860 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >			  ## sm.c:3628:42
 1e0daa0:    22 68             	r2 = b[r4 + 2] (u)			  ## sm.c:4033:25
 1e0daa2:    20 fc fb ff       	r0 = r2 + -5			  ## sm.c:4033:17
 1e0daa6:    10 e0 a9 81       	if (r0 > 1) goto 850 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >			  ## sm.c:4033:17
 1e0daaa:    00 4e             	r0 = [r7 + 0]			  ## sm.c:4036:26
 1e0daac:    00 f9 40 01       	r0 = b[r0 + 320] (u)			  ## sm.c:4036:34
 1e0dab0:    96 20             	if (r0 == 0) goto 300 <sm_event_packet_handler+0x31C : 1e0dbde >			  ## sm.c:4036:34
 1e0dab2:    66 9a             	r6 = r5 + 6			  ## sm.c:4041:46
 1e0dab4:    9a 18             	goto 308 <sm_event_packet_handler+0x328 : 1e0dbea >			  ## sm.c:4041:46
 1e0dab6:    30 4a             	r0 = [r5 + 12]			  ## sm.c:4133:29
 1e0dab8:    70 e3 05 10       	if (r0 != 55) goto 10 <sm_event_packet_handler+0x204 : 1e0dac6 >			  ## sm.c:4133:29
 1e0dabc:    20 68             	r0 = b[r4 + 2] (u)			  ## sm.c:4134:20
 1e0dabe:    50 e0 02 10       	if (r0 != 5) goto 4 <sm_event_packet_handler+0x204 : 1e0dac6 >			  ## sm.c:4134:20
 1e0dac2:    c0 4a             	r0 = [r5 + 48]			  ## sm.c:4135:46
 1e0dac4:    c2 1f             	goto -124 <sm_event_packet_handler+0x188 : 1e0da4a >			  ## sm.c:4135:46
 1e0dac6:    00 70             	r0 = 0
 1e0dac8:    38 4a             	[r5 + 12] = r0			  ## sm.c:4143:38
 1e0daca:    08 5a             	h[r5 + 0] = r0			  ## sm.c:4144:32
 1e0dacc:    97 19             	goto 814 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >			  ## sm.c:4144:32
 1e0dace:    22 62             	r2 = b[r1 + 2] (u)			  ## sm.c:4104:21
 1e0dad0:    70 71             	r0 = 23			  ## sm.c:4104:21
 1e0dad2:    01 34             	if (r2 != 0) goto 2 <sm_event_packet_handler+0x214 : 1e0dad6 >			  ## sm.c:4104:21
 1e0dad4:    20 72             	r0 = 34			  ## sm.c:4104:21
 1e0dad6:    38 42             	[r1 + 12] = r0
 1e0dad8:    91 19             	goto 802 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >
 1e0dada:    08 f6 3c 60       	r8 = [r6 + 60]			  ## sm.c:3638:63
 1e0dade:    08 e0 8d 01       	if (r8 == 0) goto 794 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >
 1e0dae2:    01 f6 0c 80       	r1 = [r8 + 12]			  ## sm.c:3642:25
 1e0dae6:    50 fc 4c 00       	r0 = r5 + 76			  ## sm.c:3642:25
 1e0daea:    81 e0 a3 d0       	ifs (r1 <= 8) goto 326 <sm_event_packet_handler+0x372 : 1e0dc34 >			  ## sm.c:3642:25
 1e0daee:    91 e0 35 01       	if (r1 == 9) goto 618 <.GJTIE779_0_0_+0x56 : 1e0dd5c >
 1e0daf2:    54 fc b0 00       	r4 = r5 + 176
 1e0daf6:    81 e1 56 01       	if (r1 == 24) goto 684 <.GJTIE779_0_0_+0xA0 : 1e0dda6 >
 1e0dafa:    a1 e1 7f 11       	if (r1 != 26) goto 766 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >
 1e0dafe:    01 70             	r1 = 0			  ## sm.c:3712:31
 1e0db00:    90 08             	r0 = r9			  ## sm.c:3712:31
 1e0db02:    bf f3 4d f1       	call -7526 <big_endian_read_16 : 1e0bda0 >			  ## sm.c:3712:31
 1e0db06:    08 58             	h[r4 + 0] = r0			  ## sm.c:3712:29
 1e0db08:    c3 f4 1b 89       	[r8 + 12] = 27			  ## sm.c:3714:37
 1e0db0c:    77 19             	goto 750 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >			  ## sm.c:3714:37
 1e0db0e:    20 6a             	r0 = b[r5 + 2] (u)			  ## sm.c:4065:21
 1e0db10:    5d 20             	if (r0 == 0) goto 186 <sm_event_packet_handler+0x30A : 1e0dbcc >			  ## sm.c:4065:21
 1e0db12:    00 4e             	r0 = [r7 + 0]			  ## sm.c:4067:25
 1e0db14:    01 f9 30 00       	r1 = b[r0 + 48] (u)			  ## sm.c:4067:32
 1e0db18:    10 72             	r0 = 33			  ## sm.c:4067:25
 1e0db1a:    5f 22             	if (r1 == 0) goto 190 <sm_event_packet_handler+0x318 : 1e0dbda >			  ## sm.c:4067:25
 1e0db1c:    6e 19             	goto 732 <.GJTIE779_0_0_+0xF4 : 1e0ddfa >			  ## sm.c:4067:25
 1e0db1e:    11 4a             	r1 = [r5 + 4]			  ## sm.c:3366:21
 1e0db20:    41 e0 b1 00       	if (r1 == 4) goto 354 <sm_event_packet_handler+0x3C4 : 1e0dc86 >			  ## sm.c:3366:5
 1e0db24:    21 e0 b7 10       	if (r1 != 2) goto 366 <sm_event_packet_handler+0x3D4 : 1e0dc96 >
 1e0db28:    61 fc d0 01       	r1 = r6 + 464			  ## sm.c:3368:27
 1e0db2c:    bf f3 3a ec       	call -10124 <reverse_128 : 1e0b3a4 >			  ## sm.c:3368:9
 1e0db30:    10 6a             	r0 = b[r5 + 1] (u)			  ## sm.c:3370:41
 1e0db32:    22 fd f0 09       	r2 = r0 & 240			  ## sm.c:3370:41
 1e0db36:    12 b0             	r2 |= 1			  ## sm.c:3370:41
 1e0db38:    1a 6a             	b[r5 + 1] = r2			  ## sm.c:3370:41
 1e0db3a:    00 e1 1b 30       	if (r0 < 16) goto 54 <sm_event_packet_handler+0x2B2 : 1e0db74 >			  ## sm.c:3370:41
 1e0db3e:    44 a4             	r4 = sp + 68
 1e0db40:    10 08             	r0 = r1			  ## sm.c:3336:5
 1e0db42:    41 08             	r1 = r4			  ## sm.c:3336:5
 1e0db44:    bf f3 2e ec       	call -10148 <reverse_128 : 1e0b3a4 >			  ## sm.c:3336:5
 1e0db48:    65 a5             	r5 = sp + 86			  ## sm.c:3336:5
 1e0db4a:    50 08             	r0 = r5			  ## sm.c:3337:5
 1e0db4c:    80 f3 da 72       	call 58804 <ll_vendor_device_address_generate : 1e1c104 >			  ## sm.c:3337:5
 1e0db50:    50 71             	r0 = 21			  ## sm.c:3338:5
 1e0db52:    21 70             	r1 = 2			  ## sm.c:3338:5
 1e0db54:    02 70             	r2 = 0			  ## sm.c:3338:5
 1e0db56:    33 70             	r3 = 3			  ## sm.c:3338:5
 1e0db58:    bf f3 8f d2       	call -23266 <ble_user_cmd_prepare : 1e0807a >			  ## sm.c:3338:5
 1e0db5c:    50 08             	r0 = r5			  ## sm.c:3339:5
 1e0db5e:    80 f3 ca 84       	call 67988 <le_controller_set_random_mac : 1e1e4f6 >			  ## sm.c:3339:5
 1e0db62:    61 70             	r1 = 6			  ## sm.c:3341:5
 1e0db64:    50 08             	r0 = r5			  ## sm.c:3341:5
 1e0db66:    80 f3 b5 0b       	call 5994 <put_buf : 1e0f2d4 >			  ## sm.c:3341:5
 1e0db6a:    01 71             	r1 = 16			  ## sm.c:3342:5
 1e0db6c:    40 08             	r0 = r4			  ## sm.c:3342:5
 1e0db6e:    80 f3 b1 0b       	call 5986 <put_buf : 1e0f2d4 >			  ## sm.c:3342:5
 1e0db72:    06 4e             	r6 = [r7 + 0]			  ## sm.c:3342:5
 1e0db74:    00 f6 44 61       	r0 = [r6 + 324]			  ## sm.c:1171:66
 1e0db78:    10 80             	r0 += 1			  ## sm.c:1171:77
 1e0db7a:    10 f6 44 61       	[r6 + 324] = r0			  ## sm.c:1171:23
 1e0db7e:    3e 19             	goto 636 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >			  ## sm.c:1171:23
 1e0db80:    00 70             	r0 = 0			  ## sm.c:3358:13
 1e0db82:    bf f3 f8 f4       	call -5648 <sm_address_resolution_handle_event : 1e0c576 >			  ## sm.c:3358:13
 1e0db86:    3a 19             	goto 628 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >			  ## sm.c:3358:13
 1e0db88:    c3 f4 2e 69       	[r6 + 12] = 46			  ## sm.c:3933:46
 1e0db8c:    37 19             	goto 622 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >			  ## sm.c:3933:46
 1e0db8e:    50 98             	r0 = r4 + 5			  ## sm.c:3938:29
 1e0db90:    65 fc 26 00       	r5 = r6 + 38			  ## sm.c:3938:40
 1e0db94:    51 08             	r1 = r5			  ## sm.c:3938:17
 1e0db96:    bf f3 07 ed       	call -9714 <reverse_64 : 1e0b5a8 >			  ## sm.c:3938:17
 1e0db9a:    d1 70             	r1 = 13			  ## sm.c:3939:42
 1e0db9c:    40 08             	r0 = r4			  ## sm.c:3939:42
 1e0db9e:    bf f3 8e d0       	call -24292 <little_endian_read_16 : 1e07cbe >			  ## sm.c:3939:42
 1e0dba2:    28 5d             	h[r6 + 36] = r0			  ## sm.c:3939:40
 1e0dba4:    0a 30             	if (r0 != 0) goto 20 <sm_event_packet_handler+0x2F8 : 1e0dbba >			  ## sm.c:3939:40
 1e0dba6:    00 70             	r0 = 0
 1e0dba8:    01 fa 00 50       	r1 = b[r5+r0] (u)			  ## sm.c:597:13
 1e0dbac:    06 32             	if (r1 != 0) goto 12 <sm_event_packet_handler+0x2F8 : 1e0dbba >			  ## sm.c:597:13
 1e0dbae:    10 80             	r0 += 1			  ## sm.c:596:29
 1e0dbb0:    70 e0 fa df       	ifs (r0 <= 7) goto -12 <sm_event_packet_handler+0x2E6 : 1e0dba8 >
 1e0dbb4:    c3 f4 27 69       	[r6 + 12] = 39			  ## sm.c:3974:42
 1e0dbb8:    21 19             	goto 578 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >			  ## sm.c:3974:42
 1e0dbba:    51 6c             	r1 = b[r6 + 5] (u)			  ## sm.c:3946:21
 1e0dbbc:    00 5c             	r0 = h[r6 + 0] (u)			  ## sm.c:3946:21
 1e0dbbe:    62 9c             	r2 = r6 + 6			  ## sm.c:3947:46
 1e0dbc0:    13 70             	r3 = 1			  ## sm.c:3946:21
 1e0dbc2:    bf f3 47 f5       	call -5490 <sm_notify_client_process : 1e0c654 >			  ## sm.c:3946:21
 1e0dbc6:    c3 f4 25 69       	[r6 + 12] = 37			  ## sm.c:3950:50
 1e0dbca:    18 19             	goto 560 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >			  ## sm.c:3950:50
 1e0dbcc:    00 70             	r0 = 0			  ## sm.c:4074:25
 1e0dbce:    bf f3 1c f7       	call -4552 <sm_key_distribution_all_received : 1e0ca0a >			  ## sm.c:4074:25
 1e0dbd2:    c2 20             	if (r0 == 0) goto 388 <.GJTIE779_0_0_+0x52 : 1e0dd58 >			  ## sm.c:4074:25
 1e0dbd4:    50 08             	r0 = r5			  ## sm.c:4076:25
 1e0dbd6:    bf f3 3a f7       	call -4492 <sm_key_distribution_handle_all_received : 1e0ca4e >			  ## sm.c:4076:25
 1e0dbda:    70 71             	r0 = 23
 1e0dbdc:    0e 19             	goto 540 <.GJTIE779_0_0_+0xF4 : 1e0ddfa >
 1e0dbde:    51 6a             	r1 = b[r5 + 5] (u)			  ## sm.c:4038:25
 1e0dbe0:    66 9a             	r6 = r5 + 6			  ## sm.c:4038:48
 1e0dbe2:    60 08             	r0 = r6			  ## sm.c:4038:25
 1e0dbe4:    bf f3 99 f0       	call -7886 <ble_list_delete_device : 1e0bd1a >			  ## sm.c:4038:25
 1e0dbe8:    22 68             	r2 = b[r4 + 2] (u)			  ## sm.c:4038:25
 1e0dbea:    51 6a             	r1 = b[r5 + 5] (u)			  ## sm.c:4040:21
 1e0dbec:    00 5a             	r0 = h[r5 + 0] (u)			  ## sm.c:4040:21
 1e0dbee:    53 70             	r3 = 5			  ## sm.c:4040:98
 1e0dbf0:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## sm.c:4041:106
 1e0dbf4:    62 08             	r2 = r6			  ## sm.c:4040:21
 1e0dbf6:    bf f3 2d f5       	call -5542 <sm_notify_client_process : 1e0c654 >			  ## sm.c:4040:21
 1e0dbfa:    20 6a             	r0 = b[r5 + 2] (u)			  ## sm.c:4043:26
 1e0dbfc:    ff 30             	if (r0 != 0) goto 510 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >			  ## sm.c:4043:26
 1e0dbfe:    00 4e             	r0 = [r7 + 0]			  ## sm.c:4044:29
 1e0dc00:    00 f7 3a 01       	r0 = h[r0 + 314] (u)			  ## sm.c:4044:37
 1e0dc04:    23 ff 40 0a 61 00 	if (r0 < 16384) goto 194 <sm_event_packet_handler+0x40A : 1e0dccc >			  ## sm.c:4044:29
 1e0dc0a:    c0 4a             	r0 = [r5 + 48]			  ## sm.c:3789:18
 1e0dc0c:    f0 ef 04 00       	if (r0 == -1) goto 8 <sm_event_packet_handler+0x356 : 1e0dc18 >			  ## sm.c:3789:18
 1e0dc10:    bf f3 a1 f2       	call -6846 <le_device_db_remove : 1e0c156 >			  ## sm.c:3790:9
 1e0dc14:    cc f4 ff 5f       	[r5 + 48] = 4294967295			  ## sm.c:3791:33
 1e0dc18:    00 70             	r0 = 0
 1e0dc1a:    d8 4a             	[r5 + 52] = r0			  ## sm.c:3794:28
 1e0dc1c:    48 6b             	b[r5 + 20] = r0			  ## sm.c:3797:42
 1e0dc1e:    88 4a             	[r5 + 32] = r0			  ## sm.c:3798:48
 1e0dc20:    c4 f4 01 59       	[r5 + 16] = 1			  ## sm.c:3800:34
 1e0dc24:    c3 f4 34 59       	[r5 + 12] = 52			  ## sm.c:3801:30
 1e0dc28:    00 5a             	r0 = h[r5 + 0] (u)			  ## sm.c:3802:5
 1e0dc2a:    bf f3 30 f6       	call -5024 <sm_done_for_handle : 1e0c88e >			  ## sm.c:3802:5
 1e0dc2e:    00 5a             	r0 = h[r5 + 0] (u)			  ## sm.c:3803:5
 1e0dc30:    06 16             	call -1012 <sm_api_request_pairing : 1e0d83e >			  ## sm.c:3803:5
 1e0dc32:    e4 18             	goto 456 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >			  ## sm.c:3803:5
 1e0dc34:    51 e0 cf 00       	if (r1 == 5) goto 414 <.GJTIE779_0_0_+0xD0 : 1e0ddd6 >
 1e0dc38:    71 e0 e0 10       	if (r1 != 7) goto 448 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >
 1e0dc3c:    01 f9 02 90       	r1 = b[r9 + 2] (u)			  ## sm.c:3695:9
 1e0dc40:    02 f9 06 90       	r2 = b[r9 + 6] (u)			  ## sm.c:3695:9
 1e0dc44:    63 68             	r3 = b[r4 + 6] (u)			  ## sm.c:3695:9
 1e0dc46:    0a f9 01 90       	r10 = b[r9 + 1] (u)			  ## sm.c:3695:9
 1e0dc4a:    05 f9 07 90       	r5 = b[r9 + 7] (u)			  ## sm.c:3695:9
 1e0dc4e:    06 f9 05 90       	r6 = b[r9 + 5] (u)			  ## sm.c:3695:9
 1e0dc52:    07 f9 04 90       	r7 = b[r9 + 4] (u)			  ## sm.c:3695:9
 1e0dc56:    04 f9 03 90       	r4 = b[r9 + 3] (u)			  ## sm.c:3695:9
 1e0dc5a:    ad 60             	b[r0 + 10] = r5			  ## sm.c:3695:9
 1e0dc5c:    8e 60             	b[r0 + 8] = r6			  ## sm.c:3695:9
 1e0dc5e:    7f 60             	b[r0 + 7] = r7			  ## sm.c:3695:9
 1e0dc60:    6c 60             	b[r0 + 6] = r4			  ## sm.c:3695:9
 1e0dc62:    1a f9 04 00       	b[r0 + 4] = r10			  ## sm.c:3695:9
 1e0dc66:    3b 60             	b[r0 + 3] = r3			  ## sm.c:3695:9
 1e0dc68:    c8 fd 40 25       	r2 <= insert(r5, p:8, l:8)			  ## sm.c:3695:9
 1e0dc6c:    d0 fd 80 72       	r7 <= insert(r2, p:16, l:16)			  ## sm.c:3695:9
 1e0dc70:    3a d4             	r2 = r7 >> 16			  ## sm.c:3695:9
 1e0dc72:    9a 60             	b[r0 + 9] = r2			  ## sm.c:3695:9
 1e0dc74:    c8 fd 40 14       	r1 <= insert(r4, p:8, l:8)			  ## sm.c:3695:9
 1e0dc78:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## sm.c:3695:9
 1e0dc7c:    19 d4             	r1 = r3 >> 16			  ## sm.c:3695:9
 1e0dc7e:    59 60             	b[r0 + 5] = r1			  ## sm.c:3695:9
 1e0dc80:    c3 f4 08 89       	[r8 + 12] = 8			  ## sm.c:3696:37
 1e0dc84:    bb 18             	goto 374 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >			  ## sm.c:3696:37
 1e0dc86:    61 fc c0 01       	r1 = r6 + 448			  ## sm.c:3377:27
 1e0dc8a:    bf f3 8b eb       	call -10474 <reverse_128 : 1e0b3a4 >			  ## sm.c:3377:9
 1e0dc8e:    10 4a             	r0 = [r5 + 4]			  ## sm.c:1171:66
 1e0dc90:    10 80             	r0 += 1			  ## sm.c:1171:77
 1e0dc92:    18 4a             	[r5 + 4] = r0			  ## sm.c:1171:23
 1e0dc94:    b3 18             	goto 358 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >			  ## sm.c:1171:23
 1e0dc96:    21 4a             	r1 = [r5 + 8]			  ## sm.c:3386:21
 1e0dc98:    51 e0 1d 10       	if (r1 != 5) goto 58 <sm_event_packet_handler+0x414 : 1e0dcd6 >			  ## sm.c:3386:5
 1e0dc9c:    f1 9a             	r1 = r5 + 15			  ## sm.c:3388:27
 1e0dc9e:    bf f3 76 f0       	call -7956 <reverse_24 : 1e0bd8e >			  ## sm.c:3388:9
 1e0dca2:    20 4a             	r0 = [r5 + 8]			  ## sm.c:1175:65
 1e0dca4:    10 80             	r0 += 1			  ## sm.c:1175:76
 1e0dca6:    28 4a             	[r5 + 8] = r0			  ## sm.c:1175:23
 1e0dca8:    a9 18             	goto 338 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >			  ## sm.c:1175:23
 1e0dcaa:    50 08             	r0 = r5			  ## sm.c:3900:25
 1e0dcac:    fa 14             	call -1548 <sm_master_pair_get_list : 1e0d6a2 >			  ## sm.c:3900:25
 1e0dcae:    01 4e             	r1 = [r7 + 0]			  ## sm.c:3900:25
 1e0dcb0:    9d 20             	if (r0 == 0) goto 314 <.GJTIE779_0_0_+0xE6 : 1e0ddec >			  ## sm.c:3900:25
 1e0dcb2:    02 f7 9c 11       	r2 = h[r1 + 412] (u)			  ## sm.c:3901:37
 1e0dcb6:    a6 24             	if (r2 == 0) goto 332 <.GJTIE779_0_0_+0xFE : 1e0de04 >			  ## sm.c:3901:29
 1e0dcb8:    c3 f4 34 59       	[r5 + 12] = 52			  ## sm.c:3904:54
 1e0dcbc:    00 5a             	r0 = h[r5 + 0] (u)			  ## sm.c:3905:70
 1e0dcbe:    c1 ff 42 e3 e0 01 	r1 = 31515458 <sm_timeout_handler_pair : 1e0e342 >			  ## sm.c:3905:54
 1e0dcc4:    80 f3 30 1a       	call 13408 <sys_timeout_add : 1e11128 >			  ## sm.c:3905:54
 1e0dcc8:    d8 4a             	[r5 + 52] = r0			  ## sm.c:3905:52
 1e0dcca:    98 18             	goto 304 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >			  ## sm.c:3905:52
 1e0dccc:    00 5a             	r0 = h[r5 + 0] (u)			  ## sm.c:4047:55
 1e0dcce:    21 70             	r1 = 2			  ## sm.c:4047:29
 1e0dcd0:    bf f3 ee f5       	call -5156 <sm_set_timeout_disconnect : 1e0c8b0 >			  ## sm.c:4047:29
 1e0dcd4:    93 18             	goto 294 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >			  ## sm.c:4047:29
 1e0dcd6:    d5 4a             	r5 = [r5 + 52]			  ## sm.c:3411:63
 1e0dcd8:    91 2a             	if (r5 == 0) goto 290 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >
 1e0dcda:    31 4a             	r1 = [r5 + 12]			  ## sm.c:3415:25
 1e0dcdc:    49 9d             	r9 = r6 + 20			  ## sm.c:3415:25
 1e0dcde:    66 fc 94 00       	r6 = r6 + 148			  ## sm.c:3415:25
 1e0dce2:    b1 e1 92 c0       	ifs (r1 > 27) goto 292 <.GJTIE779_0_0_+0x104 : 1e0de0a >			  ## sm.c:3415:5
 1e0dce6:    51 8f             	r1 += -11
 1e0dce8:    a1 e0 88 80       	if (r1 > 10) goto 272 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >
 1e0dcec:    4a c0             	r2 = r1 << 1
 1e0dcee:    b2 00             	tbh [r2]


.GJTIL779_0_0_:
 1e0dcf0:    0b 00     < 11 : 0xB >
 1e0dcf2:    86 00     < 134 : 0x86 >
 1e0dcf4:    e4 00     < 228 : 0xE4 >
 1e0dcf6:    86 00     < 134 : 0x86 >
 1e0dcf8:    0b 00     < 11 : 0xB >
 1e0dcfa:    86 00     < 134 : 0x86 >
 1e0dcfc:    eb 00     < 235 : 0xEB >
 1e0dcfe:    86 00     < 134 : 0x86 >
 1e0dd00:    86 00     < 134 : 0x86 >
 1e0dd02:    86 00     < 134 : 0x86 >
 1e0dd04:    fa 00     < 250 : 0xFA >
 1e0dd06:    18 a3             	r8 = sp + 49
 1e0dd08:    81 08             	r1 = r8			  ## sm.c:3419:9
 1e0dd0a:    bf f3 4b eb       	call -10602 <reverse_128 : 1e0b3a4 >			  ## sm.c:3419:9
 1e0dd0e:    04 70             	r4 = 0
 1e0dd10:    1c 03             	[sp+68] = r4			  ## sm.c:836:5
 1e0dd12:    47 a4             	r7 = sp + 68			  ## sm.c:836:5
 1e0dd14:    40 9e             	r0 = r7 + 4			  ## sm.c:837:13
 1e0dd16:    91 fc 7d 00       	r1 = r9 + 125			  ## sm.c:3420:22
 1e0dd1a:    62 70             	r2 = 6			  ## sm.c:837:5
 1e0dd1c:    97 f3 e2 c8       	call 3117508 <memcpy : 106ee4 >			  ## sm.c:837:5
 1e0dd20:    a0 9e             	r0 = r7 + 10			  ## sm.c:838:13
 1e0dd22:    31 9c             	r1 = r6 + 3			  ## sm.c:3420:43
 1e0dd24:    62 70             	r2 = 6			  ## sm.c:838:5
 1e0dd26:    97 f3 dd c8       	call 3117498 <memcpy : 106ee4 >			  ## sm.c:838:5
 1e0dd2a:    c0 f5 31 00       	r0 = b[sp+49] (u)			  ## sm.c:844:17
 1e0dd2e:    10 f9 1d 90       	b[r9 + 29] = r0			  ## sm.c:844:15
 1e0dd32:    00 fd 01 79       	r0 = r7 | 1			  ## sm.c:843:5
 1e0dd36:    81 fc 01 00       	r1 = r8 + 1			  ## sm.c:843:5
 1e0dd3a:    92 fc 1e 00       	r2 = r9 + 30			  ## sm.c:843:5
 1e0dd3e:    03 fa 00 04       	r3 = b[r0+r4] (u)
 1e0dd42:    06 fa 00 14       	r6 = b[r1+r4] (u)			  ## sm.c:844:17
 1e0dd46:    d3 bc             	r3 ^= r6			  ## sm.c:844:23
 1e0dd48:    13 fa 00 24       	b[r2+r4] = r3			  ## sm.c:844:15
 1e0dd4c:    14 80             	r4 += 1			  ## sm.c:843:19
 1e0dd4e:    f4 e0 f6 1f       	if (r4 != 15) goto -20 <.GJTIE779_0_0_+0x38 : 1e0dd3e >			  ## sm.c:843:5
 1e0dd52:    30 4a             	r0 = [r5 + 12]			  ## sm.c:1167:74
 1e0dd54:    10 80             	r0 += 1			  ## sm.c:1167:91
 1e0dd56:    51 18             	goto 162 <.GJTIE779_0_0_+0xF4 : 1e0ddfa >			  ## sm.c:1167:91
 1e0dd58:    20 72             	r0 = 34
 1e0dd5a:    4f 18             	goto 158 <.GJTIE779_0_0_+0xF4 : 1e0ddfa >
 1e0dd5c:    01 f9 02 90       	r1 = b[r9 + 2] (u)			  ## sm.c:3699:9
 1e0dd60:    02 f9 06 90       	r2 = b[r9 + 6] (u)			  ## sm.c:3699:9
 1e0dd64:    63 68             	r3 = b[r4 + 6] (u)			  ## sm.c:3699:9
 1e0dd66:    0a f9 01 90       	r10 = b[r9 + 1] (u)			  ## sm.c:3699:9
 1e0dd6a:    05 f9 07 90       	r5 = b[r9 + 7] (u)			  ## sm.c:3699:9
 1e0dd6e:    06 f9 05 90       	r6 = b[r9 + 5] (u)			  ## sm.c:3699:9
 1e0dd72:    07 f9 04 90       	r7 = b[r9 + 4] (u)			  ## sm.c:3699:9
 1e0dd76:    04 f9 03 90       	r4 = b[r9 + 3] (u)			  ## sm.c:3699:9
 1e0dd7a:    2d 61             	b[r0 + 18] = r5			  ## sm.c:3699:9
 1e0dd7c:    0e 61             	b[r0 + 16] = r6			  ## sm.c:3699:9
 1e0dd7e:    ff 60             	b[r0 + 15] = r7			  ## sm.c:3699:9
 1e0dd80:    ec 60             	b[r0 + 14] = r4			  ## sm.c:3699:9
 1e0dd82:    1a f9 0c 00       	b[r0 + 12] = r10			  ## sm.c:3699:9
 1e0dd86:    bb 60             	b[r0 + 11] = r3			  ## sm.c:3699:9
 1e0dd88:    c8 fd 40 25       	r2 <= insert(r5, p:8, l:8)			  ## sm.c:3699:9
 1e0dd8c:    d0 fd 80 72       	r7 <= insert(r2, p:16, l:16)			  ## sm.c:3699:9
 1e0dd90:    3a d4             	r2 = r7 >> 16			  ## sm.c:3699:9
 1e0dd92:    1a 61             	b[r0 + 17] = r2			  ## sm.c:3699:9
 1e0dd94:    c8 fd 40 14       	r1 <= insert(r4, p:8, l:8)			  ## sm.c:3699:9
 1e0dd98:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## sm.c:3699:9
 1e0dd9c:    19 d4             	r1 = r3 >> 16			  ## sm.c:3699:9
 1e0dd9e:    d9 60             	b[r0 + 13] = r1			  ## sm.c:3699:9
 1e0dda0:    c3 f4 0a 89       	[r8 + 12] = 10			  ## sm.c:3700:37
 1e0dda4:    2b 18             	goto 86 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >			  ## sm.c:3700:37
 1e0dda6:    01 fc 68 00       	r1 = r0 + 104			  ## sm.c:3703:26
 1e0ddaa:    90 08             	r0 = r9			  ## sm.c:3703:9
 1e0ddac:    bf f3 fc eb       	call -10248 <reverse_64 : 1e0b5a8 >			  ## sm.c:3703:9
 1e0ddb0:    b0 68             	r0 = b[r4 + 11] (u)			  ## sm.c:3705:36
 1e0ddb2:    01 f9 15 80       	r1 = b[r8 + 21] (u)			  ## sm.c:3705:83
 1e0ddb6:    30 fd 0f 09       	r0 = r0 & 4294967280			  ## sm.c:3705:60
 1e0ddba:    10 09             	r0 += r1			  ## sm.c:3705:113
 1e0ddbc:    f0 8f             	r0 += -1			  ## sm.c:3705:68
 1e0ddbe:    b8 68             	b[r4 + 11] = r0			  ## sm.c:3705:33
 1e0ddc0:    01 f9 14 80       	r1 = b[r8 + 20] (u)			  ## sm.c:3707:83
 1e0ddc4:    20 fd ef 09       	r0 = r0 & 239			  ## sm.c:3707:60
 1e0ddc8:    21 fd f0 19       	r1 = r1 & 240			  ## sm.c:3707:111
 1e0ddcc:    10 09             	r0 += r1			  ## sm.c:3707:68
 1e0ddce:    b8 68             	b[r4 + 11] = r0			  ## sm.c:3707:33
 1e0ddd0:    c3 f4 19 89       	[r8 + 12] = 25			  ## sm.c:3708:37
 1e0ddd4:    13 18             	goto 38 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >			  ## sm.c:3708:37
 1e0ddd6:    50 fc 20 00       	r0 = r5 + 32			  ## sm.c:618:5
 1e0ddda:    01 70             	r1 = 0			  ## sm.c:619:25
 1e0dddc:    02 71             	r2 = 16			  ## sm.c:619:25
 1e0ddde:    97 f3 87 c8       	call 3117326 <memset : 106ef0 >			  ## sm.c:619:25
 1e0dde2:    01 4c             	r1 = [r6 + 0]			  ## sm.c:3663:21
 1e0dde4:    f1 ef 29 00       	if (r1 == -1) goto 82 <.GJTIE779_0_0_+0x134 : 1e0de3a >
 1e0dde8:    79 03             	[sp+92] = r1			  ## sm.c:3675:16
 1e0ddea:    42 18             	goto 132 <.GJTIE779_0_0_+0x16A : 1e0de70 >			  ## sm.c:3675:16
 1e0ddec:    01 f7 3a 11       	r1 = h[r1 + 314] (u)			  ## sm.c:3910:37
 1e0ddf0:    80 73             	r0 = 56			  ## sm.c:3910:29
 1e0ddf2:    61 ff 30 1a 01 00 	if ((r1 & 12288) != 0) goto 2 <.GJTIE779_0_0_+0xF4 : 1e0ddfa >			  ## sm.c:3910:29
 1e0ddf8:    40 73             	r0 = 52			  ## sm.c:3910:29
 1e0ddfa:    38 4a             	[r5 + 12] = r0
 1e0ddfc:    bf f3 c2 f6       	call -4732 <sm_run : 1e0cb84 >			  ## sm.c:4183:5
 1e0de00:    30 0a             	sp += 96
 1e0de02:    5a 01             	{pc, r10-r4} = [sp++]			  ## sm.c:4184:1
 1e0de04:    c3 f4 35 59       	[r5 + 12] = 53			  ## sm.c:3907:54
 1e0de08:    f9 1f             	goto -14 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >			  ## sm.c:3907:54
 1e0de0a:    f1 e1 41 d0       	ifs (r1 <= 31) goto 130 <.GJTIE779_0_0_+0x18A : 1e0de90 >
 1e0de0e:    01 e2 7b 00       	if (r1 == 32) goto 246 <.GJTIE779_0_0_+0x202 : 1e0df08 >
 1e0de12:    01 e3 83 00       	if (r1 == 48) goto 262 <.GJTIE779_0_0_+0x216 : 1e0df1c >
 1e0de16:    21 e3 f1 1f       	if (r1 != 50) goto -30 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >
 1e0de1a:    94 9c             	r4 = r6 + 9			  ## sm.c:3511:27
 1e0de1c:    41 08             	r1 = r4			  ## sm.c:3511:9
 1e0de1e:    bf f3 c1 ea       	call -10878 <reverse_128 : 1e0b3a4 >			  ## sm.c:3511:9
 1e0de22:    50 6b             	r0 = b[r5 + 21] (u)			  ## sm.c:3512:52
 1e0de24:    f0 e0 06 80       	if (r0 > 15) goto 12 <.GJTIE779_0_0_+0x12E : 1e0de34 >			  ## sm.c:3512:52
 1e0de28:    62 fb 10 09       	r2 = 16 - r0			  ## sm.c:629:16
 1e0de2c:    01 70             	r1 = 0			  ## sm.c:629:21
 1e0de2e:    40 08             	r0 = r4			  ## sm.c:629:21
 1e0de30:    97 f3 5e c8       	call 3117244 <memset : 106ef0 >			  ## sm.c:629:21
 1e0de34:    c3 f4 33 59       	[r5 + 12] = 51			  ## sm.c:3514:37
 1e0de38:    e1 1f             	goto -62 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >			  ## sm.c:3514:37
 1e0de3a:    01 70             	r1 = 0			  ## sm.c:3665:18
 1e0de3c:    90 08             	r0 = r9			  ## sm.c:3665:18
 1e0de3e:    bf f3 ba d6       	call -21132 <little_endian_read_32 : 1e08bb6 >			  ## sm.c:3665:18
 1e0de42:    c1 ff ff ff 0f 00 	r1 = 1048575 <text_size+0xDF14F : fffff >			  ## sm.c:3666:21
 1e0de48:    50 b3             	r0 &= r1			  ## sm.c:3666:21
 1e0de4a:    c1 ff c1 bd f0 ff 	r1 = 4293967297 <bank_code_load_addr+0xE87C9 : 1f0bdc1 >			  ## sm.c:3668:25
 1e0de50:    01 09             	r1 += r0			  ## sm.c:3668:25
 1e0de52:    c2 ff 3e 42 0f 00 	r2 = 999998 <text_size+0xD338E : f423e >			  ## sm.c:3667:20
 1e0de58:    20 f2 01 80       	if (r0 > r2) goto 2 <.GJTIE779_0_0_+0x158 : 1e0de5e >			  ## sm.c:3667:20
 1e0de5c:    01 08             	r1 = r0			  ## sm.c:3667:17
 1e0de5e:    79 03             	[sp+92] = r1			  ## sm.c:3666:16
 1e0de60:    72 4d             	r2 = [r6 + 92]			  ## sm.c:3670:25
 1e0de62:    06 24             	if (r2 == 0) goto 12 <.GJTIE779_0_0_+0x16A : 1e0de70 >			  ## sm.c:3670:25
 1e0de64:    01 f7 00 80       	r1 = h[r8 + 0] (u)			  ## sm.c:3671:17
 1e0de68:    c0 a5             	r0 = sp + 92			  ## sm.c:3671:17
 1e0de6a:    82 00             	call r2			  ## sm.c:3671:17
 1e0de6c:    05 4e             	r5 = [r7 + 0]
 1e0de6e:    71 03             	r1 = [sp+92]
 1e0de70:    50 fc 20 00       	r0 = r5 + 32			  ## sm.c:3677:29
 1e0de74:    bf f3 0b d2       	call -23530 <big_endian_store_32 : 1e0828e >			  ## sm.c:3677:9
 1e0de78:    01 f9 02 80       	r1 = b[r8 + 2] (u)			  ## sm.c:3678:13
 1e0de7c:    a0 72             	r0 = 42
 1e0de7e:    05 32             	if (r1 != 0) goto 10 <.GJTIE779_0_0_+0x184 : 1e0de8a >
 1e0de80:    00 4e             	r0 = [r7 + 0]			  ## sm.c:3681:17
 1e0de82:    01 f9 30 00       	r1 = b[r0 + 48] (u)			  ## sm.c:3681:24
 1e0de86:    f0 73             	r0 = 63			  ## sm.c:3681:24
 1e0de88:    0d 22             	if (r1 == 0) goto 26 <.GJTIE779_0_0_+0x19E : 1e0dea4 >			  ## sm.c:3681:24
 1e0de8a:    10 f6 0c 80       	[r8 + 12] = r0
 1e0de8e:    b6 1f             	goto -148 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >
 1e0de90:    c1 e1 53 00       	if (r1 == 28) goto 166 <.GJTIE779_0_0_+0x234 : 1e0df3a >
 1e0de94:    e1 e1 b2 1f       	if (r1 != 30) goto -156 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >
 1e0de98:    91 9c             	r1 = r6 + 9			  ## sm.c:3483:27
 1e0de9a:    bf f3 83 ea       	call -11002 <reverse_128 : 1e0b3a4 >			  ## sm.c:3483:9
 1e0de9e:    c3 f4 1f 59       	[r5 + 12] = 31			  ## sm.c:3486:37
 1e0dea2:    ac 1f             	goto -168 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >			  ## sm.c:3486:37
 1e0dea4:    c3 f4 03 89       	[r8 + 12] = 3			  ## sm.c:3684:45
 1e0dea8:    80 08             	r0 = r8			  ## sm.c:3685:17
 1e0deaa:    bf f3 3d f5       	call -5510 <sm_trigger_user_response : 1e0c928 >			  ## sm.c:3685:17
 1e0deae:    00 4e             	r0 = [r7 + 0]			  ## sm.c:3687:21
 1e0deb0:    50 61             	r0 = b[r0 + 21] (u)			  ## sm.c:3687:28
 1e0deb2:    a4 31             	if (r0 != 0) goto -184 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >			  ## sm.c:3687:28
 1e0deb4:    60 70             	r0 = 6
 1e0deb6:    e9 1f             	goto -46 <.GJTIE779_0_0_+0x184 : 1e0de8a >
 1e0deb8:    91 fc 4b 00       	r1 = r9 + 75			  ## sm.c:3425:27
 1e0debc:    bf f3 72 ea       	call -11036 <reverse_128 : 1e0b3a4 >			  ## sm.c:3425:9
 1e0dec0:    c3 f4 12 59       	[r5 + 12] = 18			  ## sm.c:3427:37
 1e0dec4:    9b 1f             	goto -202 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >			  ## sm.c:3427:37
 1e0dec6:    11 a2             	r1 = sp + 33
 1e0dec8:    bf f3 6c ea       	call -11048 <reverse_128 : 1e0b3a4 >			  ## sm.c:3431:9
 1e0decc:    90 fc 6b 00       	r0 = r9 + 107			  ## sm.c:3433:20
 1e0ded0:    02 71             	r2 = 16			  ## sm.c:3433:13
 1e0ded2:    97 f3 0b c8       	call 3117078 <memcmp : 106eec >			  ## sm.c:3433:13
 1e0ded6:    40 20             	if (r0 == 0) goto 128 <.GJTIE779_0_0_+0x252 : 1e0df58 >			  ## sm.c:3433:13
 1e0ded8:    40 70             	r0 = 4			  ## sm.c:3434:45
 1e0deda:    10 f9 00 90       	b[r9 + 0] = r0			  ## sm.c:3434:45
 1e0dede:    c3 f4 01 59       	[r5 + 12] = 1			  ## sm.c:3435:41
 1e0dee2:    8c 1f             	goto -232 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >			  ## sm.c:3435:41
 1e0dee4:    94 9c             	r4 = r6 + 9			  ## sm.c:3446:27
 1e0dee6:    41 08             	r1 = r4			  ## sm.c:3446:9
 1e0dee8:    bf f3 5c ea       	call -11080 <reverse_128 : 1e0b3a4 >			  ## sm.c:3446:9
 1e0deec:    50 6b             	r0 = b[r5 + 21] (u)			  ## sm.c:3447:52
 1e0deee:    f0 e0 06 80       	if (r0 > 15) goto 12 <.GJTIE779_0_0_+0x1F8 : 1e0defe >			  ## sm.c:3447:52
 1e0def2:    62 fb 10 09       	r2 = 16 - r0			  ## sm.c:629:16
 1e0def6:    01 70             	r1 = 0			  ## sm.c:629:21
 1e0def8:    40 08             	r0 = r4			  ## sm.c:629:21
 1e0defa:    97 f3 f9 c7       	call 3117042 <memset : 106ef0 >			  ## sm.c:629:21
 1e0defe:    21 6a             	r1 = b[r5 + 2] (u)			  ## sm.c:3449:13
 1e0df00:    e0 72             	r0 = 46			  ## sm.c:3449:13
 1e0df02:    7b 33             	if (r1 != 0) goto -266 <.GJTIE779_0_0_+0xF4 : 1e0ddfa >			  ## sm.c:3449:13
 1e0df04:    d0 73             	r0 = 61			  ## sm.c:3449:13
 1e0df06:    79 1f             	goto -270 <.GJTIE779_0_0_+0xF4 : 1e0ddfa >			  ## sm.c:3449:13
 1e0df08:    61 fc 38 00       	r1 = r6 + 56			  ## sm.c:3489:27
 1e0df0c:    bf f3 4a ea       	call -11116 <reverse_128 : 1e0b3a4 >			  ## sm.c:3489:9
 1e0df10:    00 f9 03 90       	r0 = b[r9 + 3] (u)			  ## sm.c:3491:20
 1e0df14:    26 20             	if (r0 == 0) goto 76 <.GJTIE779_0_0_+0x25C : 1e0df62 >			  ## sm.c:3491:13
 1e0df16:    c3 f4 21 59       	[r5 + 12] = 33			  ## sm.c:3492:41
 1e0df1a:    70 1f             	goto -288 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >			  ## sm.c:3492:41
 1e0df1c:    14 a0             	r4 = sp + 1
 1e0df1e:    41 08             	r1 = r4			  ## sm.c:3470:9
 1e0df20:    bf f3 40 ea       	call -11136 <reverse_128 : 1e0b3a4 >			  ## sm.c:3470:9
 1e0df24:    e1 70             	r1 = 14			  ## sm.c:3471:29
 1e0df26:    40 08             	r0 = r4			  ## sm.c:3471:29
 1e0df28:    bf f3 3a ef       	call -8588 <big_endian_read_16 : 1e0bda0 >			  ## sm.c:3471:29
 1e0df2c:    d8 5c             	h[r6 + 26] = r0			  ## sm.c:3471:27
 1e0df2e:    f1 5c             	r1 = h[r6 + 30] (u)			  ## sm.c:3475:51
 1e0df30:    d0 b2             	r0 ^= r1			  ## sm.c:3475:49
 1e0df32:    e8 5c             	h[r6 + 28] = r0			  ## sm.c:3475:29
 1e0df34:    c3 f4 31 59       	[r5 + 12] = 49			  ## sm.c:3479:37
 1e0df38:    61 1f             	goto -318 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >			  ## sm.c:3479:37
 1e0df3a:    14 a1             	r4 = sp + 17
 1e0df3c:    41 08             	r1 = r4			  ## sm.c:3457:9
 1e0df3e:    bf f3 31 ea       	call -11166 <reverse_128 : 1e0b3a4 >			  ## sm.c:3457:9
 1e0df42:    e1 70             	r1 = 14			  ## sm.c:3458:29
 1e0df44:    40 08             	r0 = r4			  ## sm.c:3458:29
 1e0df46:    bf f3 2b ef       	call -8618 <big_endian_read_16 : 1e0bda0 >			  ## sm.c:3458:29
 1e0df4a:    d8 5c             	h[r6 + 26] = r0			  ## sm.c:3458:27
 1e0df4c:    e1 5c             	r1 = h[r6 + 28] (u)			  ## sm.c:3461:52
 1e0df4e:    d0 b2             	r0 ^= r1			  ## sm.c:3461:50
 1e0df50:    f8 5c             	h[r6 + 30] = r0			  ## sm.c:3461:30
 1e0df52:    c3 f4 1d 59       	[r5 + 12] = 29			  ## sm.c:3465:37
 1e0df56:    52 1f             	goto -348 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >			  ## sm.c:3465:37
 1e0df58:    21 6a             	r1 = b[r5 + 2] (u)			  ## sm.c:3438:13
 1e0df5a:    30 71             	r0 = 19			  ## sm.c:3438:13
 1e0df5c:    4e 33             	if (r1 != 0) goto -356 <.GJTIE779_0_0_+0xF4 : 1e0ddfa >			  ## sm.c:3438:13
 1e0df5e:    40 71             	r0 = 20			  ## sm.c:3438:13
 1e0df60:    4c 1f             	goto -360 <.GJTIE779_0_0_+0xF4 : 1e0ddfa >			  ## sm.c:3438:13
 1e0df62:    20 6a             	r0 = b[r5 + 2] (u)			  ## sm.c:3495:17
 1e0df64:    03 20             	if (r0 == 0) goto 6 <.GJTIE779_0_0_+0x266 : 1e0df6c >			  ## sm.c:3495:17
 1e0df66:    c3 f4 22 59       	[r5 + 12] = 34			  ## sm.c:3497:45
 1e0df6a:    48 1f             	goto -368 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >			  ## sm.c:3497:45
 1e0df6c:    00 f9 1c 90       	r0 = b[r9 + 28] (u)			  ## sm.c:3499:28
 1e0df70:    00 e0 0f 0d       	if (r0 == 0) goto -1506 <sm_event_packet_handler+0xD0 : 1e0d992 >			  ## sm.c:3499:28
 1e0df74:    00 f9 05 90       	r0 = b[r9 + 5] (u)			  ## sm.c:3499:65
 1e0df78:    03 f3 0b 0d       	if ((r0 & 8) == 0) goto -1514 <sm_event_packet_handler+0xD0 : 1e0d992 >			  ## sm.c:3499:65
 1e0df7c:    c3 f4 5e 59       	[r5 + 12] = 94			  ## sm.c:3500:49
 1e0df80:    3d 1f             	goto -390 <.GJTIE779_0_0_+0xF6 : 1e0ddfc >			  ## sm.c:3500:49


sm_pdu_handler:
 1e0df82:    7b 01             	[--sp] = {rets, r11-r4}			  ## sm.c:4265:0
 1e0df84:    cc 0b             	sp += -104			  ## sm.c:4265:0
 1e0df86:    25 08             	r5 = r2			  ## sm.c:4265:0
 1e0df88:    16 08             	r6 = r1			  ## sm.c:4265:0
 1e0df8a:    90 e0 06 00       	if (r0 == 9) goto 12 <sm_pdu_handler+0x18 : 1e0df9a >			  ## sm.c:4267:41
 1e0df8e:    40 e0 43 10       	if (r0 != 4) goto 134 <sm_pdu_handler+0x96 : 1e0e018 >
 1e0df92:    00 6a             	r0 = b[r5 + 0] (u)			  ## sm.c:4267:44
 1e0df94:    80 e7 40 10       	if (r0 != 120) goto 128 <sm_pdu_handler+0x96 : 1e0e018 >
 1e0df98:    50 18             	goto 160 <.GJTIE782_0_0_ : 1e0e03a >
 1e0df9a:    3e 26             	if (r3 == 0) goto 124 <sm_pdu_handler+0x96 : 1e0e018 >
 1e0df9c:    07 6a             	r7 = b[r5 + 0] (u)			  ## sm.c:4278:27
 1e0df9e:    e7 e0 3b 80       	if (r7 > 14) goto 118 <sm_pdu_handler+0x96 : 1e0e018 >			  ## sm.c:4278:27
 1e0dfa2:    c0 ff d0 c1 e0 01 	r0 = 31506896 <sm_pdu_size : 1e0c1d0 >			  ## sm.c:4287:9
 1e0dfa8:    00 fa 00 70       	r0 = b[r7+r0] (u)			  ## sm.c:4287:9
 1e0dfac:    30 f2 34 10       	if (r0 != r3) goto 104 <sm_pdu_handler+0x96 : 1e0e018 >			  ## sm.c:4287:9
 1e0dfb0:    60 08             	r0 = r6			  ## sm.c:5074:36
 1e0dfb2:    bf f3 a9 ce       	call -25262 <le_hci_connection_for_handle : 1e07d08 >			  ## sm.c:5074:36
 1e0dfb6:    01 fc 3c 00       	r1 = r0 + 60			  ## sm.c:5078:22
 1e0dfba:    04 70             	r4 = 0			  ## sm.c:5078:22
 1e0dfbc:    01 20             	if (r0 == 0) goto 2 <sm_pdu_handler+0x3E : 1e0dfc0 >			  ## sm.c:5078:22
 1e0dfbe:    14 08             	r4 = r1			  ## sm.c:5075:9
 1e0dfc0:    2b 20             	if (r0 == 0) goto 86 <sm_pdu_handler+0x96 : 1e0e018 >
 1e0dfc2:    e7 e0 18 00       	if (r7 == 14) goto 48 <sm_pdu_handler+0x74 : 1e0dff6 >			  ## sm.c:4296:9
 1e0dfc6:    57 e0 29 10       	if (r7 != 5) goto 82 <sm_pdu_handler+0x9A : 1e0e01c >
 1e0dfca:    21 68             	r1 = b[r4 + 2] (u)			  ## sm.c:4297:45
 1e0dfcc:    30 72             	r0 = 35			  ## sm.c:4297:36
 1e0dfce:    01 32             	if (r1 != 0) goto 2 <sm_pdu_handler+0x50 : 1e0dfd2 >			  ## sm.c:4297:36
 1e0dfd0:    40 73             	r0 = 52			  ## sm.c:4297:36
 1e0dfd2:    38 48             	[r4 + 12] = r0			  ## sm.c:4297:34
 1e0dfd4:    00 58             	r0 = h[r4 + 0] (u)			  ## sm.c:4298:35
 1e0dfd6:    41 70             	r1 = 4			  ## sm.c:4298:9
 1e0dfd8:    bf f3 6a f4       	call -5932 <sm_set_timeout_disconnect : 1e0c8b0 >			  ## sm.c:4298:9
 1e0dfdc:    12 6a             	r2 = b[r5 + 1] (u)			  ## sm.c:4301:65
 1e0dfde:    51 68             	r1 = b[r4 + 5] (u)			  ## sm.c:4300:9
 1e0dfe0:    80 f7 06 40       	r0 = h[r4 ++= 6] (u)			  ## sm.c:4300:9
 1e0dfe4:    c3 ff 03 00 01 00 	r3 = 65539 <_IRQ_MEM_ADDR+0x103 : 10003 >			  ## sm.c:4301:81
 1e0dfea:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## sm.c:4301:81
 1e0dfee:    42 08             	r2 = r4			  ## sm.c:4300:9
 1e0dff0:    bf f3 30 f3       	call -6560 <sm_notify_client_process : 1e0c654 >			  ## sm.c:4300:9
 1e0dff4:    11 18             	goto 34 <sm_pdu_handler+0x96 : 1e0e018 >			  ## sm.c:4300:9
 1e0dff6:    d0 7d             	r0 = 221			  ## sm.c:4312:19
 1e0dff8:    d0 f5 2f 00       	b[sp+47] = r0			  ## sm.c:4312:19
 1e0dffc:    30 70             	r0 = 3			  ## sm.c:4313:19
 1e0dffe:    d0 f5 30 00       	b[sp+48] = r0			  ## sm.c:4313:19
 1e0e002:    f0 a2             	r0 = sp + 47			  ## sm.c:4313:19
 1e0e004:    21 70             	r1 = 2			  ## sm.c:4314:9
 1e0e006:    62 08             	r2 = r6			  ## sm.c:4314:9
 1e0e008:    bf f3 49 d1       	call -23918 <little_endian_store_16 : 1e0829e >			  ## sm.c:4314:9
 1e0e00c:    11 6a             	r1 = b[r5 + 1] (u)			  ## sm.c:4315:21
 1e0e00e:    d1 f5 33 00       	b[sp+51] = r1			  ## sm.c:4315:19
 1e0e012:    51 70             	r1 = 5			  ## sm.c:4316:9
 1e0e014:    bf f3 4b f2       	call -7018 <sm_dispatch_event : 1e0c4ae >			  ## sm.c:4316:9
 1e0e018:    34 0a             	sp += 104
 1e0e01a:    5b 01             	{pc, r11-r4} = [sp++]			  ## sm.c:4753:1
 1e0e01c:    30 48             	r0 = [r4 + 12]			  ## sm.c:4320:22
 1e0e01e:    01 fc de ff       	r1 = r0 + -34			  ## sm.c:4320:5
 1e0e022:    c6 ff c4 09 00 00 	r6 = 2500 <sm_global_info : 9c4 >			  ## sm.c:4320:5
 1e0e028:    a1 e0 20 80       	if (r1 > 10) goto 64 <.GJTIE782_0_0_+0x32 : 1e0e06c >
 1e0e02c:    a1 00             	tbb [r1]


.GJTIS782_0_0_:
 1e0e02e:    48     < 72 : 0x48 >
 1e0e02f:    09     < 9 : 0x9 >
 1e0e030:    09     < 9 : 0x9 >
 1e0e031:    06     < 6 : 0x6 >
 1e0e032:    06     < 6 : 0x6 >
 1e0e033:    06     < 6 : 0x6 >
 1e0e034:    09     < 9 : 0x9 >
 1e0e035:    06     < 6 : 0x6 >
 1e0e036:    06     < 6 : 0x6 >
 1e0e037:    58     < 88 : 0x58 >
 1e0e038:    3b     < 59 : 0x3B >
 1e0e039:    00     < 0 : 0x0 >
 1e0e03a:    bf f3 a3 f5       	call -5306 <sm_run : 1e0cb84 >
 1e0e03e:    ec 1f             	goto -40 <sm_pdu_handler+0x96 : 1e0e018 >
 1e0e040:    17 e0 77 10       	if (r7 != 1) goto 238 <.GJTIE782_2_2_+0x64 : 1e0e132 >
 1e0e044:    20 68             	r0 = b[r4 + 2] (u)			  ## sm.c:4437:13
 1e0e046:    0a 20             	if (r0 == 0) goto 20 <.GJTIE782_0_0_+0x22 : 1e0e05c >			  ## sm.c:4437:13
 1e0e048:    00 4c             	r0 = [r6 + 0]			  ## sm.c:4437:48
 1e0e04a:    00 f9 40 01       	r0 = b[r0 + 320] (u)			  ## sm.c:4437:56
 1e0e04e:    06 30             	if (r0 != 0) goto 12 <.GJTIE782_0_0_+0x22 : 1e0e05c >			  ## sm.c:4437:56
 1e0e050:    51 68             	r1 = b[r4 + 5] (u)			  ## sm.c:4438:18
 1e0e052:    60 98             	r0 = r4 + 6			  ## sm.c:4438:41
 1e0e054:    bf f3 aa ee       	call -8876 <ble_list_pair_is_allow : 1e0bdac >			  ## sm.c:4438:18
 1e0e058:    00 e0 2d 01       	if (r0 == 0) goto 602 <.GJTIE782_2_2_+0x1E8 : 1e0e2b6 >			  ## sm.c:4438:18
 1e0e05c:    60 99             	r0 = r4 + 22			  ## sm.c:4447:9
 1e0e05e:    72 70             	r2 = 7			  ## sm.c:4447:9
 1e0e060:    51 08             	r1 = r5			  ## sm.c:4447:9
 1e0e062:    97 f3 3f c7       	call 3116670 <memcpy : 106ee4 >			  ## sm.c:4447:9
 1e0e066:    c3 f4 29 49       	[r4 + 12] = 41			  ## sm.c:4448:34
 1e0e06a:    e7 1f             	goto -50 <.GJTIE782_0_0_ : 1e0e03a >			  ## sm.c:4448:34
 1e0e06c:    01 fc cc ff       	r1 = r0 + -52
 1e0e070:    81 e0 22 80       	if (r1 > 8) goto 68 <.GJTIE782_1_1_+0x38 : 1e0e0b8 >
 1e0e074:    a1 00             	tbb [r1]


.GJTIS782_1_1_:
 1e0e076:    06     < 6 : 0x6 >
 1e0e077:    05     < 5 : 0x5 >
 1e0e078:    05     < 5 : 0x5 >
 1e0e079:    05     < 5 : 0x5 >
 1e0e07a:    05     < 5 : 0x5 >
 1e0e07b:    05     < 5 : 0x5 >
 1e0e07c:    4f     < 79 : 0x4F >
 1e0e07d:    54     < 84 : 0x54 >
 1e0e07e:    17     < 23 : 0x17 >
 1e0e07f:    00     < 0 : 0x0 >
 1e0e080:    dc 1f             	goto -72 <.GJTIE782_0_0_ : 1e0e03a >
 1e0e082:    b7 e0 56 10       	if (r7 != 11) goto 172 <.GJTIE782_2_2_+0x64 : 1e0e132 >
 1e0e086:    20 68             	r0 = b[r4 + 2] (u)			  ## sm.c:4330:68
 1e0e088:    54 30             	if (r0 != 0) goto 168 <.GJTIE782_2_2_+0x64 : 1e0e132 >			  ## sm.c:4330:68
 1e0e08a:    00 4c             	r0 = [r6 + 0]			  ## sm.c:3775:10
 1e0e08c:    00 f9 40 01       	r0 = b[r0 + 320] (u)			  ## sm.c:3775:18
 1e0e090:    00 e0 2a 01       	if (r0 == 0) goto 596 <.GJTIE782_2_2_+0x21A : 1e0e2e8 >			  ## sm.c:3775:18
 1e0e094:    40 48             	r0 = [r4 + 16]			  ## sm.c:4340:22
 1e0e096:    30 e0 3c 01       	if (r0 == 3) goto 632 <.GJTIE782_2_2_+0x244 : 1e0e312 >			  ## sm.c:4340:13
 1e0e09a:    40 e0 4d 11       	if (r0 != 4) goto 666 <.GJTIE782_2_2_+0x26A : 1e0e338 >
 1e0e09e:    c3 f4 38 49       	[r4 + 12] = 56			  ## sm.c:4341:38
 1e0e0a2:    cb 1f             	goto -106 <.GJTIE782_0_0_ : 1e0e03a >			  ## sm.c:4341:38
 1e0e0a4:    47 e0 45 10       	if (r7 != 4) goto 138 <.GJTIE782_2_2_+0x64 : 1e0e132 >
 1e0e0a8:    01 4c             	r1 = [r6 + 0]
 1e0e0aa:    10 9a             	r0 = r5 + 1
 1e0e0ac:    f1 86             	r1 += 111
 1e0e0ae:    bf f3 79 e9       	call -11534 <reverse_128 : 1e0b3a4 >
 1e0e0b2:    c3 f4 0e 49       	[r4 + 12] = 14
 1e0e0b6:    c1 1f             	goto -126 <.GJTIE782_0_0_ : 1e0e03a >
 1e0e0b8:    20 e0 ae 0f       	if (r0 == 2) goto -164 <sm_pdu_handler+0x96 : 1e0e018 >
 1e0e0bc:    be 1f             	goto -132 <.GJTIE782_0_0_ : 1e0e03a >
 1e0e0be:    70 fc fa ff       	r0 = r7 + -6			  ## sm.c:4650:9
 1e0e0c2:    40 e0 79 80       	if (r0 > 4) goto 242 <.GJTIE782_2_2_+0xEA : 1e0e1b8 >			  ## sm.c:4650:9
 1e0e0c6:    a0 00             	tbb [r0]


.GJTIS782_2_2_:
 1e0e0c8:    03     < 3 : 0x3 >
 1e0e0c9:    4a     < 74 : 0x4A >
 1e0e0ca:    5a     < 90 : 0x5A >
 1e0e0cb:    62     < 98 : 0x62 >
 1e0e0cc:    6f     < 111 : 0x6F >
 1e0e0cd:    00     < 0 : 0x0 >
 1e0e0ce:    01 4c             	r1 = [r6 + 0]			  ## sm.c:4652:13
 1e0e0d0:    90 63             	r0 = b[r1 + 25] (u)			  ## sm.c:4652:53
 1e0e0d2:    10 b0             	r0 |= 1			  ## sm.c:4652:53
 1e0e0d4:    98 63             	b[r1 + 25] = r0			  ## sm.c:4652:53
 1e0e0d6:    10 9a             	r0 = r5 + 1			  ## sm.c:4653:26
 1e0e0d8:    11 fc fa 00       	r1 = r1 + 250			  ## sm.c:4653:37
 1e0e0dc:    6b 18             	goto 214 <.GJTIE782_2_2_+0xE6 : 1e0e1b4 >			  ## sm.c:4653:37
 1e0e0de:    37 e0 28 10       	if (r7 != 3) goto 80 <.GJTIE782_2_2_+0x64 : 1e0e132 >
 1e0e0e2:    07 4c             	r7 = [r6 + 0]			  ## sm.c:4613:33
 1e0e0e4:    10 9a             	r0 = r5 + 1			  ## sm.c:4613:22
 1e0e0e6:    71 fc 7f 00       	r1 = r7 + 127			  ## sm.c:4613:33
 1e0e0ea:    bf f3 5b e9       	call -11594 <reverse_128 : 1e0b3a4 >			  ## sm.c:4613:9
 1e0e0ee:    70 4e             	r0 = [r7 + 28]			  ## sm.c:4616:20
 1e0e0f0:    20 e0 08 10       	if (r0 != 2) goto 16 <.GJTIE782_2_2_+0x36 : 1e0e104 >			  ## sm.c:4616:20
 1e0e0f4:    52 68             	r2 = b[r4 + 5] (u)			  ## sm.c:4617:13
 1e0e0f6:    43 08             	r3 = r4			  ## sm.c:4617:13
 1e0e0f8:    81 f7 06 30       	r1 = h[r3 ++= 6] (u)			  ## sm.c:4617:13
 1e0e0fc:    30 7d             	r0 = 211			  ## sm.c:4617:13
 1e0e0fe:    bf f3 f4 f1       	call -7192 <sm_notify_client_base : 1e0c4ea >			  ## sm.c:4617:13
 1e0e102:    07 4c             	r7 = [r6 + 0]			  ## sm.c:4617:13
 1e0e104:    50 6f             	r0 = b[r7 + 21] (u)			  ## sm.c:4621:20
 1e0e106:    10 e0 d3 00       	if (r0 == 1) goto 422 <.GJTIE782_2_2_+0x1E2 : 1e0e2b0 >			  ## sm.c:4621:13
 1e0e10a:    40 e0 ff 10       	if (r0 != 4) goto 510 <.GJTIE782_2_2_+0x23E : 1e0e30c >
 1e0e10e:    10 70             	r0 = 1
 1e0e110:    48 6f             	b[r7 + 20] = r0			  ## sm.c:4622:45
 1e0e112:    cc 18             	goto 408 <.GJTIE782_2_2_+0x1DE : 1e0e2ac >			  ## sm.c:4622:45
 1e0e114:    27 e0 13 00       	if (r7 == 2) goto 38 <.GJTIE782_2_2_+0x70 : 1e0e13e >			  ## sm.c:4360:13
 1e0e118:    b7 e0 8f 0f       	if (r7 == 11) goto -226 <.GJTIE782_0_0_ : 1e0e03a >
 1e0e11c:    0a 18             	goto 20 <.GJTIE782_2_2_+0x64 : 1e0e132 >
 1e0e11e:    37 e0 08 10       	if (r7 != 3) goto 16 <.GJTIE782_2_2_+0x64 : 1e0e132 >
 1e0e122:    01 4c             	r1 = [r6 + 0]			  ## sm.c:4411:33
 1e0e124:    10 9a             	r0 = r5 + 1			  ## sm.c:4411:22
 1e0e126:    f1 87             	r1 += 127			  ## sm.c:4411:33
 1e0e128:    bf f3 3c e9       	call -11656 <reverse_128 : 1e0b3a4 >			  ## sm.c:4411:9
 1e0e12c:    c3 f4 13 49       	[r4 + 12] = 19			  ## sm.c:4412:34
 1e0e130:    84 1f             	goto -248 <.GJTIE782_0_0_ : 1e0e03a >			  ## sm.c:4412:34
 1e0e132:    00 4c             	r0 = [r6 + 0]
 1e0e134:    81 70             	r1 = 8
 1e0e136:    49 61             	b[r0 + 20] = r1
 1e0e138:    c3 f4 01 49       	[r4 + 12] = 1
 1e0e13c:    7e 1f             	goto -260 <.GJTIE782_0_0_ : 1e0e03a >
 1e0e13e:    00 4c             	r0 = [r6 + 0]			  ## sm.c:4367:17
 1e0e140:    80 84             	r0 += 72			  ## sm.c:4367:9
 1e0e142:    72 70             	r2 = 7			  ## sm.c:4367:9
 1e0e144:    51 08             	r1 = r5			  ## sm.c:4367:9
 1e0e146:    97 f3 cd c6       	call 3116442 <memcpy : 106ee4 >			  ## sm.c:4367:9
 1e0e14a:    40 08             	r0 = r4			  ## sm.c:4368:15
 1e0e14c:    bf f3 00 f3       	call -6656 <sm_stk_generation_init : 1e0c750 >			  ## sm.c:4368:15
 1e0e150:    c4 20             	if (r0 == 0) goto 392 <.GJTIE782_2_2_+0x20C : 1e0e2da >			  ## sm.c:4369:13
 1e0e152:    01 4c             	r1 = [r6 + 0]			  ## sm.c:4370:13
 1e0e154:    48 63             	b[r1 + 20] = r0			  ## sm.c:4370:45
 1e0e156:    c3 f4 01 49       	[r4 + 12] = 1			  ## sm.c:4371:38
 1e0e15a:    6f 1f             	goto -290 <.GJTIE782_0_0_ : 1e0e03a >			  ## sm.c:4371:38
 1e0e15c:    02 4c             	r2 = [r6 + 0]			  ## sm.c:4659:13
 1e0e15e:    90 65             	r0 = b[r2 + 25] (u)			  ## sm.c:4659:53
 1e0e160:    90 b0             	r0 |= 2			  ## sm.c:4659:53
 1e0e162:    98 65             	b[r2 + 25] = r0			  ## sm.c:4659:53
 1e0e164:    11 70             	r1 = 1			  ## sm.c:4660:35
 1e0e166:    50 08             	r0 = r5			  ## sm.c:4660:35
 1e0e168:    bf f3 a9 cd       	call -25774 <little_endian_read_16 : 1e07cbe >			  ## sm.c:4660:35
 1e0e16c:    10 f7 f0 20       	h[r2 + 240] = r0			  ## sm.c:4660:33
 1e0e170:    30 9a             	r0 = r5 + 3			  ## sm.c:4661:25
 1e0e172:    21 fc f2 00       	r1 = r2 + 242			  ## sm.c:4661:36
 1e0e176:    bf f3 17 ea       	call -11218 <reverse_64 : 1e0b5a8 >			  ## sm.c:4661:13
 1e0e17a:    1e 18             	goto 60 <.GJTIE782_2_2_+0xEA : 1e0e1b8 >			  ## sm.c:4661:13
 1e0e17c:    01 4c             	r1 = [r6 + 0]			  ## sm.c:4668:13
 1e0e17e:    90 63             	r0 = b[r1 + 25] (u)			  ## sm.c:4668:53
 1e0e180:    10 b1             	r0 |= 4			  ## sm.c:4668:53
 1e0e182:    98 63             	b[r1 + 25] = r0			  ## sm.c:4668:53
 1e0e184:    10 9a             	r0 = r5 + 1			  ## sm.c:4669:26
 1e0e186:    11 fc 0a 01       	r1 = r1 + 266			  ## sm.c:4669:37
 1e0e18a:    14 18             	goto 40 <.GJTIE782_2_2_+0xE6 : 1e0e1b4 >			  ## sm.c:4669:37
 1e0e18c:    01 4c             	r1 = [r6 + 0]			  ## sm.c:4677:13
 1e0e18e:    90 63             	r0 = b[r1 + 25] (u)			  ## sm.c:4677:53
 1e0e190:    90 b1             	r0 |= 8			  ## sm.c:4677:53
 1e0e192:    98 63             	b[r1 + 25] = r0			  ## sm.c:4677:53
 1e0e194:    10 6a             	r0 = b[r5 + 1] (u)			  ## sm.c:4678:40
 1e0e196:    10 f9 2a 11       	b[r1 + 298] = r0			  ## sm.c:4678:38
 1e0e19a:    20 9a             	r0 = r5 + 2			  ## sm.c:4679:30
 1e0e19c:    11 fc 2b 01       	r1 = r1 + 299			  ## sm.c:4679:41
 1e0e1a0:    bf f3 09 e9       	call -11758 <reverse_bd_addr : 1e0b3b6 >			  ## sm.c:4679:13
 1e0e1a4:    09 18             	goto 18 <.GJTIE782_2_2_+0xEA : 1e0e1b8 >			  ## sm.c:4679:13
 1e0e1a6:    01 4c             	r1 = [r6 + 0]			  ## sm.c:4687:13
 1e0e1a8:    90 63             	r0 = b[r1 + 25] (u)			  ## sm.c:4687:53
 1e0e1aa:    10 b2             	r0 |= 16			  ## sm.c:4687:53
 1e0e1ac:    98 63             	b[r1 + 25] = r0			  ## sm.c:4687:53
 1e0e1ae:    10 9a             	r0 = r5 + 1			  ## sm.c:4688:26
 1e0e1b0:    11 fc 1a 01       	r1 = r1 + 282			  ## sm.c:4688:37
 1e0e1b4:    bf f3 f6 e8       	call -11796 <reverse_128 : 1e0b3a4 >
 1e0e1b8:    20 68             	r0 = b[r4 + 2] (u)			  ## sm.c:4698:13
 1e0e1ba:    bf f3 26 f4       	call -6068 <sm_key_distribution_all_received : 1e0ca0a >			  ## sm.c:4698:13
 1e0e1be:    3d 21             	if (r0 == 0) goto -390 <.GJTIE782_0_0_ : 1e0e03a >			  ## sm.c:4698:13
 1e0e1c0:    40 08             	r0 = r4			  ## sm.c:4700:13
 1e0e1c2:    bf f3 44 f4       	call -6008 <sm_key_distribution_handle_all_received : 1e0ca4e >			  ## sm.c:4700:13
 1e0e1c6:    00 4c             	r0 = [r6 + 0]			  ## sm.c:4700:13
 1e0e1c8:    22 68             	r2 = b[r4 + 2] (u)			  ## sm.c:4702:17
 1e0e1ca:    01 f9 30 00       	r1 = b[r0 + 48] (u)			  ## sm.c:4702:17
 1e0e1ce:    6b 24             	if (r2 == 0) goto 214 <.GJTIE782_2_2_+0x1D8 : 1e0e2a6 >			  ## sm.c:4702:17
 1e0e1d0:    03 22             	if (r1 == 0) goto 6 <.GJTIE782_2_2_+0x10A : 1e0e1d8 >
 1e0e1d2:    91 61             	r1 = b[r0 + 25] (u)			  ## sm.c:4703:65
 1e0e1d4:    23 f3 7e 10       	if ((r1 & 8) != 0) goto 252 <.GJTIE782_2_2_+0x206 : 1e0e2d4 >			  ## sm.c:4703:65
 1e0e1d8:    01 f9 40 01       	r1 = b[r0 + 320] (u)			  ## sm.c:4707:34
 1e0e1dc:    5e 32             	if (r1 != 0) goto 188 <.GJTIE782_2_2_+0x1CC : 1e0e29a >			  ## sm.c:4707:34
 1e0e1de:    01 f9 38 01       	r1 = b[r0 + 312] (u)			  ## sm.c:4707:92
 1e0e1e2:    00 f3 5a 10       	if ((r1 & 1) == 0) goto 180 <.GJTIE782_2_2_+0x1CC : 1e0e29a >			  ## sm.c:4707:92
 1e0e1e6:    81 61             	r1 = b[r0 + 24] (u)			  ## sm.c:4711:46
 1e0e1e8:    d1 f5 0f 00       	b[sp+15] = r1			  ## sm.c:4711:37
 1e0e1ec:    90 61             	r0 = b[r0 + 25] (u)			  ## sm.c:4712:46
 1e0e1ee:    d0 f5 10 00       	b[sp+16] = r0			  ## sm.c:4712:37
 1e0e1f2:    00 58             	r0 = h[r4 + 0] (u)			  ## sm.c:4713:39
 1e0e1f4:    80 f3 0c 04       	call 2072 <att_server_get_remote_type : 1e0ea10 >			  ## sm.c:4713:39
 1e0e1f8:    d0 f5 11 00       	b[sp+17] = r0			  ## sm.c:4713:37
 1e0e1fc:    50 69             	r0 = b[r4 + 21] (u)			  ## sm.c:4715:48
 1e0e1fe:    d0 f5 12 00       	b[sp+18] = r0			  ## sm.c:4715:37
 1e0e202:    40 69             	r0 = b[r4 + 20] (u)			  ## sm.c:4716:48
 1e0e204:    00 d1             	r0 = r0 >> 4			  ## sm.c:4716:48
 1e0e206:    d0 f5 13 00       	b[sp+19] = r0			  ## sm.c:4716:37
 1e0e20a:    80 48             	r0 = [r4 + 32]			  ## sm.c:4717:48
 1e0e20c:    01 4c             	r1 = [r6 + 0]			  ## sm.c:4720:61
 1e0e20e:    d0 f5 14 00       	b[sp+20] = r0			  ## sm.c:4717:37
 1e0e212:    02 f7 b2 10       	r2 = h[r1 + 178] (u)			  ## sm.c:4720:25
 1e0e216:    f0 a0             	r0 = sp + 15			  ## sm.c:4720:25
 1e0e218:    61 70             	r1 = 6			  ## sm.c:4720:25
 1e0e21a:    bf f3 40 d0       	call -24448 <little_endian_store_16 : 1e0829e >			  ## sm.c:4720:25
 1e0e21e:    09 f6 00 60       	r9 = [r6 + 0]			  ## sm.c:4721:46
 1e0e222:    96 fc 9d 00       	r6 = r9 + 157			  ## sm.c:4721:46
 1e0e226:    92 6d             	r2 = b[r6 + 25] (u)			  ## sm.c:4721:25
 1e0e228:    d3 6d             	r3 = b[r6 + 29] (u)			  ## sm.c:4721:25
 1e0e22a:    75 6d             	r5 = b[r6 + 23] (u)			  ## sm.c:4721:25
 1e0e22c:    08 f9 18 60       	r8 = b[r6 + 24] (u)			  ## sm.c:4721:25
 1e0e230:    e7 6d             	r7 = b[r6 + 30] (u)			  ## sm.c:4721:25
 1e0e232:    0a f9 1c 60       	r10 = b[r6 + 28] (u)			  ## sm.c:4721:25
 1e0e236:    b1 6d             	r1 = b[r6 + 27] (u)			  ## sm.c:4721:25
 1e0e238:    0b f9 1a 60       	r11 = b[r6 + 26] (u)			  ## sm.c:4721:25
 1e0e23c:    d7 f5 1e 00       	b[sp+30] = r7			  ## sm.c:4721:25
 1e0e240:    da f5 1c 00       	b[sp+28] = r10			  ## sm.c:4721:25
 1e0e244:    d1 f5 1b 00       	b[sp+27] = r1			  ## sm.c:4721:25
 1e0e248:    db f5 1a 00       	b[sp+26] = r11			  ## sm.c:4721:25
 1e0e24c:    d8 f5 18 00       	b[sp+24] = r8			  ## sm.c:4721:25
 1e0e250:    d5 f5 17 00       	b[sp+23] = r5			  ## sm.c:4721:25
 1e0e254:    c8 fd 40 37       	r3 <= insert(r7, p:8, l:8)			  ## sm.c:4721:25
 1e0e258:    d0 fd 80 13       	r1 <= insert(r3, p:16, l:16)			  ## sm.c:4721:25
 1e0e25c:    09 d4             	r1 = r1 >> 16			  ## sm.c:4721:25
 1e0e25e:    d1 f5 1d 00       	b[sp+29] = r1			  ## sm.c:4721:25
 1e0e262:    c8 fd 40 2b       	r2 <= insert(r11, p:8, l:8)			  ## sm.c:4721:25
 1e0e266:    d0 fd 80 52       	r5 <= insert(r2, p:16, l:16)			  ## sm.c:4721:25
 1e0e26a:    29 d4             	r1 = r5 >> 16			  ## sm.c:4721:25
 1e0e26c:    d1 f5 19 00       	b[sp+25] = r1			  ## sm.c:4721:25
 1e0e270:    02 f9 2a 91       	r2 = b[r9 + 298] (u)			  ## sm.c:4722:29
 1e0e274:    25 68             	r5 = b[r4 + 2] (u)			  ## sm.c:4722:29
 1e0e276:    18 02             	[sp+4] = r0			  ## sm.c:4722:29
 1e0e278:    91 fc 2b 01       	r1 = r9 + 299			  ## sm.c:4722:65
 1e0e27c:    63 fc 6d 00       	r3 = r6 + 109			  ## sm.c:4722:115
 1e0e280:    0e 02             	[sp] = r6			  ## sm.c:4722:29
 1e0e282:    50 08             	r0 = r5			  ## sm.c:4722:29
 1e0e284:    bf f3 ff e9       	call -11266 <ble_list_pair_add : 1e0b686 >			  ## sm.c:4722:29
 1e0e288:    13 71             	r3 = 17			  ## sm.c:4722:29
 1e0e28a:    01 20             	if (r0 == 0) goto 2 <.GJTIE782_2_2_+0x1C0 : 1e0e28e >			  ## sm.c:4722:29
 1e0e28c:    03 71             	r3 = 16
 1e0e28e:    51 68             	r1 = b[r4 + 5] (u)			  ## sm.c:4728:25
 1e0e290:    42 08             	r2 = r4			  ## sm.c:4728:25
 1e0e292:    80 f7 06 20       	r0 = h[r2 ++= 6] (u)			  ## sm.c:4728:25
 1e0e296:    bf f3 dd f1       	call -7238 <sm_notify_client_process : 1e0c654 >			  ## sm.c:4728:25
 1e0e29a:    c3 f4 23 49       	[r4 + 12] = 35			  ## sm.c:4732:46
 1e0e29e:    00 58             	r0 = h[r4 + 0] (u)			  ## sm.c:4734:21
 1e0e2a0:    bf f3 f5 f2       	call -6678 <sm_done_for_handle : 1e0c88e >			  ## sm.c:4734:21
 1e0e2a4:    ca 1e             	goto -620 <.GJTIE782_0_0_ : 1e0e03a >			  ## sm.c:4734:21
 1e0e2a6:    10 72             	r0 = 33			  ## sm.c:4737:21
 1e0e2a8:    01 32             	if (r1 != 0) goto 2 <.GJTIE782_2_2_+0x1DE : 1e0e2ac >			  ## sm.c:4737:21
 1e0e2aa:    70 71             	r0 = 23			  ## sm.c:4737:21
 1e0e2ac:    38 48             	[r4 + 12] = r0
 1e0e2ae:    c5 1e             	goto -630 <.GJTIE782_0_0_ : 1e0e03a >
 1e0e2b0:    c3 f4 03 49       	[r4 + 12] = 3			  ## sm.c:4629:38
 1e0e2b4:    c2 1e             	goto -636 <.GJTIE782_0_0_ : 1e0e03a >			  ## sm.c:4629:38
 1e0e2b6:    00 4c             	r0 = [r6 + 0]			  ## sm.c:1744:5
 1e0e2b8:    81 70             	r1 = 8			  ## sm.c:1744:37
 1e0e2ba:    49 61             	b[r0 + 20] = r1			  ## sm.c:1744:37
 1e0e2bc:    c3 f4 01 49       	[r4 + 12] = 1			  ## sm.c:1745:30
 1e0e2c0:    c0 ff 20 67 e1 01 	r0 = 31549216 <gpio_regs+0x264 : 1e16720 >			  ## sm.c:4440:17
 1e0e2c6:    80 f3 56 08       	call 4268 <puts : 1e0f376 >			  ## sm.c:4440:17
 1e0e2ca:    00 58             	r0 = h[r4 + 0] (u)			  ## sm.c:4441:43
 1e0e2cc:    31 70             	r1 = 3			  ## sm.c:4441:17
 1e0e2ce:    bf f3 ef f2       	call -6690 <sm_set_timeout_disconnect : 1e0c8b0 >			  ## sm.c:4441:17
 1e0e2d2:    b3 1e             	goto -666 <.GJTIE782_0_0_ : 1e0e03a >			  ## sm.c:4441:17
 1e0e2d4:    c3 f4 5e 49       	[r4 + 12] = 94			  ## sm.c:4704:46
 1e0e2d8:    b0 1e             	goto -672 <.GJTIE782_0_0_ : 1e0e03a >			  ## sm.c:4704:46
 1e0e2da:    00 4c             	r0 = [r6 + 0]			  ## sm.c:4376:13
 1e0e2dc:    70 40             	r0 = [r0 + 28]			  ## sm.c:4376:20
 1e0e2de:    10 e0 0c 10       	if (r0 != 1) goto 24 <.GJTIE782_2_2_+0x22C : 1e0e2fa >			  ## sm.c:4376:13
 1e0e2e2:    c3 f4 04 49       	[r4 + 12] = 4			  ## sm.c:4377:38
 1e0e2e6:    a9 1e             	goto -686 <.GJTIE782_0_0_ : 1e0e03a >			  ## sm.c:4377:38
 1e0e2e8:    51 68             	r1 = b[r4 + 5] (u)			  ## sm.c:3776:12
 1e0e2ea:    60 98             	r0 = r4 + 6			  ## sm.c:3776:40
 1e0e2ec:    43 a3             	r3 = sp + 52			  ## sm.c:3776:40
 1e0e2ee:    02 70             	r2 = 0			  ## sm.c:3776:12
 1e0e2f0:    bf f3 dc ea       	call -10824 <ble_list_get_conn_addr_item : 1e0b8ac >			  ## sm.c:3776:12
 1e0e2f4:    00 e0 a1 1e       	if (r0 != 0) goto -702 <.GJTIE782_0_0_ : 1e0e03a >
 1e0e2f8:    cd 1e             	goto -614 <.GJTIE782_1_1_+0x14 : 1e0e094 >
 1e0e2fa:    c3 f4 03 49       	[r4 + 12] = 3			  ## sm.c:4396:34
 1e0e2fe:    40 08             	r0 = r4			  ## sm.c:4397:9
 1e0e300:    bf f3 12 f3       	call -6620 <sm_trigger_user_response : 1e0c928 >			  ## sm.c:4397:9
 1e0e304:    00 4c             	r0 = [r6 + 0]			  ## sm.c:4399:13
 1e0e306:    50 61             	r0 = b[r0 + 21] (u)			  ## sm.c:4399:20
 1e0e308:    00 e0 97 1e       	if (r0 != 0) goto -722 <.GJTIE782_0_0_ : 1e0e03a >			  ## sm.c:4399:20
 1e0e30c:    c3 f4 06 49       	[r4 + 12] = 6
 1e0e310:    94 1e             	goto -728 <.GJTIE782_0_0_ : 1e0e03a >
 1e0e312:    c0 48             	r0 = [r4 + 48]			  ## sm.c:4346:50
 1e0e314:    05 70             	r5 = 0			  ## sm.c:4346:50
 1e0e316:    2d 02             	[sp+8] = r5			  ## sm.c:4346:13
 1e0e318:    1d 02             	[sp+4] = r5			  ## sm.c:4346:13
 1e0e31a:    f3 a1             	r3 = sp + 31			  ## sm.c:4346:13
 1e0e31c:    01 70             	r1 = 0			  ## sm.c:4346:13
 1e0e31e:    02 70             	r2 = 0			  ## sm.c:4346:13
 1e0e320:    0d 02             	[sp] = r5			  ## sm.c:4346:13
 1e0e322:    bf f3 7f ee       	call -8962 <le_device_db_encryption_get : 1e0c024 >			  ## sm.c:4346:13
 1e0e326:    f0 a1             	r0 = sp + 31
 1e0e328:    00 fa 00 05       	r0 = b[r0+r5] (u)			  ## sm.c:597:13
 1e0e32c:    08 30             	if (r0 != 0) goto 16 <.GJTIE782_2_2_+0x270 : 1e0e33e >			  ## sm.c:597:13
 1e0e32e:    15 80             	r5 += 1			  ## sm.c:596:29
 1e0e330:    f5 e0 f9 df       	ifs (r5 <= 15) goto -14 <.GJTIE782_2_2_+0x258 : 1e0e326 >
 1e0e334:    80 73             	r0 = 56
 1e0e336:    ba 1f             	goto -140 <.GJTIE782_2_2_+0x1DE : 1e0e2ac >
 1e0e338:    10 70             	r0 = 1			  ## sm.c:4356:47
 1e0e33a:    38 68             	b[r4 + 3] = r0			  ## sm.c:4356:47
 1e0e33c:    7e 1e             	goto -772 <.GJTIE782_0_0_ : 1e0e03a >			  ## sm.c:4356:47
 1e0e33e:    50 73             	r0 = 53
 1e0e340:    b5 1f             	goto -150 <.GJTIE782_2_2_+0x1DE : 1e0e2ac >


sm_timeout_handler_pair:
 1e0e342:    20 04             	r0 = r0.l (u)			  ## sm.c:587:0
 1e0e344:    ff f3 7b fa       	goto -2826 <sm_api_request_pairing : 1e0d83e >			  ## sm.c:588:5


search_ios_ancs_server:
 1e0e348:    06 01             	{r6-r4} = [sp++]
 1e0e34a:    00 ff ff 00 28 d0 	if (r0 == 255) goto -24496 <update_bt_current_status+0x3C : 1e083a0 >
 1e0e350:    00 2d             	if (r6 == 0) goto -512 <.GJTIE782_2_2_+0x84 : 1e0e152 >
 1e0e352:    12 1e             	goto -988 <.GJTIE779_0_0_+0x272 : 1e0df78 >
 1e0e354:    4b 0f             	r3 = r1 * r5
 1e0e356:    a4 99             	r4 = r4 + 26
 1e0e358:    4e ce             	r6 = r1 <<< 25
 1e0e35a:    b5 31             	if (r0 != 0) goto -150 <.GJTIE782_2_2_+0x1F8 : 1e0e2c6 >
 1e0e35c:    f4 05             	r4 = r7.l (s)
 1e0e35e:    79 00             	sti r9


att_server_change_profile:
 1e0e360:    c0 ff 18 1d 00 00 	r0 = 7448 <att_global_info : 1d18 >			  ## att_server.c:685:0
 1e0e366:    c1 ff 3b 5c e1 01 	r1 = 31546427 <hogp_profile_data : 1e15c3b >			  ## att_db.c:289:28
 1e0e36c:    49 40             	[r0 + 16] = r1			  ## att_db.c:289:28
 1e0e36e:    20 00             	rts			  ## att_db.c:289:28


att_server_for_handle:
 1e0e370:    34 00             	[--sp] = rets			  ## att_server.c:83:0
 1e0e372:    bf f3 c9 cc       	call -26222 <le_hci_connection_for_handle : 1e07d08 >			  ## att_server.c:88:43
 1e0e376:    01 08             	r1 = r0			  ## att_server.c:88:43
 1e0e378:    12 fc 74 00       	r2 = r1 + 116			  ## att_server.c:92:29
 1e0e37c:    00 70             	r0 = 0			  ## att_server.c:92:29
 1e0e37e:    01 22             	if (r1 == 0) goto 2 <att_server_for_handle+0x12 : 1e0e382 >			  ## att_server.c:92:29
 1e0e380:    20 08             	r0 = r2			  ## att_server.c:89:9
 1e0e382:    30 00             	pc = [sp++]			  ## att_server.c:93:1


att_server_set_check_remote:
 1e0e384:    74 01             	[--sp] = {rets, r4}			  ## att_server.c:841:0
 1e0e386:    04 08             	r4 = r0			  ## att_server.c:841:0
 1e0e388:    12 28             	if (r4 == 0) goto 36 <att_server_set_check_remote+0x2A : 1e0e3ae >			  ## att_server.c:841:0
 1e0e38a:    f2 17             	call -28 <att_server_for_handle : 1e0e370 >			  ## att_server.c:848:18
 1e0e38c:    10 20             	if (r0 == 0) goto 32 <att_server_set_check_remote+0x2A : 1e0e3ae >
 1e0e38e:    00 fc 40 02       	r0 = r0 + 576
 1e0e392:    31 60             	r1 = b[r0 + 3] (u)			  ## att_server.c:854:34
 1e0e394:    21 fd e3 19       	r1 = r1 & 227			  ## att_server.c:854:34
 1e0e398:    11 b1             	r1 |= 4			  ## att_server.c:854:34
 1e0e39a:    39 60             	b[r0 + 3] = r1			  ## att_server.c:854:34
 1e0e39c:    c1 ff 8c 31 e0 01 	r1 = 31469964 <__att_check_remote_result : 1e0318c >			  ## att_server.c:855:33
 1e0e3a2:    19 40             	[r0 + 4] = r1			  ## att_server.c:855:33
 1e0e3a4:    70 71             	r0 = 23			  ## att_server.c:806:5
 1e0e3a6:    11 70             	r1 = 1			  ## att_server.c:806:5
 1e0e3a8:    42 08             	r2 = r4			  ## att_server.c:806:5
 1e0e3aa:    bf f3 66 ce       	call -25396 <ble_user_cmd_prepare : 1e0807a >			  ## att_server.c:806:5
 1e0e3ae:    54 01             	{pc, r4} = [sp++]			  ## att_server.c:857:1


att_global_info_init:
 1e0e3b0:    c0 ff 18 1d 00 00 	r0 = 7448 <att_global_info : 1d18 >			  ## att_dispatch.c:75:0
 1e0e3b6:    01 70             	r1 = 0			  ## att_dispatch.c:76:5
 1e0e3b8:    02 74             	r2 = 64			  ## att_dispatch.c:76:5
 1e0e3ba:    d7 f3 99 c5       	goto 3115826 <memset : 106ef0 >			  ## att_dispatch.c:76:5


att_server_register_packet_handler:
 1e0e3be:    c0 ff 18 1d 00 00 	r0 = 7448 <att_global_info : 1d18 >			  ## att_server.c:699:0
 1e0e3c4:    c1 ff f4 0d e0 01 	r1 = 31460852 <__ble_comm_cbk_packet_handler : 1e00df4 >			  ## att_server.c:701:39
 1e0e3ca:    d9 40             	[r0 + 52] = r1			  ## att_server.c:701:39
 1e0e3cc:    20 00             	rts			  ## att_server.c:703:1


att_server_init:
 1e0e3ce:    76 01             	[--sp] = {rets, r6-r4}			  ## att_server.c:658:0
 1e0e3d0:    13 08             	r3 = r1			  ## att_server.c:658:0
 1e0e3d2:    04 08             	r4 = r0			  ## att_server.c:658:0
 1e0e3d4:    c5 ff 18 1d 00 00 	r5 = 7448 <att_global_info : 1d18 >			  ## att_db.c:317:32
 1e0e3da:    c6 ff d2 e5 e0 01 	r6 = 31516114 <att_event_packet_handler : 1e0e5d2 >			  ## att_server.c:666:54
 1e0e3e0:    ae 4a             	[r5 + 40] = r6			  ## att_server.c:666:54
 1e0e3e2:    50 fc 24 00       	r0 = r5 + 36			  ## att_server.c:666:54
 1e0e3e6:    bf f3 c1 d1       	call -23678 <hci_add_event_handler : 1e0876c >			  ## att_server.c:667:5
 1e0e3ea:    ce 4a             	[r5 + 48] = r6			  ## att_server.c:671:57
 1e0e3ec:    50 fc 2c 00       	r0 = r5 + 44			  ## att_server.c:671:57
 1e0e3f0:    bf f3 11 f0       	call -8158 <sm_add_event_handler : 1e0c416 >			  ## att_server.c:672:9
 1e0e3f4:    c0 ff 8c e7 e0 01 	r0 = 31516556 <att_packet_handler.1984 : 1e0e78c >			  ## att_dispatch.c:156:32
 1e0e3fa:    18 4a             	[r5 + 4] = r0			  ## att_dispatch.c:156:32
 1e0e3fc:    c0 ff 1c e5 e0 01 	r0 = 31515932 <att_packet_handler : 1e0e51c >			  ## att_dispatch.c:157:5
 1e0e402:    41 70             	r1 = 4			  ## att_dispatch.c:157:5
 1e0e404:    bf f3 b1 d2       	call -23198 <l2cap_register_fixed_channel : 1e0896a >			  ## att_dispatch.c:157:5
 1e0e408:    c0 ff f8 5a e1 01 	r0 = 31546104 <default_profile_data : 1e15af8 >			  ## att_db.c:289:28
 1e0e40e:    48 4a             	[r5 + 16] = r0			  ## att_db.c:289:28
 1e0e410:    5c 4a             	[r5 + 20] = r4			  ## att_db.c:312:31
 1e0e412:    6b 4a             	[r5 + 24] = r3			  ## att_db.c:317:32
 1e0e414:    56 01             	{pc, r6-r4} = [sp++]			  ## att_server.c:682:1


att_dispatch_server_request_can_send_now_event:
 1e0e416:    c0 ff 18 1d 00 00 	r0 = 7448 <att_global_info : 1d18 >			  ## att_dispatch.c:197:0
 1e0e41c:    81 60             	r1 = b[r0 + 8] (u)			  ## att_dispatch.c:198:45
 1e0e41e:    91 b0             	r1 |= 2			  ## att_dispatch.c:198:45
 1e0e420:    89 60             	b[r0 + 8] = r1			  ## att_dispatch.c:198:45
 1e0e422:    40 70             	r0 = 4			  ## att_dispatch.c:199:5
 1e0e424:    ff f3 a1 e7       	goto -12478 <l2cap_request_can_send_fix_channel_now_event : 1e0b36a >			  ## att_dispatch.c:199:5


att_server_send_request:
 1e0e428:    f6 1f             	goto -20 <att_dispatch_server_request_can_send_now_event : 1e0e416 >			  ## att_server.c:795:0


att_dispatch_server_can_send_now:
 1e0e42a:    ff f3 d2 e7       	goto -12380 <l2cap_can_send_fixed_channel_packet_now : 1e0b3d2 >			  ## att_dispatch.c:174:0


att_server_notify:
 1e0e42e:    78 01             	[--sp] = {rets, r8-r4}			  ## att_server.c:738:0
 1e0e430:    36 08             	r6 = r3			  ## att_server.c:738:0
 1e0e432:    28 08             	r8 = r2			  ## att_server.c:738:0
 1e0e434:    17 08             	r7 = r1			  ## att_server.c:738:0
 1e0e436:    04 08             	r4 = r0			  ## att_server.c:738:0
 1e0e438:    9b 17             	call -202 <att_server_for_handle : 1e0e370 >			  ## att_server.c:743:32
 1e0e43a:    05 08             	r5 = r0			  ## att_server.c:743:32
 1e0e43c:    21 2a             	if (r5 == 0) goto 66 <att_server_notify+0x52 : 1e0e480 >
 1e0e43e:    40 08             	r0 = r4			  ## att_server.c:748:10
 1e0e440:    f4 17             	call -24 <att_dispatch_server_can_send_now : 1e0e42a >			  ## att_server.c:748:10
 1e0e442:    20 20             	if (r0 == 0) goto 64 <att_server_notify+0x56 : 1e0e484 >			  ## att_server.c:748:10
 1e0e444:    bf f3 39 ea       	call -11150 <l2cap_reserve_packet_buffer : 1e0b8ba >			  ## att_server.c:752:5
 1e0e448:    c3 ff 60 18 00 00 	r3 = 6240 <report_irq_stack_end : 1860 >			  ## att_db.c:1271:5
 1e0e44e:    b0 71             	r0 = 27			  ## att_db.c:1283:24
 1e0e450:    08 67             	b[r3 + 16] = r0			  ## att_db.c:1283:24
 1e0e452:    00 97             	r0 = r3 + 16			  ## att_db.c:1283:24
 1e0e454:    11 70             	r1 = 1			  ## att_db.c:1267:5
 1e0e456:    72 08             	r2 = r7			  ## att_db.c:1267:5
 1e0e458:    bf f3 21 cf       	call -25022 <little_endian_store_16 : 1e0829e >			  ## att_db.c:1267:5
 1e0e45c:    70 5b             	r0 = h[r5 + 46] (u)			  ## att_db.c:1268:21
 1e0e45e:    04 fc fd ff       	r4 = r0 + -3			  ## att_db.c:1268:41
 1e0e462:    46 f2 01 c0       	ifs (r6 > r4) goto 2 <att_server_notify+0x3A : 1e0e468 >
 1e0e466:    64 08             	r4 = r6			  ## att_db.c:1268:9
 1e0e468:    22 05             	r2 = r4.l (u)			  ## att_db.c:1271:40
 1e0e46a:    30 97             	r0 = r3 + 19			  ## att_db.c:1271:5
 1e0e46c:    81 08             	r1 = r8			  ## att_db.c:1271:5
 1e0e46e:    97 f3 39 c5       	call 3115634 <memcpy : 106ee4 >			  ## att_db.c:1271:5
 1e0e472:    60 5b             	r0 = h[r5 + 44] (u)			  ## att_server.c:755:12
 1e0e474:    31 98             	r1 = r4 + 3			  ## att_db.c:1272:22
 1e0e476:    62 04             	r2 = r1.l (u)			  ## att_server.c:755:12
 1e0e478:    41 70             	r1 = 4			  ## att_server.c:755:12
 1e0e47a:    18 01             	{rets, r8-r4} = [sp++]			  ## att_server.c:755:12
 1e0e47c:    ff f3 ab e7       	goto -12458 <l2cap_send_prepared_connectionless : 1e0b3d6 >			  ## att_server.c:755:12
 1e0e480:    20 70             	r0 = 2
 1e0e482:    58 01             	{pc, r8-r4} = [sp++]			  ## att_server.c:756:1
 1e0e484:    70 75             	r0 = 87
 1e0e486:    58 01             	{pc, r8-r4} = [sp++]			  ## att_server.c:756:1


att_server_indicate:
 1e0e488:    79 01             	[--sp] = {rets, r9-r4}			  ## att_server.c:759:0
 1e0e48a:    39 08             	r9 = r3			  ## att_server.c:759:0
 1e0e48c:    28 08             	r8 = r2			  ## att_server.c:759:0
 1e0e48e:    14 08             	r4 = r1			  ## att_server.c:759:0
 1e0e490:    07 08             	r7 = r0			  ## att_server.c:759:0
 1e0e492:    6e 17             	call -292 <att_server_for_handle : 1e0e370 >			  ## att_server.c:764:32
 1e0e494:    05 08             	r5 = r0			  ## att_server.c:764:32
 1e0e496:    34 2a             	if (r5 == 0) goto 104 <att_server_indicate+0x78 : 1e0e500 >
 1e0e498:    50 4a             	r0 = [r5 + 20]			  ## att_server.c:769:21
 1e0e49a:    06 79             	r6 = 144			  ## att_server.c:769:21
 1e0e49c:    32 30             	if (r0 != 0) goto 100 <att_server_indicate+0x7A : 1e0e502 >			  ## att_server.c:769:21
 1e0e49e:    70 08             	r0 = r7			  ## att_server.c:772:10
 1e0e4a0:    c4 17             	call -120 <att_dispatch_server_can_send_now : 1e0e42a >			  ## att_server.c:772:10
 1e0e4a2:    31 20             	if (r0 == 0) goto 98 <att_server_indicate+0x7E : 1e0e506 >			  ## att_server.c:772:10
 1e0e4a4:    5c 4a             	[r5 + 20] = r4			  ## att_server.c:777:41
 1e0e4a6:    06 70             	r6 = 0			  ## att_server.c:777:41
 1e0e4a8:    7e 4a             	[r5 + 28] = r6			  ## att_server.c:779:5
 1e0e4aa:    6e 4a             	[r5 + 24] = r6			  ## att_server.c:779:5
 1e0e4ac:    00 fb 30 75       	r0 = 30000 <nvbss_size+0xA30 : 7530 >			  ## att_server.c:780:57
 1e0e4b0:    88 4a             	[r5 + 32] = r0			  ## att_server.c:780:57
 1e0e4b2:    c0 ff 00 ea e0 01 	r0 = 31517184 <att_handle_value_indication_timeout : 1e0ea00 >			  ## att_server.c:781:48
 1e0e4b8:    98 4a             	[r5 + 36] = r0			  ## att_server.c:781:48
 1e0e4ba:    ad 4a             	[r5 + 40] = r5			  ## att_server.c:782:48
 1e0e4bc:    80 9b             	r0 = r5 + 24			  ## att_server.c:779:25
 1e0e4be:    21 78             	r1 = 130			  ## att_server.c:783:5
 1e0e4c0:    bf f3 ed e7       	call -12326 <btstack_set_timer : 1e0b49e >			  ## att_server.c:783:5
 1e0e4c4:    bf f3 f9 e9       	call -11278 <l2cap_reserve_packet_buffer : 1e0b8ba >			  ## att_server.c:785:5
 1e0e4c8:    c3 ff 60 18 00 00 	r3 = 6240 <report_irq_stack_end : 1860 >			  ## att_db.c:1271:5
 1e0e4ce:    d0 71             	r0 = 29			  ## att_db.c:1295:24
 1e0e4d0:    08 67             	b[r3 + 16] = r0			  ## att_db.c:1295:24
 1e0e4d2:    00 97             	r0 = r3 + 16			  ## att_db.c:1295:24
 1e0e4d4:    11 70             	r1 = 1			  ## att_db.c:1267:5
 1e0e4d6:    42 08             	r2 = r4			  ## att_db.c:1267:5
 1e0e4d8:    bf f3 e1 ce       	call -25150 <little_endian_store_16 : 1e0829e >			  ## att_db.c:1267:5
 1e0e4dc:    70 5b             	r0 = h[r5 + 46] (u)			  ## att_db.c:1268:21
 1e0e4de:    04 fc fd ff       	r4 = r0 + -3			  ## att_db.c:1268:41
 1e0e4e2:    49 f2 01 c0       	ifs (r9 > r4) goto 2 <att_server_indicate+0x60 : 1e0e4e8 >
 1e0e4e6:    94 08             	r4 = r9			  ## att_db.c:1268:9
 1e0e4e8:    22 05             	r2 = r4.l (u)			  ## att_db.c:1271:40
 1e0e4ea:    30 97             	r0 = r3 + 19			  ## att_db.c:1271:5
 1e0e4ec:    81 08             	r1 = r8			  ## att_db.c:1271:5
 1e0e4ee:    97 f3 f9 c4       	call 3115506 <memcpy : 106ee4 >			  ## att_db.c:1271:5
 1e0e4f2:    60 5b             	r0 = h[r5 + 44] (u)			  ## att_server.c:788:5
 1e0e4f4:    31 98             	r1 = r4 + 3			  ## att_db.c:1272:22
 1e0e4f6:    62 04             	r2 = r1.l (u)			  ## att_server.c:788:5
 1e0e4f8:    41 70             	r1 = 4			  ## att_server.c:788:5
 1e0e4fa:    bf f3 6c e7       	call -12584 <l2cap_send_prepared_connectionless : 1e0b3d6 >			  ## att_server.c:788:5
 1e0e4fe:    01 18             	goto 2 <att_server_indicate+0x7A : 1e0e502 >			  ## att_server.c:788:5
 1e0e500:    26 70             	r6 = 2
 1e0e502:    60 08             	r0 = r6			  ## att_server.c:790:1
 1e0e504:    59 01             	{pc, r9-r4} = [sp++]			  ## att_server.c:790:1
 1e0e506:    76 75             	r6 = 87
 1e0e508:    fc 1f             	goto -8 <att_server_indicate+0x7A : 1e0e502 >


att_server_request_can_send_now_event:
 1e0e50a:    c0 ff 18 1d 00 00 	r0 = 7448 <att_global_info : 1d18 >			  ## att_server.c:714:0
 1e0e510:    01 f9 3c 00       	r1 = b[r0 + 60] (u)			  ## att_server.c:717:42
 1e0e514:    11 b0             	r1 |= 1			  ## att_server.c:717:42
 1e0e516:    11 f9 3c 00       	b[r0 + 60] = r1			  ## att_server.c:717:42
 1e0e51a:    7d 1f             	goto -262 <att_dispatch_server_request_can_send_now_event : 1e0e416 >			  ## att_server.c:718:9


att_packet_handler:
 1e0e51c:    79 01             	[--sp] = {rets, r9-r4}			  ## att_dispatch.c:80:0
 1e0e51e:    34 08             	r4 = r3			  ## att_dispatch.c:80:0
 1e0e520:    25 08             	r5 = r2			  ## att_dispatch.c:80:0
 1e0e522:    16 08             	r6 = r1			  ## att_dispatch.c:80:0
 1e0e524:    c9 ff 18 1d 00 00 	r9 = 7448 <att_global_info : 1d18 >			  ## att_dispatch.c:80:0
 1e0e52a:    40 e0 0c 00       	if (r0 == 4) goto 24 <att_packet_handler+0x2A : 1e0e546 >			  ## att_dispatch.c:81:5
 1e0e52e:    80 e0 47 10       	if (r0 != 8) goto 142 <att_packet_handler+0xA4 : 1e0e5c0 >
 1e0e532:    00 6a             	r0 = b[r5 + 0] (u)			  ## att_dispatch.c:84:13
 1e0e534:    20 f3 3b 00       	if ((r0 & 1) != 0) goto 118 <att_packet_handler+0x92 : 1e0e5ae >
 1e0e538:    07 f6 04 90       	r7 = [r9 + 4]			  ## att_dispatch.c:96:26
 1e0e53c:    3e 3e             	if (r7 != 0) goto 124 <att_packet_handler+0x9E : 1e0e5ba >			  ## att_dispatch.c:96:26
 1e0e53e:    07 f6 00 90       	r7 = [r9 + 0]			  ## att_dispatch.c:98:30
 1e0e542:    3b 3e             	if (r7 != 0) goto 118 <att_packet_handler+0x9E : 1e0e5ba >			  ## att_dispatch.c:98:30
 1e0e544:    59 01             	{pc, r9-r4} = [sp++]			  ## att_dispatch.c:138:1
 1e0e546:    00 6a             	r0 = b[r5 + 0] (u)			  ## att_dispatch.c:108:13
 1e0e548:    80 e7 3a 10       	if (r0 != 120) goto 116 <att_packet_handler+0xA4 : 1e0e5c0 >
 1e0e54c:    07 f9 08 90       	r7 = b[r9 + 8] (u)			  ## att_dispatch.c:108:62
 1e0e550:    22 f3 36 70       	if ((r7 & 4) != 0) goto 108 <att_packet_handler+0xA4 : 1e0e5c0 >			  ## att_dispatch.c:108:62
 1e0e554:    bf f3 6c e4       	call -14120 <hci_can_send_acl_le_packet_now : 1e0ae30 >			  ## att_dispatch.c:112:14
 1e0e558:    33 20             	if (r0 == 0) goto 102 <att_packet_handler+0xA4 : 1e0e5c0 >			  ## att_dispatch.c:112:14
 1e0e55a:    00 fd 04 79       	r0 = r7 | 4			  ## att_dispatch.c:117:36
 1e0e55e:    10 f9 08 90       	b[r9 + 8] = r0			  ## att_dispatch.c:117:36
 1e0e562:    01 f3 0e 70       	if ((r7 & 2) == 0) goto 28 <att_packet_handler+0x66 : 1e0e582 >			  ## att_dispatch.c:117:36
 1e0e566:    07 f6 04 90       	r7 = [r9 + 4]			  ## att_dispatch.c:118:21
 1e0e56a:    0b 2e             	if (r7 == 0) goto 22 <att_packet_handler+0x66 : 1e0e582 >			  ## att_dispatch.c:118:21
 1e0e56c:    f0 b0             	r0 &= 4294967293			  ## att_dispatch.c:119:53
 1e0e56e:    10 f9 08 90       	b[r9 + 8] = r0			  ## att_dispatch.c:119:53
 1e0e572:    40 70             	r0 = 4			  ## att_dispatch.c:120:13
 1e0e574:    61 08             	r1 = r6			  ## att_dispatch.c:120:13
 1e0e576:    52 08             	r2 = r5			  ## att_dispatch.c:120:13
 1e0e578:    43 08             	r3 = r4			  ## att_dispatch.c:120:13
 1e0e57a:    87 00             	call r7			  ## att_dispatch.c:120:13
 1e0e57c:    bf f3 58 e4       	call -14160 <hci_can_send_acl_le_packet_now : 1e0ae30 >			  ## att_dispatch.c:122:18
 1e0e580:    10 20             	if (r0 == 0) goto 32 <att_packet_handler+0x86 : 1e0e5a2 >			  ## att_dispatch.c:122:18
 1e0e582:    08 f6 00 90       	r8 = [r9 + 0]			  ## att_dispatch.c:128:21
 1e0e586:    08 e0 0c 00       	if (r8 == 0) goto 24 <att_packet_handler+0x86 : 1e0e5a2 >			  ## att_dispatch.c:128:21
 1e0e58a:    00 f9 08 90       	r0 = b[r9 + 8] (u)			  ## att_dispatch.c:128:51
 1e0e58e:    00 f3 08 00       	if ((r0 & 1) == 0) goto 16 <att_packet_handler+0x86 : 1e0e5a2 >			  ## att_dispatch.c:128:51
 1e0e592:    70 b0             	r0 &= 4294967294			  ## att_dispatch.c:129:53
 1e0e594:    10 f9 08 90       	b[r9 + 8] = r0			  ## att_dispatch.c:129:53
 1e0e598:    40 70             	r0 = 4			  ## att_dispatch.c:130:13
 1e0e59a:    61 08             	r1 = r6			  ## att_dispatch.c:130:13
 1e0e59c:    52 08             	r2 = r5			  ## att_dispatch.c:130:13
 1e0e59e:    43 08             	r3 = r4			  ## att_dispatch.c:130:13
 1e0e5a0:    88 00             	call r8			  ## att_dispatch.c:130:13
 1e0e5a2:    00 f9 08 90       	r0 = b[r9 + 8] (u)
 1e0e5a6:    70 b1             	r0 &= 4294967291
 1e0e5a8:    10 f9 08 90       	b[r9 + 8] = r0
 1e0e5ac:    59 01             	{pc, r9-r4} = [sp++]			  ## att_dispatch.c:138:1
 1e0e5ae:    07 f6 00 90       	r7 = [r9 + 0]			  ## att_dispatch.c:86:26
 1e0e5b2:    03 3e             	if (r7 != 0) goto 6 <att_packet_handler+0x9E : 1e0e5ba >			  ## att_dispatch.c:86:26
 1e0e5b4:    07 f6 04 90       	r7 = [r9 + 4]			  ## att_dispatch.c:87:29
 1e0e5b8:    03 2e             	if (r7 == 0) goto 6 <att_packet_handler+0xA4 : 1e0e5c0 >			  ## att_dispatch.c:87:29
 1e0e5ba:    80 70             	r0 = 8
 1e0e5bc:    87 00             	call r7
 1e0e5be:    59 01             	{pc, r9-r4} = [sp++]			  ## att_dispatch.c:138:1
 1e0e5c0:    59 01             	{pc, r9-r4} = [sp++]			  ## att_dispatch.c:138:1


att_run_for_context:
 1e0e5c2:    34 00             	[--sp] = rets			  ## att_server.c:445:0
 1e0e5c4:    01 40             	r1 = [r0 + 0]			  ## att_server.c:446:25
 1e0e5c6:    11 e0 03 10       	if (r1 != 1) goto 6 <att_run_for_context+0xE : 1e0e5d0 >			  ## att_server.c:446:25
 1e0e5ca:    c0 f4 03 09       	[r0 + 0] = 3			  ## att_server.c:492:27
 1e0e5ce:    23 17             	call -442 <att_dispatch_server_request_can_send_now_event : 1e0e416 >			  ## att_server.c:493:9
 1e0e5d0:    30 00             	pc = [sp++]			  ## att_server.c:499:1


att_event_packet_handler:
 1e0e5d2:    76 01             	[--sp] = {rets, r6-r4}			  ## att_server.c:176:0
 1e0e5d4:    24 08             	r4 = r2			  ## att_server.c:176:0
 1e0e5d6:    40 e0 96 10       	if (r0 != 4) goto 300 <.GJTIE751_0_0_+0xE4 : 1e0e706 >			  ## att_server.c:176:0
 1e0e5da:    00 68             	r0 = b[r4 + 0] (u)			  ## att_server.c:176:0
 1e0e5dc:    d0 e3 19 c0       	ifs (r0 > 61) goto 50 <att_event_packet_handler+0x40 : 1e0e612 >			  ## att_server.c:191:9
 1e0e5e0:    50 e0 28 00       	if (r0 == 5) goto 80 <.GJTIE751_0_0_+0x12 : 1e0e634 >
 1e0e5e4:    80 e0 02 00       	if (r0 == 8) goto 4 <att_event_packet_handler+0x1A : 1e0e5ec >
 1e0e5e8:    00 e3 8d 10       	if (r0 != 48) goto 282 <.GJTIE751_0_0_+0xE4 : 1e0e706 >
 1e0e5ec:    31 70             	r1 = 3			  ## att_server.c:229:26
 1e0e5ee:    40 08             	r0 = r4			  ## att_server.c:229:26
 1e0e5f0:    bf f3 65 cb       	call -26934 <little_endian_read_16 : 1e07cbe >			  ## att_server.c:229:26
 1e0e5f4:    04 08             	r4 = r0			  ## att_server.c:229:26
 1e0e5f6:    bc 16             	call -648 <att_server_for_handle : 1e0e370 >			  ## att_server.c:230:26
 1e0e5f8:    05 08             	r5 = r0			  ## att_server.c:230:26
 1e0e5fa:    85 2a             	if (r5 == 0) goto 266 <.GJTIE751_0_0_+0xE4 : 1e0e706 >
 1e0e5fc:    40 08             	r0 = r4			  ## att_server.c:234:58
 1e0e5fe:    bf f3 ed f8       	call -3622 <sm_encryption_key_size : 1e0d7dc >			  ## att_server.c:234:58
 1e0e602:    10 f9 32 50       	b[r5 + 50] = r0			  ## att_server.c:234:56
 1e0e606:    40 08             	r0 = r4			  ## att_server.c:235:52
 1e0e608:    bf f3 f9 f8       	call -3598 <sm_authenticated : 1e0d7fe >			  ## att_server.c:235:52
 1e0e60c:    10 f9 33 50       	b[r5 + 51] = r0			  ## att_server.c:235:50
 1e0e610:    56 01             	{pc, r6-r4} = [sp++]			  ## att_server.c:300:1
 1e0e612:    01 fc 28 ff       	r1 = r0 + -216
 1e0e616:    41 e0 1d 80       	if (r1 > 4) goto 58 <.GJTIE751_0_0_+0x32 : 1e0e654 >
 1e0e61a:    a1 00             	tbb [r1]


.GJTIS751_0_0_:
 1e0e61c:    03     < 3 : 0x3 >
 1e0e61d:    4e     < 78 : 0x4E >
 1e0e61e:    5a     < 90 : 0x5A >
 1e0e61f:    75     < 117 : 0x75 >
 1e0e620:    6b     < 107 : 0x6B >
 1e0e621:    00     < 0 : 0x0 >
 1e0e622:    21 70             	r1 = 2			  ## btstack_event.h:2856:16
 1e0e624:    40 08             	r0 = r4			  ## btstack_event.h:2856:16
 1e0e626:    bf f3 4a cb       	call -26988 <little_endian_read_16 : 1e07cbe >			  ## btstack_event.h:2856:16
 1e0e62a:    a2 16             	call -700 <att_server_for_handle : 1e0e370 >			  ## att_server.c:254:26
 1e0e62c:    6c 20             	if (r0 == 0) goto 216 <.GJTIE751_0_0_+0xE4 : 1e0e706 >
 1e0e62e:    c4 f4 01 09       	[r0 + 16] = 1			  ## att_server.c:259:42
 1e0e632:    56 01             	{pc, r6-r4} = [sp++]			  ## att_server.c:300:1
 1e0e634:    c0 ff e5 57 e1 01 	r0 = 31545317 <update_target_end+0x295D : 1e157e5 >			  ## att_server.c:240:13
 1e0e63a:    80 f3 9c 06       	call 3384 <puts : 1e0f376 >			  ## att_server.c:240:13
 1e0e63e:    31 70             	r1 = 3			  ## btstack_event.h:324:16
 1e0e640:    40 08             	r0 = r4			  ## btstack_event.h:324:16
 1e0e642:    bf f3 3c cb       	call -27016 <little_endian_read_16 : 1e07cbe >			  ## btstack_event.h:324:16
 1e0e646:    94 16             	call -728 <att_server_for_handle : 1e0e370 >			  ## att_server.c:242:26
 1e0e648:    5e 20             	if (r0 == 0) goto 188 <.GJTIE751_0_0_+0xE4 : 1e0e706 >
 1e0e64a:    01 70             	r1 = 0
 1e0e64c:    69 51             	h[r0 + 44] = r1			  ## att_server.c:247:47
 1e0e64e:    59 40             	[r0 + 20] = r1			  ## att_server.c:248:49
 1e0e650:    09 40             	[r0 + 0] = r1			  ## att_server.c:249:31
 1e0e652:    56 01             	{pc, r6-r4} = [sp++]			  ## att_server.c:300:1
 1e0e654:    e0 e3 57 10       	if (r0 != 62) goto 174 <.GJTIE751_0_0_+0xE4 : 1e0e706 >
 1e0e658:    20 68             	r0 = b[r4 + 2] (u)			  ## att_server.c:194:21
 1e0e65a:    10 e0 54 10       	if (r0 != 1) goto 168 <.GJTIE751_0_0_+0xE4 : 1e0e706 >			  ## att_server.c:194:21
 1e0e65e:    41 70             	r1 = 4			  ## att_server.c:196:30
 1e0e660:    40 08             	r0 = r4			  ## att_server.c:196:30
 1e0e662:    bf f3 2c cb       	call -27048 <little_endian_read_16 : 1e07cbe >			  ## att_server.c:196:30
 1e0e666:    06 08             	r6 = r0			  ## att_server.c:196:30
 1e0e668:    83 16             	call -762 <att_server_for_handle : 1e0e370 >			  ## att_server.c:197:30
 1e0e66a:    05 08             	r5 = r0			  ## att_server.c:197:30
 1e0e66c:    4c 2a             	if (r5 == 0) goto 152 <.GJTIE751_0_0_+0xE4 : 1e0e706 >
 1e0e66e:    70 68             	r0 = b[r4 + 7] (u)			  ## att_server.c:202:46
 1e0e670:    48 6a             	b[r5 + 4] = r0			  ## att_server.c:202:44
 1e0e672:    80 98             	r0 = r4 + 8			  ## att_server.c:203:34
 1e0e674:    51 9a             	r1 = r5 + 5			  ## att_server.c:203:45
 1e0e676:    bf f3 9e e6       	call -12996 <reverse_bd_addr : 1e0b3b6 >			  ## att_server.c:203:17
 1e0e67a:    6e 5b             	h[r5 + 44] = r6			  ## att_server.c:204:51
 1e0e67c:    c0 ff 18 1d 00 00 	r0 = 7448 <att_global_info : 1d18 >			  ## att_db.c:297:24
 1e0e682:    40 40             	r0 = [r0 + 16]			  ## att_db.c:297:24
 1e0e684:    e8 4a             	[r5 + 56] = r0			  ## att_server.c:205:48
 1e0e686:    01 70             	r1 = 0			  ## att_server.c:205:48
 1e0e688:    09 4a             	[r5 + 0] = r1			  ## att_server.c:208:35
 1e0e68a:    70 71             	r0 = 23			  ## att_server.c:209:44
 1e0e68c:    78 5b             	h[r5 + 46] = r0			  ## att_server.c:209:44
 1e0e68e:    bf f3 38 eb       	call -10640 <l2cap_max_le_mtu : 1e0bd02 >			  ## att_server.c:210:50
 1e0e692:    03 ff 05 02 02 00 	if (r0 < 517) goto 4 <.GJTIE751_0_0_+0x7A : 1e0e69c >			  ## att_server.c:210:50
 1e0e698:    00 fb 05 02       	r0 = 517 <BTCTLER_CL_RAM_TOTAL+0x21 : 205 >			  ## att_server.c:211:21
 1e0e69c:    88 5b             	h[r5 + 48] = r0			  ## att_server.c:210:48
 1e0e69e:    50 fc 30 00       	r0 = r5 + 48			  ## att_server.c:210:48
 1e0e6a2:    29 60             	b[r0 + 2] = r1			  ## att_server.c:214:60
 1e0e6a4:    39 60             	b[r0 + 3] = r1			  ## att_server.c:215:54
 1e0e6a6:    49 60             	b[r0 + 4] = r1			  ## att_server.c:216:51
 1e0e6a8:    c3 f4 ff 5f       	[r5 + 12] = 4294967295			  ## att_server.c:217:51
 1e0e6ac:    00 f9 43 52       	r0 = b[r5 + 579] (u)			  ## att_server.c:218:44
 1e0e6b0:    70 b0             	r0 &= 4294967294			  ## att_server.c:218:44
 1e0e6b2:    10 f9 43 52       	b[r5 + 579] = r0			  ## att_server.c:218:44
 1e0e6b6:    56 01             	{pc, r6-r4} = [sp++]			  ## att_server.c:300:1
 1e0e6b8:    21 70             	r1 = 2			  ## btstack_event.h:2889:16
 1e0e6ba:    40 08             	r0 = r4			  ## btstack_event.h:2889:16
 1e0e6bc:    bf f3 ff ca       	call -27138 <little_endian_read_16 : 1e07cbe >			  ## btstack_event.h:2889:16
 1e0e6c0:    57 16             	call -850 <att_server_for_handle : 1e0e370 >			  ## att_server.c:274:26
 1e0e6c2:    21 20             	if (r0 == 0) goto 66 <.GJTIE751_0_0_+0xE4 : 1e0e706 >
 1e0e6c4:    c4 f4 00 09       	[r0 + 16] = 0			  ## att_server.c:279:42
 1e0e6c8:    c3 f4 ff 0f       	[r0 + 12] = 4294967295			  ## att_server.c:280:47
 1e0e6cc:    16 01             	{rets, r6-r4} = [sp++]			  ## att_server.c:281:13
 1e0e6ce:    79 1f             	goto -270 <att_run_for_context : 1e0e5c2 >			  ## att_server.c:281:13
 1e0e6d0:    21 70             	r1 = 2			  ## btstack_event.h:2922:16
 1e0e6d2:    40 08             	r0 = r4			  ## btstack_event.h:2922:16
 1e0e6d4:    bf f3 f3 ca       	call -27162 <little_endian_read_16 : 1e07cbe >			  ## btstack_event.h:2922:16
 1e0e6d8:    4b 16             	call -874 <att_server_for_handle : 1e0e370 >			  ## att_server.c:263:26
 1e0e6da:    02 08             	r2 = r0			  ## att_server.c:263:26
 1e0e6dc:    14 24             	if (r2 == 0) goto 40 <.GJTIE751_0_0_+0xE4 : 1e0e706 >
 1e0e6de:    c4 f4 00 29       	[r2 + 16] = 0			  ## att_server.c:267:42
 1e0e6e2:    21 71             	r1 = 18			  ## btstack_event.h:2972:16
 1e0e6e4:    40 08             	r0 = r4			  ## btstack_event.h:2972:16
 1e0e6e6:    bf f3 ea ca       	call -27180 <little_endian_read_16 : 1e07cbe >			  ## btstack_event.h:2972:16
 1e0e6ea:    38 44             	[r2 + 12] = r0			  ## att_server.c:268:47
 1e0e6ec:    20 08             	r0 = r2			  ## att_server.c:270:13
 1e0e6ee:    16 01             	{rets, r6-r4} = [sp++]			  ## att_server.c:270:13
 1e0e6f0:    68 1f             	goto -304 <att_run_for_context : 1e0e5c2 >			  ## att_server.c:270:13
 1e0e6f2:    21 70             	r1 = 2			  ## btstack_event.h:3018:16
 1e0e6f4:    40 08             	r0 = r4			  ## btstack_event.h:3018:16
 1e0e6f6:    bf f3 e2 ca       	call -27196 <little_endian_read_16 : 1e07cbe >			  ## btstack_event.h:3018:16
 1e0e6fa:    3a 16             	call -908 <att_server_for_handle : 1e0e370 >			  ## att_server.c:285:26
 1e0e6fc:    04 20             	if (r0 == 0) goto 8 <.GJTIE751_0_0_+0xE4 : 1e0e706 >
 1e0e6fe:    b1 68             	r1 = b[r4 + 11] (u)			  ## btstack_event.h:3048:16
 1e0e700:    11 f9 34 00       	b[r0 + 52] = r1			  ## att_server.c:289:47
 1e0e704:    88 16             	call -752 <att_dispatch_server_request_can_send_now_event : 1e0e416 >			  ## att_server.c:290:13
 1e0e706:    56 01             	{pc, r6-r4} = [sp++]			  ## att_server.c:300:1


att_emit_mtu_event:
 1e0e708:    75 01             	[--sp] = {rets, r5, r4}			  ## att_server.c:133:0
 1e0e70a:    fc 0b             	sp += -8			  ## att_server.c:133:0
 1e0e70c:    c5 ff 18 1d 00 00 	r5 = 7448 <att_global_info : 1d18 >			  ## att_server.c:133:0
 1e0e712:    d4 4a             	r4 = [r5 + 52]			  ## att_server.c:134:18
 1e0e714:    13 08             	r3 = r1			  ## att_server.c:134:18
 1e0e716:    02 08             	r2 = r0
 1e0e718:    15 28             	if (r4 == 0) goto 42 <att_emit_mtu_event+0x3C : 1e0e744 >
 1e0e71a:    50 7b             	r0 = 181			  ## att_server.c:140:18
 1e0e71c:    d0 f5 02 00       	b[sp+2] = r0			  ## att_server.c:140:18
 1e0e720:    40 70             	r0 = 4			  ## att_server.c:140:18
 1e0e722:    d0 f5 03 00       	b[sp+3] = r0			  ## att_server.c:141:18
 1e0e726:    24 a0             	r4 = sp + 2			  ## att_server.c:141:18
 1e0e728:    21 70             	r1 = 2			  ## att_server.c:142:5
 1e0e72a:    40 08             	r0 = r4			  ## att_server.c:142:5
 1e0e72c:    bf f3 b7 cd       	call -25746 <little_endian_store_16 : 1e0829e >			  ## att_server.c:142:5
 1e0e730:    41 70             	r1 = 4			  ## att_server.c:144:5
 1e0e732:    32 08             	r2 = r3			  ## att_server.c:144:5
 1e0e734:    bf f3 b3 cd       	call -25754 <little_endian_store_16 : 1e0829e >			  ## att_server.c:144:5
 1e0e738:    d5 4a             	r5 = [r5 + 52]			  ## att_server.c:145:13
 1e0e73a:    40 70             	r0 = 4			  ## att_server.c:145:5
 1e0e73c:    01 70             	r1 = 0			  ## att_server.c:145:5
 1e0e73e:    63 70             	r3 = 6			  ## att_server.c:145:5
 1e0e740:    42 08             	r2 = r4			  ## att_server.c:145:5
 1e0e742:    85 00             	call r5			  ## att_server.c:145:5
 1e0e744:    04 0a             	sp += 8
 1e0e746:    55 01             	{pc, r5, r4} = [sp++]			  ## att_server.c:146:1


att_handle_value_indication_notify_client:
 1e0e748:    75 01             	[--sp] = {rets, r5, r4}			  ## att_server.c:116:0
 1e0e74a:    fc 0b             	sp += -8			  ## att_server.c:116:0
 1e0e74c:    c5 ff 18 1d 00 00 	r5 = 7448 <att_global_info : 1d18 >			  ## att_server.c:116:0
 1e0e752:    d4 4a             	r4 = [r5 + 52]			  ## att_server.c:117:18
 1e0e754:    23 08             	r3 = r2			  ## att_server.c:117:18
 1e0e756:    12 08             	r2 = r1
 1e0e758:    17 28             	if (r4 == 0) goto 46 <att_handle_value_indication_notify_client+0x40 : 1e0e788 >
 1e0e75a:    61 7b             	r1 = 182			  ## att_server.c:123:18
 1e0e75c:    d1 f5 01 00       	b[sp+1] = r1			  ## att_server.c:123:18
 1e0e760:    51 70             	r1 = 5			  ## att_server.c:123:18
 1e0e762:    d1 f5 02 00       	b[sp+2] = r1			  ## att_server.c:124:18
 1e0e766:    d0 f5 03 00       	b[sp+3] = r0			  ## att_server.c:125:18
 1e0e76a:    14 a0             	r4 = sp + 1			  ## att_server.c:125:18
 1e0e76c:    31 70             	r1 = 3			  ## att_server.c:126:5
 1e0e76e:    40 08             	r0 = r4			  ## att_server.c:126:5
 1e0e770:    bf f3 95 cd       	call -25814 <little_endian_store_16 : 1e0829e >			  ## att_server.c:126:5
 1e0e774:    51 70             	r1 = 5			  ## att_server.c:128:5
 1e0e776:    32 08             	r2 = r3			  ## att_server.c:128:5
 1e0e778:    bf f3 91 cd       	call -25822 <little_endian_store_16 : 1e0829e >			  ## att_server.c:128:5
 1e0e77c:    d5 4a             	r5 = [r5 + 52]			  ## att_server.c:129:13
 1e0e77e:    40 70             	r0 = 4			  ## att_server.c:129:5
 1e0e780:    01 70             	r1 = 0			  ## att_server.c:129:5
 1e0e782:    73 70             	r3 = 7			  ## att_server.c:129:5
 1e0e784:    42 08             	r2 = r4			  ## att_server.c:129:5
 1e0e786:    85 00             	call r5			  ## att_server.c:129:5
 1e0e788:    04 0a             	sp += 8
 1e0e78a:    55 01             	{pc, r5, r4} = [sp++]			  ## att_server.c:130:1


att_packet_handler.1984:
 1e0e78c:    7c 01             	[--sp] = {rets, r12-r4}			  ## att_server.c:568:0
 1e0e78e:    f8 0b             	sp += -16			  ## att_server.c:568:0
 1e0e790:    35 08             	r5 = r3			  ## att_server.c:568:0
 1e0e792:    24 08             	r4 = r2			  ## att_server.c:568:0
 1e0e794:    c7 ff 18 1d 00 00 	r7 = 7448 <att_global_info : 1d18 >			  ## att_server.c:568:0
 1e0e79a:    80 e0 14 00       	if (r0 == 8) goto 40 <att_packet_handler.1984+0x3A : 1e0e7c6 >			  ## att_server.c:572:5
 1e0e79e:    40 e0 2d 11       	if (r0 != 4) goto 602 <att_packet_handler.1984+0x270 : 1e0e9fc >
 1e0e7a2:    00 68             	r0 = b[r4 + 0] (u)			  ## att_server.c:575:13
 1e0e7a4:    80 e7 2a 11       	if (r0 != 120) goto 596 <att_packet_handler.1984+0x270 : 1e0e9fc >
 1e0e7a8:    00 a0             	r0 = sp + 0
 1e0e7aa:    bf f3 21 d7       	call -20926 <hci_connections_get_iterator : 1e095f0 >			  ## att_server.c:510:5
 1e0e7ae:    bf f3 8d ca       	call -27366 <btstack_linked_list_iterator_has_next : 1e07ccc >			  ## att_server.c:511:12
 1e0e7b2:    e3 20             	if (r0 == 0) goto 454 <att_packet_handler.1984+0x1EE : 1e0e97a >			  ## att_server.c:511:12
 1e0e7b4:    cb ff 60 18 00 00 	r11 = 6240 <report_irq_stack_end : 1860 >
 1e0e7ba:    0a 70             	r10 = 0
 1e0e7bc:    c8 ff 48 e3 e0 01 	r8 = 31515464 <search_ios_ancs_server : 1e0e348 >
 1e0e7c2:    29 70             	r9 = 2
 1e0e7c4:    3c 18             	goto 120 <att_packet_handler.1984+0xB2 : 1e0e83e >
 1e0e7c6:    10 08             	r0 = r1			  ## att_server.c:583:22
 1e0e7c8:    d3 15             	call -1114 <att_server_for_handle : 1e0e370 >			  ## att_server.c:583:22
 1e0e7ca:    06 08             	r6 = r0			  ## att_server.c:583:22
 1e0e7cc:    06 e0 16 01       	if (r6 == 0) goto 556 <att_packet_handler.1984+0x270 : 1e0e9fc >
 1e0e7d0:    e0 4c             	r0 = [r6 + 56]			  ## att_server.c:589:51
 1e0e7d2:    38 4e             	[r7 + 12] = r0			  ## att_db.c:306:24
 1e0e7d4:    00 68             	r0 = b[r4 + 0] (u)			  ## att_server.c:592:13
 1e0e7d6:    20 e5 27 00       	if (r0 == 82) goto 78 <att_packet_handler.1984+0x9C : 1e0e828 >			  ## att_server.c:592:56
 1e0e7da:    e0 e1 0b 10       	if (r0 != 30) goto 22 <att_packet_handler.1984+0x68 : 1e0e7f4 >
 1e0e7de:    51 4c             	r1 = [r6 + 20]			  ## att_server.c:592:71
 1e0e7e0:    09 22             	if (r1 == 0) goto 18 <att_packet_handler.1984+0x68 : 1e0e7f4 >			  ## att_server.c:592:71
 1e0e7e2:    70 4c             	r0 = [r6 + 28]
 1e0e7e4:    bf f3 89 e3       	call -14574 <btstack_run_loop_remove_timer : 1e0aefa >			  ## att_server.c:160:5
 1e0e7e8:    a2 5c             	r2 = h[r6 + 20] (u)			  ## att_server.c:596:13
 1e0e7ea:    00 70             	r0 = 0			  ## att_server.c:596:13
 1e0e7ec:    58 4c             	[r6 + 20] = r0			  ## att_server.c:595:49
 1e0e7ee:    61 5d             	r1 = h[r6 + 44] (u)			  ## att_server.c:596:13
 1e0e7f0:    ab 17             	call -170 <att_handle_value_indication_notify_client : 1e0e748 >			  ## att_server.c:596:13
 1e0e7f2:    04 19             	goto 520 <att_packet_handler.1984+0x270 : 1e0e9fc >			  ## att_server.c:596:13
 1e0e7f4:    08 ff 05 52 01 01 	if (r5 > 517) goto 514 <att_packet_handler.1984+0x270 : 1e0e9fc >
 1e0e7fa:    01 4c             	r1 = [r6 + 0]			  ## att_server.c:615:25
 1e0e7fc:    ff 32             	if (r1 != 0) goto 510 <att_packet_handler.1984+0x270 : 1e0e9fc >			  ## att_server.c:615:25
 1e0e7fe:    61 fc 40 02       	r1 = r6 + 576
 1e0e802:    32 62             	r2 = b[r1 + 3] (u)			  ## att_server.c:620:30
 1e0e804:    23 fd 1c 29       	r3 = r2 & 28			  ## att_server.c:620:30
 1e0e808:    83 e0 ed 10       	if (r3 != 8) goto 474 <att_packet_handler.1984+0x25A : 1e0e9e6 >			  ## att_server.c:620:30
 1e0e80c:    10 e0 e2 00       	if (r0 == 1) goto 452 <att_packet_handler.1984+0x248 : 1e0e9d4 >			  ## att_server.c:621:13
 1e0e810:    70 e0 e9 10       	if (r0 != 7) goto 466 <att_packet_handler.1984+0x25A : 1e0e9e6 >
 1e0e814:    20 fd c3 29       	r0 = r2 & 195			  ## att_server.c:625:46
 1e0e818:    00 fd 14 09       	r0 = r0 | 20			  ## att_server.c:625:46
 1e0e81c:    38 62             	b[r1 + 3] = r0			  ## att_server.c:626:42
 1e0e81e:    12 42             	r2 = [r1 + 4]			  ## att_server.c:627:33
 1e0e820:    e2 24             	if (r2 == 0) goto 452 <att_packet_handler.1984+0x25A : 1e0e9e6 >			  ## att_server.c:627:33
 1e0e822:    60 5d             	r0 = h[r6 + 44] (u)			  ## att_server.c:628:21
 1e0e824:    21 70             	r1 = 2			  ## att_server.c:628:21
 1e0e826:    de 18             	goto 444 <att_packet_handler.1984+0x258 : 1e0e9e4 >			  ## att_server.c:628:21
 1e0e828:    60 fc 2c 00       	r0 = r6 + 44			  ## att_server.c:589:40
 1e0e82c:    03 70             	r3 = 0			  ## att_server.c:604:13
 1e0e82e:    41 08             	r1 = r4			  ## att_server.c:604:13
 1e0e830:    52 08             	r2 = r5			  ## att_server.c:604:13
 1e0e832:    bf f3 f3 be       	call -33306 <att_handle_request : 1e0661c >			  ## att_server.c:604:13
 1e0e836:    e2 18             	goto 452 <att_packet_handler.1984+0x270 : 1e0e9fc >			  ## att_server.c:604:13
 1e0e838:    bf f3 68 ea       	call -11056 <l2cap_release_packet_buffer : 1e0bd0c >			  ## att_server.c:412:13
 1e0e83c:    9a 18             	goto 308 <att_packet_handler.1984+0x1E6 : 1e0e972 >			  ## att_server.c:412:13
 1e0e83e:    00 a0             	r0 = sp + 0
 1e0e840:    bf f3 52 ca       	call -27484 <btstack_linked_list_iterator_next : 1e07ce8 >			  ## att_server.c:512:67
 1e0e844:    04 fc 74 00       	r4 = r0 + 116
 1e0e848:    e1 48             	r1 = [r4 + 56]			  ## att_server.c:515:51
 1e0e84a:    39 4e             	[r7 + 12] = r1			  ## att_db.c:306:24
 1e0e84c:    01 f9 b7 02       	r1 = b[r0 + 695] (u)			  ## att_server.c:517:25
 1e0e850:    20 f3 8f 10       	if ((r1 & 1) != 0) goto 286 <att_packet_handler.1984+0x1E6 : 1e0e972 >			  ## att_server.c:517:25
 1e0e854:    02 48             	r2 = [r4 + 0]			  ## att_server.c:521:25
 1e0e856:    03 fc a0 00       	r3 = r0 + 160			  ## att_server.c:521:25
 1e0e85a:    4c fc 42 02       	r12 = r4 + 578			  ## att_server.c:521:25
 1e0e85e:    32 e0 26 10       	if (r2 != 3) goto 76 <att_packet_handler.1984+0x122 : 1e0e8ae >			  ## att_server.c:521:13
 1e0e862:    45 fc 2c 00       	r5 = r4 + 44			  ## att_server.c:515:40
 1e0e866:    bf f3 28 e8       	call -12208 <l2cap_reserve_packet_buffer : 1e0b8ba >			  ## att_server.c:393:5
 1e0e86a:    82 56             	r2 = h[r3 + 16] (u)			  ## att_server.c:395:37
 1e0e86c:    46 fc 2e 00       	r6 = r4 + 46			  ## att_server.c:395:37
 1e0e870:    01 9d             	r1 = r6 + 16			  ## att_server.c:395:81
 1e0e872:    b3 fc 10 00       	r3 = r11 + 16			  ## att_server.c:395:37
 1e0e876:    50 08             	r0 = r5			  ## att_server.c:395:37
 1e0e878:    bf f3 d0 be       	call -33376 <att_handle_request : 1e0661c >			  ## att_server.c:395:37
 1e0e87c:    05 08             	r5 = r0			  ## att_server.c:395:37
 1e0e87e:    45 e0 34 30       	if (r5 < 4) goto 104 <att_packet_handler.1984+0x15E : 1e0e8ea >			  ## att_server.c:399:9
 1e0e882:    00 f9 10 b0       	r0 = b[r11 + 16] (u)			  ## att_server.c:399:13
 1e0e886:    10 e0 41 10       	if (r0 != 1) goto 130 <att_packet_handler.1984+0x180 : 1e0e90c >			  ## att_server.c:399:13
 1e0e88a:    00 f9 14 b0       	r0 = b[r11 + 20] (u)			  ## att_server.c:400:9
 1e0e88e:    80 e0 3d 10       	if (r0 != 8) goto 122 <att_packet_handler.1984+0x180 : 1e0e90c >			  ## att_server.c:400:9
 1e0e892:    50 6c             	r0 = b[r6 + 5] (u)			  ## att_server.c:401:36
 1e0e894:    3b 20             	if (r0 == 0) goto 118 <att_packet_handler.1984+0x180 : 1e0e90c >			  ## att_server.c:401:36
 1e0e896:    60 59             	r0 = h[r4 + 44] (u)			  ## att_server.c:403:17
 1e0e898:    bf f3 be f7       	call -4228 <sm_authorization_state : 1e0d818 >			  ## att_server.c:403:17
 1e0e89c:    10 e0 cc 0f       	if (r0 == 1) goto -104 <att_packet_handler.1984+0xAC : 1e0e838 >			  ## att_server.c:403:9
 1e0e8a0:    35 30             	if (r0 != 0) goto 106 <att_packet_handler.1984+0x180 : 1e0e90c >
 1e0e8a2:    bf f3 33 ea       	call -11162 <l2cap_release_packet_buffer : 1e0bd0c >			  ## att_server.c:405:13
 1e0e8a6:    60 59             	r0 = h[r4 + 44] (u)			  ## att_server.c:407:13
 1e0e8a8:    bf f3 c9 f7       	call -4206 <sm_api_request_pairing : 1e0d83e >			  ## att_server.c:407:13
 1e0e8ac:    62 18             	goto 196 <att_packet_handler.1984+0x1E6 : 1e0e972 >			  ## att_server.c:407:13
 1e0e8ae:    25 f3 60 10       	if ((r1 & 32) != 0) goto 192 <att_packet_handler.1984+0x1E6 : 1e0e972 >
 1e0e8b2:    21 f3 42 10       	if ((r1 & 2) != 0) goto 132 <att_packet_handler.1984+0x1AE : 1e0e93a >
 1e0e8b6:    20 fd 1c 19       	r0 = r1 & 28			  ## att_server.c:535:36
 1e0e8ba:    40 e0 5a 10       	if (r0 != 4) goto 180 <att_packet_handler.1984+0x1E6 : 1e0e972 >			  ## att_server.c:535:36
 1e0e8be:    bf f3 fc e7       	call -12296 <l2cap_reserve_packet_buffer : 1e0b8ba >			  ## att_server.c:370:10
 1e0e8c2:    56 20             	if (r0 == 0) goto 172 <att_packet_handler.1984+0x1E4 : 1e0e970 >			  ## att_server.c:370:10
 1e0e8c4:    b0 fc 10 00       	r0 = r11 + 16			  ## att_server.c:375:5
 1e0e8c8:    72 71             	r2 = 23			  ## att_server.c:375:5
 1e0e8ca:    81 08             	r1 = r8			  ## att_server.c:375:5
 1e0e8cc:    97 f3 0a c3       	call 3114516 <memcpy : 106ee4 >			  ## att_server.c:375:5
 1e0e8d0:    60 59             	r0 = h[r4 + 44] (u)			  ## att_server.c:377:9
 1e0e8d2:    41 70             	r1 = 4			  ## att_server.c:377:9
 1e0e8d4:    72 71             	r2 = 23			  ## att_server.c:377:9
 1e0e8d6:    bf f3 7e e5       	call -13572 <l2cap_send_prepared_connectionless : 1e0b3d6 >			  ## att_server.c:377:9
 1e0e8da:    40 30             	if (r0 != 0) goto 128 <att_packet_handler.1984+0x1D0 : 1e0e95c >			  ## att_server.c:377:9
 1e0e8dc:    00 f9 01 c0       	r0 = b[r12 + 1] (u)			  ## att_server.c:382:34
 1e0e8e0:    20 fd c3 09       	r0 = r0 & 195			  ## att_server.c:382:34
 1e0e8e4:    00 fd 28 09       	r0 = r0 | 40			  ## att_server.c:537:46
 1e0e8e8:    41 18             	goto 130 <att_packet_handler.1984+0x1E0 : 1e0e96c >			  ## att_server.c:537:46
 1e0e8ea:    1a f6 00 40       	[r4 + 0] = r10			  ## att_server.c:419:23
 1e0e8ee:    10 3a             	if (r5 != 0) goto 32 <att_packet_handler.1984+0x184 : 1e0e910 >			  ## att_server.c:419:23
 1e0e8f0:    bf f3 0c ea       	call -11240 <l2cap_release_packet_buffer : 1e0bd0c >			  ## att_server.c:422:9
 1e0e8f4:    00 6d             	r0 = b[r6 + 16] (u)			  ## att_server.c:425:13
 1e0e8f6:    30 e0 3c 10       	if (r0 != 3) goto 120 <att_packet_handler.1984+0x1E6 : 1e0e972 >			  ## att_server.c:425:13
 1e0e8fa:    00 f9 01 c0       	r0 = b[r12 + 1] (u)			  ## att_server.c:426:38
 1e0e8fe:    f0 b2             	r0 &= 4294967263			  ## att_server.c:426:38
 1e0e900:    10 f9 01 c0       	b[r12 + 1] = r0			  ## att_server.c:426:38
 1e0e904:    01 5c             	r1 = h[r6 + 0] (u)			  ## att_server.c:428:13
 1e0e906:    60 59             	r0 = h[r4 + 44] (u)			  ## att_server.c:428:13
 1e0e908:    ff 16             	call -514 <att_emit_mtu_event : 1e0e708 >			  ## att_server.c:428:13
 1e0e90a:    33 18             	goto 102 <att_packet_handler.1984+0x1E6 : 1e0e972 >			  ## att_server.c:428:13
 1e0e90c:    1a f6 00 40       	[r4 + 0] = r10			  ## att_server.c:419:23
 1e0e910:    60 59             	r0 = h[r4 + 44] (u)			  ## att_server.c:433:5
 1e0e912:    41 70             	r1 = 4			  ## att_server.c:433:5
 1e0e914:    52 08             	r2 = r5			  ## att_server.c:433:5
 1e0e916:    bf f3 5e e5       	call -13636 <l2cap_send_prepared_connectionless : 1e0b3d6 >			  ## att_server.c:433:5
 1e0e91a:    00 f9 10 b0       	r0 = b[r11 + 16] (u)			  ## att_server.c:437:9
 1e0e91e:    30 e0 03 10       	if (r0 != 3) goto 6 <att_packet_handler.1984+0x19C : 1e0e928 >			  ## att_server.c:437:9
 1e0e922:    01 5c             	r1 = h[r6 + 0] (u)			  ## att_server.c:439:9
 1e0e924:    60 59             	r0 = h[r4 + 44] (u)			  ## att_server.c:439:9
 1e0e926:    f0 16             	call -544 <att_emit_mtu_event : 1e0e708 >			  ## att_server.c:439:9
 1e0e928:    00 f9 3c 70       	r0 = b[r7 + 60] (u)			  ## att_server.c:525:34
 1e0e92c:    20 f3 3e 00       	if ((r0 & 1) != 0) goto 124 <att_packet_handler.1984+0x220 : 1e0e9ac >			  ## att_server.c:525:34
 1e0e930:    e0 4e             	r0 = [r7 + 56]
 1e0e932:    bf f3 49 e5       	call -13678 <btstack_linked_list_empty : 1e0b3c8 >			  ## att_server.c:525:63
 1e0e936:    1d 30             	if (r0 != 0) goto 58 <att_packet_handler.1984+0x1E6 : 1e0e972 >			  ## att_server.c:525:63
 1e0e938:    39 18             	goto 114 <att_packet_handler.1984+0x220 : 1e0e9ac >			  ## att_server.c:525:63
 1e0e93a:    bf f3 be e7       	call -12420 <l2cap_reserve_packet_buffer : 1e0b8ba >			  ## att_server.c:331:10
 1e0e93e:    18 20             	if (r0 == 0) goto 48 <att_packet_handler.1984+0x1E4 : 1e0e970 >			  ## att_server.c:331:10
 1e0e940:    19 f9 10 b0       	b[r11 + 16] = r9			  ## att_server.c:335:16
 1e0e944:    22 56             	r2 = h[r3 + 4] (u)			  ## att_server.c:336:5
 1e0e946:    b0 fc 10 00       	r0 = r11 + 16			  ## att_server.c:335:16
 1e0e94a:    11 70             	r1 = 1			  ## att_server.c:336:5
 1e0e94c:    bf f3 a7 cc       	call -26290 <little_endian_store_16 : 1e0829e >			  ## att_server.c:336:5
 1e0e950:    00 56             	r0 = h[r3 + 0] (u)			  ## att_server.c:337:9
 1e0e952:    41 70             	r1 = 4			  ## att_server.c:337:9
 1e0e954:    32 70             	r2 = 3			  ## att_server.c:337:9
 1e0e956:    bf f3 3e e5       	call -13700 <l2cap_send_prepared_connectionless : 1e0b3d6 >			  ## att_server.c:337:9
 1e0e95a:    03 20             	if (r0 == 0) goto 6 <att_packet_handler.1984+0x1D6 : 1e0e962 >			  ## att_server.c:337:9
 1e0e95c:    bf f3 d6 e9       	call -11348 <l2cap_release_packet_buffer : 1e0bd0c >
 1e0e960:    07 18             	goto 14 <att_packet_handler.1984+0x1E4 : 1e0e970 >
 1e0e962:    00 f9 01 c0       	r0 = b[r12 + 1] (u)			  ## att_server.c:342:34
 1e0e966:    20 fd dd 09       	r0 = r0 & 221			  ## att_server.c:342:34
 1e0e96a:    90 b2             	r0 |= 32			  ## att_server.c:532:46
 1e0e96c:    10 f9 01 c0       	b[r12 + 1] = r0
 1e0e970:    52 15             	call -1372 <att_dispatch_server_request_can_send_now_event : 1e0e416 >
 1e0e972:    00 a0             	r0 = sp + 0
 1e0e974:    bf f3 aa c9       	call -27820 <btstack_linked_list_iterator_has_next : 1e07ccc >			  ## att_server.c:511:12
 1e0e978:    62 31             	if (r0 != 0) goto -316 <att_packet_handler.1984+0xB2 : 1e0e83e >
 1e0e97a:    e3 4e             	r3 = [r7 + 56]
 1e0e97c:    30 08             	r0 = r3			  ## att_server.c:544:13
 1e0e97e:    bf f3 23 e5       	call -13754 <btstack_linked_list_empty : 1e0b3c8 >			  ## att_server.c:544:13
 1e0e982:    16 30             	if (r0 != 0) goto 44 <att_packet_handler.1984+0x224 : 1e0e9b0 >			  ## att_server.c:544:13
 1e0e984:    44 56             	r4 = h[r3 + 8] (u)			  ## att_server.c:552:14
 1e0e986:    70 fc 38 00       	r0 = r7 + 56			  ## att_server.c:548:9
 1e0e98a:    31 08             	r1 = r3			  ## att_server.c:548:9
 1e0e98c:    bf f3 4f cb       	call -26978 <btstack_linked_list_remove : 1e0802e >			  ## att_server.c:548:9
 1e0e990:    20 46             	r0 = [r3 + 8]			  ## att_server.c:549:34
 1e0e992:    11 46             	r1 = [r3 + 4]			  ## att_server.c:549:17
 1e0e994:    81 00             	call r1			  ## att_server.c:549:9
 1e0e996:    40 08             	r0 = r4			  ## att_server.c:552:14
 1e0e998:    48 15             	call -1392 <att_dispatch_server_can_send_now : 1e0e42a >			  ## att_server.c:552:14
 1e0e99a:    ef 31             	if (r0 != 0) goto -34 <att_packet_handler.1984+0x1EE : 1e0e97a >			  ## att_server.c:552:14
 1e0e99c:    e0 4e             	r0 = [r7 + 56]
 1e0e99e:    bf f3 13 e5       	call -13786 <btstack_linked_list_empty : 1e0b3c8 >			  ## att_server.c:553:18
 1e0e9a2:    04 20             	if (r0 == 0) goto 8 <att_packet_handler.1984+0x220 : 1e0e9ac >			  ## att_server.c:553:18
 1e0e9a4:    00 f9 3c 70       	r0 = b[r7 + 60] (u)			  ## att_server.c:553:77
 1e0e9a8:    00 f3 28 00       	if ((r0 & 1) == 0) goto 80 <att_packet_handler.1984+0x270 : 1e0e9fc >			  ## att_server.c:553:77
 1e0e9ac:    34 15             	call -1432 <att_dispatch_server_request_can_send_now_event : 1e0e416 >
 1e0e9ae:    26 18             	goto 76 <att_packet_handler.1984+0x270 : 1e0e9fc >
 1e0e9b0:    00 f9 3c 70       	r0 = b[r7 + 60] (u)			  ## att_server.c:560:17
 1e0e9b4:    00 f3 22 00       	if ((r0 & 1) == 0) goto 68 <att_packet_handler.1984+0x270 : 1e0e9fc >			  ## att_server.c:560:17
 1e0e9b8:    70 b0             	r0 &= 4294967294			  ## att_server.c:561:42
 1e0e9ba:    10 f9 3c 70       	b[r7 + 60] = r0			  ## att_server.c:561:42
 1e0e9be:    d4 4e             	r4 = [r7 + 52]			  ## att_server.c:150:18
 1e0e9c0:    1d 28             	if (r4 == 0) goto 58 <att_packet_handler.1984+0x270 : 1e0e9fc >			  ## att_server.c:150:18
 1e0e9c2:    70 7b             	r0 = 183			  ## att_server.c:154:13
 1e0e9c4:    90 f5 0e 00       	h[sp+14] = r0			  ## att_server.c:154:13
 1e0e9c8:    e2 a0             	r2 = sp + 14			  ## att_server.c:154:13
 1e0e9ca:    40 70             	r0 = 4			  ## att_server.c:155:5
 1e0e9cc:    01 70             	r1 = 0			  ## att_server.c:155:5
 1e0e9ce:    23 70             	r3 = 2			  ## att_server.c:155:5
 1e0e9d0:    84 00             	call r4			  ## att_server.c:155:5
 1e0e9d2:    14 18             	goto 40 <att_packet_handler.1984+0x270 : 1e0e9fc >			  ## att_server.c:155:5
 1e0e9d4:    20 fd c3 29       	r0 = r2 & 195			  ## att_server.c:635:46
 1e0e9d8:    10 b2             	r0 |= 16			  ## att_server.c:635:46
 1e0e9da:    38 62             	b[r1 + 3] = r0			  ## att_server.c:636:42
 1e0e9dc:    12 42             	r2 = [r1 + 4]			  ## att_server.c:637:33
 1e0e9de:    03 24             	if (r2 == 0) goto 6 <att_packet_handler.1984+0x25A : 1e0e9e6 >			  ## att_server.c:637:33
 1e0e9e0:    60 5d             	r0 = h[r6 + 44] (u)			  ## att_server.c:638:21
 1e0e9e2:    11 70             	r1 = 1			  ## att_server.c:638:21
 1e0e9e4:    82 00             	call r2
 1e0e9e6:    c0 f4 01 69       	[r6 + 0] = 1			  ## att_server.c:648:27
 1e0e9ea:    ed 5d             	h[r6 + 60] = r5			  ## att_server.c:649:34
 1e0e9ec:    60 fc 3e 00       	r0 = r6 + 62			  ## att_server.c:650:9
 1e0e9f0:    41 08             	r1 = r4			  ## att_server.c:650:9
 1e0e9f2:    52 08             	r2 = r5			  ## att_server.c:650:9
 1e0e9f4:    97 f3 76 c2       	call 3114220 <memcpy : 106ee4 >			  ## att_server.c:650:9
 1e0e9f8:    60 08             	r0 = r6			  ## att_server.c:652:9
 1e0e9fa:    e3 15             	call -1082 <att_run_for_context : 1e0e5c2 >			  ## att_server.c:652:9
 1e0e9fc:    08 0a             	sp += 16
 1e0e9fe:    5c 01             	{pc, r12-r4} = [sp++]			  ## att_server.c:655:1


att_handle_value_indication_timeout:
 1e0ea00:    34 00             	[--sp] = rets			  ## att_server.c:164:0
 1e0ea02:    40 40             	r0 = [r0 + 16]			  ## att_server.c:165:52
 1e0ea04:    04 20             	if (r0 == 0) goto 8 <att_handle_value_indication_timeout+0xE : 1e0ea0e >
 1e0ea06:    61 51             	r1 = h[r0 + 44] (u)			  ## att_server.c:172:5
 1e0ea08:    a2 50             	r2 = h[r0 + 20] (u)			  ## att_server.c:172:5
 1e0ea0a:    10 79             	r0 = 145			  ## att_server.c:172:5
 1e0ea0c:    9d 16             	call -710 <att_handle_value_indication_notify_client : 1e0e748 >			  ## att_server.c:172:5
 1e0ea0e:    30 00             	pc = [sp++]			  ## att_server.c:173:1


att_server_get_remote_type:
 1e0ea10:    74 01             	[--sp] = {rets, r4}			  ## att_server.c:861:0
 1e0ea12:    04 70             	r4 = 0			  ## att_server.c:861:0
 1e0ea14:    0f 20             	if (r0 == 0) goto 30 <att_server_get_remote_type+0x24 : 1e0ea34 >			  ## att_server.c:861:0
 1e0ea16:    ac 14             	call -1704 <att_server_for_handle : 1e0e370 >			  ## att_server.c:867:18
 1e0ea18:    0d 20             	if (r0 == 0) goto 26 <att_server_get_remote_type+0x24 : 1e0ea34 >
 1e0ea1a:    00 f9 43 02       	r0 = b[r0 + 579] (u)			  ## att_server.c:873:21
 1e0ea1e:    83 fd 10 00       	r0 = uextra(r0, p:2, l:3)			  ## att_server.c:873:21
 1e0ea22:    14 70             	r4 = 1			  ## att_server.c:873:21
 1e0ea24:    11 70             	r1 = 1			  ## att_server.c:873:21
 1e0ea26:    50 e0 01 00       	if (r0 == 5) goto 2 <att_server_get_remote_type+0x1C : 1e0ea2c >			  ## att_server.c:873:21
 1e0ea2a:    01 70             	r1 = 0			  ## att_server.c:873:21
 1e0ea2c:    49 c0             	r1 = r1 << 1			  ## att_server.c:873:9
 1e0ea2e:    40 e0 01 00       	if (r0 == 4) goto 2 <att_server_get_remote_type+0x24 : 1e0ea34 >			  ## att_server.c:873:9
 1e0ea32:    14 08             	r4 = r1			  ## att_server.c:873:9
 1e0ea34:    00 05             	r0 = r4.b0 (u)			  ## att_server.c:880:1
 1e0ea36:    54 01             	{pc, r4} = [sp++]			  ## att_server.c:880:1


gatt_client_write_value_of_characteristic_without_response:
 1e0ea38:    77 01             	[--sp] = {rets, r7-r4}			  ## gatt_client.c:2084:0
 1e0ea3a:    c4 ff 58 1d 00 00 	r4 = 7512 <gatt_client_global_info : 1d58 >			  ## gatt_client.c:2084:0
 1e0ea40:    01 48             	r1 = [r4 + 0]			  ## gatt_client.c:2084:0
 1e0ea42:    05 08             	r5 = r0			  ## gatt_client.c:2084:0
 1e0ea44:    05 22             	if (r1 == 0) goto 10 <gatt_client_write_value_of_characteristic_without_response+0x18 : 1e0ea50 >			  ## gatt_client.c:2084:0
 1e0ea46:    60 52             	r0 = h[r1 + 12] (u)			  ## gatt_client.c:207:25
 1e0ea48:    50 f2 19 00       	if (r0 == r5) goto 50 <gatt_client_write_value_of_characteristic_without_response+0x46 : 1e0ea7e >			  ## gatt_client.c:207:25
 1e0ea4c:    01 42             	r1 = [r1 + 0]
 1e0ea4e:    fb 33             	if (r1 != 0) goto -10 <gatt_client_write_value_of_characteristic_without_response+0xE : 1e0ea46 >
 1e0ea50:    bf f3 35 e7       	call -12694 <btstack_memory_gatt_client_get : 1e0b8be >			  ## gatt_client.c:224:15
 1e0ea54:    06 08             	r6 = r0			  ## gatt_client.c:224:15
 1e0ea56:    13 2c             	if (r6 == 0) goto 38 <gatt_client_write_value_of_characteristic_without_response+0x46 : 1e0ea7e >			  ## gatt_client.c:224:15
 1e0ea58:    01 70             	r1 = 0			  ## gatt_client.c:229:5
 1e0ea5a:    02 78             	r2 = 128			  ## gatt_client.c:229:5
 1e0ea5c:    07 70             	r7 = 0			  ## gatt_client.c:229:5
 1e0ea5e:    97 f3 47 c2       	call 3114126 <memset : 106ef0 >			  ## gatt_client.c:229:5
 1e0ea62:    6d 5c             	h[r6 + 12] = r5			  ## gatt_client.c:230:25
 1e0ea64:    70 71             	r0 = 23			  ## gatt_client.c:231:18
 1e0ea66:    b8 5c             	h[r6 + 22] = r0			  ## gatt_client.c:231:18
 1e0ea68:    6f 4c             	[r6 + 24] = r7			  ## gatt_client.c:232:24
 1e0ea6a:    1f 4c             	[r6 + 4] = r7			  ## gatt_client.c:233:32
 1e0ea6c:    40 08             	r0 = r4			  ## gatt_client.c:234:5
 1e0ea6e:    61 08             	r1 = r6			  ## gatt_client.c:234:5
 1e0ea70:    bf f3 03 d8       	call -20474 <btstack_linked_list_add : 1e09a7a >			  ## gatt_client.c:234:5
 1e0ea74:    40 69             	r0 = b[r4 + 20] (u)			  ## gatt_client.c:237:17
 1e0ea76:    03 20             	if (r0 == 0) goto 6 <gatt_client_write_value_of_characteristic_without_response+0x46 : 1e0ea7e >			  ## gatt_client.c:237:17
 1e0ea78:    c6 f4 02 69       	[r6 + 24] = 2			  ## gatt_client.c:238:28
 1e0ea7c:    57 01             	{pc, r7-r4} = [sp++]			  ## gatt_client.c:238:28
 1e0ea7e:    57 01             	{pc, r7-r4} = [sp++]


gatt_client_sync_mtu:
 1e0ea80:    75 01             	[--sp] = {rets, r5, r4}			  ## gatt_client.c:2545:0
 1e0ea82:    fc 0b             	sp += -8			  ## gatt_client.c:2545:0
 1e0ea84:    c5 ff 58 1d 00 00 	r5 = 7512 <gatt_client_global_info : 1d58 >			  ## gatt_client.c:2545:0
 1e0ea8a:    04 4a             	r4 = [r5 + 0]			  ## gatt_client.c:2545:0
 1e0ea8c:    13 08             	r3 = r1			  ## gatt_client.c:2545:0
 1e0ea8e:    02 08             	r2 = r0			  ## gatt_client.c:2545:0
 1e0ea90:    1e 28             	if (r4 == 0) goto 60 <gatt_client_sync_mtu+0x4E : 1e0eace >			  ## gatt_client.c:2545:0
 1e0ea92:    60 58             	r0 = h[r4 + 12] (u)			  ## gatt_client.c:207:25
 1e0ea94:    20 f2 03 00       	if (r0 == r2) goto 6 <gatt_client_sync_mtu+0x1E : 1e0ea9e >			  ## gatt_client.c:207:25
 1e0ea98:    04 48             	r4 = [r4 + 0]
 1e0ea9a:    fb 39             	if (r4 != 0) goto -10 <gatt_client_sync_mtu+0x12 : 1e0ea92 >
 1e0ea9c:    18 18             	goto 48 <gatt_client_sync_mtu+0x4E : 1e0eace >
 1e0ea9e:    bb 58             	h[r4 + 22] = r3			  ## gatt_client.c:2556:21
 1e0eaa0:    40 4a             	r0 = [r5 + 16]			  ## gatt_client.c:111:18
 1e0eaa2:    15 20             	if (r0 == 0) goto 42 <gatt_client_sync_mtu+0x4E : 1e0eace >			  ## gatt_client.c:111:18
 1e0eaa4:    50 7b             	r0 = 181			  ## gatt_client.c:116:18
 1e0eaa6:    d0 f5 02 00       	b[sp+2] = r0			  ## gatt_client.c:116:18
 1e0eaaa:    40 70             	r0 = 4			  ## gatt_client.c:116:18
 1e0eaac:    d0 f5 03 00       	b[sp+3] = r0			  ## gatt_client.c:117:18
 1e0eab0:    24 a0             	r4 = sp + 2			  ## gatt_client.c:117:18
 1e0eab2:    21 70             	r1 = 2			  ## gatt_client.c:118:5
 1e0eab4:    40 08             	r0 = r4			  ## gatt_client.c:118:5
 1e0eab6:    bf f3 f2 cb       	call -26652 <little_endian_store_16 : 1e0829e >			  ## gatt_client.c:118:5
 1e0eaba:    41 70             	r1 = 4			  ## gatt_client.c:120:5
 1e0eabc:    32 08             	r2 = r3			  ## gatt_client.c:120:5
 1e0eabe:    bf f3 ee cb       	call -26660 <little_endian_store_16 : 1e0829e >			  ## gatt_client.c:120:5
 1e0eac2:    45 4a             	r5 = [r5 + 16]			  ## gatt_client.c:121:15
 1e0eac4:    40 70             	r0 = 4			  ## gatt_client.c:121:5
 1e0eac6:    01 70             	r1 = 0			  ## gatt_client.c:121:5
 1e0eac8:    63 70             	r3 = 6			  ## gatt_client.c:121:5
 1e0eaca:    42 08             	r2 = r4			  ## gatt_client.c:121:5
 1e0eacc:    85 00             	call r5			  ## gatt_client.c:121:5
 1e0eace:    04 0a             	sp += 8
 1e0ead0:    55 01             	{pc, r5, r4} = [sp++]


btstack_code_end:
 1e0ead2:    00 00             	nop


system_text_start:
 1e0ead4:    77 01             	[--sp] = {rets, r7-r4}			  ## log.c:209:0
 1e0ead6:    c5 ff f8 23 00 00 	r5 = 9208 <log_mutex : 23f8 >			  ## log.c:209:0
 1e0eadc:    01 70             	r1 = 0			  ## log.c:212:11
 1e0eade:    04 70             	r4 = 0			  ## log.c:212:11
 1e0eae0:    50 08             	r0 = r5			  ## log.c:212:11
 1e0eae2:    97 f3 9f c1       	call 3113790 <os_mutex_pend : 106e24 >			  ## log.c:212:11
 1e0eae6:    c7 ff b0 20 00 00 	r7 = 8368 <gatt_client_conn_handle : 20b0 >			  ## log.c:212:11
 1e0eaec:    01 f6 d0 70       	r1 = [r7 + 208]			  ## log.c:214:9
 1e0eaf0:    06 08             	r6 = r0			  ## log.c:212:11
 1e0eaf2:    12 22             	if (r1 == 0) goto 36 <system_text_start+0x44 : 1e0eb18 >
 1e0eaf4:    97 f3 52 c1       	call 3113636 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0eaf8:    00 f9 d8 70       	r0 = b[r7 + 216] (u)			  ## spinlock.h:77:5
 1e0eafc:    08 20             	if (r0 == 0) goto 16 <system_text_start+0x3A : 1e0eb0e >			  ## log.c:219:9
 1e0eafe:    97 f3 4b c1       	call 3113622 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0eb02:    04 07             	r4 = -16			  ## spinlock.h:88:5
 1e0eb04:    09 3c             	if (r6 != 0) goto 18 <system_text_start+0x44 : 1e0eb18 >			  ## spinlock.h:88:5
 1e0eb06:    50 08             	r0 = r5			  ## log.c:222:13
 1e0eb08:    97 f3 8e c1       	call 3113756 <os_mutex_post : 106e28 >			  ## log.c:222:13
 1e0eb0c:    05 18             	goto 10 <system_text_start+0x44 : 1e0eb18 >			  ## log.c:222:13
 1e0eb0e:    10 70             	r0 = 1
 1e0eb10:    10 f9 d8 70       	b[r7 + 216] = r0
 1e0eb14:    97 f3 40 c1       	call 3113600 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0eb18:    40 08             	r0 = r4			  ## log.c:234:1
 1e0eb1a:    57 01             	{pc, r7-r4} = [sp++]			  ## log.c:234:1


skip_atoi:
 1e0eb1c:    75 01             	[--sp] = {rets, r5, r4}			  ## printf-stdarg.c:18:0
 1e0eb1e:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:20:12
 1e0eb20:    81 f9 01 20       	r1 = b[r2 ++= 1] (u)			  ## printf-stdarg.c:20:12
 1e0eb24:    01 8d             	r1 += -48			  ## printf-stdarg.c:20:12
 1e0eb26:    43 04             	r3 = r1.b0 (u)			  ## printf-stdarg.c:20:12
 1e0eb28:    01 70             	r1 = 0			  ## printf-stdarg.c:20:12
 1e0eb2a:    93 e0 0f 80       	if (r3 > 9) goto 30 <skip_atoi+0x30 : 1e0eb4c >			  ## printf-stdarg.c:20:12
 1e0eb2e:    a3 70             	r3 = 10
 1e0eb30:    0a 40             	[r0 + 0] = r2			  ## printf-stdarg.c:21:29
 1e0eb32:    24 f9 ff 2f       	r4 = b[r2 + -1] (s)			  ## printf-stdarg.c:21:22
 1e0eb36:    85 f9 01 20       	r5 = b[r2 ++= 1] (u)			  ## printf-stdarg.c:20:12
 1e0eb3a:    80 fe 30 41       	r4 += r1 * r3			  ## printf-stdarg.c:21:20
 1e0eb3e:    51 fc d0 ff       	r1 = r5 + -48			  ## printf-stdarg.c:20:12
 1e0eb42:    45 04             	r5 = r1.b0 (u)			  ## printf-stdarg.c:20:12
 1e0eb44:    41 fc d0 ff       	r1 = r4 + -48			  ## printf-stdarg.c:21:33
 1e0eb48:    a5 e0 f2 3f       	if (r5 < 10) goto -28 <skip_atoi+0x14 : 1e0eb30 >
 1e0eb4c:    10 08             	r0 = r1			  ## printf-stdarg.c:23:5
 1e0eb4e:    55 01             	{pc, r5, r4} = [sp++]			  ## printf-stdarg.c:23:5


printchar:
 1e0eb50:    74 01             	[--sp] = {rets, r4}			  ## printf-stdarg.c:29:0
 1e0eb52:    0a 20             	if (r0 == 0) goto 20 <printchar+0x18 : 1e0eb68 >			  ## printf-stdarg.c:30:9
 1e0eb54:    04 40             	r4 = [r0 + 0]
 1e0eb56:    03 22             	if (r1 == 0) goto 6 <printchar+0xE : 1e0eb5e >
 1e0eb58:    03 70             	r3 = 0
 1e0eb5a:    14 f2 0a 20       	if (r4 >= r1) goto 20 <printchar+0x22 : 1e0eb72 >
 1e0eb5e:    0a 68             	b[r4 + 0] = r2			  ## printf-stdarg.c:34:15
 1e0eb60:    01 40             	r1 = [r0 + 0]			  ## printf-stdarg.c:35:9
 1e0eb62:    11 80             	r1 += 1			  ## printf-stdarg.c:35:9
 1e0eb64:    09 40             	[r0 + 0] = r1			  ## printf-stdarg.c:35:9
 1e0eb66:    04 18             	goto 8 <printchar+0x20 : 1e0eb70 >			  ## printf-stdarg.c:35:9
 1e0eb68:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## log.c:409:18
 1e0eb6e:    5a 61             	b[r0 + 21] = r2			  ## log.c:409:18
 1e0eb70:    13 70             	r3 = 1
 1e0eb72:    30 08             	r0 = r3			  ## printf-stdarg.c:45:1
 1e0eb74:    54 01             	{pc, r4} = [sp++]			  ## printf-stdarg.c:45:1


prints:
 1e0eb76:    7a 01             	[--sp] = {rets, r10-r4}			  ## printf-stdarg.c:57:0
 1e0eb78:    34 08             	r4 = r3			  ## printf-stdarg.c:57:0
 1e0eb7a:    27 08             	r7 = r2			  ## printf-stdarg.c:57:0
 1e0eb7c:    19 08             	r9 = r1			  ## printf-stdarg.c:57:0
 1e0eb7e:    0a 08             	r10 = r0			  ## printf-stdarg.c:57:0
 1e0eb80:    14 e0 24 b0       	ifs (r4 < 1) goto 72 <prints+0x56 : 1e0ebcc >			  ## printf-stdarg.c:57:0
 1e0eb84:    71 08             	r1 = r7			  ## printf-stdarg.c:63:28
 1e0eb86:    82 f9 01 10       	r2 = b[r1 ++= 1] (u)			  ## printf-stdarg.c:63:28
 1e0eb8a:    05 70             	r5 = 0			  ## printf-stdarg.c:63:28
 1e0eb8c:    00 70             	r0 = 0			  ## printf-stdarg.c:63:28
 1e0eb8e:    04 24             	if (r2 == 0) goto 8 <prints+0x22 : 1e0eb98 >			  ## printf-stdarg.c:63:28
 1e0eb90:    02 fa 00 10       	r2 = b[r1+r0] (u)			  ## printf-stdarg.c:63:28
 1e0eb94:    10 80             	r0 += 1			  ## printf-stdarg.c:64:13
 1e0eb96:    fc 35             	if (r2 != 0) goto -8 <prints+0x1A : 1e0eb90 >
 1e0eb98:    82 02             	r2 = [sp+32]
 1e0eb9a:    26 b8             	r6 = r4 - r0			  ## printf-stdarg.c:69:19
 1e0eb9c:    61 08             	r1 = r6			  ## printf-stdarg.c:66:13
 1e0eb9e:    40 f2 01 b0       	ifs (r0 < r4) goto 2 <prints+0x2E : 1e0eba4 >			  ## printf-stdarg.c:66:13
 1e0eba2:    01 70             	r1 = 0			  ## printf-stdarg.c:66:13
 1e0eba4:    d0 c0             	r0 = r2 << 3			  ## printf-stdarg.c:71:13
 1e0eba6:    20 fd 10 09       	r0 = r0 & 16			  ## printf-stdarg.c:71:13
 1e0ebaa:    08 fd 20 09       	r8 = r0 | 32			  ## printf-stdarg.c:71:13
 1e0ebae:    20 f3 10 20       	if ((r2 & 1) != 0) goto 32 <prints+0x5C : 1e0ebd2 >
 1e0ebb2:    11 e0 0e b0       	ifs (r1 < 1) goto 28 <prints+0x5C : 1e0ebd2 >
 1e0ebb6:    a0 08             	r0 = r10			  ## printf-stdarg.c:77:17
 1e0ebb8:    91 08             	r1 = r9			  ## printf-stdarg.c:77:17
 1e0ebba:    82 08             	r2 = r8			  ## printf-stdarg.c:77:17
 1e0ebbc:    c9 17             	call -110 <printchar : 1e0eb50 >			  ## printf-stdarg.c:77:17
 1e0ebbe:    04 20             	if (r0 == 0) goto 8 <prints+0x52 : 1e0ebc8 >			  ## printf-stdarg.c:77:17
 1e0ebc0:    f6 8f             	r6 += -1			  ## printf-stdarg.c:76:27
 1e0ebc2:    15 80             	r5 += 1			  ## printf-stdarg.c:80:13
 1e0ebc4:    06 e0 f7 cf       	ifs (r6 > 0) goto -18 <prints+0x40 : 1e0ebb6 >
 1e0ebc8:    64 08             	r4 = r6
 1e0ebca:    04 18             	goto 8 <prints+0x5E : 1e0ebd4 >
 1e0ebcc:    05 70             	r5 = 0
 1e0ebce:    08 72             	r8 = 32
 1e0ebd0:    01 18             	goto 2 <prints+0x5E : 1e0ebd4 >
 1e0ebd2:    14 08             	r4 = r1
 1e0ebd4:    80 f9 01 70       	r0 = b[r7 ++= 1] (u)			  ## printf-stdarg.c:83:12
 1e0ebd8:    09 20             	if (r0 == 0) goto 18 <prints+0x76 : 1e0ebec >
 1e0ebda:    12 04             	r2 = r0.b0 (s)			  ## printf-stdarg.c:84:33
 1e0ebdc:    a0 08             	r0 = r10			  ## printf-stdarg.c:84:13
 1e0ebde:    91 08             	r1 = r9			  ## printf-stdarg.c:84:13
 1e0ebe0:    b7 17             	call -146 <printchar : 1e0eb50 >			  ## printf-stdarg.c:84:13
 1e0ebe2:    04 20             	if (r0 == 0) goto 8 <prints+0x76 : 1e0ebec >			  ## printf-stdarg.c:84:13
 1e0ebe4:    80 f9 01 70       	r0 = b[r7 ++= 1] (u)			  ## printf-stdarg.c:83:12
 1e0ebe8:    15 80             	r5 += 1			  ## printf-stdarg.c:87:9
 1e0ebea:    f7 31             	if (r0 != 0) goto -18 <prints+0x64 : 1e0ebda >
 1e0ebec:    14 e0 09 b0       	ifs (r4 < 1) goto 18 <prints+0x8C : 1e0ec02 >
 1e0ebf0:    a0 08             	r0 = r10			  ## printf-stdarg.c:90:13
 1e0ebf2:    91 08             	r1 = r9			  ## printf-stdarg.c:90:13
 1e0ebf4:    82 08             	r2 = r8			  ## printf-stdarg.c:90:13
 1e0ebf6:    ac 17             	call -168 <printchar : 1e0eb50 >			  ## printf-stdarg.c:90:13
 1e0ebf8:    04 20             	if (r0 == 0) goto 8 <prints+0x8C : 1e0ec02 >			  ## printf-stdarg.c:90:13
 1e0ebfa:    f4 8f             	r4 += -1			  ## printf-stdarg.c:89:23
 1e0ebfc:    15 80             	r5 += 1			  ## printf-stdarg.c:93:9
 1e0ebfe:    04 e0 f7 cf       	ifs (r4 > 0) goto -18 <prints+0x7A : 1e0ebf0 >
 1e0ec02:    50 08             	r0 = r5			  ## printf-stdarg.c:96:5
 1e0ec04:    5a 01             	{pc, r10-r4} = [sp++]			  ## printf-stdarg.c:96:5


printi:
 1e0ec06:    7a 01             	[--sp] = {rets, r10-r4}			  ## printf-stdarg.c:103:0
 1e0ec08:    f8 0b             	sp += -16			  ## printf-stdarg.c:103:0
 1e0ec0a:    0a f5 38 00       	r10 = [sp+56]			  ## printf-stdarg.c:103:0
 1e0ec0e:    d4 02             	r4 = [sp+52]			  ## printf-stdarg.c:103:0
 1e0ec10:    18 08             	r8 = r1			  ## printf-stdarg.c:103:0
 1e0ec12:    09 08             	r9 = r0			  ## printf-stdarg.c:103:0
 1e0ec14:    37 24             	if (r2 == 0) goto 110 <printi+0x7E : 1e0ec84 >			  ## printf-stdarg.c:103:0
 1e0ec16:    c5 02             	r5 = [sp+48]			  ## printf-stdarg.c:103:0
 1e0ec18:    00 70             	r0 = 0			  ## printf-stdarg.c:103:0
 1e0ec1a:    d0 f5 0f 00       	b[sp+15] = r0			  ## printf-stdarg.c:121:8
 1e0ec1e:    10 70             	r0 = 1			  ## printf-stdarg.c:121:8
 1e0ec20:    11 70             	r1 = 1			  ## printf-stdarg.c:115:9
 1e0ec22:    01 3a             	if (r5 != 0) goto 2 <printi+0x20 : 1e0ec26 >			  ## printf-stdarg.c:115:9
 1e0ec24:    01 70             	r1 = 0			  ## printf-stdarg.c:115:9
 1e0ec26:    a3 e0 01 00       	if (r3 == 10) goto 2 <printi+0x26 : 1e0ec2c >
 1e0ec2a:    00 70             	r0 = 0			  ## printf-stdarg.c:115:17
 1e0ec2c:    50 b3             	r0 &= r1			  ## printf-stdarg.c:115:12
 1e0ec2e:    61 fb 00 29       	r1 = 0 - r2			  ## printf-stdarg.c:117:13
 1e0ec32:    d6 d7             	r6 = r2 >> 31			  ## printf-stdarg.c:115:28
 1e0ec34:    06 f1 01 00       	if ((r6 & r0) != 0) goto 2 <printi+0x34 : 1e0ec3a >			  ## printf-stdarg.c:115:28
 1e0ec38:    21 08             	r1 = r2
 1e0ec3a:    50 bd             	r0 &= r6			  ## printf-stdarg.c:115:12
 1e0ec3c:    42 a0             	r2 = sp + 4			  ## printf-stdarg.c:115:12
 1e0ec3e:    b7 94             	r7 = r2 + 11			  ## printf-stdarg.c:120:35
 1e0ec40:    13 22             	if (r1 == 0) goto 38 <printi+0x62 : 1e0ec68 >
 1e0ec42:    f2 02             	r2 = [sp+60]
 1e0ec44:    25 fc c6 00       	r5 = r2 + 198
 1e0ec48:    16 08             	r6 = r1
 1e0ec4a:    d0 fe 30 16       	r1 = r6 % r3 (u)			  ## printf-stdarg.c:124:15
 1e0ec4e:    52 08             	r2 = r5			  ## printf-stdarg.c:125:13
 1e0ec50:    91 e0 01 c0       	ifs (r1 > 9) goto 2 <printi+0x50 : 1e0ec56 >
 1e0ec54:    02 70             	r2 = 0
 1e0ec56:    21 09             	r1 += r2			  ## printf-stdarg.c:125:13
 1e0ec58:    01 83             	r1 += 48			  ## printf-stdarg.c:128:18
 1e0ec5a:    11 f9 ff 7f       	b[r7 + -1] = r1			  ## printf-stdarg.c:128:14
 1e0ec5e:    c0 fe 30 16       	r1 = r6 / r3 (u)			  ## printf-stdarg.c:129:11
 1e0ec62:    f7 8f             	r7 += -1			  ## printf-stdarg.c:128:10
 1e0ec64:    36 f2 f0 2f       	if (r6 >= r3) goto -32 <printi+0x42 : 1e0ec48 >
 1e0ec68:    06 70             	r6 = 0
 1e0ec6a:    1d 20             	if (r0 == 0) goto 58 <printi+0xA0 : 1e0eca6 >
 1e0ec6c:    18 28             	if (r4 == 0) goto 48 <printi+0x98 : 1e0ec9e >
 1e0ec6e:    01 f3 16 a0       	if ((r10 & 2) == 0) goto 44 <printi+0x98 : 1e0ec9e >
 1e0ec72:    d2 72             	r2 = 45			  ## printf-stdarg.c:134:17
 1e0ec74:    90 08             	r0 = r9			  ## printf-stdarg.c:134:17
 1e0ec76:    81 08             	r1 = r8			  ## printf-stdarg.c:134:17
 1e0ec78:    6b 17             	call -298 <printchar : 1e0eb50 >			  ## printf-stdarg.c:134:17
 1e0ec7a:    16 70             	r6 = 1			  ## printf-stdarg.c:134:17
 1e0ec7c:    01 30             	if (r0 != 0) goto 2 <printi+0x7A : 1e0ec80 >
 1e0ec7e:    06 70             	r6 = 0			  ## printf-stdarg.c:134:17
 1e0ec80:    a4 b9             	r4 = r4 - r6			  ## printf-stdarg.c:134:17
 1e0ec82:    11 18             	goto 34 <printi+0xA0 : 1e0eca6 >
 1e0ec84:    00 73             	r0 = 48			  ## printf-stdarg.c:110:22
 1e0ec86:    d0 f5 04 00       	b[sp+4] = r0			  ## printf-stdarg.c:110:22
 1e0ec8a:    00 70             	r0 = 0			  ## printf-stdarg.c:110:22
 1e0ec8c:    d0 f5 05 00       	b[sp+5] = r0			  ## printf-stdarg.c:111:22
 1e0ec90:    42 a0             	r2 = sp + 4			  ## printf-stdarg.c:111:22
 1e0ec92:    1a f5 00 00       	[sp] = r10			  ## printf-stdarg.c:112:16
 1e0ec96:    90 08             	r0 = r9			  ## printf-stdarg.c:112:16
 1e0ec98:    43 08             	r3 = r4			  ## printf-stdarg.c:112:16
 1e0ec9a:    6d 17             	call -294 <prints : 1e0eb76 >			  ## printf-stdarg.c:112:16
 1e0ec9c:    0c 18             	goto 24 <printi+0xB0 : 1e0ecb6 >			  ## printf-stdarg.c:112:16
 1e0ec9e:    d0 72             	r0 = 45			  ## printf-stdarg.c:139:18
 1e0eca0:    10 f9 ff 7f       	b[r7 + -1] = r0			  ## printf-stdarg.c:139:18
 1e0eca4:    f7 8f             	r7 += -1			  ## printf-stdarg.c:139:14
 1e0eca6:    1a f5 00 00       	[sp] = r10			  ## printf-stdarg.c:143:17
 1e0ecaa:    90 08             	r0 = r9			  ## printf-stdarg.c:143:17
 1e0ecac:    81 08             	r1 = r8			  ## printf-stdarg.c:143:17
 1e0ecae:    72 08             	r2 = r7			  ## printf-stdarg.c:143:17
 1e0ecb0:    43 08             	r3 = r4			  ## printf-stdarg.c:143:17
 1e0ecb2:    61 17             	call -318 <prints : 1e0eb76 >			  ## printf-stdarg.c:143:17
 1e0ecb4:    60 09             	r0 += r6			  ## printf-stdarg.c:143:15
 1e0ecb6:    08 0a             	sp += 16
 1e0ecb8:    5a 01             	{pc, r10-r4} = [sp++]			  ## printf-stdarg.c:144:1


print:
 1e0ecba:    7d 01             	[--sp] = {rets, r13-r4}			  ## printf-stdarg.c:147:0
 1e0ecbc:    f2 0b             	sp += -28			  ## printf-stdarg.c:147:0
 1e0ecbe:    1d 08             	r13 = r1			  ## printf-stdarg.c:147:0
 1e0ecc0:    04 08             	r4 = r0			  ## printf-stdarg.c:147:0
 1e0ecc2:    6a 02             	[sp+24] = r2			  ## printf-stdarg.c:147:0
 1e0ecc4:    5b 02             	[sp+20] = r3			  ## printf-stdarg.c:147:0
 1e0ecc6:    08 70             	r8 = 0			  ## printf-stdarg.c:147:0
 1e0ecc8:    19 74             	r9 = 65			  ## printf-stdarg.c:147:0
 1e0ecca:    1a 76             	r10 = 97			  ## printf-stdarg.c:147:0
 1e0eccc:    1b 70             	r11 = 1			  ## printf-stdarg.c:147:0
 1e0ecce:    cc ff 9b 55 e1 01 	r12 = 31544731 <update_target_end+0x2713 : 1e1559b >			  ## printf-stdarg.c:147:0
 1e0ecd4:    06 70             	r6 = 0			  ## printf-stdarg.c:147:0
 1e0ecd6:    07 19             	goto 526 <.GJTIE28_0_0_+0x154 : 1e0eee6 >			  ## printf-stdarg.c:147:0
 1e0ecd8:    11 94             	r1 = r2 + 1			  ## printf-stdarg.c:154:13
 1e0ecda:    69 02             	[sp+24] = r1			  ## printf-stdarg.c:154:13
 1e0ecdc:    13 64             	r3 = b[r2 + 1] (u)			  ## printf-stdarg.c:156:17
 1e0ecde:    53 e2 06 00       	if (r3 == 37) goto 12 <print+0x34 : 1e0ecee >
 1e0ece2:    d3 e2 0b 00       	if (r3 == 45) goto 22 <print+0x42 : 1e0ecfc >
 1e0ece6:    03 e0 02 01       	if (r3 == 0) goto 516 <.GJTIE28_0_0_+0x15C : 1e0eeee >
 1e0ecea:    05 70             	r5 = 0
 1e0ecec:    0b 18             	goto 22 <print+0x4A : 1e0ed04 >
 1e0ecee:    50 72             	r0 = 37
 1e0ecf0:    12 04             	r2 = r0.b0 (s)			  ## printf-stdarg.c:276:39
 1e0ecf2:    40 08             	r0 = r4			  ## printf-stdarg.c:276:19
 1e0ecf4:    d1 08             	r1 = r13			  ## printf-stdarg.c:276:19
 1e0ecf6:    2c 17             	call -424 <printchar : 1e0eb50 >			  ## printf-stdarg.c:276:19
 1e0ecf8:    06 09             	r6 += r0
 1e0ecfa:    4b 18             	goto 150 <.GJTIE28_0_0_ : 1e0ed92 >
 1e0ecfc:    21 94             	r1 = r2 + 2			  ## printf-stdarg.c:163:17
 1e0ecfe:    69 02             	[sp+24] = r1			  ## printf-stdarg.c:163:17
 1e0ed00:    23 64             	r3 = b[r2 + 2] (u)
 1e0ed02:    15 70             	r5 = 1
 1e0ed04:    03 e3 09 10       	if (r3 != 48) goto 18 <print+0x60 : 1e0ed1a >
 1e0ed08:    10 92             	r0 = r1 + 1			  ## printf-stdarg.c:167:17
 1e0ed0a:    68 02             	[sp+24] = r0			  ## printf-stdarg.c:167:17
 1e0ed0c:    83 f9 01 00       	r3 = b[r0 ++= 1] (u)			  ## printf-stdarg.c:166:20
 1e0ed10:    95 b0             	r5 |= 2			  ## printf-stdarg.c:168:21
 1e0ed12:    03 e3 fa 0f       	if (r3 == 48) goto -12 <print+0x50 : 1e0ed0a >			  ## printf-stdarg.c:166:13
 1e0ed16:    01 fc ff ff       	r1 = r0 + -1			  ## printf-stdarg.c:148:18
 1e0ed1a:    30 fc d0 ff       	r0 = r3 + -48			  ## printf-stdarg.c:172:17
 1e0ed1e:    00 04             	r0 = r0.b0 (u)			  ## printf-stdarg.c:172:17
 1e0ed20:    f7 07             	r7 = -1			  ## printf-stdarg.c:172:17
 1e0ed22:    90 e0 05 80       	if (r0 > 9) goto 10 <print+0x76 : 1e0ed30 >			  ## printf-stdarg.c:172:17
 1e0ed26:    80 a1             	r0 = sp + 24
 1e0ed28:    f9 16             	call -526 <skip_atoi : 1e0eb1c >			  ## printf-stdarg.c:173:25
 1e0ed2a:    61 02             	r1 = [sp+24]
 1e0ed2c:    03 62             	r3 = b[r1 + 0] (u)
 1e0ed2e:    07 08             	r7 = r0			  ## printf-stdarg.c:173:25
 1e0ed30:    e3 e2 0c 10       	if (r3 != 46) goto 24 <print+0x92 : 1e0ed4c >
 1e0ed34:    10 92             	r0 = r1 + 1			  ## printf-stdarg.c:178:17
 1e0ed36:    68 02             	[sp+24] = r0			  ## printf-stdarg.c:178:17
 1e0ed38:    12 62             	r2 = b[r1 + 1] (u)			  ## printf-stdarg.c:179:21
 1e0ed3a:    23 fc d0 ff       	r3 = r2 + -48			  ## printf-stdarg.c:179:21
 1e0ed3e:    c3 04             	r3 = r3.b0 (u)			  ## printf-stdarg.c:179:21
 1e0ed40:    93 e0 32 80       	if (r3 > 9) goto 100 <.GJTIE28_0_0_+0x16 : 1e0eda8 >			  ## printf-stdarg.c:179:21
 1e0ed44:    80 a1             	r0 = sp + 24
 1e0ed46:    ea 16             	call -556 <skip_atoi : 1e0eb1c >			  ## printf-stdarg.c:180:33
 1e0ed48:    60 02             	r0 = [sp+24]
 1e0ed4a:    01 18             	goto 2 <print+0x94 : 1e0ed4e >
 1e0ed4c:    10 08             	r0 = r1			  ## printf-stdarg.c:250:18
 1e0ed4e:    01 60             	r1 = b[r0 + 0] (u)
 1e0ed50:    31 e6 15 c0       	ifs (r1 > 99) goto 42 <print+0xC4 : 1e0ed7e >			  ## printf-stdarg.c:193:17
 1e0ed54:    c1 e4 30 00       	if (r1 == 76) goto 96 <.GJTIE28_0_0_+0x26 : 1e0edb8 >
 1e0ed58:    81 e5 43 00       	if (r1 == 88) goto 134 <.GJTIE28_0_0_+0x50 : 1e0ede2 >
 1e0ed5c:    31 e6 19 10       	if (r1 != 99) goto 50 <.GJTIE28_0_0_ : 1e0ed92 >
 1e0ed60:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:252:32
 1e0ed62:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:252:32
 1e0ed64:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:252:32
 1e0ed66:    00 40             	r0 = [r0 + 0]			  ## printf-stdarg.c:252:32
 1e0ed68:    d0 f5 12 00       	b[sp+18] = r0			  ## printf-stdarg.c:252:24
 1e0ed6c:    d8 f5 13 00       	b[sp+19] = r8			  ## printf-stdarg.c:253:24
 1e0ed70:    22 a1             	r2 = sp + 18			  ## printf-stdarg.c:253:24
 1e0ed72:    0d 02             	[sp] = r5			  ## printf-stdarg.c:254:23
 1e0ed74:    40 08             	r0 = r4
 1e0ed76:    d1 08             	r1 = r13
 1e0ed78:    73 08             	r3 = r7
 1e0ed7a:    fd 16             	call -518 <prints : 1e0eb76 >
 1e0ed7c:    bd 1f             	goto -134 <print+0x3E : 1e0ecf8 >
 1e0ed7e:    12 fc 90 ff       	r2 = r1 + -112
 1e0ed82:    82 e0 3d 80       	if (r2 > 8) goto 122 <.GJTIE28_0_0_+0x6E : 1e0ee00 >
 1e0ed86:    a2 00             	tbb [r2]


.GJTIS28_0_0_:
 1e0ed88:    09     < 9 : 0x9 >
 1e0ed89:    05     < 5 : 0x5 >
 1e0ed8a:    05     < 5 : 0x5 >
 1e0ed8b:    59     < 89 : 0x59 >
 1e0ed8c:    05     < 5 : 0x5 >
 1e0ed8d:    61     < 97 : 0x61 >
 1e0ed8e:    05     < 5 : 0x5 >
 1e0ed8f:    05     < 5 : 0x5 >
 1e0ed90:    09     < 9 : 0x9 >
 1e0ed91:    00     < 0 : 0x0 >
 1e0ed92:    60 02             	r0 = [sp+24]			  ## printf-stdarg.c:152:26
 1e0ed94:    12 90             	r2 = r0 + 1			  ## printf-stdarg.c:152:26
 1e0ed96:    6a 02             	[sp+24] = r2			  ## printf-stdarg.c:152:26
 1e0ed98:    a6 18             	goto 332 <.GJTIE28_0_0_+0x154 : 1e0eee6 >			  ## printf-stdarg.c:152:26
 1e0ed9a:    50 02             	r0 = [sp+20]
 1e0ed9c:    41 90             	r1 = r0 + 4
 1e0ed9e:    59 02             	[sp+20] = r1
 1e0eda0:    02 40             	r2 = [r0 + 0]
 1e0eda2:    1a f5 0c 00       	[sp+12] = r10
 1e0eda6:    23 18             	goto 70 <.GJTIE28_0_0_+0x5C : 1e0edee >
 1e0eda8:    a2 e2 d1 1f       	if (r2 != 42) goto -94 <print+0x94 : 1e0ed4e >
 1e0edac:    52 02             	r2 = [sp+20]			  ## printf-stdarg.c:183:33
 1e0edae:    20 92             	r0 = r1 + 2			  ## printf-stdarg.c:182:21
 1e0edb0:    68 02             	[sp+24] = r0			  ## printf-stdarg.c:182:21
 1e0edb2:    41 94             	r1 = r2 + 4			  ## printf-stdarg.c:183:33
 1e0edb4:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:183:33
 1e0edb6:    cb 1f             	goto -106 <print+0x94 : 1e0ed4e >			  ## printf-stdarg.c:183:33
 1e0edb8:    10 60             	r0 = b[r0 + 1] (u)			  ## printf-stdarg.c:230:39
 1e0edba:    80 e5 ea 1f       	if (r0 != 88) goto -44 <.GJTIE28_0_0_ : 1e0ed92 >
 1e0edbe:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:231:40
 1e0edc0:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:231:40
 1e0edc2:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:231:40
 1e0edc4:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:231:40
 1e0edc6:    19 f5 0c 00       	[sp+12] = r9			  ## printf-stdarg.c:231:23
 1e0edca:    2d 02             	[sp+8] = r5
 1e0edcc:    1f 02             	[sp+4] = r7
 1e0edce:    03 71             	r3 = 16
 1e0edd0:    18 f5 00 00       	[sp] = r8
 1e0edd4:    40 08             	r0 = r4
 1e0edd6:    d1 08             	r1 = r13
 1e0edd8:    16 17             	call -468 <printi : 1e0ec06 >
 1e0edda:    61 02             	r1 = [sp+24]
 1e0eddc:    11 80             	r1 += 1
 1e0edde:    69 02             	[sp+24] = r1
 1e0ede0:    8b 1f             	goto -234 <print+0x3E : 1e0ecf8 >
 1e0ede2:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:227:40
 1e0ede4:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:227:40
 1e0ede6:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:227:40
 1e0ede8:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:227:40
 1e0edea:    19 f5 0c 00       	[sp+12] = r9			  ## printf-stdarg.c:227:23
 1e0edee:    2d 02             	[sp+8] = r5
 1e0edf0:    1f 02             	[sp+4] = r7
 1e0edf2:    03 71             	r3 = 16
 1e0edf4:    18 f5 00 00       	[sp] = r8
 1e0edf8:    40 08             	r0 = r4
 1e0edfa:    d1 08             	r1 = r13
 1e0edfc:    04 17             	call -504 <printi : 1e0ec06 >
 1e0edfe:    7c 1f             	goto -264 <print+0x3E : 1e0ecf8 >
 1e0ee00:    41 e6 2d 00       	if (r1 == 100) goto 90 <.GJTIE28_0_0_+0xCC : 1e0ee5e >
 1e0ee04:    c1 e6 c5 1f       	if (r1 != 108) goto -118 <.GJTIE28_0_0_ : 1e0ed92 >
 1e0ee08:    11 60             	r1 = b[r0 + 1] (u)
 1e0ee0a:    41 e7 34 c0       	ifs (r1 > 116) goto 104 <.GJTIE28_0_0_+0xE4 : 1e0ee76 >
 1e0ee0e:    41 e6 3d 00       	if (r1 == 100) goto 122 <.GJTIE28_0_0_+0xFA : 1e0ee8c >
 1e0ee12:    c1 e6 be 1f       	if (r1 != 108) goto -132 <.GJTIE28_0_0_ : 1e0ed92 >
 1e0ee16:    21 60             	r1 = b[r0 + 2] (u)			  ## printf-stdarg.c:207:67
 1e0ee18:    41 e6 4e 10       	if (r1 != 100) goto 156 <.GJTIE28_0_0_+0x126 : 1e0eeb8 >			  ## printf-stdarg.c:207:67
 1e0ee1c:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:208:40
 1e0ee1e:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:208:40
 1e0ee20:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:208:40
 1e0ee22:    51 02             	r1 = [sp+20]			  ## printf-stdarg.c:208:40
 1e0ee24:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:208:40
 1e0ee26:    40 92             	r0 = r1 + 4			  ## printf-stdarg.c:208:40
 1e0ee28:    58 02             	[sp+20] = r0			  ## printf-stdarg.c:208:40
 1e0ee2a:    1a f5 0c 00       	[sp+12] = r10			  ## printf-stdarg.c:208:23
 1e0ee2e:    2d 02             	[sp+8] = r5			  ## printf-stdarg.c:208:23
 1e0ee30:    1f 02             	[sp+4] = r7			  ## printf-stdarg.c:208:23
 1e0ee32:    a3 70             	r3 = 10			  ## printf-stdarg.c:208:23
 1e0ee34:    1b f5 00 00       	[sp] = r11			  ## printf-stdarg.c:208:23
 1e0ee38:    50 18             	goto 160 <.GJTIE28_0_0_+0x148 : 1e0eeda >			  ## printf-stdarg.c:208:23
 1e0ee3a:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:194:44
 1e0ee3c:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:194:44
 1e0ee3e:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:194:44
 1e0ee40:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:194:44
 1e0ee42:    0d 02             	[sp] = r5			  ## printf-stdarg.c:195:23
 1e0ee44:    97 35             	if (r2 != 0) goto -210 <print+0xBA : 1e0ed74 >			  ## printf-stdarg.c:195:23
 1e0ee46:    c2 08             	r2 = r12			  ## printf-stdarg.c:195:40
 1e0ee48:    95 1f             	goto -214 <print+0xBA : 1e0ed74 >
 1e0ee4a:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:236:40
 1e0ee4c:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:236:40
 1e0ee4e:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:236:40
 1e0ee50:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:236:40
 1e0ee52:    1a f5 0c 00       	[sp+12] = r10			  ## printf-stdarg.c:236:23
 1e0ee56:    2d 02             	[sp+8] = r5			  ## printf-stdarg.c:236:23
 1e0ee58:    1f 02             	[sp+4] = r7			  ## printf-stdarg.c:236:23
 1e0ee5a:    a3 70             	r3 = 10			  ## printf-stdarg.c:236:23
 1e0ee5c:    cb 1f             	goto -106 <.GJTIE28_0_0_+0x62 : 1e0edf4 >			  ## printf-stdarg.c:236:23
 1e0ee5e:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:199:40
 1e0ee60:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:199:40
 1e0ee62:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:199:40
 1e0ee64:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:199:40
 1e0ee66:    1a f5 0c 00       	[sp+12] = r10			  ## printf-stdarg.c:199:23
 1e0ee6a:    2d 02             	[sp+8] = r5			  ## printf-stdarg.c:199:23
 1e0ee6c:    1f 02             	[sp+4] = r7			  ## printf-stdarg.c:199:23
 1e0ee6e:    a3 70             	r3 = 10			  ## printf-stdarg.c:199:23
 1e0ee70:    1b f5 00 00       	[sp] = r11			  ## printf-stdarg.c:199:23
 1e0ee74:    c1 1f             	goto -126 <.GJTIE28_0_0_+0x66 : 1e0edf8 >			  ## printf-stdarg.c:199:23
 1e0ee76:    51 e7 15 00       	if (r1 == 117) goto 42 <.GJTIE28_0_0_+0x112 : 1e0eea4 >
 1e0ee7a:    81 e7 8a 1f       	if (r1 != 120) goto -236 <.GJTIE28_0_0_ : 1e0ed92 >
 1e0ee7e:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:222:40
 1e0ee80:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:222:40
 1e0ee82:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:222:40
 1e0ee84:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:222:40
 1e0ee86:    1a f5 0c 00       	[sp+12] = r10			  ## printf-stdarg.c:222:23
 1e0ee8a:    9f 1f             	goto -194 <.GJTIE28_0_0_+0x38 : 1e0edca >			  ## printf-stdarg.c:222:23
 1e0ee8c:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:203:40
 1e0ee8e:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:203:40
 1e0ee90:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:203:40
 1e0ee92:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:203:40
 1e0ee94:    1a f5 0c 00       	[sp+12] = r10			  ## printf-stdarg.c:203:23
 1e0ee98:    2d 02             	[sp+8] = r5			  ## printf-stdarg.c:203:23
 1e0ee9a:    1f 02             	[sp+4] = r7			  ## printf-stdarg.c:203:23
 1e0ee9c:    a3 70             	r3 = 10			  ## printf-stdarg.c:203:23
 1e0ee9e:    1b f5 00 00       	[sp] = r11			  ## printf-stdarg.c:203:23
 1e0eea2:    98 1f             	goto -208 <.GJTIE28_0_0_+0x42 : 1e0edd4 >			  ## printf-stdarg.c:203:23
 1e0eea4:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:240:40
 1e0eea6:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:240:40
 1e0eea8:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:240:40
 1e0eeaa:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:240:40
 1e0eeac:    1a f5 0c 00       	[sp+12] = r10			  ## printf-stdarg.c:240:23
 1e0eeb0:    2d 02             	[sp+8] = r5			  ## printf-stdarg.c:240:23
 1e0eeb2:    1f 02             	[sp+4] = r7			  ## printf-stdarg.c:240:23
 1e0eeb4:    a3 70             	r3 = 10			  ## printf-stdarg.c:240:23
 1e0eeb6:    8c 1f             	goto -232 <.GJTIE28_0_0_+0x3E : 1e0edd0 >			  ## printf-stdarg.c:240:23
 1e0eeb8:    20 60             	r0 = b[r0 + 2] (u)			  ## printf-stdarg.c:244:67
 1e0eeba:    50 e7 6a 1f       	if (r0 != 117) goto -300 <.GJTIE28_0_0_ : 1e0ed92 >
 1e0eebe:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:245:40
 1e0eec0:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:245:40
 1e0eec2:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:245:40
 1e0eec4:    51 02             	r1 = [sp+20]			  ## printf-stdarg.c:245:40
 1e0eec6:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:245:40
 1e0eec8:    40 92             	r0 = r1 + 4			  ## printf-stdarg.c:245:40
 1e0eeca:    58 02             	[sp+20] = r0			  ## printf-stdarg.c:245:40
 1e0eecc:    1a f5 0c 00       	[sp+12] = r10			  ## printf-stdarg.c:245:23
 1e0eed0:    2d 02             	[sp+8] = r5			  ## printf-stdarg.c:245:23
 1e0eed2:    1f 02             	[sp+4] = r7			  ## printf-stdarg.c:245:23
 1e0eed4:    a3 70             	r3 = 10			  ## printf-stdarg.c:245:23
 1e0eed6:    18 f5 00 00       	[sp] = r8			  ## printf-stdarg.c:245:23
 1e0eeda:    40 08             	r0 = r4
 1e0eedc:    d1 08             	r1 = r13
 1e0eede:    93 16             	call -730 <printi : 1e0ec06 >
 1e0eee0:    61 02             	r1 = [sp+24]
 1e0eee2:    21 80             	r1 += 2
 1e0eee4:    7c 1f             	goto -264 <.GJTIE28_0_0_+0x4C : 1e0edde >
 1e0eee6:    00 64             	r0 = b[r2 + 0] (u)			  ## printf-stdarg.c:152:12
 1e0eee8:    50 e2 f6 0e       	if (r0 == 37) goto -532 <print+0x1E : 1e0ecd8 >			  ## printf-stdarg.c:152:5
 1e0eeec:    01 31             	if (r0 != 0) goto -510 <print+0x36 : 1e0ecf0 >
 1e0eeee:    03 28             	if (r4 == 0) goto 6 <.GJTIE28_0_0_+0x164 : 1e0eef6 >
 1e0eef0:    00 48             	r0 = [r4 + 0]			  ## printf-stdarg.c:280:10
 1e0eef2:    01 70             	r1 = 0			  ## printf-stdarg.c:280:15
 1e0eef4:    09 60             	b[r0 + 0] = r1			  ## printf-stdarg.c:280:15
 1e0eef6:    60 08             	r0 = r6			  ## printf-stdarg.c:283:5
 1e0eef8:    0e 0a             	sp += 28			  ## printf-stdarg.c:283:5
 1e0eefa:    5d 01             	{pc, r13-r4} = [sp++]			  ## printf-stdarg.c:283:5


sprintf:
 1e0eefc:    62 01             	[--sp] = {r3, r2}			  ## printf-stdarg.c:405:0
 1e0eefe:    34 00             	[--sp] = rets			  ## printf-stdarg.c:405:0
 1e0ef00:    fc 0b             	sp += -8			  ## printf-stdarg.c:405:0
 1e0ef02:    18 02             	[sp+4] = r0			  ## printf-stdarg.c:405:0
 1e0ef04:    c3 a0             	r3 = sp + 12			  ## printf-stdarg.c:405:0
 1e0ef06:    0b 02             	[sp] = r3			  ## printf-stdarg.c:408:5
 1e0ef08:    40 a0             	r0 = sp + 4			  ## printf-stdarg.c:408:5
 1e0ef0a:    c2 ff a2 55 e1 01 	r2 = 31544738 <update_target_end+0x271A : 1e155a2 >			  ## printf-stdarg.c:410:12
 1e0ef10:    01 70             	r1 = 0			  ## printf-stdarg.c:410:12
 1e0ef12:    d3 16             	call -602 <print : 1e0ecba >			  ## printf-stdarg.c:410:12
 1e0ef14:    04 0a             	sp += 8
 1e0ef16:    88 01             	{rets} = [sp++]
 1e0ef18:    04 0a             	sp += 8
 1e0ef1a:    20 00             	rts


log_print_time:
 1e0ef1c:    79 01             	[--sp] = {rets, r9-r4}			  ## log.c:187:0
 1e0ef1e:    f0 0b             	sp += -32			  ## log.c:187:0
 1e0ef20:    8f f3 7e a1       	call 2048764 <jiffies_msec : 3220 >			  ## log.c:151:24
 1e0ef24:    c9 ff b0 20 00 00 	r9 = 8368 <gatt_client_conn_handle : 20b0 >			  ## log.c:151:24
 1e0ef2a:    01 f6 d4 90       	r1 = [r9 + 212]			  ## log.c:153:48
 1e0ef2e:    65 b0             	r5 = r0 - r1			  ## log.c:153:46
 1e0ef30:    c8 ff a0 1e 00 00 	r8 = 7840 <cur_time.5 : 1ea0 >
 1e0ef36:    c1 ff 9c 1e 00 00 	r1 = 7836 <cur_time.3 : 1e9c >
 1e0ef3c:    c2 ff 9e 1e 00 00 	r2 = 7838 <cur_time.4 : 1e9e >
 1e0ef42:    05 e0 03 b0       	ifs (r5 < 0) goto 6 <log_print_time+0x30 : 1e0ef4c >			  ## log.c:155:9
 1e0ef46:    06 f9 00 80       	r6 = b[r8 + 0] (u)
 1e0ef4a:    08 18             	goto 16 <log_print_time+0x40 : 1e0ef5c >
 1e0ef4c:    06 70             	r6 = 0
 1e0ef4e:    16 f6 d4 90       	[r9 + 212] = r6			  ## log.c:156:22
 1e0ef52:    0e 62             	b[r1 + 0] = r6			  ## log.c:157:23
 1e0ef54:    0e 64             	b[r2 + 0] = r6			  ## log.c:158:22
 1e0ef56:    16 f9 00 80       	b[r8 + 0] = r6			  ## log.c:159:22
 1e0ef5a:    05 08             	r5 = r0			  ## log.c:159:22
 1e0ef5c:    0b ff e8 53 1e 00 	ifs (r5 < 1000) goto 60 <log_print_time+0x82 : 1e0ef9e >
 1e0ef62:    16 80             	r6 += 1			  ## log.c:166:17
 1e0ef64:    83 05             	r3 = r6.b0 (u)			  ## log.c:166:17
 1e0ef66:    55 fc 18 fc       	r5 = r5 + -1000			  ## log.c:165:18
 1e0ef6a:    c3 e3 10 30       	if (r3 < 60) goto 32 <log_print_time+0x72 : 1e0ef8e >
 1e0ef6e:    03 64             	r3 = b[r2 + 0] (u)			  ## log.c:168:21
 1e0ef70:    13 80             	r3 += 1			  ## log.c:168:21
 1e0ef72:    0b 64             	b[r2 + 0] = r3			  ## log.c:168:21
 1e0ef74:    c3 04             	r3 = r3.b0 (u)			  ## log.c:168:21
 1e0ef76:    06 70             	r6 = 0			  ## log.c:168:21
 1e0ef78:    c3 e3 09 30       	if (r3 < 60) goto 18 <log_print_time+0x72 : 1e0ef8e >			  ## log.c:168:21
 1e0ef7c:    03 62             	r3 = b[r1 + 0] (u)			  ## log.c:170:25
 1e0ef7e:    0e 64             	b[r2 + 0] = r6			  ## log.c:169:34
 1e0ef80:    13 80             	r3 += 1			  ## log.c:170:25
 1e0ef82:    c4 04             	r4 = r3.b0 (u)			  ## log.c:170:25
 1e0ef84:    07 70             	r7 = 0			  ## log.c:170:25
 1e0ef86:    24 e6 01 80       	if (r4 > 98) goto 2 <log_print_time+0x70 : 1e0ef8c >			  ## log.c:170:25
 1e0ef8a:    37 08             	r7 = r3			  ## log.c:170:25
 1e0ef8c:    0f 62             	b[r1 + 0] = r7			  ## log.c:171:39
 1e0ef8e:    0c ff e7 53 e7 ff 	ifs (r5 > 999) goto -50 <log_print_time+0x46 : 1e0ef62 >
 1e0ef94:    16 f9 00 80       	b[r8 + 0] = r6			  ## log.c:166:17
 1e0ef98:    60 b1             	r0 = r0 - r5			  ## log.c:177:22
 1e0ef9a:    10 f6 d4 90       	[r9 + 212] = r0			  ## log.c:177:22
 1e0ef9e:    03 64             	r3 = b[r2 + 0] (u)			  ## log.c:180:59
 1e0efa0:    02 62             	r2 = b[r1 + 0] (u)			  ## log.c:180:44
 1e0efa2:    1d 02             	[sp+4] = r5			  ## log.c:180:5
 1e0efa4:    81 05             	r1 = r6.b0 (u)			  ## log.c:181:13
 1e0efa6:    80 a0             	r0 = sp + 8			  ## log.c:181:13
 1e0efa8:    09 02             	[sp] = r1			  ## log.c:180:5
 1e0efaa:    a8 17             	call -176 <sprintf : 1e0eefc >			  ## log.c:180:5
 1e0efac:    00 f9 15 90       	r0 = b[r9 + 21] (u)			  ## log.c:199:9
 1e0efb0:    a0 e0 03 00       	if (r0 == 10) goto 6 <log_print_time+0x9E : 1e0efba >			  ## log.c:199:9
 1e0efb4:    a0 70             	r0 = 10			  ## log.c:409:18
 1e0efb6:    10 f9 15 90       	b[r9 + 21] = r0			  ## log.c:409:18
 1e0efba:    f0 07             	r0 = -1
 1e0efbc:    10 80             	r0 += 1			  ## log.c:202:23
 1e0efbe:    d0 e0 fd 1f       	if (r0 != 13) goto -6 <log_print_time+0xA0 : 1e0efbc >			  ## log.c:202:5
 1e0efc2:    81 a0             	r1 = sp + 8
 1e0efc4:    00 fa 00 10       	r0 = b[r1+r0] (u)			  ## log.c:203:21
 1e0efc8:    10 f9 15 90       	b[r9 + 21] = r0			  ## log.c:409:18
 1e0efcc:    10 0a             	sp += 32			  ## log.c:409:18
 1e0efce:    59 01             	{pc, r9-r4} = [sp++]			  ## log.c:205:1


logbuf_output:
 1e0efd0:    77 01             	[--sp] = {rets, r7-r4}			  ## log.c:26:0
 1e0efd2:    c5 ff b0 20 00 00 	r5 = 8368 <gatt_client_conn_handle : 20b0 >			  ## log.c:26:0
 1e0efd8:    00 f6 d0 50       	r0 = [r5 + 208]			  ## log.c:29:9
 1e0efdc:    39 20             	if (r0 == 0) goto 114 <logbuf_output+0x80 : 1e0f050 >			  ## log.c:29:9
 1e0efde:    80 f3 35 03       	call 1642 <lbuf_pop : 1e0f64c >			  ## log.c:33:36
 1e0efe2:    04 08             	r4 = r0			  ## log.c:33:36
 1e0efe4:    14 f6 cc 50       	[r5 + 204] = r4			  ## log.c:33:17
 1e0efe8:    33 28             	if (r4 == 0) goto 102 <logbuf_output+0x80 : 1e0f050 >			  ## log.c:33:17
 1e0efea:    06 70             	r6 = 0
 1e0efec:    00 58             	r0 = h[r4 + 0] (u)			  ## log.c:37:34
 1e0efee:    12 20             	if (r0 == 0) goto 36 <logbuf_output+0x44 : 1e0f014 >			  ## log.c:37:34
 1e0eff0:    40 98             	r0 = r4 + 4			  ## log.c:38:17
 1e0eff2:    07 70             	r7 = 0			  ## log.c:38:17
 1e0eff4:    01 fa 00 07       	r1 = b[r0+r7] (u)			  ## log.c:38:17
 1e0eff8:    d1 e0 04 00       	if (r1 == 13) goto 8 <logbuf_output+0x34 : 1e0f004 >			  ## log.c:38:17
 1e0effc:    01 fa 00 07       	r1 = b[r0+r7] (u)			  ## log.c:38:44
 1e0f000:    a1 e0 09 10       	if (r1 != 10) goto 18 <logbuf_output+0x46 : 1e0f016 >			  ## log.c:38:44
 1e0f004:    01 fa 00 07       	r1 = b[r0+r7] (u)			  ## log.c:39:29
 1e0f008:    59 6b             	b[r5 + 21] = r1			  ## log.c:409:18
 1e0f00a:    01 58             	r1 = h[r4 + 0] (u)			  ## log.c:37:25
 1e0f00c:    17 80             	r7 += 1			  ## log.c:37:40
 1e0f00e:    17 f2 f1 bf       	ifs (r7 < r1) goto -30 <logbuf_output+0x24 : 1e0eff4 >
 1e0f012:    01 18             	goto 2 <logbuf_output+0x46 : 1e0f016 >
 1e0f014:    07 70             	r7 = 0
 1e0f016:    00 58             	r0 = h[r4 + 0] (u)			  ## log.c:45:17
 1e0f018:    07 f2 04 a0       	ifs (r7 >= r0) goto 8 <logbuf_output+0x54 : 1e0f024 >			  ## log.c:45:17
 1e0f01c:    00 58             	r0 = h[r4 + 0] (u)			  ## log.c:45:42
 1e0f01e:    20 e0 01 30       	if (r0 < 2) goto 2 <logbuf_output+0x54 : 1e0f024 >			  ## log.c:45:42
 1e0f022:    7c 17             	call -264 <log_print_time : 1e0ef1c >			  ## log.c:46:13
 1e0f024:    00 58             	r0 = h[r4 + 0] (u)			  ## log.c:48:20
 1e0f026:    07 f2 07 a0       	ifs (r7 >= r0) goto 14 <logbuf_output+0x68 : 1e0f038 >			  ## log.c:48:20
 1e0f02a:    c0 b9             	r0 = r4 + r7			  ## log.c:49:25
 1e0f02c:    40 60             	r0 = b[r0 + 4] (u)			  ## log.c:49:25
 1e0f02e:    58 6b             	b[r5 + 21] = r0			  ## log.c:409:18
 1e0f030:    00 58             	r0 = h[r4 + 0] (u)			  ## log.c:48:20
 1e0f032:    17 80             	r7 += 1			  ## log.c:48:35
 1e0f034:    07 f2 f9 bf       	ifs (r7 < r0) goto -14 <logbuf_output+0x5A : 1e0f02a >
 1e0f038:    40 08             	r0 = r4			  ## log.c:52:9
 1e0f03a:    80 f3 23 02       	call 1094 <lbuf_free : 1e0f484 >			  ## log.c:52:9
 1e0f03e:    57 fc cc 00       	r7 = r5 + 204			  ## log.c:52:9
 1e0f042:    0e 4e             	[r7 + 0] = r6			  ## log.c:53:17
 1e0f044:    10 4e             	r0 = [r7 + 4]			  ## log.c:33:45
 1e0f046:    80 f3 01 03       	call 1538 <lbuf_pop : 1e0f64c >			  ## log.c:33:36
 1e0f04a:    04 08             	r4 = r0			  ## log.c:33:36
 1e0f04c:    0c 4e             	[r7 + 0] = r4			  ## log.c:33:17
 1e0f04e:    ce 39             	if (r4 != 0) goto -100 <logbuf_output+0x1C : 1e0efec >			  ## log.c:33:17
 1e0f050:    57 01             	{pc, r7-r4} = [sp++]			  ## log.c:56:1


log_output_end:
 1e0f052:    74 01             	[--sp] = {rets, r4}			  ## log.c:366:0
 1e0f054:    04 08             	r4 = r0			  ## log.c:366:0
 1e0f056:    0b 28             	if (r4 == 0) goto 22 <log_output_end+0x1C : 1e0f06e >			  ## log.c:366:0
 1e0f058:    00 58             	r0 = h[r4 + 0] (u)			  ## log.c:368:17
 1e0f05a:    11 58             	r1 = h[r4 + 2] (u)			  ## log.c:368:27
 1e0f05c:    10 f2 04 20       	if (r0 >= r1) goto 8 <log_output_end+0x16 : 1e0f068 >			  ## log.c:368:27
 1e0f060:    41 90             	r1 = r0 + 4			  ## log.c:369:42
 1e0f062:    40 08             	r0 = r4			  ## log.c:369:13
 1e0f064:    80 f3 76 02       	call 1260 <lbuf_realloc : 1e0f554 >			  ## log.c:369:13
 1e0f068:    40 08             	r0 = r4			  ## log.c:371:9
 1e0f06a:    80 f3 b7 02       	call 1390 <lbuf_push : 1e0f5dc >			  ## log.c:371:9
 1e0f06e:    32 15             	call -1436 <system_text_start : 1e0ead4 >			  ## log.c:373:9
 1e0f070:    0c 30             	if (r0 != 0) goto 24 <log_output_end+0x38 : 1e0f08a >			  ## log.c:373:9
 1e0f072:    ae 17             	call -164 <logbuf_output : 1e0efd0 >			  ## log.c:238:5
 1e0f074:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## log.c:238:5
 1e0f07a:    01 70             	r1 = 0			  ## log.c:238:5
 1e0f07c:    11 f9 d8 00       	b[r0 + 216] = r1			  ## log.c:238:5
 1e0f080:    c0 ff f8 23 00 00 	r0 = 9208 <log_mutex : 23f8 >			  ## log.c:240:5
 1e0f086:    97 f3 cf be       	call 3112350 <os_mutex_post : 106e28 >			  ## log.c:240:5
 1e0f08a:    54 01             	{pc, r4} = [sp++]			  ## log.c:377:1


log_output_unlock:
 1e0f08c:    34 00             	[--sp] = rets			  ## log.c:237:0
 1e0f08e:    a0 17             	call -192 <logbuf_output : 1e0efd0 >			  ## log.c:238:5
 1e0f090:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## log.c:238:5
 1e0f096:    01 70             	r1 = 0			  ## log.c:238:5
 1e0f098:    11 f9 d8 00       	b[r0 + 216] = r1			  ## log.c:238:5
 1e0f09c:    c0 ff f8 23 00 00 	r0 = 9208 <log_mutex : 23f8 >			  ## log.c:240:5
 1e0f0a2:    88 01             	{rets} = [sp++]			  ## log.c:240:5
 1e0f0a4:    d7 f3 c0 be       	goto 3112320 <os_mutex_post : 106e28 >			  ## log.c:240:5


log_output_start:
 1e0f0a8:    74 01             	[--sp] = {rets, r4}			  ## log.c:348:0
 1e0f0aa:    c4 7f             	r4 = 252			  ## log.c:351:9
 1e0f0ac:    01 20             	if (r0 == 0) goto 2 <log_output_start+0x8 : 1e0f0b0 >
 1e0f0ae:    04 08             	r4 = r0			  ## log.c:351:9
 1e0f0b0:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## log.c:355:38
 1e0f0b6:    00 f6 d0 00       	r0 = [r0 + 208]			  ## log.c:355:38
 1e0f0ba:    41 98             	r1 = r4 + 4			  ## log.c:355:70
 1e0f0bc:    80 f3 dd 02       	call 1466 <lbuf_alloc : 1e0f67a >			  ## log.c:355:27
 1e0f0c0:    03 20             	if (r0 == 0) goto 6 <log_output_start+0x20 : 1e0f0c8 >			  ## log.c:355:27
 1e0f0c2:    01 70             	r1 = 0			  ## log.c:357:17
 1e0f0c4:    09 50             	h[r0 + 0] = r1			  ## log.c:357:17
 1e0f0c6:    1c 50             	h[r0 + 2] = r4			  ## log.c:358:21
 1e0f0c8:    54 01             	{pc, r4} = [sp++]			  ## log.c:361:5


printf:
 1e0f0ca:    61 01             	[--sp] = {r3-r1}			  ## printf-stdarg.c:331:0
 1e0f0cc:    75 01             	[--sp] = {rets, r5, r4}			  ## printf-stdarg.c:331:0
 1e0f0ce:    fc 0b             	sp += -8			  ## printf-stdarg.c:331:0
 1e0f0d0:    04 08             	r4 = r0			  ## printf-stdarg.c:331:0
 1e0f0d2:    40 a1             	r0 = sp + 20			  ## printf-stdarg.c:331:0
 1e0f0d4:    18 02             	[sp+4] = r0			  ## printf-stdarg.c:335:5
 1e0f0d6:    fe 14             	call -1540 <system_text_start : 1e0ead4 >			  ## printf-stdarg.c:338:9
 1e0f0d8:    11 20             	if (r0 == 0) goto 34 <printf+0x32 : 1e0f0fc >			  ## printf-stdarg.c:338:9
 1e0f0da:    00 fb 00 01       	r0 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## printf-stdarg.c:339:29
 1e0f0de:    e4 17             	call -56 <log_output_start : 1e0f0a8 >			  ## printf-stdarg.c:339:29
 1e0f0e0:    05 08             	r5 = r0			  ## printf-stdarg.c:339:29
 1e0f0e2:    1f 2a             	if (r5 == 0) goto 62 <printf+0x58 : 1e0f122 >
 1e0f0e4:    13 02             	r3 = [sp+4]			  ## printf-stdarg.c:345:46
 1e0f0e6:    40 9a             	r0 = r5 + 4			  ## printf-stdarg.c:343:19
 1e0f0e8:    08 02             	[sp] = r0			  ## printf-stdarg.c:343:15
 1e0f0ea:    51 fc 03 01       	r1 = r5 + 259			  ## printf-stdarg.c:345:31
 1e0f0ee:    00 a0             	r0 = sp + 0			  ## printf-stdarg.c:345:31
 1e0f0f0:    42 08             	r2 = r4			  ## printf-stdarg.c:345:19
 1e0f0f2:    e3 15             	call -1082 <print : 1e0ecba >			  ## printf-stdarg.c:345:19
 1e0f0f4:    08 5a             	h[r5 + 0] = r0			  ## printf-stdarg.c:345:17
 1e0f0f6:    50 08             	r0 = r5			  ## printf-stdarg.c:347:9
 1e0f0f8:    ac 17             	call -168 <log_output_end : 1e0f052 >			  ## printf-stdarg.c:347:9
 1e0f0fa:    13 18             	goto 38 <printf+0x58 : 1e0f122 >			  ## printf-stdarg.c:347:9
 1e0f0fc:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >
 1e0f102:    02 18             	goto 4 <printf+0x3E : 1e0f108 >
 1e0f104:    59 61             	b[r0 + 21] = r1			  ## log.c:409:18
 1e0f106:    14 80             	r4 += 1			  ## printf-stdarg.c:353:19
 1e0f108:    01 68             	r1 = b[r4 + 0] (u)			  ## printf-stdarg.c:351:16
 1e0f10a:    a1 e0 fb 0f       	if (r1 == 10) goto -10 <printf+0x3A : 1e0f104 >			  ## printf-stdarg.c:351:16
 1e0f10e:    d1 e0 f9 0f       	if (r1 == 13) goto -14 <printf+0x3A : 1e0f104 >
 1e0f112:    06 22             	if (r1 == 0) goto 12 <printf+0x56 : 1e0f120 >
 1e0f114:    03 17             	call -506 <log_print_time : 1e0ef1c >			  ## printf-stdarg.c:356:13
 1e0f116:    13 02             	r3 = [sp+4]			  ## printf-stdarg.c:357:42
 1e0f118:    00 70             	r0 = 0			  ## printf-stdarg.c:357:19
 1e0f11a:    01 70             	r1 = 0			  ## printf-stdarg.c:357:19
 1e0f11c:    42 08             	r2 = r4			  ## printf-stdarg.c:357:19
 1e0f11e:    cd 15             	call -1126 <print : 1e0ecba >			  ## printf-stdarg.c:357:19
 1e0f120:    b5 17             	call -150 <log_output_unlock : 1e0f08c >			  ## printf-stdarg.c:360:9
 1e0f122:    04 0a             	sp += 8
 1e0f124:    15 01             	{rets, r5, r4} = [sp++]
 1e0f126:    06 0a             	sp += 12
 1e0f128:    20 00             	rts


log_print:
 1e0f12a:    63 01             	[--sp] = {r3}			  ## log.c:244:0
 1e0f12c:    78 01             	[--sp] = {rets, r8-r4}			  ## log.c:244:0
 1e0f12e:    fc 0b             	sp += -8			  ## log.c:244:0
 1e0f130:    26 08             	r6 = r2			  ## log.c:244:0
 1e0f132:    04 08             	r4 = r0			  ## log.c:244:0
 1e0f134:    04 e0 9d b0       	ifs (r4 < 0) goto 314 <log_print+0x148 : 1e0f272 >			  ## log.c:244:0
 1e0f138:    00 a2             	r0 = sp + 32			  ## log.c:244:0
 1e0f13a:    08 02             	[sp] = r0			  ## log.c:255:5
 1e0f13c:    cb 14             	call -1642 <system_text_start : 1e0ead4 >			  ## log.c:257:9
 1e0f13e:    c8 ff 78 64 e1 01 	r8 = 31548536 <log_str : 1e16478 >
 1e0f144:    1c 20             	if (r0 == 0) goto 56 <log_print+0x54 : 1e0f17e >
 1e0f146:    00 fb 00 01       	r0 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## log.c:259:14
 1e0f14a:    ae 17             	call -164 <log_output_start : 1e0f0a8 >			  ## log.c:259:14
 1e0f14c:    05 08             	r5 = r0			  ## log.c:259:14
 1e0f14e:    91 2a             	if (r5 == 0) goto 290 <log_print+0x148 : 1e0f272 >
 1e0f150:    00 70             	r0 = 0
 1e0f152:    0a 18             	goto 20 <log_print+0x3E : 1e0f168 >
 1e0f154:    02 5a             	r2 = h[r5 + 0] (u)			  ## log.c:382:13
 1e0f156:    13 5a             	r3 = h[r5 + 2] (u)			  ## log.c:382:23
 1e0f158:    32 f2 05 20       	if (r2 >= r3) goto 10 <log_print+0x3C : 1e0f166 >			  ## log.c:382:23
 1e0f15c:    13 94             	r3 = r2 + 1			  ## log.c:383:24
 1e0f15e:    57 08             	r7 = r5			  ## log.c:383:24
 1e0f160:    93 f8 00 72       	h[r7 ++= r2] = r3			  ## log.c:383:24
 1e0f164:    49 6e             	b[r7 + 4] = r1			  ## log.c:383:28
 1e0f166:    10 80             	r0 += 1			  ## log.c:267:20
 1e0f168:    01 fa 00 60       	r1 = b[r6+r0] (u)			  ## log.c:264:16
 1e0f16c:    a1 e0 f2 0f       	if (r1 == 10) goto -28 <log_print+0x2A : 1e0f154 >			  ## log.c:264:16
 1e0f170:    d1 e0 f0 0f       	if (r1 == 13) goto -32 <log_print+0x2A : 1e0f154 >
 1e0f174:    2e 32             	if (r1 != 0) goto 92 <log_print+0xA8 : 1e0f1d2 >
 1e0f176:    50 08             	r0 = r5			  ## log.c:271:13
 1e0f178:    80 f3 84 01       	call 776 <lbuf_free : 1e0f484 >			  ## log.c:271:13
 1e0f17c:    7a 18             	goto 244 <log_print+0x148 : 1e0f272 >			  ## log.c:271:13
 1e0f17e:    00 70             	r0 = 0
 1e0f180:    c7 ff b0 20 00 00 	r7 = 8368 <gatt_client_conn_handle : 20b0 >
 1e0f186:    02 18             	goto 4 <log_print+0x62 : 1e0f18c >
 1e0f188:    59 6f             	b[r7 + 21] = r1			  ## log.c:409:18
 1e0f18a:    10 80             	r0 += 1			  ## log.c:305:20
 1e0f18c:    01 fa 00 60       	r1 = b[r6+r0] (u)			  ## log.c:302:16
 1e0f190:    a1 e0 fa 0f       	if (r1 == 10) goto -12 <log_print+0x5E : 1e0f188 >			  ## log.c:302:16
 1e0f194:    d1 e0 f8 0f       	if (r1 == 13) goto -16 <log_print+0x5E : 1e0f188 >
 1e0f198:    63 22             	if (r1 == 0) goto 198 <log_print+0x136 : 1e0f260 >
 1e0f19a:    05 bc             	r5 = r6 + r0			  ## log.c:308:17
 1e0f19c:    34 e0 5a b0       	ifs (r4 < 3) goto 180 <log_print+0x12A : 1e0f254 >			  ## log.c:308:17
 1e0f1a0:    00 e0 02 c0       	ifs (r0 > 0) goto 4 <log_print+0x7E : 1e0f1a8 >
 1e0f1a4:    a0 70             	r0 = 10			  ## log.c:409:18
 1e0f1a6:    58 6f             	b[r7 + 21] = r0			  ## log.c:409:18
 1e0f1a8:    a0 c0             	r0 = r4 << 2			  ## log.c:318:38
 1e0f1aa:    80 09             	r0 += r8			  ## log.c:318:38
 1e0f1ac:    04 f6 f4 0f       	r4 = [r0 + -12]			  ## log.c:318:24
 1e0f1b0:    b5 16             	call -662 <log_print_time : 1e0ef1c >			  ## log.c:314:13
 1e0f1b2:    80 f9 01 40       	r0 = b[r4 ++= 1] (u)			  ## log.c:320:24
 1e0f1b6:    05 20             	if (r0 == 0) goto 10 <log_print+0x98 : 1e0f1c2 >
 1e0f1b8:    01 08             	r1 = r0
 1e0f1ba:    80 f9 01 40       	r0 = b[r4 ++= 1] (u)			  ## log.c:320:24
 1e0f1be:    fc 31             	if (r0 != 0) goto -8 <log_print+0x8E : 1e0f1b8 >			  ## log.c:320:24
 1e0f1c0:    59 6f             	b[r7 + 21] = r1			  ## log.c:409:18
 1e0f1c2:    03 02             	r3 = [sp]			  ## log.c:326:36
 1e0f1c4:    00 70             	r0 = 0			  ## log.c:326:13
 1e0f1c6:    01 70             	r1 = 0			  ## log.c:326:13
 1e0f1c8:    52 08             	r2 = r5			  ## log.c:326:13
 1e0f1ca:    77 15             	call -1298 <print : 1e0ecba >			  ## log.c:326:13
 1e0f1cc:    a0 70             	r0 = 10			  ## log.c:409:18
 1e0f1ce:    58 6f             	b[r7 + 21] = r0			  ## log.c:409:18
 1e0f1d0:    47 18             	goto 142 <log_print+0x136 : 1e0f260 >			  ## log.c:409:18
 1e0f1d2:    02 bc             	r2 = r6 + r0			  ## log.c:275:13
 1e0f1d4:    34 e0 23 b0       	ifs (r4 < 3) goto 70 <log_print+0xF4 : 1e0f21e >			  ## log.c:275:13
 1e0f1d8:    00 e0 0e c0       	ifs (r0 > 0) goto 28 <log_print+0xCE : 1e0f1f8 >
 1e0f1dc:    11 5a             	r1 = h[r5 + 2] (u)
 1e0f1de:    03 5a             	r3 = h[r5 + 0] (u)
 1e0f1e0:    60 fb 01 09       	r0 = 1 - r0			  ## log.c:275:13
 1e0f1e4:    a6 70             	r6 = 10
 1e0f1e6:    e7 04             	r7 = r3.l (u)			  ## log.c:382:17
 1e0f1e8:    17 f2 04 20       	if (r7 >= r1) goto 8 <log_print+0xCA : 1e0f1f4 >			  ## log.c:382:17
 1e0f1ec:    13 80             	r3 += 1			  ## log.c:383:24
 1e0f1ee:    0b 5a             	h[r5 + 0] = r3			  ## log.c:383:24
 1e0f1f0:    57 09             	r7 += r5			  ## log.c:383:9
 1e0f1f2:    4e 6e             	b[r7 + 4] = r6			  ## log.c:383:28
 1e0f1f4:    50 f3 f7 ff       	if (--r0 != 0) goto -18 <log_print+0xBC : 1e0f1e6 >
 1e0f1f8:    a0 c0             	r0 = r4 << 2			  ## log.c:280:34
 1e0f1fa:    80 09             	r0 += r8			  ## log.c:280:34
 1e0f1fc:    00 f6 f4 0f       	r0 = [r0 + -12]			  ## log.c:280:20
 1e0f200:    86 f9 01 00       	r6 = b[r0 ++= 1] (u)			  ## log.c:282:20
 1e0f204:    0c 2c             	if (r6 == 0) goto 24 <log_print+0xF4 : 1e0f21e >
 1e0f206:    11 5a             	r1 = h[r5 + 2] (u)
 1e0f208:    03 5a             	r3 = h[r5 + 0] (u)
 1e0f20a:    e7 04             	r7 = r3.l (u)			  ## log.c:382:17
 1e0f20c:    17 f2 04 20       	if (r7 >= r1) goto 8 <log_print+0xEE : 1e0f218 >			  ## log.c:382:17
 1e0f210:    13 80             	r3 += 1			  ## log.c:383:24
 1e0f212:    0b 5a             	h[r5 + 0] = r3			  ## log.c:383:24
 1e0f214:    57 09             	r7 += r5			  ## log.c:383:9
 1e0f216:    4e 6e             	b[r7 + 4] = r6			  ## log.c:383:28
 1e0f218:    86 f9 01 00       	r6 = b[r0 ++= 1] (u)			  ## log.c:282:20
 1e0f21c:    f6 3d             	if (r6 != 0) goto -20 <log_print+0xE0 : 1e0f20a >			  ## log.c:282:20
 1e0f21e:    00 5a             	r0 = h[r5 + 0] (u)			  ## log.c:288:14
 1e0f220:    46 9a             	r6 = r5 + 4			  ## log.c:288:14
 1e0f222:    60 09             	r0 += r6			  ## log.c:288:14
 1e0f224:    18 02             	[sp+4] = r0			  ## log.c:288:11
 1e0f226:    10 5a             	r0 = h[r5 + 2] (u)			  ## log.c:290:29
 1e0f228:    03 02             	r3 = [sp]			  ## log.c:290:50
 1e0f22a:    01 bc             	r1 = r6 + r0			  ## log.c:290:27
 1e0f22c:    40 a0             	r0 = sp + 4			  ## log.c:290:27
 1e0f22e:    45 15             	call -1398 <print : 1e0ecba >			  ## log.c:290:9
 1e0f230:    34 e0 0a b0       	ifs (r4 < 3) goto 20 <log_print+0x11E : 1e0f248 >
 1e0f234:    10 02             	r0 = [sp+4]			  ## log.c:293:15
 1e0f236:    11 90             	r1 = r0 + 1			  ## log.c:293:15
 1e0f238:    19 02             	[sp+4] = r1			  ## log.c:293:15
 1e0f23a:    d1 70             	r1 = 13			  ## log.c:293:18
 1e0f23c:    09 60             	b[r0 + 0] = r1			  ## log.c:293:18
 1e0f23e:    10 02             	r0 = [sp+4]			  ## log.c:294:15
 1e0f240:    11 90             	r1 = r0 + 1			  ## log.c:294:15
 1e0f242:    19 02             	[sp+4] = r1			  ## log.c:294:15
 1e0f244:    a1 70             	r1 = 10			  ## log.c:294:18
 1e0f246:    09 60             	b[r0 + 0] = r1			  ## log.c:294:18
 1e0f248:    10 02             	r0 = [sp+4]			  ## log.c:296:19
 1e0f24a:    a0 b1             	r0 = r0 - r6			  ## log.c:296:21
 1e0f24c:    08 5a             	h[r5 + 0] = r0			  ## log.c:296:17
 1e0f24e:    50 08             	r0 = r5			  ## log.c:298:9
 1e0f250:    00 17             	call -512 <log_output_end : 1e0f052 >			  ## log.c:298:9
 1e0f252:    0f 18             	goto 30 <log_print+0x148 : 1e0f272 >			  ## log.c:298:9
 1e0f254:    63 16             	call -826 <log_print_time : 1e0ef1c >			  ## log.c:314:13
 1e0f256:    03 02             	r3 = [sp]			  ## log.c:326:36
 1e0f258:    00 70             	r0 = 0			  ## log.c:326:13
 1e0f25a:    01 70             	r1 = 0			  ## log.c:326:13
 1e0f25c:    52 08             	r2 = r5			  ## log.c:326:13
 1e0f25e:    2d 15             	call -1446 <print : 1e0ecba >			  ## log.c:326:13
 1e0f260:    b7 16             	call -658 <logbuf_output : 1e0efd0 >			  ## log.c:238:5
 1e0f262:    00 70             	r0 = 0			  ## log.c:238:5
 1e0f264:    10 f9 d8 70       	b[r7 + 216] = r0			  ## log.c:238:5
 1e0f268:    c0 ff f8 23 00 00 	r0 = 9208 <log_mutex : 23f8 >			  ## log.c:240:5
 1e0f26e:    97 f3 db bd       	call 3111862 <os_mutex_post : 106e28 >			  ## log.c:240:5
 1e0f272:    04 0a             	sp += 8
 1e0f274:    18 01             	{rets, r8-r4} = [sp++]			  ## log.c:338:1
 1e0f276:    02 0a             	sp += 4			  ## log.c:338:1
 1e0f278:    20 00             	rts			  ## log.c:338:1


log_putchar:
 1e0f27a:    02 50             	r2 = h[r0 + 0] (u)			  ## log.c:381:0
 1e0f27c:    13 50             	r3 = h[r0 + 2] (u)			  ## log.c:382:23
 1e0f27e:    32 f2 04 20       	if (r2 >= r3) goto 8 <log_putchar+0x10 : 1e0f28a >			  ## log.c:382:23
 1e0f282:    13 94             	r3 = r2 + 1			  ## log.c:383:24
 1e0f284:    93 f8 00 02       	h[r0 ++= r2] = r3			  ## log.c:383:24
 1e0f288:    49 60             	b[r0 + 4] = r1			  ## log.c:383:28
 1e0f28a:    20 00             	rts			  ## log.c:385:1


log_put_u4hex:
 1e0f28c:    13 50             	r3 = h[r0 + 2] (u)			  ## log.c:389:0
 1e0f28e:    02 50             	r2 = h[r0 + 0] (u)			  ## log.c:382:13
 1e0f290:    21 fd 0f 19       	r1 = r1 & 15			  ## log.c:390:15
 1e0f294:    a1 e0 07 30       	if (r1 < 10) goto 14 <log_put_u4hex+0x1A : 1e0f2a6 >			  ## log.c:392:9
 1e0f298:    32 f2 0d 20       	if (r2 >= r3) goto 26 <log_put_u4hex+0x2A : 1e0f2b6 >
 1e0f29c:    13 94             	r3 = r2 + 1			  ## log.c:383:24
 1e0f29e:    93 f8 00 02       	h[r0 ++= r2] = r3			  ## log.c:383:24
 1e0f2a2:    71 83             	r1 += 55			  ## log.c:393:34
 1e0f2a4:    07 18             	goto 14 <log_put_u4hex+0x28 : 1e0f2b4 >			  ## log.c:393:34
 1e0f2a6:    32 f2 06 20       	if (r2 >= r3) goto 12 <log_put_u4hex+0x2A : 1e0f2b6 >
 1e0f2aa:    13 94             	r3 = r2 + 1			  ## log.c:383:24
 1e0f2ac:    93 f8 00 02       	h[r0 ++= r2] = r3			  ## log.c:383:24
 1e0f2b0:    01 fd 30 19       	r1 = r1 | 48			  ## log.c:395:29
 1e0f2b4:    49 60             	b[r0 + 4] = r1
 1e0f2b6:    20 00             	rts			  ## log.c:397:1


put_u4hex:
 1e0f2b8:    22 fd 0f 09       	r2 = r0 & 15			  ## puthex.c:33:0
 1e0f2bc:    01 fd 30 29       	r1 = r2 | 48			  ## puthex.c:40:25
 1e0f2c0:    20 fc 37 00       	r0 = r2 + 55			  ## puthex.c:38:30
 1e0f2c4:    92 e0 01 80       	if (r2 > 9) goto 2 <put_u4hex+0x12 : 1e0f2ca >
 1e0f2c8:    10 08             	r0 = r1			  ## puthex.c:37:9
 1e0f2ca:    c1 ff b0 20 00 00 	r1 = 8368 <gatt_client_conn_handle : 20b0 >			  ## log.c:409:18
 1e0f2d0:    58 63             	b[r1 + 21] = r0			  ## log.c:409:18
 1e0f2d2:    20 00             	rts			  ## puthex.c:49:1


put_buf:
 1e0f2d4:    79 01             	[--sp] = {rets, r9-r4}			  ## puthex.c:123:0
 1e0f2d6:    14 08             	r4 = r1			  ## puthex.c:123:0
 1e0f2d8:    08 08             	r8 = r0			  ## puthex.c:123:0
 1e0f2da:    bf f3 fb fb       	call -2058 <system_text_start : 1e0ead4 >			  ## puthex.c:127:9
 1e0f2de:    30 20             	if (r0 == 0) goto 96 <put_buf+0x6C : 1e0f340 >			  ## puthex.c:127:9
 1e0f2e0:    00 71             	r0 = 16			  ## puthex.c:128:45
 1e0f2e2:    e0 fe 00 04       	r0 = r4 / r0 (s)			  ## puthex.c:128:45
 1e0f2e6:    40 c0             	r0 = r0 << 1			  ## puthex.c:128:50
 1e0f2e8:    31 70             	r1 = 3			  ## puthex.c:128:35
 1e0f2ea:    80 fe 10 04       	r0 += r4 * r1			  ## puthex.c:128:39
 1e0f2ee:    a0 80             	r0 += 10			  ## puthex.c:128:54
 1e0f2f0:    db 16             	call -586 <log_output_start : 1e0f0a8 >			  ## puthex.c:128:14
 1e0f2f2:    06 08             	r6 = r0			  ## puthex.c:128:14
 1e0f2f4:    24 2c             	if (r6 == 0) goto 72 <put_buf+0x6A : 1e0f33e >
 1e0f2f6:    14 e0 1d b0       	ifs (r4 < 1) goto 58 <put_buf+0x60 : 1e0f334 >
 1e0f2fa:    05 70             	r5 = 0
 1e0f2fc:    09 72             	r9 = 32
 1e0f2fe:    61 ff 0f 59 03 00 	if ((r5 & 15) != 0) goto 6 <put_buf+0x36 : 1e0f30a >
 1e0f304:    a1 70             	r1 = 10			  ## puthex.c:135:17
 1e0f306:    60 08             	r0 = r6			  ## puthex.c:135:17
 1e0f308:    b8 17             	call -144 <log_putchar : 1e0f27a >			  ## puthex.c:135:17
 1e0f30a:    07 fa 00 85       	r7 = b[r8+r5] (u)			  ## puthex.c:137:31
 1e0f30e:    39 d1             	r1 = r7 >> 4			  ## log.c:401:27
 1e0f310:    60 08             	r0 = r6			  ## log.c:401:5
 1e0f312:    bc 17             	call -136 <log_put_u4hex : 1e0f28c >			  ## log.c:401:5
 1e0f314:    60 08             	r0 = r6			  ## log.c:402:5
 1e0f316:    71 08             	r1 = r7			  ## log.c:402:5
 1e0f318:    b9 17             	call -142 <log_put_u4hex : 1e0f28c >			  ## log.c:402:5
 1e0f31a:    00 5c             	r0 = h[r6 + 0] (u)			  ## log.c:382:13
 1e0f31c:    11 5c             	r1 = h[r6 + 2] (u)			  ## log.c:382:23
 1e0f31e:    10 f2 06 20       	if (r0 >= r1) goto 12 <put_buf+0x5A : 1e0f32e >			  ## log.c:382:23
 1e0f322:    11 90             	r1 = r0 + 1			  ## log.c:383:24
 1e0f324:    62 08             	r2 = r6			  ## log.c:383:24
 1e0f326:    91 f8 00 20       	h[r2 ++= r0] = r1			  ## log.c:383:24
 1e0f32a:    19 f9 04 20       	b[r2 + 4] = r9			  ## log.c:383:28
 1e0f32e:    15 80             	r5 += 1			  ## puthex.c:133:35
 1e0f330:    54 f2 e5 1f       	if (r4 != r5) goto -54 <put_buf+0x2A : 1e0f2fe >
 1e0f334:    a1 70             	r1 = 10			  ## puthex.c:139:9
 1e0f336:    60 08             	r0 = r6			  ## puthex.c:139:9
 1e0f338:    a0 17             	call -192 <log_putchar : 1e0f27a >			  ## puthex.c:139:9
 1e0f33a:    60 08             	r0 = r6			  ## puthex.c:141:9
 1e0f33c:    8a 16             	call -748 <log_output_end : 1e0f052 >			  ## puthex.c:141:9
 1e0f33e:    59 01             	{pc, r9-r4} = [sp++]			  ## puthex.c:165:1
 1e0f340:    c5 ff b0 20 00 00 	r5 = 8368 <gatt_client_conn_handle : 20b0 >
 1e0f346:    14 e0 12 b0       	ifs (r4 < 1) goto 36 <put_buf+0x9A : 1e0f36e >
 1e0f34a:    06 70             	r6 = 0
 1e0f34c:    a9 70             	r9 = 10
 1e0f34e:    07 72             	r7 = 32
 1e0f350:    61 ff 0f 69 02 00 	if ((r6 & 15) != 0) goto 4 <put_buf+0x86 : 1e0f35a >
 1e0f356:    19 f9 15 50       	b[r5 + 21] = r9			  ## log.c:409:18
 1e0f35a:    03 fa 00 86       	r3 = b[r8+r6] (u)			  ## puthex.c:149:23
 1e0f35e:    18 d1             	r0 = r3 >> 4			  ## puthex.c:93:19
 1e0f360:    ab 17             	call -170 <put_u4hex : 1e0f2b8 >			  ## puthex.c:93:5
 1e0f362:    30 08             	r0 = r3			  ## puthex.c:94:5
 1e0f364:    a9 17             	call -174 <put_u4hex : 1e0f2b8 >			  ## puthex.c:94:5
 1e0f366:    16 80             	r6 += 1			  ## puthex.c:145:35
 1e0f368:    5f 6b             	b[r5 + 21] = r7			  ## log.c:409:18
 1e0f36a:    64 f2 f1 1f       	if (r4 != r6) goto -30 <put_buf+0x7C : 1e0f350 >			  ## log.c:409:18
 1e0f36e:    a0 70             	r0 = 10			  ## log.c:409:18
 1e0f370:    58 6b             	b[r5 + 21] = r0			  ## log.c:409:18
 1e0f372:    19 01             	{rets, r9-r4} = [sp++]			  ## puthex.c:153:9
 1e0f374:    8b 1e             	goto -746 <log_output_unlock : 1e0f08c >			  ## puthex.c:153:9


puts:
 1e0f376:    75 01             	[--sp] = {rets, r5, r4}			  ## printf-stdarg.c:289:0
 1e0f378:    04 08             	r4 = r0			  ## printf-stdarg.c:289:0
 1e0f37a:    bf f3 ab fb       	call -2218 <system_text_start : 1e0ead4 >			  ## printf-stdarg.c:291:9
 1e0f37e:    11 20             	if (r0 == 0) goto 34 <puts+0x2C : 1e0f3a2 >			  ## printf-stdarg.c:291:9
 1e0f380:    40 08             	r0 = r4			  ## printf-stdarg.c:292:46
 1e0f382:    97 f3 bb bd       	call 3111798 <strlen : 106efc >			  ## printf-stdarg.c:292:46
 1e0f386:    20 80             	r0 += 2			  ## printf-stdarg.c:292:58
 1e0f388:    8f 16             	call -738 <log_output_start : 1e0f0a8 >			  ## printf-stdarg.c:292:29
 1e0f38a:    05 08             	r5 = r0			  ## printf-stdarg.c:292:29
 1e0f38c:    04 3a             	if (r5 != 0) goto 8 <puts+0x20 : 1e0f396 >
 1e0f38e:    55 01             	{pc, r5, r4} = [sp++]
 1e0f390:    11 04             	r1 = r0.b0 (s)			  ## printf-stdarg.c:297:13
 1e0f392:    50 08             	r0 = r5			  ## printf-stdarg.c:297:13
 1e0f394:    72 17             	call -284 <log_putchar : 1e0f27a >			  ## printf-stdarg.c:297:13
 1e0f396:    80 f9 01 40       	r0 = b[r4 ++= 1] (u)
 1e0f39a:    fa 31             	if (r0 != 0) goto -12 <puts+0x1A : 1e0f390 >
 1e0f39c:    50 08             	r0 = r5			  ## printf-stdarg.c:300:9
 1e0f39e:    15 01             	{rets, r5, r4} = [sp++]			  ## printf-stdarg.c:300:9
 1e0f3a0:    58 1e             	goto -848 <log_output_end : 1e0f052 >			  ## printf-stdarg.c:300:9
 1e0f3a2:    c5 ff b0 20 00 00 	r5 = 8368 <gatt_client_conn_handle : 20b0 >
 1e0f3a8:    02 18             	goto 4 <puts+0x38 : 1e0f3ae >
 1e0f3aa:    58 6b             	b[r5 + 21] = r0			  ## log.c:409:18
 1e0f3ac:    14 80             	r4 += 1			  ## printf-stdarg.c:306:16
 1e0f3ae:    00 68             	r0 = b[r4 + 0] (u)			  ## printf-stdarg.c:304:16
 1e0f3b0:    a0 e0 fb 0f       	if (r0 == 10) goto -10 <puts+0x34 : 1e0f3aa >			  ## printf-stdarg.c:304:16
 1e0f3b4:    d0 e0 f9 0f       	if (r0 == 13) goto -14 <puts+0x34 : 1e0f3aa >
 1e0f3b8:    0a 20             	if (r0 == 0) goto 20 <puts+0x58 : 1e0f3ce >
 1e0f3ba:    b0 15             	call -1184 <log_print_time : 1e0ef1c >			  ## printf-stdarg.c:309:13
 1e0f3bc:    00 68             	r0 = b[r4 + 0] (u)			  ## printf-stdarg.c:309:13
 1e0f3be:    07 20             	if (r0 == 0) goto 14 <puts+0x58 : 1e0f3ce >			  ## printf-stdarg.c:309:13
 1e0f3c0:    11 70             	r1 = 1
 1e0f3c2:    02 08             	r2 = r0
 1e0f3c4:    00 fa 00 41       	r0 = b[r4+r1] (u)			  ## printf-stdarg.c:311:16
 1e0f3c8:    11 80             	r1 += 1			  ## printf-stdarg.c:311:9
 1e0f3ca:    fb 31             	if (r0 != 0) goto -10 <puts+0x4C : 1e0f3c2 >			  ## printf-stdarg.c:311:9
 1e0f3cc:    5a 6b             	b[r5 + 21] = r2			  ## log.c:409:18
 1e0f3ce:    15 01             	{rets, r5, r4} = [sp++]			  ## printf-stdarg.c:315:9
 1e0f3d0:    5d 1e             	goto -838 <log_output_unlock : 1e0f08c >			  ## printf-stdarg.c:315:9


printf_buf:
 1e0f3d2:    80 1f             	goto -256 <put_buf : 1e0f2d4 >			  ## puthex.c:168:0


putchar:
 1e0f3d4:    75 01             	[--sp] = {rets, r5, r4}			  ## puthex.c:10:0
 1e0f3d6:    04 08             	r4 = r0			  ## puthex.c:10:0
 1e0f3d8:    bf f3 7c fb       	call -2312 <system_text_start : 1e0ead4 >			  ## puthex.c:12:9
 1e0f3dc:    09 20             	if (r0 == 0) goto 18 <putchar+0x1C : 1e0f3f0 >			  ## puthex.c:12:9
 1e0f3de:    10 70             	r0 = 1			  ## puthex.c:13:29
 1e0f3e0:    63 16             	call -826 <log_output_start : 1e0f0a8 >			  ## puthex.c:13:29
 1e0f3e2:    05 08             	r5 = r0			  ## puthex.c:13:29
 1e0f3e4:    0a 2a             	if (r5 == 0) goto 20 <putchar+0x26 : 1e0f3fa >
 1e0f3e6:    11 05             	r1 = r4.b0 (s)			  ## puthex.c:15:13
 1e0f3e8:    48 17             	call -368 <log_putchar : 1e0f27a >			  ## puthex.c:15:13
 1e0f3ea:    50 08             	r0 = r5			  ## puthex.c:16:13
 1e0f3ec:    32 16             	call -924 <log_output_end : 1e0f052 >			  ## puthex.c:16:13
 1e0f3ee:    05 18             	goto 10 <putchar+0x26 : 1e0f3fa >			  ## puthex.c:16:13
 1e0f3f0:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## log.c:409:18
 1e0f3f6:    5c 61             	b[r0 + 21] = r4			  ## log.c:409:18
 1e0f3f8:    49 16             	call -878 <log_output_unlock : 1e0f08c >			  ## puthex.c:20:9
 1e0f3fa:    40 08             	r0 = r4			  ## puthex.c:29:5
 1e0f3fc:    55 01             	{pc, r5, r4} = [sp++]			  ## puthex.c:29:5


log_early_init:
 1e0f3fe:    34 00             	[--sp] = rets			  ## log.c:415:0
 1e0f400:    c0 ff f8 23 00 00 	r0 = 9208 <log_mutex : 23f8 >			  ## log.c:416:5
 1e0f406:    97 f3 09 bd       	call 3111442 <os_mutex_create : 106e1c >			  ## log.c:416:5
 1e0f40a:    00 fb 00 04       	r0 = 1024 <BTCTLER_LE_RAM_TOTAL+0x22 : 400 >			  ## log.c:417:37
 1e0f40e:    80 f3 d2 02       	call 1444 <malloc : 1e0f9b6 >			  ## log.c:417:37
 1e0f412:    c1 ff b0 20 00 00 	r1 = 8368 <gatt_client_conn_handle : 20b0 >			  ## log.c:417:14
 1e0f418:    10 f6 d0 10       	[r1 + 208] = r0			  ## log.c:417:14
 1e0f41c:    01 fb 00 04       	r1 = 1024 <BTCTLER_LE_RAM_TOTAL+0x22 : 400 >			  ## log.c:419:5
 1e0f420:    88 01             	{rets} = [sp++]			  ## log.c:419:5
 1e0f422:    c0 f3 a0 01       	goto 832 <lbuf_init : 1e0f766 >			  ## log.c:419:5


assert_printf:
 1e0f426:    04 08             	r4 = r0			  ## printf-stdarg.c:372:0
 1e0f428:    61 01             	[--sp] = {r3-r1}			  ## printf-stdarg.c:372:0
 1e0f42a:    fe 0b             	sp += -4			  ## printf-stdarg.c:372:0
 1e0f42c:    43 a0             	r3 = sp + 4			  ## printf-stdarg.c:372:0
 1e0f42e:    0b 02             	[sp] = r3			  ## printf-stdarg.c:376:5
 1e0f430:    00 70             	r0 = 0			  ## printf-stdarg.c:378:11
 1e0f432:    01 70             	r1 = 0			  ## printf-stdarg.c:378:11
 1e0f434:    42 08             	r2 = r4			  ## printf-stdarg.c:378:11
 1e0f436:    41 14             	call -1918 <print : 1e0ecba >			  ## printf-stdarg.c:378:11
 1e0f438:    97 f3 b0 bc       	call 3111264 <local_irq_disable : 106d9c >			  ## printf-stdarg.c:382:5
 1e0f43c:    ff 1f             	goto -2 <assert_printf+0x16 : 1e0f43c >			  ## printf-stdarg.c:383:5


snprintf:
 1e0f43e:    63 01             	[--sp] = {r3}			  ## printf-stdarg.c:389:0
 1e0f440:    34 00             	[--sp] = rets			  ## printf-stdarg.c:389:0
 1e0f442:    fc 0b             	sp += -8			  ## printf-stdarg.c:389:0
 1e0f444:    c3 a0             	r3 = sp + 12			  ## printf-stdarg.c:389:0
 1e0f446:    0b 02             	[sp] = r3			  ## printf-stdarg.c:392:5
 1e0f448:    18 02             	[sp+4] = r0
 1e0f44a:    01 09             	r1 += r0			  ## printf-stdarg.c:399:28
 1e0f44c:    40 a0             	r0 = sp + 4
 1e0f44e:    35 14             	call -1942 <print : 1e0ecba >			  ## printf-stdarg.c:399:12
 1e0f450:    04 0a             	sp += 8
 1e0f452:    88 01             	{rets} = [sp++]			  ## printf-stdarg.c:394:5
 1e0f454:    02 0a             	sp += 4			  ## printf-stdarg.c:394:5
 1e0f456:    20 00             	rts			  ## printf-stdarg.c:394:5


vsnprintf:
 1e0f458:    34 00             	[--sp] = rets			  ## printf-stdarg.c:398:0
 1e0f45a:    fe 0b             	sp += -4			  ## printf-stdarg.c:398:0
 1e0f45c:    08 02             	[sp] = r0			  ## printf-stdarg.c:398:0
 1e0f45e:    01 09             	r1 += r0			  ## printf-stdarg.c:399:28
 1e0f460:    00 a0             	r0 = sp + 0
 1e0f462:    2b 14             	call -1962 <print : 1e0ecba >			  ## printf-stdarg.c:399:12
 1e0f464:    02 0a             	sp += 4
 1e0f466:    30 00             	pc = [sp++]			  ## printf-stdarg.c:399:5


vprintf:
 1e0f468:    34 00             	[--sp] = rets			  ## printf-stdarg.c:414:0
 1e0f46a:    13 08             	r3 = r1			  ## printf-stdarg.c:414:0
 1e0f46c:    02 08             	r2 = r0			  ## printf-stdarg.c:414:0
 1e0f46e:    00 70             	r0 = 0			  ## printf-stdarg.c:417:12
 1e0f470:    01 70             	r1 = 0			  ## printf-stdarg.c:417:12
 1e0f472:    23 14             	call -1978 <print : 1e0ecba >			  ## printf-stdarg.c:417:12
 1e0f474:    30 00             	pc = [sp++]			  ## printf-stdarg.c:419:5


perror:
 1e0f476:    00 70             	r0 = 0			  ## printf-stdarg.c:423:0
 1e0f478:    20 00             	rts			  ## printf-stdarg.c:424:5


log_putbyte:
 1e0f47a:    c1 ff b0 20 00 00 	r1 = 8368 <gatt_client_conn_handle : 20b0 >			  ## log.c:407:0
 1e0f480:    58 63             	b[r1 + 21] = r0			  ## log.c:409:18
 1e0f482:    20 00             	rts			  ## log.c:410:1


lbuf_free:
 1e0f484:    78 01             	[--sp] = {rets, r8-r4}			  ## lbuf.c:493:0
 1e0f486:    28 fb 00 13       	r1 = rets			  ## lbuf.c:503:5
 1e0f48a:    20 20             	if (r0 == 0) goto 64 <lbuf_free+0x48 : 1e0f4cc >
 1e0f48c:    07 fc ec ff       	r7 = r0 + -20
 1e0f490:    50 5e             	r0 = h[r7 + 10] (u)			  ## lbuf.c:512:48
 1e0f492:    26 be             	r6 = r7 - r0			  ## lbuf.c:512:46
 1e0f494:    b4 5c             	r4 = h[r6 + 22] (u)			  ## lbuf.c:516:14
 1e0f496:    45 6d             	r5 = b[r6 + 20] (u)			  ## lbuf.c:516:14
 1e0f498:    08 f7 08 70       	r8 = h[r7 + 8] (u)			  ## lbuf.c:519:22
 1e0f49c:    97 f3 7e bc       	call 3111164 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0f4a0:    c0 6e             	r0 = b[r7 + 12] (u)			  ## lbuf.c:524:9
 1e0f4a2:    f0 8f             	r0 += -1			  ## lbuf.c:524:9
 1e0f4a4:    c8 6e             	b[r7 + 12] = r0			  ## lbuf.c:524:9
 1e0f4a6:    c1 ff ff ff 01 00 	r1 = 131071 <_IRQ_MEM_ADDR+0x100FF : 1ffff >			  ## lbuf.c:516:14
 1e0f4ac:    43 ba             	r3 = r5 + r1			  ## lbuf.c:516:14
 1e0f4ae:    44 81             	r4 += 20			  ## lbuf.c:516:14
 1e0f4b0:    e2 fd 40 13       	r1 = r3 & r4			  ## lbuf.c:516:14
 1e0f4b4:    62 b3             	r2 = r1 - r5			  ## lbuf.c:518:40
 1e0f4b6:    05 70             	r5 = 0			  ## lbuf.c:518:40
 1e0f4b8:    01 70             	r1 = 0			  ## lbuf.c:518:40
 1e0f4ba:    43 f0 01 00       	if ((r3 & r4) == 0) goto 2 <lbuf_free+0x3C : 1e0f4c0 >
 1e0f4be:    21 08             	r1 = r2			  ## lbuf.c:518:40
 1e0f4c0:    60 ff ff 09 06 00 	if ((r0 & 255) == 0) goto 12 <lbuf_free+0x4E : 1e0f4d2 >
 1e0f4c6:    97 f3 67 bc       	call 3111118 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0f4ca:    01 18             	goto 2 <lbuf_free+0x4A : 1e0f4ce >			  ## spinlock.h:88:5
 1e0f4cc:    05 70             	r5 = 0
 1e0f4ce:    50 08             	r0 = r5			  ## lbuf.c:577:1
 1e0f4d0:    58 01             	{pc, r8-r4} = [sp++]			  ## lbuf.c:577:1
 1e0f4d2:    02 4e             	r2 = [r7 + 0]			  ## list.h:165:36
 1e0f4d4:    13 4e             	r3 = [r7 + 4]			  ## list.h:165:23
 1e0f4d6:    40 be             	r0 = r7 + r1			  ## lbuf.c:518:40
 1e0f4d8:    1b 44             	[r2 + 4] = r3			  ## list.h:159:16
 1e0f4da:    0a 46             	[r3 + 0] = r2			  ## list.h:160:16
 1e0f4dc:    18 f6 08 00       	[r0 + 8] = r8			  ## lbuf.c:534:14
 1e0f4e0:    21 4c             	r1 = [r6 + 8]			  ## lbuf.c:537:5
 1e0f4e2:    82 9c             	r2 = r6 + 8			  ## lbuf.c:537:5
 1e0f4e4:    21 f2 0f 00       	if (r1 == r2) goto 30 <lbuf_free+0x82 : 1e0f506 >
 1e0f4e8:    61 f2 10 90       	if (r1 <= r6) goto 32 <lbuf_free+0x88 : 1e0f50c >
 1e0f4ec:    63 4c             	r3 = [r6 + 24]			  ## lbuf.c:539:67
 1e0f4ee:    63 09             	r3 += r6			  ## lbuf.c:539:59
 1e0f4f0:    31 f2 0c 80       	if (r1 > r3) goto 24 <lbuf_free+0x88 : 1e0f50c >			  ## lbuf.c:539:59
 1e0f4f4:    01 f2 0d 80       	if (r1 > r0) goto 26 <lbuf_free+0x8E : 1e0f512 >			  ## lbuf.c:544:24
 1e0f4f8:    23 42             	r3 = [r1 + 8]			  ## lbuf.c:544:41
 1e0f4fa:    13 09             	r3 += r1			  ## lbuf.c:544:36
 1e0f4fc:    03 f2 27 80       	if (r3 > r0) goto 78 <lbuf_free+0xCA : 1e0f54e >			  ## lbuf.c:544:36
 1e0f500:    01 42             	r1 = [r1 + 0]			  ## lbuf.c:537:5
 1e0f502:    21 f2 f1 1f       	if (r1 != r2) goto -30 <lbuf_free+0x64 : 1e0f4e8 >
 1e0f506:    43 94             	r3 = r2 + 4			  ## list.h:154:28
 1e0f508:    21 08             	r1 = r2			  ## list.h:154:28
 1e0f50a:    04 18             	goto 8 <lbuf_free+0x90 : 1e0f514 >			  ## list.h:154:28
 1e0f50c:    60 f3 00 00       	trigger			  ## lbuf.c:540:13
 1e0f510:    da 1f             	goto -76 <lbuf_free+0x42 : 1e0f4c6 >			  ## lbuf.c:540:13
 1e0f512:    43 92             	r3 = r1 + 4			  ## lbuf.c:551:46
 1e0f514:    02 46             	r2 = [r3 + 0]
 1e0f516:    08 46             	[r3 + 0] = r0			  ## list.h:137:16
 1e0f518:    09 40             	[r0 + 0] = r1			  ## list.h:138:16
 1e0f51a:    1a 40             	[r0 + 4] = r2			  ## list.h:139:16
 1e0f51c:    08 44             	[r2 + 0] = r0			  ## list.h:140:16
 1e0f51e:    23 44             	r3 = [r2 + 8]			  ## lbuf.c:563:27
 1e0f520:    01 40             	r1 = [r0 + 0]			  ## lbuf.c:561:12
 1e0f522:    84 b6             	r4 = r3 + r2			  ## lbuf.c:563:19
 1e0f524:    04 f2 06 10       	if (r4 != r0) goto 12 <lbuf_free+0xB0 : 1e0f534 >			  ## lbuf.c:563:19
 1e0f528:    38 09             	r8 += r3			  ## lbuf.c:564:19
 1e0f52a:    18 f6 08 20       	[r2 + 8] = r8			  ## lbuf.c:564:19
 1e0f52e:    1a 42             	[r1 + 4] = r2			  ## list.h:159:16
 1e0f530:    09 44             	[r2 + 0] = r1			  ## list.h:160:16
 1e0f532:    20 08             	r0 = r2			  ## list.h:160:16
 1e0f534:    80 fb 80 20       	r2 = r0 + r8			  ## lbuf.c:568:18
 1e0f538:    15 70             	r5 = 1
 1e0f53a:    12 f2 c4 1f       	if (r2 != r1) goto -120 <lbuf_free+0x42 : 1e0f4c6 >
 1e0f53e:    22 42             	r2 = [r1 + 8]			  ## lbuf.c:569:27
 1e0f540:    82 09             	r2 += r8			  ## lbuf.c:569:18
 1e0f542:    2a 40             	[r0 + 8] = r2			  ## lbuf.c:569:18
 1e0f544:    00 42             	r0 = [r1 + 0]			  ## list.h:165:36
 1e0f546:    11 42             	r1 = [r1 + 4]			  ## list.h:165:23
 1e0f548:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e0f54a:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e0f54c:    bc 1f             	goto -136 <lbuf_free+0x42 : 1e0f4c6 >			  ## list.h:160:16
 1e0f54e:    60 f3 00 00       	trigger			  ## lbuf.c:545:13
 1e0f552:    b9 1f             	goto -142 <lbuf_free+0x42 : 1e0f4c6 >			  ## lbuf.c:545:13


lbuf_realloc:
 1e0f554:    79 01             	[--sp] = {rets, r9-r4}			  ## lbuf.c:310:0
 1e0f556:    09 08             	r9 = r0			  ## lbuf.c:310:0
 1e0f558:    04 fc f4 ff       	r4 = r0 + -12			  ## lbuf.c:310:0
 1e0f55c:    10 58             	r0 = h[r4 + 2] (u)			  ## lbuf.c:316:67
 1e0f55e:    90 fb 00 39       	r3 = r9 - r0			  ## lbuf.c:315:28
 1e0f562:    80 f9 ec 3f       	r0 = b[r3 ++= -20] (u)			  ## lbuf.c:322:12
 1e0f566:    06 fc ff ff       	r6 = r0 + -1			  ## lbuf.c:322:12
 1e0f56a:    e2 fd 10 56       	r5 = r6 & r1			  ## lbuf.c:322:12
 1e0f56e:    60 b1             	r0 = r0 - r5			  ## lbuf.c:322:12
 1e0f570:    05 70             	r5 = 0			  ## lbuf.c:322:12
 1e0f572:    16 f0 01 00       	if ((r6 & r1) == 0) goto 2 <lbuf_realloc+0x24 : 1e0f578 >
 1e0f576:    05 08             	r5 = r0			  ## lbuf.c:322:12
 1e0f578:    00 58             	r0 = h[r4 + 0] (u)
 1e0f57a:    15 09             	r5 += r1			  ## lbuf.c:322:12
 1e0f57c:    05 f2 03 d0       	ifs (r5 <= r0) goto 6 <lbuf_realloc+0x32 : 1e0f586 >
 1e0f580:    8f f3 2e 9f       	call 2047580 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e0f584:    00 58             	r0 = h[r4 + 0] (u)			  ## cpu.h:148:5
 1e0f586:    50 f2 28 d0       	ifs (r0 <= r5) goto 80 <lbuf_realloc+0x86 : 1e0f5da >
 1e0f58a:    41 67             	r1 = b[r3 + 20] (u)			  ## lbuf.c:330:14
 1e0f58c:    b6 56             	r6 = h[r3 + 22] (u)			  ## lbuf.c:330:14
 1e0f58e:    c7 ff ff ff 01 00 	r7 = 131071 <_IRQ_MEM_ADDR+0x100FF : 1ffff >			  ## lbuf.c:330:14
 1e0f594:    17 09             	r7 += r1			  ## lbuf.c:330:14
 1e0f596:    46 81             	r6 += 20			  ## lbuf.c:330:14
 1e0f598:    e2 fd 60 27       	r2 = r7 & r6			  ## lbuf.c:330:14
 1e0f59c:    a8 b2             	r8 = r1 - r2			  ## lbuf.c:330:14
 1e0f59e:    01 70             	r1 = 0			  ## lbuf.c:330:14
 1e0f5a0:    67 f0 01 00       	if ((r7 & r6) == 0) goto 2 <lbuf_realloc+0x52 : 1e0f5a6 >			  ## lbuf.c:330:14
 1e0f5a4:    81 08             	r1 = r8			  ## lbuf.c:330:14
 1e0f5a6:    67 b1             	r7 = r0 - r5			  ## lbuf.c:337:20
 1e0f5a8:    c7 e0 17 30       	if (r7 < 12) goto 46 <lbuf_realloc+0x86 : 1e0f5da >			  ## lbuf.c:337:20
 1e0f5ac:    16 09             	r6 += r1			  ## lbuf.c:334:40
 1e0f5ae:    72 c0             	r2 = r6 << 1			  ## lbuf.c:337:31
 1e0f5b0:    27 f2 13 b0       	ifs (r7 < r2) goto 38 <lbuf_realloc+0x86 : 1e0f5da >			  ## lbuf.c:337:31
 1e0f5b4:    42 bd             	r2 = r6 + r5			  ## lbuf.c:347:27
 1e0f5b6:    0a 58             	h[r4 + 0] = r2			  ## lbuf.c:347:16
 1e0f5b8:    b2 56             	r2 = h[r3 + 22] (u)			  ## lbuf.c:349:42
 1e0f5ba:    92 09             	r2 += r9			  ## lbuf.c:349:40
 1e0f5bc:    52 09             	r2 += r5			  ## lbuf.c:349:57
 1e0f5be:    21 09             	r1 += r2			  ## lbuf.c:349:64
 1e0f5c0:    02 70             	r2 = 0			  ## lbuf.c:350:23
 1e0f5c2:    da 62             	b[r1 + 13] = r2			  ## lbuf.c:350:23
 1e0f5c4:    12 70             	r2 = 1			  ## lbuf.c:351:15
 1e0f5c6:    ca 62             	b[r1 + 12] = r2			  ## lbuf.c:351:15
 1e0f5c8:    02 58             	r2 = h[r4 + 0] (u)			  ## lbuf.c:352:30
 1e0f5ca:    a0 b0             	r0 = r0 - r2			  ## lbuf.c:352:21
 1e0f5cc:    48 52             	h[r1 + 8] = r0			  ## lbuf.c:352:15
 1e0f5ce:    e0 b2             	r0 = r1 - r3			  ## lbuf.c:353:29
 1e0f5d0:    58 52             	h[r1 + 10] = r0			  ## lbuf.c:353:17
 1e0f5d2:    09 42             	[r1 + 0] = r1			  ## list.h:188:16
 1e0f5d4:    19 42             	[r1 + 4] = r1			  ## list.h:189:16
 1e0f5d6:    40 93             	r0 = r1 + 20			  ## lbuf.c:362:19
 1e0f5d8:    55 17             	call -342 <lbuf_free : 1e0f484 >			  ## lbuf.c:362:5
 1e0f5da:    59 01             	{pc, r9-r4} = [sp++]


lbuf_push:
 1e0f5dc:    75 01             	[--sp] = {rets, r5, r4}			  ## lbuf.c:405:0
 1e0f5de:    04 fc ec ff       	r4 = r0 + -20			  ## lbuf.c:405:0
 1e0f5e2:    50 58             	r0 = h[r4 + 10] (u)			  ## lbuf.c:410:63
 1e0f5e4:    65 fb 00 09       	r5 = 0 - r0			  ## lbuf.c:410:61
 1e0f5e8:    97 f3 d8 bb       	call 3110832 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0f5ec:    00 70             	r0 = 0
 1e0f5ee:    01 70             	r1 = 0
 1e0f5f0:    c8 68             	b[r4 + 12] = r0
 1e0f5f2:    04 22             	if (r1 == 0) goto 8 <lbuf_push+0x20 : 1e0f5fc >
 1e0f5f4:    11 80             	r1 += 1			  ## lbuf.c:419:25
 1e0f5f6:    81 e0 fc 1f       	if (r1 != 8) goto -8 <lbuf_push+0x16 : 1e0f5f2 >
 1e0f5fa:    03 18             	goto 6 <lbuf_push+0x26 : 1e0f602 >
 1e0f5fc:    10 80             	r0 += 1			  ## lbuf.c:421:19
 1e0f5fe:    11 70             	r1 = 1			  ## lbuf.c:421:19
 1e0f600:    f7 1f             	goto -18 <lbuf_push+0x14 : 1e0f5f0 >			  ## lbuf.c:421:19
 1e0f602:    10 70             	r0 = 1			  ## lbuf.c:424:20
 1e0f604:    d8 68             	b[r4 + 13] = r0			  ## lbuf.c:424:20
 1e0f606:    00 48             	r0 = [r4 + 0]			  ## list.h:124:18
 1e0f608:    40 f2 1d 10       	if (r0 != r4) goto 58 <lbuf_push+0x6A : 1e0f646 >			  ## list.h:124:18
 1e0f60c:    60 ff 03 49 02 00 	if ((r4 & 3) == 0) goto 4 <lbuf_push+0x3A : 1e0f616 >
 1e0f612:    8f f3 e5 9e       	call 2047434 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e0f616:    40 68             	r0 = b[r4 + 4] (u)			  ## lbuf.c:430:9
 1e0f618:    42 b9             	r2 = r4 + r5			  ## lbuf.c:410:61
 1e0f61a:    60 ff 03 09 02 00 	if ((r0 & 3) == 0) goto 4 <lbuf_push+0x48 : 1e0f624 >			  ## lbuf.c:410:61
 1e0f620:    8f f3 de 9e       	call 2047420 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e0f624:    40 64             	r0 = b[r2 + 4] (u)			  ## lbuf.c:431:9
 1e0f626:    60 ff 03 09 02 00 	if ((r0 & 3) == 0) goto 4 <lbuf_push+0x54 : 1e0f630 >			  ## lbuf.c:431:9
 1e0f62c:    8f f3 d8 9e       	call 2047408 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e0f630:    00 64             	r0 = b[r2 + 0] (u)			  ## lbuf.c:432:9
 1e0f632:    60 ff 03 09 02 00 	if ((r0 & 3) == 0) goto 4 <lbuf_push+0x60 : 1e0f63c >			  ## lbuf.c:432:9
 1e0f638:    8f f3 d2 9e       	call 2047396 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e0f63c:    10 44             	r0 = [r2 + 4]			  ## list.h:154:28
 1e0f63e:    1c 44             	[r2 + 4] = r4			  ## list.h:137:16
 1e0f640:    0a 48             	[r4 + 0] = r2			  ## list.h:138:16
 1e0f642:    18 48             	[r4 + 4] = r0			  ## list.h:139:16
 1e0f644:    0c 40             	[r0 + 0] = r4			  ## list.h:140:16
 1e0f646:    15 01             	{rets, r5, r4} = [sp++]			  ## spinlock.h:88:5
 1e0f648:    d7 f3 a6 bb       	goto 3110732 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5


lbuf_pop:
 1e0f64c:    75 01             	[--sp] = {rets, r5, r4}			  ## lbuf.c:455:0
 1e0f64e:    04 08             	r4 = r0			  ## lbuf.c:455:0
 1e0f650:    97 f3 a4 bb       	call 3110728 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0f654:    05 48             	r5 = [r4 + 0]			  ## spinlock.h:77:5
 1e0f656:    45 f2 06 00       	if (r5 == r4) goto 12 <lbuf_pop+0x1A : 1e0f666 >
 1e0f65a:    d0 6a             	r0 = b[r5 + 13] (u)			  ## lbuf.c:462:16
 1e0f65c:    20 f3 07 00       	if ((r0 & 1) != 0) goto 14 <lbuf_pop+0x22 : 1e0f66e >			  ## lbuf.c:462:16
 1e0f660:    05 4a             	r5 = [r5 + 0]
 1e0f662:    45 f2 fa 1f       	if (r5 != r4) goto -12 <lbuf_pop+0xE : 1e0f65a >
 1e0f666:    97 f3 97 bb       	call 3110702 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0f66a:    00 70             	r0 = 0			  ## spinlock.h:88:5
 1e0f66c:    55 01             	{pc, r5, r4} = [sp++]			  ## lbuf.c:474:1
 1e0f66e:    70 b0             	r0 &= 4294967294			  ## lbuf.c:464:28
 1e0f670:    d8 6a             	b[r5 + 13] = r0			  ## lbuf.c:464:28
 1e0f672:    97 f3 91 bb       	call 3110690 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0f676:    40 9b             	r0 = r5 + 20			  ## lbuf.c:467:22
 1e0f678:    55 01             	{pc, r5, r4} = [sp++]			  ## lbuf.c:474:1


lbuf_alloc:
 1e0f67a:    7a 01             	[--sp] = {rets, r10-r4}			  ## lbuf.c:214:0
 1e0f67c:    04 08             	r4 = r0			  ## lbuf.c:214:0
 1e0f67e:    b0 58             	r0 = h[r4 + 22] (u)			  ## lbuf.c:224:14
 1e0f680:    42 69             	r2 = b[r4 + 20] (u)			  ## lbuf.c:224:14
 1e0f682:    43 91             	r3 = r0 + 20			  ## lbuf.c:224:14
 1e0f684:    20 fc ff ff       	r0 = r2 + -1			  ## lbuf.c:224:14
 1e0f688:    e2 fd 30 50       	r5 = r0 & r3			  ## lbuf.c:224:14
 1e0f68c:    65 b5             	r5 = r2 - r5			  ## lbuf.c:224:14
 1e0f68e:    09 70             	r9 = 0
 1e0f690:    08 70             	r8 = 0			  ## lbuf.c:224:14
 1e0f692:    30 f0 01 00       	if ((r0 & r3) == 0) goto 2 <lbuf_alloc+0x1E : 1e0f698 >			  ## lbuf.c:224:14
 1e0f696:    58 08             	r8 = r5			  ## lbuf.c:224:14
 1e0f698:    31 09             	r1 += r3			  ## lbuf.c:226:11
 1e0f69a:    81 09             	r1 += r8			  ## lbuf.c:226:11
 1e0f69c:    e2 fd 00 31       	r3 = r1 & r0			  ## lbuf.c:226:11
 1e0f6a0:    e3 b4             	r3 = r2 - r3			  ## lbuf.c:226:11
 1e0f6a2:    02 70             	r2 = 0			  ## lbuf.c:226:11
 1e0f6a4:    01 f0 01 00       	if ((r1 & r0) == 0) goto 2 <lbuf_alloc+0x30 : 1e0f6aa >			  ## lbuf.c:226:11
 1e0f6a8:    32 08             	r2 = r3			  ## lbuf.c:226:11
 1e0f6aa:    4a b4             	r10 = r2 + r1			  ## lbuf.c:226:11
 1e0f6ac:    97 f3 76 bb       	call 3110636 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0f6b0:    25 48             	r5 = [r4 + 8]			  ## lbuf.c:230:5
 1e0f6b2:    87 98             	r7 = r4 + 8			  ## lbuf.c:230:5
 1e0f6b4:    06 70             	r6 = 0			  ## lbuf.c:230:5
 1e0f6b6:    75 f2 23 00       	if (r5 == r7) goto 70 <lbuf_alloc+0x86 : 1e0f700 >			  ## lbuf.c:230:5
 1e0f6ba:    c9 ff 84 55 e1 01 	r9 = 31544708 <update_target_end+0x26FC : 1e15584 >
 1e0f6c0:    45 f2 04 90       	if (r5 <= r4) goto 8 <lbuf_alloc+0x52 : 1e0f6cc >
 1e0f6c4:    60 48             	r0 = [r4 + 24]			  ## lbuf.c:232:67
 1e0f6c6:    40 09             	r0 += r4			  ## lbuf.c:232:59
 1e0f6c8:    05 f2 08 90       	if (r5 <= r0) goto 16 <lbuf_alloc+0x62 : 1e0f6dc >			  ## lbuf.c:232:59
 1e0f6cc:    60 f3 00 00       	trigger			  ## lbuf.c:233:13
 1e0f6d0:    23 4a             	r3 = [r5 + 8]			  ## lbuf.c:234:80
 1e0f6d2:    01 4e             	r1 = [r7 + 0]			  ## lbuf.c:234:63
 1e0f6d4:    90 08             	r0 = r9			  ## lbuf.c:234:13
 1e0f6d6:    52 08             	r2 = r5			  ## lbuf.c:234:13
 1e0f6d8:    bf f3 f7 fc       	call -1554 <printf : 1e0f0ca >			  ## lbuf.c:234:13
 1e0f6dc:    80 9a             	r0 = r5 + 8
 1e0f6de:    00 40             	r0 = [r0 + 0]			  ## lbuf.c:237:16
 1e0f6e0:    a0 f2 08 30       	if (r0 < r10) goto 16 <lbuf_alloc+0x7A : 1e0f6f4 >			  ## lbuf.c:237:16
 1e0f6e4:    03 2c             	if (r6 == 0) goto 6 <lbuf_alloc+0x72 : 1e0f6ec >
 1e0f6e6:    21 4c             	r1 = [r6 + 8]			  ## lbuf.c:241:28
 1e0f6e8:    01 f2 01 90       	if (r1 <= r0) goto 2 <lbuf_alloc+0x74 : 1e0f6ee >			  ## lbuf.c:241:28
 1e0f6ec:    56 08             	r6 = r5
 1e0f6ee:    70 48             	r0 = [r4 + 28]			  ## lbuf.c:245:28
 1e0f6f0:    05 f2 05 80       	if (r5 > r0) goto 10 <lbuf_alloc+0x84 : 1e0f6fe >			  ## lbuf.c:245:28
 1e0f6f4:    05 4a             	r5 = [r5 + 0]			  ## lbuf.c:230:5
 1e0f6f6:    75 f2 e3 1f       	if (r5 != r7) goto -58 <lbuf_alloc+0x46 : 1e0f6c0 >
 1e0f6fa:    09 70             	r9 = 0
 1e0f6fc:    01 18             	goto 2 <lbuf_alloc+0x86 : 1e0f700 >
 1e0f6fe:    59 08             	r9 = r5
 1e0f700:    09 e0 01 10       	if (r9 != 0) goto 2 <lbuf_alloc+0x8C : 1e0f706 >
 1e0f704:    69 08             	r9 = r6			  ## lbuf.c:251:9
 1e0f706:    09 e0 14 00       	if (r9 == 0) goto 40 <lbuf_alloc+0xB8 : 1e0f732 >
 1e0f70a:    19 f6 1c 40       	[r4 + 28] = r9			  ## lbuf.c:254:25
 1e0f70e:    02 f6 08 90       	r2 = [r9 + 8]			  ## lbuf.c:257:16
 1e0f712:    a0 fc 0c 00       	r0 = r10 + 12			  ## lbuf.c:257:26
 1e0f716:    02 f2 0e 90       	if (r2 <= r0) goto 28 <lbuf_alloc+0xBC : 1e0f736 >			  ## lbuf.c:257:13
 1e0f71a:    80 fb a0 09       	r0 = r9 + r10			  ## lbuf.c:258:44
 1e0f71e:    90 fb a0 12       	r1 = r2 - r10			  ## lbuf.c:259:31
 1e0f722:    29 40             	[r0 + 8] = r1			  ## lbuf.c:259:22
 1e0f724:    02 f6 00 90       	r2 = [r9 + 0]			  ## lbuf.c:261:61
 1e0f728:    01 f6 04 90       	r1 = [r9 + 4]			  ## lbuf.c:261:46
 1e0f72c:    18 44             	[r2 + 4] = r0			  ## list.h:137:16
 1e0f72e:    0a 40             	[r0 + 0] = r2			  ## list.h:138:16
 1e0f730:    07 18             	goto 14 <lbuf_alloc+0xC6 : 1e0f740 >			  ## list.h:138:16
 1e0f732:    04 70             	r4 = 0
 1e0f734:    14 18             	goto 40 <lbuf_alloc+0xE4 : 1e0f75e >
 1e0f736:    00 f6 00 90       	r0 = [r9 + 0]			  ## list.h:165:36
 1e0f73a:    01 f6 04 90       	r1 = [r9 + 4]			  ## list.h:165:23
 1e0f73e:    2a 08             	r10 = r2			  ## list.h:165:23
 1e0f740:    19 40             	[r0 + 4] = r1
 1e0f742:    08 42             	[r1 + 0] = r0
 1e0f744:    80 fb 80 09       	r0 = r9 + r8			  ## lbuf.c:268:43
 1e0f748:    1a f7 08 00       	h[r0 + 8] = r10			  ## lbuf.c:269:20
 1e0f74c:    21 b1             	r1 = r0 - r4			  ## lbuf.c:270:37
 1e0f74e:    59 50             	h[r0 + 10] = r1			  ## lbuf.c:270:23
 1e0f750:    01 70             	r1 = 0			  ## lbuf.c:271:28
 1e0f752:    d9 60             	b[r0 + 13] = r1			  ## lbuf.c:271:28
 1e0f754:    11 70             	r1 = 1			  ## lbuf.c:272:20
 1e0f756:    c9 60             	b[r0 + 12] = r1			  ## lbuf.c:272:20
 1e0f758:    08 40             	[r0 + 0] = r0			  ## list.h:188:16
 1e0f75a:    18 40             	[r0 + 4] = r0			  ## list.h:189:16
 1e0f75c:    44 91             	r4 = r0 + 20			  ## lbuf.c:280:21
 1e0f75e:    97 f3 1b bb       	call 3110454 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0f762:    40 08             	r0 = r4			  ## lbuf.c:290:5
 1e0f764:    5a 01             	{pc, r10-r4} = [sp++]			  ## lbuf.c:290:5


lbuf_init:
 1e0f766:    76 01             	[--sp] = {rets, r6-r4}			  ## lbuf.c:87:0
 1e0f768:    22 fd 03 09       	r2 = r0 & 3			  ## lbuf.c:90:52
 1e0f76c:    63 fb 04 29       	r3 = 4 - r2			  ## lbuf.c:90:52
 1e0f770:    02 70             	r2 = 0			  ## lbuf.c:90:52
 1e0f772:    61 ff 03 09 01 00 	if ((r0 & 3) != 0) goto 2 <lbuf_init+0x14 : 1e0f77a >
 1e0f778:    03 70             	r3 = 0			  ## lbuf.c:90:52
 1e0f77a:    03 09             	r3 += r0			  ## lbuf.c:90:52
 1e0f77c:    34 fc 24 00       	r4 = r3 + 36			  ## lbuf.c:92:28
 1e0f780:    25 fd 03 49       	r5 = r4 & 3			  ## lbuf.c:92:28
 1e0f784:    66 fb 04 59       	r6 = 4 - r5			  ## lbuf.c:92:28
 1e0f788:    05 70             	r5 = 0			  ## lbuf.c:92:28
 1e0f78a:    60 ff 03 49 01 00 	if ((r4 & 3) == 0) goto 2 <lbuf_init+0x2C : 1e0f792 >
 1e0f790:    65 08             	r5 = r6			  ## lbuf.c:92:28
 1e0f792:    54 09             	r4 += r5			  ## lbuf.c:92:28
 1e0f794:    10 09             	r0 += r1			  ## lbuf.c:93:21
 1e0f796:    20 b1             	r0 = r0 - r4			  ## lbuf.c:93:21
 1e0f798:    28 48             	[r4 + 8] = r0			  ## lbuf.c:93:15
 1e0f79a:    40 70             	r0 = 4			  ## lbuf.c:93:15
 1e0f79c:    48 67             	b[r3 + 20] = r0			  ## lbuf.c:95:17
 1e0f79e:    ba 56             	h[r3 + 22] = r2			  ## lbuf.c:96:20
 1e0f7a0:    7a 46             	[r3 + 28] = r2			  ## lbuf.c:97:21
 1e0f7a2:    69 46             	[r3 + 24] = r1			  ## lbuf.c:102:22
 1e0f7a4:    4a 46             	[r3 + 16] = r2			  ## spinlock.h:70:18
 1e0f7a6:    0b 46             	[r3 + 0] = r3			  ## list.h:188:16
 1e0f7a8:    1b 46             	[r3 + 4] = r3			  ## list.h:189:16
 1e0f7aa:    3c 46             	[r3 + 12] = r4			  ## list.h:137:16
 1e0f7ac:    80 96             	r0 = r3 + 8			  ## lbuf.c:106:27
 1e0f7ae:    08 48             	[r4 + 0] = r0			  ## list.h:138:16
 1e0f7b0:    18 48             	[r4 + 4] = r0			  ## list.h:139:16
 1e0f7b2:    2c 46             	[r3 + 8] = r4			  ## list.h:140:16
 1e0f7b4:    56 01             	{pc, r6-r4} = [sp++]			  ## list.h:140:16


lbuf_real_size:
 1e0f7b6:    00 f7 f4 0f       	r0 = h[r0 + -12] (u)			  ## lbuf.c:391:0
 1e0f7ba:    20 00             	rts			  ## lbuf.c:394:5


vAssertCalled:
 1e0f7bc:    14 08             	r4 = r1			  ## FreeRTOSConfig.h:162:0
 1e0f7be:    05 08             	r5 = r0			  ## FreeRTOSConfig.h:162:0
 1e0f7c0:    97 f3 ec ba       	call 3110360 <local_irq_disable : 106d9c >			  ## FreeRTOSConfig.h:171:5
 1e0f7c4:    c0 ff bb 53 e1 01 	r0 = 31544251 <update_target_end+0x2533 : 1e153bb >			  ## FreeRTOSConfig.h:172:5
 1e0f7ca:    51 08             	r1 = r5			  ## FreeRTOSConfig.h:172:5
 1e0f7cc:    42 08             	r2 = r4			  ## FreeRTOSConfig.h:172:5
 1e0f7ce:    bf f3 7c fc       	call -1800 <printf : 1e0f0ca >			  ## FreeRTOSConfig.h:172:5
 1e0f7d2:    ff 1f             	goto -2 <vAssertCalled+0x16 : 1e0f7d2 >			  ## FreeRTOSConfig.h:173:5


pvPortMalloc:
 1e0f7d4:    7b 01             	[--sp] = {rets, r11-r4}			  ## heap_mmu.c:174:0
 1e0f7d6:    05 08             	r5 = r0			  ## heap_mmu.c:174:0
 1e0f7d8:    c8 ff ae 53 e1 01 	r8 = 31544238 <update_target_end+0x2526 : 1e153ae >			  ## heap_mmu.c:174:0
 1e0f7de:    da 2a             	if (r5 == 0) goto 436 <pvPortMalloc+0x1C0 : 1e0f994 >			  ## heap_mmu.c:181:5
 1e0f7e0:    97 f3 dc ba       	call 3110328 <local_irq_disable : 106d9c >			  ## heap_mmu.c:184:5
 1e0f7e4:    08 00             	csync			  ## heap_mmu.c:184:5
 1e0f7e6:    cb ff b0 20 00 00 	r11 = 8368 <gatt_client_conn_handle : 20b0 >			  ## heap_mmu.c:184:5
 1e0f7ec:    00 f6 c0 b0       	r0 = [r11 + 192]			  ## heap_mmu.c:188:13
 1e0f7f0:    24 30             	if (r0 != 0) goto 72 <pvPortMalloc+0x66 : 1e0f83a >			  ## heap_mmu.c:188:13
 1e0f7f2:    97 f3 69 bb       	call 3110610 <vmem_start : 106ec8 >			  ## sbrk.c:77:20
 1e0f7f6:    01 78             	r1 = 128			  ## sbrk.c:78:20
 1e0f7f8:    97 f3 60 bb       	call 3110592 <vmalloc_ : 106ebc >			  ## sbrk.c:78:20
 1e0f7fc:    06 08             	r6 = r0			  ## sbrk.c:78:20
 1e0f7fe:    97 f3 65 bb       	call 3110602 <vmem_end : 106ecc >			  ## sbrk.c:80:20
 1e0f802:    00 88             	r0 += -128			  ## sbrk.c:80:31
 1e0f804:    01 78             	r1 = 128			  ## sbrk.c:81:20
 1e0f806:    97 f3 59 bb       	call 3110578 <vmalloc_ : 106ebc >			  ## sbrk.c:81:20
 1e0f80a:    b1 fc c0 00       	r1 = r11 + 192
 1e0f80e:    fe 43             	[r1 + 124] = r6			  ## heap_mmu.c:462:28
 1e0f810:    02 70             	r2 = 0			  ## heap_mmu.c:462:28
 1e0f812:    ea 43             	[r1 + 120] = r2			  ## heap_mmu.c:463:23
 1e0f814:    63 fb 7f 69       	r3 = 127 - r6			  ## heap_mmu.c:443:22
 1e0f818:    30 09             	r0 += r3			  ## heap_mmu.c:443:22
 1e0f81a:    00 fc 80 00       	r0 = r0 + 128			  ## heap_mmu.c:443:22
 1e0f81e:    30 fd 7f 09       	r0 = r0 & 4294967168			  ## heap_mmu.c:443:22
 1e0f822:    60 09             	r0 += r6			  ## heap_mmu.c:469:43
 1e0f824:    80 8f             	r0 += -8			  ## heap_mmu.c:470:15
 1e0f826:    30 fd 03 09       	r0 = r0 & 4294967292			  ## heap_mmu.c:471:15
 1e0f82a:    08 42             	[r1 + 0] = r0			  ## heap_mmu.c:473:11
 1e0f82c:    0a 40             	[r0 + 0] = r2			  ## heap_mmu.c:474:23
 1e0f82e:    1a 40             	[r0 + 4] = r2			  ## heap_mmu.c:475:28
 1e0f830:    a2 b1             	r2 = r0 - r6			  ## heap_mmu.c:481:46
 1e0f832:    0a 4c             	[r6 + 0] = r2			  ## heap_mmu.c:481:34
 1e0f834:    18 4c             	[r6 + 4] = r0			  ## heap_mmu.c:482:39
 1e0f836:    1a 42             	[r1 + 4] = r2			  ## heap_mmu.c:489:36
 1e0f838:    2a 42             	[r1 + 8] = r2			  ## heap_mmu.c:490:25
 1e0f83a:    c9 ff 00 00 68 69 	r9 = 1768423424 <uECC_vli_cmp_unsafe+0x1579004 : 1680000 >			  ## heap_mmu.c:198:26
 1e0f840:    95 f1 51 00       	if ((r5 & r9) != 0) goto 162 <pvPortMalloc+0x112 : 1e0f8e6 >			  ## heap_mmu.c:198:26
 1e0f844:    41 9a             	r1 = r5 + 4			  ## heap_mmu.c:202:29
 1e0f846:    22 fd 03 19       	r2 = r1 & 3			  ## heap_mmu.c:208:67
 1e0f84a:    62 fb 04 29       	r2 = 4 - r2			  ## heap_mmu.c:208:52
 1e0f84e:    46 b4             	r6 = r2 + r1			  ## heap_mmu.c:208:29
 1e0f850:    61 ff 03 69 a2 00 	if ((r6 & 3) != 0) goto 324 <pvPortMalloc+0x1C6 : 1e0f99a >			  ## heap_mmu.c:209:17
 1e0f856:    22 ff 01 6b a2 00 	if (r6 >= 65536) goto 324 <pvPortMalloc+0x1CC : 1e0f9a0 >			  ## heap_mmu.c:218:13
 1e0f85c:    01 f6 c8 b0       	r1 = [r11 + 200]			  ## heap_mmu.c:219:54
 1e0f860:    62 fc ff ff       	r2 = r6 + -1			  ## heap_mmu.c:219:35
 1e0f864:    12 f2 3f 20       	if (r2 >= r1) goto 126 <pvPortMalloc+0x112 : 1e0f8e6 >			  ## heap_mmu.c:219:35
 1e0f868:    03 f6 3c b1       	r3 = [r11 + 316]			  ## heap_mmu.c:223:34
 1e0f86c:    b2 fc 38 01       	r2 = r11 + 312			  ## heap_mmu.c:223:34
 1e0f870:    34 08             	r4 = r3
 1e0f872:    01 48             	r1 = [r4 + 0]			  ## heap_mmu.c:226:34
 1e0f874:    27 08             	r7 = r2			  ## heap_mmu.c:226:34
 1e0f876:    61 f2 03 20       	if (r1 >= r6) goto 6 <pvPortMalloc+0xAC : 1e0f880 >
 1e0f87a:    13 48             	r3 = [r4 + 4]			  ## heap_mmu.c:226:73
 1e0f87c:    42 08             	r2 = r4			  ## heap_mmu.c:226:73
 1e0f87e:    f8 37             	if (r3 != 0) goto -16 <pvPortMalloc+0x9C : 1e0f870 >
 1e0f880:    04 f2 31 00       	if (r4 == r0) goto 98 <pvPortMalloc+0x112 : 1e0f8e6 >
 1e0f884:    0a f6 04 70       	r10 = [r7 + 4]			  ## heap_mmu.c:238:71
 1e0f888:    80 fb 60 0a       	r0 = r10 + r6			  ## heap_mmu.c:242:82
 1e0f88c:    22 fd 7f 09       	r2 = r0 & 127			  ## heap_mmu.c:243:48
 1e0f890:    63 fb 80 29       	r3 = 128 - r2			  ## heap_mmu.c:243:36
 1e0f894:    a2 fc 80 00       	r2 = r10 + 128			  ## heap_mmu.c:241:46
 1e0f898:    73 e0 03 80       	if (r3 > 7) goto 6 <pvPortMalloc+0xCE : 1e0f8a2 >			  ## heap_mmu.c:241:46
 1e0f89c:    36 09             	r6 += r3			  ## heap_mmu.c:244:37
 1e0f89e:    80 fb a0 06       	r0 = r6 + r10			  ## heap_mmu.c:245:78
 1e0f8a2:    32 fd 7f 29       	r2 = r2 & 4294967168			  ## heap_mmu.c:241:59
 1e0f8a6:    60 ff 7f 09 0c 00 	if ((r0 & 127) == 0) goto 24 <pvPortMalloc+0xF0 : 1e0f8c4 >
 1e0f8ac:    41 09             	r1 += r4			  ## heap_mmu.c:248:63
 1e0f8ae:    33 fd 7f 19       	r3 = r1 & 4294967168			  ## heap_mmu.c:249:66
 1e0f8b2:    31 fd 7f 09       	r1 = r0 & 4294967168			  ## heap_mmu.c:249:39
 1e0f8b6:    f0 87             	r0 += 127			  ## heap_mmu.c:250:40
 1e0f8b8:    30 fd 7f 09       	r0 = r0 & 4294967168			  ## heap_mmu.c:250:40
 1e0f8bc:    31 f2 01 00       	if (r1 == r3) goto 2 <pvPortMalloc+0xEE : 1e0f8c2 >
 1e0f8c0:    01 08             	r1 = r0			  ## heap_mmu.c:249:29
 1e0f8c2:    10 08             	r0 = r1
 1e0f8c4:    a5 b0             	r5 = r0 - r2			  ## heap_mmu.c:256:46
 1e0f8c6:    15 e0 1a b0       	ifs (r5 < 1) goto 52 <pvPortMalloc+0x12A : 1e0f8fe >
 1e0f8ca:    60 ff 7f 59 02 00 	if ((r5 & 127) == 0) goto 4 <pvPortMalloc+0x100 : 1e0f8d4 >
 1e0f8d0:    8f f3 86 9d       	call 2046732 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e0f8d4:    02 e0 10 d0       	ifs (r2 <= 0) goto 32 <pvPortMalloc+0x124 : 1e0f8f8 >
 1e0f8d8:    20 08             	r0 = r2			  ## sbrk.c:78:20
 1e0f8da:    51 08             	r1 = r5			  ## sbrk.c:78:20
 1e0f8dc:    97 f3 ee ba       	call 3110364 <vmalloc_ : 106ebc >			  ## sbrk.c:78:20
 1e0f8e0:    f0 ef 0d 10       	if (r0 != -1) goto 26 <pvPortMalloc+0x12A : 1e0f8fe >
 1e0f8e4:    0a 18             	goto 20 <pvPortMalloc+0x126 : 1e0f8fa >
 1e0f8e6:    97 f3 57 ba       	call 3110062 <local_irq_enable : 106d98 >			  ## heap_mmu.c:326:5
 1e0f8ea:    c2 ff 80 53 e1 01 	r2 = 31544192 <update_target_end+0x24F8 : 1e15380 >			  ## port_overwrite.c:77:5
 1e0f8f0:    40 70             	r0 = 4			  ## port_overwrite.c:77:5
 1e0f8f2:    bf f3 1a fc       	call -1996 <log_print : 1e0f12a >			  ## port_overwrite.c:77:5
 1e0f8f6:    ff 1f             	goto -2 <pvPortMalloc+0x122 : 1e0f8f6 >			  ## port_overwrite.c:78:5
 1e0f8f8:    1b 24             	if (r2 == 0) goto 54 <pvPortMalloc+0x15C : 1e0f930 >
 1e0f8fa:    8f f3 71 9d       	call 2046690 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e0f8fe:    10 48             	r0 = [r4 + 4]			  ## heap_mmu.c:264:65
 1e0f900:    18 4e             	[r7 + 4] = r0			  ## heap_mmu.c:264:54
 1e0f902:    00 48             	r0 = [r4 + 0]			  ## heap_mmu.c:270:44
 1e0f904:    a1 b1             	r1 = r0 - r6			  ## heap_mmu.c:270:55
 1e0f906:    81 e0 2e 30       	if (r1 < 8) goto 92 <pvPortMalloc+0x192 : 1e0f966 >			  ## heap_mmu.c:270:55
 1e0f90a:    85 b9             	r5 = r4 + r6			  ## heap_mmu.c:275:73
 1e0f90c:    61 ff 03 59 4e 00 	if ((r5 & 3) != 0) goto 156 <pvPortMalloc+0x1DA : 1e0f9ae >			  ## heap_mmu.c:276:25
 1e0f912:    61 ff 7f 59 1e 00 	if ((r5 & 127) != 0) goto 60 <pvPortMalloc+0x180 : 1e0f954 >
 1e0f918:    40 09             	r0 += r4			  ## heap_mmu.c:282:65
 1e0f91a:    30 fd 7f 09       	r0 = r0 & 4294967168			  ## heap_mmu.c:283:52
 1e0f91e:    05 f2 19 00       	if (r5 == r0) goto 50 <pvPortMalloc+0x180 : 1e0f954 >
 1e0f922:    15 e0 09 b0       	ifs (r5 < 1) goto 18 <pvPortMalloc+0x164 : 1e0f938 >			  ## sbrk.c:74:13
 1e0f926:    01 78             	r1 = 128			  ## sbrk.c:75:20
 1e0f928:    50 08             	r0 = r5			  ## sbrk.c:75:20
 1e0f92a:    97 f3 c7 ba       	call 3110286 <vmalloc_ : 106ebc >			  ## sbrk.c:75:20
 1e0f92e:    0e 18             	goto 28 <pvPortMalloc+0x178 : 1e0f94c >
 1e0f930:    97 f3 ca ba       	call 3110292 <vmem_start : 106ec8 >			  ## sbrk.c:77:20
 1e0f934:    02 08             	r2 = r0			  ## sbrk.c:77:20
 1e0f936:    d0 1f             	goto -96 <pvPortMalloc+0x104 : 1e0f8d8 >
 1e0f938:    f5 ef 0a 10       	if (r5 != -1) goto 20 <pvPortMalloc+0x17C : 1e0f950 >
 1e0f93c:    97 f3 c6 ba       	call 3110284 <vmem_end : 106ecc >			  ## sbrk.c:80:20
 1e0f940:    00 88             	r0 += -128			  ## sbrk.c:80:31
 1e0f942:    01 78             	r1 = 128			  ## sbrk.c:81:20
 1e0f944:    97 f3 ba ba       	call 3110260 <vmalloc_ : 106ebc >			  ## sbrk.c:81:20
 1e0f948:    00 fc 80 00       	r0 = r0 + 128			  ## sbrk.c:81:41
 1e0f94c:    f0 ef 02 10       	if (r0 != -1) goto 4 <pvPortMalloc+0x180 : 1e0f954 >
 1e0f950:    8f f3 46 9d       	call 2046604 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e0f954:    00 48             	r0 = [r4 + 0]			  ## heap_mmu.c:292:63
 1e0f956:    a0 b1             	r0 = r0 - r6			  ## heap_mmu.c:292:74
 1e0f958:    90 f6 00 46       	[r4+r6] = r0			  ## heap_mmu.c:292:52
 1e0f95c:    0e 48             	[r4 + 0] = r6			  ## heap_mmu.c:293:45
 1e0f95e:    10 4e             	r0 = [r7 + 4]			  ## heap_mmu.c:295:76
 1e0f960:    18 4a             	[r5 + 4] = r0			  ## heap_mmu.c:295:57
 1e0f962:    1d 4e             	[r7 + 4] = r5			  ## heap_mmu.c:296:58
 1e0f964:    00 48             	r0 = [r4 + 0]			  ## heap_mmu.c:296:58
 1e0f966:    b1 fc c4 00       	r1 = r11 + 196
 1e0f96a:    12 42             	r2 = [r1 + 4]			  ## heap_mmu.c:301:41
 1e0f96c:    20 b4             	r0 = r2 - r0			  ## heap_mmu.c:301:41
 1e0f96e:    18 42             	[r1 + 4] = r0			  ## heap_mmu.c:301:41
 1e0f970:    01 42             	r1 = [r1 + 0]			  ## heap_mmu.c:303:47
 1e0f972:    a5 fc 04 00       	r5 = r10 + 4			  ## heap_mmu.c:238:88
 1e0f976:    10 f2 02 20       	if (r0 >= r1) goto 4 <pvPortMalloc+0x1AA : 1e0f97e >			  ## heap_mmu.c:238:88
 1e0f97a:    10 f6 c4 b0       	[r11 + 196] = r0			  ## heap_mmu.c:304:56
 1e0f97e:    00 48             	r0 = [r4 + 0]			  ## heap_mmu.c:311:41
 1e0f980:    e0 fd 90 00       	r0 = r0 | r9			  ## heap_mmu.c:311:41
 1e0f984:    08 48             	[r4 + 0] = r0			  ## heap_mmu.c:311:41
 1e0f986:    97 f3 07 ba       	call 3109902 <local_irq_enable : 106d98 >			  ## heap_mmu.c:326:5
 1e0f98a:    61 ff 03 59 0b 00 	if ((r5 & 3) != 0) goto 22 <pvPortMalloc+0x1D2 : 1e0f9a6 >			  ## heap_mmu.c:326:5
 1e0f990:    50 08             	r0 = r5			  ## heap_mmu.c:341:5
 1e0f992:    5b 01             	{pc, r11-r4} = [sp++]			  ## heap_mmu.c:341:5
 1e0f994:    51 7b             	r1 = 181			  ## heap_mmu.c:181:5
 1e0f996:    80 08             	r0 = r8			  ## heap_mmu.c:181:5
 1e0f998:    11 17             	call -478 <vAssertCalled : 1e0f7bc >			  ## heap_mmu.c:181:5
 1e0f99a:    11 7d             	r1 = 209			  ## heap_mmu.c:209:17
 1e0f99c:    80 08             	r0 = r8			  ## heap_mmu.c:209:17
 1e0f99e:    0e 17             	call -484 <vAssertCalled : 1e0f7bc >			  ## heap_mmu.c:209:17
 1e0f9a0:    a1 7d             	r1 = 218			  ## heap_mmu.c:218:13
 1e0f9a2:    80 08             	r0 = r8			  ## heap_mmu.c:218:13
 1e0f9a4:    0b 17             	call -490 <vAssertCalled : 1e0f7bc >			  ## heap_mmu.c:218:13
 1e0f9a6:    01 fb 53 01       	r1 = 339 <DRIVER_RAM_TOTAL+0x61 : 153 >			  ## heap_mmu.c:339:5
 1e0f9aa:    80 08             	r0 = r8			  ## heap_mmu.c:339:5
 1e0f9ac:    07 17             	call -498 <vAssertCalled : 1e0f7bc >			  ## heap_mmu.c:339:5
 1e0f9ae:    01 fb 14 01       	r1 = 276 <DRIVER_RAM_TOTAL+0x22 : 114 >			  ## heap_mmu.c:276:25
 1e0f9b2:    80 08             	r0 = r8			  ## heap_mmu.c:276:25
 1e0f9b4:    03 17             	call -506 <vAssertCalled : 1e0f7bc >			  ## heap_mmu.c:276:25


malloc:
 1e0f9b6:    34 00             	[--sp] = rets			  ## memory.c:20:0
 1e0f9b8:    28 fb 00 13       	r1 = rets			  ## memory.c:22:5
 1e0f9bc:    0b 17             	call -490 <pvPortMalloc : 1e0f7d4 >			  ## memory.c:26:11
 1e0f9be:    30 00             	pc = [sp++]			  ## memory.c:30:5


os_task_create:
 1e0f9c0:    77 01             	[--sp] = {rets, r7-r4}			  ## port_overwrite.c:595:0
 1e0f9c2:    fc 0b             	sp += -8			  ## port_overwrite.c:595:0
 1e0f9c4:    34 08             	r4 = r3			  ## port_overwrite.c:595:0
 1e0f9c6:    25 08             	r5 = r2			  ## port_overwrite.c:595:0
 1e0f9c8:    16 08             	r6 = r1			  ## port_overwrite.c:595:0
 1e0f9ca:    07 08             	r7 = r0			  ## port_overwrite.c:595:0
 1e0f9cc:    97 f3 e6 b9       	call 3109836 <local_irq_disable : 106d9c >			  ## port_overwrite.c:597:5
 1e0f9d0:    80 02             	r0 = [sp+32]
 1e0f9d2:    71 02             	r1 = [sp+28]
 1e0f9d4:    18 02             	[sp+4] = r0			  ## port_overwrite.c:598:11
 1e0f9d6:    09 02             	[sp] = r1			  ## port_overwrite.c:598:11
 1e0f9d8:    70 08             	r0 = r7			  ## port_overwrite.c:598:11
 1e0f9da:    61 08             	r1 = r6			  ## port_overwrite.c:598:11
 1e0f9dc:    52 08             	r2 = r5			  ## port_overwrite.c:598:11
 1e0f9de:    43 08             	r3 = r4			  ## port_overwrite.c:598:11
 1e0f9e0:    97 f3 e6 b9       	call 3109836 <os_task_create_rom : 106db0 >			  ## port_overwrite.c:598:11
 1e0f9e4:    04 08             	r4 = r0			  ## port_overwrite.c:598:11
 1e0f9e6:    97 f3 d7 b9       	call 3109806 <local_irq_enable : 106d98 >			  ## port_overwrite.c:599:5
 1e0f9ea:    40 08             	r0 = r4			  ## port_overwrite.c:600:5
 1e0f9ec:    04 0a             	sp += 8			  ## port_overwrite.c:600:5
 1e0f9ee:    57 01             	{pc, r7-r4} = [sp++]			  ## port_overwrite.c:600:5


zalloc:
 1e0f9f0:    75 01             	[--sp] = {rets, r5, r4}			  ## memory.c:42:0
 1e0f9f2:    04 08             	r4 = r0			  ## memory.c:42:0
 1e0f9f4:    28 fb 00 03       	r0 = rets			  ## memory.c:44:5
 1e0f9f8:    40 08             	r0 = r4			  ## memory.c:46:11
 1e0f9fa:    ec 16             	call -552 <pvPortMalloc : 1e0f7d4 >			  ## memory.c:46:11
 1e0f9fc:    05 08             	r5 = r0			  ## memory.c:46:11
 1e0f9fe:    04 2a             	if (r5 == 0) goto 8 <zalloc+0x18 : 1e0fa08 >
 1e0fa00:    01 70             	r1 = 0			  ## memory.c:48:9
 1e0fa02:    42 08             	r2 = r4			  ## memory.c:48:9
 1e0fa04:    97 f3 74 ba       	call 3110120 <memset : 106ef0 >			  ## memory.c:48:9
 1e0fa08:    50 08             	r0 = r5			  ## memory.c:52:5
 1e0fa0a:    55 01             	{pc, r5, r4} = [sp++]			  ## memory.c:52:5


free:
 1e0fa0c:    78 01             	[--sp] = {rets, r8-r4}			  ## memory.c:34:0
 1e0fa0e:    7b 20             	if (r0 == 0) goto 246 <free+0xFA : 1e0fb06 >			  ## memory.c:34:0
 1e0fa10:    05 fc fc ff       	r5 = r0 + -4			  ## memory.c:34:0
 1e0fa14:    00 4a             	r0 = [r5 + 0]			  ## heap_mmu.c:366:22
 1e0fa16:    c1 ff 00 00 68 69 	r1 = 1768423424 <uECC_vli_cmp_unsafe+0x1579004 : 1680000 >			  ## heap_mmu.c:366:33
 1e0fa1c:    e2 fd 10 20       	r2 = r0 & r1			  ## heap_mmu.c:366:33
 1e0fa20:    12 f2 7c 10       	if (r2 != r1) goto 248 <free+0x110 : 1e0fb1c >			  ## heap_mmu.c:366:13
 1e0fa24:    54 08             	r4 = r5			  ## heap_mmu.c:358:13
 1e0fa26:    c1 ff ff ff 97 96 	r1 = 2526543871 <uECC_vli_cmp_unsafe+0x879003 : 97ffff >			  ## heap_mmu.c:370:32
 1e0fa2c:    50 b3             	r0 &= r1			  ## heap_mmu.c:370:32
 1e0fa2e:    08 4a             	[r5 + 0] = r0			  ## heap_mmu.c:370:32
 1e0fa30:    97 f3 b4 b9       	call 3109736 <local_irq_disable : 106d9c >			  ## heap_mmu.c:373:13
 1e0fa34:    08 00             	csync			  ## heap_mmu.c:373:13
 1e0fa36:    02 4a             	r2 = [r5 + 0]			  ## heap_mmu.c:376:48
 1e0fa38:    c8 ff b0 20 00 00 	r8 = 8368 <gatt_client_conn_handle : 20b0 >			  ## heap_mmu.c:376:48
 1e0fa3e:    80 fc c8 00       	r0 = r8 + 200			  ## heap_mmu.c:376:48
 1e0fa42:    01 40             	r1 = [r0 + 0]			  ## heap_mmu.c:376:37
 1e0fa44:    21 09             	r1 += r2			  ## heap_mmu.c:376:37
 1e0fa46:    51 f6 70 00       	[r0 ++= 112] = r1			  ## heap_mmu.c:376:37
 1e0fa4a:    06 08             	r6 = r0
 1e0fa4c:    10 4c             	r0 = [r6 + 4]			  ## heap_mmu.c:512:44
 1e0fa4e:    40 f2 fc 3f       	if (r0 < r4) goto -8 <free+0x3E : 1e0fa4a >			  ## heap_mmu.c:512:5
 1e0fa52:    03 4c             	r3 = [r6 + 0]			  ## heap_mmu.c:519:28
 1e0fa54:    c1 bc             	r1 = r6 + r3			  ## heap_mmu.c:519:14
 1e0fa56:    41 f2 08 00       	if (r1 == r4) goto 16 <free+0x5E : 1e0fa6a >			  ## heap_mmu.c:519:14
 1e0fa5a:    51 fc 80 00       	r1 = r5 + 128			  ## heap_mmu.c:526:34
 1e0fa5e:    31 fd 7f 19       	r1 = r1 & 4294967168			  ## heap_mmu.c:526:47
 1e0fa62:    47 08             	r7 = r4
 1e0fa64:    23 08             	r3 = r2			  ## heap_mmu.c:537:33
 1e0fa66:    14 08             	r4 = r1			  ## heap_mmu.c:537:33
 1e0fa68:    0a 18             	goto 20 <free+0x72 : 1e0fa7e >
 1e0fa6a:    23 09             	r3 += r2			  ## heap_mmu.c:520:32
 1e0fa6c:    31 fd 7f 69       	r1 = r6 & 4294967168			  ## heap_mmu.c:522:67
 1e0fa70:    37 fd 7f 59       	r7 = r5 & 4294967168			  ## heap_mmu.c:522:25
 1e0fa74:    0b 4c             	[r6 + 0] = r3			  ## heap_mmu.c:520:32
 1e0fa76:    17 f2 01 00       	if (r7 == r1) goto 2 <free+0x70 : 1e0fa7c >			  ## heap_mmu.c:520:32
 1e0fa7a:    74 08             	r4 = r7			  ## heap_mmu.c:522:13
 1e0fa7c:    67 08             	r7 = r6
 1e0fa7e:    52 09             	r2 += r5			  ## heap_mmu.c:506:49
 1e0fa80:    c5 be             	r5 = r7 + r3			  ## heap_mmu.c:537:14
 1e0fa82:    41 fc 7f 00       	r1 = r4 + 127			  ## heap_mmu.c:531:22
 1e0fa86:    31 fd 7f 19       	r1 = r1 & 4294967168			  ## heap_mmu.c:531:22
 1e0fa8a:    60 ff 7f 49 01 00 	if ((r4 & 127) == 0) goto 2 <free+0x86 : 1e0fa92 >
 1e0fa90:    14 08             	r4 = r1			  ## heap_mmu.c:530:9
 1e0fa92:    01 f6 c0 80       	r1 = [r8 + 192]			  ## heap_mmu.c:538:44
 1e0fa96:    10 f2 10 00       	if (r0 == r1) goto 32 <free+0xAE : 1e0faba >
 1e0fa9a:    05 f2 0e 10       	if (r5 != r0) goto 28 <free+0xAE : 1e0faba >
 1e0fa9e:    01 40             	r1 = [r0 + 0]			  ## heap_mmu.c:541:101
 1e0faa0:    13 09             	r3 += r1			  ## heap_mmu.c:542:41
 1e0faa2:    0b 4e             	[r7 + 0] = r3			  ## heap_mmu.c:542:41
 1e0faa4:    13 40             	r3 = [r0 + 4]			  ## heap_mmu.c:543:77
 1e0faa6:    01 09             	r1 += r0			  ## heap_mmu.c:541:70
 1e0faa8:    d1 b0             	r1 ^= r0			  ## heap_mmu.c:546:42
 1e0faaa:    00 fc 80 00       	r0 = r0 + 128			  ## heap_mmu.c:547:40
 1e0faae:    1b 4e             	[r7 + 4] = r3			  ## heap_mmu.c:543:46
 1e0fab0:    f1 e7 01 80       	if (r1 > 127) goto 2 <free+0xAA : 1e0fab6 >			  ## heap_mmu.c:543:46
 1e0fab4:    20 08             	r0 = r2			  ## heap_mmu.c:546:17
 1e0fab6:    02 08             	r2 = r0
 1e0fab8:    01 18             	goto 2 <free+0xB0 : 1e0fabc >
 1e0faba:    18 4e             	[r7 + 4] = r0
 1e0fabc:    30 fd 7f 29       	r0 = r2 & 4294967168			  ## heap_mmu.c:559:18
 1e0fac0:    22 b1             	r2 = r0 - r4			  ## heap_mmu.c:562:30
 1e0fac2:    12 e0 1b b0       	ifs (r2 < 1) goto 54 <free+0xF0 : 1e0fafc >			  ## heap_mmu.c:562:30
 1e0fac6:    65 fb 00 29       	r5 = 0 - r2			  ## heap_mmu.c:565:46
 1e0faca:    60 ff 7f 59 02 00 	if ((r5 & 127) == 0) goto 4 <free+0xC8 : 1e0fad4 >
 1e0fad0:    8f f3 86 9c       	call 2046220 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e0fad4:    f4 ef 05 00       	if (r4 == -1) goto 10 <free+0xD6 : 1e0fae2 >
 1e0fad8:    60 ff 7f 49 02 00 	if ((r4 & 127) == 0) goto 4 <free+0xD6 : 1e0fae2 >
 1e0fade:    8f f3 7f 9c       	call 2046206 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e0fae2:    15 e0 07 b0       	ifs (r5 < 1) goto 14 <free+0xE8 : 1e0faf4 >			  ## sbrk.c:72:9
 1e0fae6:    14 e0 0f b0       	ifs (r4 < 1) goto 30 <free+0xFC : 1e0fb08 >			  ## sbrk.c:74:13
 1e0faea:    40 08             	r0 = r4			  ## sbrk.c:75:20
 1e0faec:    51 08             	r1 = r5
 1e0faee:    97 f3 e5 b9       	call 3109834 <vmalloc_ : 106ebc >
 1e0faf2:    04 18             	goto 8 <free+0xF0 : 1e0fafc >
 1e0faf4:    40 08             	r0 = r4			  ## sbrk.c:89:9
 1e0faf6:    21 08             	r1 = r2			  ## sbrk.c:89:9
 1e0faf8:    97 f3 e2 b9       	call 3109828 <vfree_ : 106ec0 >			  ## sbrk.c:89:9
 1e0fafc:    76 f2 01 00       	if (r6 == r7) goto 2 <free+0xF6 : 1e0fb02 >
 1e0fb00:    1f 4c             	[r6 + 4] = r7			  ## heap_mmu.c:572:37
 1e0fb02:    97 f3 49 b9       	call 3109522 <local_irq_enable : 106d98 >			  ## heap_mmu.c:381:13
 1e0fb06:    58 01             	{pc, r8-r4} = [sp++]			  ## memory.c:39:1
 1e0fb08:    06 28             	if (r4 == 0) goto 12 <free+0x10A : 1e0fb16 >
 1e0fb0a:    f4 ef f7 1f       	if (r4 != -1) goto -18 <free+0xF0 : 1e0fafc >
 1e0fb0e:    97 f3 dd b9       	call 3109818 <vmem_end : 106ecc >			  ## sbrk.c:80:20
 1e0fb12:    00 88             	r0 += -128			  ## sbrk.c:80:31
 1e0fb14:    eb 1f             	goto -42 <free+0xE0 : 1e0faec >			  ## sbrk.c:80:31
 1e0fb16:    97 f3 d7 b9       	call 3109806 <vmem_start : 106ec8 >			  ## sbrk.c:77:20
 1e0fb1a:    e8 1f             	goto -48 <free+0xE0 : 1e0faec >			  ## sbrk.c:77:20
 1e0fb1c:    c0 ff c2 53 e1 01 	r0 = 31544258 <update_target_end+0x253A : 1e153c2 >			  ## heap_mmu.c:386:13
 1e0fb22:    01 fb 82 01       	r1 = 386 <DRIVER_RAM_TOTAL+0x90 : 182 >			  ## heap_mmu.c:386:13
 1e0fb26:    4a 16             	call -876 <vAssertCalled : 1e0f7bc >			  ## heap_mmu.c:386:13


hwi_all_close:
 1e0fb28:    79 01             	[--sp] = {rets, r9-r4}			  ## hwi.c:129:0
 1e0fb2a:    04 70             	r4 = 0			  ## hwi.c:129:0
 1e0fb2c:    18 70             	r8 = 1			  ## hwi.c:129:0
 1e0fb2e:    c9 ff 00 e1 1b 00 	r9 = 1827072 <uECC_vli_cmp_unsafe+0xB7104 : 1be100 >			  ## hwi.c:129:0
 1e0fb34:    07 70             	r7 = 0			  ## hwi.c:129:0
 1e0fb36:    20 fd 1c 49       	r0 = r4 & 28			  ## hwi.c:120:28
 1e0fb3a:    f8 fd 00 58       	r5 = r8 << r0			  ## hwi.c:124:28
 1e0fb3e:    85 fd 18 07       	r0 = uextra(r7, p:3, l:5)			  ## hwi.c:119:23
 1e0fb42:    96 08             	r6 = r9			  ## hwi.c:124:5
 1e0fb44:    c5 fd 10 60       	r6 <= insert(r0, p:2, l:5)			  ## hwi.c:124:5
 1e0fb48:    97 f3 28 b9       	call 3109456 <local_irq_disable : 106d9c >			  ## hwi.c:122:5
 1e0fb4c:    00 4c             	r0 = [r6 + 0]			  ## hwi.c:124:24
 1e0fb4e:    e3 fd 50 00       	r0 = r0 & ~r5			  ## hwi.c:124:24
 1e0fb52:    08 4c             	[r6 + 0] = r0			  ## hwi.c:124:24
 1e0fb54:    97 f3 20 b9       	call 3109440 <local_irq_enable : 106d98 >			  ## hwi.c:125:5
 1e0fb58:    17 80             	r7 += 1			  ## hwi.c:132:26
 1e0fb5a:    44 80             	r4 += 4			  ## hwi.c:132:19
 1e0fb5c:    07 e4 eb 1f       	if (r7 != 64) goto -42 <hwi_all_close+0xE : 1e0fb36 >			  ## hwi.c:132:5
 1e0fb60:    59 01             	{pc, r9-r4} = [sp++]			  ## hwi.c:135:1


owner_is_idle_task:
 1e0fb62:    74 01             	[--sp] = {rets, r4}			  ## port_overwrite.c:56:0
 1e0fb64:    31 60             	r1 = b[r0 + 3] (u)			  ## port_overwrite.c:57:10
 1e0fb66:    22 60             	r2 = b[r0 + 2] (u)			  ## port_overwrite.c:57:10
 1e0fb68:    13 60             	r3 = b[r0 + 1] (u)			  ## port_overwrite.c:57:10
 1e0fb6a:    04 60             	r4 = b[r0 + 0] (u)			  ## port_overwrite.c:57:10
 1e0fb6c:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## port_overwrite.c:57:10
 1e0fb70:    c8 fd 40 43       	r4 <= insert(r3, p:8, l:8)			  ## port_overwrite.c:57:10
 1e0fb74:    d0 fd 80 42       	r4 <= insert(r2, p:16, l:16)			  ## port_overwrite.c:57:10
 1e0fb78:    c1 ff 49 44 4c 45 	r1 = 1162626121 <uECC_vli_cmp_unsafe+0x13BD44D : 14c4449 >			  ## port_overwrite.c:57:10
 1e0fb7e:    10 70             	r0 = 1			  ## port_overwrite.c:57:10
 1e0fb80:    14 f2 01 00       	if (r4 == r1) goto 2 <owner_is_idle_task+0x24 : 1e0fb86 >
 1e0fb84:    00 70             	r0 = 0			  ## port_overwrite.c:57:10
 1e0fb86:    54 01             	{pc, r4} = [sp++]			  ## port_overwrite.c:61:1


request_irq:
 1e0fb88:    77 01             	[--sp] = {rets, r7-r4}			  ## hwi.c:38:0
 1e0fb8a:    14 08             	r4 = r1			  ## hwi.c:38:0
 1e0fb8c:    c1 ff 00 ff 00 00 	r1 = 65280 <_IRQ_MEM_ADDR : ff00 >			  ## hwi.c:43:5
 1e0fb92:    b2 f6 00 10       	[r1+r0<<2] = r2			  ## hwi.c:43:20
 1e0fb96:    81 c0             	r1 = r0 << 2			  ## hwi.c:43:5
 1e0fb98:    25 fd 1c 19       	r5 = r1 & 28			  ## hwi.c:46:28
 1e0fb9c:    f1 70             	r1 = 15			  ## hwi.c:46:28
 1e0fb9e:    f8 fd 50 61       	r6 = r1 << r5			  ## hwi.c:48:35
 1e0fba2:    c0 d0             	r0 = r0 >> 3			  ## hwi.c:45:23
 1e0fba4:    c7 ff 00 e1 1b 00 	r7 = 1827072 <uECC_vli_cmp_unsafe+0xB7104 : 1be100 >			  ## hwi.c:54:27
 1e0fbaa:    c5 fd 10 70       	r7 <= insert(r0, p:2, l:5)			  ## hwi.c:54:27
 1e0fbae:    97 f3 f5 b8       	call 3109354 <local_irq_disable : 106d9c >			  ## hwi.c:51:5
 1e0fbb2:    00 4e             	r0 = [r7 + 0]			  ## hwi.c:54:27
 1e0fbb4:    e3 fd 60 00       	r0 = r0 & ~r6			  ## hwi.c:54:46
 1e0fbb8:    61 c0             	r1 = r4 << 1			  ## hwi.c:47:35
 1e0fbba:    21 fd 0e 19       	r1 = r1 & 14			  ## hwi.c:47:35
 1e0fbbe:    11 b0             	r1 |= 1			  ## hwi.c:47:41
 1e0fbc0:    41 0d             	r1 <<= r5			  ## hwi.c:49:39
 1e0fbc2:    50 b2             	r0 |= r1			  ## hwi.c:54:58
 1e0fbc4:    08 4e             	[r7 + 0] = r0			  ## hwi.c:54:24
 1e0fbc6:    97 f3 e7 b8       	call 3109326 <local_irq_enable : 106d98 >			  ## hwi.c:56:5
 1e0fbca:    57 01             	{pc, r7-r4} = [sp++]			  ## hwi.c:57:1


cpu_reset.1221:
 1e0fbcc:    cf f3 08 9c       	goto 2045968 <p33_soft_reset : 33e0 >			  ## cpu.h:146:0


os_enter_deepsleep:
 1e0fbd0:    00 70             	r0 = 0			  ## port_overwrite.c:558:0
 1e0fbd2:    20 00             	rts			  ## port_overwrite.c:559:5


os_exit_deepsleep:
 1e0fbd4:    34 00             	[--sp] = rets			  ## port_overwrite.c:563:0
 1e0fbd6:    c2 ff a6 33 00 00 	r2 = 13222 <begin_of_data : 33a6 >			  ## port_overwrite.c:565:5
 1e0fbdc:    30 70             	r0 = 3			  ## port_overwrite.c:565:5
 1e0fbde:    11 70             	r1 = 1			  ## port_overwrite.c:565:5
 1e0fbe0:    d3 17             	call -90 <request_irq : 1e0fb88 >			  ## port_overwrite.c:565:5
 1e0fbe2:    c2 ff 0c 33 00 00 	r2 = 13068 <vAppSoftwareInterruptISR : 330c >			  ## port_overwrite.c:567:5
 1e0fbe8:    f0 73             	r0 = 63			  ## port_overwrite.c:567:5
 1e0fbea:    01 70             	r1 = 0			  ## port_overwrite.c:567:5
 1e0fbec:    cd 17             	call -102 <request_irq : 1e0fb88 >			  ## port_overwrite.c:567:5
 1e0fbee:    00 70             	r0 = 0			  ## port_overwrite.c:569:5
 1e0fbf0:    30 00             	pc = [sp++]			  ## port_overwrite.c:569:5


clock_critical_enter.1225:
 1e0fbf2:    c0 ff ec e0 1b 00 	r0 = 1827052 <uECC_vli_cmp_unsafe+0xB70F0 : 1be0ec >			  ## port_overwrite.c:316:0
 1e0fbf8:    c0 f4 00 09       	[r0 + 0] = 0			  ## port_overwrite.c:317:14
 1e0fbfc:    20 00             	rts			  ## port_overwrite.c:318:1


clock_critical_exit.1226:
 1e0fbfe:    c0 ff ec e0 1b 00 	r0 = 1827052 <uECC_vli_cmp_unsafe+0xB70F0 : 1be0ec >			  ## port_overwrite.c:321:0
 1e0fc04:    c1 f4 00 09       	[r0 + 4] = 0			  ## port_overwrite.c:322:14
 1e0fc08:    c1 ff 8c 31 00 00 	r1 = 12684 <hdl.15 : 318c >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/clock.c:1753:20
 1e0fc0e:    01 42             	r1 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/clock.c:1753:20
 1e0fc10:    42 76             	r2 = 100			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/clock.c:2246:9
 1e0fc12:    e0 fe 20 11       	r1 = r1 / r2 (s)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/clock.c:2246:9
 1e0fc16:    29 40             	[r0 + 8] = r1			  ## port_overwrite.c:323:14
 1e0fc18:    c0 f4 01 09       	[r0 + 0] = 1			  ## port_overwrite.c:324:14
 1e0fc1c:    20 00             	rts			  ## port_overwrite.c:325:1


vFillingTaskStack:
 1e0fc1e:    74 01             	[--sp] = {rets, r4}			  ## port_overwrite.c:232:0
 1e0fc20:    01 08             	r1 = r0			  ## port_overwrite.c:232:0
 1e0fc22:    8f f3 71 9b       	call 2045666 <uxTaskStack : 3308 >			  ## port_overwrite.c:233:26
 1e0fc26:    01 42             	r1 = [r1 + 0]			  ## port_overwrite.c:234:26
 1e0fc28:    04 fc 80 00       	r4 = r0 + 128
 1e0fc2c:    30 fd 7f 19       	r0 = r1 & 4294967168			  ## port_overwrite.c:234:26
 1e0fc30:    21 b1             	r1 = r0 - r4			  ## port_overwrite.c:234:81
 1e0fc32:    40 08             	r0 = r4			  ## port_overwrite.c:238:5
 1e0fc34:    97 f3 42 b9       	call 3109508 <vmalloc_ : 106ebc >			  ## port_overwrite.c:238:5
 1e0fc38:    a0 75             	r0 = 90			  ## port_overwrite.c:240:5
 1e0fc3a:    38 68             	b[r4 + 3] = r0			  ## port_overwrite.c:240:5
 1e0fc3c:    28 68             	b[r4 + 2] = r0			  ## port_overwrite.c:240:5
 1e0fc3e:    18 68             	b[r4 + 1] = r0			  ## port_overwrite.c:240:5
 1e0fc40:    08 68             	b[r4 + 0] = r0			  ## port_overwrite.c:240:5
 1e0fc42:    54 01             	{pc, r4} = [sp++]			  ## port_overwrite.c:241:1


maskrom_init:
 1e0fc44:    74 01             	[--sp] = {rets, r4}			  ## port_overwrite.c:245:0
 1e0fc46:    f4 0b             	sp += -24			  ## port_overwrite.c:245:0
 1e0fc48:    c0 ff 26 f4 e0 01 	r0 = 31519782 <assert_printf : 1e0f426 >			  ## port_overwrite.c:248:5
 1e0fc4e:    58 02             	[sp+20] = r0			  ## port_overwrite.c:248:5
 1e0fc50:    c0 ff 7a f4 e0 01 	r0 = 31519866 <log_putbyte : 1e0f47a >			  ## port_overwrite.c:248:5
 1e0fc56:    48 02             	[sp+16] = r0			  ## port_overwrite.c:248:5
 1e0fc58:    c0 ff 52 06 e1 01 	r0 = 31524434 <idle_hook : 1e10652 >			  ## port_overwrite.c:248:5
 1e0fc5e:    38 02             	[sp+12] = r0			  ## port_overwrite.c:248:5
 1e0fc60:    00 70             	r0 = 0			  ## port_overwrite.c:248:5
 1e0fc62:    28 02             	[sp+8] = r0			  ## port_overwrite.c:248:5
 1e0fc64:    c0 ff 7c 33 00 00 	r0 = 13180 <vAppPortStartFirstTask : 337c >			  ## port_overwrite.c:248:5
 1e0fc6a:    18 02             	[sp+4] = r0			  ## port_overwrite.c:248:5
 1e0fc6c:    c4 ff d0 fc e0 01 	r4 = 31522000 <suppress_tick_and_sleep : 1e0fcd0 >			  ## port_overwrite.c:248:5
 1e0fc72:    c0 ff 0c fa e0 01 	r0 = 31521292 <free : 1e0fa0c >			  ## port_overwrite.c:248:5
 1e0fc78:    c1 ff b6 f9 e0 01 	r1 = 31521206 <malloc : 1e0f9b6 >			  ## port_overwrite.c:248:5
 1e0fc7e:    c2 ff 76 08 e1 01 	r2 = 31524982 <vPortVFreeStack : 1e10876 >			  ## port_overwrite.c:248:5
 1e0fc84:    c3 ff 7e 07 e1 01 	r3 = 31524734 <pvPortVMallocStack : 1e1077e >			  ## port_overwrite.c:248:5
 1e0fc8a:    0c 02             	[sp] = r4			  ## port_overwrite.c:248:5
 1e0fc8c:    97 f3 54 b9       	call 3109544 <mask_init : 106f38 >			  ## port_overwrite.c:248:5
 1e0fc90:    c0 ff 40 10 00 00 	r0 = 4160 <stack_magic : 1040 >			  ## port_overwrite.c:248:5
 1e0fc96:    20 fb 5a 1f       	r1 = 1515870810			  ## port_overwrite.c:248:5
 1e0fc9a:    39 40             	[r0 + 12] = r1			  ## port_overwrite.c:257:5
 1e0fc9c:    29 40             	[r0 + 8] = r1			  ## port_overwrite.c:257:5
 1e0fc9e:    19 40             	[r0 + 4] = r1			  ## port_overwrite.c:257:5
 1e0fca0:    09 40             	[r0 + 0] = r1			  ## port_overwrite.c:257:5
 1e0fca2:    c0 ff 50 18 00 00 	r0 = 6224 <stack_magic0 : 1850 >			  ## port_overwrite.c:257:5
 1e0fca8:    39 40             	[r0 + 12] = r1			  ## port_overwrite.c:258:5
 1e0fcaa:    29 40             	[r0 + 8] = r1			  ## port_overwrite.c:258:5
 1e0fcac:    19 40             	[r0 + 4] = r1			  ## port_overwrite.c:258:5
 1e0fcae:    09 40             	[r0 + 0] = r1			  ## port_overwrite.c:258:5
 1e0fcb0:    c0 ff ac 31 00 00 	r0 = 12716 <CurrentTCB : 31ac >			  ## port_overwrite.c:263:5
 1e0fcb6:    c1 ff 7c 1e 00 00 	r1 = 7804 <highCurrentTCB : 1e7c >			  ## port_overwrite.c:263:5
 1e0fcbc:    97 f3 76 b8       	call 3109100 <os_get_curr_tcb_var : 106dac >			  ## port_overwrite.c:263:5
 1e0fcc0:    c2 ff 0c 33 00 00 	r2 = 13068 <vAppSoftwareInterruptISR : 330c >			  ## port_overwrite.c:265:5
 1e0fcc6:    f0 73             	r0 = 63			  ## port_overwrite.c:265:5
 1e0fcc8:    01 70             	r1 = 0			  ## port_overwrite.c:265:5
 1e0fcca:    5e 17             	call -324 <request_irq : 1e0fb88 >			  ## port_overwrite.c:265:5
 1e0fccc:    0c 0a             	sp += 24			  ## port_overwrite.c:265:5
 1e0fcce:    54 01             	{pc, r4} = [sp++]			  ## port_overwrite.c:266:1


suppress_tick_and_sleep:
 1e0fcd0:    7f 01             	[--sp] = {rets, r15-r4}			  ## port_overwrite.c:82:0
 1e0fcd2:    fc 0b             	sp += -8			  ## port_overwrite.c:82:0
 1e0fcd4:    97 f3 62 b8       	call 3109060 <local_irq_disable : 106d9c >			  ## port_overwrite.c:464:5
 1e0fcd8:    08 00             	csync			  ## port_overwrite.c:464:5
 1e0fcda:    c8 ff b0 20 00 00 	r8 = 8368 <gatt_client_conn_handle : 20b0 >			  ## port_overwrite.c:464:5
 1e0fce0:    00 f9 14 80       	r0 = b[r8 + 20] (u)			  ## port_overwrite.c:465:9
 1e0fce4:    00 e0 b1 14       	if (r0 != 0) goto 2402 <suppress_tick_and_sleep+0x97A : 1e1064a >
 1e0fce8:    cf ff 00 50 00 00 	r15 = 20480 <nvbss_begin : 5000 >
 1e0fcee:    00 f9 33 f0       	r0 = b[r15 + 51] (u)			  ## port_overwrite.c:465:9
 1e0fcf2:    00 e0 aa 04       	if (r0 == 0) goto 2388 <suppress_tick_and_sleep+0x97A : 1e1064a >			  ## port_overwrite.c:465:9
 1e0fcf6:    00 f9 47 f0       	r0 = b[r15 + 71] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1067:20
 1e0fcfa:    0b 30             	if (r0 != 0) goto 22 <suppress_tick_and_sleep+0x42 : 1e0fd12 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1067:20
 1e0fcfc:    01 f9 a4 80       	r1 = b[r8 + 164] (u)
 1e0fd00:    40 71             	r0 = 20			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:255:35
 1e0fd02:    01 32             	if (r1 != 0) goto 2 <suppress_tick_and_sleep+0x36 : 1e0fd06 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:255:35
 1e0fd04:    00 70             	r0 = 0
 1e0fd06:    c1 ff 24 1e 00 00 	r1 = 7716 <lrc.4 : 1e24 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:255:21
 1e0fd0c:    01 62             	r1 = b[r1 + 0] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:255:13
 1e0fd0e:    01 f2 9c 34       	if (r1 < r0) goto 2360 <suppress_tick_and_sleep+0x97A : 1e1064a >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:255:13
 1e0fd12:    97 f3 43 b8       	call 3108998 <local_irq_disable : 106d9c >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1073:5
 1e0fd16:    08 00             	csync			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1073:5
 1e0fd18:    00 f9 47 f0       	r0 = b[r15 + 71] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1747:20
 1e0fd1c:    c1 ff 17 18 1a 00 	r1 = 1710103 <uECC_vli_cmp_unsafe+0x9A81B : 1a1817 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1747:20
 1e0fd22:    10 e0 11 10       	if (r0 != 1) goto 34 <suppress_tick_and_sleep+0x78 : 1e0fd48 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1747:20
 1e0fd26:    00 62             	r0 = b[r1 + 0] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1751:9
 1e0fd28:    10 b0             	r0 |= 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1751:9
 1e0fd2a:    08 62             	b[r1 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1751:9
 1e0fd2c:    00 f9 47 f0       	r0 = b[r15 + 71] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1753:52
 1e0fd30:    01 f9 48 f0       	r1 = b[r15 + 72] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1753:24
 1e0fd34:    01 f2 17 00       	if (r1 == r0) goto 46 <suppress_tick_and_sleep+0x96 : 1e0fd66 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1753:24
 1e0fd38:    00 f6 24 f3       	r0 = [r15 + 804]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1757:40
 1e0fd3c:    10 f6 20 f3       	[r15 + 800] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1757:27
 1e0fd40:    bf f3 30 a3       	call -47520 <__hw_btosc_time_set : 1e043a4 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1759:9
 1e0fd44:    00 f9 47 f0       	r0 = b[r15 + 71] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1763:20
 1e0fd48:    0c 30             	if (r0 != 0) goto 24 <suppress_tick_and_sleep+0x92 : 1e0fd62 >
 1e0fd4a:    8f f3 a2 a0       	call 2048324 <__get_lrc_hz : 3e92 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1766:29
 1e0fd4e:    10 f6 20 f3       	[r15 + 800] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1766:27
 1e0fd52:    00 f9 48 f0       	r0 = b[r15 + 72] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1769:24
 1e0fd56:    80 20             	if (r0 == 0) goto 256 <suppress_tick_and_sleep+0x188 : 1e0fe58 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1769:24
 1e0fd58:    10 70             	r0 = 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1775:9
 1e0fd5a:    bf f3 7f a3       	call -47362 <__hw_lrc_time_set : 1e0445c >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1775:9
 1e0fd5e:    00 f9 47 f0       	r0 = b[r15 + 71] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1775:9
 1e0fd62:    10 f9 48 f0       	b[r15 + 72] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1778:30
 1e0fd66:    f0 08             	r0 = r15			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1077:13
 1e0fd68:    bf f3 f9 a3       	call -47118 <low_power_group_query : 1e0455e >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1077:13
 1e0fd6c:    06 08             	r6 = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1077:13
 1e0fd6e:    f4 fc 0c 00       	r4 = r15 + 12			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1079:13
 1e0fd72:    40 08             	r0 = r4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1079:13
 1e0fd74:    bf f3 f3 a3       	call -47130 <low_power_group_query : 1e0455e >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1079:13
 1e0fd78:    06 f2 01 30       	if (r6 < r0) goto 2 <suppress_tick_and_sleep+0xAE : 1e0fd7e >
 1e0fd7c:    06 08             	r6 = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1081:15
 1e0fd7e:    06 e0 62 04       	if (r6 == 0) goto 2244 <suppress_tick_and_sleep+0x976 : 1e10646 >
 1e0fd82:    c0 ff 88 1f 1a 00 	r0 = 1712008 <uECC_vli_cmp_unsafe+0x9AF8C : 1a1f88 >
 1e0fd88:    02 60             	r2 = b[r0 + 0] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/wdt.c:91:9
 1e0fd8a:    01 70             	r1 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/wdt.c:91:9
 1e0fd8c:    04 f3 0b 20       	if ((r2 & 16) == 0) goto 22 <suppress_tick_and_sleep+0xD6 : 1e0fda6 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/wdt.c:91:9
 1e0fd90:    01 60             	r1 = b[r0 + 0] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/wdt.c:30:18
 1e0fd92:    11 b3             	r1 |= 64			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/wdt.c:30:18
 1e0fd94:    09 60             	b[r0 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/wdt.c:30:18
 1e0fd96:    00 60             	r0 = b[r0 + 0] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/wdt.c:93:25
 1e0fd98:    20 fd 0f 09       	r0 = r0 & 15			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/wdt.c:93:38
 1e0fd9c:    c1 ff 54 60 e1 01 	r1 = 31547476 <wdt_time : 1e16054 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/wdt.c:93:16
 1e0fda2:    a1 f6 00 10       	r1 = [r1+r0<<2]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/wdt.c:93:16
 1e0fda6:    00 fb e8 03       	r0 = 1000 <BTCTLER_LE_RAM_TOTAL+0xA : 3e8 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1091:24
 1e0fdaa:    08 0e             	r0 = r1 * r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1091:24
 1e0fdac:    40 d0             	r0 = r0 >> 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1091:41
 1e0fdae:    02 08             	r2 = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1092:21
 1e0fdb0:    06 f2 01 80       	if (r6 > r0) goto 2 <suppress_tick_and_sleep+0xE6 : 1e0fdb6 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1092:21
 1e0fdb4:    62 08             	r2 = r6			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1092:21
 1e0fdb6:    01 30             	if (r0 != 0) goto 2 <suppress_tick_and_sleep+0xEA : 1e0fdba >
 1e0fdb8:    62 08             	r2 = r6			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1092:21
 1e0fdba:    bf f3 ef a3       	call -47138 <__lp_timer_is_running : 1e0459c >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1096:9
 1e0fdbe:    04 20             	if (r0 == 0) goto 8 <suppress_tick_and_sleep+0xF8 : 1e0fdc8 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1096:9
 1e0fdc0:    bf f3 f3 a3       	call -47130 <__lp_timer_dump : 1e045aa >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1097:9
 1e0fdc4:    8f f3 0c 9b       	call 2045464 <p33_soft_reset : 33e0 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/driver/cpu/bd19/asm/cpu.h:148:5
 1e0fdc8:    00 f6 00 f0       	r0 = [r15 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/system/generic/list.h:124:18
 1e0fdcc:    c5 ff d1 1f 1a 00 	r5 = 1712081 <uECC_vli_cmp_unsafe+0x9AFD5 : 1a1fd1 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/system/generic/list.h:124:18
 1e0fdd2:    f0 f2 12 00       	if (r0 == r15) goto 36 <suppress_tick_and_sleep+0x12A : 1e0fdfa >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1102:9
 1e0fdd6:    10 6a             	r0 = b[r5 + 1] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1104:13
 1e0fdd8:    05 f3 02 00       	if ((r0 & 32) == 0) goto 4 <suppress_tick_and_sleep+0x110 : 1e0fde0 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1104:13
 1e0fddc:    bf f3 e5 a3       	call -47158 <__lp_timer_dump : 1e045aa >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1105:13
 1e0fde0:    20 08             	r0 = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1111:13
 1e0fde2:    bf f3 ed a3       	call -47142 <__lp_timer_set_time : 1e045c0 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1111:13
 1e0fde6:    00 e0 2e 04       	if (r0 == 0) goto 2140 <suppress_tick_and_sleep+0x976 : 1e10646 >
 1e0fdea:    10 6a             	r0 = b[r5 + 1] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1116:13
 1e0fdec:    05 f3 02 00       	if ((r0 & 32) == 0) goto 4 <suppress_tick_and_sleep+0x124 : 1e0fdf4 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1116:13
 1e0fdf0:    bf f3 db a3       	call -47178 <__lp_timer_dump : 1e045aa >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1120:13
 1e0fdf4:    bf f3 27 a4       	call -47026 <__lp_timer_get_period : 1e04646 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1123:19
 1e0fdf8:    0f 18             	goto 30 <suppress_tick_and_sleep+0x148 : 1e0fe18 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1123:19
 1e0fdfa:    20 08             	r0 = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1127:13
 1e0fdfc:    bf f3 e0 a3       	call -47168 <__lp_timer_set_time : 1e045c0 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1127:13
 1e0fe00:    00 e0 21 04       	if (r0 == 0) goto 2114 <suppress_tick_and_sleep+0x976 : 1e10646 >
 1e0fe04:    bf f3 1f a4       	call -47042 <__lp_timer_get_period : 1e04646 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1133:19
 1e0fe08:    ed 07             	r13 = -2
 1e0fe0a:    e0 ef 06 00       	if (r0 == -2) goto 12 <suppress_tick_and_sleep+0x14A : 1e0fe1a >
 1e0fe0e:    c1 ff 00 3e 1e 00 	r1 = 1981952 <uECC_vli_cmp_unsafe+0xDCE04 : 1e3e00 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1136:13
 1e0fe14:    00 f4 20 19       	[r1 + 0] |= 32			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1136:13
 1e0fe18:    0d 08             	r13 = r0
 1e0fe1a:    f0 08             	r0 = r15			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1141:5
 1e0fe1c:    d1 08             	r1 = r13			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1141:5
 1e0fe1e:    bf f3 20 a4       	call -47040 <__low_power_suspend : 1e04662 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1141:5
 1e0fe22:    40 08             	r0 = r4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1145:5
 1e0fe24:    d1 08             	r1 = r13			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1145:5
 1e0fe26:    bf f3 1c a4       	call -47048 <__low_power_suspend : 1e04662 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1145:5
 1e0fe2a:    c6 ff 38 2e e1 01 	r6 = 31534648 <uart : 1e12e38 >
 1e0fe30:    c7 ff d8 2d e1 01 	r7 = 31534552 <syscfg_ops_end : 1e12dd8 >
 1e0fe36:    05 70             	r5 = 0
 1e0fe38:    67 f2 13 20       	if (r7 >= r6) goto 38 <suppress_tick_and_sleep+0x192 : 1e0fe62 >
 1e0fe3c:    10 4e             	r0 = [r7 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1238:16
 1e0fe3e:    08 20             	if (r0 == 0) goto 16 <suppress_tick_and_sleep+0x180 : 1e0fe50 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1238:16
 1e0fe40:    80 00             	call r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1243:13
 1e0fe42:    06 20             	if (r0 == 0) goto 12 <suppress_tick_and_sleep+0x180 : 1e0fe50 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1243:13
 1e0fe44:    10 4e             	r0 = [r7 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1247:16
 1e0fe46:    80 00             	call r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1247:13
 1e0fe48:    10 e0 0a 00       	if (r0 == 1) goto 20 <suppress_tick_and_sleep+0x190 : 1e0fe60 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1247:13
 1e0fe4c:    10 4e             	r0 = [r7 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1252:16
 1e0fe4e:    80 00             	call r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1252:13
 1e0fe50:    c7 80             	r7 += 12			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1236:5
 1e0fe52:    67 f2 f3 3f       	if (r7 < r6) goto -26 <suppress_tick_and_sleep+0x16C : 1e0fe3c >
 1e0fe56:    05 18             	goto 10 <suppress_tick_and_sleep+0x192 : 1e0fe62 >
 1e0fe58:    00 70             	r0 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1771:13
 1e0fe5a:    bf f3 ff a2       	call -47618 <__hw_lrc_time_set : 1e0445c >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1771:13
 1e0fe5e:    83 1f             	goto -250 <suppress_tick_and_sleep+0x96 : 1e0fd66 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1771:13
 1e0fe60:    15 70             	r5 = 1
 1e0fe62:    15 f6 1c f0       	[r15 + 28] = r5			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1147:19
 1e0fe66:    00 70             	r0 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:597:5
 1e0fe68:    bf f3 09 a2       	call -48110 <__hw_lrc_enable : 1e0427e >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:597:5
 1e0fe6c:    00 f9 47 f0       	r0 = b[r15 + 71] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:599:20
 1e0fe70:    ce ff 08 00 1e 00 	r14 = 1966088 <uECC_vli_cmp_unsafe+0xD900C : 1e0008 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:599:20
 1e0fe76:    1c 02             	[sp+4] = r4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:599:20
 1e0fe78:    00 e0 2f 11       	if (r0 != 0) goto 606 <suppress_tick_and_sleep+0x40A : 1e100da >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:599:20
 1e0fe7c:    c0 ff 54 31 00 00 	r0 = 12628 <update_bss_end : 3154 >
 1e0fe82:    00 60             	r0 = b[r0 + 0] (u)
 1e0fe84:    00 e0 29 01       	if (r0 == 0) goto 594 <suppress_tick_and_sleep+0x40A : 1e100da >
 1e0fe88:    30 72             	r0 = 35			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:344:9
 1e0fe8a:    bf f3 a3 fa       	call -2746 <putchar : 1e0f3d4 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:344:9
 1e0fe8e:    e0 fc 18 19       	r0 = r14 + 6424			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:344:9
 1e0fe92:    01 08             	r1 = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:344:9
 1e0fe94:    00 42             	r0 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:93:22
 1e0fe96:    08 02             	[sp] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:95:5
 1e0fe98:    00 42             	r0 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:95:5
 1e0fe9a:    30 fd 1c 09       	r0 = r0 & 4294967267			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:95:5
 1e0fe9e:    90 b1             	r0 |= 8			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:95:5
 1e0fea0:    08 42             	[r1 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:95:5
 1e0fea2:    00 f6 0c e0       	r0 = [r14 + 12]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:98:5
 1e0fea6:    30 fd e0 0c       	r0 = r0 & 536870911			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:98:5
 1e0feaa:    00 fd 80 0c       	r0 = r0 | 2147483648			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:98:5
 1e0feae:    10 f6 0c e0       	[r14 + 12] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:98:5
 1e0feb2:    01 f4 08 1a       	[r1 + 4] |= 2048			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:100:5
 1e0feb6:    00 f4 40 1c       	[r1 + 0] |= 1073741824			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:102:5
 1e0feba:    10 42             	r0 = [r1 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0febc:    30 fd 07 09       	r0 = r0 & 4294967288			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0fec0:    00 fd 03 09       	r0 = r0 | 3			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0fec4:    18 42             	[r1 + 4] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0fec6:    c0 ff 5c 31 00 00 	r0 = 12636 <hdl.5 : 315c >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0fecc:    00 60             	r0 = b[r0 + 0] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0fece:    f0 fd 60 90       	r9 = r0 << 12			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0fed2:    f2 70             	r2 = 15			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0fed4:    05 70             	r5 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0fed6:    38 70             	r8 = 3			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0fed8:    80 71             	r0 = 24			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0feda:    c0 fe 00 79       	r7 = r9 / r0 (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0fede:    0a 70             	r10 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0fee0:    04 70             	r4 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0fee2:    0b 70             	r11 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0fee4:    0c 70             	r12 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0fee6:    e0 fc 18 19       	r0 = r14 + 6424
 1e0feea:    01 08             	r1 = r0
 1e0feec:    10 42             	r0 = [r1 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:121:9
 1e0feee:    86 04             	r6 = r2.b0 (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:121:9
 1e0fef0:    c5 fd 20 06       	r0 <= insert(r6, p:4, l:5)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:121:9
 1e0fef4:    18 42             	[r1 + 4] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:121:9
 1e0fef6:    bf f3 d1 a3       	call -47198 <__hw_xosc_fsck_run : 1e0469c >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:123:9
 1e0fefa:    e0 fc fc 10       	r0 = r14 + 4348			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:125:32
 1e0fefe:    00 40             	r0 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:125:32
 1e0ff00:    61 fb 03 59       	r1 = 3 - r5
 1e0ff04:    60 ff ff 19 08 00 	if ((r1 & 255) == 0) goto 16 <suppress_tick_and_sleep+0x24A : 1e0ff1a >
 1e0ff0a:    11 70             	r1 = 1
 1e0ff0c:    83 08             	r3 = r8
 1e0ff0e:    f3 8f             	r3 += -1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:76:19
 1e0ff10:    49 c0             	r1 = r1 << 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:77:17
 1e0ff12:    61 ff ff 39 fb ff 	if ((r3 & 255) != 0) goto -10 <suppress_tick_and_sleep+0x23E : 1e0ff0e >
 1e0ff18:    01 18             	goto 2 <suppress_tick_and_sleep+0x24C : 1e0ff1c >
 1e0ff1a:    11 70             	r1 = 1
 1e0ff1c:    70 f2 04 90       	if (r0 <= r7) goto 8 <suppress_tick_and_sleep+0x258 : 1e0ff28 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:128:13
 1e0ff20:    61 09             	r1 += r6			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:131:18
 1e0ff22:    0c 08             	r12 = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:131:18
 1e0ff24:    24 08             	r4 = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:131:18
 1e0ff26:    03 18             	goto 6 <suppress_tick_and_sleep+0x25E : 1e0ff2e >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:131:18
 1e0ff28:    61 bc             	r1 = r6 - r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:135:18
 1e0ff2a:    0b 08             	r11 = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:135:18
 1e0ff2c:    2a 08             	r10 = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:135:18
 1e0ff2e:    15 80             	r5 += 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:119:35
 1e0ff30:    f8 8f             	r8 += -1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:119:5
 1e0ff32:    12 08             	r2 = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:119:5
 1e0ff34:    55 e0 d7 1f       	if (r5 != 5) goto -82 <suppress_tick_and_sleep+0x216 : 1e0fee6 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:119:5
 1e0ff38:    90 fb 70 0c       	r0 = r12 - r7			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:140:57
 1e0ff3c:    90 fb b0 17       	r1 = r7 - r11			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:140:25
 1e0ff40:    01 f2 01 30       	if (r1 < r0) goto 2 <suppress_tick_and_sleep+0x276 : 1e0ff46 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:140:25
 1e0ff44:    4a 08             	r10 = r4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:143:5
 1e0ff46:    e0 fc 18 19       	r0 = r14 + 6424
 1e0ff4a:    01 08             	r1 = r0
 1e0ff4c:    10 42             	r0 = [r1 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:156:5
 1e0ff4e:    c5 fd 20 0a       	r0 <= insert(r10, p:4, l:5)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:156:5
 1e0ff52:    18 42             	[r1 + 4] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:156:5
 1e0ff54:    35 70             	r5 = 3			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:156:5
 1e0ff56:    02 70             	r2 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:156:5
 1e0ff58:    13 70             	r3 = 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:156:5
 1e0ff5a:    e0 fc 18 19       	r0 = r14 + 6424
 1e0ff5e:    04 08             	r4 = r0
 1e0ff60:    10 48             	r0 = [r4 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:159:9
 1e0ff62:    c0 d0             	r0 = r0 >> 3			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:159:9
 1e0ff64:    51 08             	r1 = r5			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:159:9
 1e0ff66:    dd fd 18 10       	r1 <= insert(r0, p:3, l:29)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:159:9
 1e0ff6a:    19 48             	[r4 + 4] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:159:9
 1e0ff6c:    bf f3 96 a3       	call -47316 <__hw_xosc_fsck_run : 1e0469c >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:161:9
 1e0ff70:    e0 fc fc 10       	r0 = r14 + 4348			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:163:32
 1e0ff74:    00 40             	r0 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:163:32
 1e0ff76:    64 fb 01 29       	r4 = 1 - r2
 1e0ff7a:    11 70             	r1 = 1
 1e0ff7c:    60 ff ff 49 06 00 	if ((r4 & 255) == 0) goto 12 <suppress_tick_and_sleep+0x2BE : 1e0ff8e >
 1e0ff82:    36 08             	r6 = r3
 1e0ff84:    f6 8f             	r6 += -1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:76:19
 1e0ff86:    49 c0             	r1 = r1 << 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:77:17
 1e0ff88:    61 ff ff 69 fb ff 	if ((r6 & 255) != 0) goto -10 <suppress_tick_and_sleep+0x2B4 : 1e0ff84 >
 1e0ff8e:    45 05             	r5 = r5.b0 (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:159:9
 1e0ff90:    66 fb 00 19       	r6 = 0 - r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:166:13
 1e0ff94:    70 f2 01 80       	if (r0 > r7) goto 2 <suppress_tick_and_sleep+0x2CA : 1e0ff9a >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:166:13
 1e0ff98:    16 08             	r6 = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:166:13
 1e0ff9a:    65 09             	r5 += r6			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:166:13
 1e0ff9c:    12 80             	r2 += 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:158:47
 1e0ff9e:    f3 8f             	r3 += -1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:158:5
 1e0ffa0:    32 e0 db 1f       	if (r2 != 3) goto -74 <suppress_tick_and_sleep+0x28A : 1e0ff5a >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:158:5
 1e0ffa4:    e0 fc 18 19       	r0 = r14 + 6424
 1e0ffa8:    02 08             	r2 = r0
 1e0ffaa:    10 44             	r0 = [r2 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:190:5
 1e0ffac:    f0 b5             	r0 &= 4294965247			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:190:5
 1e0ffae:    18 44             	[r2 + 4] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:190:5
 1e0ffb0:    00 44             	r0 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:192:5
 1e0ffb2:    70 bf             	r0 &= 3221225471			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:192:5
 1e0ffb4:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:192:5
 1e0ffb6:    00 44             	r0 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:194:5
 1e0ffb8:    01 02             	r1 = [sp]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:194:5
 1e0ffba:    89 d0             	r1 = r1 >> 2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:194:5
 1e0ffbc:    c3 fd 10 01       	r0 <= insert(r1, p:2, l:3)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:194:5
 1e0ffc0:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:194:5
 1e0ffc2:    00 44             	r0 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:211:22
 1e0ffc4:    08 02             	[sp] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:213:5
 1e0ffc6:    00 44             	r0 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:213:5
 1e0ffc8:    30 fd 1c 09       	r0 = r0 & 4294967267			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:213:5
 1e0ffcc:    90 b1             	r0 |= 8			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:213:5
 1e0ffce:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:213:5
 1e0ffd0:    10 44             	r0 = [r2 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:216:15
 1e0ffd2:    10 44             	r0 = [r2 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:217:15
 1e0ffd4:    01 f6 0c e0       	r1 = [r14 + 12]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:219:5
 1e0ffd8:    31 fd e0 1c       	r1 = r1 & 536870911			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:219:5
 1e0ffdc:    01 fd 80 1c       	r1 = r1 | 2147483648			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:219:5
 1e0ffe0:    11 f6 0c e0       	[r14 + 12] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:219:5
 1e0ffe4:    01 f4 08 2a       	[r2 + 4] |= 2048			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:221:5
 1e0ffe8:    00 f4 40 2c       	[r2 + 0] |= 1073741824			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:223:5
 1e0ffec:    20 fd 07 09       	r0 = r0 & 7			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:217:15
 1e0fff0:    01 08             	r1 = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:228:16
 1e0fff2:    20 e0 01 80       	if (r0 > 2) goto 2 <suppress_tick_and_sleep+0x328 : 1e0fff8 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:228:16
 1e0fff6:    21 70             	r1 = 2
 1e0fff8:    57 70             	r7 = 5
 1e0fffa:    50 e0 01 80       	if (r0 > 5) goto 2 <suppress_tick_and_sleep+0x330 : 1e10000 >
 1e0fffe:    17 08             	r7 = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:226:9
 1e10000:    80 71             	r0 = 24
 1e10002:    c0 fe 00 59       	r5 = r9 / r0 (u)
 1e10006:    54 fc fb ff       	r4 = r5 + -5
 1e1000a:    53 9a             	r3 = r5 + 5
 1e1000c:    f8 07             	r8 = -1
 1e1000e:    fa 7f             	r10 = 255
 1e10010:    02 70             	r2 = 0
 1e10012:    c9 ff f4 5f e1 01 	r9 = 31547380 <iokey_data+0x8 : 1e15ff4 >
 1e10018:    0b 70             	r11 = 0
 1e1001a:    fc 7f             	r12 = 255
 1e1001c:    00 fa 00 b9       	r0 = b[r11+r9] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:240:9
 1e10020:    c1 ff 20 19 1e 00 	r1 = 1972512 <uECC_vli_cmp_unsafe+0xDA924 : 1e1920 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:240:9
 1e10026:    16 08             	r6 = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:240:9
 1e10028:    11 4c             	r1 = [r6 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:240:9
 1e1002a:    70 09             	r0 += r7			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:240:9
 1e1002c:    c3 fd 00 10       	r1 <= insert(r0, p:0, l:3)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:240:9
 1e10030:    19 4c             	[r6 + 4] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:240:9
 1e10032:    bf f3 33 a3       	call -47514 <__hw_xosc_fsck_run : 1e0469c >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:242:9
 1e10036:    c0 ff 04 11 1e 00 	r0 = 1970436 <uECC_vli_cmp_unsafe+0xDA108 : 1e1104 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:243:32
 1e1003c:    00 40             	r0 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:243:32
 1e1003e:    61 b1             	r1 = r0 - r5			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:245:33
 1e10040:    ce df             	r6 = r1 >>> 31			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:245:33
 1e10042:    61 09             	r1 += r6			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:245:33
 1e10044:    d1 bc             	r1 ^= r6			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:245:33
 1e10046:    41 04             	r1 = r1.b0 (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:248:23
 1e10048:    18 f2 04 90       	if (r8 <= r1) goto 8 <suppress_tick_and_sleep+0x384 : 1e10054 >
 1e1004c:    06 fa 00 b9       	r6 = b[r11+r9] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:250:34
 1e10050:    ce bd             	r14 = r6 + r7			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:250:32
 1e10052:    18 08             	r8 = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:250:32
 1e10054:    30 f2 0b 20       	if (r0 >= r3) goto 22 <suppress_tick_and_sleep+0x39E : 1e1006e >
 1e10058:    40 f2 09 90       	if (r0 <= r4) goto 18 <suppress_tick_and_sleep+0x39E : 1e1006e >
 1e1005c:    e4 fd 00 1c       	r1 = r12.b0 (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:254:23
 1e10060:    20 08             	r0 = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:254:17
 1e10062:    00 ff ff 10 01 00 	if (r1 == 255) goto 2 <suppress_tick_and_sleep+0x39A : 1e1006a >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:254:17
 1e10068:    c0 08             	r0 = r12			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:254:17
 1e1006a:    0c 08             	r12 = r0
 1e1006c:    2a 08             	r10 = r2
 1e1006e:    1b 80             	r11 += 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:236:50
 1e10070:    12 80             	r2 += 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:236:23
 1e10072:    5b e0 d3 1f       	if (r11 != 5) goto -90 <suppress_tick_and_sleep+0x34C : 1e1001c >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:236:23
 1e10076:    58 e0 0d 20       	if (r8 >= 5) goto 26 <suppress_tick_and_sleep+0x3C4 : 1e10094 >
 1e1007a:    e4 fd 00 0c       	r0 = r12.b0 (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:265:26
 1e1007e:    e4 fd 00 1a       	r1 = r10.b0 (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:265:18
 1e10082:    21 b2             	r1 = r1 - r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:265:24
 1e10084:    22 70             	r2 = 2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:265:33
 1e10086:    e0 fe 20 11       	r1 = r1 / r2 (s)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:265:33
 1e1008a:    10 09             	r0 += r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:265:37
 1e1008c:    00 04             	r0 = r0.b0 (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:266:23
 1e1008e:    00 fa 00 09       	r0 = b[r0+r9] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:266:23
 1e10092:    ce b1             	r14 = r0 + r7			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:266:21
 1e10094:    c0 ff 20 19 1e 00 	r0 = 1972512 <uECC_vli_cmp_unsafe+0xDA924 : 1e1920 >
 1e1009a:    02 08             	r2 = r0
 1e1009c:    10 44             	r0 = [r2 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:272:5
 1e1009e:    c0 d0             	r0 = r0 >> 3			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:272:5
 1e100a0:    dd fd 18 e0       	r14 <= insert(r0, p:3, l:29)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:272:5
 1e100a4:    1e f6 04 20       	[r2 + 4] = r14			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:272:5
 1e100a8:    bf f3 f8 a2       	call -47632 <__hw_xosc_fsck_run : 1e0469c >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:274:5
 1e100ac:    c0 ff 04 11 1e 00 	r0 = 1970436 <uECC_vli_cmp_unsafe+0xDA108 : 1e1104 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:275:28
 1e100b2:    00 40             	r0 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:275:28
 1e100b4:    10 44             	r0 = [r2 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:280:5
 1e100b6:    f0 b5             	r0 &= 4294965247			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:280:5
 1e100b8:    18 44             	[r2 + 4] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:280:5
 1e100ba:    00 44             	r0 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:282:5
 1e100bc:    70 bf             	r0 &= 3221225471			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:282:5
 1e100be:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:282:5
 1e100c0:    00 44             	r0 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:284:5
 1e100c2:    01 02             	r1 = [sp]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:284:5
 1e100c4:    89 d0             	r1 = r1 >> 2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:284:5
 1e100c6:    c3 fd 10 01       	r0 <= insert(r1, p:2, l:3)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:284:5
 1e100ca:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:284:5
 1e100cc:    c4 ff b0 20 00 00 	r4 = 8368 <gatt_client_conn_handle : 20b0 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:284:5
 1e100d2:    48 08             	r8 = r4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:284:5
 1e100d4:    ce ff 08 00 1e 00 	r14 = 1966088 <uECC_vli_cmp_unsafe+0xD900C : 1e0008 >
 1e100da:    01 f6 30 f3       	r1 = [r15 + 816]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:607:20
 1e100de:    02 22             	if (r1 == 0) goto 4 <suppress_tick_and_sleep+0x414 : 1e100e4 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:607:20
 1e100e0:    10 70             	r0 = 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:608:9
 1e100e2:    81 00             	call r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:608:9
 1e100e4:    00 70             	r0 = 0
 1e100e6:    c9 ff 40 86 07 00 	r9 = 493120 <text_size+0x57790 : 78640 >
 1e100ec:    01 70             	r1 = 0
 1e100ee:    a2 f6 00 19       	r2 = [r1+r9<<2]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:499:18
 1e100f2:    80 fb f0 31       	r3 = r1 + r15			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:499:38
 1e100f6:    4a 47             	[r3 + 80] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:499:16
 1e100f8:    b0 f6 00 19       	[r1+r9<<2] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:500:36
 1e100fc:    41 80             	r1 += 4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:498:23
 1e100fe:    01 e2 f6 1f       	if (r1 != 32) goto -20 <suppress_tick_and_sleep+0x41E : 1e100ee >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:498:23
 1e10102:    e0 fc 18 19       	r0 = r14 + 6424
 1e10106:    01 08             	r1 = r0
 1e10108:    00 42             	r0 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:503:22
 1e1010a:    10 f6 70 f0       	[r15 + 112] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:503:12
 1e1010e:    10 42             	r0 = [r1 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:504:22
 1e10110:    10 f6 74 f0       	[r15 + 116] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:504:12
 1e10114:    00 70             	r0 = 0
 1e10116:    9a fc 0a 00       	r10 = r9 + 10
 1e1011a:    01 70             	r1 = 0
 1e1011c:    a2 f6 00 1a       	r2 = [r1+r10<<2]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:507:18
 1e10120:    80 fb f0 31       	r3 = r1 + r15			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:507:39
 1e10124:    ea 47             	[r3 + 120] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:507:16
 1e10126:    b0 f6 00 1a       	[r1+r10<<2] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:508:37
 1e1012a:    41 80             	r1 += 4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:506:23
 1e1012c:    01 e5 f6 1f       	if (r1 != 80) goto -20 <suppress_tick_and_sleep+0x44C : 1e1011c >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:506:23
 1e10130:    9c fc 80 0f       	r12 = r9 + 3968
 1e10134:    01 70             	r1 = 0
 1e10136:    a2 f6 00 1c       	r2 = [r1+r12<<2]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:480:18
 1e1013a:    80 fb f0 31       	r3 = r1 + r15			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:480:41
 1e1013e:    12 f6 c8 30       	[r3 + 200] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:480:16
 1e10142:    b0 f6 00 1c       	[r1+r12<<2] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:481:39
 1e10146:    41 80             	r1 += 4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:479:23
 1e10148:    01 ff e4 10 f4 ff 	if (r1 != 228) goto -24 <suppress_tick_and_sleep+0x466 : 1e10136 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:479:23
 1e1014e:    94 fc 40 0f       	r4 = r9 + 3904
 1e10152:    01 70             	r1 = 0
 1e10154:    a2 f6 00 14       	r2 = [r1+r4<<2]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:485:18
 1e10158:    80 fb f0 31       	r3 = r1 + r15			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:485:38
 1e1015c:    12 f6 ac 31       	[r3 + 428] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:485:16
 1e10160:    b0 f6 00 14       	[r1+r4<<2] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:486:36
 1e10164:    41 80             	r1 += 4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:484:23
 1e10166:    81 e7 f5 1f       	if (r1 != 120) goto -22 <suppress_tick_and_sleep+0x484 : 1e10154 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:484:23
 1e1016a:    e2 fc 00 50       	r2 = r14 + 20480
 1e1016e:    01 44             	r1 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:516:24
 1e10170:    f0 fc 24 02       	r0 = r15 + 548			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:516:24
 1e10174:    09 40             	[r0 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:516:12
 1e10176:    11 44             	r1 = [r2 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:517:24
 1e10178:    19 40             	[r0 + 4] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:517:12
 1e1017a:    61 44             	r1 = [r2 + 24]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:518:24
 1e1017c:    29 40             	[r0 + 8] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:518:12
 1e1017e:    21 44             	r1 = [r2 + 8]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:519:24
 1e10180:    39 40             	[r0 + 12] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:519:12
 1e10182:    31 44             	r1 = [r2 + 12]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:520:24
 1e10184:    49 40             	[r0 + 16] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:520:12
 1e10186:    22 fc 00 01       	r2 = r2 + 256			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:520:12
 1e1018a:    01 44             	r1 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:525:24
 1e1018c:    59 40             	[r0 + 20] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:525:12
 1e1018e:    11 44             	r1 = [r2 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:526:24
 1e10190:    69 40             	[r0 + 24] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:526:12
 1e10192:    61 44             	r1 = [r2 + 24]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:527:24
 1e10194:    79 40             	[r0 + 28] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:527:12
 1e10196:    21 44             	r1 = [r2 + 8]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:528:24
 1e10198:    89 40             	[r0 + 32] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:528:12
 1e1019a:    31 44             	r1 = [r2 + 12]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:529:24
 1e1019c:    99 40             	[r0 + 36] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:529:12
 1e1019e:    22 fc f8 02       	r2 = r2 + 760			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:529:12
 1e101a2:    01 44             	r1 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:533:25
 1e101a4:    a9 40             	[r0 + 40] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:533:12
 1e101a6:    23 fc 00 c4       	r3 = r2 + -15360			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:533:12
 1e101aa:    01 46             	r1 = [r3 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:534:22
 1e101ac:    b9 40             	[r0 + 44] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:534:12
 1e101ae:    11 46             	r1 = [r3 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:535:22
 1e101b0:    c9 40             	[r0 + 48] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:535:12
 1e101b2:    91 44             	r1 = [r2 + 36]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:538:26
 1e101b4:    d9 40             	[r0 + 52] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:538:12
 1e101b6:    22 fc 00 06       	r2 = r2 + 1536			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:538:12
 1e101ba:    01 44             	r1 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:539:23
 1e101bc:    e9 40             	[r0 + 56] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:539:12
 1e101be:    11 44             	r1 = [r2 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:540:23
 1e101c0:    f9 40             	[r0 + 60] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:540:12
 1e101c2:    22 fc 00 d7       	r2 = r2 + -10496			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:540:12
 1e101c6:    01 44             	r1 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:542:22
 1e101c8:    09 41             	[r0 + 64] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:542:12
 1e101ca:    05 70             	r5 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:542:12
 1e101cc:    0d 44             	[r2 + 0] = r5			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:543:17
 1e101ce:    c4 ff 95 18 1a 00 	r4 = 1710229 <uECC_vli_cmp_unsafe+0x9A899 : 1a1895 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:543:17
 1e101d4:    51 68             	r1 = b[r4 + 5] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:551:14
 1e101d6:    81 fd 20 11       	r1 = uextra(r1, p:4, l:1)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:551:14
 1e101da:    19 41             	[r0 + 68] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:551:12
 1e101dc:    51 68             	r1 = b[r4 + 5] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:552:5
 1e101de:    71 b2             	r1 &= 4294967279			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:552:5
 1e101e0:    59 68             	b[r4 + 5] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:552:5
 1e101e2:    21 68             	r1 = b[r4 + 2] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:554:14
 1e101e4:    21 fd 01 19       	r1 = r1 & 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:554:14
 1e101e8:    29 41             	[r0 + 72] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:554:12
 1e101ea:    20 68             	r0 = b[r4 + 2] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:555:5
 1e101ec:    10 b0             	r0 |= 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:555:5
 1e101ee:    28 68             	b[r4 + 2] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:555:5
 1e101f0:    01 f6 30 f3       	r1 = [r15 + 816]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:613:20
 1e101f4:    02 22             	if (r1 == 0) goto 4 <suppress_tick_and_sleep+0x52A : 1e101fa >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:613:20
 1e101f6:    20 70             	r0 = 2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:614:9
 1e101f8:    81 00             	call r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:614:9
 1e101fa:    00 f6 1c f0       	r0 = [r15 + 28]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:667:17
 1e101fe:    10 e0 04 10       	if (r0 != 1) goto 8 <suppress_tick_and_sleep+0x53A : 1e1020a >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:667:17
 1e10202:    00 f9 38 f0       	r0 = b[r15 + 56] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:668:21
 1e10206:    25 fd 01 09       	r5 = r0 & 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:668:43
 1e1020a:    01 f4 01 e9       	[r14 + 4] |= 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:676:24
 1e1020e:    00 f6 08 e0       	r0 = [r14 + 8]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:677:5
 1e10212:    30 fd 07 0a       	r0 = r0 & 4294965503			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:677:5
 1e10216:    00 fd 03 0a       	r0 = r0 | 768			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:677:5
 1e1021a:    10 f6 08 e0       	[r14 + 8] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:677:5
 1e1021e:    08 00             	csync			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:678:5
 1e10220:    00 f6 00 e0       	r0 = [r14 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:680:29
 1e10224:    10 f6 94 80       	[r8 + 148] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:680:17
 1e10228:    00 70             	r0 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:680:17
 1e1022a:    10 f6 00 e0       	[r14 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:681:23
 1e1022e:    01 f6 1c f0       	r1 = [r15 + 28]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:387:18
 1e10232:    02 f9 47 f0       	r2 = b[r15 + 71] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:387:70
 1e10236:    11 e0 02 00       	if (r1 == 1) goto 4 <suppress_tick_and_sleep+0x56E : 1e1023e >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:387:70
 1e1023a:    12 e0 52 10       	if (r2 != 1) goto 164 <suppress_tick_and_sleep+0x612 : 1e102e2 >
 1e1023e:    0a 02             	[sp] = r2
 1e10240:    5e 08             	r14 = r5
 1e10242:    10 70             	r0 = 1
 1e10244:    11 e0 01 00       	if (r1 == 1) goto 2 <suppress_tick_and_sleep+0x57A : 1e1024a >
 1e10248:    00 70             	r0 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:387:24
 1e1024a:    c1 ff 20 19 1e 00 	r1 = 1972512 <uECC_vli_cmp_unsafe+0xDA924 : 1e1920 >
 1e10250:    02 42             	r2 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:391:25
 1e10252:    03 42             	r3 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:392:25
 1e10254:    04 42             	r4 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:393:25
 1e10256:    41 c6             	r1 = r0 << 25			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:393:25
 1e10258:    85 fd 30 22       	r2 = uextra(r2, p:6, l:5)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:391:58
 1e1025c:    84 fd 58 33       	r3 = uextra(r3, p:11, l:4)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:392:57
 1e10260:    84 fd 78 64       	r6 = uextra(r4, p:15, l:4)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:393:57
 1e10264:    0b fb c0 07       	r11 = 1984 <DRIVER_CODE_TOTAL+0x3A : 7c0 >
 1e10268:    c5 ff 01 00 08 19 	r5 = 419954689 <uECC_vli_cmp_unsafe+0xF79005 : 1080001 >
 1e1026e:    10 70             	r0 = 1
 1e10270:    17 70             	r7 = 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:397:25
 1e10272:    32 e0 01 80       	if (r2 > 3) goto 2 <suppress_tick_and_sleep+0x5A8 : 1e10278 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:397:25
 1e10276:    07 70             	r7 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:397:25
 1e10278:    e2 b5             	r2 = r2 - r7			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:397:19
 1e1027a:    94 c1             	r4 = r2 << 6			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:405:32
 1e1027c:    e2 fd b0 44       	r4 = r4 & r11			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:405:32
 1e10280:    e0 fd 40 81       	r8 = r1 | r4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:413:60
 1e10284:    17 70             	r7 = 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:398:26
 1e10286:    33 e0 01 80       	if (r3 > 3) goto 2 <suppress_tick_and_sleep+0x5BC : 1e1028c >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:398:26
 1e1028a:    07 70             	r7 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:398:26
 1e1028c:    e3 b7             	r3 = r3 - r7			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:398:20
 1e1028e:    dc c2             	r4 = r3 << 11			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:406:32
 1e10290:    24 fd 78 4a       	r4 = r4 & 30720			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:406:32
 1e10294:    e0 fd 40 78       	r7 = r8 | r4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:413:60
 1e10298:    36 e0 01 80       	if (r6 > 3) goto 2 <suppress_tick_and_sleep+0x5CE : 1e1029e >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:413:60
 1e1029c:    00 70             	r0 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:399:26
 1e1029e:    26 bc             	r6 = r6 - r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:399:20
 1e102a0:    f0 c3             	r0 = r6 << 15			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:407:32
 1e102a2:    20 fd 70 03       	r0 = r0 & 491520			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:407:32
 1e102a6:    50 be             	r0 |= r7			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:413:60
 1e102a8:    50 ba             	r0 |= r5			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:413:60
 1e102aa:    c4 ff 20 19 1e 00 	r4 = 1972512 <uECC_vli_cmp_unsafe+0xDA924 : 1e1920 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:401:30
 1e102b0:    08 48             	[r4 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:401:30
 1e102b2:    32 e0 dc 1f       	if (r2 != 3) goto -72 <suppress_tick_and_sleep+0x59E : 1e1026e >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:401:30
 1e102b6:    33 e0 da 1f       	if (r3 != 3) goto -76 <suppress_tick_and_sleep+0x59E : 1e1026e >
 1e102ba:    36 e0 d8 1f       	if (r6 != 3) goto -80 <suppress_tick_and_sleep+0x59E : 1e1026e >
 1e102be:    10 70             	r0 = 1
 1e102c0:    c4 ff 95 18 1a 00 	r4 = 1710229 <uECC_vli_cmp_unsafe+0x9A899 : 1a1895 >
 1e102c6:    e5 08             	r5 = r14
 1e102c8:    02 02             	r2 = [sp]
 1e102ca:    12 e0 01 00       	if (r2 == 1) goto 2 <suppress_tick_and_sleep+0x600 : 1e102d0 >
 1e102ce:    00 70             	r0 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:387:79
 1e102d0:    c1 ff f3 94 02 00 	r1 = 169203 <text_size+0x8643 : 294f3 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:433:56
 1e102d6:    c1 fd 70 10       	r1 <= insert(r0, p:14, l:1)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:433:56
 1e102da:    c0 ff 20 19 1e 00 	r0 = 1972512 <uECC_vli_cmp_unsafe+0xDA924 : 1e1920 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:425:26
 1e102e0:    19 40             	[r0 + 4] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:425:26
 1e102e2:    0f 3a             	if (r5 != 0) goto 30 <suppress_tick_and_sleep+0x632 : 1e10302 >
 1e102e4:    c0 ff 00 47 1e 00 	r0 = 1984256 <uECC_vli_cmp_unsafe+0xDD704 : 1e4700 >
 1e102ea:    01 40             	r1 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:687:28
 1e102ec:    31 fd 03 19       	r1 = r1 & 4294967292			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:687:28
 1e102f0:    09 40             	[r0 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:687:28
 1e102f2:    12 e0 06 00       	if (r2 == 1) goto 12 <suppress_tick_and_sleep+0x632 : 1e10302 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:687:28
 1e102f6:    00 fc 20 d2       	r0 = r0 + -11744
 1e102fa:    01 08             	r1 = r0
 1e102fc:    00 42             	r0 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:690:32
 1e102fe:    70 b0             	r0 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:690:32
 1e10300:    08 42             	[r1 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:690:32
 1e10302:    00 68             	r0 = b[r4 + 0] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:695:5
 1e10304:    01 f9 2c f3       	r1 = b[r15 + 812] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:695:5
 1e10308:    20 fd c7 09       	r0 = r0 & 199			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:695:5
 1e1030c:    c9 c0             	r1 = r1 << 3			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:695:5
 1e1030e:    21 fd 38 19       	r1 = r1 & 56			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:695:5
 1e10312:    50 b2             	r0 |= r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:695:5
 1e10314:    08 68             	b[r4 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:695:5
 1e10316:    8f f3 6e a3       	call 2049756 <low_power_system_down : 49f6 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1160:5
 1e1031a:    02 f6 50 f0       	r2 = [r15 + 80]
 1e1031e:    00 70             	r0 = 0
 1e10320:    b2 f6 00 09       	[r0+r9<<2] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:570:36
 1e10324:    80 fb f0 10       	r1 = r0 + r15			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:570:29
 1e10328:    52 43             	r2 = [r1 + 84]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:570:29
 1e1032a:    40 80             	r0 += 4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:569:23
 1e1032c:    00 e2 f8 1f       	if (r0 != 32) goto -16 <suppress_tick_and_sleep+0x650 : 1e10320 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:569:23
 1e10330:    84 fd 78 02       	r0 = uextra(r2, p:15, l:4)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:448:52
 1e10334:    84 fd 58 12       	r1 = uextra(r2, p:11, l:4)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:447:52
 1e10338:    c3 ff 20 19 1e 00 	r3 = 1972512 <uECC_vli_cmp_unsafe+0xDA924 : 1e1920 >
 1e1033e:    05 46             	r5 = [r3 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:450:21
 1e10340:    06 46             	r6 = [r3 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:451:21
 1e10342:    04 46             	r4 = [r3 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:452:21
 1e10344:    85 fd 30 32       	r3 = uextra(r2, p:6, l:5)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:446:53
 1e10348:    85 fd 30 55       	r5 = uextra(r5, p:6, l:5)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:450:54
 1e1034c:    84 fd 58 76       	r7 = uextra(r6, p:11, l:4)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:451:53
 1e10350:    84 fd 78 64       	r6 = uextra(r4, p:15, l:4)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:452:53
 1e10354:    09 fb c0 07       	r9 = 1984 <DRIVER_CODE_TOTAL+0x3A : 7c0 >
 1e10358:    c8 ff 3f 00 f8 ff 	r8 = 4294443071 <bank_code_load_addr+0x15CA47 : 1f8003f >
 1e1035e:    1b 70             	r11 = 1
 1e10360:    1e 70             	r14 = 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:455:27
 1e10362:    53 f2 01 80       	if (r3 > r5) goto 2 <suppress_tick_and_sleep+0x698 : 1e10368 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:455:27
 1e10366:    0e 70             	r14 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:455:27
 1e10368:    e5 09             	r5 += r14			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:455:15
 1e1036a:    ac c1             	r4 = r5 << 6			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:459:9
 1e1036c:    e2 fd 90 44       	r4 = r4 & r9			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:459:9
 1e10370:    e2 fd 80 22       	r2 = r2 & r8			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:459:9
 1e10374:    52 b8             	r2 |= r4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:459:9
 1e10376:    14 70             	r4 = 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:456:29
 1e10378:    71 f2 01 80       	if (r1 > r7) goto 2 <suppress_tick_and_sleep+0x6AE : 1e1037e >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:456:29
 1e1037c:    04 70             	r4 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:456:29
 1e1037e:    47 09             	r7 += r4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:456:16
 1e10380:    fc c2             	r4 = r7 << 11			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:460:9
 1e10382:    24 fd 78 4a       	r4 = r4 & 30720			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:460:9
 1e10386:    52 b8             	r2 |= r4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:460:9
 1e10388:    60 f2 01 80       	if (r0 > r6) goto 2 <suppress_tick_and_sleep+0x6BE : 1e1038e >
 1e1038c:    0b 70             	r11 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:457:29
 1e1038e:    b6 09             	r6 += r11			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:457:16
 1e10390:    f4 c3             	r4 = r6 << 15			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:461:9
 1e10392:    24 fd 70 43       	r4 = r4 & 491520			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:461:9
 1e10396:    52 b8             	r2 |= r4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:461:9
 1e10398:    c4 ff 20 19 1e 00 	r4 = 1972512 <uECC_vli_cmp_unsafe+0xDA924 : 1e1920 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:463:26
 1e1039e:    0a 48             	[r4 + 0] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:463:26
 1e103a0:    35 f2 dd 1f       	if (r5 != r3) goto -70 <suppress_tick_and_sleep+0x68E : 1e1035e >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:463:26
 1e103a4:    17 f2 db 1f       	if (r7 != r1) goto -74 <suppress_tick_and_sleep+0x68E : 1e1035e >
 1e103a8:    06 f2 d9 1f       	if (r6 != r0) goto -78 <suppress_tick_and_sleep+0x68E : 1e1035e >
 1e103ac:    00 f6 74 f0       	r0 = [r15 + 116]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:574:24
 1e103b0:    41 08             	r1 = r4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:574:22
 1e103b2:    18 42             	[r1 + 4] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:574:22
 1e103b4:    00 70             	r0 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:574:22
 1e103b6:    a2 fc 36 0f       	r2 = r10 + 3894			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:574:22
 1e103ba:    80 fb f0 10       	r1 = r0 + r15			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:577:43
 1e103be:    e1 43             	r1 = [r1 + 120]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:577:39
 1e103c0:    b1 f6 00 0a       	[r0+r10<<2] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:577:37
 1e103c4:    40 80             	r0 += 4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:576:23
 1e103c6:    00 e5 f8 1f       	if (r0 != 80) goto -16 <suppress_tick_and_sleep+0x6EA : 1e103ba >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:576:23
 1e103ca:    00 70             	r0 = 0
 1e103cc:    c8 ff 17 18 1a 00 	r8 = 1710103 <uECC_vli_cmp_unsafe+0x9A81B : 1a1817 >
 1e103d2:    09 f5 04 00       	r9 = [sp+4]
 1e103d6:    85 fc ba 07       	r5 = r8 + 1978
 1e103da:    53 fc c4 f8       	r3 = r5 + -1852
 1e103de:    80 fb f0 10       	r1 = r0 + r15			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:581:45
 1e103e2:    01 f6 c8 10       	r1 = [r1 + 200]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:581:41
 1e103e6:    b1 f6 00 0c       	[r0+r12<<2] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:581:39
 1e103ea:    40 80             	r0 += 4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:580:23
 1e103ec:    01 ff e4 00 f6 ff 	if (r0 != 228) goto -20 <suppress_tick_and_sleep+0x70E : 1e103de >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:580:23
 1e103f2:    00 f6 ac f1       	r0 = [r15 + 428]
 1e103f6:    01 70             	r1 = 0
 1e103f8:    b0 f6 00 12       	[r1+r2<<2] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:585:36
 1e103fc:    80 fb f0 01       	r0 = r1 + r15			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:585:29
 1e10400:    00 f6 b0 01       	r0 = [r0 + 432]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:585:29
 1e10404:    41 80             	r1 += 4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:584:23
 1e10406:    81 e7 f7 1f       	if (r1 != 120) goto -18 <suppress_tick_and_sleep+0x728 : 1e103f8 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:584:23
 1e1040a:    41 fc e8 36       	r1 = r4 + 14056
 1e1040e:    12 08             	r2 = r1
 1e10410:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:588:19
 1e10412:    f0 fc 28 02       	r0 = r15 + 552			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:588:19
 1e10416:    01 40             	r1 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:589:21
 1e10418:    19 44             	[r2 + 4] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:589:19
 1e1041a:    11 40             	r1 = [r0 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:590:22
 1e1041c:    69 44             	[r2 + 24] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:590:20
 1e1041e:    21 40             	r1 = [r0 + 8]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:591:21
 1e10420:    29 44             	[r2 + 8] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:591:19
 1e10422:    31 40             	r1 = [r0 + 12]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:592:20
 1e10424:    39 44             	[r2 + 12] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:592:18
 1e10426:    41 40             	r1 = [r0 + 16]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:595:21
 1e10428:    42 fc e8 37       	r2 = r4 + 14312			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:595:21
 1e1042c:    09 44             	[r2 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:595:19
 1e1042e:    51 40             	r1 = [r0 + 20]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:596:21
 1e10430:    19 44             	[r2 + 4] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:596:19
 1e10432:    61 40             	r1 = [r0 + 24]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:597:22
 1e10434:    69 44             	[r2 + 24] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:597:20
 1e10436:    71 40             	r1 = [r0 + 28]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:598:20
 1e10438:    29 44             	[r2 + 8] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:598:18
 1e1043a:    81 40             	r1 = [r0 + 32]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:599:20
 1e1043c:    39 44             	[r2 + 12] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:599:18
 1e1043e:    91 40             	r1 = [r0 + 36]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:602:23
 1e10440:    22 fc f8 02       	r2 = r2 + 760			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:602:23
 1e10444:    09 44             	[r2 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:602:21
 1e10446:    a1 40             	r1 = [r0 + 40]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:603:20
 1e10448:    24 fc 00 c4       	r4 = r2 + -15360			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:603:20
 1e1044c:    09 48             	[r4 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:603:18
 1e1044e:    b1 40             	r1 = [r0 + 44]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:604:20
 1e10450:    19 48             	[r4 + 4] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:604:18
 1e10452:    c1 40             	r1 = [r0 + 48]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:607:24
 1e10454:    99 44             	[r2 + 36] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:607:22
 1e10456:    d1 40             	r1 = [r0 + 52]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:608:21
 1e10458:    22 fc 00 06       	r2 = r2 + 1536			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:608:21
 1e1045c:    09 44             	[r2 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:608:19
 1e1045e:    e1 40             	r1 = [r0 + 56]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:609:21
 1e10460:    19 44             	[r2 + 4] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:609:19
 1e10462:    f1 40             	r1 = [r0 + 60]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:611:19
 1e10464:    22 fc 00 d7       	r2 = r2 + -10496			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:611:19
 1e10468:    09 44             	[r2 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:611:17
 1e1046a:    00 f4 40 29       	[r2 + 0] |= 64			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:612:17
 1e1046e:    51 66             	r1 = b[r3 + 5] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:617:5
 1e10470:    02 41             	r2 = [r0 + 64]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:617:5
 1e10472:    71 b2             	r1 &= 4294967279			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:617:5
 1e10474:    12 c1             	r2 = r2 << 4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:617:5
 1e10476:    22 fd 10 29       	r2 = r2 & 16			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:617:5
 1e1047a:    51 b4             	r1 |= r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:617:5
 1e1047c:    59 66             	b[r3 + 5] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:617:5
 1e1047e:    21 66             	r1 = b[r3 + 2] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:619:5
 1e10480:    10 41             	r0 = [r0 + 68]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:619:5
 1e10482:    71 b0             	r1 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:619:5
 1e10484:    20 fd 01 09       	r0 = r0 & 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:619:5
 1e10488:    50 b2             	r0 |= r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:619:5
 1e1048a:    28 66             	b[r3 + 2] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:619:5
 1e1048c:    01 f6 34 f3       	r1 = [r15 + 820]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:631:20
 1e10490:    c7 ff b0 20 00 00 	r7 = 8368 <gatt_client_conn_handle : 20b0 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:631:20
 1e10496:    02 22             	if (r1 == 0) goto 4 <suppress_tick_and_sleep+0x7CC : 1e1049c >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:631:20
 1e10498:    d0 08             	r0 = r13			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:632:9
 1e1049a:    81 00             	call r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:632:9
 1e1049c:    10 70             	r0 = 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:636:5
 1e1049e:    bf f3 ee 9e       	call -49700 <__hw_lrc_enable : 1e0427e >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:636:5
 1e104a2:    00 f9 31 f0       	r0 = b[r15 + 49] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1165:17
 1e104a6:    07 20             	if (r0 == 0) goto 14 <suppress_tick_and_sleep+0x7E6 : 1e104b6 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1165:17
 1e104a8:    bf f3 7f a0       	call -48898 <__lp_timer_dump : 1e045aa >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1171:9
 1e104ac:    00 f9 31 f0       	r0 = b[r15 + 49] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1171:9
 1e104b0:    02 20             	if (r0 == 0) goto 4 <suppress_tick_and_sleep+0x7E6 : 1e104b6 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1171:9
 1e104b2:    8f f3 95 97       	call 2043690 <p33_soft_reset : 33e0 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/driver/cpu/bd19/asm/cpu.h:148:5
 1e104b6:    01 f6 00 f0       	r1 = [r15 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/system/generic/list.h:124:18
 1e104ba:    bf f3 6f a0       	call -48930 <__lp_timer_is_running : 1e0459c >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:748:19
 1e104be:    f1 f2 94 00       	if (r1 == r15) goto 296 <suppress_tick_and_sleep+0x91A : 1e105ea >
 1e104c2:    5e 20             	if (r0 == 0) goto 188 <suppress_tick_and_sleep+0x8B0 : 1e10580 >
 1e104c4:    30 6a             	r0 = b[r5 + 3] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:125:12
 1e104c6:    43 6a             	r3 = b[r5 + 4] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:126:13
 1e104c8:    52 6a             	r2 = b[r5 + 5] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:127:13
 1e104ca:    61 6a             	r1 = b[r5 + 6] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:128:13
 1e104cc:    24 6a             	r4 = b[r5 + 2] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:130:5
 1e104ce:    14 b3             	r4 |= 64			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:130:5
 1e104d0:    2c 6a             	b[r5 + 2] = r4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:130:5
 1e104d2:    00 00             	nop			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:131:5
 1e104d4:    00 00             	nop			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:132:5
 1e104d6:    24 f9 bc 87       	r4 = b[r8 + 1980] (s)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:133:13
 1e104da:    f4 ef fc cf       	ifs (r4 > -1) goto -8 <suppress_tick_and_sleep+0x806 : 1e104d6 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:133:13
 1e104de:    c8 fd 40 03       	r0 <= insert(r3, p:8, l:8)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:126:9
 1e104e2:    c8 fd 80 02       	r0 <= insert(r2, p:16, l:8)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:127:9
 1e104e6:    b2 6a             	r2 = b[r5 + 11] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:137:12
 1e104e8:    c3 6a             	r3 = b[r5 + 12] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:138:14
 1e104ea:    d4 6a             	r4 = b[r5 + 13] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:139:14
 1e104ec:    e6 6a             	r6 = b[r5 + 14] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:140:14
 1e104ee:    c8 fd c0 01       	r0 <= insert(r1, p:24, l:8)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:128:9
 1e104f2:    c8 fd 40 23       	r2 <= insert(r3, p:8, l:8)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:138:10
 1e104f6:    c8 fd 80 24       	r2 <= insert(r4, p:16, l:8)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:139:10
 1e104fa:    c8 fd c0 26       	r2 <= insert(r6, p:24, l:8)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:140:10
 1e104fe:    a0 b0             	r0 = r0 - r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:142:16
 1e10500:    c2 ff 40 42 0f 00 	r2 = 1000000 <text_size+0xD3390 : f4240 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:365:18
 1e10506:    01 70             	r1 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:365:18
 1e10508:    03 70             	r3 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:365:18
 1e1050a:    bf f3 05 ba       	call -35830 <__muldi3 : 1e07918 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:365:18
 1e1050e:    02 f6 20 f3       	r2 = [r15 + 800]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:367:13
 1e10512:    03 70             	r3 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:367:11
 1e10514:    bf f3 1f ba       	call -35778 <__udivdi3 : 1e07956 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:367:11
 1e10518:    01 f6 24 f0       	r1 = [r15 + 36]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:753:26
 1e1051c:    11 fc 2c 01       	r1 = r1 + 300			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:753:42
 1e10520:    01 f2 2e 20       	if (r1 >= r0) goto 92 <suppress_tick_and_sleep+0x8B0 : 1e10580 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:753:42
 1e10524:    20 75             	r0 = 82			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:755:17
 1e10526:    bf f3 55 f7       	call -4438 <putchar : 1e0f3d4 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:755:17
 1e1052a:    bf f3 da a0       	call -48716 <__lp_timer_get_pass_time : 1e046e2 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:756:27
 1e1052e:    00 fc 58 02       	r0 = r0 + 600			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:756:78
 1e10532:    bf f3 ed a0       	call -48678 <__tcnt_us : 1e04710 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:237:13
 1e10536:    06 08             	r6 = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:237:13
 1e10538:    00 fb 2c 01       	r0 = 300 <DRIVER_RAM_TOTAL+0x3A : 12c >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:239:21
 1e1053c:    bf f3 e8 a0       	call -48688 <__tcnt_us : 1e04710 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:239:21
 1e10540:    20 bc             	r0 = r6 - r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:239:19
 1e10542:    01 d6             	r1 = r0 >> 24			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:242:27
 1e10544:    a9 6a             	b[r5 + 10] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:242:19
 1e10546:    01 d4             	r1 = r0 >> 16			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:243:27
 1e10548:    99 6a             	b[r5 + 9] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:243:19
 1e1054a:    01 d2             	r1 = r0 >> 8			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:244:27
 1e1054c:    89 6a             	b[r5 + 8] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:244:19
 1e1054e:    78 6a             	b[r5 + 7] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:245:19
 1e10550:    30 d6             	r0 = r6 >> 24			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:250:27
 1e10552:    68 6a             	b[r5 + 6] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:250:19
 1e10554:    30 d4             	r0 = r6 >> 16			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:251:27
 1e10556:    58 6a             	b[r5 + 5] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:251:19
 1e10558:    30 d2             	r0 = r6 >> 8			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:252:27
 1e1055a:    48 6a             	b[r5 + 4] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:252:19
 1e1055c:    3e 6a             	b[r5 + 3] = r6			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:253:19
 1e1055e:    bf f3 72 a0       	call -48924 <__lp_timer_get_period : 1e04646 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:758:27
 1e10562:    11 6a             	r1 = b[r5 + 1] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:759:39
 1e10564:    12 6a             	r2 = b[r5 + 1] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:759:61
 1e10566:    0d 08             	r13 = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:758:27
 1e10568:    20 fd 20 19       	r0 = r1 & 32			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:759:39
 1e1056c:    31 fd 7f 29       	r1 = r2 & 4294967168			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:759:61
 1e10570:    50 b2             	r0 |= r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:759:59
 1e10572:    10 f9 31 f0       	b[r15 + 49] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:759:37
 1e10576:    60 ff a0 09 02 00 	if ((r0 & 160) == 0) goto 4 <suppress_tick_and_sleep+0x8B0 : 1e10580 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:759:37
 1e1057c:    bf f3 15 a0       	call -49110 <__lp_timer_dump : 1e045aa >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:761:21
 1e10580:    04 70             	r4 = 0
 1e10582:    10 6a             	r0 = b[r5 + 1] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:770:17
 1e10584:    05 f3 26 00       	if ((r0 & 32) == 0) goto 76 <suppress_tick_and_sleep+0x904 : 1e105d4 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:770:17
 1e10588:    10 6a             	r0 = b[r5 + 1] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:772:17
 1e1058a:    10 b2             	r0 |= 16			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:772:17
 1e1058c:    18 6a             	b[r5 + 1] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:772:17
 1e1058e:    14 f9 30 f0       	b[r15 + 48] = r4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:643:21
 1e10592:    06 f6 00 f0       	r6 = [r15 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:645:5
 1e10596:    f6 f2 0d 00       	if (r6 == r15) goto 26 <suppress_tick_and_sleep+0x8E4 : 1e105b4 >
 1e1059a:    60 08             	r0 = r6
 1e1059c:    31 40             	r1 = [r0 + 12]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:646:16
 1e1059e:    06 40             	r6 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:646:16
 1e105a0:    05 22             	if (r1 == 0) goto 10 <suppress_tick_and_sleep+0x8DC : 1e105ac >
 1e105a2:    42 42             	r2 = [r1 + 16]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:646:31
 1e105a4:    03 24             	if (r2 == 0) goto 6 <suppress_tick_and_sleep+0x8DC : 1e105ac >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:646:31
 1e105a6:    20 40             	r0 = [r0 + 8]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:647:31
 1e105a8:    d1 08             	r1 = r13			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:647:13
 1e105aa:    82 00             	call r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:647:13
 1e105ac:    f6 f2 f5 1f       	if (r6 != r15) goto -22 <suppress_tick_and_sleep+0x8CA : 1e1059a >
 1e105b0:    06 f6 00 f0       	r6 = [r15 + 0]
 1e105b4:    f6 f2 0b 00       	if (r6 == r15) goto 22 <suppress_tick_and_sleep+0x8FE : 1e105ce >
 1e105b8:    60 08             	r0 = r6
 1e105ba:    31 40             	r1 = [r0 + 12]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:652:16
 1e105bc:    06 40             	r6 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:652:16
 1e105be:    05 22             	if (r1 == 0) goto 10 <suppress_tick_and_sleep+0x8FA : 1e105ca >
 1e105c0:    52 42             	r2 = [r1 + 20]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:652:31
 1e105c2:    03 24             	if (r2 == 0) goto 6 <suppress_tick_and_sleep+0x8FA : 1e105ca >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:652:31
 1e105c4:    20 40             	r0 = [r0 + 8]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:653:36
 1e105c6:    d1 08             	r1 = r13			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:653:13
 1e105c8:    82 00             	call r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:653:13
 1e105ca:    f6 f2 f5 1f       	if (r6 != r15) goto -22 <suppress_tick_and_sleep+0x8E8 : 1e105b8 >
 1e105ce:    b0 75             	r0 = 91			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:776:17
 1e105d0:    bf f3 00 f7       	call -4608 <putchar : 1e0f3d4 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:776:17
 1e105d4:    20 f9 bb 87       	r0 = b[r8 + 1979] (s)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:778:17
 1e105d8:    f0 ef d3 cf       	ifs (r0 > -1) goto -90 <suppress_tick_and_sleep+0x8B2 : 1e10582 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:778:17
 1e105dc:    10 6a             	r0 = b[r5 + 1] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:780:17
 1e105de:    10 b3             	r0 |= 64			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:780:17
 1e105e0:    18 6a             	b[r5 + 1] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:780:17
 1e105e2:    d0 75             	r0 = 93			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:782:17
 1e105e4:    bf f3 f6 f6       	call -4628 <putchar : 1e0f3d4 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:782:17
 1e105e8:    0d 18             	goto 26 <suppress_tick_and_sleep+0x934 : 1e10604 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:782:17
 1e105ea:    03 20             	if (r0 == 0) goto 6 <suppress_tick_and_sleep+0x922 : 1e105f2 >
 1e105ec:    bf f3 79 a0       	call -48910 <__lp_timer_get_pass_time : 1e046e2 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:799:23
 1e105f0:    0d 08             	r13 = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:799:23
 1e105f2:    00 6a             	r0 = b[r5 + 0] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:180:5
 1e105f4:    70 b0             	r0 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:180:5
 1e105f6:    08 6a             	b[r5 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:180:5
 1e105f8:    10 6a             	r0 = b[r5 + 1] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:181:5
 1e105fa:    10 b2             	r0 |= 16			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:181:5
 1e105fc:    18 6a             	b[r5 + 1] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:181:5
 1e105fe:    10 6a             	r0 = b[r5 + 1] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:182:5
 1e10600:    10 b3             	r0 |= 64			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:182:5
 1e10602:    18 6a             	b[r5 + 1] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:182:5
 1e10604:    00 70             	r0 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:678:21
 1e10606:    10 f9 30 f0       	b[r15 + 48] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:678:21
 1e1060a:    00 f6 0c f0       	r0 = [r15 + 12]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:679:5
 1e1060e:    90 f2 0a 00       	if (r0 == r9) goto 20 <suppress_tick_and_sleep+0x956 : 1e10626 >
 1e10612:    31 40             	r1 = [r0 + 12]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:680:16
 1e10614:    04 40             	r4 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:680:16
 1e10616:    04 22             	if (r1 == 0) goto 8 <suppress_tick_and_sleep+0x950 : 1e10620 >
 1e10618:    20 40             	r0 = [r0 + 8]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:681:31
 1e1061a:    42 42             	r2 = [r1 + 16]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:681:21
 1e1061c:    d1 08             	r1 = r13			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:681:13
 1e1061e:    82 00             	call r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:681:13
 1e10620:    40 08             	r0 = r4
 1e10622:    94 f2 f6 1f       	if (r4 != r9) goto -20 <suppress_tick_and_sleep+0x942 : 1e10612 >
 1e10626:    00 f9 00 80       	r0 = b[r8 + 0] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:814:5
 1e1062a:    70 b0             	r0 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:814:5
 1e1062c:    10 f9 00 80       	b[r8 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:814:5
 1e10630:    50 fc 20 00       	r0 = r5 + 32			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:814:5
 1e10634:    01 18             	goto 2 <suppress_tick_and_sleep+0x968 : 1e10638 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:814:5
 1e10636:    02 00             	idle			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1184:5
 1e10638:    31 60             	r1 = b[r0 + 3] (u)
 1e1063a:    03 f3 fc 1f       	if ((r1 & 8) == 0) goto -8 <suppress_tick_and_sleep+0x966 : 1e10636 >
 1e1063e:    81 70             	r1 = 8			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1184:5
 1e10640:    29 60             	b[r0 + 2] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1184:5
 1e10642:    c1 6e             	r1 = b[r7 + 12] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1184:5
 1e10644:    09 60             	b[r0 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1184:5
 1e10646:    97 f3 a7 b3       	call 3106638 <local_irq_enable : 106d98 >
 1e1064a:    97 f3 a5 b3       	call 3106634 <local_irq_enable : 106d98 >			  ## port_overwrite.c:469:5
 1e1064e:    04 0a             	sp += 8			  ## port_overwrite.c:469:5
 1e10650:    5f 01             	{pc, r15-r4} = [sp++]			  ## port_overwrite.c:87:1


idle_hook:
 1e10652:    34 00             	[--sp] = rets			  ## port_overwrite.c:90:0
 1e10654:    bf f3 7f a0       	call -48898 <wdt_clear : 1e04756 >			  ## port_overwrite.c:91:5
 1e10658:    02 00             	idle			  ## port_overwrite.c:97:5
 1e1065a:    30 00             	pc = [sp++]			  ## port_overwrite.c:101:1


__power_get_timeout:
 1e1065c:    76 01             	[--sp] = {rets, r6-r4}			  ## port_overwrite.c:350:0
 1e1065e:    c4 ff 38 2e e1 01 	r4 = 31534648 <uart : 1e12e38 >			  ## port_overwrite.c:350:0
 1e10664:    c5 ff d8 2d e1 01 	r5 = 31534552 <syscfg_ops_end : 1e12dd8 >			  ## port_overwrite.c:350:0
 1e1066a:    45 f2 0d 20       	if (r5 >= r4) goto 26 <__power_get_timeout+0x2C : 1e10688 >			  ## port_overwrite.c:350:0
 1e1066e:    16 70             	r6 = 1			  ## port_overwrite.c:350:0
 1e10670:    20 4a             	r0 = [r5 + 8]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1219:16
 1e10672:    04 20             	if (r0 == 0) goto 8 <__power_get_timeout+0x20 : 1e1067c >
 1e10674:    80 00             	call r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1223:13
 1e10676:    20 4a             	r0 = [r5 + 8]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1226:20
 1e10678:    80 00             	call r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1226:17
 1e1067a:    56 b1             	r6 &= r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1226:17
 1e1067c:    c5 80             	r5 += 12			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1217:5
 1e1067e:    45 f2 f7 3f       	if (r5 < r4) goto -18 <__power_get_timeout+0x14 : 1e10670 >
 1e10682:    60 ff ff 69 2c 00 	if ((r6 & 255) == 0) goto 88 <__power_get_timeout+0x84 : 1e106e0 >
 1e10688:    97 f3 f8 b3       	call 3106800 <eTaskConfirmSleepModeStatus : 106e7c >			  ## port_overwrite.c:362:20
 1e1068c:    04 08             	r4 = r0			  ## port_overwrite.c:362:20
 1e1068e:    97 f3 f3 b3       	call 3106790 <prvGetExpectedIdleTime : 106e78 >			  ## port_overwrite.c:366:10
 1e10692:    06 28             	if (r4 == 0) goto 12 <__power_get_timeout+0x44 : 1e106a0 >			  ## port_overwrite.c:366:10
 1e10694:    24 e0 06 10       	if (r4 != 2) goto 12 <__power_get_timeout+0x48 : 1e106a4 >
 1e10698:    bf f3 64 a0       	call -48952 <wdt_close : 1e04764 >			  ## port_overwrite.c:382:17
 1e1069c:    e4 07             	r4 = -2			  ## port_overwrite.c:382:17
 1e1069e:    05 18             	goto 10 <__power_get_timeout+0x4E : 1e106aa >
 1e106a0:    04 70             	r4 = 0
 1e106a2:    03 18             	goto 6 <__power_get_timeout+0x4E : 1e106aa >
 1e106a4:    01 fb 10 27       	r1 = 10000 <stack_mem+0x90 : 2710 >			  ## port_overwrite.c:366:33
 1e106a8:    44 0e             	r4 = r0 * r1			  ## port_overwrite.c:366:33
 1e106aa:    c0 ff f0 e0 1b 00 	r0 = 1827056 <uECC_vli_cmp_unsafe+0xB70F4 : 1be0f0 >			  ## port_overwrite.c:388:16
 1e106b0:    00 40             	r0 = [r0 + 0]			  ## port_overwrite.c:388:16
 1e106b2:    c5 ff b0 20 00 00 	r5 = 8368 <gatt_client_conn_handle : 20b0 >			  ## port_overwrite.c:390:18
 1e106b8:    10 f6 bc 50       	[r5 + 188] = r0			  ## port_overwrite.c:388:14
 1e106bc:    c2 ff 40 42 0f 00 	r2 = 1000000 <text_size+0xD3390 : f4240 >			  ## port_overwrite.c:390:35
 1e106c2:    01 70             	r1 = 0			  ## port_overwrite.c:390:35
 1e106c4:    03 70             	r3 = 0			  ## port_overwrite.c:390:35
 1e106c6:    bf f3 27 b9       	call -36274 <__muldi3 : 1e07918 >			  ## port_overwrite.c:390:35
 1e106ca:    c2 ff 8c 31 00 00 	r2 = 12684 <hdl.15 : 318c >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/clock.c:1753:20
 1e106d0:    02 44             	r2 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/clock.c:2246:9
 1e106d2:    03 70             	r3 = 0			  ## port_overwrite.c:390:47
 1e106d4:    bf f3 3f b9       	call -36226 <__udivdi3 : 1e07956 >			  ## port_overwrite.c:390:47
 1e106d8:    10 f6 b8 50       	[r5 + 184] = r0			  ## port_overwrite.c:390:18
 1e106dc:    20 b8             	r0 = r4 - r0			  ## port_overwrite.c:392:8
 1e106de:    56 01             	{pc, r6-r4} = [sp++]			  ## port_overwrite.c:401:1
 1e106e0:    00 70             	r0 = 0
 1e106e2:    56 01             	{pc, r6-r4} = [sp++]			  ## port_overwrite.c:401:1


__power_suspend_post.1236:
 1e106e4:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## port_overwrite.c:404:0
 1e106ea:    11 70             	r1 = 1			  ## port_overwrite.c:405:27
 1e106ec:    49 61             	b[r0 + 20] = r1			  ## port_overwrite.c:405:27
 1e106ee:    c0 ff ec e0 1b 00 	r0 = 1827052 <uECC_vli_cmp_unsafe+0xB70F0 : 1be0ec >			  ## port_overwrite.c:474:14
 1e106f4:    c0 f4 40 09       	[r0 + 0] = 64			  ## port_overwrite.c:474:14
 1e106f8:    20 00             	rts			  ## port_overwrite.c:407:1


__power_resume.1237:
 1e106fa:    78 01             	[--sp] = {rets, r8-r4}			  ## port_overwrite.c:410:0
 1e106fc:    14 08             	r4 = r1			  ## port_overwrite.c:410:0
 1e106fe:    c8 ff b0 20 00 00 	r8 = 8368 <gatt_client_conn_handle : 20b0 >			  ## port_overwrite.c:410:0
 1e10704:    c7 ff 8c 31 00 00 	r7 = 12684 <hdl.15 : 318c >			  ## port_overwrite.c:410:0
 1e1070a:    e4 ef 04 10       	if (r4 != -2) goto 8 <__power_resume.1237+0x1C : 1e10716 >			  ## port_overwrite.c:412:9
 1e1070e:    00 f6 b8 80       	r0 = [r8 + 184]
 1e10712:    04 4e             	r4 = [r7 + 0]
 1e10714:    1d 18             	goto 58 <__power_resume.1237+0x56 : 1e10750 >
 1e10716:    06 fb 10 27       	r6 = 10000 <stack_mem+0x90 : 2710 >			  ## port_overwrite.c:417:28
 1e1071a:    c0 fe 60 54       	r5 = r4 / r6 (u)			  ## port_overwrite.c:417:28
 1e1071e:    50 08             	r0 = r5			  ## port_overwrite.c:417:9
 1e10720:    97 f3 ae b3       	call 3106652 <vTaskStepTick : 106e80 >			  ## port_overwrite.c:417:9
 1e10724:    c0 ff 88 08 00 00 	r0 = 2184 <jiffies : 888 >			  ## port_overwrite.c:419:17
 1e1072a:    01 40             	r1 = [r0 + 0]			  ## port_overwrite.c:419:17
 1e1072c:    51 09             	r1 += r5			  ## port_overwrite.c:419:17
 1e1072e:    09 40             	[r0 + 0] = r1			  ## port_overwrite.c:419:17
 1e10730:    d0 fe 60 24       	r2 = r4 % r6 (u)			  ## port_overwrite.c:422:29
 1e10734:    04 4e             	r4 = [r7 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/clock.c:1753:20
 1e10736:    e1 df             	r1 = r4 >>> 31			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/clock.c:2246:9
 1e10738:    03 70             	r3 = 0			  ## port_overwrite.c:426:42
 1e1073a:    40 08             	r0 = r4			  ## port_overwrite.c:426:42
 1e1073c:    bf f3 ec b8       	call -36392 <__muldi3 : 1e07918 >			  ## port_overwrite.c:426:42
 1e10740:    c2 ff 40 42 0f 00 	r2 = 1000000 <text_size+0xD3390 : f4240 >			  ## port_overwrite.c:426:67
 1e10746:    03 70             	r3 = 0			  ## port_overwrite.c:426:67
 1e10748:    bf f3 05 b9       	call -36342 <__udivdi3 : 1e07956 >			  ## port_overwrite.c:426:67
 1e1074c:    10 f6 b8 80       	[r8 + 184] = r0			  ## port_overwrite.c:426:22
 1e10750:    01 f6 bc 80       	r1 = [r8 + 188]			  ## port_overwrite.c:482:10
 1e10754:    10 09             	r0 += r1			  ## port_overwrite.c:482:19
 1e10756:    41 76             	r1 = 100			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/clock.c:2246:9
 1e10758:    e0 fe 10 14       	r1 = r4 / r1 (s)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/clock.c:2246:9
 1e1075c:    12 fc fe ff       	r2 = r1 + -2			  ## port_overwrite.c:485:31
 1e10760:    f1 8f             	r1 += -1			  ## port_overwrite.c:479:68
 1e10762:    10 f2 01 30       	if (r0 < r1) goto 2 <__power_resume.1237+0x6E : 1e10768 >
 1e10766:    20 08             	r0 = r2			  ## port_overwrite.c:482:9
 1e10768:    c2 ff ec e0 1b 00 	r2 = 1827052 <uECC_vli_cmp_unsafe+0xB70F0 : 1be0ec >
 1e1076e:    18 44             	[r2 + 4] = r0
 1e10770:    29 44             	[r2 + 8] = r1			  ## port_overwrite.c:492:14
 1e10772:    c0 f4 41 29       	[r2 + 0] = 65			  ## port_overwrite.c:494:14
 1e10776:    00 70             	r0 = 0			  ## port_overwrite.c:434:27
 1e10778:    10 f9 14 80       	b[r8 + 20] = r0			  ## port_overwrite.c:434:27
 1e1077c:    58 01             	{pc, r8-r4} = [sp++]			  ## port_overwrite.c:435:1


pvPortVMallocStack:
 1e1077e:    7b 01             	[--sp] = {rets, r11-r4}			  ## heap_mmu.c:639:0
 1e10780:    08 08             	r8 = r0			  ## heap_mmu.c:639:0
 1e10782:    97 f3 0b b3       	call 3106326 <local_irq_disable : 106d9c >			  ## heap_mmu.c:645:5
 1e10786:    08 00             	csync			  ## heap_mmu.c:645:5
 1e10788:    f2 fd 38 98       	r9 = r8 >> 7			  ## heap_mmu.c:640:34
 1e1078c:    e6 fd 00 09       	r0 = r9.l (u)			  ## heap_mmu.c:640:34
 1e10790:    ca ff 80 26 00 00 	r10 = 9856 <stack_mem : 2680 >			  ## heap_mmu.c:640:34
 1e10796:    05 f7 4a a0       	r5 = h[r10 + 74] (u)			  ## heap_mmu.c:640:34
 1e1079a:    01 f7 48 a0       	r1 = h[r10 + 72] (u)			  ## heap_mmu.c:649:28
 1e1079e:    04 70             	r4 = 0			  ## heap_mmu.c:649:28
 1e107a0:    1b 70             	r11 = 1			  ## heap_mmu.c:649:28
 1e107a2:    c7 ff e0 ff 00 00 	r7 = 65504 <_IRQ_MEM_ADDR+0xE0 : ffe0 >			  ## heap_mmu.c:649:28
 1e107a8:    63 04             	r3 = r1.l (u)			  ## heap_mmu.c:649:42
 1e107aa:    53 f2 13 20       	if (r3 >= r5) goto 38 <pvPortVMallocStack+0x56 : 1e107d4 >			  ## heap_mmu.c:649:5
 1e107ae:    e2 fd 70 31       	r3 = r1 & r7			  ## heap_mmu.c:650:29
 1e107b2:    db d0             	r3 = r3 >> 3			  ## heap_mmu.c:650:13
 1e107b4:    82 f6 00 3a       	r2 = [r3+r10]			  ## heap_mmu.c:650:13
 1e107b8:    23 fd 1f 19       	r3 = r1 & 31			  ## heap_mmu.c:650:43
 1e107bc:    f8 fd 30 6b       	r6 = r11 << r3			  ## heap_mmu.c:650:43
 1e107c0:    13 98             	r3 = r4 + 1			  ## heap_mmu.c:651:26
 1e107c2:    04 70             	r4 = 0			  ## heap_mmu.c:651:26
 1e107c4:    62 f0 01 00       	if ((r2 & r6) == 0) goto 2 <pvPortVMallocStack+0x4C : 1e107ca >			  ## heap_mmu.c:651:26
 1e107c8:    34 08             	r4 = r3			  ## heap_mmu.c:650:13
 1e107ca:    22 05             	r2 = r4.l (u)			  ## heap_mmu.c:655:13
 1e107cc:    11 80             	r1 += 1			  ## heap_mmu.c:655:13
 1e107ce:    02 f2 eb 3f       	if (r2 < r0) goto -42 <pvPortVMallocStack+0x2A : 1e107a8 >			  ## heap_mmu.c:655:13
 1e107d2:    03 18             	goto 6 <pvPortVMallocStack+0x5C : 1e107da >			  ## heap_mmu.c:655:13
 1e107d4:    8f f3 04 96       	call 2042888 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e107d8:    01 70             	r1 = 0			  ## cpu.h:148:5
 1e107da:    65 04             	r5 = r1.l (u)			  ## heap_mmu.c:663:18
 1e107dc:    90 fb 90 95       	r9 = r5 - r9			  ## heap_mmu.c:663:27
 1e107e0:    e6 fd 00 69       	r6 = r9.l (u)			  ## heap_mmu.c:663:18
 1e107e4:    56 f2 16 20       	if (r6 >= r5) goto 44 <pvPortVMallocStack+0x96 : 1e10814 >			  ## heap_mmu.c:663:18
 1e107e8:    14 70             	r4 = 1
 1e107ea:    8b fd 28 06       	r0 = uextra(r6, p:5, l:11)
 1e107ee:    80 c0             	r0 = r0 << 2
 1e107f0:    80 fb a0 70       	r7 = r0 + r10
 1e107f4:    00 4e             	r0 = [r7 + 0]
 1e107f6:    21 fd 1f 69       	r1 = r6 & 31
 1e107fa:    f8 fd 10 34       	r3 = r4 << r1
 1e107fe:    30 f1 03 00       	if ((r0 & r3) != 0) goto 6 <pvPortVMallocStack+0x8A : 1e10808 >
 1e10802:    8f f3 ed 95       	call 2042842 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e10806:    00 4e             	r0 = [r7 + 0]			  ## cpu.h:148:5
 1e10808:    e3 fd 30 00       	r0 = r0 & ~r3			  ## heap_mmu.c:669:37
 1e1080c:    16 80             	r6 += 1			  ## heap_mmu.c:666:45
 1e1080e:    08 4e             	[r7 + 0] = r0			  ## heap_mmu.c:669:37
 1e10810:    65 f2 eb 1f       	if (r5 != r6) goto -42 <pvPortVMallocStack+0x6C : 1e107ea >			  ## heap_mmu.c:669:37
 1e10814:    a0 fc 50 00       	r0 = r10 + 80
 1e10818:    01 70             	r1 = 0
 1e1081a:    02 40             	r2 = [r0 + 0]			  ## heap_mmu.c:673:28
 1e1081c:    10 24             	if (r2 == 0) goto 32 <pvPortVMallocStack+0xC0 : 1e1083e >			  ## heap_mmu.c:673:28
 1e1081e:    11 80             	r1 += 1			  ## heap_mmu.c:672:46
 1e10820:    80 80             	r0 += 8			  ## heap_mmu.c:672:19
 1e10822:    e1 e0 fa 9f       	if (r1 <= 14) goto -12 <pvPortVMallocStack+0x9C : 1e1081a >			  ## heap_mmu.c:672:19
 1e10826:    f0 fd 38 09       	r0 = r9 << 7			  ## heap_mmu.c:689:54
 1e1082a:    c1 ff 80 ff 7f 00 	r1 = 8388480 <uECC_vli_cmp_unsafe+0x6F8F84 : 7fff80 >			  ## heap_mmu.c:689:54
 1e10830:    e2 fd 10 30       	r3 = r0 & r1			  ## heap_mmu.c:689:54
 1e10834:    8f f3 d4 95       	call 2042792 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e10838:    01 f6 3c a0       	r1 = [r10 + 60]			  ## cpu.h:148:5
 1e1083c:    11 18             	goto 34 <pvPortVMallocStack+0xE2 : 1e10860 >			  ## cpu.h:148:5
 1e1083e:    01 f6 3c a0       	r1 = [r10 + 60]			  ## heap_mmu.c:674:62
 1e10842:    f0 fd 38 29       	r2 = r9 << 7			  ## heap_mmu.c:674:81
 1e10846:    c3 ff 80 ff 7f 00 	r3 = 8388480 <uECC_vli_cmp_unsafe+0x6F8F84 : 7fff80 >			  ## heap_mmu.c:674:81
 1e1084c:    53 b5             	r3 &= r2			  ## heap_mmu.c:674:81
 1e1084e:    c2 b2             	r2 = r1 + r3			  ## heap_mmu.c:674:68
 1e10850:    0a 40             	[r0 + 0] = r2			  ## heap_mmu.c:674:41
 1e10852:    18 f6 04 00       	[r0 + 4] = r8			  ## heap_mmu.c:675:41
 1e10856:    00 f9 c8 a0       	r0 = b[r10 + 200] (u)			  ## heap_mmu.c:676:34
 1e1085a:    10 80             	r0 += 1			  ## heap_mmu.c:676:34
 1e1085c:    10 f9 c8 a0       	b[r10 + 200] = r0			  ## heap_mmu.c:676:34
 1e10860:    c5 b2             	r5 = r1 + r3			  ## heap_mmu.c:689:41
 1e10862:    80 fb 80 05       	r0 = r5 + r8			  ## heap_mmu.c:691:33
 1e10866:    00 88             	r0 += -128			  ## heap_mmu.c:691:47
 1e10868:    01 78             	r1 = 128			  ## heap_mmu.c:693:9
 1e1086a:    97 f3 27 b3       	call 3106382 <vmalloc_ : 106ebc >			  ## heap_mmu.c:693:9
 1e1086e:    97 f3 93 b2       	call 3106086 <local_irq_enable : 106d98 >			  ## heap_mmu.c:697:5
 1e10872:    50 08             	r0 = r5			  ## heap_mmu.c:699:5
 1e10874:    5b 01             	{pc, r11-r4} = [sp++]			  ## heap_mmu.c:699:5


vPortVFreeStack:
 1e10876:    7a 01             	[--sp] = {rets, r10-r4}			  ## heap_mmu.c:703:0
 1e10878:    04 08             	r4 = r0			  ## heap_mmu.c:703:0
 1e1087a:    97 f3 8f b2       	call 3106078 <local_irq_disable : 106d9c >			  ## heap_mmu.c:706:5
 1e1087e:    08 00             	csync			  ## heap_mmu.c:706:5
 1e10880:    00 70             	r0 = 0			  ## heap_mmu.c:706:5
 1e10882:    c2 ff 80 26 00 00 	r2 = 9856 <stack_mem : 2680 >			  ## heap_mmu.c:706:5
 1e10888:    01 70             	r1 = 0			  ## heap_mmu.c:706:5
 1e1088a:    03 70             	r3 = 0			  ## heap_mmu.c:706:5
 1e1088c:    85 b2             	r5 = r1 + r2			  ## heap_mmu.c:711:28
 1e1088e:    46 4b             	r6 = [r5 + 80]			  ## heap_mmu.c:711:28
 1e10890:    46 f2 09 10       	if (r6 != r4) goto 18 <vPortVFreeStack+0x30 : 1e108a6 >			  ## heap_mmu.c:711:28
 1e10894:    53 4b             	r3 = [r5 + 84]			  ## heap_mmu.c:713:41
 1e10896:    48 4b             	[r5 + 80] = r0			  ## heap_mmu.c:715:41
 1e10898:    58 4b             	[r5 + 84] = r0			  ## heap_mmu.c:716:41
 1e1089a:    05 f9 c8 20       	r5 = b[r2 + 200] (u)			  ## heap_mmu.c:717:34
 1e1089e:    f5 8f             	r5 += -1			  ## heap_mmu.c:717:34
 1e108a0:    15 f9 c8 20       	b[r2 + 200] = r5			  ## heap_mmu.c:717:34
 1e108a4:    db d1             	r3 = r3 >> 7			  ## heap_mmu.c:713:47
 1e108a6:    81 80             	r1 += 8			  ## heap_mmu.c:710:22
 1e108a8:    81 e7 f0 1f       	if (r1 != 120) goto -32 <vPortVFreeStack+0x16 : 1e1088c >			  ## heap_mmu.c:710:22
 1e108ac:    f0 44             	r0 = [r2 + 60]			  ## heap_mmu.c:722:44
 1e108ae:    20 b8             	r0 = r4 - r0			  ## heap_mmu.c:722:31
 1e108b0:    89 fd 38 50       	r5 = uextra(r0, p:7, l:9)			  ## heap_mmu.c:722:22
 1e108b4:    e8 04             	r8 = r3.l (u)			  ## heap_mmu.c:724:47
 1e108b6:    80 fb 80 65       	r6 = r5 + r8			  ## heap_mmu.c:724:45
 1e108ba:    65 f2 19 20       	if (r5 >= r6) goto 50 <vPortVFreeStack+0x7A : 1e108f0 >			  ## heap_mmu.c:724:45
 1e108be:    19 70             	r9 = 1
 1e108c0:    ca ff e0 ff 00 00 	r10 = 65504 <_IRQ_MEM_ADDR+0xE0 : ffe0 >
 1e108c6:    50 08             	r0 = r5
 1e108c8:    e2 fd a0 15       	r1 = r5 & r10
 1e108cc:    c9 d0             	r1 = r1 >> 3
 1e108ce:    87 b2             	r7 = r1 + r2
 1e108d0:    01 4e             	r1 = [r7 + 0]
 1e108d2:    20 fd 1f 09       	r0 = r0 & 31
 1e108d6:    f8 fd 00 39       	r3 = r9 << r0
 1e108da:    31 f0 03 00       	if ((r1 & r3) == 0) goto 6 <vPortVFreeStack+0x6E : 1e108e4 >
 1e108de:    8f f3 7f 95       	call 2042622 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e108e2:    01 4e             	r1 = [r7 + 0]			  ## cpu.h:148:5
 1e108e4:    51 b6             	r1 |= r3			  ## heap_mmu.c:727:37
 1e108e6:    15 80             	r5 += 1			  ## heap_mmu.c:724:60
 1e108e8:    60 05             	r0 = r5.l (u)			  ## heap_mmu.c:724:30
 1e108ea:    09 4e             	[r7 + 0] = r1			  ## heap_mmu.c:727:37
 1e108ec:    60 f2 ec 3f       	if (r0 < r6) goto -40 <vPortVFreeStack+0x52 : 1e108c8 >			  ## heap_mmu.c:727:37
 1e108f0:    f0 fd 38 18       	r1 = r8 << 7
 1e108f4:    40 08             	r0 = r4			  ## heap_mmu.c:734:5
 1e108f6:    97 f3 e3 b2       	call 3106246 <vfree_ : 106ec0 >			  ## heap_mmu.c:734:5
 1e108fa:    1a 01             	{rets, r10-r4} = [sp++]			  ## heap_mmu.c:737:5
 1e108fc:    d7 f3 4c b2       	goto 3105944 <local_irq_enable : 106d98 >			  ## heap_mmu.c:737:5


tick_timer_init:
 1e10900:    34 00             	[--sp] = rets			  ## port_overwrite.c:304:0
 1e10902:    c2 ff a6 33 00 00 	r2 = 13222 <begin_of_data : 33a6 >			  ## port_overwrite.c:305:5
 1e10908:    30 70             	r0 = 3			  ## port_overwrite.c:305:5
 1e1090a:    11 70             	r1 = 1			  ## port_overwrite.c:305:5
 1e1090c:    bf f3 3c f9       	call -3464 <request_irq : 1e0fb88 >			  ## port_overwrite.c:305:5
 1e10910:    c0 ff ec e0 1b 00 	r0 = 1827052 <uECC_vli_cmp_unsafe+0xB70F0 : 1be0ec >			  ## port_overwrite.c:305:5
 1e10916:    c1 f4 00 09       	[r0 + 4] = 0			  ## port_overwrite.c:309:14
 1e1091a:    c1 ff 8c 31 00 00 	r1 = 12684 <hdl.15 : 318c >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/clock.c:1753:20
 1e10920:    01 42             	r1 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/clock.c:1753:20
 1e10922:    42 76             	r2 = 100			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/clock.c:2246:9
 1e10924:    e0 fe 20 11       	r1 = r1 / r2 (s)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/clock.c:2246:9
 1e10928:    f1 8f             	r1 += -1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/clock.c:2246:9
 1e1092a:    29 40             	[r0 + 8] = r1			  ## port_overwrite.c:310:14
 1e1092c:    c0 f4 41 09       	[r0 + 0] = 65			  ## port_overwrite.c:312:14
 1e10930:    30 00             	pc = [sp++]			  ## port_overwrite.c:313:1


vPortSysSleepInit:
 1e10932:    34 00             	[--sp] = rets			  ## port_overwrite.c:458:0
 1e10934:    c0 ff 60 64 e1 01 	r0 = 31548512 <sys_power_ops : 1e16460 >			  ## port_overwrite.c:447:21
 1e1093a:    bf f3 40 a2       	call -48000 <low_power_sys_get : 1e04dbe >			  ## port_overwrite.c:447:21
 1e1093e:    c1 ff 80 1e 00 00 	r1 = 7808 <sys_low_power : 1e80 >			  ## port_overwrite.c:447:19
 1e10944:    08 42             	[r1 + 0] = r0			  ## port_overwrite.c:447:19
 1e10946:    30 00             	pc = [sp++]			  ## port_overwrite.c:460:1


cbuf_init:
 1e10948:    03 70             	r3 = 0			  ## circular_buf.c:261:0
 1e1094a:    6b 40             	[r0 + 24] = r3			  ## circular_buf.c:262:23
 1e1094c:    5b 40             	[r0 + 20] = r3			  ## circular_buf.c:263:22
 1e1094e:    09 40             	[r0 + 0] = r1			  ## circular_buf.c:264:20
 1e10950:    29 40             	[r0 + 8] = r1			  ## circular_buf.c:265:23
 1e10952:    39 40             	[r0 + 12] = r1			  ## circular_buf.c:266:24
 1e10954:    49 40             	[r0 + 16] = r1			  ## circular_buf.c:267:22
 1e10956:    21 09             	r1 += r2			  ## circular_buf.c:268:30
 1e10958:    19 40             	[r0 + 4] = r1			  ## circular_buf.c:268:18
 1e1095a:    7a 40             	[r0 + 28] = r2			  ## circular_buf.c:269:24
 1e1095c:    8b 40             	[r0 + 32] = r3			  ## spinlock.h:70:18
 1e1095e:    20 00             	rts			  ## circular_buf.c:271:1


cbuf_write:
 1e10960:    77 01             	[--sp] = {rets, r7-r4}			  ## circular_buf.c:127:0
 1e10962:    24 08             	r4 = r2			  ## circular_buf.c:127:0
 1e10964:    16 08             	r6 = r1			  ## circular_buf.c:127:0
 1e10966:    05 08             	r5 = r0			  ## circular_buf.c:127:0
 1e10968:    09 2a             	if (r5 == 0) goto 18 <cbuf_write+0x1C : 1e1097c >			  ## circular_buf.c:127:0
 1e1096a:    97 f3 17 b2       	call 3105838 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e1096e:    60 4a             	r0 = [r5 + 24]			  ## circular_buf.c:138:40
 1e10970:    71 4a             	r1 = [r5 + 28]			  ## circular_buf.c:138:19
 1e10972:    20 b2             	r0 = r1 - r0			  ## circular_buf.c:138:29
 1e10974:    40 f2 04 20       	if (r0 >= r4) goto 8 <cbuf_write+0x20 : 1e10980 >			  ## circular_buf.c:138:9
 1e10978:    97 f3 0e b2       	call 3105820 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e1097c:    04 70             	r4 = 0
 1e1097e:    21 18             	goto 66 <cbuf_write+0x62 : 1e109c2 >
 1e10980:    30 4a             	r0 = [r5 + 12]			  ## circular_buf.c:143:48
 1e10982:    11 4a             	r1 = [r5 + 4]			  ## circular_buf.c:143:28
 1e10984:    27 b2             	r7 = r1 - r0			  ## circular_buf.c:143:32
 1e10986:    47 f2 0c 20       	if (r7 >= r4) goto 24 <cbuf_write+0x42 : 1e109a2 >
 1e1098a:    61 08             	r1 = r6			  ## circular_buf.c:149:9
 1e1098c:    72 08             	r2 = r7			  ## circular_buf.c:149:9
 1e1098e:    97 f3 a9 b2       	call 3106130 <memcpy : 106ee4 >			  ## circular_buf.c:149:9
 1e10992:    00 4a             	r0 = [r5 + 0]			  ## circular_buf.c:150:28
 1e10994:    c1 bd             	r1 = r6 + r7			  ## circular_buf.c:150:47
 1e10996:    e6 b9             	r6 = r4 - r7			  ## circular_buf.c:148:26
 1e10998:    62 08             	r2 = r6			  ## circular_buf.c:150:9
 1e1099a:    97 f3 a3 b2       	call 3106118 <memcpy : 106ee4 >			  ## circular_buf.c:150:9
 1e1099e:    57 08             	r7 = r5			  ## circular_buf.c:150:9
 1e109a0:    06 18             	goto 12 <cbuf_write+0x4E : 1e109ae >
 1e109a2:    c7 9a             	r7 = r5 + 12			  ## circular_buf.c:143:48
 1e109a4:    61 08             	r1 = r6			  ## circular_buf.c:145:9
 1e109a6:    42 08             	r2 = r4			  ## circular_buf.c:145:9
 1e109a8:    97 f3 9c b2       	call 3106104 <memcpy : 106ee4 >			  ## circular_buf.c:145:9
 1e109ac:    46 08             	r6 = r4			  ## circular_buf.c:145:9
 1e109ae:    00 4e             	r0 = [r7 + 0]
 1e109b0:    60 09             	r0 += r6
 1e109b2:    38 4a             	[r5 + 12] = r0			  ## circular_buf.c:146:28
 1e109b4:    61 4a             	r1 = [r5 + 24]			  ## circular_buf.c:154:23
 1e109b6:    41 09             	r1 += r4			  ## circular_buf.c:154:23
 1e109b8:    69 4a             	[r5 + 24] = r1			  ## circular_buf.c:154:23
 1e109ba:    59 4a             	[r5 + 20] = r1			  ## circular_buf.c:155:22
 1e109bc:    48 4a             	[r5 + 16] = r0			  ## circular_buf.c:156:22
 1e109be:    97 f3 eb b1       	call 3105750 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e109c2:    40 08             	r0 = r4			  ## circular_buf.c:160:1
 1e109c4:    57 01             	{pc, r7-r4} = [sp++]			  ## circular_buf.c:160:1


cbuf_get_data_size:
 1e109c6:    20 00             	rts			  ## circular_buf.c:327:0


cbuf_clear:
 1e109c8:    74 01             	[--sp] = {rets, r4}			  ## circular_buf.c:275:0
 1e109ca:    04 08             	r4 = r0			  ## circular_buf.c:275:0
 1e109cc:    97 f3 e6 b1       	call 3105740 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e109d0:    00 48             	r0 = [r4 + 0]			  ## circular_buf.c:280:34
 1e109d2:    28 48             	[r4 + 8] = r0			  ## circular_buf.c:280:23
 1e109d4:    38 48             	[r4 + 12] = r0			  ## circular_buf.c:281:43
 1e109d6:    48 48             	[r4 + 16] = r0			  ## circular_buf.c:281:22
 1e109d8:    00 70             	r0 = 0			  ## circular_buf.c:281:22
 1e109da:    68 48             	[r4 + 24] = r0			  ## circular_buf.c:282:23
 1e109dc:    58 48             	[r4 + 20] = r0			  ## circular_buf.c:283:22
 1e109de:    14 01             	{rets, r4} = [sp++]			  ## spinlock.h:88:5
 1e109e0:    d7 f3 da b1       	goto 3105716 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5


cbuf_read:
 1e109e4:    79 01             	[--sp] = {rets, r9-r4}			  ## circular_buf.c:22:0
 1e109e6:    24 08             	r4 = r2			  ## circular_buf.c:22:0
 1e109e8:    18 08             	r8 = r1			  ## circular_buf.c:22:0
 1e109ea:    05 08             	r5 = r0			  ## circular_buf.c:22:0
 1e109ec:    0d 2a             	if (r5 == 0) goto 26 <cbuf_read+0x24 : 1e10a08 >			  ## circular_buf.c:22:0
 1e109ee:    10 4a             	r0 = [r5 + 4]			  ## circular_buf.c:33:49
 1e109f0:    27 4a             	r7 = [r5 + 8]			  ## circular_buf.c:33:23
 1e109f2:    61 4a             	r1 = [r5 + 24]			  ## circular_buf.c:27:29
 1e109f4:    07 f2 02 30       	if (r7 < r0) goto 4 <cbuf_read+0x18 : 1e109fc >
 1e109f8:    07 4a             	r7 = [r5 + 0]			  ## circular_buf.c:34:44
 1e109fa:    2f 4a             	[r5 + 8] = r7			  ## circular_buf.c:34:27
 1e109fc:    41 f2 06 20       	if (r1 >= r4) goto 12 <cbuf_read+0x28 : 1e10a0c >			  ## circular_buf.c:37:9
 1e10a00:    01 70             	r1 = 0			  ## circular_buf.c:38:9
 1e10a02:    80 08             	r0 = r8			  ## circular_buf.c:38:9
 1e10a04:    97 f3 74 b2       	call 3106024 <memset : 106ef0 >			  ## circular_buf.c:38:9
 1e10a08:    04 70             	r4 = 0
 1e10a0a:    23 18             	goto 70 <cbuf_read+0x6E : 1e10a52 >
 1e10a0c:    e0 b1             	r0 = r0 - r7			  ## circular_buf.c:45:34
 1e10a0e:    46 08             	r6 = r4			  ## circular_buf.c:46:9
 1e10a10:    40 f2 01 80       	if (r0 > r4) goto 2 <cbuf_read+0x32 : 1e10a16 >			  ## circular_buf.c:46:9
 1e10a14:    06 08             	r6 = r0			  ## circular_buf.c:46:9
 1e10a16:    80 08             	r0 = r8			  ## circular_buf.c:52:5
 1e10a18:    71 08             	r1 = r7			  ## circular_buf.c:52:5
 1e10a1a:    62 08             	r2 = r6			  ## circular_buf.c:52:5
 1e10a1c:    97 f3 62 b2       	call 3105988 <memcpy : 106ee4 >			  ## circular_buf.c:52:5
 1e10a20:    a9 b9             	r9 = r4 - r6			  ## circular_buf.c:49:9
 1e10a22:    09 e0 0a 00       	if (r9 == 0) goto 20 <cbuf_read+0x56 : 1e10a3a >
 1e10a26:    01 4a             	r1 = [r5 + 0]			  ## circular_buf.c:57:50
 1e10a28:    80 fb 60 08       	r0 = r8 + r6			  ## circular_buf.c:57:29
 1e10a2c:    92 08             	r2 = r9			  ## circular_buf.c:57:9
 1e10a2e:    97 f3 59 b2       	call 3105970 <memcpy : 106ee4 >			  ## circular_buf.c:57:9
 1e10a32:    00 4a             	r0 = [r5 + 0]			  ## circular_buf.c:58:29
 1e10a34:    80 fb 90 60       	r6 = r0 + r9			  ## circular_buf.c:58:35
 1e10a38:    01 18             	goto 2 <cbuf_read+0x58 : 1e10a3c >
 1e10a3a:    76 09             	r6 += r7			  ## circular_buf.c:55:18
 1e10a3c:    97 f3 ae b1       	call 3105628 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e10a40:    60 4a             	r0 = [r5 + 24]			  ## circular_buf.c:62:23
 1e10a42:    20 b1             	r0 = r0 - r4			  ## circular_buf.c:62:23
 1e10a44:    68 4a             	[r5 + 24] = r0			  ## circular_buf.c:62:23
 1e10a46:    50 4a             	r0 = [r5 + 20]			  ## circular_buf.c:63:22
 1e10a48:    20 b1             	r0 = r0 - r4			  ## circular_buf.c:63:22
 1e10a4a:    58 4a             	[r5 + 20] = r0			  ## circular_buf.c:63:22
 1e10a4c:    2e 4a             	[r5 + 8] = r6			  ## circular_buf.c:64:23
 1e10a4e:    97 f3 a3 b1       	call 3105606 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e10a52:    40 08             	r0 = r4			  ## circular_buf.c:68:1
 1e10a54:    59 01             	{pc, r9-r4} = [sp++]			  ## circular_buf.c:68:1


event_pool_init:
 1e10a56:    34 00             	[--sp] = rets			  ## event.c:69:0
 1e10a58:    00 fb 24 01       	r0 = 292 <DRIVER_RAM_TOTAL+0x32 : 124 >			  ## event.c:70:26
 1e10a5c:    bf f3 ab f7       	call -4266 <malloc : 1e0f9b6 >			  ## event.c:70:26
 1e10a60:    c1 ff 5c 08 00 00 	r1 = 2140 <handl : 85c >			  ## event.c:70:24
 1e10a66:    48 42             	[r1 + 16] = r0			  ## event.c:70:24
 1e10a68:    08 20             	if (r0 == 0) goto 16 <event_pool_init+0x24 : 1e10a7a >			  ## event.c:70:24
 1e10a6a:    01 fc 24 00       	r1 = r0 + 36			  ## event.c:75:54
 1e10a6e:    02 fb 00 01       	r2 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## event.c:75:5
 1e10a72:    bf f3 69 ff       	call -302 <cbuf_init : 1e10948 >			  ## event.c:75:5
 1e10a76:    00 70             	r0 = 0			  ## event.c:75:5
 1e10a78:    30 00             	pc = [sp++]			  ## event.c:78:1
 1e10a7a:    40 07             	r0 = -12
 1e10a7c:    30 00             	pc = [sp++]			  ## event.c:78:1


sys_event_notify:
 1e10a7e:    76 01             	[--sp] = {rets, r6-r4}			  ## event.c:103:0
 1e10a80:    28 fb 00 13       	r1 = rets			  ## event.c:105:5
 1e10a84:    c5 ff 5c 08 00 00 	r5 = 2140 <handl : 85c >
 1e10a8a:    41 4a             	r1 = [r5 + 16]			  ## event.c:109:18
 1e10a8c:    04 08             	r4 = r0
 1e10a8e:    0d 22             	if (r1 == 0) goto 26 <sys_event_notify+0x2C : 1e10aaa >
 1e10a90:    00 58             	r0 = h[r4 + 0] (u)			  ## event.c:115:16
 1e10a92:    10 e0 22 10       	if (r0 != 1) goto 68 <sys_event_notify+0x5C : 1e10ada >			  ## event.c:115:16
 1e10a96:    97 f3 81 b1       	call 3105538 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e10a9a:    30 6a             	r0 = b[r5 + 3] (u)			  ## event.c:131:21
 1e10a9c:    09 20             	if (r0 == 0) goto 18 <sys_event_notify+0x32 : 1e10ab0 >			  ## event.c:131:13
 1e10a9e:    50 58             	r0 = h[r4 + 10] (u)			  ## event.c:132:30
 1e10aa0:    30 e0 10 00       	if (r0 == 3) goto 32 <sys_event_notify+0x46 : 1e10ac4 >			  ## event.c:132:30
 1e10aa4:    10 e0 0b 00       	if (r0 == 1) goto 22 <sys_event_notify+0x40 : 1e10abe >
 1e10aa8:    11 18             	goto 34 <sys_event_notify+0x4E : 1e10acc >
 1e10aaa:    d5 17             	call -86 <event_pool_init : 1e10a56 >			  ## event.c:110:13
 1e10aac:    40 30             	if (r0 != 0) goto 128 <sys_event_notify+0xB0 : 1e10b2e >			  ## event.c:110:13
 1e10aae:    f0 1f             	goto -32 <sys_event_notify+0x12 : 1e10a90 >			  ## event.c:110:13
 1e10ab0:    40 6a             	r0 = b[r5 + 4] (u)			  ## event.c:142:28
 1e10ab2:    0f 20             	if (r0 == 0) goto 30 <sys_event_notify+0x54 : 1e10ad2 >			  ## event.c:142:28
 1e10ab4:    50 58             	r0 = h[r4 + 10] (u)			  ## event.c:143:30
 1e10ab6:    30 e0 0c 00       	if (r0 == 3) goto 24 <sys_event_notify+0x54 : 1e10ad2 >			  ## event.c:143:30
 1e10aba:    10 e0 03 10       	if (r0 != 1) goto 6 <sys_event_notify+0x46 : 1e10ac4 >
 1e10abe:    30 48             	r0 = [r4 + 12]
 1e10ac0:    58 6a             	b[r5 + 5] = r0
 1e10ac2:    04 18             	goto 8 <sys_event_notify+0x4E : 1e10acc >
 1e10ac4:    30 48             	r0 = [r4 + 12]
 1e10ac6:    51 6a             	r1 = b[r5 + 5] (u)
 1e10ac8:    01 f2 03 10       	if (r1 != r0) goto 6 <sys_event_notify+0x54 : 1e10ad2 >
 1e10acc:    16 01             	{rets, r6-r4} = [sp++]
 1e10ace:    d7 f3 63 b1       	goto 3105478 <local_irq_enable : 106d98 >
 1e10ad2:    f0 7f             	r0 = 255			  ## event.c:154:28
 1e10ad4:    58 6a             	b[r5 + 5] = r0			  ## event.c:154:28
 1e10ad6:    97 f3 5f b1       	call 3105470 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e10ada:    40 08             	r0 = r4			  ## event.c:180:9
 1e10adc:    80 f3 82 73       	call 59140 <sys_event_recode : 1e1f1e4 >			  ## event.c:180:9
 1e10ae0:    26 30             	if (r0 != 0) goto 76 <sys_event_notify+0xB0 : 1e10b2e >			  ## event.c:180:9
 1e10ae2:    40 4a             	r0 = [r5 + 16]			  ## event.c:186:34
 1e10ae4:    82 71             	r2 = 24			  ## event.c:186:15
 1e10ae6:    41 08             	r1 = r4			  ## event.c:186:15
 1e10ae8:    bf f3 3a ff       	call -396 <cbuf_write : 1e10960 >			  ## event.c:186:15
 1e10aec:    80 e1 1b 00       	if (r0 == 24) goto 54 <sys_event_notify+0xA8 : 1e10b26 >
 1e10af0:    66 7f             	r6 = 246
 1e10af2:    16 80             	r6 += 1			  ## event.c:189:23
 1e10af4:    60 ff ff 69 16 00 	if ((r6 & 255) == 0) goto 44 <sys_event_notify+0xA8 : 1e10b26 >			  ## event.c:189:23
 1e10afa:    28 fb 00 0b       	r0 = icfg			  ## cpu.h:72:5
 1e10afe:    61 ff ff 09 11 00 	if ((r0 & 255) != 0) goto 34 <sys_event_notify+0xA8 : 1e10b26 >
 1e10b04:    28 fb 00 0b       	r0 = icfg			  ## cpu.h:79:5
 1e10b08:    20 fd 03 0a       	r0 = r0 & 768			  ## cpu.h:80:18
 1e10b0c:    01 ff 00 03 0a 00 	if (r0 != 768) goto 20 <sys_event_notify+0xA8 : 1e10b26 >
 1e10b12:    10 70             	r0 = 1			  ## event.c:195:17
 1e10b14:    97 f3 50 b1       	call 3105440 <os_time_dly : 106db8 >			  ## event.c:195:17
 1e10b18:    40 4a             	r0 = [r5 + 16]			  ## event.c:186:34
 1e10b1a:    82 71             	r2 = 24			  ## event.c:186:15
 1e10b1c:    41 08             	r1 = r4			  ## event.c:186:15
 1e10b1e:    bf f3 1f ff       	call -450 <cbuf_write : 1e10960 >			  ## event.c:186:15
 1e10b22:    80 e1 e6 1f       	if (r0 != 24) goto -52 <sys_event_notify+0x74 : 1e10af2 >
 1e10b26:    50 4a             	r0 = [r5 + 20]			  ## event.c:203:17
 1e10b28:    02 20             	if (r0 == 0) goto 4 <sys_event_notify+0xB0 : 1e10b2e >			  ## event.c:203:17
 1e10b2a:    97 f3 6f b1       	call 3105502 <os_sem_post : 106e0c >			  ## event.c:204:9
 1e10b2e:    56 01             	{pc, r6-r4} = [sp++]			  ## event.c:206:1


sys_key_event_enable:
 1e10b30:    34 00             	[--sp] = rets			  ## event.c:405:0
 1e10b32:    97 f3 33 b1       	call 3105382 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e10b36:    c0 ff 5c 08 00 00 	r0 = 2140 <handl : 85c >			  ## event.c:407:25
 1e10b3c:    01 70             	r1 = 0			  ## event.c:407:25
 1e10b3e:    39 60             	b[r0 + 3] = r1			  ## event.c:407:25
 1e10b40:    88 01             	{rets} = [sp++]			  ## spinlock.h:88:5
 1e10b42:    d7 f3 29 b1       	goto 3105362 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5


sys_event_init:
 1e10b46:    77 01             	[--sp] = {rets, r7-r4}			  ## event.c:686:0
 1e10b48:    c5 ff 5c 08 00 00 	r5 = 2140 <handl : 85c >			  ## event.c:686:0
 1e10b4e:    00 6a             	r0 = b[r5 + 0] (u)			  ## event.c:690:17
 1e10b50:    04 70             	r4 = 0			  ## event.c:690:17
 1e10b52:    2c 30             	if (r0 != 0) goto 88 <sys_event_init+0x66 : 1e10bac >			  ## event.c:690:17
 1e10b54:    14 70             	r4 = 1			  ## event.c:694:20
 1e10b56:    0c 6a             	b[r5 + 0] = r4			  ## event.c:694:20
 1e10b58:    f0 7f             	r0 = 255			  ## event.c:695:24
 1e10b5a:    58 6a             	b[r5 + 5] = r0			  ## event.c:695:24
 1e10b5c:    06 70             	r6 = 0			  ## event.c:695:24
 1e10b5e:    3e 4a             	[r5 + 12] = r6			  ## event.c:696:27
 1e10b60:    6e 4a             	[r5 + 24] = r6			  ## spinlock.h:70:18
 1e10b62:    c7 9b             	r7 = r5 + 28			  ## list.h:188:16
 1e10b64:    7f 4a             	[r5 + 28] = r7			  ## list.h:188:16
 1e10b66:    8f 4a             	[r5 + 32] = r7			  ## list.h:189:16
 1e10b68:    80 73             	r0 = 56			  ## event.c:700:33
 1e10b6a:    bf f3 24 f7       	call -4536 <malloc : 1e0f9b6 >			  ## event.c:700:33
 1e10b6e:    1d 20             	if (r0 == 0) goto 58 <sys_event_init+0x64 : 1e10baa >			  ## event.c:700:33
 1e10b70:    4c 61             	b[r0 + 20] = r4			  ## event.c:705:16
 1e10b72:    3e 40             	[r0 + 12] = r6			  ## event.c:706:20
 1e10b74:    88 4a             	[r5 + 32] = r0			  ## list.h:137:16
 1e10b76:    0f 40             	[r0 + 0] = r7			  ## list.h:138:16
 1e10b78:    1f 40             	[r0 + 4] = r7			  ## list.h:139:16
 1e10b7a:    78 4a             	[r5 + 28] = r0			  ## list.h:140:16
 1e10b7c:    81 4a             	r1 = [r5 + 32]
 1e10b7e:    14 f9 30 00       	b[r0 + 48] = r4			  ## event.c:705:16
 1e10b82:    ae 40             	[r0 + 40] = r6			  ## event.c:706:20
 1e10b84:    7f 40             	[r0 + 28] = r7			  ## list.h:138:16
 1e10b86:    89 40             	[r0 + 32] = r1			  ## list.h:139:16
 1e10b88:    c0 81             	r0 += 28			  ## event.c:708:10
 1e10b8a:    08 42             	[r1 + 0] = r0			  ## list.h:140:16
 1e10b8c:    88 4a             	[r5 + 32] = r0
 1e10b8e:    40 4a             	r0 = [r5 + 16]			  ## event.c:715:18
 1e10b90:    01 30             	if (r0 != 0) goto 2 <sys_event_init+0x4E : 1e10b94 >			  ## event.c:715:18
 1e10b92:    61 17             	call -318 <event_pool_init : 1e10a56 >			  ## event.c:716:9
 1e10b94:    c0 ff b0 0b e1 01 	r0 = 31525808 <sys_event_task : 1e10bb0 >			  ## event.c:718:5
 1e10b9a:    c2 ff cc 53 e1 01 	r2 = 31544268 <update_target_end+0x2544 : 1e153cc >			  ## event.c:718:5
 1e10ba0:    01 70             	r1 = 0			  ## event.c:718:5
 1e10ba2:    04 70             	r4 = 0			  ## event.c:718:5
 1e10ba4:    80 f3 23 01       	call 582 <task_create : 1e10dee >			  ## event.c:718:5
 1e10ba8:    01 18             	goto 2 <sys_event_init+0x66 : 1e10bac >			  ## event.c:718:5
 1e10baa:    44 07             	r4 = -12
 1e10bac:    40 08             	r0 = r4			  ## event.c:721:1
 1e10bae:    57 01             	{pc, r7-r4} = [sp++]			  ## event.c:721:1


sys_event_task:
 1e10bb0:    f4 0b             	sp += -24			  ## event.c:635:0
 1e10bb2:    00 75             	r0 = 80			  ## event.c:637:19
 1e10bb4:    bf f3 ff f6       	call -4610 <malloc : 1e0f9b6 >			  ## event.c:637:19
 1e10bb8:    04 08             	r4 = r0			  ## event.c:637:19
 1e10bba:    02 38             	if (r4 != 0) goto 4 <sys_event_task+0x10 : 1e10bc0 >			  ## event.c:637:19
 1e10bbc:    8f f3 10 94       	call 2041888 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e10bc0:    01 70             	r1 = 0			  ## event.c:640:5
 1e10bc2:    08 70             	r8 = 0			  ## event.c:640:5
 1e10bc4:    40 08             	r0 = r4			  ## event.c:640:5
 1e10bc6:    97 f3 1b b1       	call 3105334 <os_sem_create : 106e00 >			  ## event.c:640:5
 1e10bca:    c9 ff 5c 08 00 00 	r9 = 2140 <handl : 85c >			  ## event.c:640:5
 1e10bd0:    14 f6 14 90       	[r9 + 20] = r4			  ## event.c:641:17
 1e10bd4:    c4 ff 84 1e 00 00 	r4 = 7812 <event : 1e84 >			  ## event.c:641:17
 1e10bda:    cf ff 84 2d e1 01 	r15 = 31534468 <syscfg_ops_begin : 1e12d84 >			  ## event.c:641:17
 1e10be0:    97 f3 dc b0       	call 3105208 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e10be4:    00 f6 10 90       	r0 = [r9 + 16]			  ## event.c:647:33
 1e10be8:    82 71             	r2 = 24			  ## event.c:647:15
 1e10bea:    41 08             	r1 = r4			  ## event.c:647:15
 1e10bec:    bf f3 fa fe       	call -524 <cbuf_read : 1e109e4 >			  ## event.c:647:15
 1e10bf0:    b0 20             	if (r0 == 0) goto 352 <sys_event_task+0x1A2 : 1e10d52 >
 1e10bf2:    00 58             	r0 = h[r4 + 0] (u)			  ## event.c:652:23
 1e10bf4:    10 e0 04 10       	if (r0 != 1) goto 8 <sys_event_task+0x50 : 1e10c00 >
 1e10bf8:    00 f9 06 90       	r0 = b[r9 + 6] (u)			  ## event.c:653:44
 1e10bfc:    10 f9 04 90       	b[r9 + 4] = r0			  ## event.c:653:34
 1e10c00:    97 f3 ca b0       	call 3105172 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e10c04:    00 75             	r0 = 80			  ## event.c:543:24
 1e10c06:    bf f3 d6 f6       	call -4692 <malloc : 1e0f9b6 >			  ## event.c:543:24
 1e10c0a:    0d 08             	r13 = r0			  ## event.c:543:24
 1e10c0c:    02 30             	if (r0 != 0) goto 4 <sys_event_task+0x62 : 1e10c12 >			  ## event.c:543:24
 1e10c0e:    8f f3 e7 93       	call 2041806 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e10c12:    18 f9 02 40       	b[r4 + 2] = r8			  ## event.c:547:21
 1e10c16:    c0 ff 84 2d e1 01 	r0 = 31534468 <syscfg_ops_begin : 1e12d84 >			  ## event.c:549:5
 1e10c1c:    f0 f2 0d 20       	if (r0 >= r15) goto 26 <sys_event_task+0x8A : 1e10c3a >			  ## event.c:549:5
 1e10c20:    05 08             	r5 = r0
 1e10c22:    00 4a             	r0 = [r5 + 0]			  ## event.c:550:16
 1e10c24:    01 58             	r1 = h[r4 + 0] (u)			  ## event.c:550:29
 1e10c26:    01 f0 05 00       	if ((r1 & r0) == 0) goto 10 <sys_event_task+0x84 : 1e10c34 >			  ## event.c:550:29
 1e10c2a:    11 4a             	r1 = [r5 + 4]			  ## event.c:551:16
 1e10c2c:    40 08             	r0 = r4			  ## event.c:551:13
 1e10c2e:    81 00             	call r1			  ## event.c:551:13
 1e10c30:    20 68             	r0 = b[r4 + 2] (u)			  ## event.c:552:24
 1e10c32:    97 30             	if (r0 != 0) goto 302 <sys_event_task+0x1B2 : 1e10d62 >			  ## event.c:552:24
 1e10c34:    85 80             	r5 += 8			  ## event.c:549:5
 1e10c36:    f5 f2 f4 3f       	if (r5 < r15) goto -24 <sys_event_task+0x72 : 1e10c22 >
 1e10c3a:    0e f6 0c 90       	r14 = [r9 + 12]			  ## event.c:559:29
 1e10c3e:    97 f3 ad b0       	call 3105114 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e10c42:    07 f6 1c 90       	r7 = [r9 + 28]			  ## event.c:563:5
 1e10c46:    95 fc 1c 00       	r5 = r9 + 28			  ## event.c:563:5
 1e10c4a:    57 f2 71 00       	if (r7 == r5) goto 226 <sys_event_task+0x180 : 1e10d30 >			  ## event.c:563:5
 1e10c4e:    0c f7 00 40       	r12 = h[r4 + 0] (u)
 1e10c52:    02 f9 01 90       	r2 = b[r9 + 1] (u)
 1e10c56:    10 70             	r0 = 1
 1e10c58:    11 70             	r1 = 1
 1e10c5a:    c2 f0 01 00       	if ((r2 & r12) == 0) goto 2 <sys_event_task+0xB0 : 1e10c60 >
 1e10c5e:    01 70             	r1 = 0
 1e10c60:    03 f9 02 90       	r3 = b[r9 + 2] (u)
 1e10c64:    12 70             	r2 = 1
 1e10c66:    01 36             	if (r3 != 0) goto 2 <sys_event_task+0xBA : 1e10c6a >
 1e10c68:    02 70             	r2 = 0
 1e10c6a:    51 b4             	r1 |= r2
 1e10c6c:    0e e0 01 00       	if (r14 == 0) goto 2 <sys_event_task+0xC2 : 1e10c72 >
 1e10c70:    00 70             	r0 = 0
 1e10c72:    0b f6 04 40       	r11 = [r4 + 4]
 1e10c76:    e0 fd 10 a0       	r10 = r0 | r1
 1e10c7a:    76 08             	r6 = r7
 1e10c7c:    40 6d             	r0 = b[r6 + 20] (u)			  ## event.c:564:16
 1e10c7e:    07 4c             	r7 = [r6 + 0]			  ## event.c:564:16
 1e10c80:    03 20             	if (r0 == 0) goto 6 <sys_event_task+0xD8 : 1e10c88 >
 1e10c82:    57 f2 fa 1f       	if (r7 != r5) goto -12 <sys_event_task+0xCA : 1e10c7a >
 1e10c86:    54 18             	goto 168 <sys_event_task+0x180 : 1e10d30 >
 1e10c88:    30 4c             	r0 = [r6 + 12]			  ## event.c:564:27
 1e10c8a:    fb 21             	if (r0 == 0) goto -10 <sys_event_task+0xD2 : 1e10c82 >			  ## event.c:564:27
 1e10c8c:    b0 5c             	r0 = h[r6 + 22] (u)			  ## event.c:567:18
 1e10c8e:    c0 f0 f8 ff       	if ((r0 & r12) == 0) goto -16 <sys_event_task+0xD2 : 1e10c82 >			  ## event.c:567:18
 1e10c92:    60 4c             	r0 = [r6 + 24]			  ## event.c:570:16
 1e10c94:    02 20             	if (r0 == 0) goto 4 <sys_event_task+0xEA : 1e10c9a >			  ## event.c:570:16
 1e10c96:    b0 f2 f4 1f       	if (r0 != r11) goto -24 <sys_event_task+0xD2 : 1e10c82 >
 1e10c9a:    0a e0 05 10       	if (r10 != 0) goto 10 <sys_event_task+0xF8 : 1e10ca8 >
 1e10c9e:    40 4c             	r0 = [r6 + 16]			  ## event.c:576:31
 1e10ca0:    e1 08             	r1 = r14			  ## event.c:576:21
 1e10ca2:    97 f3 27 b1       	call 3105358 <strcmp : 106ef4 >			  ## event.c:576:21
 1e10ca6:    ed 31             	if (r0 != 0) goto -38 <sys_event_task+0xD2 : 1e10c82 >			  ## event.c:576:21
 1e10ca8:    97 f3 76 b0       	call 3105004 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e10cac:    01 70             	r1 = 0			  ## event.c:585:9
 1e10cae:    d0 08             	r0 = r13			  ## event.c:585:9
 1e10cb0:    97 f3 a6 b0       	call 3105100 <os_sem_create : 106e00 >			  ## event.c:585:9
 1e10cb4:    30 4c             	r0 = [r6 + 12]			  ## event.c:587:26
 1e10cb6:    08 02             	[sp] = r0			  ## event.c:587:16
 1e10cb8:    00 fb 02 02       	r0 = 514 <BTCTLER_CL_RAM_TOTAL+0x1E : 202 >			  ## event.c:588:16
 1e10cbc:    18 02             	[sp+4] = r0			  ## event.c:588:16
 1e10cbe:    2c 02             	[sp+8] = r4			  ## event.c:589:16
 1e10cc0:    20 4c             	r0 = [r6 + 8]			  ## event.c:590:26
 1e10cc2:    38 02             	[sp+12] = r0			  ## event.c:590:16
 1e10cc4:    1d f5 10 00       	[sp+16] = r13			  ## event.c:591:16
 1e10cc8:    03 18             	goto 6 <sys_event_task+0x120 : 1e10cd0 >			  ## event.c:591:16
 1e10cca:    20 70             	r0 = 2			  ## event.c:604:13
 1e10ccc:    97 f3 74 b0       	call 3105000 <os_time_dly : 106db8 >			  ## event.c:604:13
 1e10cd0:    40 6d             	r0 = b[r6 + 20] (u)
 1e10cd2:    16 30             	if (r0 != 0) goto 44 <sys_event_task+0x150 : 1e10d00 >
 1e10cd4:    40 4c             	r0 = [r6 + 16]			  ## event.c:593:45
 1e10cd6:    03 a0             	r3 = sp + 0			  ## event.c:593:45
 1e10cd8:    20 fb 30 1b       	r1 = 3145728			  ## event.c:593:23
 1e10cdc:    52 70             	r2 = 5			  ## event.c:593:23
 1e10cde:    97 f3 7f b0       	call 3105022 <os_taskq_post_type : 106de0 >			  ## event.c:593:23
 1e10ce2:    50 e1 f2 0f       	if (r0 == 21) goto -28 <sys_event_task+0x11A : 1e10cca >			  ## event.c:594:17
 1e10ce6:    0c 30             	if (r0 != 0) goto 24 <sys_event_task+0x150 : 1e10d00 >
 1e10ce8:    00 f6 08 90       	r0 = [r9 + 8]			  ## event.c:595:53
 1e10cec:    a1 70             	r1 = 10			  ## event.c:595:65
 1e10cee:    e0 fe 10 10       	r1 = r0 / r1 (s)			  ## event.c:595:65
 1e10cf2:    d0 08             	r0 = r13			  ## event.c:595:23
 1e10cf4:    97 f3 88 b0       	call 3105040 <os_sem_pend : 106e08 >			  ## event.c:595:23
 1e10cf8:    b0 e0 02 10       	if (r0 != 11) goto 4 <sys_event_task+0x150 : 1e10d00 >
 1e10cfc:    8f f3 70 93       	call 2041568 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e10d00:    00 f9 02 90       	r0 = b[r9 + 2] (u)			  ## event.c:607:21
 1e10d04:    03 20             	if (r0 == 0) goto 6 <sys_event_task+0x15C : 1e10d0c >			  ## event.c:607:13
 1e10d06:    18 f9 02 40       	b[r4 + 2] = r8			  ## event.c:608:29
 1e10d0a:    02 18             	goto 4 <sys_event_task+0x160 : 1e10d10 >			  ## event.c:608:29
 1e10d0c:    20 68             	r0 = b[r4 + 2] (u)			  ## event.c:610:20
 1e10d0e:    29 30             	if (r0 != 0) goto 82 <sys_event_task+0x1B2 : 1e10d62 >			  ## event.c:610:20
 1e10d10:    97 f3 44 b0       	call 3104904 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e10d14:    00 4c             	r0 = [r6 + 0]			  ## event.c:621:22
 1e10d16:    70 f2 01 00       	if (r0 == r7) goto 2 <sys_event_task+0x16C : 1e10d1c >
 1e10d1a:    07 08             	r7 = r0			  ## event.c:621:13
 1e10d1c:    00 f6 0c 90       	r0 = [r9 + 12]			  ## event.c:617:39
 1e10d20:    01 30             	if (r0 != 0) goto 2 <sys_event_task+0x174 : 1e10d24 >
 1e10d22:    e0 08             	r0 = r14			  ## event.c:617:28
 1e10d24:    0e e0 01 00       	if (r14 == 0) goto 2 <sys_event_task+0x17A : 1e10d2a >
 1e10d28:    e0 08             	r0 = r14			  ## event.c:617:28
 1e10d2a:    0e 08             	r14 = r0
 1e10d2c:    57 f2 8f 1f       	if (r7 != r5) goto -226 <sys_event_task+0x9E : 1e10c4e >
 1e10d30:    d0 08             	r0 = r13			  ## event.c:625:5
 1e10d32:    bf f3 6b f6       	call -4906 <free : 1e0fa0c >			  ## event.c:625:5
 1e10d36:    18 f9 02 90       	b[r9 + 2] = r8			  ## event.c:627:31
 1e10d3a:    97 f3 2d b0       	call 3104858 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e10d3e:    97 f3 2d b0       	call 3104858 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e10d42:    00 58             	r0 = h[r4 + 0] (u)			  ## event.c:668:23
 1e10d44:    10 e0 02 10       	if (r0 != 1) goto 4 <sys_event_task+0x19C : 1e10d4c >			  ## event.c:668:23
 1e10d48:    18 f9 04 90       	b[r9 + 4] = r8			  ## event.c:669:34
 1e10d4c:    97 f3 24 b0       	call 3104840 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e10d50:    47 1f             	goto -370 <sys_event_task+0x30 : 1e10be0 >			  ## spinlock.h:88:5
 1e10d52:    97 f3 21 b0       	call 3104834 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e10d56:    00 f6 14 90       	r0 = [r9 + 20]			  ## event.c:650:33
 1e10d5a:    01 70             	r1 = 0			  ## event.c:650:13
 1e10d5c:    97 f3 54 b0       	call 3104936 <os_sem_pend : 106e08 >			  ## event.c:650:13
 1e10d60:    3f 1f             	goto -386 <sys_event_task+0x30 : 1e10be0 >			  ## event.c:650:13
 1e10d62:    d0 08             	r0 = r13
 1e10d64:    bf f3 52 f6       	call -4956 <free : 1e0fa0c >
 1e10d68:    ea 1f             	goto -44 <sys_event_task+0x18E : 1e10d3e >


register_sys_event_handler:
 1e10d6a:    76 01             	[--sp] = {rets, r6-r4}			  ## event.c:238:0
 1e10d6c:    c5 ff 5c 08 00 00 	r5 = 2140 <handl : 85c >			  ## event.c:238:0
 1e10d72:    00 6a             	r0 = b[r5 + 0] (u)			  ## event.c:241:18
 1e10d74:    0f 20             	if (r0 == 0) goto 30 <register_sys_event_handler+0x2A : 1e10d94 >			  ## event.c:241:18
 1e10d76:    74 4a             	r4 = [r5 + 28]
 1e10d78:    c6 9b             	r6 = r5 + 28
 1e10d7a:    64 f2 05 00       	if (r4 == r6) goto 10 <register_sys_event_handler+0x1E : 1e10d88 >
 1e10d7e:    40 69             	r0 = b[r4 + 20] (u)			  ## event.c:248:16
 1e10d80:    0c 30             	if (r0 != 0) goto 24 <register_sys_event_handler+0x30 : 1e10d9a >			  ## event.c:248:16
 1e10d82:    04 48             	r4 = [r4 + 0]
 1e10d84:    64 f2 fb 1f       	if (r4 != r6) goto -10 <register_sys_event_handler+0x14 : 1e10d7e >
 1e10d88:    c0 71             	r0 = 28			  ## event.c:256:33
 1e10d8a:    bf f3 14 f6       	call -5080 <malloc : 1e0f9b6 >			  ## event.c:256:33
 1e10d8e:    04 08             	r4 = r0			  ## event.c:256:33
 1e10d90:    0c 38             	if (r4 != 0) goto 24 <register_sys_event_handler+0x40 : 1e10daa >
 1e10d92:    56 01             	{pc, r6-r4} = [sp++]
 1e10d94:    d8 16             	call -592 <sys_event_init : 1e10b46 >			  ## event.c:242:13
 1e10d96:    2a 30             	if (r0 != 0) goto 84 <register_sys_event_handler+0x82 : 1e10dec >			  ## event.c:242:13
 1e10d98:    ee 1f             	goto -36 <register_sys_event_handler+0xC : 1e10d76 >			  ## event.c:242:13
 1e10d9a:    97 f3 ff af       	call 3104766 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e10d9e:    00 48             	r0 = [r4 + 0]			  ## list.h:165:36
 1e10da0:    11 48             	r1 = [r4 + 4]			  ## list.h:165:23
 1e10da2:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e10da4:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e10da6:    97 f3 f7 af       	call 3104750 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e10daa:    00 70             	r0 = 0
 1e10dac:    48 69             	b[r4 + 20] = r0			  ## event.c:262:12
 1e10dae:    68 48             	[r4 + 24] = r0			  ## event.c:263:13
 1e10db0:    c1 ff 14 1c e1 01 	r1 = 31530004 <app_core_event_handler : 1e11c14 >			  ## event.c:264:16
 1e10db6:    39 48             	[r4 + 12] = r1			  ## event.c:264:16
 1e10db8:    c1 ff ff ff 00 00 	r1 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## event.c:265:19
 1e10dbe:    b9 58             	h[r4 + 22] = r1			  ## event.c:265:19
 1e10dc0:    58 69             	b[r4 + 21] = r0			  ## event.c:266:17
 1e10dc2:    8f f3 31 92       	call 2040930 <os_current_task : 3228 >			  ## event.c:267:16
 1e10dc6:    48 48             	[r4 + 16] = r0			  ## event.c:267:14
 1e10dc8:    02 30             	if (r0 != 0) goto 4 <register_sys_event_handler+0x64 : 1e10dce >			  ## event.c:267:14
 1e10dca:    8f f3 09 93       	call 2041362 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e10dce:    97 f3 e5 af       	call 3104714 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e10dd2:    70 4a             	r0 = [r5 + 28]			  ## spinlock.h:77:5
 1e10dd4:    60 f2 03 00       	if (r0 == r6) goto 6 <register_sys_event_handler+0x74 : 1e10dde >
 1e10dd8:    00 40             	r0 = [r0 + 0]
 1e10dda:    60 f2 fd 1f       	if (r0 != r6) goto -6 <register_sys_event_handler+0x6E : 1e10dd8 >
 1e10dde:    80 4a             	r0 = [r5 + 32]			  ## list.h:154:28
 1e10de0:    8c 4a             	[r5 + 32] = r4			  ## list.h:137:16
 1e10de2:    0e 48             	[r4 + 0] = r6			  ## list.h:138:16
 1e10de4:    18 48             	[r4 + 4] = r0			  ## list.h:139:16
 1e10de6:    0c 40             	[r0 + 0] = r4			  ## list.h:140:16
 1e10de8:    97 f3 d6 af       	call 3104684 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e10dec:    56 01             	{pc, r6-r4} = [sp++]


task_create:
 1e10dee:    77 01             	[--sp] = {rets, r7-r4}			  ## task.c:58:0
 1e10df0:    fc 0b             	sp += -8			  ## task.c:58:0
 1e10df2:    26 08             	r6 = r2			  ## task.c:58:0
 1e10df4:    14 08             	r4 = r1			  ## task.c:58:0
 1e10df6:    05 08             	r5 = r0			  ## task.c:58:0
 1e10df8:    c7 ff 2a 5b e1 01 	r7 = 31546154 <task_info_table+0x6 : 1e15b2a >			  ## task.c:58:0
 1e10dfe:    c0 ff 03 58 e1 01 	r0 = 31545347 <update_target_end+0x297B : 1e15803 >			  ## task.c:58:0
 1e10e04:    61 08             	r1 = r6			  ## task.c:20:14
 1e10e06:    97 f3 75 b0       	call 3105002 <strcmp : 106ef4 >			  ## task.c:20:14
 1e10e0a:    05 20             	if (r0 == 0) goto 10 <task_create+0x28 : 1e10e16 >			  ## task.c:20:13
 1e10e0c:    00 f6 06 70       	r0 = [r7 + 6]			  ## task.c:19:34
 1e10e10:    c7 80             	r7 += 12			  ## task.c:19:5
 1e10e12:    f8 31             	if (r0 != 0) goto -16 <task_create+0x16 : 1e10e04 >			  ## task.c:19:5
 1e10e14:    0b 18             	goto 22 <task_create+0x3E : 1e10e2c >			  ## task.c:19:5
 1e10e16:    03 5e             	r3 = h[r7 + 0] (u)			  ## task.c:70:47
 1e10e18:    02 f9 fe 7f       	r2 = b[r7 + -2] (u)			  ## task.c:70:11
 1e10e1c:    10 5e             	r0 = h[r7 + 2] (u)			  ## task.c:70:65
 1e10e1e:    1e 02             	[sp+4] = r6			  ## task.c:70:11
 1e10e20:    08 02             	[sp] = r0			  ## task.c:70:11
 1e10e22:    50 08             	r0 = r5			  ## task.c:70:11
 1e10e24:    41 08             	r1 = r4			  ## task.c:70:11
 1e10e26:    bf f3 cb f5       	call -5226 <os_task_create : 1e0f9c0 >			  ## task.c:70:11
 1e10e2a:    02 20             	if (r0 == 0) goto 4 <task_create+0x42 : 1e10e30 >
 1e10e2c:    8f f3 d8 92       	call 2041264 <p33_soft_reset : 33e0 >
 1e10e30:    04 0a             	sp += 8
 1e10e32:    57 01             	{pc, r7-r4} = [sp++]


task_kill:
 1e10e34:    d7 f3 c8 af       	goto 3104656 <os_task_del : 106dc8 >			  ## task.c:102:0


__sys_timer_del:
 1e10e38:    74 01             	[--sp] = {rets, r4}			  ## timer.c:593:0
 1e10e3a:    04 08             	r4 = r0			  ## timer.c:593:0
 1e10e3c:    97 f3 ae af       	call 3104604 <local_irq_disable : 106d9c >			  ## timer.c:597:5
 1e10e40:    c1 ff 8c 08 00 00 	r1 = 2188 <timer_head : 88c >			  ## timer.c:597:5
 1e10e46:    00 42             	r0 = [r1 + 0]			  ## timer.c:597:5
 1e10e48:    10 f2 09 00       	if (r0 == r1) goto 18 <__sys_timer_del+0x26 : 1e10e5e >
 1e10e4c:    e2 50             	r2 = h[r0 + 28] (u)			  ## timer.c:600:16
 1e10e4e:    42 f2 04 00       	if (r2 == r4) goto 8 <__sys_timer_del+0x22 : 1e10e5a >			  ## timer.c:600:16
 1e10e52:    00 40             	r0 = [r0 + 0]
 1e10e54:    10 f2 fa 1f       	if (r0 != r1) goto -12 <__sys_timer_del+0x14 : 1e10e4c >
 1e10e58:    02 18             	goto 4 <__sys_timer_del+0x26 : 1e10e5e >
 1e10e5a:    06 f4 01 0c       	[r0 + 24] |= 16777216			  ## timer.c:601:20
 1e10e5e:    10 f2 0e 00       	if (r0 == r1) goto 28 <__sys_timer_del+0x46 : 1e10e7e >
 1e10e62:    40 40             	r0 = [r0 + 16]			  ## timer.c:611:15
 1e10e64:    03 30             	if (r0 != 0) goto 6 <__sys_timer_del+0x34 : 1e10e6c >
 1e10e66:    c0 ff 03 58 e1 01 	r0 = 31545347 <update_target_end+0x297B : 1e15803 >			  ## timer.c:612:9
 1e10e6c:    01 fd 30 4b       	r1 = r4 | 3145728			  ## timer.c:615:40
 1e10e70:    97 f3 c4 af       	call 3104648 <os_taskq_del_type : 106dfc >			  ## timer.c:615:5
 1e10e74:    c0 ff 48 24 00 00 	r0 = 9288 <sys_timer_sem : 2448 >			  ## timer.c:617:5
 1e10e7a:    97 f3 c7 af       	call 3104654 <os_sem_post : 106e0c >			  ## timer.c:617:5
 1e10e7e:    14 01             	{rets, r4} = [sp++]
 1e10e80:    d7 f3 8a af       	goto 3104532 <local_irq_enable : 106d98 >


sys_timeout_del:
 1e10e84:    d9 1f             	goto -78 <__sys_timer_del : 1e10e38 >			  ## timer.c:644:0


sys_timer_del:
 1e10e86:    d8 1f             	goto -80 <__sys_timer_del : 1e10e38 >			  ## timer.c:631:0


__get_min_precesion:
 1e10e88:    79 01             	[--sp] = {rets, r9-r4}			  ## usr_timer.c:109:0
 1e10e8a:    04 fb e8 03       	r4 = 1000 <BTCTLER_LE_RAM_TOTAL+0xA : 3e8 >			  ## usr_timer.c:109:0
 1e10e8e:    09 70             	r9 = 0			  ## usr_timer.c:109:0
 1e10e90:    c8 ff b0 20 00 00 	r8 = 8368 <gatt_client_conn_handle : 20b0 >			  ## usr_timer.c:109:0
 1e10e96:    f0 fd 18 09       	r0 = r9 << 3			  ## usr_timer.c:115:35
 1e10e9a:    80 09             	r0 += r8			  ## usr_timer.c:115:35
 1e10e9c:    07 f6 78 01       	r7 = [r0 + 376]			  ## list.h:124:18
 1e10ea0:    06 fc 78 01       	r6 = r0 + 376			  ## usr_timer.c:115:35
 1e10ea4:    67 f2 11 00       	if (r7 == r6) goto 34 <__get_min_precesion+0x42 : 1e10eca >
 1e10ea8:    b0 6f             	r0 = b[r7 + 27] (u)			  ## usr_timer.c:122:17
 1e10eaa:    20 f3 0b 00       	if ((r0 & 1) != 0) goto 22 <__get_min_precesion+0x3C : 1e10ec4 >			  ## usr_timer.c:122:17
 1e10eae:    55 4e             	r5 = [r7 + 20]			  ## usr_timer.c:126:27
 1e10eb0:    8f f3 b6 91       	call 2040684 <jiffies_msec : 3220 >			  ## usr_timer.c:126:37
 1e10eb4:    20 ba             	r0 = r5 - r0			  ## usr_timer.c:126:35
 1e10eb6:    10 e0 01 c0       	ifs (r0 > 1) goto 2 <__get_min_precesion+0x34 : 1e10ebc >
 1e10eba:    10 70             	r0 = 1			  ## usr_timer.c:127:17
 1e10ebc:    04 f2 01 80       	if (r4 > r0) goto 2 <__get_min_precesion+0x3A : 1e10ec2 >
 1e10ec0:    40 08             	r0 = r4			  ## usr_timer.c:130:17
 1e10ec2:    04 08             	r4 = r0
 1e10ec4:    07 4e             	r7 = [r7 + 0]
 1e10ec6:    67 f2 ef 1f       	if (r7 != r6) goto -34 <__get_min_precesion+0x20 : 1e10ea8 >
 1e10eca:    19 80             	r9 += 1			  ## usr_timer.c:113:46
 1e10ecc:    29 e0 e3 1f       	if (r9 != 2) goto -58 <__get_min_precesion+0xE : 1e10e96 >
 1e10ed0:    c5 ff 8c 08 00 00 	r5 = 2188 <timer_head : 88c >
 1e10ed6:    06 4a             	r6 = [r5 + 0]
 1e10ed8:    56 f2 11 00       	if (r6 == r5) goto 34 <__get_min_precesion+0x76 : 1e10efe >
 1e10edc:    b0 6d             	r0 = b[r6 + 27] (u)			  ## usr_timer.c:137:13
 1e10ede:    20 f3 0b 00       	if ((r0 & 1) != 0) goto 22 <__get_min_precesion+0x70 : 1e10ef8 >			  ## usr_timer.c:137:13
 1e10ee2:    57 4c             	r7 = [r6 + 20]			  ## usr_timer.c:140:23
 1e10ee4:    8f f3 9c 91       	call 2040632 <jiffies_msec : 3220 >			  ## usr_timer.c:140:33
 1e10ee8:    20 be             	r0 = r7 - r0			  ## usr_timer.c:140:31
 1e10eea:    10 e0 01 c0       	ifs (r0 > 1) goto 2 <__get_min_precesion+0x68 : 1e10ef0 >
 1e10eee:    10 70             	r0 = 1			  ## usr_timer.c:141:13
 1e10ef0:    04 f2 01 80       	if (r4 > r0) goto 2 <__get_min_precesion+0x6E : 1e10ef6 >
 1e10ef4:    40 08             	r0 = r4			  ## usr_timer.c:144:13
 1e10ef6:    04 08             	r4 = r0
 1e10ef8:    06 4c             	r6 = [r6 + 0]
 1e10efa:    56 f2 ef 1f       	if (r6 != r5) goto -34 <__get_min_precesion+0x54 : 1e10edc >
 1e10efe:    40 08             	r0 = r4			  ## usr_timer.c:151:5
 1e10f00:    59 01             	{pc, r9-r4} = [sp++]			  ## usr_timer.c:151:5


__sys_timer_add:
 1e10f02:    78 01             	[--sp] = {rets, r8-r4}			  ## timer.c:294:0
 1e10f04:    36 08             	r6 = r3			  ## timer.c:294:0
 1e10f06:    28 08             	r8 = r2			  ## timer.c:294:0
 1e10f08:    17 08             	r7 = r1			  ## timer.c:294:0
 1e10f0a:    04 08             	r4 = r0			  ## timer.c:294:0
 1e10f0c:    97 f3 46 af       	call 3104396 <local_irq_disable : 106d9c >			  ## timer.c:230:5
 1e10f10:    00 70             	r0 = 0
 1e10f12:    c5 ff a4 1e 00 00 	r5 = 7844 <timer_pool : 1ea4 >
 1e10f18:    f1 6b             	r1 = b[r5 + 31] (u)			  ## timer.c:233:27
 1e10f1a:    0d 22             	if (r1 == 0) goto 26 <__sys_timer_add+0x34 : 1e10f36 >			  ## timer.c:233:13
 1e10f1c:    10 80             	r0 += 1			  ## timer.c:232:50
 1e10f1e:    05 82             	r5 += 32			  ## timer.c:232:23
 1e10f20:    a0 e0 fa 3f       	if (r0 < 10) goto -12 <__sys_timer_add+0x16 : 1e10f18 >			  ## timer.c:232:23
 1e10f24:    97 f3 38 af       	call 3104368 <local_irq_enable : 106d98 >			  ## timer.c:241:5
 1e10f28:    00 72             	r0 = 32			  ## timer.c:250:29
 1e10f2a:    bf f3 44 f5       	call -5496 <malloc : 1e0f9b6 >			  ## timer.c:250:29
 1e10f2e:    05 08             	r5 = r0			  ## timer.c:250:29
 1e10f30:    06 3a             	if (r5 != 0) goto 12 <__sys_timer_add+0x3C : 1e10f3e >
 1e10f32:    04 70             	r4 = 0
 1e10f34:    5e 18             	goto 188 <__sys_timer_add+0xF0 : 1e10ff2 >
 1e10f36:    10 70             	r0 = 1			  ## timer.c:234:32
 1e10f38:    f8 6b             	b[r5 + 31] = r0			  ## timer.c:234:32
 1e10f3a:    97 f3 2d af       	call 3104346 <local_irq_enable : 106d98 >			  ## timer.c:236:13
 1e10f3e:    3c 4a             	[r5 + 12] = r4			  ## timer.c:256:13
 1e10f40:    2f 4a             	[r5 + 8] = r7			  ## timer.c:257:13
 1e10f42:    60 4a             	r0 = [r5 + 24]			  ## timer.c:258:13
 1e10f44:    01 70             	r1 = 0			  ## timer.c:258:13
 1e10f46:    e9 6b             	b[r5 + 30] = r1			  ## timer.c:260:16
 1e10f48:    31 fd ff 8c       	r1 = r8 & 16777215			  ## timer.c:258:13
 1e10f4c:    72 c6             	r2 = r6 << 25			  ## timer.c:261:16
 1e10f4e:    22 fd 02 2c       	r2 = r2 & 33554432			  ## timer.c:261:16
 1e10f52:    51 b4             	r1 |= r2			  ## timer.c:258:13
 1e10f54:    20 fd fc 0c       	r0 = r0 & 4227858432			  ## timer.c:258:13
 1e10f58:    50 b2             	r0 |= r1			  ## timer.c:261:16
 1e10f5a:    68 4a             	[r5 + 24] = r0			  ## timer.c:261:16
 1e10f5c:    8f f3 60 91       	call 2040512 <jiffies_msec : 3220 >			  ## timer.c:262:18
 1e10f60:    80 09             	r0 += r8			  ## timer.c:262:33
 1e10f62:    58 4a             	[r5 + 20] = r0			  ## timer.c:262:16
 1e10f64:    8f f3 60 91       	call 2040512 <os_current_task : 3228 >			  ## timer.c:263:16
 1e10f68:    48 4a             	[r5 + 16] = r0			  ## timer.c:263:14
 1e10f6a:    09 20             	if (r0 == 0) goto 18 <__sys_timer_add+0x7C : 1e10f7e >			  ## timer.c:263:14
 1e10f6c:    28 fb 00 0b       	r0 = icfg			  ## cpu.h:72:5
 1e10f70:    61 ff ff 09 04 00 	if ((r0 & 255) != 0) goto 8 <__sys_timer_add+0x7C : 1e10f7e >
 1e10f76:    40 4a             	r0 = [r5 + 16]			  ## timer.c:269:38
 1e10f78:    bf f3 f3 f5       	call -5146 <owner_is_idle_task : 1e0fb62 >			  ## timer.c:269:16
 1e10f7c:    04 20             	if (r0 == 0) goto 8 <__sys_timer_add+0x84 : 1e10f86 >			  ## timer.c:269:16
 1e10f7e:    c0 ff 03 58 e1 01 	r0 = 31545347 <update_target_end+0x297B : 1e15803 >
 1e10f84:    48 4a             	[r5 + 16] = r0
 1e10f86:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >
 1e10f8c:    31 51             	r1 = h[r0 + 38] (u)			  ## timer.c:274:13
 1e10f8e:    11 80             	r1 += 1			  ## timer.c:274:13
 1e10f90:    39 51             	h[r0 + 38] = r1			  ## timer.c:274:13
 1e10f92:    62 04             	r2 = r1.l (u)			  ## timer.c:275:9
 1e10f94:    e9 5a             	h[r5 + 28] = r1			  ## timer.c:274:11
 1e10f96:    03 34             	if (r2 != 0) goto 6 <__sys_timer_add+0x9C : 1e10f9e >			  ## timer.c:274:11
 1e10f98:    11 70             	r1 = 1			  ## timer.c:276:15
 1e10f9a:    e9 5a             	h[r5 + 28] = r1			  ## timer.c:276:15
 1e10f9c:    39 51             	h[r0 + 38] = r1			  ## timer.c:277:19
 1e10f9e:    97 f3 fd ae       	call 3104250 <local_irq_disable : 106d9c >			  ## timer.c:302:5
 1e10fa2:    72 17             	call -284 <__get_min_precesion : 1e10e88 >			  ## timer.c:304:20
 1e10fa4:    e4 5a             	r4 = h[r5 + 28] (u)			  ## timer.c:304:20
 1e10fa6:    c1 ff 8c 08 00 00 	r1 = 2188 <timer_head : 88c >
 1e10fac:    02 42             	r2 = [r1 + 0]
 1e10fae:    03 18             	goto 6 <__sys_timer_add+0xB4 : 1e10fb6 >
 1e10fb0:    43 08             	r3 = r4
 1e10fb2:    14 96             	r4 = r3 + 1
 1e10fb4:    ec 5a             	h[r5 + 28] = r4
 1e10fb6:    12 f2 08 00       	if (r2 == r1) goto 16 <__sys_timer_add+0xC8 : 1e10fca >
 1e10fba:    23 08             	r3 = r2
 1e10fbc:    e6 56             	r6 = h[r3 + 28] (u)			  ## timer.c:78:25
 1e10fbe:    27 05             	r7 = r4.l (u)			  ## timer.c:78:19
 1e10fc0:    67 f2 f6 0f       	if (r7 == r6) goto -20 <__sys_timer_add+0xAE : 1e10fb0 >
 1e10fc4:    03 46             	r3 = [r3 + 0]
 1e10fc6:    13 f2 f9 1f       	if (r3 != r1) goto -14 <__sys_timer_add+0xBA : 1e10fbc >
 1e10fca:    26 05             	r6 = r4.l (u)			  ## timer.c:83:9
 1e10fcc:    03 70             	r3 = 0			  ## timer.c:83:9
 1e10fce:    f1 2d             	if (r6 == 0) goto -30 <__sys_timer_add+0xB0 : 1e10fb2 >			  ## timer.c:83:9
 1e10fd0:    12 42             	r2 = [r1 + 4]			  ## list.h:154:28
 1e10fd2:    1d 42             	[r1 + 4] = r5			  ## list.h:137:16
 1e10fd4:    09 4a             	[r5 + 0] = r1			  ## list.h:138:16
 1e10fd6:    1a 4a             	[r5 + 4] = r2			  ## list.h:139:16
 1e10fd8:    0d 44             	[r2 + 0] = r5			  ## list.h:140:16
 1e10fda:    80 f2 03 90       	if (r0 <= r8) goto 6 <__sys_timer_add+0xE2 : 1e10fe4 >			  ## list.h:140:16
 1e10fde:    80 08             	r0 = r8			  ## timer.c:311:9
 1e10fe0:    bf f3 34 87       	call -61848 <timer1_run : 1e01e4c >			  ## timer.c:311:9
 1e10fe4:    97 f3 d8 ae       	call 3104176 <local_irq_enable : 106d98 >			  ## timer.c:314:5
 1e10fe8:    c0 ff 48 24 00 00 	r0 = 9288 <sys_timer_sem : 2448 >			  ## timer.c:316:5
 1e10fee:    97 f3 0d af       	call 3104282 <os_sem_post : 106e0c >			  ## timer.c:316:5
 1e10ff2:    20 05             	r0 = r4.l (u)			  ## timer.c:321:1
 1e10ff4:    58 01             	{pc, r8-r4} = [sp++]			  ## timer.c:321:1


sys_timer_add:
 1e10ff6:    28 fb 00 33       	r3 = rets			  ## timer.c:340:0
 1e10ffa:    03 70             	r3 = 0			  ## timer.c:345:12
 1e10ffc:    82 1f             	goto -252 <__sys_timer_add : 1e10f02 >			  ## timer.c:345:12


__precesion_sort:
 1e10ffe:    74 01             	[--sp] = {rets, r4}			  ## usr_timer.c:92:0
 1e11000:    02 42             	r2 = [r1 + 0]			  ## usr_timer.c:92:0
 1e11002:    12 f2 0b 00       	if (r2 == r1) goto 22 <__precesion_sort+0x1E : 1e1101c >			  ## usr_timer.c:92:0
 1e11006:    63 40             	r3 = [r0 + 24]			  ## usr_timer.c:92:0
 1e11008:    33 fd ff 3c       	r3 = r3 & 16777215			  ## usr_timer.c:92:0
 1e1100c:    64 44             	r4 = [r2 + 24]			  ## usr_timer.c:98:26
 1e1100e:    34 fd ff 4c       	r4 = r4 & 16777215			  ## usr_timer.c:98:26
 1e11012:    43 f2 06 30       	if (r3 < r4) goto 12 <__precesion_sort+0x24 : 1e11022 >			  ## usr_timer.c:98:26
 1e11016:    02 44             	r2 = [r2 + 0]
 1e11018:    12 f2 f8 1f       	if (r2 != r1) goto -16 <__precesion_sort+0xE : 1e1100c >
 1e1101c:    13 42             	r3 = [r1 + 4]			  ## list.h:154:28
 1e1101e:    18 42             	[r1 + 4] = r0			  ## list.h:137:16
 1e11020:    03 18             	goto 6 <__precesion_sort+0x2A : 1e11028 >			  ## list.h:137:16
 1e11022:    13 44             	r3 = [r2 + 4]			  ## list.h:154:28
 1e11024:    18 44             	[r2 + 4] = r0			  ## list.h:137:16
 1e11026:    21 08             	r1 = r2			  ## list.h:137:16
 1e11028:    09 40             	[r0 + 0] = r1			  ## list.h:138:16
 1e1102a:    1b 40             	[r0 + 4] = r3			  ## list.h:139:16
 1e1102c:    08 46             	[r3 + 0] = r0			  ## list.h:140:16
 1e1102e:    54 01             	{pc, r4} = [sp++]			  ## usr_timer.c:106:1


__usr_timer_add:
 1e11030:    79 01             	[--sp] = {rets, r9-r4}			  ## usr_timer.c:172:0
 1e11032:    37 08             	r7 = r3			  ## usr_timer.c:172:0
 1e11034:    28 08             	r8 = r2			  ## usr_timer.c:172:0
 1e11036:    16 08             	r6 = r1			  ## usr_timer.c:172:0
 1e11038:    04 08             	r4 = r0			  ## usr_timer.c:172:0
 1e1103a:    97 f3 af ae       	call 3104094 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e1103e:    09 f5 1c 00       	r9 = [sp+28]
 1e11042:    00 70             	r0 = 0
 1e11044:    c5 ff a4 1e 00 00 	r5 = 7844 <timer_pool : 1ea4 >
 1e1104a:    f1 6b             	r1 = b[r5 + 31] (u)			  ## usr_timer.c:40:27
 1e1104c:    0d 22             	if (r1 == 0) goto 26 <__usr_timer_add+0x38 : 1e11068 >			  ## usr_timer.c:40:13
 1e1104e:    10 80             	r0 += 1			  ## usr_timer.c:39:50
 1e11050:    05 82             	r5 += 32			  ## usr_timer.c:39:23
 1e11052:    a0 e0 fa 3f       	if (r0 < 10) goto -12 <__usr_timer_add+0x1A : 1e1104a >			  ## usr_timer.c:39:23
 1e11056:    97 f3 9f ae       	call 3104062 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e1105a:    00 72             	r0 = 32			  ## usr_timer.c:56:29
 1e1105c:    bf f3 ab f4       	call -5802 <malloc : 1e0f9b6 >			  ## usr_timer.c:56:29
 1e11060:    05 08             	r5 = r0			  ## usr_timer.c:56:29
 1e11062:    06 3a             	if (r5 != 0) goto 12 <__usr_timer_add+0x40 : 1e11070 >
 1e11064:    06 70             	r6 = 0
 1e11066:    53 18             	goto 166 <__usr_timer_add+0xDE : 1e1110e >
 1e11068:    10 70             	r0 = 1			  ## usr_timer.c:41:32
 1e1106a:    f8 6b             	b[r5 + 31] = r0			  ## usr_timer.c:41:32
 1e1106c:    97 f3 94 ae       	call 3104040 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e11070:    3c 4a             	[r5 + 12] = r4			  ## usr_timer.c:62:13
 1e11072:    2e 4a             	[r5 + 8] = r6			  ## usr_timer.c:63:13
 1e11074:    60 4a             	r0 = [r5 + 24]			  ## usr_timer.c:64:13
 1e11076:    06 70             	r6 = 0			  ## usr_timer.c:64:13
 1e11078:    ee 6b             	b[r5 + 30] = r6			  ## usr_timer.c:66:16
 1e1107a:    31 fd ff 8c       	r1 = r8 & 16777215			  ## usr_timer.c:64:13
 1e1107e:    7a c6             	r2 = r7 << 25			  ## usr_timer.c:67:16
 1e11080:    22 fd 02 2c       	r2 = r2 & 33554432			  ## usr_timer.c:67:16
 1e11084:    51 b4             	r1 |= r2			  ## usr_timer.c:64:13
 1e11086:    20 fd fc 0c       	r0 = r0 & 4227858432			  ## usr_timer.c:64:13
 1e1108a:    50 b2             	r0 |= r1			  ## usr_timer.c:67:16
 1e1108c:    68 4a             	[r5 + 24] = r0			  ## usr_timer.c:67:16
 1e1108e:    8f f3 c7 90       	call 2040206 <jiffies_msec : 3220 >			  ## usr_timer.c:68:18
 1e11092:    80 09             	r0 += r8			  ## usr_timer.c:68:33
 1e11094:    58 4a             	[r5 + 20] = r0			  ## usr_timer.c:68:16
 1e11096:    c4 ff b0 20 00 00 	r4 = 8368 <gatt_client_conn_handle : 20b0 >			  ## usr_timer.c:68:16
 1e1109c:    30 59             	r0 = h[r4 + 38] (u)			  ## usr_timer.c:69:13
 1e1109e:    10 80             	r0 += 1			  ## usr_timer.c:69:13
 1e110a0:    38 59             	h[r4 + 38] = r0			  ## usr_timer.c:69:13
 1e110a2:    21 04             	r1 = r0.l (u)			  ## usr_timer.c:70:9
 1e110a4:    e8 5a             	h[r5 + 28] = r0			  ## usr_timer.c:69:11
 1e110a6:    02 22             	if (r1 == 0) goto 4 <__usr_timer_add+0x7C : 1e110ac >			  ## usr_timer.c:69:11
 1e110a8:    04 3a             	if (r5 != 0) goto 8 <__usr_timer_add+0x82 : 1e110b2 >
 1e110aa:    31 18             	goto 98 <__usr_timer_add+0xDE : 1e1110e >
 1e110ac:    10 70             	r0 = 1			  ## usr_timer.c:71:15
 1e110ae:    e8 5a             	h[r5 + 28] = r0			  ## usr_timer.c:71:15
 1e110b0:    38 59             	h[r4 + 38] = r0			  ## usr_timer.c:72:19
 1e110b2:    97 f3 73 ae       	call 3103974 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e110b6:    e0 5a             	r0 = h[r5 + 28] (u)			  ## spinlock.h:77:5
 1e110b8:    01 70             	r1 = 0
 1e110ba:    ca c0             	r2 = r1 << 3			  ## usr_timer.c:19:9
 1e110bc:    03 b5             	r3 = r2 + r4			  ## usr_timer.c:19:9
 1e110be:    02 f6 78 31       	r2 = [r3 + 376]			  ## usr_timer.c:19:9
 1e110c2:    33 fc 78 01       	r3 = r3 + 376			  ## usr_timer.c:19:9
 1e110c6:    32 f2 07 00       	if (r2 == r3) goto 14 <__usr_timer_add+0xA8 : 1e110d8 >			  ## usr_timer.c:19:9
 1e110ca:    e6 54             	r6 = h[r2 + 28] (u)			  ## usr_timer.c:20:29
 1e110cc:    27 04             	r7 = r0.l (u)			  ## usr_timer.c:20:23
 1e110ce:    67 f2 0a 00       	if (r7 == r6) goto 20 <__usr_timer_add+0xB6 : 1e110e6 >
 1e110d2:    02 44             	r2 = [r2 + 0]
 1e110d4:    32 f2 f9 1f       	if (r2 != r3) goto -14 <__usr_timer_add+0x9A : 1e110ca >
 1e110d8:    26 04             	r6 = r0.l (u)			  ## usr_timer.c:25:13
 1e110da:    11 80             	r1 += 1			  ## usr_timer.c:18:46
 1e110dc:    03 2c             	if (r6 == 0) goto 6 <__usr_timer_add+0xB4 : 1e110e4 >
 1e110de:    11 e0 ec df       	ifs (r1 <= 1) goto -40 <__usr_timer_add+0x8A : 1e110ba >
 1e110e2:    04 18             	goto 8 <__usr_timer_add+0xBC : 1e110ec >
 1e110e4:    00 70             	r0 = 0
 1e110e6:    10 80             	r0 += 1
 1e110e8:    e8 5a             	h[r5 + 28] = r0
 1e110ea:    e6 1f             	goto -52 <__usr_timer_add+0x88 : 1e110b8 >
 1e110ec:    f0 fd 18 09       	r0 = r9 << 3			  ## usr_timer.c:182:31
 1e110f0:    40 09             	r0 += r4			  ## usr_timer.c:182:31
 1e110f2:    04 fc 78 01       	r4 = r0 + 376			  ## usr_timer.c:182:31
 1e110f6:    c8 16             	call -624 <__get_min_precesion : 1e10e88 >			  ## usr_timer.c:188:20
 1e110f8:    07 08             	r7 = r0			  ## usr_timer.c:188:20
 1e110fa:    50 08             	r0 = r5			  ## usr_timer.c:190:5
 1e110fc:    41 08             	r1 = r4			  ## usr_timer.c:190:5
 1e110fe:    7f 17             	call -258 <__precesion_sort : 1e10ffe >			  ## usr_timer.c:190:5
 1e11100:    87 f2 03 90       	if (r7 <= r8) goto 6 <__usr_timer_add+0xDA : 1e1110a >			  ## usr_timer.c:190:5
 1e11104:    80 08             	r0 = r8			  ## usr_timer.c:194:9
 1e11106:    bf f3 a1 86       	call -62142 <timer1_run : 1e01e4c >			  ## usr_timer.c:194:9
 1e1110a:    97 f3 45 ae       	call 3103882 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e1110e:    60 08             	r0 = r6			  ## usr_timer.c:202:1
 1e11110:    59 01             	{pc, r9-r4} = [sp++]			  ## usr_timer.c:202:1


usr_timer_add:
 1e11112:    74 01             	[--sp] = {rets, r4}			  ## usr_timer.c:221:0
 1e11114:    fe 0b             	sp += -4			  ## usr_timer.c:221:0
 1e11116:    28 fb 00 33       	r3 = rets			  ## usr_timer.c:223:5
 1e1111a:    04 70             	r4 = 0			  ## usr_timer.c:225:12
 1e1111c:    03 70             	r3 = 0			  ## usr_timer.c:225:12
 1e1111e:    0c 02             	[sp] = r4			  ## usr_timer.c:225:12
 1e11120:    87 17             	call -242 <__usr_timer_add : 1e11030 >			  ## usr_timer.c:225:12
 1e11122:    20 04             	r0 = r0.l (u)			  ## usr_timer.c:225:5
 1e11124:    02 0a             	sp += 4			  ## usr_timer.c:225:5
 1e11126:    54 01             	{pc, r4} = [sp++]			  ## usr_timer.c:225:5


sys_timeout_add:
 1e11128:    32 e0 01 80       	if (r2 > 3) goto 2 <sys_timeout_add+0x6 : 1e1112e >			  ## timer.c:366:0
 1e1112c:    32 70             	r2 = 3			  ## timer.c:371:6
 1e1112e:    28 fb 00 33       	r3 = rets			  ## timer.c:368:5
 1e11132:    13 70             	r3 = 1			  ## timer.c:374:12
 1e11134:    e6 1e             	goto -564 <__sys_timer_add : 1e10f02 >			  ## timer.c:374:12


usr_timer_del:
 1e11136:    75 01             	[--sp] = {rets, r5, r4}			  ## usr_timer.c:237:0
 1e11138:    04 08             	r4 = r0			  ## usr_timer.c:237:0
 1e1113a:    97 f3 2f ae       	call 3103838 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e1113e:    00 70             	r0 = 0
 1e11140:    c1 ff b0 20 00 00 	r1 = 8368 <gatt_client_conn_handle : 20b0 >
 1e11146:    c2 c0             	r2 = r0 << 3			  ## usr_timer.c:244:35
 1e11148:    43 b4             	r3 = r2 + r1			  ## usr_timer.c:244:35
 1e1114a:    02 f6 78 31       	r2 = [r3 + 376]			  ## usr_timer.c:244:35
 1e1114e:    33 fc 78 01       	r3 = r3 + 376			  ## usr_timer.c:244:35
 1e11152:    32 f2 09 00       	if (r2 == r3) goto 18 <usr_timer_del+0x32 : 1e11168 >
 1e11156:    e5 54             	r5 = h[r2 + 28] (u)			  ## usr_timer.c:247:20
 1e11158:    45 f2 04 00       	if (r5 == r4) goto 8 <usr_timer_del+0x2E : 1e11164 >			  ## usr_timer.c:247:20
 1e1115c:    02 44             	r2 = [r2 + 0]
 1e1115e:    32 f2 fa 1f       	if (r2 != r3) goto -12 <usr_timer_del+0x20 : 1e11156 >
 1e11162:    02 18             	goto 4 <usr_timer_del+0x32 : 1e11168 >
 1e11164:    06 f4 01 2c       	[r2 + 24] |= 16777216			  ## usr_timer.c:249:24
 1e11168:    10 80             	r0 += 1			  ## usr_timer.c:242:46
 1e1116a:    20 e0 ec 1f       	if (r0 != 2) goto -40 <usr_timer_del+0x10 : 1e11146 >
 1e1116e:    15 01             	{rets, r5, r4} = [sp++]			  ## spinlock.h:88:5
 1e11170:    d7 f3 12 ae       	goto 3103780 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5


sys_timer_modify:
 1e11174:    77 01             	[--sp] = {rets, r7-r4}			  ## timer.c:384:0
 1e11176:    14 08             	r4 = r1			  ## timer.c:384:0
 1e11178:    06 08             	r6 = r0			  ## timer.c:384:0
 1e1117a:    97 f3 0f ae       	call 3103774 <local_irq_disable : 106d9c >			  ## timer.c:387:5
 1e1117e:    84 16             	call -760 <__get_min_precesion : 1e10e88 >			  ## timer.c:389:20
 1e11180:    c1 ff 8c 08 00 00 	r1 = 2188 <timer_head : 88c >			  ## timer.c:389:20
 1e11186:    07 42             	r7 = [r1 + 0]			  ## timer.c:389:20
 1e11188:    05 08             	r5 = r0			  ## timer.c:389:20
 1e1118a:    17 f2 10 00       	if (r7 == r1) goto 32 <sys_timer_modify+0x3A : 1e111ae >
 1e1118e:    e0 5e             	r0 = h[r7 + 28] (u)			  ## timer.c:392:16
 1e11190:    60 f2 04 00       	if (r0 == r6) goto 8 <sys_timer_modify+0x28 : 1e1119c >			  ## timer.c:392:16
 1e11194:    07 4e             	r7 = [r7 + 0]
 1e11196:    17 f2 fa 1f       	if (r7 != r1) goto -12 <sys_timer_modify+0x1A : 1e1118e >
 1e1119a:    09 18             	goto 18 <sys_timer_modify+0x3A : 1e111ae >
 1e1119c:    b0 6f             	r0 = b[r7 + 27] (u)			  ## timer.c:393:21
 1e1119e:    41 08             	r1 = r4			  ## timer.c:393:21
 1e111a0:    c8 fd c0 10       	r1 <= insert(r0, p:24, l:8)			  ## timer.c:393:21
 1e111a4:    69 4e             	[r7 + 24] = r1			  ## timer.c:393:21
 1e111a6:    8f f3 3b 90       	call 2039926 <jiffies_msec : 3220 >			  ## timer.c:394:26
 1e111aa:    40 09             	r0 += r4			  ## timer.c:394:41
 1e111ac:    58 4e             	[r7 + 20] = r0			  ## timer.c:394:24
 1e111ae:    45 f2 03 90       	if (r5 <= r4) goto 6 <sys_timer_modify+0x44 : 1e111b8 >
 1e111b2:    40 08             	r0 = r4			  ## timer.c:400:9
 1e111b4:    bf f3 4a 86       	call -62316 <timer1_run : 1e01e4c >			  ## timer.c:400:9
 1e111b8:    97 f3 ee ad       	call 3103708 <local_irq_enable : 106d98 >			  ## timer.c:403:5
 1e111bc:    c0 ff 48 24 00 00 	r0 = 9288 <sys_timer_sem : 2448 >			  ## timer.c:405:5
 1e111c2:    17 01             	{rets, r7-r4} = [sp++]			  ## timer.c:405:5
 1e111c4:    d7 f3 22 ae       	goto 3103812 <os_sem_post : 106e0c >			  ## timer.c:405:5


__usr_timer_del:
 1e111c8:    74 01             	[--sp] = {rets, r4}			  ## usr_timer.c:79:0
 1e111ca:    04 08             	r4 = r0			  ## usr_timer.c:79:0
 1e111cc:    97 f3 e6 ad       	call 3103692 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e111d0:    01 48             	r1 = [r4 + 0]			  ## list.h:165:36
 1e111d2:    12 48             	r2 = [r4 + 4]			  ## list.h:165:23
 1e111d4:    1a 42             	[r1 + 4] = r2			  ## list.h:159:16
 1e111d6:    c0 ff a4 1e 00 00 	r0 = 7844 <timer_pool : 1ea4 >			  ## list.h:159:16
 1e111dc:    09 44             	[r2 + 0] = r1			  ## list.h:160:16
 1e111de:    04 f2 09 30       	if (r4 < r0) goto 18 <__usr_timer_del+0x2C : 1e111f4 >
 1e111e2:    00 fc 40 01       	r0 = r0 + 320
 1e111e6:    04 f2 05 20       	if (r4 >= r0) goto 10 <__usr_timer_del+0x2C : 1e111f4 >
 1e111ea:    00 70             	r0 = 0			  ## timer.c:99:21
 1e111ec:    f8 69             	b[r4 + 31] = r0			  ## timer.c:99:21
 1e111ee:    14 01             	{rets, r4} = [sp++]			  ## spinlock.h:88:5
 1e111f0:    d7 f3 d2 ad       	goto 3103652 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e111f4:    97 f3 d0 ad       	call 3103648 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e111f8:    40 08             	r0 = r4			  ## usr_timer.c:85:9
 1e111fa:    14 01             	{rets, r4} = [sp++]			  ## usr_timer.c:85:9
 1e111fc:    ff f3 06 f4       	goto -6132 <free : 1e0fa0c >			  ## usr_timer.c:85:9


usr_timer_schedule:
 1e11200:    7b 01             	[--sp] = {rets, r11-r4}			  ## usr_timer.c:363:0
 1e11202:    97 f3 cb ad       	call 3103638 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e11206:    05 70             	r5 = 0
 1e11208:    c8 ff b0 20 00 00 	r8 = 8368 <gatt_client_conn_handle : 20b0 >
 1e1120e:    cb ff 01 00 00 40 	r11 = 1073741825 <umoddi3.bc+0x1 : 1 >
 1e11214:    c9 ff 0a 00 00 b0 	r9 = 2952790026 <report_overlay_size+0x6 : a >
 1e1121a:    ca ff f6 ff ff 4f 	r10 = 1342177270 <bank_code_load_addr+0x1DC9FE : 1fffff6 >
 1e11220:    e8 c0             	r0 = r5 << 3			  ## usr_timer.c:371:35
 1e11222:    80 09             	r0 += r8			  ## usr_timer.c:371:35
 1e11224:    07 f6 78 01       	r7 = [r0 + 376]			  ## usr_timer.c:373:9
 1e11228:    06 fc 78 01       	r6 = r0 + 376			  ## usr_timer.c:371:35
 1e1122c:    67 f2 37 00       	if (r7 == r6) goto 110 <usr_timer_schedule+0x9E : 1e1129e >
 1e11230:    74 08             	r4 = r7
 1e11232:    b0 69             	r0 = b[r4 + 27] (u)			  ## usr_timer.c:374:17
 1e11234:    07 48             	r7 = [r4 + 0]			  ## usr_timer.c:374:17
 1e11236:    20 f3 2a 00       	if ((r0 & 1) != 0) goto 84 <usr_timer_schedule+0x8E : 1e1128e >
 1e1123a:    8f f3 c1 8f       	call 2039682 <report_data_code_begin : 31c0 >			  ## usr_timer.c:379:29
 1e1123e:    51 48             	r1 = [r4 + 20]			  ## usr_timer.c:380:32
 1e11240:    10 80             	r0 += 1			  ## usr_timer.c:379:49
 1e11242:    40 d0             	r0 = r0 >> 1			  ## usr_timer.c:379:54
 1e11244:    01 f2 09 90       	if (r1 <= r0) goto 18 <usr_timer_schedule+0x5A : 1e1125a >
 1e11248:    22 b2             	r2 = r1 - r0			  ## usr_timer.c:380:56
 1e1124a:    b2 f2 06 30       	if (r2 < r11) goto 12 <usr_timer_schedule+0x5A : 1e1125a >			  ## usr_timer.c:380:56
 1e1124e:    80 fb 90 21       	r2 = r1 + r9			  ## usr_timer.c:382:36
 1e11252:    a1 f2 01 80       	if (r1 > r10) goto 2 <usr_timer_schedule+0x58 : 1e11258 >			  ## usr_timer.c:382:36
 1e11256:    02 08             	r2 = r0			  ## usr_timer.c:381:25
 1e11258:    5a 48             	[r4 + 20] = r2
 1e1125a:    8f f3 b1 8f       	call 2039650 <report_data_code_begin : 31c0 >			  ## usr_timer.c:387:22
 1e1125e:    51 48             	r1 = [r4 + 20]			  ## usr_timer.c:387:22
 1e11260:    10 80             	r0 += 1			  ## usr_timer.c:387:22
 1e11262:    40 d0             	r0 = r0 >> 1			  ## usr_timer.c:387:22
 1e11264:    10 f2 19 b0       	ifs (r0 < r1) goto 50 <usr_timer_schedule+0x9A : 1e1129a >			  ## usr_timer.c:387:22
 1e11268:    97 f3 96 ad       	call 3103532 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e1126c:    21 48             	r1 = [r4 + 8]			  ## usr_timer.c:392:28
 1e1126e:    02 22             	if (r1 == 0) goto 4 <usr_timer_schedule+0x74 : 1e11274 >			  ## usr_timer.c:392:28
 1e11270:    30 48             	r0 = [r4 + 12]			  ## usr_timer.c:393:36
 1e11272:    81 00             	call r1			  ## usr_timer.c:393:25
 1e11274:    97 f3 92 ad       	call 3103524 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e11278:    b0 69             	r0 = b[r4 + 27] (u)			  ## usr_timer.c:396:25
 1e1127a:    21 f3 08 00       	if ((r0 & 2) != 0) goto 16 <usr_timer_schedule+0x8E : 1e1128e >			  ## usr_timer.c:396:25
 1e1127e:    8f f3 cf 8f       	call 2039710 <jiffies_msec : 3220 >			  ## usr_timer.c:401:38
 1e11282:    61 48             	r1 = [r4 + 24]			  ## usr_timer.c:401:59
 1e11284:    31 fd ff 1c       	r1 = r1 & 16777215			  ## usr_timer.c:401:59
 1e11288:    10 09             	r0 += r1			  ## usr_timer.c:401:53
 1e1128a:    58 48             	[r4 + 20] = r0			  ## usr_timer.c:401:36
 1e1128c:    06 18             	goto 12 <usr_timer_schedule+0x9A : 1e1129a >			  ## usr_timer.c:401:36
 1e1128e:    97 f3 83 ad       	call 3103494 <local_irq_enable : 106d98 >
 1e11292:    40 08             	r0 = r4
 1e11294:    99 17             	call -206 <__usr_timer_del : 1e111c8 >
 1e11296:    97 f3 81 ad       	call 3103490 <local_irq_disable : 106d9c >
 1e1129a:    67 f2 c9 1f       	if (r7 != r6) goto -110 <usr_timer_schedule+0x30 : 1e11230 >
 1e1129e:    15 80             	r5 += 1			  ## usr_timer.c:369:46
 1e112a0:    25 e0 be 1f       	if (r5 != 2) goto -132 <usr_timer_schedule+0x20 : 1e11220 >
 1e112a4:    f1 15             	call -1054 <__get_min_precesion : 1e10e88 >			  ## usr_timer.c:408:16
 1e112a6:    bf f3 d1 85       	call -62558 <timer1_run : 1e01e4c >			  ## usr_timer.c:408:5
 1e112aa:    97 f3 75 ad       	call 3103466 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e112ae:    c0 ff 48 24 00 00 	r0 = 9288 <sys_timer_sem : 2448 >			  ## usr_timer.c:412:5
 1e112b4:    1b 01             	{rets, r11-r4} = [sp++]			  ## usr_timer.c:412:5
 1e112b6:    d7 f3 a9 ad       	goto 3103570 <os_sem_post : 106e0c >			  ## usr_timer.c:412:5


usr_timer_modify:
 1e112ba:    7b 01             	[--sp] = {rets, r11-r4}			  ## usr_timer.c:303:0
 1e112bc:    1a 08             	r10 = r1			  ## usr_timer.c:303:0
 1e112be:    05 08             	r5 = r0			  ## usr_timer.c:303:0
 1e112c0:    97 f3 6c ad       	call 3103448 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e112c4:    39 fd ff ac       	r9 = r10 & 16777215
 1e112c8:    04 70             	r4 = 0
 1e112ca:    de 15             	call -1092 <__get_min_precesion : 1e10e88 >			  ## usr_timer.c:308:20
 1e112cc:    08 08             	r8 = r0			  ## usr_timer.c:308:20
 1e112ce:    cb ff b0 20 00 00 	r11 = 8368 <gatt_client_conn_handle : 20b0 >
 1e112d4:    e0 c0             	r0 = r4 << 3			  ## usr_timer.c:312:35
 1e112d6:    b0 09             	r0 += r11			  ## usr_timer.c:312:35
 1e112d8:    06 f6 78 01       	r6 = [r0 + 376]			  ## usr_timer.c:312:35
 1e112dc:    07 fc 78 01       	r7 = r0 + 376			  ## usr_timer.c:312:35
 1e112e0:    76 f2 18 00       	if (r6 == r7) goto 48 <usr_timer_modify+0x5A : 1e11314 >
 1e112e4:    e0 5c             	r0 = h[r6 + 28] (u)			  ## usr_timer.c:315:20
 1e112e6:    50 f2 04 00       	if (r0 == r5) goto 8 <usr_timer_modify+0x38 : 1e112f2 >			  ## usr_timer.c:315:20
 1e112ea:    06 4c             	r6 = [r6 + 0]
 1e112ec:    76 f2 fa 1f       	if (r6 != r7) goto -12 <usr_timer_modify+0x2A : 1e112e4 >
 1e112f0:    11 18             	goto 34 <usr_timer_modify+0x5A : 1e11314 >
 1e112f2:    60 4c             	r0 = [r6 + 24]			  ## usr_timer.c:316:25
 1e112f4:    20 fd ff 0c       	r0 = r0 & 4278190080			  ## usr_timer.c:316:25
 1e112f8:    e0 fd 90 00       	r0 = r0 | r9			  ## usr_timer.c:316:25
 1e112fc:    68 4c             	[r6 + 24] = r0			  ## usr_timer.c:316:25
 1e112fe:    8f f3 8f 8f       	call 2039582 <jiffies_msec : 3220 >			  ## usr_timer.c:317:30
 1e11302:    a0 09             	r0 += r10			  ## usr_timer.c:317:45
 1e11304:    58 4c             	[r6 + 20] = r0			  ## usr_timer.c:317:28
 1e11306:    00 4c             	r0 = [r6 + 0]			  ## list.h:165:36
 1e11308:    11 4c             	r1 = [r6 + 4]			  ## list.h:165:23
 1e1130a:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e1130c:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e1130e:    60 08             	r0 = r6			  ## usr_timer.c:319:17
 1e11310:    71 08             	r1 = r7			  ## usr_timer.c:319:17
 1e11312:    75 16             	call -790 <__precesion_sort : 1e10ffe >			  ## usr_timer.c:319:17
 1e11314:    14 80             	r4 += 1			  ## usr_timer.c:310:46
 1e11316:    24 e0 dd 1f       	if (r4 != 2) goto -70 <usr_timer_modify+0x1A : 1e112d4 >
 1e1131a:    a8 f2 03 90       	if (r8 <= r10) goto 6 <usr_timer_modify+0x6A : 1e11324 >
 1e1131e:    a0 08             	r0 = r10			  ## usr_timer.c:326:9
 1e11320:    bf f3 94 85       	call -62680 <timer1_run : 1e01e4c >			  ## usr_timer.c:326:9
 1e11324:    1b 01             	{rets, r11-r4} = [sp++]			  ## spinlock.h:88:5
 1e11326:    d7 f3 37 ad       	goto 3103342 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5


sys_timer_init:
 1e1132a:    34 00             	[--sp] = rets			  ## timer.c:706:0
 1e1132c:    c0 ff 48 24 00 00 	r0 = 9288 <sys_timer_sem : 2448 >			  ## timer.c:709:5
 1e11332:    01 70             	r1 = 0			  ## timer.c:709:5
 1e11334:    97 f3 64 ad       	call 3103432 <os_sem_create : 106e00 >			  ## timer.c:709:5
 1e11338:    c0 ff 9c 13 e1 01 	r0 = 31527836 <sys_timer_task : 1e1139c >			  ## timer.c:711:5
 1e1133e:    c2 ff cf 55 e1 01 	r2 = 31544783 <update_target_end+0x2747 : 1e155cf >			  ## timer.c:711:5
 1e11344:    01 70             	r1 = 0			  ## timer.c:711:5
 1e11346:    bf f3 52 fd       	call -1372 <task_create : 1e10dee >			  ## timer.c:711:5
 1e1134a:    c0 ff 28 22 00 00 	r0 = 8744 <usr_timer_head : 2228 >			  ## timer.c:711:5
 1e11350:    08 40             	[r0 + 0] = r0			  ## list.h:188:16
 1e11352:    18 40             	[r0 + 4] = r0			  ## list.h:189:16
 1e11354:    81 90             	r1 = r0 + 8			  ## list.h:188:16
 1e11356:    29 40             	[r0 + 8] = r1			  ## list.h:188:16
 1e11358:    39 40             	[r0 + 12] = r1			  ## list.h:189:16
 1e1135a:    88 01             	{rets} = [sp++]			  ## usr_timer.c:432:5
 1e1135c:    ff f3 94 9b       	goto -51416 <timer1_init : 1e04a88 >			  ## usr_timer.c:432:5


usr_systimer_callback:
 1e11360:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## usr_timer.c:346:0
 1e11366:    01 f6 80 01       	r1 = [r0 + 384]			  ## list.h:124:18
 1e1136a:    02 fc 80 01       	r2 = r0 + 384			  ## list.h:124:18
 1e1136e:    10 70             	r0 = 1			  ## list.h:124:23
 1e11370:    21 f2 01 00       	if (r1 == r2) goto 2 <usr_systimer_callback+0x16 : 1e11376 >			  ## list.h:124:23
 1e11374:    00 70             	r0 = 0			  ## list.h:124:23
 1e11376:    20 00             	rts			  ## usr_timer.c:359:5


__timer_del:
 1e11378:    02 40             	r2 = [r0 + 0]			  ## timer.c:111:0
 1e1137a:    13 40             	r3 = [r0 + 4]			  ## list.h:165:23
 1e1137c:    1b 44             	[r2 + 4] = r3			  ## list.h:159:16
 1e1137e:    c1 ff a4 1e 00 00 	r1 = 7844 <timer_pool : 1ea4 >			  ## list.h:159:16
 1e11384:    0a 46             	[r3 + 0] = r2			  ## list.h:160:16
 1e11386:    10 f2 07 30       	if (r0 < r1) goto 14 <__timer_del+0x20 : 1e11398 >
 1e1138a:    11 fc 40 01       	r1 = r1 + 320
 1e1138e:    10 f2 03 20       	if (r0 >= r1) goto 6 <__timer_del+0x20 : 1e11398 >
 1e11392:    01 70             	r1 = 0			  ## timer.c:99:21
 1e11394:    f9 61             	b[r0 + 31] = r1			  ## timer.c:99:21
 1e11396:    20 00             	rts			  ## timer.c:123:1
 1e11398:    ff f3 38 f3       	goto -6544 <free : 1e0fa0c >			  ## timer.c:120:9


sys_timer_task:
 1e1139c:    f8 0b             	sp += -16			  ## timer.c:669:0
 1e1139e:    c7 ff 8c 08 00 00 	r7 = 2188 <timer_head : 88c >			  ## timer.c:669:0
 1e113a4:    c8 ff 48 24 00 00 	r8 = 9288 <sys_timer_sem : 2448 >			  ## timer.c:669:0
 1e113aa:    0e 70             	r14 = 0			  ## timer.c:669:0
 1e113ac:    a9 70             	r9 = 10			  ## timer.c:669:0
 1e113ae:    cd ff 01 00 00 40 	r13 = 1073741825 <umoddi3.bc+0x1 : 1 >			  ## timer.c:669:0
 1e113b4:    4b fb b0 9c       	r11 = r9 + 2952790016			  ## timer.c:669:0
 1e113b8:    cc ff f6 ff ff 4f 	r12 = 1342177270 <bank_code_load_addr+0x1DC9FE : 1fffff6 >			  ## timer.c:669:0
 1e113be:    1f 70             	r15 = 1			  ## timer.c:669:0
 1e113c0:    ca ff 03 58 e1 01 	r10 = 31545347 <update_target_end+0x297B : 1e15803 >			  ## timer.c:669:0
 1e113c6:    c4 ff a4 1e 00 00 	r4 = 7844 <timer_pool : 1ea4 >			  ## timer.c:669:0
 1e113cc:    97 f3 e6 ac       	call 3103180 <local_irq_disable : 106d9c >			  ## timer.c:145:5
 1e113d0:    06 4e             	r6 = [r7 + 0]			  ## timer.c:147:5
 1e113d2:    76 f2 60 00       	if (r6 == r7) goto 192 <sys_timer_task+0xFA : 1e11496 >
 1e113d6:    65 08             	r5 = r6
 1e113d8:    b0 6b             	r0 = b[r5 + 27] (u)			  ## timer.c:148:13
 1e113da:    06 4a             	r6 = [r5 + 0]			  ## timer.c:148:13
 1e113dc:    20 f3 2b 00       	if ((r0 & 1) != 0) goto 86 <sys_timer_task+0x9A : 1e11436 >
 1e113e0:    8f f3 ee 8e       	call 2039260 <report_data_code_begin : 31c0 >			  ## timer.c:158:21
 1e113e4:    51 4a             	r1 = [r5 + 20]			  ## timer.c:159:24
 1e113e6:    10 80             	r0 += 1			  ## timer.c:158:41
 1e113e8:    40 d0             	r0 = r0 >> 1			  ## timer.c:158:46
 1e113ea:    22 b2             	r2 = r1 - r0			  ## timer.c:159:48
 1e113ec:    01 f2 09 90       	if (r1 <= r0) goto 18 <sys_timer_task+0x66 : 1e11402 >			  ## timer.c:159:48
 1e113f0:    d2 f2 07 30       	if (r2 < r13) goto 14 <sys_timer_task+0x66 : 1e11402 >
 1e113f4:    80 fb b0 21       	r2 = r1 + r11			  ## timer.c:161:28
 1e113f8:    c1 f2 01 80       	if (r1 > r12) goto 2 <sys_timer_task+0x62 : 1e113fe >			  ## timer.c:161:28
 1e113fc:    02 08             	r2 = r0			  ## timer.c:160:17
 1e113fe:    5a 4a             	[r5 + 20] = r2
 1e11400:    21 08             	r1 = r2			  ## timer.c:173:9
 1e11402:    10 f2 45 b0       	ifs (r0 < r1) goto 138 <sys_timer_task+0xF4 : 1e11490 >
 1e11406:    1f f9 1e 50       	b[r5 + 30] = r15			  ## timer.c:170:20
 1e1140a:    20 4a             	r0 = [r5 + 8]			  ## timer.c:174:26
 1e1140c:    08 02             	[sp] = r0			  ## timer.c:174:16
 1e1140e:    1f f5 04 00       	[sp+4] = r15			  ## timer.c:175:16
 1e11412:    30 4a             	r0 = [r5 + 12]			  ## timer.c:176:26
 1e11414:    28 02             	[sp+8] = r0			  ## timer.c:176:16
 1e11416:    40 4a             	r0 = [r5 + 16]			  ## timer.c:177:45
 1e11418:    e1 5a             	r1 = h[r5 + 28] (u)			  ## timer.c:177:65
 1e1141a:    01 fd 30 1b       	r1 = r1 | 3145728			  ## timer.c:177:63
 1e1141e:    03 a0             	r3 = sp + 0			  ## timer.c:177:63
 1e11420:    32 70             	r2 = 3			  ## timer.c:177:15
 1e11422:    97 f3 dd ac       	call 3103162 <os_taskq_post_type : 106de0 >			  ## timer.c:177:15
 1e11426:    1e f9 1e 50       	b[r5 + 30] = r14			  ## timer.c:179:20
 1e1142a:    d0 e0 14 c0       	ifs (r0 > 13) goto 40 <sys_timer_task+0xBA : 1e11456 >			  ## timer.c:182:13
 1e1142e:    23 20             	if (r0 == 0) goto 70 <sys_timer_task+0xDA : 1e11476 >
 1e11430:    40 e0 16 00       	if (r0 == 4) goto 44 <sys_timer_task+0xC4 : 1e11460 >
 1e11434:    2b 18             	goto 86 <sys_timer_task+0xF0 : 1e1148c >
 1e11436:    10 4a             	r0 = [r5 + 4]			  ## list.h:165:23
 1e11438:    18 4c             	[r6 + 4] = r0			  ## list.h:159:16
 1e1143a:    0e 40             	[r0 + 0] = r6			  ## list.h:160:16
 1e1143c:    45 f2 07 30       	if (r5 < r4) goto 14 <sys_timer_task+0xB2 : 1e1144e >			  ## list.h:160:16
 1e11440:    40 fc 40 01       	r0 = r4 + 320
 1e11444:    05 f2 03 20       	if (r5 >= r0) goto 6 <sys_timer_task+0xB2 : 1e1144e >
 1e11448:    1e f9 1f 50       	b[r5 + 31] = r14			  ## timer.c:99:21
 1e1144c:    21 18             	goto 66 <sys_timer_task+0xF4 : 1e11490 >
 1e1144e:    50 08             	r0 = r5			  ## timer.c:152:17
 1e11450:    bf f3 dc f2       	call -6728 <free : 1e0fa0c >			  ## timer.c:152:17
 1e11454:    1d 18             	goto 58 <sys_timer_task+0xF4 : 1e11490 >			  ## timer.c:152:17
 1e11456:    e0 e0 03 00       	if (r0 == 14) goto 6 <sys_timer_task+0xC4 : 1e11460 >
 1e1145a:    50 e1 19 00       	if (r0 == 21) goto 50 <sys_timer_task+0xF4 : 1e11490 >
 1e1145e:    16 18             	goto 44 <sys_timer_task+0xF0 : 1e1148c >
 1e11460:    1a f6 10 50       	[r5 + 16] = r10			  ## timer.c:192:22
 1e11464:    e0 5a             	r0 = h[r5 + 28] (u)			  ## timer.c:193:63
 1e11466:    01 fd 30 0b       	r1 = r0 | 3145728			  ## timer.c:193:61
 1e1146a:    03 a0             	r3 = sp + 0			  ## timer.c:193:61
 1e1146c:    32 70             	r2 = 3			  ## timer.c:193:13
 1e1146e:    a0 08             	r0 = r10			  ## timer.c:193:13
 1e11470:    97 f3 b6 ac       	call 3103084 <os_taskq_post_type : 106de0 >			  ## timer.c:193:13
 1e11474:    0d 18             	goto 26 <sys_timer_task+0xF4 : 1e11490 >			  ## timer.c:193:13
 1e11476:    b0 6b             	r0 = b[r5 + 27] (u)			  ## timer.c:183:17
 1e11478:    21 f3 08 00       	if ((r0 & 2) != 0) goto 16 <sys_timer_task+0xF0 : 1e1148c >			  ## timer.c:183:17
 1e1147c:    8f f3 d0 8e       	call 2039200 <jiffies_msec : 3220 >			  ## timer.c:187:30
 1e11480:    61 4a             	r1 = [r5 + 24]			  ## timer.c:187:50
 1e11482:    31 fd ff 1c       	r1 = r1 & 16777215			  ## timer.c:187:50
 1e11486:    10 09             	r0 += r1			  ## timer.c:187:45
 1e11488:    58 4a             	[r5 + 20] = r0			  ## timer.c:187:28
 1e1148a:    02 18             	goto 4 <sys_timer_task+0xF4 : 1e11490 >			  ## timer.c:187:28
 1e1148c:    50 08             	r0 = r5
 1e1148e:    74 17             	call -280 <__timer_del : 1e11378 >
 1e11490:    76 f2 a1 1f       	if (r6 != r7) goto -190 <sys_timer_task+0x3A : 1e113d6 >
 1e11494:    06 4e             	r6 = [r7 + 0]
 1e11496:    76 f2 0a 00       	if (r6 == r7) goto 20 <sys_timer_task+0x112 : 1e114ae >
 1e1149a:    f0 07             	r0 = -1
 1e1149c:    55 4c             	r5 = [r6 + 20]			  ## timer.c:203:33
 1e1149e:    50 f2 01 80       	if (r0 > r5) goto 2 <sys_timer_task+0x108 : 1e114a4 >			  ## timer.c:203:33
 1e114a2:    05 08             	r5 = r0			  ## timer.c:203:19
 1e114a4:    06 4c             	r6 = [r6 + 0]
 1e114a6:    50 08             	r0 = r5
 1e114a8:    76 f2 f8 1f       	if (r6 != r7) goto -16 <sys_timer_task+0x100 : 1e1149c >
 1e114ac:    01 18             	goto 2 <sys_timer_task+0x114 : 1e114b0 >
 1e114ae:    f5 07             	r5 = -1
 1e114b0:    eb 14             	call -1578 <__get_min_precesion : 1e10e88 >			  ## timer.c:206:16
 1e114b2:    bf f3 cb 84       	call -63082 <timer1_run : 1e01e4c >			  ## timer.c:206:5
 1e114b6:    97 f3 6f ac       	call 3102942 <local_irq_enable : 106d98 >			  ## timer.c:208:5
 1e114ba:    f5 ef 08 00       	if (r5 == -1) goto 16 <sys_timer_task+0x132 : 1e114ce >			  ## timer.c:681:13
 1e114be:    8f f3 af 8e       	call 2039134 <jiffies_msec : 3220 >			  ## timer.c:682:32
 1e114c2:    20 ba             	r0 = r5 - r0			  ## timer.c:682:30
 1e114c4:    a0 e0 05 30       	if (r0 < 10) goto 10 <sys_timer_task+0x136 : 1e114d2 >			  ## timer.c:684:17
 1e114c8:    c0 fe 90 10       	r1 = r0 / r9 (u)			  ## timer.c:682:48
 1e114cc:    03 18             	goto 6 <sys_timer_task+0x138 : 1e114d4 >			  ## timer.c:682:48
 1e114ce:    01 70             	r1 = 0			  ## timer.c:692:13
 1e114d0:    01 18             	goto 2 <sys_timer_task+0x138 : 1e114d4 >			  ## timer.c:692:13
 1e114d2:    21 70             	r1 = 2			  ## timer.c:688:17
 1e114d4:    80 08             	r0 = r8
 1e114d6:    97 f3 97 ac       	call 3103022 <os_sem_pend : 106e08 >
 1e114da:    78 1f             	goto -272 <sys_timer_task+0x30 : 1e113cc >


sys_timer_set_user_data:
 1e114dc:    75 01             	[--sp] = {rets, r5, r4}			  ## timer.c:443:0
 1e114de:    14 08             	r4 = r1			  ## timer.c:443:0
 1e114e0:    05 08             	r5 = r0			  ## timer.c:443:0
 1e114e2:    97 f3 5b ac       	call 3102902 <local_irq_disable : 106d9c >			  ## timer.c:446:5
 1e114e6:    c0 ff 8c 08 00 00 	r0 = 2188 <timer_head : 88c >			  ## timer.c:446:5
 1e114ec:    01 40             	r1 = [r0 + 0]			  ## timer.c:446:5
 1e114ee:    01 f2 07 00       	if (r1 == r0) goto 14 <sys_timer_set_user_data+0x24 : 1e11500 >
 1e114f2:    e2 52             	r2 = h[r1 + 28] (u)			  ## timer.c:449:16
 1e114f4:    52 f2 01 10       	if (r2 != r5) goto 2 <sys_timer_set_user_data+0x1E : 1e114fa >			  ## timer.c:449:16
 1e114f8:    3c 42             	[r1 + 12] = r4			  ## timer.c:450:21
 1e114fa:    01 42             	r1 = [r1 + 0]
 1e114fc:    01 f2 f9 1f       	if (r1 != r0) goto -14 <sys_timer_set_user_data+0x16 : 1e114f2 >
 1e11500:    15 01             	{rets, r5, r4} = [sp++]			  ## timer.c:454:5
 1e11502:    d7 f3 49 ac       	goto 3102866 <local_irq_enable : 106d98 >			  ## timer.c:454:5


sys_timer_re_run:
 1e11506:    75 01             	[--sp] = {rets, r5, r4}			  ## timer.c:419:0
 1e11508:    04 08             	r4 = r0			  ## timer.c:419:0
 1e1150a:    97 f3 47 ac       	call 3102862 <local_irq_disable : 106d9c >			  ## timer.c:422:5
 1e1150e:    c0 ff 8c 08 00 00 	r0 = 2188 <timer_head : 88c >			  ## timer.c:422:5
 1e11514:    05 40             	r5 = [r0 + 0]			  ## timer.c:422:5
 1e11516:    05 f2 0e 00       	if (r5 == r0) goto 28 <sys_timer_re_run+0x30 : 1e11536 >
 1e1151a:    e1 5a             	r1 = h[r5 + 28] (u)			  ## timer.c:425:16
 1e1151c:    41 f2 04 00       	if (r1 == r4) goto 8 <sys_timer_re_run+0x22 : 1e11528 >			  ## timer.c:425:16
 1e11520:    05 4a             	r5 = [r5 + 0]
 1e11522:    05 f2 fa 1f       	if (r5 != r0) goto -12 <sys_timer_re_run+0x14 : 1e1151a >
 1e11526:    07 18             	goto 14 <sys_timer_re_run+0x30 : 1e11536 >
 1e11528:    8f f3 7a 8e       	call 2039028 <jiffies_msec : 3220 >			  ## timer.c:426:26
 1e1152c:    61 4a             	r1 = [r5 + 24]			  ## timer.c:426:46
 1e1152e:    31 fd ff 1c       	r1 = r1 & 16777215			  ## timer.c:426:46
 1e11532:    10 09             	r0 += r1			  ## timer.c:426:41
 1e11534:    58 4a             	[r5 + 20] = r0			  ## timer.c:426:24
 1e11536:    97 f3 2f ac       	call 3102814 <local_irq_enable : 106d98 >			  ## timer.c:431:5
 1e1153a:    c0 ff 48 24 00 00 	r0 = 9288 <sys_timer_sem : 2448 >			  ## timer.c:433:5
 1e11540:    15 01             	{rets, r5, r4} = [sp++]			  ## timer.c:433:5
 1e11542:    d7 f3 63 ac       	goto 3102918 <os_sem_post : 106e0c >			  ## timer.c:433:5


__syscfg_read:
 1e11546:    79 01             	[--sp] = {rets, r9-r4}			  ## syscfg_api.c:38:0
 1e11548:    05 08             	r5 = r0			  ## syscfg_api.c:38:0
 1e1154a:    16 4a             	r6 = [r5 + 4]			  ## syscfg_api.c:42:14
 1e1154c:    38 08             	r8 = r3			  ## syscfg_api.c:42:14
 1e1154e:    29 08             	r9 = r2
 1e11550:    17 08             	r7 = r1
 1e11552:    04 70             	r4 = 0
 1e11554:    0b 2c             	if (r6 == 0) goto 22 <__syscfg_read+0x26 : 1e1156c >
 1e11556:    70 08             	r0 = r7			  ## syscfg_api.c:43:13
 1e11558:    86 00             	call r6			  ## syscfg_api.c:43:13
 1e1155a:    10 e0 07 10       	if (r0 != 1) goto 14 <__syscfg_read+0x26 : 1e1156c >			  ## syscfg_api.c:43:13
 1e1155e:    23 4a             	r3 = [r5 + 8]			  ## syscfg_api.c:44:22
 1e11560:    05 26             	if (r3 == 0) goto 10 <__syscfg_read+0x26 : 1e1156c >			  ## syscfg_api.c:44:22
 1e11562:    70 08             	r0 = r7			  ## syscfg_api.c:45:23
 1e11564:    91 08             	r1 = r9			  ## syscfg_api.c:45:23
 1e11566:    82 08             	r2 = r8			  ## syscfg_api.c:45:23
 1e11568:    83 00             	call r3			  ## syscfg_api.c:45:23
 1e1156a:    04 08             	r4 = r0			  ## syscfg_api.c:45:23
 1e1156c:    40 08             	r0 = r4			  ## syscfg_api.c:50:5
 1e1156e:    59 01             	{pc, r9-r4} = [sp++]			  ## syscfg_api.c:50:5


syscfg_read:
 1e11570:    7a 01             	[--sp] = {rets, r10-r4}			  ## syscfg_api.c:114:0
 1e11572:    2a 08             	r10 = r2			  ## syscfg_api.c:114:0
 1e11574:    18 08             	r8 = r1			  ## syscfg_api.c:114:0
 1e11576:    06 08             	r6 = r0			  ## syscfg_api.c:114:0
 1e11578:    66 e6 2f 10       	if (r6 != 102) goto 94 <syscfg_read+0x6A : 1e115da >			  ## syscfg_api.c:114:0
 1e1157c:    04 70             	r4 = 0			  ## syscfg_api.c:114:0
 1e1157e:    62 e0 61 30       	if (r2 < 6) goto 194 <syscfg_read+0xD4 : 1e11644 >			  ## syscfg_api.c:114:0
 1e11582:    00 70             	r0 = 0			  ## syscfg_api.c:114:0
 1e11584:    c7 ff 00 08 00 00 	r7 = 2048 <report_mmu_tlb_size : 800 >			  ## syscfg_api.c:114:0
 1e1158a:    01 70             	r1 = 0			  ## syscfg_api.c:114:0
 1e1158c:    c2 b1             	r2 = r0 + r7			  ## syscfg_api.c:89:13
 1e1158e:    03 f9 20 20       	r3 = b[r2 + 32] (u)			  ## syscfg_api.c:89:13
 1e11592:    12 70             	r2 = 1			  ## syscfg_api.c:89:13
 1e11594:    01 26             	if (r3 == 0) goto 2 <syscfg_read+0x28 : 1e11598 >			  ## syscfg_api.c:89:13
 1e11596:    02 70             	r2 = 0			  ## syscfg_api.c:89:36
 1e11598:    10 80             	r0 += 1			  ## syscfg_api.c:88:54
 1e1159a:    21 09             	r1 += r2			  ## syscfg_api.c:89:13
 1e1159c:    60 e0 f6 1f       	if (r0 != 6) goto -20 <syscfg_read+0x1C : 1e1158c >			  ## syscfg_api.c:89:13
 1e115a0:    40 04             	r0 = r1.b0 (u)			  ## syscfg_api.c:94:18
 1e115a2:    60 e0 07 10       	if (r0 != 6) goto 14 <syscfg_read+0x44 : 1e115b4 >			  ## syscfg_api.c:94:9
 1e115a6:    c2 ff 57 53 e1 01 	r2 = 31544151 <update_target_end+0x24CF : 1e15357 >			  ## syscfg_api.c:95:9
 1e115ac:    40 70             	r0 = 4			  ## syscfg_api.c:95:9
 1e115ae:    bf f3 bc ed       	call -9352 <log_print : 1e0f12a >			  ## syscfg_api.c:95:9
 1e115b2:    13 18             	goto 38 <syscfg_read+0x6A : 1e115da >			  ## syscfg_api.c:95:9
 1e115b4:    79 fc 20 00       	r9 = r7 + 32			  ## syscfg_api.c:98:19
 1e115b8:    61 70             	r1 = 6			  ## syscfg_api.c:98:19
 1e115ba:    64 70             	r4 = 6			  ## syscfg_api.c:98:19
 1e115bc:    90 08             	r0 = r9			  ## syscfg_api.c:98:19
 1e115be:    bf f3 f4 7e       	call -66072 <CRC16 : 1e013aa >			  ## syscfg_api.c:98:19
 1e115c2:    31 5f             	r1 = h[r7 + 38] (u)			  ## syscfg_api.c:100:19
 1e115c4:    30 fb 00 11       	r1 = rev8(r1)			  ## syscfg_api.c:101:20
 1e115c8:    09 d4             	r1 = r1 >> 16			  ## syscfg_api.c:101:20
 1e115ca:    10 f2 06 10       	if (r0 != r1) goto 12 <syscfg_read+0x6A : 1e115da >			  ## syscfg_api.c:101:20
 1e115ce:    62 70             	r2 = 6			  ## syscfg_api.c:102:9
 1e115d0:    80 08             	r0 = r8			  ## syscfg_api.c:102:9
 1e115d2:    91 08             	r1 = r9			  ## syscfg_api.c:102:9
 1e115d4:    97 f3 86 ac       	call 3102988 <memcpy : 106ee4 >			  ## syscfg_api.c:102:9
 1e115d8:    35 18             	goto 106 <syscfg_read+0xD4 : 1e11644 >
 1e115da:    60 fc ff ff       	r0 = r6 + -1			  ## syscfg_api.c:131:44
 1e115de:    20 04             	r0 = r0.l (u)			  ## syscfg_api.c:131:44
 1e115e0:    c7 ff a0 2d e1 01 	r7 = 31534496 <cfg_vm : 1e12da0 >			  ## syscfg_api.c:131:44
 1e115e6:    10 e3 27 30       	if (r0 < 49) goto 78 <syscfg_read+0xC8 : 1e11638 >			  ## syscfg_api.c:131:44
 1e115ea:    60 fc ce ff       	r0 = r6 + -50			  ## syscfg_api.c:134:53
 1e115ee:    20 04             	r0 = r0.l (u)			  ## syscfg_api.c:134:53
 1e115f0:    20 e3 22 30       	if (r0 < 50) goto 68 <syscfg_read+0xC8 : 1e11638 >			  ## syscfg_api.c:134:53
 1e115f4:    60 fc 00 fe       	r0 = r6 + -512			  ## syscfg_api.c:137:54
 1e115f8:    20 04             	r0 = r0.l (u)			  ## syscfg_api.c:137:54
 1e115fa:    c7 ff bc 2d e1 01 	r7 = 31534524 <cfg_bin : 1e12dbc >			  ## syscfg_api.c:137:54
 1e11600:    d0 eb 1a 30       	if (r0 < 189) goto 52 <syscfg_read+0xC8 : 1e11638 >			  ## syscfg_api.c:137:54
 1e11604:    c5 ff d8 2d e1 01 	r5 = 31534552 <syscfg_ops_end : 1e12dd8 >
 1e1160a:    c4 ff 84 2d e1 01 	r4 = 31534468 <syscfg_ops_begin : 1e12d84 >
 1e11610:    54 f2 12 20       	if (r4 >= r5) goto 36 <syscfg_read+0xC8 : 1e11638 >
 1e11614:    11 48             	r1 = [r4 + 4]			  ## syscfg_api.c:142:20
 1e11616:    04 22             	if (r1 == 0) goto 8 <syscfg_read+0xB0 : 1e11620 >			  ## syscfg_api.c:142:20
 1e11618:    60 08             	r0 = r6			  ## syscfg_api.c:143:21
 1e1161a:    81 00             	call r1			  ## syscfg_api.c:143:21
 1e1161c:    10 e0 04 00       	if (r0 == 1) goto 8 <syscfg_read+0xB8 : 1e11628 >			  ## syscfg_api.c:143:21
 1e11620:    c4 81             	r4 += 28			  ## syscfg_api.c:141:9
 1e11622:    54 f2 f7 3f       	if (r4 < r5) goto -18 <syscfg_read+0xA4 : 1e11614 >
 1e11626:    08 18             	goto 16 <syscfg_read+0xC8 : 1e11638 >
 1e11628:    40 08             	r0 = r4			  ## syscfg_api.c:144:27
 1e1162a:    61 08             	r1 = r6			  ## syscfg_api.c:144:27
 1e1162c:    82 08             	r2 = r8			  ## syscfg_api.c:144:27
 1e1162e:    a3 08             	r3 = r10			  ## syscfg_api.c:144:27
 1e11630:    8a 17             	call -236 <__syscfg_read : 1e11546 >			  ## syscfg_api.c:144:27
 1e11632:    04 08             	r4 = r0			  ## syscfg_api.c:144:27
 1e11634:    04 e0 06 c0       	ifs (r4 > 0) goto 12 <syscfg_read+0xD4 : 1e11644 >
 1e11638:    70 08             	r0 = r7			  ## syscfg_api.c:136:15
 1e1163a:    61 08             	r1 = r6			  ## syscfg_api.c:136:15
 1e1163c:    82 08             	r2 = r8			  ## syscfg_api.c:136:15
 1e1163e:    a3 08             	r3 = r10			  ## syscfg_api.c:136:15
 1e11640:    82 17             	call -252 <__syscfg_read : 1e11546 >			  ## syscfg_api.c:136:15
 1e11642:    04 08             	r4 = r0			  ## syscfg_api.c:136:15
 1e11644:    40 08             	r0 = r4			  ## syscfg_api.c:156:1
 1e11646:    5a 01             	{pc, r10-r4} = [sp++]			  ## syscfg_api.c:156:1


syscfg_write:
 1e11648:    79 01             	[--sp] = {rets, r9-r4}			  ## syscfg_api.c:161:0
 1e1164a:    28 08             	r8 = r2			  ## syscfg_api.c:161:0
 1e1164c:    19 08             	r9 = r1			  ## syscfg_api.c:161:0
 1e1164e:    06 08             	r6 = r0			  ## syscfg_api.c:161:0
 1e11650:    60 fc ff ff       	r0 = r6 + -1			  ## syscfg_api.c:166:44
 1e11654:    20 04             	r0 = r0.l (u)			  ## syscfg_api.c:166:44
 1e11656:    c4 ff a0 2d e1 01 	r4 = 31534496 <cfg_vm : 1e12da0 >			  ## syscfg_api.c:166:44
 1e1165c:    10 e3 0d 30       	if (r0 < 49) goto 26 <syscfg_write+0x32 : 1e1167a >			  ## syscfg_api.c:166:44
 1e11660:    60 fc ce ff       	r0 = r6 + -50			  ## syscfg_api.c:169:53
 1e11664:    20 04             	r0 = r0.l (u)			  ## syscfg_api.c:169:53
 1e11666:    20 e3 08 30       	if (r0 < 50) goto 16 <syscfg_write+0x32 : 1e1167a >			  ## syscfg_api.c:169:53
 1e1166a:    60 fc 00 fe       	r0 = r6 + -512			  ## syscfg_api.c:172:54
 1e1166e:    20 04             	r0 = r0.l (u)			  ## syscfg_api.c:172:54
 1e11670:    d0 eb 0d 20       	if (r0 >= 189) goto 26 <syscfg_write+0x46 : 1e1168e >			  ## syscfg_api.c:172:54
 1e11674:    c4 ff bc 2d e1 01 	r4 = 31534524 <cfg_bin : 1e12dbc >
 1e1167a:    33 48             	r3 = [r4 + 12]			  ## syscfg_api.c:59:14
 1e1167c:    06 26             	if (r3 == 0) goto 12 <syscfg_write+0x42 : 1e1168a >			  ## syscfg_api.c:59:14
 1e1167e:    60 08             	r0 = r6			  ## syscfg_api.c:60:15
 1e11680:    91 08             	r1 = r9			  ## syscfg_api.c:60:15
 1e11682:    82 08             	r2 = r8			  ## syscfg_api.c:60:15
 1e11684:    83 00             	call r3			  ## syscfg_api.c:60:15
 1e11686:    07 08             	r7 = r0			  ## syscfg_api.c:60:15
 1e11688:    14 18             	goto 40 <syscfg_write+0x6A : 1e116b2 >
 1e1168a:    07 70             	r7 = 0
 1e1168c:    12 18             	goto 36 <syscfg_write+0x6A : 1e116b2 >
 1e1168e:    c5 ff d8 2d e1 01 	r5 = 31534552 <syscfg_ops_end : 1e12dd8 >
 1e11694:    c4 ff 84 2d e1 01 	r4 = 31534468 <syscfg_ops_begin : 1e12d84 >
 1e1169a:    07 70             	r7 = 0
 1e1169c:    54 f2 09 20       	if (r4 >= r5) goto 18 <syscfg_write+0x6A : 1e116b2 >
 1e116a0:    11 48             	r1 = [r4 + 4]			  ## syscfg_api.c:177:20
 1e116a2:    04 22             	if (r1 == 0) goto 8 <syscfg_write+0x64 : 1e116ac >			  ## syscfg_api.c:177:20
 1e116a4:    60 08             	r0 = r6			  ## syscfg_api.c:178:21
 1e116a6:    81 00             	call r1			  ## syscfg_api.c:178:21
 1e116a8:    10 e0 e7 0f       	if (r0 == 1) goto -50 <syscfg_write+0x32 : 1e1167a >			  ## syscfg_api.c:178:21
 1e116ac:    c4 81             	r4 += 28			  ## syscfg_api.c:176:9
 1e116ae:    54 f2 f7 3f       	if (r4 < r5) goto -18 <syscfg_write+0x58 : 1e116a0 >
 1e116b2:    70 08             	r0 = r7			  ## syscfg_api.c:186:5
 1e116b4:    59 01             	{pc, r9-r4} = [sp++]			  ## syscfg_api.c:186:5


syscfg_tools_init:
 1e116b6:    75 01             	[--sp] = {rets, r5, r4}			  ## syscfg_api.c:253:0
 1e116b8:    c4 ff d8 2d e1 01 	r4 = 31534552 <syscfg_ops_end : 1e12dd8 >			  ## syscfg_api.c:253:0
 1e116be:    c5 ff 84 2d e1 01 	r5 = 31534468 <syscfg_ops_begin : 1e12d84 >			  ## syscfg_api.c:253:0
 1e116c4:    45 f2 06 20       	if (r5 >= r4) goto 12 <syscfg_tools_init+0x1E : 1e116d4 >			  ## syscfg_api.c:253:0
 1e116c8:    40 f6 1c 50       	r0 = [r5 ++= 28]			  ## syscfg_api.c:261:16
 1e116cc:    01 20             	if (r0 == 0) goto 2 <syscfg_tools_init+0x1A : 1e116d0 >
 1e116ce:    80 00             	call r0			  ## syscfg_api.c:262:13
 1e116d0:    45 f2 fa 3f       	if (r5 < r4) goto -12 <syscfg_tools_init+0x12 : 1e116c8 >
 1e116d4:    00 70             	r0 = 0			  ## syscfg_api.c:266:5
 1e116d6:    55 01             	{pc, r5, r4} = [sp++]			  ## syscfg_api.c:266:5


syscfg_file_open:
 1e116d8:    75 01             	[--sp] = {rets, r5, r4}			  ## cfg_bin.c:68:0
 1e116da:    04 08             	r4 = r0			  ## cfg_bin.c:68:0
 1e116dc:    c1 ff ba 4f e1 01 	r1 = 31543226 <update_target_end+0x2132 : 1e14fba >			  ## cfg_bin.c:70:10
 1e116e2:    80 f3 90 08       	call 4384 <fopen : 1e12806 >			  ## cfg_bin.c:70:10
 1e116e6:    05 08             	r5 = r0			  ## cfg_bin.c:70:10
 1e116e8:    07 3a             	if (r5 != 0) goto 14 <syscfg_file_open+0x20 : 1e116f8 >
 1e116ea:    c2 ff f4 55 e1 01 	r2 = 31544820 <update_target_end+0x276C : 1e155f4 >			  ## cfg_bin.c:72:9
 1e116f0:    40 70             	r0 = 4			  ## cfg_bin.c:72:9
 1e116f2:    43 08             	r3 = r4			  ## cfg_bin.c:72:9
 1e116f4:    bf f3 19 ed       	call -9678 <log_print : 1e0f12a >			  ## cfg_bin.c:72:9
 1e116f8:    50 08             	r0 = r5			  ## cfg_bin.c:75:5
 1e116fa:    55 01             	{pc, r5, r4} = [sp++]			  ## cfg_bin.c:75:5


syscfg_file_init:
 1e116fc:    77 01             	[--sp] = {rets, r7-r4}			  ## cfg_bin.c:87:0
 1e116fe:    ee 0b             	sp += -36			  ## cfg_bin.c:87:0
 1e11700:    00 a0             	r0 = sp + 0			  ## cfg_bin.c:87:0
 1e11702:    01 70             	r1 = 0			  ## cfg_bin.c:90:21
 1e11704:    42 72             	r2 = 36			  ## cfg_bin.c:90:21
 1e11706:    07 70             	r7 = 0			  ## cfg_bin.c:90:21
 1e11708:    97 f3 f2 ab       	call 3102692 <memset : 106ef0 >			  ## cfg_bin.c:90:21
 1e1170c:    c0 ff d8 55 e1 01 	r0 = 31544792 <update_target_end+0x2750 : 1e155d8 >			  ## cfg_bin.c:92:10
 1e11712:    e2 17             	call -60 <syscfg_file_open : 1e116d8 >			  ## cfg_bin.c:92:10
 1e11714:    05 08             	r5 = r0			  ## cfg_bin.c:92:10
 1e11716:    04 fb 00 ff       	r4 = -256 <bank_code_load_addr+0x1DC908 : 1ffff00 >
 1e1171a:    4f 2a             	if (r5 == 0) goto 158 <syscfg_file_init+0xBE : 1e117ba >
 1e1171c:    01 a0             	r1 = sp + 0
 1e1171e:    80 f3 92 09       	call 4900 <fget_attrs : 1e12a46 >			  ## cfg_bin.c:98:5
 1e11722:    c6 ff e4 1f 00 00 	r6 = 8164 <bin_cfg : 1fe4 >
 1e11728:    20 02             	r0 = [sp+8]			  ## cfg_bin.c:101:47
 1e1172a:    11 70             	r1 = 1			  ## cfg_bin.c:100:31
 1e1172c:    12 02             	r2 = [sp+4]			  ## cfg_bin.c:102:46
 1e1172e:    09 6c             	b[r6 + 0] = r1			  ## cfg_bin.c:100:31
 1e11730:    40 80             	r0 += 4			  ## cfg_bin.c:101:54
 1e11732:    18 4c             	[r6 + 4] = r0			  ## cfg_bin.c:101:35
 1e11734:    20 fc fc ff       	r0 = r2 + -4			  ## cfg_bin.c:102:52
 1e11738:    28 4c             	[r6 + 8] = r0			  ## cfg_bin.c:102:34
 1e1173a:    50 08             	r0 = r5			  ## cfg_bin.c:81:9
 1e1173c:    80 f3 3e 09       	call 4732 <fclose : 1e129bc >			  ## cfg_bin.c:81:9
 1e11740:    cf 6c             	b[r6 + 12] = r7			  ## cfg_bin.c:106:30
 1e11742:    c0 ff 15 56 e1 01 	r0 = 31544853 <update_target_end+0x278D : 1e15615 >			  ## cfg_bin.c:108:10
 1e11748:    c7 17             	call -114 <syscfg_file_open : 1e116d8 >			  ## cfg_bin.c:108:10
 1e1174a:    05 08             	r5 = r0			  ## cfg_bin.c:108:10
 1e1174c:    36 2a             	if (r5 == 0) goto 108 <syscfg_file_init+0xBE : 1e117ba >
 1e1174e:    01 a0             	r1 = sp + 0
 1e11750:    80 f3 79 09       	call 4850 <fget_attrs : 1e12a46 >			  ## cfg_bin.c:113:5
 1e11754:    50 08             	r0 = r5			  ## cfg_bin.c:81:9
 1e11756:    80 f3 31 09       	call 4706 <fclose : 1e129bc >			  ## cfg_bin.c:81:9
 1e1175a:    20 02             	r0 = [sp+8]			  ## cfg_bin.c:117:46
 1e1175c:    00 fc 00 02       	r0 = r0 + 512			  ## cfg_bin.c:117:46
 1e11760:    48 4c             	[r6 + 16] = r0			  ## cfg_bin.c:117:34
 1e11762:    31 60             	r1 = b[r0 + 3] (u)			  ## cfg_bin.c:119:5
 1e11764:    22 60             	r2 = b[r0 + 2] (u)			  ## cfg_bin.c:119:5
 1e11766:    13 60             	r3 = b[r0 + 1] (u)			  ## cfg_bin.c:119:5
 1e11768:    05 60             	r5 = b[r0 + 0] (u)			  ## cfg_bin.c:119:5
 1e1176a:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## cfg_bin.c:119:5
 1e1176e:    c8 fd 40 53       	r5 <= insert(r3, p:8, l:8)			  ## cfg_bin.c:119:5
 1e11772:    d0 fd 80 52       	r5 <= insert(r2, p:16, l:16)			  ## cfg_bin.c:119:5
 1e11776:    51 fc ff ff       	r1 = r5 + -1			  ## cfg_bin.c:121:49
 1e1177a:    04 70             	r4 = 0			  ## cfg_bin.c:121:49
 1e1177c:    08 ff ff 17 1c 00 	if (r1 > 2047) goto 56 <syscfg_file_init+0xBE : 1e117ba >			  ## cfg_bin.c:121:49
 1e11782:    71 60             	r1 = b[r0 + 7] (u)			  ## cfg_bin.c:127:5
 1e11784:    62 60             	r2 = b[r0 + 6] (u)			  ## cfg_bin.c:127:5
 1e11786:    53 60             	r3 = b[r0 + 5] (u)			  ## cfg_bin.c:127:5
 1e11788:    47 60             	r7 = b[r0 + 4] (u)			  ## cfg_bin.c:127:5
 1e1178a:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## cfg_bin.c:127:5
 1e1178e:    c8 fd 40 73       	r7 <= insert(r3, p:8, l:8)			  ## cfg_bin.c:127:5
 1e11792:    d0 fd 80 72       	r7 <= insert(r2, p:16, l:16)			  ## cfg_bin.c:127:5
 1e11796:    39 d5             	r1 = r7 >> 20			  ## cfg_bin.c:128:9
 1e11798:    08 ff 20 13 0e 00 	if (r1 > 800) goto 28 <syscfg_file_init+0xBE : 1e117ba >			  ## cfg_bin.c:128:9
 1e1179e:    40 80             	r0 += 4			  ## cfg_bin.c:126:11
 1e117a0:    40 80             	r0 += 4			  ## cfg_bin.c:131:26
 1e117a2:    bf f3 02 7e       	call -66556 <CRC16 : 1e013aa >			  ## cfg_bin.c:131:26
 1e117a6:    00 04             	r0 = r0.b0 (u)			  ## cfg_bin.c:132:9
 1e117a8:    c1 05             	r1 = r7.b0 (u)			  ## cfg_bin.c:132:32
 1e117aa:    10 f2 06 10       	if (r0 != r1) goto 12 <syscfg_file_init+0xBE : 1e117ba >			  ## cfg_bin.c:132:32
 1e117ae:    10 70             	r0 = 1			  ## cfg_bin.c:133:34
 1e117b0:    c8 6c             	b[r6 + 12] = r0			  ## cfg_bin.c:133:34
 1e117b2:    40 4c             	r0 = [r6 + 16]			  ## cfg_bin.c:134:38
 1e117b4:    40 80             	r0 += 4			  ## cfg_bin.c:134:38
 1e117b6:    48 4c             	[r6 + 16] = r0			  ## cfg_bin.c:134:38
 1e117b8:    5d 4c             	[r6 + 20] = r5			  ## cfg_bin.c:135:37
 1e117ba:    40 08             	r0 = r4			  ## cfg_bin.c:141:1
 1e117bc:    12 0a             	sp += 36			  ## cfg_bin.c:141:1
 1e117be:    57 01             	{pc, r7-r4} = [sp++]			  ## cfg_bin.c:141:1


syscfg_bin_check_id:
 1e117c0:    10 70             	r0 = 1			  ## cfg_bin.c:351:0
 1e117c2:    20 00             	rts			  ## cfg_bin.c:352:5


__syscfg_bin_item_read:
 1e117c4:    77 01             	[--sp] = {rets, r7-r4}			  ## cfg_bin.c:199:0
 1e117c6:    24 08             	r4 = r2			  ## cfg_bin.c:199:0
 1e117c8:    01 09             	r1 += r0			  ## cfg_bin.c:202:42
 1e117ca:    32 60             	r2 = b[r0 + 3] (u)			  ## cfg_bin.c:207:9
 1e117cc:    23 60             	r3 = b[r0 + 2] (u)			  ## cfg_bin.c:207:9
 1e117ce:    15 60             	r5 = b[r0 + 1] (u)			  ## cfg_bin.c:207:9
 1e117d0:    07 60             	r7 = b[r0 + 0] (u)			  ## cfg_bin.c:207:9
 1e117d2:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## cfg_bin.c:207:9
 1e117d6:    c8 fd 40 75       	r7 <= insert(r5, p:8, l:8)			  ## cfg_bin.c:207:9
 1e117da:    d0 fd 80 73       	r7 <= insert(r3, p:16, l:16)			  ## cfg_bin.c:207:9
 1e117de:    3d d5             	r5 = r7 >> 20			  ## cfg_bin.c:208:23
 1e117e0:    08 ff 20 53 0c 00 	if (r5 > 800) goto 24 <__syscfg_bin_item_read+0x3A : 1e117fe >			  ## cfg_bin.c:208:23
 1e117e6:    02 58             	r2 = h[r4 + 0] (u)			  ## cfg_bin.c:212:24
 1e117e8:    8c fd 40 37       	r3 = uextra(r7, p:8, l:12)			  ## cfg_bin.c:211:19
 1e117ec:    23 f2 0a 00       	if (r3 == r2) goto 20 <__syscfg_bin_item_read+0x40 : 1e11804 >			  ## cfg_bin.c:211:19
 1e117f0:    50 09             	r0 += r5			  ## cfg_bin.c:222:36
 1e117f2:    40 80             	r0 += 4			  ## cfg_bin.c:222:19
 1e117f4:    10 f2 e9 3f       	if (r0 < r1) goto -46 <__syscfg_bin_item_read+0x6 : 1e117ca >
 1e117f8:    00 fb 05 ff       	r0 = -251 <bank_code_load_addr+0x1DC90D : 1ffff05 >
 1e117fc:    57 01             	{pc, r7-r4} = [sp++]			  ## cfg_bin.c:227:1
 1e117fe:    00 fb 07 ff       	r0 = -249 <bank_code_load_addr+0x1DC90F : 1ffff07 >
 1e11802:    57 01             	{pc, r7-r4} = [sp++]			  ## cfg_bin.c:227:1
 1e11804:    46 90             	r6 = r0 + 4			  ## cfg_bin.c:213:25
 1e11806:    60 08             	r0 = r6			  ## cfg_bin.c:213:25
 1e11808:    51 08             	r1 = r5			  ## cfg_bin.c:213:25
 1e1180a:    bf f3 ce 7d       	call -66660 <CRC16 : 1e013aa >			  ## cfg_bin.c:213:25
 1e1180e:    01 04             	r1 = r0.b0 (u)			  ## cfg_bin.c:214:17
 1e11810:    c2 05             	r2 = r7.b0 (u)			  ## cfg_bin.c:214:40
 1e11812:    00 fb 03 ff       	r0 = -253 <bank_code_load_addr+0x1DC90B : 1ffff03 >			  ## cfg_bin.c:214:40
 1e11816:    21 f2 04 10       	if (r1 != r2) goto 8 <__syscfg_bin_item_read+0x5E : 1e11822 >			  ## cfg_bin.c:214:40
 1e1181a:    1d 58             	h[r4 + 2] = r5			  ## cfg_bin.c:215:32
 1e1181c:    1e 48             	[r4 + 4] = r6			  ## cfg_bin.c:216:33
 1e1181e:    00 70             	r0 = 0			  ## cfg_bin.c:216:33
 1e11820:    57 01             	{pc, r7-r4} = [sp++]			  ## cfg_bin.c:227:1
 1e11822:    57 01             	{pc, r7-r4} = [sp++]			  ## cfg_bin.c:227:1


__syscfg_bin_read:
 1e11824:    75 01             	[--sp] = {rets, r5, r4}			  ## cfg_bin.c:230:0
 1e11826:    c5 ff e4 1f 00 00 	r5 = 8164 <bin_cfg : 1fe4 >			  ## cfg_bin.c:230:0
 1e1182c:    c1 6a             	r1 = b[r5 + 12] (u)			  ## cfg_bin.c:233:28
 1e1182e:    04 08             	r4 = r0			  ## cfg_bin.c:233:28
 1e11830:    11 e0 05 10       	if (r1 != 1) goto 10 <__syscfg_bin_read+0x1A : 1e1183e >
 1e11834:    51 4a             	r1 = [r5 + 20]
 1e11836:    40 4a             	r0 = [r5 + 16]
 1e11838:    42 08             	r2 = r4			  ## cfg_bin.c:234:15
 1e1183a:    c4 17             	call -120 <__syscfg_bin_item_read : 1e117c4 >			  ## cfg_bin.c:234:15
 1e1183c:    05 20             	if (r0 == 0) goto 10 <__syscfg_bin_read+0x24 : 1e11848 >
 1e1183e:    21 4a             	r1 = [r5 + 8]
 1e11840:    10 4a             	r0 = [r5 + 4]
 1e11842:    42 08             	r2 = r4			  ## cfg_bin.c:240:11
 1e11844:    bf 17             	call -130 <__syscfg_bin_item_read : 1e117c4 >			  ## cfg_bin.c:240:11
 1e11846:    55 01             	{pc, r5, r4} = [sp++]			  ## cfg_bin.c:243:1
 1e11848:    00 70             	r0 = 0
 1e1184a:    55 01             	{pc, r5, r4} = [sp++]			  ## cfg_bin.c:243:1


___syscfg_bin_group_read:
 1e1184c:    77 01             	[--sp] = {rets, r7-r4}			  ## cfg_bin.c:246:0
 1e1184e:    fc 0b             	sp += -8			  ## cfg_bin.c:246:0
 1e11850:    c7 ff 80 64 e1 01 	r7 = 31548544 <group_item_table : 1e16480 >			  ## cfg_bin.c:246:0
 1e11856:    36 08             	r6 = r3			  ## cfg_bin.c:246:0
 1e11858:    25 08             	r5 = r2			  ## cfg_bin.c:246:0
 1e1185a:    14 08             	r4 = r1			  ## cfg_bin.c:246:0
 1e1185c:    01 08             	r1 = r0			  ## cfg_bin.c:246:0
 1e1185e:    72 08             	r2 = r7			  ## cfg_bin.c:162:13
 1e11860:    51 e6 01 00       	if (r1 == 101) goto 2 <___syscfg_bin_group_read+0x1A : 1e11866 >			  ## cfg_bin.c:162:13
 1e11864:    02 70             	r2 = 0			  ## cfg_bin.c:162:13
 1e11866:    00 fb 05 ff       	r0 = -251 <bank_code_load_addr+0x1DC90D : 1ffff05 >
 1e1186a:    51 e6 0e 10       	if (r1 != 101) goto 28 <___syscfg_bin_group_read+0x3E : 1e1188a >
 1e1186e:    41 64             	r1 = b[r2 + 4] (u)			  ## cfg_bin.c:257:19
 1e11870:    10 80             	r0 += 1
 1e11872:    61 f2 0a 90       	if (r1 <= r6) goto 20 <___syscfg_bin_group_read+0x3E : 1e1188a >
 1e11876:    11 54             	r1 = h[r2 + 2] (u)			  ## cfg_bin.c:261:18
 1e11878:    c0 8f             	r0 += -4			  ## cfg_bin.c:261:18
 1e1187a:    51 f2 06 80       	if (r1 > r5) goto 12 <___syscfg_bin_group_read+0x3E : 1e1188a >			  ## cfg_bin.c:261:18
 1e1187e:    50 76             	r0 = 101			  ## cfg_bin.c:266:18
 1e11880:    90 f5 00 00       	h[sp] = r0			  ## cfg_bin.c:266:18
 1e11884:    00 a0             	r0 = sp + 0			  ## cfg_bin.c:266:18
 1e11886:    ce 17             	call -100 <__syscfg_bin_read : 1e11824 >			  ## cfg_bin.c:268:11
 1e11888:    02 20             	if (r0 == 0) goto 4 <___syscfg_bin_group_read+0x42 : 1e1188e >
 1e1188a:    04 0a             	sp += 8
 1e1188c:    57 01             	{pc, r7-r4} = [sp++]			  ## cfg_bin.c:287:1
 1e1188e:    80 f5 00 00       	r0 = h[sp] (u)			  ## cfg_bin.c:181:46
 1e11892:    50 e6 01 00       	if (r0 == 101) goto 2 <___syscfg_bin_group_read+0x4C : 1e11898 >
 1e11896:    07 70             	r7 = 0
 1e11898:    17 5e             	r7 = h[r7 + 2] (u)			  ## cfg_bin.c:183:29
 1e1189a:    11 02             	r1 = [sp+4]			  ## cfg_bin.c:176:28
 1e1189c:    10 9e             	r0 = r7 + 1			  ## cfg_bin.c:183:38
 1e1189e:    20 04             	r0 = r0.l (u)			  ## cfg_bin.c:185:21
 1e118a0:    80 fe 60 10       	r1 += r0 * r6			  ## cfg_bin.c:185:11
 1e118a4:    80 f9 01 10       	r0 = b[r1 ++= 1] (u)			  ## cfg_bin.c:187:5
 1e118a8:    0c 20             	if (r0 == 0) goto 24 <___syscfg_bin_group_read+0x76 : 1e118c2 >
 1e118aa:    97 f5 02 00       	h[sp+2] = r7			  ## cfg_bin.c:190:24
 1e118ae:    19 02             	[sp+4] = r1			  ## cfg_bin.c:191:25
 1e118b0:    00 fb 02 ff       	r0 = -254 <bank_code_load_addr+0x1DC90A : 1ffff02 >
 1e118b4:    57 f2 e9 8f       	if (r7 > r5) goto -46 <___syscfg_bin_group_read+0x3E : 1e1188a >
 1e118b8:    70 02             	r0 = [sp+28]
 1e118ba:    10 e0 05 10       	if (r0 != 1) goto 10 <___syscfg_bin_group_read+0x7C : 1e118c8 >			  ## cfg_bin.c:275:17
 1e118be:    09 48             	[r4 + 0] = r1			  ## cfg_bin.c:276:33
 1e118c0:    07 18             	goto 14 <___syscfg_bin_group_read+0x84 : 1e118d0 >			  ## cfg_bin.c:276:33
 1e118c2:    00 fb 05 ff       	r0 = -251 <bank_code_load_addr+0x1DC90D : 1ffff05 >
 1e118c6:    e1 1f             	goto -62 <___syscfg_bin_group_read+0x3E : 1e1188a >
 1e118c8:    40 08             	r0 = r4			  ## cfg_bin.c:278:17
 1e118ca:    72 08             	r2 = r7			  ## cfg_bin.c:278:17
 1e118cc:    97 f3 0a ab       	call 3102228 <memcpy : 106ee4 >			  ## cfg_bin.c:278:17
 1e118d0:    70 08             	r0 = r7
 1e118d2:    db 1f             	goto -74 <___syscfg_bin_group_read+0x3E : 1e1188a >


syscfg_bin_read:
 1e118d4:    76 01             	[--sp] = {rets, r6-r4}			  ## cfg_bin.c:295:0
 1e118d6:    fa 0b             	sp += -12			  ## cfg_bin.c:295:0
 1e118d8:    25 08             	r5 = r2			  ## cfg_bin.c:295:0
 1e118da:    14 08             	r4 = r1			  ## cfg_bin.c:295:0
 1e118dc:    50 e6 07 10       	if (r0 != 101) goto 14 <syscfg_bin_read+0x1A : 1e118ee >			  ## cfg_bin.c:301:9
 1e118e0:    01 70             	r1 = 0			  ## cfg_bin.c:291:12
 1e118e2:    50 76             	r0 = 101			  ## cfg_bin.c:291:12
 1e118e4:    03 70             	r3 = 0			  ## cfg_bin.c:291:12
 1e118e6:    09 02             	[sp] = r1			  ## cfg_bin.c:291:12
 1e118e8:    41 08             	r1 = r4			  ## cfg_bin.c:291:12
 1e118ea:    b0 17             	call -160 <___syscfg_bin_group_read : 1e1184c >			  ## cfg_bin.c:291:12
 1e118ec:    11 18             	goto 34 <syscfg_bin_read+0x3C : 1e11910 >			  ## cfg_bin.c:291:12
 1e118ee:    90 f5 04 00       	h[sp+4] = r0			  ## cfg_bin.c:306:18
 1e118f2:    40 a0             	r0 = sp + 4			  ## cfg_bin.c:306:18
 1e118f4:    97 17             	call -210 <__syscfg_bin_read : 1e11824 >			  ## cfg_bin.c:307:11
 1e118f6:    0c 30             	if (r0 != 0) goto 24 <syscfg_bin_read+0x3C : 1e11910 >
 1e118f8:    86 f5 06 00       	r6 = h[sp+6] (u)			  ## cfg_bin.c:310:30
 1e118fc:    00 fb 02 ff       	r0 = -254 <bank_code_load_addr+0x1DC90A : 1ffff02 >			  ## cfg_bin.c:310:30
 1e11900:    56 f2 06 80       	if (r6 > r5) goto 12 <syscfg_bin_read+0x3C : 1e11910 >
 1e11904:    21 02             	r1 = [sp+8]			  ## cfg_bin.c:311:13
 1e11906:    40 08             	r0 = r4			  ## cfg_bin.c:311:13
 1e11908:    62 08             	r2 = r6			  ## cfg_bin.c:311:13
 1e1190a:    97 f3 eb aa       	call 3102166 <memcpy : 106ee4 >			  ## cfg_bin.c:311:13
 1e1190e:    60 08             	r0 = r6			  ## cfg_bin.c:311:13
 1e11910:    06 0a             	sp += 12
 1e11912:    56 01             	{pc, r6-r4} = [sp++]			  ## cfg_bin.c:319:1


syscfg_bin_group_read:
 1e11914:    74 01             	[--sp] = {rets, r4}			  ## cfg_bin.c:290:0
 1e11916:    fe 0b             	sp += -4			  ## cfg_bin.c:290:0
 1e11918:    04 70             	r4 = 0			  ## cfg_bin.c:291:12
 1e1191a:    0c 02             	[sp] = r4			  ## cfg_bin.c:291:12
 1e1191c:    97 17             	call -210 <___syscfg_bin_group_read : 1e1184c >			  ## cfg_bin.c:291:12
 1e1191e:    02 0a             	sp += 4
 1e11920:    54 01             	{pc, r4} = [sp++]			  ## cfg_bin.c:291:5


syscfg_bin_ptr_read:
 1e11922:    75 01             	[--sp] = {rets, r5, r4}			  ## cfg_bin.c:322:0
 1e11924:    f8 0b             	sp += -16			  ## cfg_bin.c:322:0
 1e11926:    14 08             	r4 = r1			  ## cfg_bin.c:322:0
 1e11928:    05 70             	r5 = 0			  ## cfg_bin.c:322:0
 1e1192a:    3d 02             	[sp+12] = r5			  ## cfg_bin.c:323:9
 1e1192c:    0d 58             	h[r4 + 0] = r5			  ## cfg_bin.c:325:10
 1e1192e:    50 e6 0e 10       	if (r0 != 101) goto 28 <syscfg_bin_ptr_read+0x2C : 1e1194e >			  ## cfg_bin.c:330:9
 1e11932:    15 70             	r5 = 1
 1e11934:    c1 a0             	r1 = sp + 12
 1e11936:    c2 ff ff ff 00 00 	r2 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## cfg_bin.c:331:15
 1e1193c:    50 76             	r0 = 101			  ## cfg_bin.c:331:15
 1e1193e:    03 70             	r3 = 0			  ## cfg_bin.c:331:15
 1e11940:    0d 02             	[sp] = r5			  ## cfg_bin.c:331:15
 1e11942:    84 17             	call -248 <___syscfg_bin_group_read : 1e1184c >			  ## cfg_bin.c:331:15
 1e11944:    10 e0 01 b0       	ifs (r0 < 1) goto 2 <syscfg_bin_ptr_read+0x28 : 1e1194a >
 1e11948:    08 58             	h[r4 + 0] = r0			  ## cfg_bin.c:333:18
 1e1194a:    35 02             	r5 = [sp+12]			  ## cfg_bin.c:335:16
 1e1194c:    0a 18             	goto 20 <syscfg_bin_ptr_read+0x40 : 1e11962 >
 1e1194e:    90 f5 04 00       	h[sp+4] = r0			  ## cfg_bin.c:339:18
 1e11952:    40 a0             	r0 = sp + 4			  ## cfg_bin.c:339:18
 1e11954:    67 17             	call -306 <__syscfg_bin_read : 1e11824 >			  ## cfg_bin.c:340:11
 1e11956:    05 30             	if (r0 != 0) goto 10 <syscfg_bin_ptr_read+0x40 : 1e11962 >
 1e11958:    80 f5 06 00       	r0 = h[sp+6] (u)			  ## cfg_bin.c:343:26
 1e1195c:    08 58             	h[r4 + 0] = r0			  ## cfg_bin.c:343:14
 1e1195e:    25 02             	r5 = [sp+8]			  ## cfg_bin.c:344:31
 1e11960:    3d 02             	[sp+12] = r5			  ## cfg_bin.c:344:13
 1e11962:    50 08             	r0 = r5			  ## cfg_bin.c:348:1
 1e11964:    08 0a             	sp += 16			  ## cfg_bin.c:348:1
 1e11966:    55 01             	{pc, r5, r4} = [sp++]			  ## cfg_bin.c:348:1


syscfg_file_close:
 1e11968:    34 00             	[--sp] = rets			  ## cfg_bin.c:79:0
 1e1196a:    02 20             	if (r0 == 0) goto 4 <syscfg_file_close+0x8 : 1e11970 >			  ## cfg_bin.c:79:0
 1e1196c:    80 f3 26 08       	call 4172 <fclose : 1e129bc >			  ## cfg_bin.c:81:9
 1e11970:    30 00             	pc = [sp++]			  ## cfg_bin.c:83:1


btif_cfg_get_info:
 1e11972:    75 01             	[--sp] = {rets, r5, r4}			  ## cfg_btif.c:69:0
 1e11974:    02 50             	r2 = h[r0 + 0] (u)			  ## cfg_btif.c:69:0
 1e11976:    c3 ff 88 5f e1 01 	r3 = 31547272 <btif_table+0x4 : 1e15f88 >			  ## cfg_btif.c:69:0
 1e1197c:    01 70             	r1 = 0			  ## cfg_btif.c:69:0
 1e1197e:    64 76             	r4 = 102			  ## cfg_btif.c:69:0
 1e11980:    05 f7 fe 3f       	r5 = h[r3 + -2] (u)			  ## cfg_btif.c:69:0
 1e11984:    24 f2 07 00       	if (r4 == r2) goto 14 <btif_cfg_get_info+0x24 : 1e11996 >			  ## cfg_btif.c:69:0
 1e11988:    84 f7 04 30       	r4 = h[r3 ++= 4] (u)			  ## cfg_btif.c:74:5
 1e1198c:    51 09             	r1 += r5			  ## cfg_btif.c:80:35
 1e1198e:    41 80             	r1 += 4			  ## cfg_btif.c:80:20
 1e11990:    f7 39             	if (r4 != 0) goto -18 <btif_cfg_get_info+0xE : 1e11980 >
 1e11992:    00 70             	r0 = 0
 1e11994:    55 01             	{pc, r5, r4} = [sp++]			  ## cfg_btif.c:85:1
 1e11996:    1d 50             	h[r0 + 2] = r5			  ## cfg_btif.c:76:23
 1e11998:    19 40             	[r0 + 4] = r1			  ## cfg_btif.c:77:24
 1e1199a:    10 70             	r0 = 1			  ## cfg_btif.c:77:24
 1e1199c:    55 01             	{pc, r5, r4} = [sp++]			  ## cfg_btif.c:85:1


__btif_item_read:
 1e1199e:    77 01             	[--sp] = {rets, r7-r4}			  ## cfg_btif.c:102:0
 1e119a0:    04 08             	r4 = r0			  ## cfg_btif.c:102:0
 1e119a2:    e7 17             	call -50 <btif_cfg_get_info : 1e11972 >			  ## cfg_btif.c:103:9
 1e119a4:    23 20             	if (r0 == 0) goto 70 <__btif_item_read+0x4E : 1e119ec >			  ## cfg_btif.c:103:9
 1e119a6:    10 48             	r0 = [r4 + 4]			  ## cfg_btif.c:109:28
 1e119a8:    c1 ff fc 1f 00 00 	r1 = 8188 <btif_cfg : 1ffc >			  ## cfg_btif.c:109:43
 1e119ae:    01 42             	r1 = [r1 + 0]			  ## cfg_btif.c:109:43
 1e119b0:    10 09             	r0 += r1			  ## cfg_btif.c:109:33
 1e119b2:    31 60             	r1 = b[r0 + 3] (u)			  ## cfg_btif.c:113:5
 1e119b4:    22 60             	r2 = b[r0 + 2] (u)			  ## cfg_btif.c:113:5
 1e119b6:    13 60             	r3 = b[r0 + 1] (u)			  ## cfg_btif.c:113:5
 1e119b8:    07 60             	r7 = b[r0 + 0] (u)			  ## cfg_btif.c:113:5
 1e119ba:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## cfg_btif.c:113:5
 1e119be:    c8 fd 40 73       	r7 <= insert(r3, p:8, l:8)			  ## cfg_btif.c:113:5
 1e119c2:    d0 fd 80 72       	r7 <= insert(r2, p:16, l:16)			  ## cfg_btif.c:113:5
 1e119c6:    f7 ef 14 00       	if (r7 == -1) goto 40 <__btif_item_read+0x54 : 1e119f2 >			  ## cfg_btif.c:113:5
 1e119ca:    12 58             	r2 = h[r4 + 2] (u)			  ## cfg_btif.c:120:9
 1e119cc:    39 d5             	r1 = r7 >> 20			  ## cfg_btif.c:119:30
 1e119ce:    05 fb 0d ff       	r5 = -243 <bank_code_load_addr+0x1DC915 : 1ffff0d >			  ## cfg_btif.c:119:30
 1e119d2:    12 f2 10 10       	if (r2 != r1) goto 32 <__btif_item_read+0x58 : 1e119f6 >			  ## cfg_btif.c:119:30
 1e119d6:    46 90             	r6 = r0 + 4			  ## cfg_btif.c:124:26
 1e119d8:    60 08             	r0 = r6			  ## cfg_btif.c:124:26
 1e119da:    bf f3 e6 7c       	call -67124 <CRC16 : 1e013aa >			  ## cfg_btif.c:124:26
 1e119de:    00 04             	r0 = r0.b0 (u)			  ## cfg_btif.c:126:9
 1e119e0:    c1 05             	r1 = r7.b0 (u)			  ## cfg_btif.c:126:32
 1e119e2:    10 f2 08 10       	if (r0 != r1) goto 16 <__btif_item_read+0x58 : 1e119f6 >			  ## cfg_btif.c:126:32
 1e119e6:    1e 48             	[r4 + 4] = r6			  ## cfg_btif.c:127:25
 1e119e8:    05 70             	r5 = 0
 1e119ea:    05 18             	goto 10 <__btif_item_read+0x58 : 1e119f6 >
 1e119ec:    05 fb 0b ff       	r5 = -245 <bank_code_load_addr+0x1DC913 : 1ffff0b >
 1e119f0:    02 18             	goto 4 <__btif_item_read+0x58 : 1e119f6 >
 1e119f2:    05 fb 08 ff       	r5 = -248 <bank_code_load_addr+0x1DC910 : 1ffff08 >
 1e119f6:    50 08             	r0 = r5			  ## cfg_btif.c:132:1
 1e119f8:    57 01             	{pc, r7-r4} = [sp++]			  ## cfg_btif.c:132:1


syscfg_btif_init:
 1e119fa:    7c 01             	[--sp] = {rets, r12-r4}			  ## cfg_btif.c:334:0
 1e119fc:    e8 0b             	sp += -48			  ## cfg_btif.c:334:0
 1e119fe:    c9 ff fc 1f 00 00 	r9 = 8188 <btif_cfg : 1ffc >			  ## cfg_btif.c:334:0
 1e11a04:    90 fc 04 00       	r0 = r9 + 4			  ## cfg_btif.c:336:5
 1e11a08:    97 f3 08 aa       	call 3101712 <os_mutex_create : 106e1c >			  ## cfg_btif.c:336:5
 1e11a0c:    c0 ff 15 56 e1 01 	r0 = 31544853 <update_target_end+0x278D : 1e15615 >			  ## cfg_btif.c:320:21
 1e11a12:    62 16             	call -828 <syscfg_file_open : 1e116d8 >			  ## cfg_btif.c:320:21
 1e11a14:    04 08             	r4 = r0			  ## cfg_btif.c:320:21
 1e11a16:    4e 28             	if (r4 == 0) goto 156 <syscfg_btif_init+0xBA : 1e11ab4 >
 1e11a18:    45 a0             	r5 = sp + 4
 1e11a1a:    01 70             	r1 = 0			  ## cfg_btif.c:325:21
 1e11a1c:    42 72             	r2 = 36			  ## cfg_btif.c:325:21
 1e11a1e:    50 08             	r0 = r5			  ## cfg_btif.c:325:21
 1e11a20:    97 f3 66 aa       	call 3101900 <memset : 106ef0 >			  ## cfg_btif.c:325:21
 1e11a24:    40 08             	r0 = r4			  ## cfg_btif.c:326:5
 1e11a26:    51 08             	r1 = r5			  ## cfg_btif.c:326:5
 1e11a28:    80 f3 0d 08       	call 4122 <fget_attrs : 1e12a46 >			  ## cfg_btif.c:326:5
 1e11a2c:    30 02             	r0 = [sp+12]			  ## cfg_btif.c:327:30
 1e11a2e:    10 f6 00 90       	[r9 + 0] = r0			  ## cfg_btif.c:327:18
 1e11a32:    40 08             	r0 = r4			  ## cfg_btif.c:328:5
 1e11a34:    99 17             	call -206 <syscfg_file_close : 1e11968 >			  ## cfg_btif.c:328:5
 1e11a36:    c5 ff 88 5f e1 01 	r5 = 31547272 <btif_table+0x4 : 1e15f88 >			  ## cfg_btif.c:328:5
 1e11a3c:    60 76             	r0 = 102			  ## cfg_btif.c:328:5
 1e11a3e:    c8 ff 29 56 e1 01 	r8 = 31544873 <update_target_end+0x27A1 : 1e15629 >			  ## cfg_btif.c:328:5
 1e11a44:    cb ff 00 08 00 00 	r11 = 2048 <report_mmu_tlb_size : 800 >			  ## cfg_btif.c:328:5
 1e11a4a:    ca ff 4d 56 e1 01 	r10 = 31544909 <update_target_end+0x27C5 : 1e1564d >			  ## cfg_btif.c:328:5
 1e11a50:    cc ff 67 56 e1 01 	r12 = 31544935 <update_target_end+0x27DF : 1e15667 >			  ## cfg_btif.c:328:5
 1e11a56:    90 f5 28 00       	h[sp+40] = r0			  ## cfg_btif.c:254:22
 1e11a5a:    80 a2             	r0 = sp + 40			  ## cfg_btif.c:254:22
 1e11a5c:    a0 17             	call -192 <__btif_item_read : 1e1199e >			  ## cfg_btif.c:255:15
 1e11a5e:    00 ff 08 0f 23 00 	if (r0 == -248) goto 70 <syscfg_btif_init+0xB0 : 1e11aaa >
 1e11a64:    22 20             	if (r0 == 0) goto 68 <syscfg_btif_init+0xB0 : 1e11aaa >
 1e11a66:    03 f7 fc 5f       	r3 = h[r5 + -4] (u)			  ## cfg_btif.c:259:13
 1e11a6a:    40 70             	r0 = 4			  ## cfg_btif.c:259:13
 1e11a6c:    82 08             	r2 = r8			  ## cfg_btif.c:259:13
 1e11a6e:    bf f3 5c eb       	call -10568 <log_print : 1e0f12a >			  ## cfg_btif.c:259:13
 1e11a72:    00 f6 00 90       	r0 = [r9 + 0]			  ## cfg_btif.c:205:53
 1e11a76:    80 f3 01 08       	call 4098 <sdfile_cpu_addr2flash_addr : 1e12a7c >			  ## cfg_btif.c:205:18
 1e11a7a:    06 f9 00 b0       	r6 = b[r11 + 0] (u)			  ## cfg_btif.c:210:22
 1e11a7e:    07 08             	r7 = r0			  ## cfg_btif.c:205:18
 1e11a80:    c4 7c             	r4 = 204			  ## cfg_btif.c:210:9
 1e11a82:    16 e0 01 00       	if (r6 == 1) goto 2 <syscfg_btif_init+0x8E : 1e11a88 >
 1e11a86:    84 7c             	r4 = 200			  ## cfg_btif.c:210:9
 1e11a88:    40 08             	r0 = r4			  ## cfg_btif.c:214:5
 1e11a8a:    71 08             	r1 = r7			  ## cfg_btif.c:214:5
 1e11a8c:    bf f3 e3 7c       	call -67130 <norflash_ioctl : 1e01456 >			  ## cfg_btif.c:214:5
 1e11a90:    16 e0 05 10       	if (r6 != 1) goto 10 <syscfg_btif_init+0xA4 : 1e11a9e >			  ## cfg_btif.c:214:5
 1e11a94:    71 fc 00 01       	r1 = r7 + 256			  ## cfg_btif.c:216:52
 1e11a98:    40 08             	r0 = r4			  ## cfg_btif.c:216:9
 1e11a9a:    bf f3 dc 7c       	call -67144 <norflash_ioctl : 1e01456 >			  ## cfg_btif.c:216:9
 1e11a9e:    20 70             	r0 = 2			  ## cfg_btif.c:222:5
 1e11aa0:    0f 02             	[sp] = r7			  ## cfg_btif.c:222:5
 1e11aa2:    a2 08             	r2 = r10			  ## cfg_btif.c:222:5
 1e11aa4:    c3 08             	r3 = r12			  ## cfg_btif.c:222:5
 1e11aa6:    bf f3 40 eb       	call -10624 <log_print : 1e0f12a >			  ## cfg_btif.c:222:5
 1e11aaa:    80 f7 04 50       	r0 = h[r5 ++= 4] (u)			  ## cfg_btif.c:253:5
 1e11aae:    d3 31             	if (r0 != 0) goto -90 <syscfg_btif_init+0x5C : 1e11a56 >			  ## cfg_btif.c:253:5
 1e11ab0:    00 70             	r0 = 0
 1e11ab2:    02 18             	goto 4 <syscfg_btif_init+0xBE : 1e11ab8 >
 1e11ab4:    00 fb 0a ff       	r0 = -246 <bank_code_load_addr+0x1DC912 : 1ffff0a >
 1e11ab8:    18 0a             	sp += 48
 1e11aba:    5c 01             	{pc, r12-r4} = [sp++]			  ## cfg_btif.c:342:5


btif_eara_check_id:
 1e11abc:    c1 ff 88 5f e1 01 	r1 = 31547272 <btif_table+0x4 : 1e15f88 >			  ## cfg_btif.c:232:0
 1e11ac2:    62 76             	r2 = 102			  ## cfg_btif.c:232:0
 1e11ac4:    02 f2 05 00       	if (r2 == r0) goto 10 <btif_eara_check_id+0x16 : 1e11ad2 >			  ## cfg_btif.c:232:0
 1e11ac8:    82 f7 04 10       	r2 = h[r1 ++= 4] (u)			  ## cfg_btif.c:235:5
 1e11acc:    fb 35             	if (r2 != 0) goto -10 <btif_eara_check_id+0x8 : 1e11ac4 >			  ## cfg_btif.c:235:5
 1e11ace:    00 70             	r0 = 0
 1e11ad0:    20 00             	rts			  ## cfg_btif.c:242:5
 1e11ad2:    10 70             	r0 = 1
 1e11ad4:    20 00             	rts			  ## cfg_btif.c:242:5


btif_area_read:
 1e11ad6:    78 01             	[--sp] = {rets, r8-r4}			  ## cfg_btif.c:269:0
 1e11ad8:    fc 0b             	sp += -8			  ## cfg_btif.c:269:0
 1e11ada:    26 08             	r6 = r2			  ## cfg_btif.c:269:0
 1e11adc:    18 08             	r8 = r1			  ## cfg_btif.c:269:0
 1e11ade:    01 70             	r1 = 0			  ## cfg_btif.c:269:0
 1e11ae0:    19 02             	[sp+4] = r1			  ## cfg_btif.c:271:25
 1e11ae2:    09 02             	[sp] = r1			  ## cfg_btif.c:271:25
 1e11ae4:    90 f5 00 00       	h[sp] = r0			  ## cfg_btif.c:273:18
 1e11ae8:    c4 ff 00 20 00 00 	r4 = 8192 <btif_cfg+0x4 : 2000 >			  ## cfg_btif.c:273:18
 1e11aee:    f1 07             	r1 = -1			  ## cfg_btif.c:275:5
 1e11af0:    40 08             	r0 = r4			  ## cfg_btif.c:275:5
 1e11af2:    97 f3 97 a9       	call 3101486 <os_mutex_pend : 106e24 >			  ## cfg_btif.c:275:5
 1e11af6:    00 a0             	r0 = sp + 0			  ## cfg_btif.c:275:5
 1e11af8:    52 17             	call -348 <__btif_item_read : 1e1199e >			  ## cfg_btif.c:277:11
 1e11afa:    07 08             	r7 = r0			  ## cfg_btif.c:277:11
 1e11afc:    0c 3e             	if (r7 != 0) goto 24 <btif_area_read+0x40 : 1e11b16 >
 1e11afe:    85 f5 02 00       	r5 = h[sp+2] (u)			  ## cfg_btif.c:280:29
 1e11b02:    07 fb 0f ff       	r7 = -241 <bank_code_load_addr+0x1DC917 : 1ffff0f >			  ## cfg_btif.c:280:29
 1e11b06:    65 f2 06 80       	if (r5 > r6) goto 12 <btif_area_read+0x40 : 1e11b16 >
 1e11b0a:    11 02             	r1 = [sp+4]			  ## cfg_btif.c:283:13
 1e11b0c:    80 08             	r0 = r8			  ## cfg_btif.c:283:13
 1e11b0e:    52 08             	r2 = r5			  ## cfg_btif.c:283:13
 1e11b10:    97 f3 e8 a9       	call 3101648 <memcpy : 106ee4 >			  ## cfg_btif.c:283:13
 1e11b14:    57 08             	r7 = r5			  ## cfg_btif.c:283:13
 1e11b16:    40 08             	r0 = r4			  ## cfg_btif.c:288:5
 1e11b18:    97 f3 86 a9       	call 3101452 <os_mutex_post : 106e28 >			  ## cfg_btif.c:288:5
 1e11b1c:    70 08             	r0 = r7			  ## cfg_btif.c:290:5
 1e11b1e:    04 0a             	sp += 8			  ## cfg_btif.c:290:5
 1e11b20:    58 01             	{pc, r8-r4} = [sp++]			  ## cfg_btif.c:290:5


btif_area_write:
 1e11b22:    7e 01             	[--sp] = {rets, r14-r4}			  ## cfg_btif.c:295:0
 1e11b24:    fc 0b             	sp += -8			  ## cfg_btif.c:295:0
 1e11b26:    24 08             	r4 = r2			  ## cfg_btif.c:295:0
 1e11b28:    19 08             	r9 = r1			  ## cfg_btif.c:295:0
 1e11b2a:    05 08             	r5 = r0			  ## cfg_btif.c:295:0
 1e11b2c:    c8 ff 00 20 00 00 	r8 = 8192 <btif_cfg+0x4 : 2000 >			  ## cfg_btif.c:295:0
 1e11b32:    f1 07             	r1 = -1			  ## cfg_btif.c:301:5
 1e11b34:    80 08             	r0 = r8			  ## cfg_btif.c:301:5
 1e11b36:    97 f3 75 a9       	call 3101418 <os_mutex_pend : 106e24 >			  ## cfg_btif.c:301:5
 1e11b3a:    95 f5 00 00       	h[sp] = r5			  ## cfg_btif.c:303:18
 1e11b3e:    00 a0             	r0 = sp + 0			  ## cfg_btif.c:303:18
 1e11b40:    2e 17             	call -420 <__btif_item_read : 1e1199e >			  ## cfg_btif.c:304:11
 1e11b42:    01 ff 08 0f 50 00 	if (r0 != -248) goto 160 <btif_area_write+0xC6 : 1e11be8 >
 1e11b48:    00 a0             	r0 = sp + 0
 1e11b4a:    13 17             	call -474 <btif_cfg_get_info : 1e11972 >			  ## cfg_btif.c:146:5
 1e11b4c:    85 f5 02 00       	r5 = h[sp+2] (u)			  ## cfg_btif.c:147:16
 1e11b50:    57 08             	r7 = r5			  ## cfg_btif.c:149:17
 1e11b52:    54 f2 01 80       	if (r4 > r5) goto 2 <btif_area_write+0x36 : 1e11b58 >			  ## cfg_btif.c:149:17
 1e11b56:    47 08             	r7 = r4			  ## cfg_btif.c:149:17
 1e11b58:    4b 9a             	r11 = r5 + 4			  ## cfg_btif.c:151:37
 1e11b5a:    b0 08             	r0 = r11			  ## cfg_btif.c:152:16
 1e11b5c:    bf f3 2b ef       	call -8618 <malloc : 1e0f9b6 >			  ## cfg_btif.c:152:16
 1e11b60:    06 08             	r6 = r0			  ## cfg_btif.c:152:16
 1e11b62:    48 2c             	if (r6 == 0) goto 144 <btif_area_write+0xD2 : 1e11bf4 >
 1e11b64:    c0 ff 15 56 e1 01 	r0 = 31544853 <update_target_end+0x278D : 1e15615 >			  ## cfg_btif.c:157:21
 1e11b6a:    b6 15             	call -1172 <syscfg_file_open : 1e116d8 >			  ## cfg_btif.c:157:21
 1e11b6c:    0a 08             	r10 = r0			  ## cfg_btif.c:157:21
 1e11b6e:    45 20             	if (r0 == 0) goto 138 <btif_area_write+0xD8 : 1e11bfa >
 1e11b70:    01 70             	r1 = 0			  ## cfg_btif.c:164:5
 1e11b72:    60 08             	r0 = r6			  ## cfg_btif.c:164:5
 1e11b74:    b2 08             	r2 = r11			  ## cfg_btif.c:164:5
 1e11b76:    97 f3 bb a9       	call 3101558 <memset : 106ef0 >			  ## cfg_btif.c:164:5
 1e11b7a:    80 f5 00 00       	r0 = h[sp] (u)			  ## cfg_btif.c:167:18
 1e11b7e:    00 c2             	r0 = r0 << 8			  ## cfg_btif.c:167:18
 1e11b80:    c1 ff 00 ff 0f 00 	r1 = 1048320 <text_size+0xDF050 : fff00 >			  ## cfg_btif.c:168:19
 1e11b86:    50 b3             	r0 &= r1			  ## cfg_btif.c:168:19
 1e11b88:    cc fd a0 05       	r0 <= insert(r5, p:20, l:12)			  ## cfg_btif.c:168:19
 1e11b8c:    08 6c             	b[r6 + 0] = r0			  ## cfg_btif.c:169:5
 1e11b8e:    f2 fd c0 c0       	r12 = r0 >> 24			  ## cfg_btif.c:169:5
 1e11b92:    1c f9 03 60       	b[r6 + 3] = r12			  ## cfg_btif.c:169:5
 1e11b96:    f2 fd 80 d0       	r13 = r0 >> 16			  ## cfg_btif.c:169:5
 1e11b9a:    1d f9 02 60       	b[r6 + 2] = r13			  ## cfg_btif.c:169:5
 1e11b9e:    f2 fd 40 e0       	r14 = r0 >> 8			  ## cfg_btif.c:169:5
 1e11ba2:    1e f9 01 60       	b[r6 + 1] = r14			  ## cfg_btif.c:169:5
 1e11ba6:    44 9c             	r4 = r6 + 4			  ## cfg_btif.c:170:21
 1e11ba8:    40 08             	r0 = r4			  ## cfg_btif.c:170:5
 1e11baa:    91 08             	r1 = r9			  ## cfg_btif.c:170:5
 1e11bac:    72 08             	r2 = r7			  ## cfg_btif.c:170:5
 1e11bae:    97 f3 99 a9       	call 3101490 <memcpy : 106ee4 >			  ## cfg_btif.c:170:5
 1e11bb2:    31 fd f0 5a       	r1 = r5 & 4294905855			  ## cfg_btif.c:172:21
 1e11bb6:    40 08             	r0 = r4			  ## cfg_btif.c:172:21
 1e11bb8:    bf f3 f7 7b       	call -67602 <CRC16 : 1e013aa >			  ## cfg_btif.c:172:21
 1e11bbc:    1c f9 03 60       	b[r6 + 3] = r12			  ## cfg_btif.c:174:5
 1e11bc0:    1d f9 02 60       	b[r6 + 2] = r13			  ## cfg_btif.c:174:5
 1e11bc4:    1e f9 01 60       	b[r6 + 1] = r14			  ## cfg_btif.c:174:5
 1e11bc8:    08 6c             	b[r6 + 0] = r0			  ## cfg_btif.c:174:5
 1e11bca:    11 02             	r1 = [sp+4]			  ## cfg_btif.c:176:31
 1e11bcc:    02 70             	r2 = 0			  ## cfg_btif.c:176:5
 1e11bce:    a0 08             	r0 = r10			  ## cfg_btif.c:176:5
 1e11bd0:    80 f3 af 06       	call 3422 <fseek : 1e12932 >			  ## cfg_btif.c:176:5
 1e11bd4:    a0 08             	r0 = r10			  ## cfg_btif.c:178:11
 1e11bd6:    61 08             	r1 = r6			  ## cfg_btif.c:178:11
 1e11bd8:    b2 08             	r2 = r11			  ## cfg_btif.c:178:11
 1e11bda:    80 f3 d0 06       	call 3488 <fwrite : 1e1297e >			  ## cfg_btif.c:178:11
 1e11bde:    b0 f2 0e 00       	if (r0 == r11) goto 28 <btif_area_write+0xDC : 1e11bfe >
 1e11be2:    07 fb 0e ff       	r7 = -242 <bank_code_load_addr+0x1DC916 : 1ffff0e >
 1e11be6:    0b 18             	goto 22 <btif_area_write+0xDC : 1e11bfe >
 1e11be8:    80 08             	r0 = r8			  ## cfg_btif.c:307:9
 1e11bea:    97 f3 1d a9       	call 3101242 <os_mutex_post : 106e28 >			  ## cfg_btif.c:307:9
 1e11bee:    07 fb 09 ff       	r7 = -247 <bank_code_load_addr+0x1DC911 : 1ffff09 >			  ## cfg_btif.c:307:9
 1e11bf2:    0d 18             	goto 26 <btif_area_write+0xEC : 1e11c0e >			  ## cfg_btif.c:307:9
 1e11bf4:    07 fb 10 ff       	r7 = -240 <bank_code_load_addr+0x1DC918 : 1ffff10 >
 1e11bf8:    07 18             	goto 14 <btif_area_write+0xE6 : 1e11c08 >
 1e11bfa:    07 fb 0a ff       	r7 = -246 <bank_code_load_addr+0x1DC912 : 1ffff0a >
 1e11bfe:    60 08             	r0 = r6			  ## cfg_btif.c:188:9
 1e11c00:    bf f3 04 ef       	call -8696 <free : 1e0fa0c >			  ## cfg_btif.c:188:9
 1e11c04:    a0 08             	r0 = r10			  ## cfg_btif.c:190:5
 1e11c06:    b0 16             	call -672 <syscfg_file_close : 1e11968 >			  ## cfg_btif.c:190:5
 1e11c08:    80 08             	r0 = r8			  ## cfg_btif.c:313:5
 1e11c0a:    97 f3 0d a9       	call 3101210 <os_mutex_post : 106e28 >			  ## cfg_btif.c:313:5
 1e11c0e:    70 08             	r0 = r7			  ## cfg_btif.c:316:1
 1e11c10:    04 0a             	sp += 8			  ## cfg_btif.c:316:1
 1e11c12:    5e 01             	{pc, r14-r4} = [sp++]			  ## cfg_btif.c:316:1


app_core_event_handler:
 1e11c14:    34 00             	[--sp] = rets			  ## app_core.c:73:0
 1e11c16:    c3 ff 54 08 00 00 	r3 = 2132 <head : 854 >			  ## list.h:124:18
 1e11c1c:    02 46             	r2 = [r3 + 0]			  ## list.h:124:18
 1e11c1e:    01 08             	r1 = r0			  ## list.h:124:18
 1e11c20:    32 f2 06 00       	if (r2 == r3) goto 12 <app_core_event_handler+0x1C : 1e11c30 >
 1e11c24:    30 44             	r0 = [r2 + 12]			  ## app_core.c:80:18
 1e11c26:    13 40             	r3 = [r0 + 4]			  ## app_core.c:80:23
 1e11c28:    03 26             	if (r3 == 0) goto 6 <app_core_event_handler+0x1C : 1e11c30 >			  ## app_core.c:80:23
 1e11c2a:    20 fc f0 ff       	r0 = r2 + -16			  ## app_core.c:79:15
 1e11c2e:    83 00             	call r3			  ## app_core.c:81:17
 1e11c30:    30 00             	pc = [sp++]			  ## app_core.c:88:1


__start_app:
 1e11c32:    7d 01             	[--sp] = {rets, r13-r4}			  ## app_core.c:195:0
 1e11c34:    09 08             	r9 = r0			  ## app_core.c:195:0
 1e11c36:    c8 ff 28 1e 00 00 	r8 = 7720 <report_data_code_size : 1e28 >			  ## app_core.c:195:0
 1e11c3c:    01 70             	r1 = 0			  ## app_core.c:199:5
 1e11c3e:    0d 70             	r13 = 0			  ## app_core.c:199:5
 1e11c40:    80 08             	r0 = r8			  ## app_core.c:199:5
 1e11c42:    97 f3 ef a8       	call 3101150 <os_mutex_pend : 106e24 >			  ## app_core.c:199:5
 1e11c46:    ca ff 54 08 00 00 	r10 = 2132 <head : 854 >			  ## app_core.c:199:5
 1e11c4c:    01 f6 00 a0       	r1 = [r10 + 0]			  ## list.h:124:18
 1e11c50:    10 fc f0 ff       	r0 = r1 + -16			  ## app_core.c:202:15
 1e11c54:    a1 f2 01 00       	if (r1 == r10) goto 2 <__start_app+0x28 : 1e11c5a >
 1e11c58:    0d 08             	r13 = r0			  ## app_core.c:201:9
 1e11c5a:    04 f6 04 90       	r4 = [r9 + 4]			  ## app_core.c:213:17
 1e11c5e:    c0 ff 01 2c 1b 0a 	r0 = 169552897 <uECC_vli_cmp_unsafe+0xABC05 : 1b2c01 >			  ## app_core.c:213:5
 1e11c64:    04 f2 37 00       	if (r4 == r0) goto 110 <__start_app+0xA4 : 1e11cd6 >			  ## app_core.c:213:5
 1e11c68:    0b fc ff ff       	r11 = r0 + -1
 1e11c6c:    b4 f2 3f 10       	if (r4 != r11) goto 126 <__start_app+0xBC : 1e11cee >
 1e11c70:    0d e0 57 00       	if (r13 == 0) goto 174 <__start_app+0xF0 : 1e11d22 >
 1e11c74:    00 f6 10 d0       	r0 = [r13 + 16]			  ## list.h:171:36
 1e11c78:    01 f6 14 d0       	r1 = [r13 + 20]			  ## list.h:171:23
 1e11c7c:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e11c7e:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e11c80:    d0 fc 10 00       	r0 = r13 + 16			  ## app_core.c:220:24
 1e11c84:    10 f6 10 d0       	[r13 + 16] = r0			  ## list.h:172:17
 1e11c88:    10 f6 14 d0       	[r13 + 20] = r0			  ## list.h:173:17
 1e11c8c:    00 f6 1c d0       	r0 = [r13 + 28]			  ## app_core.c:221:14
 1e11c90:    03 40             	r3 = [r0 + 0]			  ## app_core.c:221:19
 1e11c92:    41 70             	r1 = 4			  ## app_core.c:221:9
 1e11c94:    02 70             	r2 = 0			  ## app_core.c:221:9
 1e11c96:    0c 70             	r12 = 0			  ## app_core.c:221:9
 1e11c98:    d0 08             	r0 = r13			  ## app_core.c:221:9
 1e11c9a:    83 00             	call r3			  ## app_core.c:221:9
 1e11c9c:    00 f6 1c d0       	r0 = [r13 + 28]			  ## app_core.c:222:14
 1e11ca0:    03 40             	r3 = [r0 + 0]			  ## app_core.c:222:19
 1e11ca2:    51 70             	r1 = 5			  ## app_core.c:222:9
 1e11ca4:    02 70             	r2 = 0			  ## app_core.c:222:9
 1e11ca6:    54 70             	r4 = 5			  ## app_core.c:222:9
 1e11ca8:    d0 08             	r0 = r13			  ## app_core.c:222:9
 1e11caa:    83 00             	call r3			  ## app_core.c:222:9
 1e11cac:    14 f9 00 d0       	b[r13 + 0] = r4			  ## app_core.c:223:20
 1e11cb0:    00 f6 00 a0       	r0 = [r10 + 0]			  ## list.h:124:18
 1e11cb4:    a0 f2 85 00       	if (r0 == r10) goto 266 <__start_app+0x190 : 1e11dc2 >			  ## list.h:124:18
 1e11cb8:    07 fc f0 ff       	r7 = r0 + -16			  ## app_core.c:228:15
 1e11cbc:    00 6e             	r0 = b[r7 + 0] (u)			  ## app_core.c:259:18
 1e11cbe:    20 e0 43 00       	if (r0 == 2) goto 134 <__start_app+0x116 : 1e11d48 >			  ## app_core.c:259:5
 1e11cc2:    50 e0 4c 10       	if (r0 != 5) goto 152 <__start_app+0x12C : 1e11d5e >
 1e11cc6:    70 4e             	r0 = [r7 + 28]			  ## app_core.c:261:20
 1e11cc8:    03 40             	r3 = [r0 + 0]			  ## app_core.c:261:25
 1e11cca:    01 70             	r1 = 0			  ## app_core.c:261:15
 1e11ccc:    02 70             	r2 = 0			  ## app_core.c:261:15
 1e11cce:    70 08             	r0 = r7			  ## app_core.c:261:15
 1e11cd0:    83 00             	call r3			  ## app_core.c:261:15
 1e11cd2:    0c 08             	r12 = r0			  ## app_core.c:261:15
 1e11cd4:    42 18             	goto 132 <__start_app+0x128 : 1e11d5a >
 1e11cd6:    00 f6 1c d0       	r0 = [r13 + 28]			  ## app_core.c:231:14
 1e11cda:    03 40             	r3 = [r0 + 0]			  ## app_core.c:231:19
 1e11cdc:    44 70             	r4 = 4			  ## app_core.c:231:19
 1e11cde:    41 70             	r1 = 4			  ## app_core.c:231:9
 1e11ce0:    02 70             	r2 = 0			  ## app_core.c:231:9
 1e11ce2:    0c 70             	r12 = 0			  ## app_core.c:231:9
 1e11ce4:    d0 08             	r0 = r13			  ## app_core.c:231:9
 1e11ce6:    83 00             	call r3			  ## app_core.c:231:9
 1e11ce8:    14 f9 00 d0       	b[r13 + 0] = r4			  ## app_core.c:232:20
 1e11cec:    6a 18             	goto 212 <__start_app+0x190 : 1e11dc2 >			  ## app_core.c:232:20
 1e11cee:    c5 ff e8 09 00 00 	r5 = 2536 <system_data_end : 9e8 >
 1e11cf4:    c7 ff c8 09 00 00 	r7 = 2504 <system_data_start : 9c8 >
 1e11cfa:    ac 06             	r12 = -22
 1e11cfc:    57 f2 61 20       	if (r7 >= r5) goto 194 <__start_app+0x190 : 1e11dc2 >
 1e11d00:    06 f6 00 90       	r6 = [r9 + 0]
 1e11d04:    06 2c             	if (r6 == 0) goto 12 <__start_app+0xE0 : 1e11d12 >			  ## app_core.c:178:13
 1e11d06:    30 4e             	r0 = [r7 + 12]			  ## app_core.c:179:28
 1e11d08:    61 08             	r1 = r6			  ## app_core.c:179:18
 1e11d0a:    97 f3 f3 a8       	call 3101158 <strcmp : 106ef4 >			  ## app_core.c:179:18
 1e11d0e:    05 30             	if (r0 != 0) goto 10 <__start_app+0xE8 : 1e11d1a >			  ## app_core.c:179:18
 1e11d10:    0a 18             	goto 20 <__start_app+0xF4 : 1e11d26 >			  ## app_core.c:179:18
 1e11d12:    10 4e             	r0 = [r7 + 4]			  ## app_core.c:183:20
 1e11d14:    50 b9             	r0 &= r4			  ## app_core.c:183:27
 1e11d16:    00 d3             	r0 = r0 >> 12			  ## app_core.c:183:17
 1e11d18:    06 30             	if (r0 != 0) goto 12 <__start_app+0xF4 : 1e11d26 >			  ## app_core.c:183:17
 1e11d1a:    07 82             	r7 += 32			  ## app_core.c:177:5
 1e11d1c:    57 f2 f2 3f       	if (r7 < r5) goto -28 <__start_app+0xD2 : 1e11d04 >
 1e11d20:    50 18             	goto 160 <__start_app+0x190 : 1e11dc2 >
 1e11d22:    ac 06             	r12 = -22
 1e11d24:    4e 18             	goto 156 <__start_app+0x190 : 1e11dc2 >
 1e11d26:    7d f2 44 00       	if (r13 == r7) goto 136 <__start_app+0x180 : 1e11db2 >
 1e11d2a:    0d e0 c7 0f       	if (r13 == 0) goto -114 <__start_app+0x8A : 1e11cbc >
 1e11d2e:    00 f6 1c d0       	r0 = [r13 + 28]			  ## app_core.c:247:24
 1e11d32:    03 40             	r3 = [r0 + 0]			  ## app_core.c:247:29
 1e11d34:    21 70             	r1 = 2			  ## app_core.c:247:19
 1e11d36:    24 70             	r4 = 2			  ## app_core.c:247:19
 1e11d38:    d0 08             	r0 = r13			  ## app_core.c:247:19
 1e11d3a:    92 08             	r2 = r9			  ## app_core.c:247:19
 1e11d3c:    83 00             	call r3			  ## app_core.c:247:19
 1e11d3e:    0c 08             	r12 = r0			  ## app_core.c:247:19
 1e11d40:    40 30             	if (r0 != 0) goto 128 <__start_app+0x190 : 1e11dc2 >
 1e11d42:    14 f9 00 d0       	b[r13 + 0] = r4			  ## app_core.c:252:24
 1e11d46:    ba 1f             	goto -140 <__start_app+0x8A : 1e11cbc >			  ## app_core.c:252:24
 1e11d48:    70 4e             	r0 = [r7 + 28]			  ## app_core.c:264:20
 1e11d4a:    03 40             	r3 = [r0 + 0]			  ## app_core.c:264:25
 1e11d4c:    31 70             	r1 = 3			  ## app_core.c:264:15
 1e11d4e:    02 70             	r2 = 0			  ## app_core.c:264:15
 1e11d50:    70 08             	r0 = r7			  ## app_core.c:264:15
 1e11d52:    83 00             	call r3			  ## app_core.c:264:15
 1e11d54:    0c 08             	r12 = r0			  ## app_core.c:264:15
 1e11d56:    10 70             	r0 = 1			  ## app_core.c:265:20
 1e11d58:    08 6e             	b[r7 + 0] = r0			  ## app_core.c:265:20
 1e11d5a:    0c e0 0c 10       	if (r12 != 0) goto 24 <__start_app+0x144 : 1e11d76 >
 1e11d5e:    00 f6 04 90       	r0 = [r9 + 4]			  ## app_core.c:270:17
 1e11d62:    b0 f2 15 00       	if (r0 == r11) goto 42 <__start_app+0x15E : 1e11d90 >			  ## app_core.c:270:17
 1e11d66:    70 4e             	r0 = [r7 + 28]			  ## app_core.c:273:24
 1e11d68:    03 40             	r3 = [r0 + 0]			  ## app_core.c:273:29
 1e11d6a:    11 70             	r1 = 1			  ## app_core.c:273:19
 1e11d6c:    70 08             	r0 = r7			  ## app_core.c:273:19
 1e11d6e:    92 08             	r2 = r9			  ## app_core.c:273:19
 1e11d70:    83 00             	call r3			  ## app_core.c:273:19
 1e11d72:    0c 08             	r12 = r0			  ## app_core.c:273:19
 1e11d74:    0d 20             	if (r0 == 0) goto 26 <__start_app+0x15E : 1e11d90 >
 1e11d76:    0d e0 24 00       	if (r13 == 0) goto 72 <__start_app+0x190 : 1e11dc2 >
 1e11d7a:    00 f6 1c d0       	r0 = [r13 + 28]			  ## app_core.c:279:18
 1e11d7e:    03 40             	r3 = [r0 + 0]			  ## app_core.c:279:23
 1e11d80:    31 70             	r1 = 3			  ## app_core.c:279:13
 1e11d82:    02 70             	r2 = 0			  ## app_core.c:279:13
 1e11d84:    d0 08             	r0 = r13			  ## app_core.c:279:13
 1e11d86:    83 00             	call r3			  ## app_core.c:279:13
 1e11d88:    10 70             	r0 = 1			  ## app_core.c:280:24
 1e11d8a:    10 f9 00 d0       	b[r13 + 0] = r0			  ## app_core.c:280:24
 1e11d8e:    19 18             	goto 50 <__start_app+0x190 : 1e11dc2 >			  ## app_core.c:280:24
 1e11d90:    10 70             	r0 = 1			  ## app_core.c:285:16
 1e11d92:    08 6e             	b[r7 + 0] = r0			  ## app_core.c:285:16
 1e11d94:    40 4e             	r0 = [r7 + 16]			  ## list.h:171:36
 1e11d96:    51 4e             	r1 = [r7 + 20]			  ## list.h:171:23
 1e11d98:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e11d9a:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e11d9c:    00 f6 00 a0       	r0 = [r10 + 0]			  ## list.h:219:33
 1e11da0:    01 9f             	r1 = r7 + 16			  ## app_core.c:287:20
 1e11da2:    19 40             	[r0 + 4] = r1			  ## list.h:137:16
 1e11da4:    48 4e             	[r7 + 16] = r0			  ## list.h:138:16
 1e11da6:    1a f6 14 70       	[r7 + 20] = r10			  ## list.h:139:16
 1e11daa:    11 f6 00 a0       	[r10 + 0] = r1			  ## list.h:140:16
 1e11dae:    0c 70             	r12 = 0			  ## list.h:140:16
 1e11db0:    08 18             	goto 16 <__start_app+0x190 : 1e11dc2 >
 1e11db2:    00 f6 1c d0       	r0 = [r13 + 28]			  ## app_core.c:243:24
 1e11db6:    03 40             	r3 = [r0 + 0]			  ## app_core.c:243:29
 1e11db8:    11 70             	r1 = 1			  ## app_core.c:243:19
 1e11dba:    d0 08             	r0 = r13			  ## app_core.c:243:19
 1e11dbc:    92 08             	r2 = r9			  ## app_core.c:243:19
 1e11dbe:    83 00             	call r3			  ## app_core.c:243:19
 1e11dc0:    0c 08             	r12 = r0			  ## app_core.c:243:19
 1e11dc2:    80 08             	r0 = r8			  ## app_core.c:292:5
 1e11dc4:    97 f3 30 a8       	call 3100768 <os_mutex_post : 106e28 >			  ## app_core.c:292:5
 1e11dc8:    c0 08             	r0 = r12			  ## app_core.c:294:5
 1e11dca:    5d 01             	{pc, r13-r4} = [sp++]			  ## app_core.c:294:5


start_app:
 1e11dcc:    76 01             	[--sp] = {rets, r6-r4}			  ## app_core.c:298:0
 1e11dce:    f4 0b             	sp += -24			  ## app_core.c:298:0
 1e11dd0:    06 08             	r6 = r0			  ## app_core.c:298:0
 1e11dd2:    20 07             	r0 = -14			  ## app_core.c:299:9
 1e11dd4:    58 02             	[sp+20] = r0			  ## app_core.c:299:9
 1e11dd6:    8f f3 27 8a       	call 2036814 <os_current_task : 3228 >			  ## app_core.c:304:17
 1e11dda:    c4 ff 03 58 e1 01 	r4 = 31545347 <update_target_end+0x297B : 1e15803 >			  ## app_core.c:304:17
 1e11de0:    41 08             	r1 = r4			  ## app_core.c:304:10
 1e11de2:    97 f3 87 a8       	call 3100942 <strcmp : 106ef4 >			  ## app_core.c:304:10
 1e11de6:    3b 20             	if (r0 == 0) goto 118 <start_app+0x92 : 1e11e5e >			  ## app_core.c:304:10
 1e11de8:    00 75             	r0 = 80			  ## app_core.c:308:19
 1e11dea:    bf f3 e4 ed       	call -9272 <malloc : 1e0f9b6 >			  ## app_core.c:308:19
 1e11dee:    05 08             	r5 = r0			  ## app_core.c:308:19
 1e11df0:    02 3a             	if (r5 != 0) goto 4 <start_app+0x2A : 1e11df6 >			  ## app_core.c:308:19
 1e11df2:    8f f3 f5 8a       	call 2037226 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e11df6:    01 70             	r1 = 0			  ## app_core.c:310:5
 1e11df8:    50 08             	r0 = r5			  ## app_core.c:310:5
 1e11dfa:    97 f3 01 a8       	call 3100674 <os_sem_create : 106e00 >			  ## app_core.c:310:5
 1e11dfe:    00 72             	r0 = 32			  ## app_core.c:312:12
 1e11e00:    08 02             	[sp] = r0			  ## app_core.c:312:12
 1e11e02:    1e 02             	[sp+4] = r6			  ## app_core.c:313:12
 1e11e04:    2d 02             	[sp+8] = r5			  ## app_core.c:314:12
 1e11e06:    40 a1             	r0 = sp + 20			  ## app_core.c:314:12
 1e11e08:    38 02             	[sp+12] = r0			  ## app_core.c:315:12
 1e11e0a:    c6 ff 78 1e 00 00 	r6 = 7800 <start_app.app_msg_type : 1e78 >			  ## app_core.c:315:12
 1e11e10:    03 18             	goto 6 <start_app+0x4C : 1e11e18 >			  ## app_core.c:315:12
 1e11e12:    10 70             	r0 = 1			  ## app_core.c:320:13
 1e11e14:    97 f3 d0 a7       	call 3100576 <os_time_dly : 106db8 >			  ## app_core.c:320:13
 1e11e18:    00 5c             	r0 = h[r6 + 0] (u)			  ## app_core.c:318:55
 1e11e1a:    01 fd 40 0b       	r1 = r0 | 4194304			  ## app_core.c:318:53
 1e11e1e:    03 a0             	r3 = sp + 0			  ## app_core.c:318:53
 1e11e20:    42 70             	r2 = 4			  ## app_core.c:318:15
 1e11e22:    40 08             	r0 = r4			  ## app_core.c:318:15
 1e11e24:    97 f3 dc a7       	call 3100600 <os_taskq_post_type : 106de0 >			  ## app_core.c:318:15
 1e11e28:    50 e1 f3 0f       	if (r0 == 21) goto -26 <start_app+0x46 : 1e11e12 >			  ## app_core.c:319:13
 1e11e2c:    14 30             	if (r0 != 0) goto 40 <start_app+0x8A : 1e11e56 >
 1e11e2e:    81 7c             	r1 = 200			  ## app_core.c:328:23
 1e11e30:    50 08             	r0 = r5			  ## app_core.c:328:23
 1e11e32:    97 f3 e9 a7       	call 3100626 <os_sem_pend : 106e08 >			  ## app_core.c:328:23
 1e11e36:    0c 20             	if (r0 == 0) goto 24 <start_app+0x84 : 1e11e50 >
 1e11e38:    00 5c             	r0 = h[r6 + 0] (u)			  ## app_core.c:332:66
 1e11e3a:    01 fd 40 0b       	r1 = r0 | 4194304			  ## app_core.c:332:64
 1e11e3e:    40 08             	r0 = r4			  ## app_core.c:332:27
 1e11e40:    97 f3 dc a7       	call 3100600 <os_taskq_del_type : 106dfc >			  ## app_core.c:332:27
 1e11e44:    05 20             	if (r0 == 0) goto 10 <start_app+0x84 : 1e11e50 >
 1e11e46:    01 70             	r1 = 0			  ## app_core.c:334:31
 1e11e48:    50 08             	r0 = r5			  ## app_core.c:334:31
 1e11e4a:    97 f3 dd a7       	call 3100602 <os_sem_pend : 106e08 >			  ## app_core.c:334:31
 1e11e4e:    ef 31             	if (r0 != 0) goto -34 <start_app+0x62 : 1e11e2e >
 1e11e50:    50 08             	r0 = r5			  ## app_core.c:338:13
 1e11e52:    bf f3 db ed       	call -9290 <free : 1e0fa0c >			  ## app_core.c:338:13
 1e11e56:    00 5c             	r0 = h[r6 + 0] (u)			  ## app_core.c:343:17
 1e11e58:    10 80             	r0 += 1			  ## app_core.c:343:17
 1e11e5a:    08 5c             	h[r6 + 0] = r0			  ## app_core.c:343:17
 1e11e5c:    02 18             	goto 4 <start_app+0x96 : 1e11e62 >			  ## app_core.c:343:17
 1e11e5e:    60 08             	r0 = r6			  ## app_core.c:305:16
 1e11e60:    e8 16             	call -560 <__start_app : 1e11c32 >			  ## app_core.c:305:16
 1e11e62:    0c 0a             	sp += 24
 1e11e64:    56 01             	{pc, r6-r4} = [sp++]


app_core_msg_handler:
 1e11e66:    74 01             	[--sp] = {rets, r4}			  ## app_core.c:91:0
 1e11e68:    04 08             	r4 = r0			  ## app_core.c:91:0
 1e11e6a:    10 48             	r0 = [r4 + 4]			  ## app_core.c:92:9
 1e11e6c:    00 e2 07 10       	if (r0 != 32) goto 14 <app_core_msg_handler+0x18 : 1e11e7e >			  ## app_core.c:92:9
 1e11e70:    20 48             	r0 = [r4 + 8]			  ## app_core.c:93:55
 1e11e72:    df 16             	call -578 <__start_app : 1e11c32 >			  ## app_core.c:93:26
 1e11e74:    41 48             	r1 = [r4 + 16]			  ## app_core.c:93:17
 1e11e76:    08 42             	[r1 + 0] = r0			  ## app_core.c:93:24
 1e11e78:    30 48             	r0 = [r4 + 12]			  ## app_core.c:94:31
 1e11e7a:    97 f3 c7 a7       	call 3100558 <os_sem_post : 106e0c >			  ## app_core.c:94:9
 1e11e7e:    54 01             	{pc, r4} = [sp++]			  ## app_core.c:116:1


sdfile_version:
 1e11e80:    20 fb 02 0b       	r0 = 131072			  ## sdfile_new.c:24:0
 1e11e84:    20 00             	rts			  ## sdfile_new.c:24:1


sdfile_strcase_cmp:
 1e11e86:    75 01             	[--sp] = {rets, r5, r4}			  ## sdfile_new.c:205:0
 1e11e88:    ee 0b             	sp += -36			  ## sdfile_new.c:205:0
 1e11e8a:    14 08             	r4 = r1			  ## sdfile_new.c:205:0
 1e11e8c:    01 08             	r1 = r0			  ## sdfile_new.c:205:0
 1e11e8e:    05 70             	r5 = 0			  ## sdfile_new.c:205:0
 1e11e90:    d5 f5 23 00       	b[sp+35] = r5			  ## sdfile_new.c:210:5
 1e11e94:    30 a1             	r0 = sp + 19			  ## sdfile_new.c:210:5
 1e11e96:    02 71             	r2 = 16			  ## sdfile_new.c:210:5
 1e11e98:    97 f3 24 a8       	call 3100744 <memcpy : 106ee4 >			  ## sdfile_new.c:210:5
 1e11e9c:    d5 f5 12 00       	b[sp+18] = r5			  ## sdfile_new.c:211:5
 1e11ea0:    20 a0             	r0 = sp + 2			  ## sdfile_new.c:211:5
 1e11ea2:    02 71             	r2 = 16			  ## sdfile_new.c:211:5
 1e11ea4:    41 08             	r1 = r4			  ## sdfile_new.c:211:5
 1e11ea6:    97 f3 1d a8       	call 3100730 <memcpy : 106ee4 >			  ## sdfile_new.c:211:5
 1e11eaa:    30 a1             	r0 = sp + 19
 1e11eac:    00 fa 00 05       	r0 = b[r0+r5] (u)			  ## sdfile_new.c:169:14
 1e11eb0:    01 fc 9f ff       	r1 = r0 + -97			  ## sdfile_new.c:169:27
 1e11eb4:    41 04             	r1 = r1.b0 (u)			  ## sdfile_new.c:169:27
 1e11eb6:    91 e1 04 80       	if (r1 > 25) goto 8 <sdfile_strcase_cmp+0x3C : 1e11ec2 >			  ## sdfile_new.c:169:27
 1e11eba:    00 8e             	r0 += -32			  ## sdfile_new.c:170:31
 1e11ebc:    31 a1             	r1 = sp + 19			  ## sdfile_new.c:170:31
 1e11ebe:    10 fa 00 15       	b[r1+r5] = r0			  ## sdfile_new.c:170:18
 1e11ec2:    15 80             	r5 += 1			  ## sdfile_new.c:168:5
 1e11ec4:    05 e1 f1 1f       	if (r5 != 16) goto -30 <sdfile_strcase_cmp+0x24 : 1e11eaa >			  ## sdfile_new.c:168:5
 1e11ec8:    00 70             	r0 = 0
 1e11eca:    21 a0             	r1 = sp + 2
 1e11ecc:    01 fa 00 10       	r1 = b[r1+r0] (u)			  ## sdfile_new.c:169:14
 1e11ed0:    12 fc 9f ff       	r2 = r1 + -97			  ## sdfile_new.c:169:27
 1e11ed4:    82 04             	r2 = r2.b0 (u)			  ## sdfile_new.c:169:27
 1e11ed6:    92 e1 04 80       	if (r2 > 25) goto 8 <sdfile_strcase_cmp+0x5C : 1e11ee2 >			  ## sdfile_new.c:169:27
 1e11eda:    01 8e             	r1 += -32			  ## sdfile_new.c:170:31
 1e11edc:    22 a0             	r2 = sp + 2			  ## sdfile_new.c:170:31
 1e11ede:    11 fa 00 20       	b[r2+r0] = r1			  ## sdfile_new.c:170:18
 1e11ee2:    10 80             	r0 += 1			  ## sdfile_new.c:168:5
 1e11ee4:    00 e1 f1 1f       	if (r0 != 16) goto -30 <sdfile_strcase_cmp+0x44 : 1e11eca >			  ## sdfile_new.c:168:5
 1e11ee8:    00 70             	r0 = 0
 1e11eea:    01 7f             	r1 = 240
 1e11eec:    32 a1             	r2 = sp + 19
 1e11eee:    23 a0             	r3 = sp + 2
 1e11ef0:    84 f9 01 20       	r4 = b[r2 ++= 1] (u)
 1e11ef4:    60 ff ff 09 06 00 	if ((r0 & 255) == 0) goto 12 <sdfile_strcase_cmp+0x80 : 1e11f06 >			  ## sdfile_new.c:181:13
 1e11efa:    05 70             	r5 = 0			  ## sdfile_new.c:182:17
 1e11efc:    e4 e2 01 00       	if (r4 == 46) goto 2 <sdfile_strcase_cmp+0x7C : 1e11f02 >			  ## sdfile_new.c:182:17
 1e11f00:    05 08             	r5 = r0			  ## sdfile_new.c:182:17
 1e11f02:    50 08             	r0 = r5
 1e11f04:    09 18             	goto 18 <sdfile_strcase_cmp+0x92 : 1e11f18 >
 1e11f06:    05 66             	r5 = b[r3 + 0] (u)			  ## sdfile_new.c:185:28
 1e11f08:    54 f2 03 10       	if (r4 != r5) goto 6 <sdfile_strcase_cmp+0x8C : 1e11f12 >			  ## sdfile_new.c:185:28
 1e11f0c:    00 70             	r0 = 0
 1e11f0e:    04 38             	if (r4 != 0) goto 8 <sdfile_strcase_cmp+0x92 : 1e11f18 >
 1e11f10:    09 18             	goto 18 <sdfile_strcase_cmp+0x9E : 1e11f24 >
 1e11f12:    10 70             	r0 = 1
 1e11f14:    a5 e2 08 10       	if (r5 != 42) goto 16 <sdfile_strcase_cmp+0xA2 : 1e11f28 >
 1e11f18:    11 80             	r1 += 1			  ## sdfile_new.c:180:5
 1e11f1a:    13 80             	r3 += 1			  ## sdfile_new.c:198:12
 1e11f1c:    61 ff ff 19 e7 ff 	if ((r1 & 255) != 0) goto -50 <sdfile_strcase_cmp+0x6A : 1e11ef0 >
 1e11f22:    00 70             	r0 = 0
 1e11f24:    12 0a             	sp += 36
 1e11f26:    55 01             	{pc, r5, r4} = [sp++]			  ## sdfile_new.c:218:5
 1e11f28:    00 70             	r0 = 0
 1e11f2a:    f5 e3 fb 0f       	if (r5 == 63) goto -10 <sdfile_strcase_cmp+0x9E : 1e11f24 >
 1e11f2e:    f0 07             	r0 = -1
 1e11f30:    f9 1f             	goto -14 <sdfile_strcase_cmp+0x9E : 1e11f24 >


__sdfile_get_part_addr:
 1e11f32:    79 01             	[--sp] = {rets, r9-r4}			  ## sdfile_new.c:251:0
 1e11f34:    f0 0b             	sp += -32			  ## sdfile_new.c:251:0
 1e11f36:    c1 ff a0 22 00 00 	r1 = 8864 <_sdfile_handl : 22a0 >			  ## sdfile_new.c:253:29
 1e11f3c:    15 42             	r5 = [r1 + 4]			  ## sdfile_new.c:253:29
 1e11f3e:    06 08             	r6 = r0
 1e11f40:    08 70             	r8 = 0
 1e11f42:    20 2a             	if (r5 == 0) goto 64 <__sdfile_get_part_addr+0x52 : 1e11f84 >
 1e11f44:    00 a0             	r0 = sp + 0
 1e11f46:    07 91             	r7 = r0 + 16
 1e11f48:    c4 ff d6 53 e1 01 	r4 = 31544278 <update_target_end+0x254E : 1e153d6 >
 1e11f4e:    c9 ff e4 53 e1 01 	r9 = 31544292 <update_target_end+0x255C : 1e153e4 >
 1e11f54:    00 a0             	r0 = sp + 0
 1e11f56:    02 72             	r2 = 32			  ## sdfile_new.c:259:9
 1e11f58:    51 08             	r1 = r5			  ## sdfile_new.c:259:9
 1e11f5a:    97 f3 c3 a7       	call 3100550 <memcpy : 106ee4 >			  ## sdfile_new.c:259:9
 1e11f5e:    70 08             	r0 = r7			  ## sdfile_new.c:260:18
 1e11f60:    41 08             	r1 = r4			  ## sdfile_new.c:260:18
 1e11f62:    91 17             	call -222 <sdfile_strcase_cmp : 1e11e86 >			  ## sdfile_new.c:260:18
 1e11f64:    04 20             	if (r0 == 0) goto 8 <__sdfile_get_part_addr+0x3C : 1e11f6e >			  ## sdfile_new.c:260:18
 1e11f66:    70 08             	r0 = r7			  ## sdfile_new.c:260:73
 1e11f68:    91 08             	r1 = r9			  ## sdfile_new.c:260:73
 1e11f6a:    8d 17             	call -230 <sdfile_strcase_cmp : 1e11e86 >			  ## sdfile_new.c:260:73
 1e11f6c:    0a 30             	if (r0 != 0) goto 20 <__sdfile_get_part_addr+0x50 : 1e11f82 >			  ## sdfile_new.c:260:73
 1e11f6e:    60 08             	r0 = r6			  ## sdfile_new.c:264:18
 1e11f70:    71 08             	r1 = r7			  ## sdfile_new.c:264:18
 1e11f72:    89 17             	call -238 <sdfile_strcase_cmp : 1e11e86 >			  ## sdfile_new.c:264:18
 1e11f74:    06 20             	if (r0 == 0) goto 12 <__sdfile_get_part_addr+0x50 : 1e11f82 >			  ## sdfile_new.c:264:18
 1e11f76:    20 02             	r0 = [sp+8]			  ## sdfile_new.c:267:27
 1e11f78:    81 f5 0e 00       	r1 = h[sp+14] (u)			  ## sdfile_new.c:268:20
 1e11f7c:    05 09             	r5 += r0			  ## sdfile_new.c:267:19
 1e11f7e:    ea 23             	if (r1 == 0) goto -44 <__sdfile_get_part_addr+0x22 : 1e11f54 >
 1e11f80:    01 18             	goto 2 <__sdfile_get_part_addr+0x52 : 1e11f84 >
 1e11f82:    58 08             	r8 = r5
 1e11f84:    80 08             	r0 = r8			  ## sdfile_new.c:271:1
 1e11f86:    10 0a             	sp += 32			  ## sdfile_new.c:271:1
 1e11f88:    59 01             	{pc, r9-r4} = [sp++]			  ## sdfile_new.c:271:1


mount:
 1e11f8a:    7b 01             	[--sp] = {rets, r11-r4}			  ## vfs.c:177:0
 1e11f8c:    3a 08             	r10 = r3			  ## vfs.c:177:0
 1e11f8e:    26 08             	r6 = r2			  ## vfs.c:177:0
 1e11f90:    18 08             	r8 = r1			  ## vfs.c:177:0
 1e11f92:    09 70             	r9 = 0			  ## vfs.c:177:0
 1e11f94:    0b 70             	r11 = 0			  ## vfs.c:177:0
 1e11f96:    05 20             	if (r0 == 0) goto 10 <mount+0x18 : 1e11fa2 >			  ## vfs.c:177:0
 1e11f98:    91 02             	r1 = [sp+36]			  ## vfs.c:177:0
 1e11f9a:    80 f3 92 05       	call 2852 <dev_open : 1e12ac2 >			  ## vfs.c:183:14
 1e11f9e:    0b 08             	r11 = r0			  ## vfs.c:183:14
 1e11fa0:    32 20             	if (r0 == 0) goto 100 <mount+0x7C : 1e12006 >
 1e11fa2:    00 7a             	r0 = 160			  ## vfs.c:189:27
 1e11fa4:    bf f3 24 ed       	call -9656 <zalloc : 1e0f9f0 >			  ## vfs.c:189:27
 1e11fa8:    05 08             	r5 = r0			  ## vfs.c:189:27
 1e11faa:    40 2a             	if (r5 == 0) goto 128 <mount+0xA2 : 1e1202c >			  ## vfs.c:189:27
 1e11fac:    1b f6 0c 50       	[r5 + 12] = r11			  ## vfs.c:193:16
 1e11fb0:    14 70             	r4 = 1			  ## vfs.c:193:16
 1e11fb2:    14 f9 9c 50       	b[r5 + 156] = r4			  ## vfs.c:194:19
 1e11fb6:    97 f3 f1 a6       	call 3100130 <local_irq_disable : 106d9c >			  ## atomic.h:47:5
 1e11fba:    08 00             	csync			  ## atomic.h:47:5
 1e11fbc:    2c 4b             	[r5 + 72] = r4			  ## atomic.h:49:16
 1e11fbe:    97 f3 eb a6       	call 3100118 <local_irq_enable : 106d98 >			  ## atomic.h:51:5
 1e11fc2:    50 fc 4c 00       	r0 = r5 + 76			  ## vfs.c:196:26
 1e11fc6:    97 f3 29 a7       	call 3100242 <os_mutex_create : 106e1c >			  ## vfs.c:196:5
 1e11fca:    c7 ff 6c 2d e1 01 	r7 = 31534444 <vfs_ops_end : 1e12d6c >			  ## vfs.c:196:5
 1e11fd0:    c4 ff f8 2c e1 01 	r4 = 31534328 <vfs_ops_begin : 1e12cf8 >			  ## vfs.c:196:5
 1e11fd6:    74 f2 0d 20       	if (r4 >= r7) goto 26 <mount+0x6A : 1e11ff4 >
 1e11fda:    00 48             	r0 = [r4 + 0]			  ## vfs.c:199:26
 1e11fdc:    61 08             	r1 = r6			  ## vfs.c:199:14
 1e11fde:    97 f3 89 a7       	call 3100434 <strcmp : 106ef4 >			  ## vfs.c:199:14
 1e11fe2:    05 30             	if (r0 != 0) goto 10 <mount+0x64 : 1e11fee >			  ## vfs.c:199:14
 1e11fe4:    12 48             	r2 = [r4 + 4]			  ## vfs.c:200:27
 1e11fe6:    50 08             	r0 = r5			  ## vfs.c:200:22
 1e11fe8:    a1 08             	r1 = r10			  ## vfs.c:200:22
 1e11fea:    82 00             	call r2			  ## vfs.c:200:22
 1e11fec:    0d 20             	if (r0 == 0) goto 26 <mount+0x7E : 1e12008 >			  ## vfs.c:200:22
 1e11fee:    44 87             	r4 += 116			  ## vfs.c:198:5
 1e11ff0:    74 f2 f3 3f       	if (r4 < r7) goto -26 <mount+0x50 : 1e11fda >
 1e11ff4:    0b e0 03 00       	if (r11 == 0) goto 6 <mount+0x74 : 1e11ffe >
 1e11ff8:    b0 08             	r0 = r11			  ## vfs.c:212:9
 1e11ffa:    80 f3 8e 05       	call 2844 <dev_close : 1e12b1a >			  ## vfs.c:212:9
 1e11ffe:    50 08             	r0 = r5			  ## vfs.c:215:5
 1e12000:    bf f3 04 ed       	call -9720 <free : 1e0fa0c >			  ## vfs.c:215:5
 1e12004:    13 18             	goto 38 <mount+0xA2 : 1e1202c >			  ## vfs.c:215:5
 1e12006:    12 18             	goto 36 <mount+0xA2 : 1e1202c >
 1e12008:    2c 4a             	[r5 + 8] = r4			  ## vfs.c:201:25
 1e1200a:    18 f6 04 50       	[r5 + 4] = r8			  ## vfs.c:202:26
 1e1200e:    97 f3 c5 a6       	call 3100042 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e12012:    c0 ff 80 08 00 00 	r0 = 2176 <head.1354 : 880 >			  ## spinlock.h:77:5
 1e12018:    11 40             	r1 = [r0 + 4]			  ## list.h:154:28
 1e1201a:    52 fc 40 00       	r2 = r5 + 64			  ## vfs.c:204:36
 1e1201e:    1a 40             	[r0 + 4] = r2			  ## list.h:137:16
 1e12020:    08 4b             	[r5 + 64] = r0			  ## list.h:138:16
 1e12022:    19 4b             	[r5 + 68] = r1			  ## list.h:139:16
 1e12024:    0a 42             	[r1 + 0] = r2			  ## list.h:140:16
 1e12026:    97 f3 b7 a6       	call 3100014 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e1202a:    59 08             	r9 = r5
 1e1202c:    90 08             	r0 = r9			  ## vfs.c:218:1
 1e1202e:    5b 01             	{pc, r11-r4} = [sp++]			  ## vfs.c:218:1


sdfile_init:
 1e12030:    78 01             	[--sp] = {rets, r8-r4}			  ## sdfile_new.c:365:0
 1e12032:    ec 0b             	sp += -40			  ## sdfile_new.c:365:0
 1e12034:    c4 ff a0 22 00 00 	r4 = 8864 <_sdfile_handl : 22a0 >			  ## sdfile_new.c:365:0
 1e1203a:    80 98             	r0 = r4 + 8			  ## sdfile_new.c:367:5
 1e1203c:    01 70             	r1 = 0			  ## sdfile_new.c:367:5
 1e1203e:    42 71             	r2 = 20			  ## sdfile_new.c:367:5
 1e12040:    97 f3 56 a7       	call 3100332 <memset : 106ef0 >			  ## sdfile_new.c:367:5
 1e12044:    c8 ff 00 08 00 00 	r8 = 2048 <report_mmu_tlb_size : 800 >			  ## sdfile_new.c:367:5
 1e1204a:    00 f6 10 80       	r0 = [r8 + 16]			  ## sdfile_new.c:368:46
 1e1204e:    01 f6 14 80       	r1 = [r8 + 20]			  ## sdfile_new.c:369:46
 1e12052:    08 48             	[r4 + 0] = r0			  ## sdfile_new.c:368:30
 1e12054:    19 48             	[r4 + 4] = r1			  ## sdfile_new.c:369:30
 1e12056:    c0 ff d6 53 e1 01 	r0 = 31544278 <update_target_end+0x254E : 1e153d6 >			  ## sdfile_new.c:371:29
 1e1205c:    6a 17             	call -300 <__sdfile_get_part_addr : 1e11f32 >			  ## sdfile_new.c:371:29
 1e1205e:    28 48             	[r4 + 8] = r0			  ## sdfile_new.c:371:27
 1e12060:    c0 ff e4 53 e1 01 	r0 = 31544292 <update_target_end+0x255C : 1e153e4 >			  ## sdfile_new.c:372:33
 1e12066:    65 17             	call -310 <__sdfile_get_part_addr : 1e11f32 >			  ## sdfile_new.c:372:33
 1e12068:    38 48             	[r4 + 12] = r0			  ## sdfile_new.c:372:31
 1e1206a:    c0 ff f1 53 e1 01 	r0 = 31544305 <update_target_end+0x2569 : 1e153f1 >			  ## sdfile_new.c:373:29
 1e12070:    60 17             	call -320 <__sdfile_get_part_addr : 1e11f32 >			  ## sdfile_new.c:373:29
 1e12072:    48 48             	[r4 + 16] = r0			  ## sdfile_new.c:373:27
 1e12074:    20 48             	r0 = [r4 + 8]			  ## sdfile_new.c:228:53
 1e12076:    71 51             	r1 = h[r0 + 46] (u)			  ## sdfile_new.c:229:16
 1e12078:    0e 32             	if (r1 != 0) goto 28 <sdfile_init+0x66 : 1e12096 >			  ## sdfile_new.c:229:16
 1e1207a:    00 82             	r0 += 32			  ## sdfile_new.c:228:67
 1e1207c:    06 fc 2e 00       	r6 = r0 + 46			  ## sdfile_new.c:230:40
 1e12080:    c5 ff f5 53 e1 01 	r5 = 31544309 <update_target_end+0x256D : 1e153f5 >			  ## sdfile_new.c:230:40
 1e12086:    61 fc e2 ff       	r1 = r6 + -30			  ## sdfile_new.c:230:15
 1e1208a:    50 08             	r0 = r5			  ## sdfile_new.c:230:15
 1e1208c:    fc 16             	call -520 <sdfile_strcase_cmp : 1e11e86 >			  ## sdfile_new.c:230:15
 1e1208e:    10 20             	if (r0 == 0) goto 32 <sdfile_init+0x80 : 1e120b0 >			  ## sdfile_new.c:231:13
 1e12090:    80 f7 20 60       	r0 = h[r6 ++= 32] (u)			  ## sdfile_new.c:229:16
 1e12094:    f8 21             	if (r0 == 0) goto -16 <sdfile_init+0x56 : 1e12086 >
 1e12096:    8f f3 a3 89       	call 2036550 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1209a:    c2 ff f8 53 e1 01 	r2 = 31544312 <update_target_end+0x2570 : 1e153f8 >			  ## sdfile_new.c:380:9
 1e120a0:    40 70             	r0 = 4			  ## sdfile_new.c:380:9
 1e120a2:    bf f3 42 e8       	call -12156 <log_print : 1e0f12a >			  ## sdfile_new.c:380:9
 1e120a6:    04 fb 04 ff       	r4 = -252 <bank_code_load_addr+0x1DC90C : 1ffff04 >			  ## sdfile_new.c:380:9
 1e120aa:    40 08             	r0 = r4			  ## sdfile_new.c:414:1
 1e120ac:    14 0a             	sp += 40			  ## sdfile_new.c:414:1
 1e120ae:    58 01             	{pc, r8-r4} = [sp++]			  ## sdfile_new.c:414:1
 1e120b0:    01 f6 d6 6f       	r1 = [r6 + -42]			  ## sdfile_new.c:232:43
 1e120b4:    11 f6 04 80       	[r8 + 4] = r1			  ## sdfile_new.c:232:35
 1e120b8:    03 f6 da 6f       	r3 = [r6 + -38]			  ## sdfile_new.c:233:42
 1e120bc:    13 f6 0c 80       	[r8 + 12] = r3			  ## sdfile_new.c:233:34
 1e120c0:    c2 ff 25 54 e1 01 	r2 = 31544357 <update_target_end+0x259D : 1e15425 >			  ## sdfile_new.c:234:13
 1e120c6:    20 70             	r0 = 2			  ## sdfile_new.c:234:13
 1e120c8:    09 02             	[sp] = r1			  ## sdfile_new.c:234:13
 1e120ca:    bf f3 2e e8       	call -12196 <log_print : 1e0f12a >			  ## sdfile_new.c:234:13
 1e120ce:    00 70             	r0 = 0			  ## sdfile_new.c:383:5
 1e120d0:    05 70             	r5 = 0			  ## sdfile_new.c:383:5
 1e120d2:    bf f3 4e 93       	call -55652 <norflash_open : 1e04772 >			  ## sdfile_new.c:383:5
 1e120d6:    c0 ff 01 56 04 40 	r0 = 1074025985 <text_size+0x24751 : 45601 >			  ## sdfile_new.c:384:5
 1e120dc:    81 08             	r1 = r8			  ## sdfile_new.c:384:5
 1e120de:    bf f3 ba 79       	call -68748 <norflash_ioctl : 1e01456 >			  ## sdfile_new.c:384:5
 1e120e2:    1d 02             	[sp+4] = r5			  ## sdfile_new.c:2470:9
 1e120e4:    41 a0             	r1 = sp + 4			  ## sdfile_new.c:2470:9
 1e120e6:    70 76             	r0 = 103			  ## sdfile_new.c:2471:5
 1e120e8:    bf f3 b5 79       	call -68758 <norflash_ioctl : 1e01456 >			  ## sdfile_new.c:2471:5
 1e120ec:    10 02             	r0 = [sp+4]			  ## sdfile_new.c:2473:12
 1e120ee:    83 d2             	r3 = r0 >> 10			  ## sdfile_new.c:388:5
 1e120f0:    c2 ff 4c 54 e1 01 	r2 = 31544396 <update_target_end+0x25C4 : 1e1544c >			  ## sdfile_new.c:388:5
 1e120f6:    20 70             	r0 = 2			  ## sdfile_new.c:388:5
 1e120f8:    bf f3 17 e8       	call -12242 <log_print : 1e0f12a >			  ## sdfile_new.c:388:5
 1e120fc:    20 48             	r0 = [r4 + 8]			  ## sdfile_new.c:296:28
 1e120fe:    81 a0             	r1 = sp + 8
 1e12100:    07 fd 02 19       	r7 = r1 | 2
 1e12104:    05 08             	r5 = r0
 1e12106:    80 a0             	r0 = sp + 8
 1e12108:    02 72             	r2 = 32			  ## sdfile_new.c:299:9
 1e1210a:    51 08             	r1 = r5			  ## sdfile_new.c:299:9
 1e1210c:    97 f3 ea a6       	call 3100116 <memcpy : 106ee4 >			  ## sdfile_new.c:299:9
 1e12110:    e1 71             	r1 = 30			  ## sdfile_new.c:301:20
 1e12112:    70 08             	r0 = r7			  ## sdfile_new.c:301:20
 1e12114:    bf f3 49 79       	call -68974 <CRC16 : 1e013aa >			  ## sdfile_new.c:301:20
 1e12118:    81 f5 08 00       	r1 = h[sp+8] (u)			  ## sdfile_new.c:302:34
 1e1211c:    10 f2 33 10       	if (r0 != r1) goto 102 <sdfile_init+0x156 : 1e12186 >			  ## sdfile_new.c:302:13
 1e12120:    46 02             	r6 = [sp+16]			  ## sdfile_new.c:308:30
 1e12122:    81 f5 16 00       	r1 = h[sp+22] (u)			  ## sdfile_new.c:309:23
 1e12126:    40 bd             	r0 = r6 + r5			  ## sdfile_new.c:308:18
 1e12128:    ed 23             	if (r1 == 0) goto -38 <sdfile_init+0xD4 : 1e12104 >
 1e1212a:    10 48             	r0 = [r4 + 4]			  ## sdfile_new.c:163:29
 1e1212c:    01 48             	r1 = [r4 + 0]			  ## sdfile_new.c:163:48
 1e1212e:    20 ba             	r0 = r5 - r0			  ## sdfile_new.c:163:19
 1e12130:    45 b0             	r5 = r0 + r1			  ## sdfile_new.c:163:38
 1e12132:    c0 ff a0 54 e1 01 	r0 = 31544480 <update_target_end+0x2618 : 1e154a0 >			  ## sdfile_new.c:342:9
 1e12138:    51 08             	r1 = r5			  ## sdfile_new.c:342:9
 1e1213a:    62 08             	r2 = r6			  ## sdfile_new.c:342:9
 1e1213c:    bf f3 c5 e7       	call -12406 <printf : 1e0f0ca >			  ## sdfile_new.c:342:9
 1e12140:    01 f9 00 80       	r1 = b[r8 + 0] (u)			  ## sdfile_new.c:343:26
 1e12144:    00 fb 00 01       	r0 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## sdfile_new.c:343:13
 1e12148:    11 e0 02 00       	if (r1 == 1) goto 4 <sdfile_init+0x120 : 1e12150 >
 1e1214c:    00 fb 00 10       	r0 = 4096 <sys_clock_limit+0x44 : 1000 >			  ## sdfile_new.c:343:13
 1e12150:    61 fb 00 09       	r1 = 0 - r0			  ## sdfile_new.c:347:63
 1e12154:    42 bd             	r2 = r6 + r5			  ## sdfile_new.c:346:36
 1e12156:    20 09             	r0 += r2			  ## sdfile_new.c:347:30
 1e12158:    f0 81             	r0 += 31			  ## sdfile_new.c:347:30
 1e1215a:    e2 fd 10 40       	r4 = r0 & r1			  ## sdfile_new.c:347:63
 1e1215e:    c0 ff b6 54 e1 01 	r0 = 31544502 <update_target_end+0x262E : 1e154b6 >			  ## sdfile_new.c:349:9
 1e12164:    41 08             	r1 = r4			  ## sdfile_new.c:349:9
 1e12166:    bf f3 b0 e7       	call -12448 <printf : 1e0f0ca >			  ## sdfile_new.c:349:9
 1e1216a:    41 fc f0 ff       	r1 = r4 + -16			  ## sdfile_new.c:350:50
 1e1216e:    c4 ff 16 22 00 00 	r4 = 8726 <burn_code : 2216 >			  ## sdfile_new.c:350:9
 1e12174:    02 71             	r2 = 16			  ## sdfile_new.c:350:9
 1e12176:    40 08             	r0 = r4			  ## sdfile_new.c:350:9
 1e12178:    bf f3 f0 78       	call -69152 <norflash_origin_read : 1e0135c >			  ## sdfile_new.c:350:9
 1e1217c:    01 71             	r1 = 16			  ## sdfile_new.c:351:9
 1e1217e:    40 08             	r0 = r4			  ## sdfile_new.c:351:9
 1e12180:    bf f3 a8 e8       	call -11952 <put_buf : 1e0f2d4 >			  ## sdfile_new.c:351:9
 1e12184:    07 18             	goto 14 <sdfile_init+0x164 : 1e12194 >			  ## sdfile_new.c:351:9
 1e12186:    c2 ff 72 54 e1 01 	r2 = 31544434 <update_target_end+0x25EA : 1e15472 >			  ## sdfile_new.c:304:13
 1e1218c:    40 70             	r0 = 4			  ## sdfile_new.c:304:13
 1e1218e:    53 08             	r3 = r5			  ## sdfile_new.c:304:13
 1e12190:    bf f3 cb e7       	call -12394 <log_print : 1e0f12a >			  ## sdfile_new.c:304:13
 1e12194:    04 70             	r4 = 0			  ## sdfile_new.c:406:9
 1e12196:    c1 ff c3 54 e1 01 	r1 = 31544515 <update_target_end+0x263B : 1e154c3 >			  ## sdfile_new.c:406:9
 1e1219c:    c2 ff c7 54 e1 01 	r2 = 31544519 <update_target_end+0x263F : 1e154c7 >			  ## sdfile_new.c:406:9
 1e121a2:    00 70             	r0 = 0			  ## sdfile_new.c:406:9
 1e121a4:    03 70             	r3 = 0			  ## sdfile_new.c:406:9
 1e121a6:    0c 02             	[sp] = r4			  ## sdfile_new.c:406:9
 1e121a8:    f0 16             	call -544 <mount : 1e11f8a >			  ## sdfile_new.c:406:9
 1e121aa:    04 20             	if (r0 == 0) goto 8 <sdfile_init+0x184 : 1e121b4 >			  ## sdfile_new.c:406:9
 1e121ac:    c2 ff ce 54 e1 01 	r2 = 31544526 <update_target_end+0x2646 : 1e154ce >			  ## sdfile_new.c:407:9
 1e121b2:    03 18             	goto 6 <sdfile_init+0x18A : 1e121ba >			  ## sdfile_new.c:407:9
 1e121b4:    c2 ff f3 54 e1 01 	r2 = 31544563 <update_target_end+0x266B : 1e154f3 >			  ## sdfile_new.c:409:9
 1e121ba:    10 70             	r0 = 1
 1e121bc:    bf f3 b5 e7       	call -12438 <log_print : 1e0f12a >
 1e121c0:    74 1f             	goto -280 <sdfile_init+0x7A : 1e120aa >


sdfile_mount:
 1e121c2:    78 01             	[--sp] = {rets, r8-r4}			  ## sdfile_new.c:1027:0
 1e121c4:    c8 ff a0 22 00 00 	r8 = 8864 <_sdfile_handl : 22a0 >			  ## sdfile_new.c:1027:0
 1e121ca:    05 f6 0c 80       	r5 = [r8 + 12]			  ## sdfile_new.c:1031:17
 1e121ce:    04 08             	r4 = r0			  ## sdfile_new.c:1031:17
 1e121d0:    80 72             	r0 = 40			  ## fs.h:217:55
 1e121d2:    bf f3 0d ec       	call -10214 <zalloc : 1e0f9f0 >			  ## fs.h:217:55
 1e121d6:    06 08             	r6 = r0			  ## fs.h:217:55
 1e121d8:    87 99             	r7 = r4 + 24			  ## fs.h:217:55
 1e121da:    01 2c             	if (r6 == 0) goto 2 <sdfile_mount+0x1C : 1e121de >			  ## fs.h:217:55
 1e121dc:    0e 4e             	[r7 + 0] = r6			  ## fs.h:220:17
 1e121de:    19 2a             	if (r5 == 0) goto 50 <sdfile_mount+0x50 : 1e12212 >
 1e121e0:    80 72             	r0 = 40			  ## fs.h:217:55
 1e121e2:    bf f3 05 ec       	call -10230 <zalloc : 1e0f9f0 >			  ## fs.h:217:55
 1e121e6:    05 08             	r5 = r0			  ## fs.h:217:55
 1e121e8:    01 2a             	if (r5 == 0) goto 2 <sdfile_mount+0x2A : 1e121ec >			  ## fs.h:217:55
 1e121ea:    0d 4c             	[r6 + 0] = r5			  ## fs.h:220:17
 1e121ec:    00 f6 0c 80       	r0 = [r8 + 12]			  ## sdfile_new.c:1034:40
 1e121f0:    18 4c             	[r6 + 4] = r0			  ## sdfile_new.c:1034:30
 1e121f2:    26 81             	r6 += 18			  ## sdfile_new.c:1035:9
 1e121f4:    c1 ff e4 53 e1 01 	r1 = 31544292 <update_target_end+0x255C : 1e153e4 >			  ## sdfile_new.c:1035:9
 1e121fa:    02 71             	r2 = 16			  ## sdfile_new.c:1035:9
 1e121fc:    60 08             	r0 = r6			  ## sdfile_new.c:1035:9
 1e121fe:    97 f3 71 a6       	call 3099874 <memcpy : 106ee4 >			  ## sdfile_new.c:1035:9
 1e12202:    60 08             	r0 = r6			  ## sdfile_new.c:1036:27
 1e12204:    97 f3 7a a6       	call 3099892 <strlen : 106efc >			  ## sdfile_new.c:1036:27
 1e12208:    01 70             	r1 = 0			  ## sdfile_new.c:1036:54
 1e1220a:    11 fa 00 60       	b[r6+r0] = r1			  ## sdfile_new.c:1036:54
 1e1220e:    30 70             	r0 = 3			  ## sdfile_new.c:1036:54
 1e12210:    02 18             	goto 4 <sdfile_mount+0x54 : 1e12216 >			  ## sdfile_new.c:1036:54
 1e12212:    20 70             	r0 = 2
 1e12214:    65 08             	r5 = r6
 1e12216:    10 f9 9d 40       	b[r4 + 157] = r0
 1e1221a:    00 f6 08 80       	r0 = [r8 + 8]			  ## sdfile_new.c:1043:32
 1e1221e:    18 4e             	[r7 + 4] = r0			  ## sdfile_new.c:1043:22
 1e12220:    10 76             	r0 = 97			  ## sdfile_new.c:1044:22
 1e12222:    28 6f             	b[r7 + 18] = r0			  ## sdfile_new.c:1044:22
 1e12224:    00 77             	r0 = 112			  ## sdfile_new.c:1045:22
 1e12226:    38 6f             	b[r7 + 19] = r0			  ## sdfile_new.c:1045:22
 1e12228:    48 6f             	b[r7 + 20] = r0			  ## sdfile_new.c:1046:22
 1e1222a:    01 70             	r1 = 0			  ## sdfile_new.c:1046:22
 1e1222c:    59 6f             	b[r7 + 21] = r1			  ## sdfile_new.c:1048:22
 1e1222e:    00 f6 10 80       	r0 = [r8 + 16]			  ## sdfile_new.c:1050:32
 1e12232:    18 4a             	[r5 + 4] = r0			  ## sdfile_new.c:1050:22
 1e12234:    20 77             	r0 = 114			  ## sdfile_new.c:1051:22
 1e12236:    28 6b             	b[r5 + 18] = r0			  ## sdfile_new.c:1051:22
 1e12238:    50 76             	r0 = 101			  ## sdfile_new.c:1052:22
 1e1223a:    38 6b             	b[r5 + 19] = r0			  ## sdfile_new.c:1052:22
 1e1223c:    30 77             	r0 = 115			  ## sdfile_new.c:1053:22
 1e1223e:    48 6b             	b[r5 + 20] = r0			  ## sdfile_new.c:1053:22
 1e12240:    00 70             	r0 = 0			  ## sdfile_new.c:1057:5
 1e12242:    59 6b             	b[r5 + 21] = r1			  ## sdfile_new.c:1054:22
 1e12244:    58 01             	{pc, r8-r4} = [sp++]			  ## sdfile_new.c:1057:5


__sdfile_path_get_name:
 1e12246:    77 01             	[--sp] = {rets, r7-r4}			  ## sdfile_new.c:421:0
 1e12248:    02 60             	r2 = b[r0 + 0] (u)			  ## sdfile_new.c:425:9
 1e1224a:    14 90             	r4 = r0 + 1			  ## sdfile_new.c:426:18
 1e1224c:    15 08             	r5 = r1
 1e1224e:    f2 e2 01 00       	if (r2 == 47) goto 2 <__sdfile_path_get_name+0xE : 1e12254 >
 1e12252:    04 08             	r4 = r0			  ## sdfile_new.c:425:9
 1e12254:    f1 72             	r1 = 47			  ## sdfile_new.c:428:11
 1e12256:    40 08             	r0 = r4			  ## sdfile_new.c:428:11
 1e12258:    97 f3 56 a6       	call 3099820 <strchr : 106f08 >			  ## sdfile_new.c:428:11
 1e1225c:    02 20             	if (r0 == 0) goto 4 <__sdfile_path_get_name+0x1C : 1e12262 >			  ## sdfile_new.c:429:9
 1e1225e:    26 b1             	r6 = r0 - r4			  ## sdfile_new.c:430:20
 1e12260:    04 18             	goto 8 <__sdfile_path_get_name+0x24 : 1e1226a >
 1e12262:    40 08             	r0 = r4			  ## sdfile_new.c:432:16
 1e12264:    97 f3 4a a6       	call 3099796 <strlen : 106efc >			  ## sdfile_new.c:432:16
 1e12268:    06 08             	r6 = r0			  ## sdfile_new.c:432:16
 1e1226a:    67 08             	r7 = r6			  ## sdfile_new.c:435:9
 1e1226c:    f6 e0 01 b0       	ifs (r6 < 15) goto 2 <__sdfile_path_get_name+0x2C : 1e12272 >			  ## sdfile_new.c:435:9
 1e12270:    f7 70             	r7 = 15			  ## sdfile_new.c:435:9
 1e12272:    50 08             	r0 = r5			  ## sdfile_new.c:438:5
 1e12274:    41 08             	r1 = r4			  ## sdfile_new.c:438:5
 1e12276:    72 08             	r2 = r7			  ## sdfile_new.c:438:5
 1e12278:    97 f3 34 a6       	call 3099752 <memcpy : 106ee4 >			  ## sdfile_new.c:438:5
 1e1227c:    00 70             	r0 = 0			  ## sdfile_new.c:438:5
 1e1227e:    10 fa 00 57       	b[r5+r7] = r0			  ## sdfile_new.c:439:15
 1e12282:    10 2e             	if (r7 == 0) goto 32 <__sdfile_path_get_name+0x5E : 1e122a4 >			  ## sdfile_new.c:439:15
 1e12284:    d0 bd             	r0 = ~r6			  ## sdfile_new.c:168:15
 1e12286:    00 ef 01 c0       	ifs (r0 > -16) goto 2 <__sdfile_path_get_name+0x46 : 1e1228c >			  ## sdfile_new.c:168:15
 1e1228a:    00 07             	r0 = -16			  ## sdfile_new.c:168:15
 1e1228c:    10 80             	r0 += 1			  ## sdfile_new.c:168:15
 1e1228e:    01 6a             	r1 = b[r5 + 0] (u)			  ## sdfile_new.c:169:14
 1e12290:    12 fc 9f ff       	r2 = r1 + -97			  ## sdfile_new.c:169:27
 1e12294:    82 04             	r2 = r2.b0 (u)			  ## sdfile_new.c:169:27
 1e12296:    92 e1 02 80       	if (r2 > 25) goto 4 <__sdfile_path_get_name+0x58 : 1e1229e >			  ## sdfile_new.c:169:27
 1e1229a:    01 8e             	r1 += -32			  ## sdfile_new.c:170:31
 1e1229c:    09 6a             	b[r5 + 0] = r1			  ## sdfile_new.c:170:18
 1e1229e:    10 80             	r0 += 1			  ## sdfile_new.c:168:5
 1e122a0:    15 80             	r5 += 1			  ## sdfile_new.c:172:13
 1e122a2:    f5 31             	if (r0 != 0) goto -22 <__sdfile_path_get_name+0x48 : 1e1228e >
 1e122a4:    81 b9             	r1 = r4 + r6			  ## sdfile_new.c:441:14
 1e122a6:    02 62             	r2 = b[r1 + 0] (u)			  ## sdfile_new.c:442:9
 1e122a8:    10 92             	r0 = r1 + 1			  ## sdfile_new.c:443:18
 1e122aa:    f2 e2 01 00       	if (r2 == 47) goto 2 <__sdfile_path_get_name+0x6A : 1e122b0 >
 1e122ae:    10 08             	r0 = r1			  ## sdfile_new.c:442:9
 1e122b0:    57 01             	{pc, r7-r4} = [sp++]			  ## sdfile_new.c:446:5


sdfile_open_part_dir:
 1e122b2:    7a 01             	[--sp] = {rets, r10-r4}			  ## sdfile_new.c:506:0
 1e122b4:    f0 0b             	sp += -32			  ## sdfile_new.c:506:0
 1e122b6:    24 08             	r4 = r2			  ## sdfile_new.c:506:0
 1e122b8:    15 08             	r5 = r1			  ## sdfile_new.c:506:0
 1e122ba:    09 08             	r9 = r0			  ## sdfile_new.c:506:0
 1e122bc:    c1 ff d6 53 e1 01 	r1 = 31544278 <update_target_end+0x254E : 1e153d6 >			  ## sdfile_new.c:512:9
 1e122c2:    40 08             	r0 = r4			  ## sdfile_new.c:512:9
 1e122c4:    e0 15             	call -1088 <sdfile_strcase_cmp : 1e11e86 >			  ## sdfile_new.c:512:9
 1e122c6:    c6 ff a0 22 00 00 	r6 = 8864 <_sdfile_handl : 22a0 >			  ## sdfile_new.c:512:9
 1e122cc:    11 20             	if (r0 == 0) goto 34 <sdfile_open_part_dir+0x3E : 1e122f0 >			  ## sdfile_new.c:512:9
 1e122ce:    c1 ff e4 53 e1 01 	r1 = 31544292 <update_target_end+0x255C : 1e153e4 >			  ## sdfile_new.c:514:16
 1e122d4:    40 08             	r0 = r4			  ## sdfile_new.c:514:16
 1e122d6:    d7 15             	call -1106 <sdfile_strcase_cmp : 1e11e86 >			  ## sdfile_new.c:514:16
 1e122d8:    0d 20             	if (r0 == 0) goto 26 <sdfile_open_part_dir+0x42 : 1e122f4 >			  ## sdfile_new.c:514:16
 1e122da:    c1 ff f1 53 e1 01 	r1 = 31544305 <update_target_end+0x2569 : 1e153f1 >			  ## sdfile_new.c:516:16
 1e122e0:    40 08             	r0 = r4			  ## sdfile_new.c:516:16
 1e122e2:    d1 15             	call -1118 <sdfile_strcase_cmp : 1e11e86 >			  ## sdfile_new.c:516:16
 1e122e4:    01 08             	r1 = r0			  ## sdfile_new.c:516:16
 1e122e6:    00 fb 01 ff       	r0 = -255 <bank_code_load_addr+0x1DC909 : 1ffff01 >			  ## sdfile_new.c:516:16
 1e122ea:    3a 32             	if (r1 != 0) goto 116 <sdfile_open_part_dir+0xAE : 1e12360 >			  ## sdfile_new.c:516:16
 1e122ec:    00 9d             	r0 = r6 + 16
 1e122ee:    03 18             	goto 6 <sdfile_open_part_dir+0x44 : 1e122f6 >
 1e122f0:    80 9c             	r0 = r6 + 8
 1e122f2:    01 18             	goto 2 <sdfile_open_part_dir+0x44 : 1e122f6 >
 1e122f4:    c0 9c             	r0 = r6 + 12
 1e122f6:    01 f6 08 90       	r1 = [r9 + 8]			  ## sdfile_new.c:521:19
 1e122fa:    06 22             	if (r1 == 0) goto 12 <sdfile_open_part_dir+0x56 : 1e12308 >
 1e122fc:    00 4c             	r0 = [r6 + 0]			  ## sdfile_new.c:158:29
 1e122fe:    12 4c             	r2 = [r6 + 4]			  ## sdfile_new.c:158:53
 1e12300:    20 b2             	r0 = r1 - r0			  ## sdfile_new.c:158:19
 1e12302:    86 b0             	r6 = r0 + r2			  ## sdfile_new.c:158:43
 1e12304:    1a 70             	r10 = 1
 1e12306:    02 18             	goto 4 <sdfile_open_part_dir+0x5A : 1e1230c >
 1e12308:    06 40             	r6 = [r0 + 0]
 1e1230a:    0a 70             	r10 = 0
 1e1230c:    98 fc 04 00       	r8 = r9 + 4			  ## sdfile_new.c:521:14
 1e12310:    00 a0             	r0 = sp + 0			  ## sdfile_new.c:521:14
 1e12312:    07 91             	r7 = r0 + 16			  ## sdfile_new.c:521:14
 1e12314:    04 fd 02 09       	r4 = r0 | 2			  ## sdfile_new.c:521:14
 1e12318:    00 a0             	r0 = sp + 0
 1e1231a:    02 72             	r2 = 32			  ## sdfile_new.c:528:9
 1e1231c:    61 08             	r1 = r6			  ## sdfile_new.c:528:9
 1e1231e:    97 f3 e1 a5       	call 3099586 <memcpy : 106ee4 >			  ## sdfile_new.c:528:9
 1e12322:    e1 71             	r1 = 30			  ## sdfile_new.c:529:13
 1e12324:    40 08             	r0 = r4			  ## sdfile_new.c:529:13
 1e12326:    bf f3 40 78       	call -69504 <CRC16 : 1e013aa >			  ## sdfile_new.c:529:13
 1e1232a:    81 f5 00 00       	r1 = h[sp] (u)			  ## sdfile_new.c:529:81
 1e1232e:    10 f2 09 10       	if (r0 != r1) goto 18 <sdfile_open_part_dir+0x92 : 1e12344 >			  ## sdfile_new.c:529:81
 1e12332:    70 08             	r0 = r7			  ## sdfile_new.c:535:15
 1e12334:    51 08             	r1 = r5			  ## sdfile_new.c:535:15
 1e12336:    a7 15             	call -1202 <sdfile_strcase_cmp : 1e11e86 >			  ## sdfile_new.c:535:15
 1e12338:    08 20             	if (r0 == 0) goto 16 <sdfile_open_part_dir+0x98 : 1e1234a >
 1e1233a:    81 f5 0e 00       	r1 = h[sp+14] (u)			  ## sdfile_new.c:547:19
 1e1233e:    06 82             	r6 += 32			  ## sdfile_new.c:546:14
 1e12340:    eb 23             	if (r1 == 0) goto -42 <sdfile_open_part_dir+0x66 : 1e12318 >
 1e12342:    0e 18             	goto 28 <sdfile_open_part_dir+0xAE : 1e12360 >
 1e12344:    00 fb 05 ff       	r0 = -251 <bank_code_load_addr+0x1DC90D : 1ffff05 >
 1e12348:    0b 18             	goto 22 <sdfile_open_part_dir+0xAE : 1e12360 >
 1e1234a:    01 a0             	r1 = sp + 0
 1e1234c:    02 72             	r2 = 32			  ## sdfile_new.c:537:13
 1e1234e:    80 08             	r0 = r8			  ## sdfile_new.c:537:13
 1e12350:    97 f3 c8 a5       	call 3099536 <memcpy : 106ee4 >			  ## sdfile_new.c:537:13
 1e12354:    0a e0 01 10       	if (r10 != 0) goto 2 <sdfile_open_part_dir+0xA8 : 1e1235a >			  ## sdfile_new.c:537:13
 1e12358:    16 02             	r6 = [sp+4]			  ## sdfile_new.c:538:35
 1e1235a:    16 f6 08 90       	[r9 + 8] = r6			  ## sdfile_new.c:538:28
 1e1235e:    00 70             	r0 = 0
 1e12360:    10 0a             	sp += 32
 1e12362:    5a 01             	{pc, r10-r4} = [sp++]			  ## sdfile_new.c:550:1


sdfile_for_each_file_in_dir:
 1e12364:    79 01             	[--sp] = {rets, r9-r4}			  ## sdfile_new.c:450:0
 1e12366:    f0 0b             	sp += -32			  ## sdfile_new.c:450:0
 1e12368:    25 08             	r5 = r2			  ## sdfile_new.c:450:0
 1e1236a:    18 08             	r8 = r1			  ## sdfile_new.c:450:0
 1e1236c:    06 08             	r6 = r0			  ## sdfile_new.c:450:0
 1e1236e:    00 a0             	r0 = sp + 0			  ## sdfile_new.c:450:0
 1e12370:    07 91             	r7 = r0 + 16			  ## sdfile_new.c:450:0
 1e12372:    04 fd 02 09       	r4 = r0 | 2			  ## sdfile_new.c:450:0
 1e12376:    09 72             	r9 = 32			  ## sdfile_new.c:450:0
 1e12378:    00 a0             	r0 = sp + 0			  ## sdfile_new.c:450:0
 1e1237a:    02 72             	r2 = 32			  ## sdfile_new.c:450:0
 1e1237c:    61 08             	r1 = r6			  ## sdfile_new.c:450:0
 1e1237e:    97 f3 b1 a5       	call 3099490 <memcpy : 106ee4 >			  ## sdfile_new.c:450:0
 1e12382:    e1 71             	r1 = 30			  ## sdfile_new.c:450:0
 1e12384:    40 08             	r0 = r4			  ## sdfile_new.c:450:0
 1e12386:    bf f3 10 78       	call -69600 <CRC16 : 1e013aa >			  ## sdfile_new.c:450:0
 1e1238a:    81 f5 00 00       	r1 = h[sp] (u)			  ## sdfile_new.c:450:0
 1e1238e:    10 f2 09 10       	if (r0 != r1) goto 18 <sdfile_for_each_file_in_dir+0x40 : 1e123a4 >			  ## sdfile_new.c:450:0
 1e12392:    70 08             	r0 = r7			  ## sdfile_new.c:463:15
 1e12394:    51 08             	r1 = r5			  ## sdfile_new.c:463:15
 1e12396:    77 15             	call -1298 <sdfile_strcase_cmp : 1e11e86 >			  ## sdfile_new.c:463:15
 1e12398:    0c 20             	if (r0 == 0) goto 24 <sdfile_for_each_file_in_dir+0x4E : 1e123b2 >
 1e1239a:    80 f5 0e 00       	r0 = h[sp+14] (u)			  ## sdfile_new.c:472:18
 1e1239e:    12 30             	if (r0 != 0) goto 36 <sdfile_for_each_file_in_dir+0x60 : 1e123c4 >
 1e123a0:    06 82             	r6 += 32			  ## sdfile_new.c:456:45
 1e123a2:    ea 1f             	goto -44 <sdfile_for_each_file_in_dir+0x14 : 1e12378 >
 1e123a4:    f9 8f             	r9 += -1			  ## sdfile_new.c:460:20
 1e123a6:    06 82             	r6 += 32			  ## sdfile_new.c:456:45
 1e123a8:    09 e0 e6 cf       	ifs (r9 > 0) goto -52 <sdfile_for_each_file_in_dir+0x14 : 1e12378 >
 1e123ac:    04 fb 02 ff       	r4 = -254 <bank_code_load_addr+0x1DC90A : 1ffff02 >
 1e123b0:    0a 18             	goto 20 <sdfile_for_each_file_in_dir+0x62 : 1e123c6 >
 1e123b2:    04 70             	r4 = 0
 1e123b4:    08 e0 07 00       	if (r8 == 0) goto 14 <sdfile_for_each_file_in_dir+0x62 : 1e123c6 >
 1e123b8:    01 a0             	r1 = sp + 0
 1e123ba:    02 72             	r2 = 32			  ## sdfile_new.c:467:17
 1e123bc:    80 08             	r0 = r8			  ## sdfile_new.c:467:17
 1e123be:    97 f3 91 a5       	call 3099426 <memcpy : 106ee4 >			  ## sdfile_new.c:467:17
 1e123c2:    01 18             	goto 2 <sdfile_for_each_file_in_dir+0x62 : 1e123c6 >			  ## sdfile_new.c:467:17
 1e123c4:    14 70             	r4 = 1
 1e123c6:    40 08             	r0 = r4			  ## sdfile_new.c:478:1
 1e123c8:    10 0a             	sp += 32			  ## sdfile_new.c:478:1
 1e123ca:    59 01             	{pc, r9-r4} = [sp++]			  ## sdfile_new.c:478:1


sdfile_open_file_in_dir:
 1e123cc:    75 01             	[--sp] = {rets, r5, r4}			  ## sdfile_new.c:568:0
 1e123ce:    15 08             	r5 = r1			  ## sdfile_new.c:568:0
 1e123d0:    23 4a             	r3 = [r5 + 8]			  ## sdfile_new.c:571:30
 1e123d2:    04 08             	r4 = r0			  ## sdfile_new.c:571:30
 1e123d4:    41 98             	r1 = r4 + 4			  ## sdfile_new.c:573:56
 1e123d6:    30 fc 20 00       	r0 = r3 + 32			  ## sdfile_new.c:571:35
 1e123da:    c4 17             	call -120 <sdfile_for_each_file_in_dir : 1e12364 >			  ## sdfile_new.c:573:11
 1e123dc:    0f 30             	if (r0 != 0) goto 30 <sdfile_open_file_in_dir+0x30 : 1e123fc >
 1e123de:    02 69             	r2 = b[r4 + 16] (u)			  ## sdfile_new.c:576:25
 1e123e0:    21 48             	r1 = [r4 + 8]			  ## sdfile_new.c:576:25
 1e123e2:    24 f3 02 20       	if ((r2 & 16) != 0) goto 4 <sdfile_open_file_in_dir+0x1E : 1e123ea >
 1e123e6:    82 9a             	r2 = r5 + 8			  ## sdfile_new.c:571:30
 1e123e8:    06 18             	goto 12 <sdfile_open_file_in_dir+0x2A : 1e123f6 >			  ## sdfile_new.c:571:30
 1e123ea:    c2 ff a0 22 00 00 	r2 = 8864 <_sdfile_handl : 22a0 >
 1e123f0:    43 f6 04 20       	r3 = [r2 ++= 4]			  ## sdfile_new.c:158:29
 1e123f4:    e1 b2             	r1 = r1 - r3			  ## sdfile_new.c:158:19
 1e123f6:    02 44             	r2 = [r2 + 0]
 1e123f8:    21 09             	r1 += r2
 1e123fa:    29 48             	[r4 + 8] = r1
 1e123fc:    55 01             	{pc, r5, r4} = [sp++]			  ## sdfile_new.c:586:5


sdfile_open_spc_part_file:
 1e123fe:    74 01             	[--sp] = {rets, r4}			  ## sdfile_new.c:590:0
 1e12400:    04 08             	r4 = r0			  ## sdfile_new.c:590:0
 1e12402:    10 fc 20 00       	r0 = r1 + 32			  ## sdfile_new.c:593:35
 1e12406:    41 98             	r1 = r4 + 4			  ## sdfile_new.c:595:56
 1e12408:    ad 17             	call -166 <sdfile_for_each_file_in_dir : 1e12364 >			  ## sdfile_new.c:595:11
 1e1240a:    04 30             	if (r0 != 0) goto 8 <sdfile_open_spc_part_file+0x16 : 1e12414 >
 1e1240c:    00 69             	r0 = b[r4 + 16] (u)			  ## sdfile_new.c:598:25
 1e1240e:    81 fd 08 00       	r0 = uextra(r0, p:1, l:1)			  ## sdfile_new.c:598:13
 1e12412:    f0 8f             	r0 += -1			  ## sdfile_new.c:598:13
 1e12414:    54 01             	{pc, r4} = [sp++]


sdfile_for_each_dir:
 1e12416:    78 01             	[--sp] = {rets, r8-r4}			  ## sdfile_new.c:481:0
 1e12418:    f0 0b             	sp += -32			  ## sdfile_new.c:481:0
 1e1241a:    16 08             	r6 = r1			  ## sdfile_new.c:481:0
 1e1241c:    08 08             	r8 = r0			  ## sdfile_new.c:481:0
 1e1241e:    c0 ff a0 22 00 00 	r0 = 8864 <_sdfile_handl : 22a0 >			  ## sdfile_new.c:484:24
 1e12424:    45 40             	r5 = [r0 + 16]			  ## sdfile_new.c:484:24
 1e12426:    00 a0             	r0 = sp + 0
 1e12428:    07 91             	r7 = r0 + 16
 1e1242a:    04 fd 02 09       	r4 = r0 | 2
 1e1242e:    00 a0             	r0 = sp + 0
 1e12430:    02 72             	r2 = 32			  ## sdfile_new.c:487:9
 1e12432:    51 08             	r1 = r5			  ## sdfile_new.c:487:9
 1e12434:    97 f3 56 a5       	call 3099308 <memcpy : 106ee4 >			  ## sdfile_new.c:487:9
 1e12438:    e1 71             	r1 = 30			  ## sdfile_new.c:488:13
 1e1243a:    40 08             	r0 = r4			  ## sdfile_new.c:488:13
 1e1243c:    bf f3 b5 77       	call -69782 <CRC16 : 1e013aa >			  ## sdfile_new.c:488:13
 1e12440:    81 f5 00 00       	r1 = h[sp] (u)			  ## sdfile_new.c:488:81
 1e12444:    10 f2 0c 10       	if (r0 != r1) goto 24 <sdfile_for_each_dir+0x4A : 1e12460 >			  ## sdfile_new.c:488:81
 1e12448:    70 08             	r0 = r7			  ## sdfile_new.c:492:15
 1e1244a:    61 08             	r1 = r6			  ## sdfile_new.c:492:15
 1e1244c:    1c 15             	call -1480 <sdfile_strcase_cmp : 1e11e86 >			  ## sdfile_new.c:492:15
 1e1244e:    0b 20             	if (r0 == 0) goto 22 <sdfile_for_each_dir+0x50 : 1e12466 >
 1e12450:    20 02             	r0 = [sp+8]			  ## sdfile_new.c:499:22
 1e12452:    81 f5 0e 00       	r1 = h[sp+14] (u)			  ## sdfile_new.c:500:19
 1e12456:    05 09             	r5 += r0			  ## sdfile_new.c:499:14
 1e12458:    ea 23             	if (r1 == 0) goto -44 <sdfile_for_each_dir+0x18 : 1e1242e >
 1e1245a:    00 fb 01 ff       	r0 = -255 <bank_code_load_addr+0x1DC909 : 1ffff01 >
 1e1245e:    0b 18             	goto 22 <sdfile_for_each_dir+0x60 : 1e12476 >
 1e12460:    00 fb 05 ff       	r0 = -251 <bank_code_load_addr+0x1DC90D : 1ffff05 >
 1e12464:    08 18             	goto 16 <sdfile_for_each_dir+0x60 : 1e12476 >
 1e12466:    01 a0             	r1 = sp + 0
 1e12468:    02 72             	r2 = 32			  ## sdfile_new.c:494:13
 1e1246a:    80 08             	r0 = r8			  ## sdfile_new.c:494:13
 1e1246c:    97 f3 3a a5       	call 3099252 <memcpy : 106ee4 >			  ## sdfile_new.c:494:13
 1e12470:    15 f6 04 80       	[r8 + 4] = r5			  ## sdfile_new.c:495:28
 1e12474:    00 70             	r0 = 0			  ## sdfile_new.c:495:28
 1e12476:    10 0a             	sp += 32
 1e12478:    58 01             	{pc, r8-r4} = [sp++]			  ## sdfile_new.c:503:1


sdfile_open:
 1e1247a:    7a 01             	[--sp] = {rets, r10-r4}			  ## sdfile_new.c:798:0
 1e1247c:    b4 0b             	sp += -152			  ## sdfile_new.c:798:0
 1e1247e:    14 08             	r4 = r1			  ## sdfile_new.c:798:0
 1e12480:    09 08             	r9 = r0			  ## sdfile_new.c:798:0
 1e12482:    70 a0             	r0 = sp + 7			  ## sdfile_new.c:798:0
 1e12484:    01 70             	r1 = 0			  ## sdfile_new.c:802:10
 1e12486:    12 71             	r2 = 17			  ## sdfile_new.c:802:10
 1e12488:    07 70             	r7 = 0
 1e1248a:    97 f3 31 a5       	call 3099234 <memset : 106ef0 >			  ## sdfile_new.c:802:10
 1e1248e:    2d 28             	if (r4 == 0) goto 90 <sdfile_open+0x70 : 1e124ea >
 1e12490:    40 72             	r0 = 36			  ## sdfile_new.c:808:31
 1e12492:    bf f3 90 ea       	call -10976 <malloc : 1e0f9b6 >			  ## sdfile_new.c:808:31
 1e12496:    05 08             	r5 = r0			  ## sdfile_new.c:808:31
 1e12498:    df 2a             	if (r5 == 0) goto 446 <sdfile_open+0x1DE : 1e12658 >			  ## sdfile_new.c:808:31
 1e1249a:    01 70             	r1 = 0			  ## sdfile_new.c:813:5
 1e1249c:    42 72             	r2 = 36			  ## sdfile_new.c:813:5
 1e1249e:    97 f3 27 a5       	call 3099214 <memset : 106ef0 >			  ## sdfile_new.c:813:5
 1e124a2:    00 f6 08 90       	r0 = [r9 + 8]			  ## sdfile_new.c:815:24
 1e124a6:    26 91             	r6 = r0 + 18			  ## sdfile_new.c:815:17
 1e124a8:    c1 ff 1d 55 e1 01 	r1 = 31544605 <update_target_end+0x2695 : 1e1551d >			  ## sdfile_new.c:815:10
 1e124ae:    60 08             	r0 = r6			  ## sdfile_new.c:815:10
 1e124b0:    97 f3 20 a5       	call 3099200 <strcmp : 106ef4 >			  ## sdfile_new.c:815:10
 1e124b4:    ca ff a0 22 00 00 	r10 = 8864 <_sdfile_handl : 22a0 >			  ## sdfile_new.c:815:10
 1e124ba:    1a 20             	if (r0 == 0) goto 52 <sdfile_open+0x76 : 1e124f0 >			  ## sdfile_new.c:815:10
 1e124bc:    c1 ff f1 53 e1 01 	r1 = 31544305 <update_target_end+0x2569 : 1e153f1 >			  ## sdfile_new.c:817:17
 1e124c2:    60 08             	r0 = r6			  ## sdfile_new.c:817:17
 1e124c4:    97 f3 16 a5       	call 3099180 <strcmp : 106ef4 >			  ## sdfile_new.c:817:17
 1e124c8:    4a 20             	if (r0 == 0) goto 148 <sdfile_open+0xE4 : 1e1255e >			  ## sdfile_new.c:817:17
 1e124ca:    c8 ff e4 53 e1 01 	r8 = 31544292 <update_target_end+0x255C : 1e153e4 >
 1e124d0:    60 08             	r0 = r6			  ## sdfile_new.c:819:17
 1e124d2:    81 08             	r1 = r8			  ## sdfile_new.c:819:17
 1e124d4:    97 f3 0e a5       	call 3099164 <strcmp : 106ef4 >			  ## sdfile_new.c:819:17
 1e124d8:    62 20             	if (r0 == 0) goto 196 <sdfile_open+0x124 : 1e1259e >			  ## sdfile_new.c:819:17
 1e124da:    c2 ff 21 55 e1 01 	r2 = 31544609 <update_target_end+0x2699 : 1e15521 >			  ## sdfile_new.c:822:9
 1e124e0:    73 a0             	r3 = sp + 7			  ## sdfile_new.c:822:9
 1e124e2:    40 70             	r0 = 4			  ## sdfile_new.c:822:9
 1e124e4:    bf f3 21 e6       	call -13246 <log_print : 1e0f12a >			  ## sdfile_new.c:822:9
 1e124e8:    a8 18             	goto 336 <sdfile_open+0x1C0 : 1e1263a >			  ## sdfile_new.c:822:9
 1e124ea:    07 fb 02 ff       	r7 = -254 <bank_code_load_addr+0x1DC90A : 1ffff02 >
 1e124ee:    b4 18             	goto 360 <sdfile_open+0x1DE : 1e12658 >
 1e124f0:    f6 a3             	r6 = sp + 63
 1e124f2:    01 70             	r1 = 0			  ## sdfile_new.c:626:10
 1e124f4:    12 71             	r2 = 17			  ## sdfile_new.c:626:10
 1e124f6:    60 08             	r0 = r6			  ## sdfile_new.c:626:10
 1e124f8:    97 f3 fa a4       	call 3099124 <memset : 106ef0 >			  ## sdfile_new.c:626:10
 1e124fc:    01 f6 08 a0       	r1 = [r10 + 8]			  ## sdfile_new.c:630:48
 1e12500:    80 a1             	r0 = sp + 24			  ## sdfile_new.c:630:48
 1e12502:    40 80             	r0 += 4			  ## sdfile_new.c:630:26
 1e12504:    02 72             	r2 = 32			  ## sdfile_new.c:630:5
 1e12506:    97 f3 ed a4       	call 3099098 <memcpy : 106ee4 >			  ## sdfile_new.c:630:5
 1e1250a:    00 f6 04 a0       	r0 = [r10 + 4]			  ## sdfile_new.c:632:29
 1e1250e:    88 02             	[sp+32] = r0			  ## sdfile_new.c:632:19
 1e12510:    40 08             	r0 = r4			  ## sdfile_new.c:634:16
 1e12512:    61 08             	r1 = r6			  ## sdfile_new.c:634:16
 1e12514:    98 16             	call -720 <__sdfile_path_get_name : 1e12246 >			  ## sdfile_new.c:634:16
 1e12516:    06 08             	r6 = r0			  ## sdfile_new.c:634:16
 1e12518:    00 6c             	r0 = b[r6 + 0] (u)			  ## sdfile_new.c:635:9
 1e1251a:    76 20             	if (r0 == 0) goto 236 <sdfile_open+0x18E : 1e12608 >			  ## sdfile_new.c:635:9
 1e1251c:    87 a1             	r7 = sp + 24
 1e1251e:    01 70             	r1 = 0			  ## sdfile_new.c:637:9
 1e12520:    42 72             	r2 = 36			  ## sdfile_new.c:637:9
 1e12522:    70 08             	r0 = r7			  ## sdfile_new.c:637:9
 1e12524:    97 f3 e4 a4       	call 3099080 <memset : 106ef0 >			  ## sdfile_new.c:637:9
 1e12528:    f1 a3             	r1 = sp + 63
 1e1252a:    c8 ff d6 53 e1 01 	r8 = 31544278 <update_target_end+0x254E : 1e153d6 >
 1e12530:    70 08             	r0 = r7			  ## sdfile_new.c:638:15
 1e12532:    82 08             	r2 = r8			  ## sdfile_new.c:638:15
 1e12534:    be 16             	call -644 <sdfile_open_part_dir : 1e122b2 >			  ## sdfile_new.c:638:15
 1e12536:    07 08             	r7 = r0			  ## sdfile_new.c:638:15
 1e12538:    7f 3e             	if (r7 != 0) goto 254 <sdfile_open+0x1BE : 1e12638 >
 1e1253a:    f1 a3             	r1 = sp + 63
 1e1253c:    60 08             	r0 = r6			  ## sdfile_new.c:642:20
 1e1253e:    83 16             	call -762 <__sdfile_path_get_name : 1e12246 >			  ## sdfile_new.c:642:20
 1e12540:    06 08             	r6 = r0			  ## sdfile_new.c:642:20
 1e12542:    00 6c             	r0 = b[r6 + 0] (u)			  ## sdfile_new.c:643:13
 1e12544:    8c 20             	if (r0 == 0) goto 280 <sdfile_open+0x1E4 : 1e1265e >			  ## sdfile_new.c:643:13
 1e12546:    80 a1             	r0 = sp + 24
 1e12548:    f1 a3             	r1 = sp + 63
 1e1254a:    82 08             	r2 = r8			  ## sdfile_new.c:644:19
 1e1254c:    b2 16             	call -668 <sdfile_open_part_dir : 1e122b2 >			  ## sdfile_new.c:644:19
 1e1254e:    07 08             	r7 = r0			  ## sdfile_new.c:644:19
 1e12550:    73 3e             	if (r7 != 0) goto 230 <sdfile_open+0x1BE : 1e12638 >
 1e12552:    f7 a3             	r7 = sp + 63
 1e12554:    60 08             	r0 = r6			  ## sdfile_new.c:648:24
 1e12556:    71 08             	r1 = r7			  ## sdfile_new.c:648:24
 1e12558:    76 16             	call -788 <__sdfile_path_get_name : 1e12246 >			  ## sdfile_new.c:648:24
 1e1255a:    81 a1             	r1 = sp + 24			  ## sdfile_new.c:648:24
 1e1255c:    52 18             	goto 164 <sdfile_open+0x188 : 1e12602 >			  ## sdfile_new.c:648:24
 1e1255e:    f6 a3             	r6 = sp + 63
 1e12560:    01 70             	r1 = 0			  ## sdfile_new.c:703:10
 1e12562:    12 71             	r2 = 17			  ## sdfile_new.c:703:10
 1e12564:    60 08             	r0 = r6			  ## sdfile_new.c:703:10
 1e12566:    97 f3 c3 a4       	call 3099014 <memset : 106ef0 >			  ## sdfile_new.c:703:10
 1e1256a:    40 08             	r0 = r4			  ## sdfile_new.c:706:16
 1e1256c:    61 08             	r1 = r6			  ## sdfile_new.c:706:16
 1e1256e:    6b 16             	call -810 <__sdfile_path_get_name : 1e12246 >			  ## sdfile_new.c:706:16
 1e12570:    06 08             	r6 = r0			  ## sdfile_new.c:706:16
 1e12572:    00 6c             	r0 = b[r6 + 0] (u)			  ## sdfile_new.c:707:9
 1e12574:    4b 20             	if (r0 == 0) goto 150 <sdfile_open+0x192 : 1e1260c >			  ## sdfile_new.c:707:9
 1e12576:    00 a5             	r0 = sp + 80
 1e12578:    40 80             	r0 += 4			  ## sdfile_new.c:555:38
 1e1257a:    f1 a3             	r1 = sp + 63
 1e1257c:    4c 17             	call -360 <sdfile_for_each_dir : 1e12416 >			  ## sdfile_new.c:555:11
 1e1257e:    07 08             	r7 = r0			  ## sdfile_new.c:555:11
 1e12580:    5b 3e             	if (r7 != 0) goto 182 <sdfile_open+0x1BE : 1e12638 >
 1e12582:    c0 f5 60 00       	r0 = b[sp+96] (u)			  ## sdfile_new.c:557:24
 1e12586:    20 fd 0f 09       	r0 = r0 & 15			  ## sdfile_new.c:557:29
 1e1258a:    07 fb 01 ff       	r7 = -255 <bank_code_load_addr+0x1DC909 : 1ffff01 >			  ## sdfile_new.c:557:29
 1e1258e:    30 e0 53 10       	if (r0 != 3) goto 166 <sdfile_open+0x1BE : 1e12638 >
 1e12592:    f7 a3             	r7 = sp + 63
 1e12594:    60 08             	r0 = r6			  ## sdfile_new.c:713:9
 1e12596:    71 08             	r1 = r7			  ## sdfile_new.c:713:9
 1e12598:    56 16             	call -852 <__sdfile_path_get_name : 1e12246 >			  ## sdfile_new.c:713:9
 1e1259a:    01 a5             	r1 = sp + 80			  ## sdfile_new.c:713:9
 1e1259c:    32 18             	goto 100 <sdfile_open+0x188 : 1e12602 >			  ## sdfile_new.c:713:9
 1e1259e:    f6 a3             	r6 = sp + 63
 1e125a0:    01 70             	r1 = 0			  ## sdfile_new.c:665:10
 1e125a2:    12 71             	r2 = 17			  ## sdfile_new.c:665:10
 1e125a4:    60 08             	r0 = r6			  ## sdfile_new.c:665:10
 1e125a6:    97 f3 a3 a4       	call 3098950 <memset : 106ef0 >			  ## sdfile_new.c:665:10
 1e125aa:    07 f6 0c a0       	r7 = [r10 + 12]			  ## sdfile_new.c:669:48
 1e125ae:    40 a7             	r0 = sp + 116			  ## sdfile_new.c:669:48
 1e125b0:    40 80             	r0 += 4			  ## sdfile_new.c:669:26
 1e125b2:    02 72             	r2 = 32			  ## sdfile_new.c:669:5
 1e125b4:    71 08             	r1 = r7			  ## sdfile_new.c:669:5
 1e125b6:    97 f3 95 a4       	call 3098922 <memcpy : 106ee4 >			  ## sdfile_new.c:669:5
 1e125ba:    ff 03             	[sp+124] = r7			  ## sdfile_new.c:671:19
 1e125bc:    40 08             	r0 = r4			  ## sdfile_new.c:673:16
 1e125be:    61 08             	r1 = r6			  ## sdfile_new.c:673:16
 1e125c0:    42 16             	call -892 <__sdfile_path_get_name : 1e12246 >			  ## sdfile_new.c:673:16
 1e125c2:    06 08             	r6 = r0			  ## sdfile_new.c:673:16
 1e125c4:    00 6c             	r0 = b[r6 + 0] (u)			  ## sdfile_new.c:674:9
 1e125c6:    33 20             	if (r0 == 0) goto 102 <sdfile_open+0x1B4 : 1e1262e >			  ## sdfile_new.c:674:9
 1e125c8:    47 a7             	r7 = sp + 116
 1e125ca:    01 70             	r1 = 0			  ## sdfile_new.c:676:9
 1e125cc:    42 72             	r2 = 36			  ## sdfile_new.c:676:9
 1e125ce:    70 08             	r0 = r7			  ## sdfile_new.c:676:9
 1e125d0:    97 f3 8e a4       	call 3098908 <memset : 106ef0 >			  ## sdfile_new.c:676:9
 1e125d4:    f1 a3             	r1 = sp + 63
 1e125d6:    70 08             	r0 = r7			  ## sdfile_new.c:677:15
 1e125d8:    82 08             	r2 = r8			  ## sdfile_new.c:677:15
 1e125da:    6b 16             	call -810 <sdfile_open_part_dir : 1e122b2 >			  ## sdfile_new.c:677:15
 1e125dc:    07 08             	r7 = r0			  ## sdfile_new.c:677:15
 1e125de:    2c 3e             	if (r7 != 0) goto 88 <sdfile_open+0x1BE : 1e12638 >
 1e125e0:    f1 a3             	r1 = sp + 63
 1e125e2:    60 08             	r0 = r6			  ## sdfile_new.c:681:20
 1e125e4:    30 16             	call -928 <__sdfile_path_get_name : 1e12246 >			  ## sdfile_new.c:681:20
 1e125e6:    06 08             	r6 = r0			  ## sdfile_new.c:681:20
 1e125e8:    00 6c             	r0 = b[r6 + 0] (u)			  ## sdfile_new.c:682:13
 1e125ea:    43 20             	if (r0 == 0) goto 134 <sdfile_open+0x1F8 : 1e12672 >			  ## sdfile_new.c:682:13
 1e125ec:    40 a7             	r0 = sp + 116
 1e125ee:    f1 a3             	r1 = sp + 63
 1e125f0:    82 08             	r2 = r8			  ## sdfile_new.c:683:19
 1e125f2:    5f 16             	call -834 <sdfile_open_part_dir : 1e122b2 >			  ## sdfile_new.c:683:19
 1e125f4:    07 08             	r7 = r0			  ## sdfile_new.c:683:19
 1e125f6:    20 3e             	if (r7 != 0) goto 64 <sdfile_open+0x1BE : 1e12638 >
 1e125f8:    f7 a3             	r7 = sp + 63
 1e125fa:    60 08             	r0 = r6			  ## sdfile_new.c:687:24
 1e125fc:    71 08             	r1 = r7			  ## sdfile_new.c:687:24
 1e125fe:    23 16             	call -954 <__sdfile_path_get_name : 1e12246 >			  ## sdfile_new.c:687:24
 1e12600:    41 a7             	r1 = sp + 116			  ## sdfile_new.c:687:24
 1e12602:    50 08             	r0 = r5
 1e12604:    72 08             	r2 = r7
 1e12606:    16 18             	goto 44 <sdfile_open+0x1BA : 1e12634 >
 1e12608:    81 a1             	r1 = sp + 24
 1e1260a:    12 18             	goto 36 <sdfile_open+0x1B6 : 1e12630 >
 1e1260c:    40 9a             	r0 = r5 + 4			  ## sdfile_new.c:610:39
 1e1260e:    f1 a3             	r1 = sp + 63			  ## sdfile_new.c:610:39
 1e12610:    02 17             	call -508 <sdfile_for_each_dir : 1e12416 >			  ## sdfile_new.c:610:11
 1e12612:    21 4a             	r1 = [r5 + 8]			  ## sdfile_new.c:610:11
 1e12614:    07 08             	r7 = r0			  ## sdfile_new.c:610:11
 1e12616:    05 3e             	if (r7 != 0) goto 10 <sdfile_open+0x1A8 : 1e12622 >
 1e12618:    01 82             	r1 += 32			  ## sdfile_new.c:613:25
 1e1261a:    29 4a             	[r5 + 8] = r1			  ## sdfile_new.c:613:25
 1e1261c:    30 4a             	r0 = [r5 + 12]			  ## sdfile_new.c:614:24
 1e1261e:    00 8e             	r0 += -32			  ## sdfile_new.c:614:24
 1e12620:    38 4a             	[r5 + 12] = r0			  ## sdfile_new.c:614:24
 1e12622:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## sdfile_new.c:617:32
 1e12628:    11 f6 4c 01       	[r0 + 332] = r1			  ## sdfile_new.c:617:32
 1e1262c:    05 18             	goto 10 <sdfile_open+0x1BE : 1e12638 >			  ## sdfile_new.c:617:32
 1e1262e:    41 a7             	r1 = sp + 116
 1e12630:    f2 a3             	r2 = sp + 63
 1e12632:    50 08             	r0 = r5
 1e12634:    cb 16             	call -618 <sdfile_open_file_in_dir : 1e123cc >
 1e12636:    07 08             	r7 = r0
 1e12638:    0c 2e             	if (r7 == 0) goto 24 <sdfile_open+0x1D8 : 1e12652 >
 1e1263a:    c2 ff 4f 55 e1 01 	r2 = 31544655 <update_target_end+0x26C7 : 1e1554f >			  ## sdfile_new.c:832:5
 1e12640:    10 70             	r0 = 1			  ## sdfile_new.c:832:5
 1e12642:    0c 02             	[sp] = r4			  ## sdfile_new.c:832:5
 1e12644:    43 08             	r3 = r4			  ## sdfile_new.c:832:5
 1e12646:    bf f3 70 e5       	call -13600 <log_print : 1e0f12a >			  ## sdfile_new.c:832:5
 1e1264a:    50 08             	r0 = r5			  ## sdfile_new.c:833:5
 1e1264c:    bf f3 de e9       	call -11332 <free : 1e0fa0c >			  ## sdfile_new.c:833:5
 1e12650:    03 18             	goto 6 <sdfile_open+0x1DE : 1e12658 >			  ## sdfile_new.c:833:5
 1e12652:    15 f6 0c 90       	[r9 + 12] = r5			  ## sdfile_new.c:827:29
 1e12656:    07 70             	r7 = 0			  ## sdfile_new.c:827:29
 1e12658:    70 08             	r0 = r7			  ## sdfile_new.c:835:1
 1e1265a:    4c 0a             	sp += 152			  ## sdfile_new.c:835:1
 1e1265c:    5a 01             	{pc, r10-r4} = [sp++]			  ## sdfile_new.c:835:1
 1e1265e:    80 02             	r0 = [sp+32]			  ## sdfile_new.c:651:65
 1e12660:    01 f6 00 a0       	r1 = [r10 + 0]			  ## sdfile_new.c:158:29
 1e12664:    02 f6 04 a0       	r2 = [r10 + 4]			  ## sdfile_new.c:158:53
 1e12668:    00 8e             	r0 += -32			  ## sdfile_new.c:158:19
 1e1266a:    60 b0             	r0 = r0 - r1			  ## sdfile_new.c:158:43
 1e1266c:    81 b0             	r1 = r0 + r2			  ## sdfile_new.c:651:71
 1e1266e:    89 02             	[sp+32] = r1			  ## sdfile_new.c:651:27
 1e12670:    09 18             	goto 18 <sdfile_open+0x20A : 1e12684 >			  ## sdfile_new.c:651:27
 1e12672:    f0 03             	r0 = [sp+124]			  ## sdfile_new.c:690:65
 1e12674:    01 f6 00 a0       	r1 = [r10 + 0]			  ## sdfile_new.c:158:29
 1e12678:    02 f6 04 a0       	r2 = [r10 + 4]			  ## sdfile_new.c:158:53
 1e1267c:    00 8e             	r0 += -32			  ## sdfile_new.c:158:19
 1e1267e:    60 b0             	r0 = r0 - r1			  ## sdfile_new.c:158:43
 1e12680:    81 b0             	r1 = r0 + r2			  ## sdfile_new.c:690:71
 1e12682:    f9 03             	[sp+124] = r1			  ## sdfile_new.c:690:27
 1e12684:    f2 a3             	r2 = sp + 63
 1e12686:    50 08             	r0 = r5
 1e12688:    ba 16             	call -652 <sdfile_open_spc_part_file : 1e123fe >
 1e1268a:    d5 1f             	goto -86 <sdfile_open+0x1BC : 1e12636 >


sdfile_read:
 1e1268c:    77 01             	[--sp] = {rets, r7-r4}			  ## sdfile_new.c:838:0
 1e1268e:    24 08             	r4 = r2			  ## sdfile_new.c:838:0
 1e12690:    02 08             	r2 = r0			  ## sdfile_new.c:838:0
 1e12692:    00 70             	r0 = 0			  ## sdfile_new.c:838:0
 1e12694:    12 24             	if (r2 == 0) goto 36 <sdfile_read+0x2E : 1e126ba >			  ## sdfile_new.c:838:0
 1e12696:    35 44             	r5 = [r2 + 12]			  ## sdfile_new.c:846:38
 1e12698:    10 2a             	if (r5 == 0) goto 32 <sdfile_read+0x2E : 1e126ba >
 1e1269a:    06 4a             	r6 = [r5 + 0]			  ## sdfile_new.c:852:43
 1e1269c:    20 4a             	r0 = [r5 + 8]			  ## sdfile_new.c:859:56
 1e1269e:    37 4a             	r7 = [r5 + 12]			  ## sdfile_new.c:852:30
 1e126a0:    82 b1             	r2 = r0 + r6			  ## sdfile_new.c:859:42
 1e126a2:    10 08             	r0 = r1			  ## sdfile_new.c:859:5
 1e126a4:    21 08             	r1 = r2			  ## sdfile_new.c:859:5
 1e126a6:    42 08             	r2 = r4			  ## sdfile_new.c:859:5
 1e126a8:    97 f3 1c a4       	call 3098680 <memcpy : 106ee4 >			  ## sdfile_new.c:859:5
 1e126ac:    a0 bf             	r0 = r7 - r6			  ## sdfile_new.c:852:34
 1e126ae:    40 f2 01 30       	if (r0 < r4) goto 2 <sdfile_read+0x28 : 1e126b4 >
 1e126b2:    40 08             	r0 = r4			  ## sdfile_new.c:855:9
 1e126b4:    01 4a             	r1 = [r5 + 0]			  ## sdfile_new.c:861:17
 1e126b6:    01 09             	r1 += r0			  ## sdfile_new.c:861:17
 1e126b8:    09 4a             	[r5 + 0] = r1			  ## sdfile_new.c:861:17
 1e126ba:    57 01             	{pc, r7-r4} = [sp++]			  ## sdfile_new.c:864:1


sdfile_write:
 1e126bc:    78 01             	[--sp] = {rets, r8-r4}			  ## sdfile_new.c:896:0
 1e126be:    03 08             	r3 = r0			  ## sdfile_new.c:896:0
 1e126c0:    00 70             	r0 = 0			  ## sdfile_new.c:896:0
 1e126c2:    29 26             	if (r3 == 0) goto 82 <sdfile_write+0x5A : 1e12716 >			  ## sdfile_new.c:896:0
 1e126c4:    35 46             	r5 = [r3 + 12]			  ## sdfile_new.c:906:38
 1e126c6:    27 2a             	if (r5 == 0) goto 78 <sdfile_write+0x5A : 1e12716 >
 1e126c8:    03 4a             	r3 = [r5 + 0]			  ## sdfile_new.c:912:43
 1e126ca:    30 4a             	r0 = [r5 + 12]			  ## sdfile_new.c:912:30
 1e126cc:    e4 b0             	r4 = r0 - r3			  ## sdfile_new.c:912:34
 1e126ce:    24 f2 01 30       	if (r4 < r2) goto 2 <sdfile_write+0x18 : 1e126d4 >
 1e126d2:    24 08             	r4 = r2			  ## sdfile_new.c:915:9
 1e126d4:    26 4a             	r6 = [r5 + 8]			  ## sdfile_new.c:919:39
 1e126d6:    c2 ff a0 22 00 00 	r2 = 8864 <_sdfile_handl : 22a0 >			  ## sdfile_new.c:919:39
 1e126dc:    08 f6 04 20       	r8 = [r2 + 4]			  ## sdfile_new.c:163:29
 1e126e0:    02 44             	r2 = [r2 + 0]			  ## sdfile_new.c:163:48
 1e126e2:    63 09             	r3 += r6			  ## sdfile_new.c:919:25
 1e126e4:    0b 28             	if (r4 == 0) goto 22 <sdfile_write+0x40 : 1e126fc >
 1e126e6:    06 70             	r6 = 0
 1e126e8:    07 fa 00 16       	r7 = b[r1+r6] (u)			  ## sdfile_new.c:783:14
 1e126ec:    00 fa 00 36       	r0 = b[r3+r6] (u)			  ## sdfile_new.c:783:24
 1e126f0:    50 bf             	r0 &= r7			  ## sdfile_new.c:783:22
 1e126f2:    70 f2 11 10       	if (r0 != r7) goto 34 <sdfile_write+0x5C : 1e12718 >			  ## sdfile_new.c:783:22
 1e126f6:    16 80             	r6 += 1			  ## sdfile_new.c:782:31
 1e126f8:    46 f2 f6 3f       	if (r6 < r4) goto -20 <sdfile_write+0x2C : 1e126e8 >
 1e126fc:    90 fb 80 03       	r0 = r3 - r8			  ## sdfile_new.c:163:19
 1e12700:    02 09             	r2 += r0			  ## sdfile_new.c:163:38
 1e12702:    10 08             	r0 = r1			  ## sdfile_new.c:927:11
 1e12704:    41 08             	r1 = r4			  ## sdfile_new.c:927:11
 1e12706:    bf f3 0e 78       	call -69604 <norflash_write : 1e01726 >			  ## sdfile_new.c:927:11
 1e1270a:    40 f2 04 10       	if (r0 != r4) goto 8 <sdfile_write+0x5A : 1e12716 >
 1e1270e:    00 4a             	r0 = [r5 + 0]			  ## sdfile_new.c:930:21
 1e12710:    40 09             	r0 += r4			  ## sdfile_new.c:930:21
 1e12712:    08 4a             	[r5 + 0] = r0			  ## sdfile_new.c:930:21
 1e12714:    40 08             	r0 = r4			  ## sdfile_new.c:930:21
 1e12716:    58 01             	{pc, r8-r4} = [sp++]			  ## sdfile_new.c:934:1
 1e12718:    00 fb 06 ff       	r0 = -250 <bank_code_load_addr+0x1DC90E : 1ffff06 >
 1e1271c:    58 01             	{pc, r8-r4} = [sp++]			  ## sdfile_new.c:934:1


sdfile_seek:
 1e1271e:    0e 20             	if (r0 == 0) goto 28 <sdfile_seek+0x1E : 1e1273c >			  ## sdfile_new.c:867:0
 1e12720:    30 40             	r0 = [r0 + 12]			  ## sdfile_new.c:872:38
 1e12722:    0c 20             	if (r0 == 0) goto 24 <sdfile_seek+0x1E : 1e1273c >
 1e12724:    22 e0 04 00       	if (r2 == 2) goto 8 <sdfile_seek+0x12 : 1e12730 >			  ## sdfile_new.c:878:5
 1e12728:    12 e0 05 00       	if (r2 == 1) goto 10 <sdfile_seek+0x18 : 1e12736 >
 1e1272c:    06 24             	if (r2 == 0) goto 12 <sdfile_seek+0x1C : 1e1273a >
 1e1272e:    06 18             	goto 12 <sdfile_seek+0x1E : 1e1273c >
 1e12730:    32 40             	r2 = [r0 + 12]			  ## sdfile_new.c:886:35
 1e12732:    61 b4             	r1 = r2 - r1			  ## sdfile_new.c:886:39
 1e12734:    02 18             	goto 4 <sdfile_seek+0x1C : 1e1273a >
 1e12736:    02 40             	r2 = [r0 + 0]			  ## sdfile_new.c:883:21
 1e12738:    21 09             	r1 += r2			  ## sdfile_new.c:883:21
 1e1273a:    09 40             	[r0 + 0] = r1
 1e1273c:    00 70             	r0 = 0			  ## sdfile_new.c:891:1
 1e1273e:    20 00             	rts			  ## sdfile_new.c:891:1


sdfile_len:
 1e12740:    01 08             	r1 = r0			  ## sdfile_new.c:952:0
 1e12742:    00 70             	r0 = 0			  ## sdfile_new.c:952:0
 1e12744:    03 22             	if (r1 == 0) goto 6 <sdfile_len+0xC : 1e1274c >			  ## sdfile_new.c:952:0
 1e12746:    31 42             	r1 = [r1 + 12]			  ## sdfile_new.c:957:38
 1e12748:    01 22             	if (r1 == 0) goto 2 <sdfile_len+0xC : 1e1274c >
 1e1274a:    30 42             	r0 = [r1 + 12]			  ## sdfile_new.c:963:24
 1e1274c:    20 00             	rts			  ## sdfile_new.c:964:1


sdfile_pos:
 1e1274e:    01 08             	r1 = r0			  ## sdfile_new.c:967:0
 1e12750:    00 70             	r0 = 0			  ## sdfile_new.c:967:0
 1e12752:    03 22             	if (r1 == 0) goto 6 <sdfile_pos+0xC : 1e1275a >			  ## sdfile_new.c:967:0
 1e12754:    31 42             	r1 = [r1 + 12]			  ## sdfile_new.c:972:38
 1e12756:    01 22             	if (r1 == 0) goto 2 <sdfile_pos+0xC : 1e1275a >
 1e12758:    00 42             	r0 = [r1 + 0]			  ## sdfile_new.c:975:23
 1e1275a:    20 00             	rts			  ## sdfile_new.c:979:1


sdfile_get_name:
 1e1275c:    74 01             	[--sp] = {rets, r4}			  ## sdfile_new.c:982:0
 1e1275e:    24 08             	r4 = r2			  ## sdfile_new.c:982:0
 1e12760:    02 08             	r2 = r0			  ## sdfile_new.c:982:0
 1e12762:    00 70             	r0 = 0			  ## sdfile_new.c:982:0
 1e12764:    0c 24             	if (r2 == 0) goto 24 <sdfile_get_name+0x22 : 1e1277e >			  ## sdfile_new.c:982:0
 1e12766:    32 44             	r2 = [r2 + 12]			  ## sdfile_new.c:987:38
 1e12768:    0a 24             	if (r2 == 0) goto 20 <sdfile_get_name+0x22 : 1e1277e >
 1e1276a:    04 e1 01 b0       	ifs (r4 < 16) goto 2 <sdfile_get_name+0x14 : 1e12770 >
 1e1276e:    04 71             	r4 = 16
 1e12770:    42 81             	r2 += 20			  ## sdfile_new.c:996:5
 1e12772:    10 08             	r0 = r1			  ## sdfile_new.c:996:5
 1e12774:    21 08             	r1 = r2			  ## sdfile_new.c:996:5
 1e12776:    42 08             	r2 = r4			  ## sdfile_new.c:996:5
 1e12778:    97 f3 b4 a3       	call 3098472 <memcpy : 106ee4 >			  ## sdfile_new.c:996:5
 1e1277c:    40 08             	r0 = r4			  ## sdfile_new.c:996:5
 1e1277e:    54 01             	{pc, r4} = [sp++]			  ## sdfile_new.c:999:1


sdfile_close:
 1e12780:    34 00             	[--sp] = rets			  ## sdfile_new.c:937:0
 1e12782:    04 20             	if (r0 == 0) goto 8 <sdfile_close+0xC : 1e1278c >			  ## sdfile_new.c:937:0
 1e12784:    30 40             	r0 = [r0 + 12]			  ## sdfile_new.c:942:38
 1e12786:    02 20             	if (r0 == 0) goto 4 <sdfile_close+0xC : 1e1278c >
 1e12788:    bf f3 40 e9       	call -11648 <free : 1e0fa0c >			  ## sdfile_new.c:945:9
 1e1278c:    00 70             	r0 = 0			  ## sdfile_new.c:949:1
 1e1278e:    30 00             	pc = [sp++]			  ## sdfile_new.c:949:1


sdfile_delete:
 1e12790:    78 01             	[--sp] = {rets, r8-r4}			  ## sdfile_new.c:2182:0
 1e12792:    30 40             	r0 = [r0 + 12]			  ## sdfile_new.c:2186:34
 1e12794:    08 70             	r8 = 0
 1e12796:    24 20             	if (r0 == 0) goto 72 <sdfile_delete+0x50 : 1e127e0 >
 1e12798:    c1 ff 50 27 00 00 	r1 = 10064 <vm_obj : 2750 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/vm/vm.c:1467:9
 1e1279e:    01 f9 6d 11       	r1 = b[r1 + 365] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/vm/vm.c:1467:9
 1e127a2:    07 fb 00 10       	r7 = 4096 <sys_clock_limit+0x44 : 1000 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/vm/vm.c:1467:9
 1e127a6:    02 f3 02 10       	if ((r1 & 4) == 0) goto 4 <sdfile_delete+0x1E : 1e127ae >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/vm/vm.c:1467:9
 1e127aa:    07 fb 00 01       	r7 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >
 1e127ae:    c2 ff a0 22 00 00 	r2 = 8864 <_sdfile_handl : 22a0 >
 1e127b4:    13 44             	r3 = [r2 + 4]			  ## sdfile_new.c:163:29
 1e127b6:    24 40             	r4 = [r0 + 8]			  ## sdfile_new.c:2191:21
 1e127b8:    02 44             	r2 = [r2 + 0]			  ## sdfile_new.c:163:48
 1e127ba:    30 40             	r0 = [r0 + 12]			  ## sdfile_new.c:2193:20
 1e127bc:    e3 b8             	r3 = r4 - r3			  ## sdfile_new.c:163:19
 1e127be:    85 b6             	r5 = r3 + r2			  ## sdfile_new.c:163:38
 1e127c0:    44 b1             	r4 = r0 + r5			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/vm/vm.c:1475:31
 1e127c2:    54 f2 0c 90       	if (r4 <= r5) goto 24 <sdfile_delete+0x4E : 1e127de >
 1e127c6:    81 fd 10 01       	r0 = uextra(r1, p:2, l:1)
 1e127ca:    06 fd 02 09       	r6 = r0 | 2
 1e127ce:    60 08             	r0 = r6			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/vm/vm.c:1477:13
 1e127d0:    51 08             	r1 = r5			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/vm/vm.c:1477:13
 1e127d2:    bf f3 fa 76       	call -70156 <sfc_erase : 1e015ca >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/vm/vm.c:1477:13
 1e127d6:    04 20             	if (r0 == 0) goto 8 <sdfile_delete+0x50 : 1e127e0 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/vm/vm.c:1477:13
 1e127d8:    75 09             	r5 += r7			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/vm/vm.c:1476:40
 1e127da:    45 f2 f8 3f       	if (r5 < r4) goto -16 <sdfile_delete+0x3E : 1e127ce >
 1e127de:    18 70             	r8 = 1
 1e127e0:    80 08             	r0 = r8			  ## sdfile_new.c:2201:1
 1e127e2:    58 01             	{pc, r8-r4} = [sp++]			  ## sdfile_new.c:2201:1


sdfile_get_attrs:
 1e127e4:    0e 20             	if (r0 == 0) goto 28 <sdfile_get_attrs+0x1E : 1e12802 >			  ## sdfile_new.c:1002:0
 1e127e6:    30 40             	r0 = [r0 + 12]			  ## sdfile_new.c:1007:38
 1e127e8:    0c 20             	if (r0 == 0) goto 24 <sdfile_get_attrs+0x1E : 1e12802 >
 1e127ea:    02 61             	r2 = b[r0 + 16] (u)			  ## sdfile_new.c:1014:22
 1e127ec:    22 fd 0f 29       	r2 = r2 & 15			  ## sdfile_new.c:1014:27
 1e127f0:    32 e0 03 10       	if (r2 != 3) goto 6 <sdfile_get_attrs+0x16 : 1e127fa >			  ## sdfile_new.c:1014:27
 1e127f4:    02 62             	r2 = b[r1 + 0] (u)			  ## sdfile_new.c:1015:20
 1e127f6:    12 b1             	r2 |= 4			  ## sdfile_new.c:1015:20
 1e127f8:    0a 62             	b[r1 + 0] = r2			  ## sdfile_new.c:1015:20
 1e127fa:    32 40             	r2 = [r0 + 12]			  ## sdfile_new.c:1020:31
 1e127fc:    1a 42             	[r1 + 4] = r2			  ## sdfile_new.c:1020:17
 1e127fe:    20 40             	r0 = [r0 + 8]			  ## sdfile_new.c:1021:32
 1e12800:    28 42             	[r1 + 8] = r0			  ## sdfile_new.c:1021:18
 1e12802:    00 70             	r0 = 0			  ## sdfile_new.c:1023:1
 1e12804:    20 00             	rts			  ## sdfile_new.c:1023:1


fopen:
 1e12806:    7d 01             	[--sp] = {rets, r13-r4}			  ## vfs.c:385:0
 1e12808:    1a 08             	r10 = r1			  ## vfs.c:385:0
 1e1280a:    0d 08             	r13 = r0			  ## vfs.c:385:0
 1e1280c:    97 f3 c6 a2       	call 3097996 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e12810:    c6 ff 80 08 00 00 	r6 = 2176 <head.1354 : 880 >			  ## spinlock.h:77:5
 1e12816:    07 4c             	r7 = [r6 + 0]			  ## spinlock.h:77:5
 1e12818:    67 f2 12 00       	if (r7 == r6) goto 36 <fopen+0x3A : 1e12840 >			  ## spinlock.h:77:5
 1e1281c:    00 f9 5c 70       	r0 = b[r7 + 92] (u)			  ## vfs.c:97:17
 1e12820:    74 fc c0 ff       	r4 = r7 + -64			  ## vfs.c:97:17
 1e12824:    0a 20             	if (r0 == 0) goto 20 <fopen+0x34 : 1e1283a >			  ## vfs.c:97:17
 1e12826:    15 48             	r5 = [r4 + 4]			  ## vfs.c:100:28
 1e12828:    50 08             	r0 = r5			  ## vfs.c:100:40
 1e1282a:    97 f3 67 a3       	call 3098318 <strlen : 106efc >			  ## vfs.c:100:40
 1e1282e:    02 08             	r2 = r0			  ## vfs.c:100:40
 1e12830:    50 08             	r0 = r5			  ## vfs.c:100:18
 1e12832:    d1 08             	r1 = r13			  ## vfs.c:100:18
 1e12834:    97 f3 5a a3       	call 3098292 <memcmp : 106eec >			  ## vfs.c:100:18
 1e12838:    08 20             	if (r0 == 0) goto 16 <fopen+0x44 : 1e1284a >			  ## vfs.c:100:18
 1e1283a:    07 49             	r7 = [r4 + 64]
 1e1283c:    67 f2 ee 1f       	if (r7 != r6) goto -36 <fopen+0x16 : 1e1281c >
 1e12840:    97 f3 aa a2       	call 3097940 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e12844:    0c 70             	r12 = 0			  ## spinlock.h:88:5
 1e12846:    c0 08             	r0 = r12			  ## vfs.c:435:1
 1e12848:    5d 01             	{pc, r13-r4} = [sp++]			  ## vfs.c:435:1
 1e1284a:    97 f3 a5 a2       	call 3097930 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e1284e:    4b fc 4c 00       	r11 = r4 + 76			  ## vfs.c:397:11
 1e12852:    01 70             	r1 = 0			  ## vfs.c:397:11
 1e12854:    0c 70             	r12 = 0			  ## vfs.c:397:11
 1e12856:    b0 08             	r0 = r11			  ## vfs.c:397:11
 1e12858:    97 f3 e4 a2       	call 3098056 <os_mutex_pend : 106e24 >			  ## vfs.c:397:11
 1e1285c:    01 f9 5c 70       	r1 = b[r7 + 92] (u)			  ## vfs.c:397:11
 1e12860:    45 22             	if (r1 == 0) goto 138 <fopen+0xE6 : 1e128ec >
 1e12862:    f1 31             	if (r0 != 0) goto -30 <fopen+0x40 : 1e12846 >
 1e12864:    10 48             	r0 = [r4 + 4]			  ## vfs.c:403:53
 1e12866:    97 f3 49 a3       	call 3098258 <strlen : 106efc >			  ## vfs.c:403:42
 1e1286a:    d0 09             	r0 += r13			  ## vfs.c:134:13
 1e1286c:    10 80             	r0 += 1			  ## vfs.c:134:13
 1e1286e:    85 99             	r5 = r4 + 24			  ## vfs.c:403:29
 1e12870:    22 6b             	r2 = b[r5 + 18] (u)
 1e12872:    28 9b             	r8 = r5 + 18			  ## vfs.c:134:13
 1e12874:    01 70             	r1 = 0
 1e12876:    03 fa 00 01       	r3 = b[r0+r1] (u)			  ## vfs.c:135:24
 1e1287a:    32 f2 05 10       	if (r2 != r3) goto 10 <fopen+0x82 : 1e12888 >			  ## vfs.c:135:9
 1e1287e:    42 ba             	r2 = r5 + r1			  ## vfs.c:135:24
 1e12880:    32 65             	r2 = b[r2 + 19] (u)			  ## vfs.c:136:17
 1e12882:    11 80             	r1 += 1			  ## vfs.c:136:17
 1e12884:    f8 35             	if (r2 != 0) goto -16 <fopen+0x70 : 1e12876 >			  ## vfs.c:136:17
 1e12886:    03 18             	goto 6 <fopen+0x88 : 1e1288e >			  ## vfs.c:136:17
 1e12888:    05 4a             	r5 = [r5 + 0]			  ## vfs.c:141:22
 1e1288a:    f2 3b             	if (r5 != 0) goto -28 <fopen+0x6A : 1e12870 >
 1e1288c:    2f 18             	goto 94 <fopen+0xE6 : 1e128ec >
 1e1288e:    2e 2a             	if (r5 == 0) goto 92 <fopen+0xE6 : 1e128ec >
 1e12890:    97 f3 84 a2       	call 3097864 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e12894:    00 71             	r0 = 16			  ## vfs.c:159:26
 1e12896:    bf f3 8e e8       	call -12004 <malloc : 1e0f9b6 >			  ## vfs.c:159:26
 1e1289a:    09 08             	r9 = r0			  ## vfs.c:159:26
 1e1289c:    0c 40             	[r0 + 0] = r4			  ## vfs.c:160:14
 1e1289e:    97 f3 7b a2       	call 3097846 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e128a2:    09 e0 23 00       	if (r9 == 0) goto 70 <fopen+0xE6 : 1e128ec >			  ## spinlock.h:88:5
 1e128a6:    15 f6 08 90       	[r9 + 8] = r5			  ## vfs.c:413:16
 1e128aa:    c0 98             	r0 = r4 + 12			  ## vfs.c:414:22
 1e128ac:    10 f6 04 90       	[r9 + 4] = r0			  ## vfs.c:414:15
 1e128b0:    20 48             	r0 = [r4 + 8]			  ## vfs.c:418:13
 1e128b2:    65 40             	r5 = [r0 + 24]			  ## vfs.c:418:18
 1e128b4:    12 2a             	if (r5 == 0) goto 36 <fopen+0xD4 : 1e128da >
 1e128b6:    10 48             	r0 = [r4 + 4]			  ## vfs.c:416:31
 1e128b8:    97 f3 20 a3       	call 3098176 <strlen : 106efc >			  ## vfs.c:416:20
 1e128bc:    80 fb 00 6d       	r6 = r13 + r0			  ## vfs.c:416:18
 1e128c0:    80 08             	r0 = r8			  ## vfs.c:416:43
 1e128c2:    97 f3 1b a3       	call 3098166 <strlen : 106efc >			  ## vfs.c:416:43
 1e128c6:    60 09             	r0 += r6			  ## vfs.c:416:37
 1e128c8:    11 90             	r1 = r0 + 1			  ## vfs.c:416:41
 1e128ca:    90 08             	r0 = r9			  ## vfs.c:419:19
 1e128cc:    a2 08             	r2 = r10			  ## vfs.c:419:19
 1e128ce:    85 00             	call r5			  ## vfs.c:419:19
 1e128d0:    04 20             	if (r0 == 0) goto 8 <fopen+0xD4 : 1e128da >
 1e128d2:    90 08             	r0 = r9			  ## vfs.c:170:9
 1e128d4:    bf f3 9a e8       	call -11980 <free : 1e0fa0c >			  ## vfs.c:170:9
 1e128d8:    09 18             	goto 18 <fopen+0xE6 : 1e128ec >			  ## vfs.c:170:9
 1e128da:    97 f3 5f a2       	call 3097790 <local_irq_disable : 106d9c >			  ## atomic.h:16:5
 1e128de:    08 00             	csync			  ## atomic.h:16:5
 1e128e0:    20 49             	r0 = [r4 + 72]			  ## atomic.h:18:14
 1e128e2:    10 80             	r0 += 1			  ## atomic.h:19:22
 1e128e4:    28 49             	[r4 + 72] = r0			  ## atomic.h:19:16
 1e128e6:    97 f3 57 a2       	call 3097774 <local_irq_enable : 106d98 >			  ## atomic.h:21:5
 1e128ea:    9c 08             	r12 = r9			  ## atomic.h:21:5
 1e128ec:    b0 08             	r0 = r11
 1e128ee:    97 f3 9b a2       	call 3097910 <os_mutex_post : 106e28 >
 1e128f2:    a9 1f             	goto -174 <fopen+0x40 : 1e12846 >


fread:
 1e128f4:    77 01             	[--sp] = {rets, r7-r4}			  ## vfs.c:439:0
 1e128f6:    05 08             	r5 = r0			  ## vfs.c:439:0
 1e128f8:    00 4a             	r0 = [r5 + 0]			  ## vfs.c:445:11
 1e128fa:    26 08             	r6 = r2			  ## vfs.c:445:11
 1e128fc:    17 08             	r7 = r1
 1e128fe:    c0 84             	r0 += 76			  ## vfs.c:445:11
 1e12900:    01 70             	r1 = 0			  ## vfs.c:445:11
 1e12902:    04 70             	r4 = 0			  ## vfs.c:445:11
 1e12904:    97 f3 8e a2       	call 3097884 <os_mutex_pend : 106e24 >			  ## vfs.c:445:11
 1e12908:    01 4a             	r1 = [r5 + 0]			  ## vfs.c:445:11
 1e1290a:    02 f9 9c 10       	r2 = b[r1 + 156] (u)			  ## vfs.c:445:11
 1e1290e:    0b 24             	if (r2 == 0) goto 22 <fread+0x32 : 1e12926 >
 1e12910:    0e 30             	if (r0 != 0) goto 28 <fread+0x3A : 1e1292e >
 1e12912:    20 42             	r0 = [r1 + 8]			  ## vfs.c:450:19
 1e12914:    73 40             	r3 = [r0 + 28]			  ## vfs.c:450:24
 1e12916:    07 26             	if (r3 == 0) goto 14 <fread+0x32 : 1e12926 >			  ## vfs.c:450:24
 1e12918:    50 08             	r0 = r5			  ## vfs.c:451:16
 1e1291a:    71 08             	r1 = r7			  ## vfs.c:451:16
 1e1291c:    62 08             	r2 = r6			  ## vfs.c:451:16
 1e1291e:    83 00             	call r3			  ## vfs.c:451:16
 1e12920:    01 4a             	r1 = [r5 + 0]			  ## vfs.c:451:16
 1e12922:    04 08             	r4 = r0			  ## vfs.c:451:16
 1e12924:    00 00             	nop
 1e12926:    10 fc 4c 00       	r0 = r1 + 76
 1e1292a:    97 f3 7d a2       	call 3097850 <os_mutex_post : 106e28 >
 1e1292e:    40 08             	r0 = r4			  ## vfs.c:457:1
 1e12930:    57 01             	{pc, r7-r4} = [sp++]			  ## vfs.c:457:1


fseek:
 1e12932:    77 01             	[--sp] = {rets, r7-r4}			  ## vfs.c:503:0
 1e12934:    04 08             	r4 = r0			  ## vfs.c:503:0
 1e12936:    00 48             	r0 = [r4 + 0]			  ## vfs.c:509:11
 1e12938:    25 08             	r5 = r2			  ## vfs.c:509:11
 1e1293a:    16 08             	r6 = r1
 1e1293c:    c0 84             	r0 += 76			  ## vfs.c:509:11
 1e1293e:    01 70             	r1 = 0			  ## vfs.c:509:11
 1e12940:    97 f3 70 a2       	call 3097824 <os_mutex_pend : 106e24 >			  ## vfs.c:509:11
 1e12944:    01 48             	r1 = [r4 + 0]			  ## vfs.c:509:11
 1e12946:    02 f9 9c 10       	r2 = b[r1 + 156] (u)			  ## vfs.c:509:11
 1e1294a:    0c 24             	if (r2 == 0) goto 24 <fseek+0x32 : 1e12964 >
 1e1294c:    d7 06             	r7 = -19
 1e1294e:    15 30             	if (r0 != 0) goto 42 <fseek+0x48 : 1e1297a >
 1e12950:    20 42             	r0 = [r1 + 8]			  ## vfs.c:514:19
 1e12952:    a3 40             	r3 = [r0 + 40]			  ## vfs.c:514:24
 1e12954:    0d 26             	if (r3 == 0) goto 26 <fseek+0x3E : 1e12970 >			  ## vfs.c:514:24
 1e12956:    40 08             	r0 = r4			  ## vfs.c:515:15
 1e12958:    61 08             	r1 = r6			  ## vfs.c:515:15
 1e1295a:    52 08             	r2 = r5			  ## vfs.c:515:15
 1e1295c:    83 00             	call r3			  ## vfs.c:515:15
 1e1295e:    01 48             	r1 = [r4 + 0]			  ## vfs.c:515:15
 1e12960:    07 08             	r7 = r0			  ## vfs.c:515:15
 1e12962:    07 18             	goto 14 <fseek+0x40 : 1e12972 >
 1e12964:    10 fc 4c 00       	r0 = r1 + 76			  ## vfs.c:509:11
 1e12968:    97 f3 5e a2       	call 3097788 <os_mutex_post : 106e28 >			  ## vfs.c:509:11
 1e1296c:    d7 06             	r7 = -19
 1e1296e:    05 18             	goto 10 <fseek+0x48 : 1e1297a >
 1e12970:    07 70             	r7 = 0
 1e12972:    10 fc 4c 00       	r0 = r1 + 76			  ## vfs.c:518:30
 1e12976:    97 f3 57 a2       	call 3097774 <os_mutex_post : 106e28 >			  ## vfs.c:518:5
 1e1297a:    70 08             	r0 = r7			  ## vfs.c:521:1
 1e1297c:    57 01             	{pc, r7-r4} = [sp++]			  ## vfs.c:521:1


fwrite:
 1e1297e:    77 01             	[--sp] = {rets, r7-r4}			  ## vfs.c:481:0
 1e12980:    05 08             	r5 = r0			  ## vfs.c:481:0
 1e12982:    00 4a             	r0 = [r5 + 0]			  ## vfs.c:487:11
 1e12984:    26 08             	r6 = r2			  ## vfs.c:487:11
 1e12986:    17 08             	r7 = r1
 1e12988:    c0 84             	r0 += 76			  ## vfs.c:487:11
 1e1298a:    01 70             	r1 = 0			  ## vfs.c:487:11
 1e1298c:    04 70             	r4 = 0			  ## vfs.c:487:11
 1e1298e:    97 f3 49 a2       	call 3097746 <os_mutex_pend : 106e24 >			  ## vfs.c:487:11
 1e12992:    01 4a             	r1 = [r5 + 0]			  ## vfs.c:487:11
 1e12994:    02 f9 9c 10       	r2 = b[r1 + 156] (u)			  ## vfs.c:487:11
 1e12998:    0b 24             	if (r2 == 0) goto 22 <fwrite+0x32 : 1e129b0 >
 1e1299a:    0e 30             	if (r0 != 0) goto 28 <fwrite+0x3A : 1e129b8 >
 1e1299c:    20 42             	r0 = [r1 + 8]			  ## vfs.c:492:19
 1e1299e:    93 40             	r3 = [r0 + 36]			  ## vfs.c:492:24
 1e129a0:    07 26             	if (r3 == 0) goto 14 <fwrite+0x32 : 1e129b0 >			  ## vfs.c:492:24
 1e129a2:    50 08             	r0 = r5			  ## vfs.c:493:16
 1e129a4:    71 08             	r1 = r7			  ## vfs.c:493:16
 1e129a6:    62 08             	r2 = r6			  ## vfs.c:493:16
 1e129a8:    83 00             	call r3			  ## vfs.c:493:16
 1e129aa:    01 4a             	r1 = [r5 + 0]			  ## vfs.c:493:16
 1e129ac:    04 08             	r4 = r0			  ## vfs.c:493:16
 1e129ae:    00 00             	nop
 1e129b0:    10 fc 4c 00       	r0 = r1 + 76
 1e129b4:    97 f3 38 a2       	call 3097712 <os_mutex_post : 106e28 >
 1e129b8:    40 08             	r0 = r4			  ## vfs.c:499:1
 1e129ba:    57 01             	{pc, r7-r4} = [sp++]			  ## vfs.c:499:1


fclose:
 1e129bc:    77 01             	[--sp] = {rets, r7-r4}			  ## vfs.c:525:0
 1e129be:    04 08             	r4 = r0			  ## vfs.c:525:0
 1e129c0:    00 48             	r0 = [r4 + 0]			  ## vfs.c:530:11
 1e129c2:    c0 84             	r0 += 76			  ## vfs.c:530:11
 1e129c4:    01 70             	r1 = 0			  ## vfs.c:530:11
 1e129c6:    97 f3 2d a2       	call 3097690 <os_mutex_pend : 106e24 >			  ## vfs.c:530:11
 1e129ca:    01 48             	r1 = [r4 + 0]			  ## vfs.c:530:11
 1e129cc:    02 f9 9c 10       	r2 = b[r1 + 156] (u)			  ## vfs.c:530:11
 1e129d0:    05 08             	r5 = r0			  ## vfs.c:530:11
 1e129d2:    06 34             	if (r2 != 0) goto 12 <fclose+0x24 : 1e129e0 >
 1e129d4:    10 fc 4c 00       	r0 = r1 + 76			  ## vfs.c:530:11
 1e129d8:    97 f3 26 a2       	call 3097676 <os_mutex_post : 106e28 >			  ## vfs.c:530:11
 1e129dc:    01 48             	r1 = [r4 + 0]
 1e129de:    a5 06             	r5 = -22
 1e129e0:    20 42             	r0 = [r1 + 8]			  ## vfs.c:532:19
 1e129e2:    22 41             	r2 = [r0 + 72]			  ## vfs.c:532:24
 1e129e4:    03 24             	if (r2 == 0) goto 6 <fclose+0x30 : 1e129ec >			  ## vfs.c:532:24
 1e129e6:    40 08             	r0 = r4			  ## vfs.c:533:9
 1e129e8:    82 00             	call r2			  ## vfs.c:533:9
 1e129ea:    01 48             	r1 = [r4 + 0]			  ## vfs.c:533:9
 1e129ec:    30 42             	r0 = [r1 + 12]			  ## vfs.c:536:23
 1e129ee:    02 20             	if (r0 == 0) goto 4 <fclose+0x38 : 1e129f4 >			  ## vfs.c:536:23
 1e129f0:    80 f3 a5 00       	call 330 <dev_ioctl : 1e12b3e >			  ## vfs.c:537:9
 1e129f4:    04 3a             	if (r5 != 0) goto 8 <fclose+0x42 : 1e129fe >
 1e129f6:    00 48             	r0 = [r4 + 0]			  ## vfs.c:541:30
 1e129f8:    c0 84             	r0 += 76			  ## vfs.c:541:34
 1e129fa:    97 f3 15 a2       	call 3097642 <os_mutex_post : 106e28 >			  ## vfs.c:541:9
 1e129fe:    06 48             	r6 = [r4 + 0]			  ## vfs.c:544:23
 1e12a00:    97 f3 cc a1       	call 3097496 <local_irq_disable : 106d9c >			  ## atomic.h:32:5
 1e12a04:    08 00             	csync			  ## atomic.h:32:5
 1e12a06:    20 4d             	r0 = [r6 + 72]			  ## atomic.h:34:14
 1e12a08:    07 fc ff ff       	r7 = r0 + -1			  ## atomic.h:35:22
 1e12a0c:    2f 4d             	[r6 + 72] = r7			  ## atomic.h:35:16
 1e12a0e:    97 f3 c3 a1       	call 3097478 <local_irq_enable : 106d98 >			  ## atomic.h:37:5
 1e12a12:    14 3e             	if (r7 != 0) goto 40 <fclose+0x80 : 1e12a3c >			  ## atomic.h:37:5
 1e12a14:    97 f3 c2 a1       	call 3097476 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e12a18:    00 4d             	r0 = [r6 + 64]			  ## list.h:171:36
 1e12a1a:    11 4d             	r1 = [r6 + 68]			  ## list.h:171:23
 1e12a1c:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e12a1e:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e12a20:    60 fc 40 00       	r0 = r6 + 64			  ## vfs.c:80:23
 1e12a24:    08 4d             	[r6 + 64] = r0			  ## list.h:172:17
 1e12a26:    18 4d             	[r6 + 68] = r0			  ## list.h:173:17
 1e12a28:    97 f3 b6 a1       	call 3097452 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e12a2c:    20 4c             	r0 = [r6 + 8]			  ## vfs.c:82:17
 1e12a2e:    21 40             	r1 = [r0 + 8]			  ## vfs.c:82:22
 1e12a30:    02 22             	if (r1 == 0) goto 4 <fclose+0x7A : 1e12a36 >			  ## vfs.c:82:22
 1e12a32:    60 08             	r0 = r6			  ## vfs.c:83:13
 1e12a34:    81 00             	call r1			  ## vfs.c:83:13
 1e12a36:    60 08             	r0 = r6			  ## vfs.c:85:9
 1e12a38:    bf f3 e8 e7       	call -12336 <free : 1e0fa0c >			  ## vfs.c:85:9
 1e12a3c:    40 08             	r0 = r4			  ## vfs.c:170:9
 1e12a3e:    bf f3 e5 e7       	call -12342 <free : 1e0fa0c >			  ## vfs.c:170:9
 1e12a42:    50 08             	r0 = r5			  ## vfs.c:548:5
 1e12a44:    57 01             	{pc, r7-r4} = [sp++]			  ## vfs.c:548:5


fget_attrs:
 1e12a46:    75 01             	[--sp] = {rets, r5, r4}			  ## vfs.c:1156:0
 1e12a48:    04 08             	r4 = r0			  ## vfs.c:1156:0
 1e12a4a:    00 48             	r0 = [r4 + 0]			  ## vfs.c:1161:11
 1e12a4c:    15 08             	r5 = r1			  ## vfs.c:1161:11
 1e12a4e:    c0 84             	r0 += 76			  ## vfs.c:1161:11
 1e12a50:    01 70             	r1 = 0			  ## vfs.c:1161:11
 1e12a52:    97 f3 e7 a1       	call 3097550 <os_mutex_pend : 106e24 >			  ## vfs.c:1161:11
 1e12a56:    01 48             	r1 = [r4 + 0]			  ## vfs.c:1161:11
 1e12a58:    02 f9 9c 10       	r2 = b[r1 + 156] (u)			  ## vfs.c:1161:11
 1e12a5c:    0a 24             	if (r2 == 0) goto 20 <fget_attrs+0x2C : 1e12a72 >
 1e12a5e:    0d 30             	if (r0 != 0) goto 26 <fget_attrs+0x34 : 1e12a7a >
 1e12a60:    00 70             	r0 = 0
 1e12a62:    08 6a             	b[r5 + 0] = r0			  ## vfs.c:1166:16
 1e12a64:    20 42             	r0 = [r1 + 8]			  ## vfs.c:1168:19
 1e12a66:    a2 41             	r2 = [r0 + 104]			  ## vfs.c:1168:24
 1e12a68:    04 24             	if (r2 == 0) goto 8 <fget_attrs+0x2C : 1e12a72 >			  ## vfs.c:1168:24
 1e12a6a:    40 08             	r0 = r4			  ## vfs.c:1169:15
 1e12a6c:    51 08             	r1 = r5			  ## vfs.c:1169:15
 1e12a6e:    82 00             	call r2			  ## vfs.c:1169:15
 1e12a70:    01 48             	r1 = [r4 + 0]			  ## vfs.c:1169:15
 1e12a72:    10 fc 4c 00       	r0 = r1 + 76
 1e12a76:    97 f3 d7 a1       	call 3097518 <os_mutex_post : 106e28 >
 1e12a7a:    55 01             	{pc, r5, r4} = [sp++]


sdfile_cpu_addr2flash_addr:
 1e12a7c:    c1 ff a0 22 00 00 	r1 = 8864 <_sdfile_handl : 22a0 >			  ## sdfile_new.c:162:0
 1e12a82:    12 42             	r2 = [r1 + 4]			  ## sdfile_new.c:163:29
 1e12a84:    01 42             	r1 = [r1 + 0]			  ## sdfile_new.c:163:48
 1e12a86:    a0 b0             	r0 = r0 - r2			  ## sdfile_new.c:163:19
 1e12a88:    10 09             	r0 += r1			  ## sdfile_new.c:163:38
 1e12a8a:    20 00             	rts			  ## sdfile_new.c:163:5


ASCII_StrCmp:
 1e12a8c:    74 01             	[--sp] = {rets, r4}			  ## ASCII_lib.c:42:0
 1e12a8e:    02 70             	r2 = 0			  ## ASCII_lib.c:42:0
 1e12a90:    04 fa 00 02       	r4 = b[r0+r2] (u)			  ## ASCII_lib.c:46:14
 1e12a94:    03 fa 00 12       	r3 = b[r1+r2] (u)			  ## ASCII_lib.c:46:14
 1e12a98:    0f 28             	if (r4 == 0) goto 30 <ASCII_StrCmp+0x2C : 1e12ab8 >			  ## ASCII_lib.c:46:14
 1e12a9a:    0f 26             	if (r3 == 0) goto 30 <ASCII_StrCmp+0x2E : 1e12aba >
 1e12a9c:    a4 e2 08 00       	if (r4 == 42) goto 16 <ASCII_StrCmp+0x24 : 1e12ab0 >
 1e12aa0:    f4 e3 06 00       	if (r4 == 63) goto 12 <ASCII_StrCmp+0x24 : 1e12ab0 >
 1e12aa4:    a3 e2 04 00       	if (r3 == 42) goto 8 <ASCII_StrCmp+0x24 : 1e12ab0 >
 1e12aa8:    34 f2 02 00       	if (r4 == r3) goto 4 <ASCII_StrCmp+0x24 : 1e12ab0 >
 1e12aac:    f3 e3 05 10       	if (r3 != 63) goto 10 <ASCII_StrCmp+0x2E : 1e12aba >
 1e12ab0:    12 80             	r2 += 1			  ## ASCII_lib.c:45:5
 1e12ab2:    f2 ef ed 1f       	if (r2 != -1) goto -38 <ASCII_StrCmp+0x4 : 1e12a90 >			  ## ASCII_lib.c:45:5
 1e12ab6:    03 18             	goto 6 <ASCII_StrCmp+0x32 : 1e12abe >			  ## ASCII_lib.c:45:5
 1e12ab8:    02 26             	if (r3 == 0) goto 4 <ASCII_StrCmp+0x32 : 1e12abe >
 1e12aba:    10 94             	r0 = r2 + 1
 1e12abc:    54 01             	{pc, r4} = [sp++]			  ## ASCII_lib.c:66:1
 1e12abe:    00 70             	r0 = 0
 1e12ac0:    54 01             	{pc, r4} = [sp++]			  ## ASCII_lib.c:66:1


dev_open:
 1e12ac2:    77 01             	[--sp] = {rets, r7-r4}			  ## device_api.c:21:0
 1e12ac4:    fe 0b             	sp += -4			  ## device_api.c:21:0
 1e12ac6:    15 08             	r5 = r1			  ## device_api.c:21:0
 1e12ac8:    01 08             	r1 = r0			  ## device_api.c:21:0
 1e12aca:    c7 ff d4 ea e0 01 	r7 = 31517396 <system_text_start : 1e0ead4 >			  ## device_api.c:21:0
 1e12ad0:    c6 ff d4 ea e0 01 	r6 = 31517396 <system_text_start : 1e0ead4 >			  ## device_api.c:21:0
 1e12ad6:    04 70             	r4 = 0			  ## device_api.c:21:0
 1e12ad8:    76 f2 1c 20       	if (r6 >= r7) goto 56 <dev_open+0x52 : 1e12b14 >			  ## device_api.c:21:0
 1e12adc:    00 4c             	r0 = [r6 + 0]			  ## device_api.c:28:30
 1e12ade:    bf f3 d5 ff       	call -86 <ASCII_StrCmp : 1e12a8c >			  ## device_api.c:28:14
 1e12ae2:    04 20             	if (r0 == 0) goto 8 <dev_open+0x2A : 1e12aec >			  ## device_api.c:28:14
 1e12ae4:    c6 80             	r6 += 12			  ## device_api.c:27:5
 1e12ae6:    76 f2 f9 3f       	if (r6 < r7) goto -14 <dev_open+0x1A : 1e12adc >
 1e12aea:    14 18             	goto 40 <dev_open+0x52 : 1e12b14 >
 1e12aec:    10 4c             	r0 = [r6 + 4]			  ## device_api.c:29:22
 1e12aee:    23 40             	r3 = [r0 + 8]			  ## device_api.c:29:27
 1e12af0:    02 a0             	r2 = sp + 0			  ## device_api.c:29:27
 1e12af2:    10 08             	r0 = r1			  ## device_api.c:29:19
 1e12af4:    21 08             	r1 = r2			  ## device_api.c:29:19
 1e12af6:    52 08             	r2 = r5			  ## device_api.c:29:19
 1e12af8:    83 00             	call r3			  ## device_api.c:29:19
 1e12afa:    0c 30             	if (r0 != 0) goto 24 <dev_open+0x52 : 1e12b14 >
 1e12afc:    10 4c             	r0 = [r6 + 4]			  ## device_api.c:34:30
 1e12afe:    04 02             	r4 = [sp]			  ## device_api.c:34:13
 1e12b00:    28 48             	[r4 + 8] = r0			  ## device_api.c:34:25
 1e12b02:    97 f3 4b a1       	call 3097238 <local_irq_disable : 106d9c >			  ## atomic.h:16:5
 1e12b06:    08 00             	csync			  ## atomic.h:16:5
 1e12b08:    00 48             	r0 = [r4 + 0]			  ## atomic.h:18:14
 1e12b0a:    10 80             	r0 += 1			  ## atomic.h:19:22
 1e12b0c:    08 48             	[r4 + 0] = r0			  ## atomic.h:19:16
 1e12b0e:    97 f3 43 a1       	call 3097222 <local_irq_enable : 106d98 >			  ## atomic.h:21:5
 1e12b12:    04 02             	r4 = [sp]			  ## device_api.c:37:20
 1e12b14:    40 08             	r0 = r4			  ## device_api.c:42:1
 1e12b16:    02 0a             	sp += 4			  ## device_api.c:42:1
 1e12b18:    57 01             	{pc, r7-r4} = [sp++]			  ## device_api.c:42:1


dev_close:
 1e12b1a:    75 01             	[--sp] = {rets, r5, r4}			  ## device_api.c:111:0
 1e12b1c:    04 08             	r4 = r0			  ## device_api.c:111:0
 1e12b1e:    97 f3 3d a1       	call 3097210 <local_irq_disable : 106d9c >			  ## atomic.h:32:5
 1e12b22:    08 00             	csync			  ## atomic.h:32:5
 1e12b24:    00 48             	r0 = [r4 + 0]			  ## atomic.h:34:14
 1e12b26:    05 fc ff ff       	r5 = r0 + -1			  ## atomic.h:35:22
 1e12b2a:    0d 48             	[r4 + 0] = r5			  ## atomic.h:35:16
 1e12b2c:    97 f3 34 a1       	call 3097192 <local_irq_enable : 106d98 >			  ## atomic.h:37:5
 1e12b30:    05 3a             	if (r5 != 0) goto 10 <dev_close+0x22 : 1e12b3c >			  ## atomic.h:37:5
 1e12b32:    20 48             	r0 = [r4 + 8]			  ## device_api.c:115:21
 1e12b34:    71 40             	r1 = [r0 + 28]			  ## device_api.c:115:26
 1e12b36:    02 22             	if (r1 == 0) goto 4 <dev_close+0x22 : 1e12b3c >			  ## device_api.c:115:26
 1e12b38:    40 08             	r0 = r4			  ## device_api.c:116:20
 1e12b3a:    81 00             	call r1			  ## device_api.c:116:20
 1e12b3c:    55 01             	{pc, r5, r4} = [sp++]


dev_ioctl:
 1e12b3e:    34 00             	[--sp] = rets			  ## device_api.c:99:0
 1e12b40:    21 40             	r1 = [r0 + 8]			  ## device_api.c:102:17
 1e12b42:    63 42             	r3 = [r1 + 24]			  ## device_api.c:102:22
 1e12b44:    03 26             	if (r3 == 0) goto 6 <dev_ioctl+0xE : 1e12b4c >			  ## device_api.c:102:22
 1e12b46:    01 71             	r1 = 16			  ## device_api.c:103:16
 1e12b48:    02 70             	r2 = 0			  ## device_api.c:103:16
 1e12b4a:    83 00             	call r3			  ## device_api.c:103:16
 1e12b4c:    30 00             	pc = [sp++]


devices_init:
 1e12b4e:    75 01             	[--sp] = {rets, r5, r4}			  ## device_api.c:150:0
 1e12b50:    c5 ff d4 ea e0 01 	r5 = 31517396 <system_text_start : 1e0ead4 >			  ## device_api.c:150:0
 1e12b56:    c4 ff d4 ea e0 01 	r4 = 31517396 <system_text_start : 1e0ead4 >			  ## device_api.c:150:0
 1e12b5c:    54 f2 0d 20       	if (r4 >= r5) goto 26 <devices_init+0x2C : 1e12b7a >			  ## device_api.c:150:0
 1e12b60:    10 48             	r0 = [r4 + 4]			  ## device_api.c:156:18
 1e12b62:    08 20             	if (r0 == 0) goto 16 <devices_init+0x26 : 1e12b74 >
 1e12b64:    12 40             	r2 = [r0 + 4]			  ## device_api.c:157:25
 1e12b66:    06 24             	if (r2 == 0) goto 12 <devices_init+0x26 : 1e12b74 >			  ## device_api.c:157:25
 1e12b68:    21 48             	r1 = [r4 + 8]			  ## device_api.c:159:35
 1e12b6a:    40 08             	r0 = r4			  ## device_api.c:159:19
 1e12b6c:    82 00             	call r2			  ## device_api.c:159:19
 1e12b6e:    02 20             	if (r0 == 0) goto 4 <devices_init+0x26 : 1e12b74 >
 1e12b70:    8f f3 36 84       	call 2033772 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e12b74:    c4 80             	r4 += 12			  ## device_api.c:155:5
 1e12b76:    54 f2 f3 3f       	if (r4 < r5) goto -26 <devices_init+0x12 : 1e12b60 >
 1e12b7a:    55 01             	{pc, r5, r4} = [sp++]


boot_info_init:
 1e12b7c:    21 40             	r1 = [r0 + 8]			  ## init.c:131:0
 1e12b7e:    12 40             	r2 = [r0 + 4]			  ## init.c:136:5
 1e12b80:    c3 ff 00 08 00 00 	r3 = 2048 <report_mmu_tlb_size : 800 >			  ## init.c:136:5
 1e12b86:    59 46             	[r3 + 20] = r1			  ## init.c:136:5
 1e12b88:    4a 46             	[r3 + 16] = r2			  ## init.c:136:5
 1e12b8a:    01 40             	r1 = [r0 + 0]			  ## init.c:137:34
 1e12b8c:    22 42             	r2 = [r1 + 8]			  ## init.c:137:43
 1e12b8e:    6a 46             	[r3 + 24] = r2			  ## init.c:137:26
 1e12b90:    d1 62             	r1 = b[r1 + 13] (u)			  ## init.c:138:41
 1e12b92:    09 66             	b[r3 + 0] = r1			  ## init.c:138:24
 1e12b94:    61 50             	r1 = h[r0 + 12] (u)			  ## init.c:139:31
 1e12b96:    e9 56             	h[r3 + 28] = r1			  ## init.c:139:23
 1e12b98:    71 50             	r1 = h[r0 + 14] (u)			  ## init.c:140:34
 1e12b9a:    f9 56             	h[r3 + 30] = r1			  ## init.c:140:26
 1e12b9c:    51 40             	r1 = [r0 + 20]			  ## init.c:141:5
 1e12b9e:    40 40             	r0 = [r0 + 16]			  ## init.c:141:5
 1e12ba0:    99 46             	[r3 + 36] = r1			  ## init.c:141:5
 1e12ba2:    88 46             	[r3 + 32] = r0			  ## init.c:141:5
 1e12ba4:    20 00             	rts			  ## init.c:147:1


main:
 1e12ba6:    34 00             	[--sp] = rets			  ## init.c:204:0
 1e12ba8:    bf f3 dc 8d       	call -58440 <wdt_close : 1e04764 >			  ## init.c:205:5
 1e12bac:    97 f3 fa a0       	call 3097076 <os_init : 106da4 >			  ## init.c:207:5
 1e12bb0:    bf f3 88 90       	call -57072 <setup_arch : 1e04cc4 >			  ## init.c:209:5
 1e12bb4:    c0 ff d6 2c e1 01 	r0 = 31534294 <app_task_handler : 1e12cd6 >			  ## init.c:213:5
 1e12bba:    c2 ff 03 58 e1 01 	r2 = 31545347 <update_target_end+0x297B : 1e15803 >			  ## init.c:213:5
 1e12bc0:    01 70             	r1 = 0			  ## init.c:213:5
 1e12bc2:    bf f3 14 f1       	call -7640 <task_create : 1e10dee >			  ## init.c:213:5
 1e12bc6:    97 f3 ef a0       	call 3097054 <os_start : 106da8 >			  ## init.c:215:5
 1e12bca:    02 00             	idle			  ## init.c:220:9
 1e12bcc:    fe 1f             	goto -4 <main+0x24 : 1e12bca >			  ## init.c:219:5


app_task_init:
 1e12bce:    76 01             	[--sp] = {rets, r6-r4}			  ## init.c:71:0
 1e12bd0:    c0 ff 0a 4d e1 01 	r0 = 31542538 <update_target_end+0x1E82 : 1e14d0a >			  ## D:\shixun\fw-AC63_BT_SDK-master\apps\hid\version.c:12:5
 1e12bd6:    bf f3 ce e3       	call -14436 <puts : 1e0f376 >			  ## D:\shixun\fw-AC63_BT_SDK-master\apps\hid\version.c:12:5
 1e12bda:    c0 ff a8 67 e1 01 	r0 = 31549352 <storage_device_end : 1e167a8 >
 1e12be0:    c6 ff e6 67 e1 01 	r6 = 31549414 <__VERSION_END : 1e167e6 >
 1e12be6:    c4 ff 3d 3e e1 01 	r4 = 31538749 <update_target_end+0xFB5 : 1e13e3d >
 1e12bec:    0a 18             	goto 20 <app_task_init+0x34 : 1e12c02 >
 1e12bee:    45 90             	r5 = r0 + 4			  ## D:\shixun\fw-AC63_BT_SDK-master\apps\hid\version.c:14:17
 1e12bf0:    40 08             	r0 = r4			  ## D:\shixun\fw-AC63_BT_SDK-master\apps\hid\version.c:15:9
 1e12bf2:    51 08             	r1 = r5			  ## D:\shixun\fw-AC63_BT_SDK-master\apps\hid\version.c:15:9
 1e12bf4:    bf f3 69 e2       	call -15150 <printf : 1e0f0ca >			  ## D:\shixun\fw-AC63_BT_SDK-master\apps\hid\version.c:15:9
 1e12bf8:    50 08             	r0 = r5			  ## D:\shixun\fw-AC63_BT_SDK-master\apps\hid\version.c:16:20
 1e12bfa:    97 f3 7f a1       	call 3097342 <strlen : 106efc >			  ## D:\shixun\fw-AC63_BT_SDK-master\apps\hid\version.c:16:20
 1e12bfe:    50 09             	r0 += r5			  ## D:\shixun\fw-AC63_BT_SDK-master\apps\hid\version.c:14:17
 1e12c00:    10 80             	r0 += 1			  ## D:\shixun\fw-AC63_BT_SDK-master\apps\hid\version.c:16:17
 1e12c02:    60 f2 f4 3f       	if (r0 < r6) goto -24 <app_task_init+0x20 : 1e12bee >
 1e12c06:    c0 ff 33 4d e1 01 	r0 = 31542579 <update_target_end+0x1EAB : 1e14d33 >			  ## D:\shixun\fw-AC63_BT_SDK-master\apps\hid\version.c:18:5
 1e12c0c:    bf f3 b3 e3       	call -14490 <puts : 1e0f376 >			  ## D:\shixun\fw-AC63_BT_SDK-master\apps\hid\version.c:18:5
 1e12c10:    c4 ff 7c 2d e1 01 	r4 = 31534460 <late_initcall_begin : 1e12d7c >			  ## D:\shixun\fw-AC63_BT_SDK-master\apps\hid\version.c:18:5
 1e12c16:    c5 ff 74 2d e1 01 	r5 = 31534452 <initcall_end : 1e12d74 >			  ## D:\shixun\fw-AC63_BT_SDK-master\apps\hid\version.c:18:5
 1e12c1c:    45 f2 05 20       	if (r5 >= r4) goto 10 <app_task_init+0x5C : 1e12c2a >
 1e12c20:    40 f6 04 50       	r0 = [r5 ++= 4]			  ## init.c:29:5
 1e12c24:    80 00             	call r0			  ## init.c:29:5
 1e12c26:    45 f2 fb 3f       	if (r5 < r4) goto -10 <app_task_init+0x52 : 1e12c20 >
 1e12c2a:    c4 ff 84 2d e1 01 	r4 = 31534468 <syscfg_ops_begin : 1e12d84 >
 1e12c30:    c5 ff 80 2d e1 01 	r5 = 31534464 <platform_initcall_begin : 1e12d80 >
 1e12c36:    45 f2 05 20       	if (r5 >= r4) goto 10 <app_task_init+0x76 : 1e12c44 >
 1e12c3a:    40 f6 04 50       	r0 = [r5 ++= 4]			  ## init.c:39:5
 1e12c3e:    80 00             	call r0			  ## init.c:39:5
 1e12c40:    45 f2 fb 3f       	if (r5 < r4) goto -10 <app_task_init+0x6C : 1e12c3a >
 1e12c44:    bf f3 7a 96       	call -54028 <board_init : 1e0593c >			  ## init.c:76:5
 1e12c48:    c4 ff 74 2d e1 01 	r4 = 31534452 <initcall_end : 1e12d74 >			  ## init.c:76:5
 1e12c4e:    c5 ff 70 2d e1 01 	r5 = 31534448 <initcall_begin : 1e12d70 >			  ## init.c:76:5
 1e12c54:    45 f2 05 20       	if (r5 >= r4) goto 10 <app_task_init+0x94 : 1e12c62 >
 1e12c58:    40 f6 04 50       	r0 = [r5 ++= 4]			  ## init.c:24:5
 1e12c5c:    80 00             	call r0			  ## init.c:24:5
 1e12c5e:    45 f2 fb 3f       	if (r5 < r4) goto -10 <app_task_init+0x8A : 1e12c58 >
 1e12c62:    c4 ff 84 2d e1 01 	r4 = 31534468 <syscfg_ops_begin : 1e12d84 >
 1e12c68:    c5 ff 84 2d e1 01 	r5 = 31534468 <syscfg_ops_begin : 1e12d84 >
 1e12c6e:    45 f2 05 20       	if (r5 >= r4) goto 10 <app_task_init+0xAE : 1e12c7c >
 1e12c72:    40 f6 04 50       	r0 = [r5 ++= 4]			  ## init.c:44:5
 1e12c76:    80 00             	call r0			  ## init.c:44:5
 1e12c78:    45 f2 fb 3f       	if (r5 < r4) goto -10 <app_task_init+0xA4 : 1e12c72 >
 1e12c7c:    c4 ff 80 2d e1 01 	r4 = 31534464 <platform_initcall_begin : 1e12d80 >
 1e12c82:    c5 ff 7c 2d e1 01 	r5 = 31534460 <late_initcall_begin : 1e12d7c >
 1e12c88:    45 f2 05 20       	if (r5 >= r4) goto 10 <app_task_init+0xC8 : 1e12c96 >
 1e12c8c:    40 f6 04 50       	r0 = [r5 ++= 4]			  ## init.c:34:5
 1e12c90:    80 00             	call r0			  ## init.c:34:5
 1e12c92:    45 f2 fb 3f       	if (r5 < r4) goto -10 <app_task_init+0xBE : 1e12c8c >
 1e12c96:    c0 ff 54 08 00 00 	r0 = 2132 <head : 854 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/system/generic/list.h:189:16
 1e12c9c:    08 40             	[r0 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/system/generic/list.h:188:16
 1e12c9e:    18 40             	[r0 + 4] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/system/generic/list.h:189:16
 1e12ca0:    c0 ff 28 1e 00 00 	r0 = 7720 <report_data_code_size : 1e28 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/app_core/app_core.c:440:5
 1e12ca6:    97 f3 b9 a0       	call 3096946 <os_mutex_create : 106e1c >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/app_core/app_core.c:440:5
 1e12caa:    c0 ff e8 09 00 00 	r0 = 2536 <system_data_end : 9e8 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/app_core/app_core.c:440:5
 1e12cb0:    c1 ff c8 09 00 00 	r1 = 2504 <system_data_start : 9c8 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/app_core/app_core.c:440:5
 1e12cb6:    01 f2 09 20       	if (r1 >= r0) goto 18 <app_task_init+0xFE : 1e12ccc >
 1e12cba:    01 81             	r1 += 16
 1e12cbc:    09 42             	[r1 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/system/generic/list.h:188:16
 1e12cbe:    02 93             	r2 = r1 + 16			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/app_core/app_core.c:442:5
 1e12cc0:    13 fc 20 00       	r3 = r1 + 32			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/app_core/app_core.c:442:5
 1e12cc4:    19 42             	[r1 + 4] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/system/generic/list.h:189:16
 1e12cc6:    31 08             	r1 = r3			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/system/generic/list.h:189:16
 1e12cc8:    02 f2 f8 3f       	if (r2 < r0) goto -16 <app_task_init+0xEE : 1e12cbc >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/system/generic/list.h:189:16
 1e12ccc:    bf f3 4d f0       	call -8038 <register_sys_event_handler : 1e10d6a >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/app_core/app_core.c:446:5
 1e12cd0:    16 01             	{rets, r6-r4} = [sp++]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/app_core/app_core.c:448:5
 1e12cd2:    ff f3 69 98       	goto -53038 <app_main : 1e05da8 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/app_core/app_core.c:448:5


app_task_handler:
 1e12cd6:    c0 0b             	sp += -128			  ## init.c:87:0
 1e12cd8:    7a 17             	call -268 <app_task_init : 1e12bce >			  ## init.c:91:5
 1e12cda:    c4 ff 7e 55 e1 01 	r4 = 31544702 <update_target_end+0x26F6 : 1e1557e >
 1e12ce0:    01 a0             	r1 = sp + 0
 1e12ce2:    02 72             	r2 = 32			  ## init.c:94:15
 1e12ce4:    40 08             	r0 = r4			  ## init.c:94:15
 1e12ce6:    97 f3 73 a0       	call 3096806 <os_taskq_pend : 106dd0 >			  ## init.c:94:15
 1e12cea:    d0 e0 f9 1f       	if (r0 != 13) goto -14 <app_task_handler+0xA : 1e12ce0 >			  ## init.c:95:13
 1e12cee:    00 a0             	r0 = sp + 0
 1e12cf0:    bf f3 b9 f8       	call -3726 <app_core_msg_handler : 1e11e66 >			  ## init.c:98:9
 1e12cf4:    f5 1f             	goto -22 <app_task_handler+0xA : 1e12ce0 >			  ## init.c:98:9


system_code_end:
 1e12cf6:    00 00             	nop


vfs_ops_begin:
 1e12cf8:    c7 54             	r7 = h[r2 + 24] (u)
 1e12cfa:    e1 01             	[--sp] = {psr, reti}
 1e12cfc:    c2 21             	if (r0 == 0) goto -124 <app_task_init+0xB4 : 1e12c82 >
 1e12cfe:    e1 01             	[--sp] = {psr, reti}
 1e12d00:    00 00             	nop
 1e12d02:    00 00             	nop
 1e12d04:    00 00             	nop
 1e12d06:    00 00             	nop
 1e12d08:    00 00             	nop
 1e12d0a:    00 00             	nop
 1e12d0c:    00 00             	nop
 1e12d0e:    00 00             	nop
 1e12d10:    7a 24             	if (r2 == 0) goto 244 <le_hogp_target+0xA : 1e12e06 >
 1e12d12:    e1 01             	[--sp] = {psr, reti}
 1e12d14:    8c 26             	if (r3 == 0) goto 280 <btstack_lowpower_target+0x2 : 1e12e2e >
 1e12d16:    e1 01             	[--sp] = {psr, reti}
 1e12d18:    00 00             	nop
 1e12d1a:    00 00             	nop
 1e12d1c:    bc 26             	if (r3 == 0) goto 376 <update_target_end+0xE : 1e12e96 >
 1e12d1e:    e1 01             	[--sp] = {psr, reti}
 1e12d20:    1e 27             	if (r3 == 0) goto -452 <devices_init+0x10 : 1e12b5e >
 1e12d22:    e1 01             	[--sp] = {psr, reti}
 1e12d24:    00 00             	nop
 1e12d26:    00 00             	nop
 1e12d28:    40 27             	if (r3 == 0) goto -384 <main+0x4 : 1e12baa >
 1e12d2a:    e1 01             	[--sp] = {psr, reti}
 1e12d2c:    4e 27             	if (r3 == 0) goto -356 <main+0x24 : 1e12bca >
 1e12d2e:    e1 01             	[--sp] = {psr, reti}
 1e12d30:    00 00             	nop
 1e12d32:    00 00             	nop
 1e12d34:    5c 27             	if (r3 == 0) goto -328 <app_task_init+0x20 : 1e12bee >
 1e12d36:    e1 01             	[--sp] = {psr, reti}
 1e12d38:    00 00             	nop
 1e12d3a:    00 00             	nop
 1e12d3c:    00 00             	nop
 1e12d3e:    00 00             	nop
 1e12d40:    80 27             	if (r3 == 0) goto -256 <app_task_init+0x74 : 1e12c42 >
 1e12d42:    e1 01             	[--sp] = {psr, reti}
 1e12d44:    90 27             	if (r3 == 0) goto -224 <app_task_init+0x98 : 1e12c66 >
 1e12d46:    e1 01             	[--sp] = {psr, reti}
 1e12d48:    00 00             	nop
 1e12d4a:    00 00             	nop
 1e12d4c:    00 00             	nop
 1e12d4e:    00 00             	nop
 1e12d50:    00 00             	nop
 1e12d52:    00 00             	nop
 1e12d54:    00 00             	nop
 1e12d56:    00 00             	nop
 1e12d58:    00 00             	nop
 1e12d5a:    00 00             	nop
 1e12d5c:    00 00             	nop
 1e12d5e:    00 00             	nop
 1e12d60:    e4 27             	if (r3 == 0) goto -56 <vfs_ops_begin+0x32 : 1e12d2a >
 1e12d62:    e1 01             	[--sp] = {psr, reti}
 1e12d64:    00 00             	nop
 1e12d66:    00 00             	nop
 1e12d68:    00 00             	nop
 1e12d6a:    00 00             	nop


vfs_ops_end:
 1e12d6c:    80 1e             	goto -768 <fget_attrs+0x28 : 1e12a6e >
 1e12d6e:    e1 01             	[--sp] = {psr, reti}


initcall_begin:
 1e12d70:    f0 1c             	goto -1568 <sdfile_pos+0x4 : 1e12752 >
 1e12d72:    e0 01             	[--sp] = {psr}


initcall_end:
 1e12d74:    46 0b             	sp += -372
 1e12d76:    e1 01             	[--sp] = {psr, reti}


__initcall_sdfile_init:
 1e12d78:    30 20             	if (r0 == 0) goto 96 <syscfg_ops_end+0x2 : 1e12dda >
 1e12d7a:    e1 01             	[--sp] = {psr, reti}


late_initcall_begin:
 1e12d7c:    6c 75             	r12 = 86
 1e12d7e:    e0 01             	[--sp] = {psr}


platform_initcall_begin:
 1e12d80:    b6 16             	call -660 <dev_open+0x2C : 1e12aee >
 1e12d82:    e1 01             	[--sp] = {psr, reti}


syscfg_ops_begin:
 1e12d84:    fa 19             	goto 1012 <update_target_end+0x2F2 : 1e1317a >
 1e12d86:    e1 01             	[--sp] = {psr, reti}
 1e12d88:    bc 1a             	goto 1400 <update_target_end+0x47A : 1e13302 >
 1e12d8a:    e1 01             	[--sp] = {psr, reti}
 1e12d8c:    d6 1a             	goto 1452 <update_target_end+0x4B2 : 1e1333a >
 1e12d8e:    e1 01             	[--sp] = {psr, reti}
 1e12d90:    22 1b             	goto 1604 <update_target_end+0x54E : 1e133d6 >
 1e12d92:    e1 01             	[--sp] = {psr, reti}
 1e12d94:    00 00             	nop
 1e12d96:    00 00             	nop
 1e12d98:    00 00             	nop
 1e12d9a:    00 00             	nop
 1e12d9c:    00 00             	nop
 1e12d9e:    00 00             	nop


cfg_vm:
 1e12da0:    ca 3d             	if (r6 != 0) goto -108 <vfs_ops_begin+0x3E : 1e12d36 >
 1e12da2:    e0 01             	[--sp] = {psr}
 1e12da4:    0c 40             	[r0 + 0] = r4
 1e12da6:    e0 01             	[--sp] = {psr}
 1e12da8:    1a 40             	[r0 + 4] = r2
 1e12daa:    e0 01             	[--sp] = {psr}
 1e12dac:    e6 40             	r6 = [r0 + 56]
 1e12dae:    e0 01             	[--sp] = {psr}
 1e12db0:    00 00             	nop
 1e12db2:    00 00             	nop
 1e12db4:    00 00             	nop
 1e12db6:    00 00             	nop
 1e12db8:    00 00             	nop
 1e12dba:    00 00             	nop


cfg_bin:
 1e12dbc:    fc 16             	call -520 <main+0x10 : 1e12bb6 >
 1e12dbe:    e1 01             	[--sp] = {psr, reti}
 1e12dc0:    c0 17             	call -128 <vfs_ops_begin+0x4A : 1e12d42 >
 1e12dc2:    e1 01             	[--sp] = {psr, reti}
 1e12dc4:    d4 18             	goto 424 <update_target_end+0xE6 : 1e12f6e >
 1e12dc6:    e1 01             	[--sp] = {psr, reti}
 1e12dc8:    00 00             	nop
 1e12dca:    00 00             	nop
 1e12dcc:    00 00             	nop
 1e12dce:    00 00             	nop
 1e12dd0:    14 19             	goto 552 <update_target_end+0x172 : 1e12ffa >
 1e12dd2:    e1 01             	[--sp] = {psr, reti}
 1e12dd4:    22 19             	goto 580 <update_target_end+0x192 : 1e1301a >
 1e12dd6:    e1 01             	[--sp] = {psr, reti}


syscfg_ops_end:
 1e12dd8:    35 2f             	if (r7 == 0) goto -406 <app_task_init+0x76 : 1e12c44 >
 1e12dda:    e1 01             	[--sp] = {psr, reti}
 1e12ddc:    00 00             	nop
 1e12dde:    00 00             	nop
 1e12de0:    94 08             	r4 = r9
 1e12de2:    e0 01             	[--sp] = {psr}


ota_lp_target:
 1e12de4:    71 3d             	if (r6 != 0) goto -286 <app_task_init+0xFA : 1e12cc8 >
 1e12de6:    e1 01             	[--sp] = {psr, reti}
 1e12de8:    00 00             	nop
 1e12dea:    00 00             	nop
 1e12dec:    e0 1c             	goto -1600 <sdfile_delete+0x1E : 1e127ae >
 1e12dee:    e0 01             	[--sp] = {psr}


app_hid_lp_target:
 1e12df0:    f4 3e             	if (r7 != 0) goto 488 <update_target_end+0x152 : 1e12fda >
 1e12df2:    e1 01             	[--sp] = {psr, reti}
 1e12df4:    00 00             	nop
 1e12df6:    00 00             	nop
 1e12df8:    c6 1d             	goto -1140 <fwrite+0x8 : 1e12986 >
 1e12dfa:    e0 01             	[--sp] = {psr}


le_hogp_target:
 1e12dfc:    f8 44             	[r2 + 60] = r0
 1e12dfe:    e1 01             	[--sp] = {psr, reti}
 1e12e00:    00 00             	nop
 1e12e02:    00 00             	nop
 1e12e04:    4c 2c             	if (r6 == 0) goto 152 <update_target_end+0x16 : 1e12e9e >
 1e12e06:    e0 01             	[--sp] = {psr}


__wakeup_is_idle_target:
 1e12e08:    bc 4f             	[r7 + 108] = r4
 1e12e0a:    e1 01             	[--sp] = {psr, reti}
 1e12e0c:    00 00             	nop
 1e12e0e:    00 00             	nop
 1e12e10:    c8 3a             	if (r5 != 0) goto 400 <update_target_end+0x11A : 1e12fa2 >
 1e12e12:    e0 01             	[--sp] = {psr}


usb_dev_lp_target:
 1e12e14:    53 53             	r3 = h[r1 + 42] (u)
 1e12e16:    e1 01             	[--sp] = {psr, reti}
 1e12e18:    00 00             	nop
 1e12e1a:    00 00             	nop
 1e12e1c:    3a 3b             	if (r5 != 0) goto -396 <app_task_init+0xC4 : 1e12c92 >
 1e12e1e:    e0 01             	[--sp] = {psr}


usr_systimer_lp_target:
 1e12e20:    cb 55             	h[r2 + 56] = r3
 1e12e22:    e1 01             	[--sp] = {psr, reti}
 1e12e24:    00 00             	nop
 1e12e26:    00 00             	nop
 1e12e28:    60 13             	call 1728 <update_target_end+0x662 : 1e134ea >
 1e12e2a:    e1 01             	[--sp] = {psr, reti}


btstack_lowpower_target:
 1e12e2c:    79 56             	h[r3 + 14] = r1
 1e12e2e:    e1 01             	[--sp] = {psr, reti}
 1e12e30:    00 00             	nop
 1e12e32:    00 00             	nop
 1e12e34:    48 87             	r8 += 116
 1e12e36:    e0 01             	[--sp] = {psr}


uart:
 1e12e38:    fa 4d             	[r6 + 124] = r2
 1e12e3a:    e1 01             	[--sp] = {psr, reti}
 1e12e3c:    2e 36             	if (r3 != 0) goto 92 <update_target_end+0x12 : 1e12e9a >
 1e12e3e:    e0 01             	[--sp] = {psr}
 1e12e40:    48 36             	if (r3 != 0) goto 144 <update_target_end+0x4A : 1e12ed2 >
 1e12e42:    e0 01             	[--sp] = {psr}


clock_sfc:
 1e12e44:    f4 4d             	r4 = [r6 + 124]
 1e12e46:    e1 01             	[--sp] = {psr, reti}
 1e12e48:    50 3c             	if (r6 != 0) goto 160 <update_target_end+0x62 : 1e12eea >
 1e12e4a:    00 00             	nop
 1e12e4c:    52 3c             	if (r6 != 0) goto 164 <update_target_end+0x6A : 1e12ef2 >
 1e12e4e:    00 00             	nop


tmr:
 1e12e50:    ff 4d             	[r6 + 124] = r7
 1e12e52:    e1 01             	[--sp] = {psr, reti}
 1e12e54:    76 36             	if (r3 != 0) goto 236 <update_target_end+0xBA : 1e12f42 >
 1e12e56:    e0 01             	[--sp] = {psr}
 1e12e58:    64 3c             	if (r6 != 0) goto 200 <update_target_end+0x9A : 1e12f22 >
 1e12e5a:    00 00             	nop


vm_sfc:
 1e12e5c:    f5 53             	r5 = h[r1 + 62] (u)
 1e12e5e:    e1 01             	[--sp] = {psr, reti}
 1e12e60:    a0 48             	r0 = [r4 + 40]
 1e12e62:    00 00             	nop
 1e12e64:    bc 48             	[r4 + 44] = r4
 1e12e66:    00 00             	nop


os:
 1e12e68:    78 53             	h[r1 + 46] = r0
 1e12e6a:    e1 01             	[--sp] = {psr, reti}
 1e12e6c:    d0 fb e0 01       	sp += 480
 1e12e70:    d4 fb e0 01       	sp += 480


bt:
 1e12e74:    0c 58             	h[r4 + 0] = r4
 1e12e76:    e1 01             	[--sp] = {psr, reti}
 1e12e78:    ba 6e             	b[r7 + 11] = r2
 1e12e7a:    e1 01             	[--sp] = {psr, reti}
 1e12e7c:    44 6f             	r4 = b[r7 + 20] (u)
 1e12e7e:    e1 01             	[--sp] = {psr, reti}


update_target_begin:
 1e12e80:    50 42             	r0 = [r1 + 20]
 1e12e82:    e1 01             	[--sp] = {psr, reti}
 1e12e84:    ac de             	r4 = r5 >>> 26
 1e12e86:    e1 01             	[--sp] = {psr, reti}


update_target_end:
 1e12e88:    25 73             	r5 = 50
 1e12e8a:    28 29             	if (r4 == 0) goto -432 <app_task_handler+0x6 : 1e12cdc >
 1e12e8c:    20 25             	if (r2 == 0) goto -448 <app_task_init+0x100 : 1e12cce >
 1e12e8e:    64 20             	if (r0 == 0) goto 200 <update_target_end+0xD0 : 1e12f58 >
 1e12e90:    25 78             	r5 = 130
 1e12e92:    20 25             	if (r2 == 0) goto -448 <app_task_init+0x106 : 1e12cd4 >
 1e12e94:    78 0a             	sp += 240
 1e12e96:    00 61             	r0 = b[r0 + 16] (u)
 1e12e98:    64 63             	r4 = b[r1 + 22] (u)
 1e12e9a:    5f 61             	b[r0 + 21] = r7
 1e12e9c:    64 64             	r4 = b[r2 + 6] (u)
 1e12e9e:    5f 73             	r15 = 53
 1e12ea0:    61 6d             	r1 = b[r6 + 22] (u)
 1e12ea2:    70 6c             	r0 = b[r6 + 7] (u)
 1e12ea4:    65 5f             	r5 = h[r7 + 44] (u)
 1e12ea6:    63 68             	r3 = b[r4 + 6] (u)
 1e12ea8:    00 61             	r0 = b[r0 + 16] (u)
 1e12eaa:    64 64             	r4 = b[r2 + 6] (u)
 1e12eac:    20 73             	r0 = 50
 1e12eae:    61 6d             	r1 = b[r6 + 22] (u)
 1e12eb0:    70 6c             	r0 = b[r6 + 7] (u)
 1e12eb2:    65 20             	if (r0 == 0) goto 202 <update_target_end+0xF6 : 1e12f7e >
 1e12eb4:    63 68             	r3 = b[r4 + 6] (u)
 1e12eb6:    20 25             	if (r2 == 0) goto -448 <vfs_ops_begin : 1e12cf8 >
 1e12eb8:    78 0a             	sp += 240
 1e12eba:    00 76             	r0 = 96
 1e12ebc:    62 67             	r2 = b[r3 + 22] (u)
 1e12ebe:    5f 61             	b[r0 + 21] = r7
 1e12ec0:    64 63             	r4 = b[r1 + 22] (u)
 1e12ec2:    5f 76             	r15 = 101
 1e12ec4:    61 6c             	r1 = b[r6 + 6] (u)
 1e12ec6:    75 65             	r5 = b[r2 + 23] (u)
 1e12ec8:    20 3d             	if (r6 != 0) goto -448 <vfs_ops_begin+0x12 : 1e12d0a >
 1e12eca:    20 25             	if (r2 == 0) goto -448 <vfs_ops_begin+0x14 : 1e12d0c >
 1e12ecc:    64 0a             	sp += 200
 1e12ece:    00 76             	r0 = 96
 1e12ed0:    62 61             	r2 = b[r0 + 22] (u)
 1e12ed2:    74 5f             	r4 = h[r7 + 46] (u)
 1e12ed4:    61 64             	r1 = b[r2 + 6] (u)
 1e12ed6:    63 5f             	r3 = h[r7 + 44] (u)
 1e12ed8:    76 61             	r6 = b[r0 + 23] (u)
 1e12eda:    6c 75             	r12 = 86
 1e12edc:    65 20             	if (r0 == 0) goto 202 <update_target_end+0x120 : 1e12fa8 >
 1e12ede:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0xD2 : 1e12f5a >
 1e12ee0:    25 64             	r5 = b[r2 + 2] (u)
 1e12ee2:    0a 00             	ssync
 1e12ee4:    76 62             	r6 = b[r1 + 7] (u)
 1e12ee6:    61 74             	r1 = 70
 1e12ee8:    20 3d             	if (r6 != 0) goto -448 <vfs_ops_begin+0x32 : 1e12d2a >
 1e12eea:    20 25             	if (r2 == 0) goto -448 <vfs_ops_begin+0x34 : 1e12d2c >
 1e12eec:    64 20             	if (r0 == 0) goto 200 <update_target_end+0x12E : 1e12fb6 >
 1e12eee:    6d 76             	r13 = 102
 1e12ef0:    0a 00             	ssync
 1e12ef2:    74 72             	r4 = 39
 1e12ef4:    69 6d             	b[r6 + 22] = r1
 1e12ef6:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0xE4 : 1e12f6c >
 1e12ef8:    25 64             	r5 = b[r2 + 2] (u)
 1e12efa:    2c 20             	if (r0 == 0) goto 88 <update_target_end+0xCC : 1e12f54 >
 1e12efc:    77 76             	r7 = 103
 1e12efe:    64 64             	r4 = b[r2 + 6] (u)
 1e12f00:    5f 6c             	b[r6 + 5] = r7
 1e12f02:    65 76             	r5 = 102
 1e12f04:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0xF2 : 1e12f7a >
 1e12f06:    25 64             	r5 = b[r2 + 2] (u)
 1e12f08:    0a 00             	ssync
 1e12f0a:    74 72             	r4 = 39
 1e12f0c:    69 6d             	b[r6 + 22] = r1
 1e12f0e:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0xFC : 1e12f84 >
 1e12f10:    25 64             	r5 = b[r2 + 2] (u)
 1e12f12:    2c 20             	if (r0 == 0) goto 88 <update_target_end+0xE4 : 1e12f6c >
 1e12f14:    70 76             	r0 = 103
 1e12f16:    64 64             	r4 = b[r2 + 6] (u)
 1e12f18:    5f 6c             	b[r6 + 5] = r7
 1e12f1a:    65 76             	r5 = 102
 1e12f1c:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x10A : 1e12f92 >
 1e12f1e:    25 64             	r5 = b[r2 + 2] (u)
 1e12f20:    20 25             	if (r2 == 0) goto -448 <vfs_ops_begin+0x6A : 1e12d62 >
 1e12f22:    64 2c             	if (r6 == 0) goto 200 <update_target_end+0x164 : 1e12fec >
 1e12f24:    20 70             	r0 = 2
 1e12f26:    76 64             	r6 = b[r2 + 7] (u)
 1e12f28:    64 5f             	r4 = h[r7 + 44] (u)
 1e12f2a:    6c 65             	b[r2 + 22] = r4
 1e12f2c:    76 5f             	r6 = h[r7 + 46] (u)
 1e12f2e:    6c 3a             	if (r5 != 0) goto 216 <update_target_end+0x180 : 1e13008 >
 1e12f30:    20 25             	if (r2 == 0) goto -448 <initcall_begin+0x2 : 1e12d72 >
 1e12f32:    64 0a             	sp += 200
 1e12f34:    00 6b             	r0 = b[r5 + 16] (u)
 1e12f36:    65 79             	r5 = 150
 1e12f38:    00 5b             	r0 = h[r5 + 32] (u)
 1e12f3a:    49 6e             	b[r7 + 4] = r1
 1e12f3c:    66 6f             	r6 = b[r7 + 22] (u)
 1e12f3e:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x172 : 1e12ffa >
 1e12f40:    20 5b             	r0 = h[r5 + 36] (u)
 1e12f42:    47 41             	r7 = [r0 + 80]
 1e12f44:    54 54             	r4 = h[r2 + 10] (u)
 1e12f46:    5f 43             	[r1 + 84] = r7
 1e12f48:    4c 49             	[r4 + 80] = r4
 1e12f4a:    45 4e             	r5 = [r7 + 16]
 1e12f4c:    54 5d             	r4 = h[r6 + 42] (u)
 1e12f4e:    73 6c             	r3 = b[r6 + 7] (u)
 1e12f50:    61 76             	r1 = 102
 1e12f52:    65 20             	if (r0 == 0) goto 202 <update_target_end+0x196 : 1e1301e >
 1e12f54:    72 65             	r2 = b[r2 + 23] (u)
 1e12f56:    71 75             	r1 = 87
 1e12f58:    65 73             	r5 = 54
 1e12f5a:    74 20             	if (r0 == 0) goto 232 <update_target_end+0x1BC : 1e13044 >
 1e12f5c:    63 6f             	r3 = b[r7 + 22] (u)
 1e12f5e:    6e 6e             	b[r7 + 6] = r6
 1e12f60:    5f 75             	r15 = 85
 1e12f62:    70 64             	r0 = b[r2 + 7] (u)
 1e12f64:    61 74             	r1 = 70
 1e12f66:    65 3a             	if (r5 != 0) goto 202 <update_target_end+0x1AA : 1e13032 >
 1e12f68:    0a 2d             	if (r6 == 0) goto -492 <late_initcall_begin+0x2 : 1e12d7e >
 1e12f6a:    63 6f             	r3 = b[r7 + 22] (u)
 1e12f6c:    6e 6e             	b[r7 + 6] = r6
 1e12f6e:    5f 68             	b[r4 + 5] = r7
 1e12f70:    61 6e             	r1 = b[r7 + 6] (u)
 1e12f72:    64 6c             	r4 = b[r6 + 6] (u)
 1e12f74:    65 3d             	if (r6 != 0) goto -310 <uart+0x8 : 1e12e40 >
 1e12f76:    20 25             	if (r2 == 0) goto -448 <cfg_vm+0x18 : 1e12db8 >
 1e12f78:    30 34             	if (r2 != 0) goto 96 <update_target_end+0x152 : 1e12fda >
 1e12f7a:    78 0a             	sp += 240
 1e12f7c:    2d 69             	b[r4 + 18] = r5
 1e12f7e:    6e 74             	r14 = 70
 1e12f80:    65 72             	r5 = 38
 1e12f82:    76 61             	r6 = b[r0 + 23] (u)
 1e12f84:    6c 5f             	h[r7 + 44] = r4
 1e12f86:    6d 69             	b[r4 + 22] = r5
 1e12f88:    6e 3d             	if (r6 != 0) goto -292 <vm_sfc+0xA : 1e12e66 >
 1e12f8a:    20 25             	if (r2 == 0) goto -448 <cfg_bin+0x10 : 1e12dcc >
 1e12f8c:    64 2c             	if (r6 == 0) goto 200 <update_target_end+0x1CE : 1e13056 >
 1e12f8e:    0a 2d             	if (r6 == 0) goto -492 <cfg_vm+0x4 : 1e12da4 >
 1e12f90:    69 6e             	b[r7 + 6] = r1
 1e12f92:    74 65             	r4 = b[r2 + 23] (u)
 1e12f94:    72 76             	r2 = 103
 1e12f96:    61 6c             	r1 = b[r6 + 6] (u)
 1e12f98:    5f 6d             	b[r6 + 21] = r7
 1e12f9a:    61 78             	r1 = 134
 1e12f9c:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x190 : 1e13018 >
 1e12f9e:    25 64             	r5 = b[r2 + 2] (u)
 1e12fa0:    2c 0a             	sp += 88
 1e12fa2:    2d 6c             	b[r6 + 2] = r5
 1e12fa4:    61 74             	r1 = 70
 1e12fa6:    65 6e             	r5 = b[r7 + 6] (u)
 1e12fa8:    63 79             	r3 = 150
 1e12faa:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x19E : 1e13026 >
 1e12fac:    25 64             	r5 = b[r2 + 2] (u)
 1e12fae:    2c 0a             	sp += 88
 1e12fb0:    2d 74             	r13 = 66
 1e12fb2:    69 6d             	b[r6 + 22] = r1
 1e12fb4:    65 6f             	r5 = b[r7 + 22] (u)
 1e12fb6:    75 74             	r5 = 71
 1e12fb8:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x1AC : 1e13034 >
 1e12fba:    25 64             	r5 = b[r2 + 2] (u)
 1e12fbc:    0a 0d             	r10 <<= r4
 1e12fbe:    0a 00             	ssync
 1e12fc0:    5b 49             	[r4 + 84] = r3
 1e12fc2:    6e 66             	b[r3 + 6] = r6
 1e12fc4:    6f 5d             	h[r6 + 44] = r7
 1e12fc6:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x1B4 : 1e1303c >
 1e12fc8:    5b 47             	[r3 + 84] = r3
 1e12fca:    41 54             	r1 = h[r2 + 8] (u)
 1e12fcc:    54 5f             	r4 = h[r7 + 42] (u)
 1e12fce:    43 4c             	r3 = [r6 + 16]
 1e12fd0:    49 45             	[r2 + 80] = r1
 1e12fd2:    4e 54             	h[r2 + 8] = r6
 1e12fd4:    5d 69             	b[r4 + 21] = r5
 1e12fd6:    6e 74             	r14 = 70
 1e12fd8:    65 72             	r5 = 38
 1e12fda:    76 61             	r6 = b[r0 + 23] (u)
 1e12fdc:    6c 20             	if (r0 == 0) goto 216 <update_target_end+0x22E : 1e130b6 >
 1e12fde:    65 72             	r5 = 38
 1e12fe0:    72 6f             	r2 = b[r7 + 23] (u)
 1e12fe2:    72 2c             	if (r6 == 0) goto 228 <update_target_end+0x240 : 1e130c8 >
 1e12fe4:    72 65             	r2 = b[r2 + 23] (u)
 1e12fe6:    6a 65             	b[r2 + 22] = r2
 1e12fe8:    63 74             	r3 = 70
 1e12fea:    21 21             	if (r0 == 0) goto -446 <btstack_lowpower_target+0x2 : 1e12e2e >
 1e12fec:    21 0a             	sp += 64
 1e12fee:    0d 0a             	sp += 24
 1e12ff0:    00 5b             	r0 = h[r5 + 32] (u)
 1e12ff2:    49 6e             	b[r7 + 4] = r1
 1e12ff4:    66 6f             	r6 = b[r7 + 22] (u)
 1e12ff6:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x22A : 1e130b2 >
 1e12ff8:    20 5b             	r0 = h[r5 + 36] (u)
 1e12ffa:    47 41             	r7 = [r0 + 80]
 1e12ffc:    54 54             	r4 = h[r2 + 10] (u)
 1e12ffe:    5f 43             	[r1 + 84] = r7
 1e13000:    4c 49             	[r4 + 80] = r4
 1e13002:    45 4e             	r5 = [r7 + 16]
 1e13004:    54 5d             	r4 = h[r6 + 42] (u)
 1e13006:    69 6e             	b[r7 + 6] = r1
 1e13008:    74 65             	r4 = b[r2 + 23] (u)
 1e1300a:    72 76             	r2 = 103
 1e1300c:    61 6c             	r1 = b[r6 + 6] (u)
 1e1300e:    5f 31             	if (r0 != 0) goto -322 <update_target_end+0x46 : 1e12ece >
 1e13010:    32 35             	if (r2 != 0) goto -412 <bt+0x2 : 1e12e76 >
 1e13012:    30 20             	if (r0 == 0) goto 96 <update_target_end+0x1EC : 1e13074 >
 1e13014:    65 72             	r5 = 38
 1e13016:    72 6f             	r2 = b[r7 + 23] (u)
 1e13018:    72 2c             	if (r6 == 0) goto 228 <update_target_end+0x276 : 1e130fe >
 1e1301a:    72 65             	r2 = b[r2 + 23] (u)
 1e1301c:    6a 65             	b[r2 + 22] = r2
 1e1301e:    63 74             	r3 = 70
 1e13020:    21 21             	if (r0 == 0) goto -446 <vm_sfc+0x8 : 1e12e64 >
 1e13022:    21 0a             	sp += 64
 1e13024:    0d 0a             	sp += 24
 1e13026:    00 5b             	r0 = h[r5 + 32] (u)
 1e13028:    49 6e             	b[r7 + 4] = r1
 1e1302a:    66 6f             	r6 = b[r7 + 22] (u)
 1e1302c:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x260 : 1e130e8 >
 1e1302e:    20 5b             	r0 = h[r5 + 36] (u)
 1e13030:    47 41             	r7 = [r0 + 80]
 1e13032:    54 54             	r4 = h[r2 + 10] (u)
 1e13034:    5f 43             	[r1 + 84] = r7
 1e13036:    4f 4d             	[r6 + 80] = r7
 1e13038:    4d 5d             	h[r6 + 40] = r5
 1e1303a:    45 76             	r5 = 100
 1e1303c:    65 6e             	r5 = b[r7 + 6] (u)
 1e1303e:    74 5f             	r4 = h[r7 + 46] (u)
 1e13040:    54 79             	r4 = 149
 1e13042:    70 65             	r0 = b[r2 + 23] (u)
 1e13044:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x32 : 1e12eba >
 1e13046:    30 32             	if (r1 != 0) goto 96 <update_target_end+0x220 : 1e130a8 >
 1e13048:    78 2c             	if (r6 == 0) goto 240 <update_target_end+0x2B2 : 1e1313a >
 1e1304a:    70 61             	r0 = b[r0 + 23] (u)
 1e1304c:    63 6b             	r3 = b[r5 + 22] (u)
 1e1304e:    65 74             	r5 = 70
 1e13050:    5f 61             	b[r0 + 21] = r7
 1e13052:    64 64             	r4 = b[r2 + 6] (u)
 1e13054:    72 65             	r2 = b[r2 + 23] (u)
 1e13056:    73 73             	r3 = 55
 1e13058:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x46 : 1e12ece >
 1e1305a:    30 38             	if (r4 != 0) goto 96 <update_target_end+0x234 : 1e130bc >
 1e1305c:    78 0d             	r8 >>>= r5
 1e1305e:    0a 00             	ssync
 1e13060:    5b 49             	[r4 + 84] = r3
 1e13062:    6e 66             	b[r3 + 6] = r6
 1e13064:    6f 5d             	h[r6 + 44] = r7
 1e13066:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x254 : 1e130dc >
 1e13068:    5b 47             	[r3 + 84] = r3
 1e1306a:    41 54             	r1 = h[r2 + 8] (u)
 1e1306c:    54 5f             	r4 = h[r7 + 42] (u)
 1e1306e:    43 4f             	r3 = [r7 + 80]
 1e13070:    4d 4d             	[r6 + 80] = r5
 1e13072:    5d 6a             	b[r5 + 5] = r5
 1e13074:    75 73             	r5 = 55
 1e13076:    74 5f             	r4 = h[r7 + 46] (u)
 1e13078:    68 61             	b[r0 + 22] = r0
 1e1307a:    6e 64             	b[r2 + 6] = r6
 1e1307c:    6c 65             	b[r2 + 22] = r4
 1e1307e:    3d 25             	if (r2 == 0) goto -390 <update_target_end+0x72 : 1e12efa >
 1e13080:    30 34             	if (r2 != 0) goto 96 <update_target_end+0x25A : 1e130e2 >
 1e13082:    78 2c             	if (r6 == 0) goto 240 <update_target_end+0x2EC : 1e13174 >
 1e13084:    74 79             	r4 = 151
 1e13086:    70 65             	r0 = b[r2 + 23] (u)
 1e13088:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x27C : 1e13104 >
 1e1308a:    25 64             	r5 = b[r2 + 2] (u)
 1e1308c:    0a 0d             	r10 <<= r4
 1e1308e:    0a 00             	ssync
 1e13090:    5b 49             	[r4 + 84] = r3
 1e13092:    6e 66             	b[r3 + 6] = r6
 1e13094:    6f 5d             	h[r6 + 44] = r7
 1e13096:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x284 : 1e1310c >
 1e13098:    5b 47             	[r3 + 84] = r3
 1e1309a:    41 54             	r1 = h[r2 + 8] (u)
 1e1309c:    54 5f             	r4 = h[r7 + 42] (u)
 1e1309e:    43 4f             	r3 = [r7 + 80]
 1e130a0:    4d 4d             	[r6 + 80] = r5
 1e130a2:    5d 25             	if (r2 == 0) goto -326 <update_target_end+0xD6 : 1e12f5e >
 1e130a4:    73 0a             	sp += 228
 1e130a6:    0d 0a             	sp += 24
 1e130a8:    00 62             	r0 = b[r1 + 0] (u)
 1e130aa:    6c 65             	b[r2 + 22] = r4
 1e130ac:    5f 70             	r15 = 5
 1e130ae:    72 6f             	r2 = b[r7 + 23] (u)
 1e130b0:    66 69             	r6 = b[r4 + 22] (u)
 1e130b2:    6c 65             	b[r2 + 22] = r4
 1e130b4:    5f 69             	b[r4 + 21] = r7
 1e130b6:    6e 69             	b[r4 + 22] = r6
 1e130b8:    74 00             	sti r4
 1e130ba:    3c 45             	[r2 + 76] = r4
 1e130bc:    72 72             	r2 = 39
 1e130be:    6f 72             	r15 = 38
 1e130c0:    3e 3a             	if (r5 != 0) goto 124 <update_target_end+0x2B6 : 1e1313e >
 1e130c2:    20 5b             	r0 = h[r5 + 36] (u)
 1e130c4:    47 41             	r7 = [r0 + 80]
 1e130c6:    54 54             	r4 = h[r2 + 10] (u)
 1e130c8:    5f 43             	[r1 + 84] = r7
 1e130ca:    4f 4d             	[r6 + 80] = r7
 1e130cc:    4d 5d             	h[r6 + 40] = r5
 1e130ce:    67 61             	r7 = b[r0 + 22] (u)
 1e130d0:    74 74             	r4 = 71
 1e130d2:    5f 63             	b[r1 + 21] = r7
 1e130d4:    6f 6e             	b[r7 + 6] = r7
 1e130d6:    74 72             	r4 = 39
 1e130d8:    6f 6c             	b[r6 + 6] = r7
 1e130da:    5f 62             	b[r1 + 5] = r7
 1e130dc:    6c 6f             	b[r7 + 22] = r4
 1e130de:    63 6b             	r3 = b[r5 + 22] (u)
 1e130e0:    20 69             	r0 = b[r4 + 18] (u)
 1e130e2:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x342 : 1e131ca >
 1e130e4:    6e 75             	r14 = 86
 1e130e6:    6c 6c             	b[r6 + 6] = r4
 1e130e8:    21 21             	if (r0 == 0) goto -446 <update_target_end+0xA4 : 1e12f2c >
 1e130ea:    21 0a             	sp += 64
 1e130ec:    0d 0a             	sp += 24
 1e130ee:    00 44             	r0 = [r2 + 0]
 1e130f0:    3a 5c             	h[r6 + 6] = r2
 1e130f2:    73 68             	r3 = b[r4 + 7] (u)
 1e130f4:    69 78             	r9 = 134
 1e130f6:    75 6e             	r5 = b[r7 + 7] (u)
 1e130f8:    5c 66             	b[r3 + 5] = r4
 1e130fa:    77 2d             	if (r6 == 0) goto -274 <update_target_end+0x162 : 1e12fea >
 1e130fc:    41 43             	r1 = [r1 + 80]
 1e130fe:    36 33             	if (r1 != 0) goto -404 <update_target_end+0xE4 : 1e12f6c >
 1e13100:    5f 42             	[r1 + 20] = r7
 1e13102:    54 5f             	r4 = h[r7 + 42] (u)
 1e13104:    53 44             	r3 = [r2 + 20]
 1e13106:    4b 2d             	if (r6 == 0) goto -362 <update_target_end+0x116 : 1e12f9e >
 1e13108:    6d 61             	b[r0 + 22] = r5
 1e1310a:    73 74             	r3 = 71
 1e1310c:    65 72             	r5 = 38
 1e1310e:    5c 61             	b[r0 + 21] = r4
 1e13110:    70 70             	r0 = 7
 1e13112:    73 5c             	r3 = h[r6 + 14] (u)
 1e13114:    63 6f             	r3 = b[r7 + 22] (u)
 1e13116:    6d 6d             	b[r6 + 22] = r5
 1e13118:    6f 6e             	b[r7 + 6] = r7
 1e1311a:    5c 74             	r12 = 69
 1e1311c:    68 69             	b[r4 + 22] = r0
 1e1311e:    72 64             	r2 = b[r2 + 7] (u)
 1e13120:    5f 70             	r15 = 5
 1e13122:    61 72             	r1 = 38
 1e13124:    74 79             	r4 = 151
 1e13126:    5f 70             	r15 = 5
 1e13128:    72 6f             	r2 = b[r7 + 23] (u)
 1e1312a:    66 69             	r6 = b[r4 + 22] (u)
 1e1312c:    6c 65             	b[r2 + 22] = r4
 1e1312e:    5c 6a             	b[r5 + 5] = r4
 1e13130:    69 65             	b[r2 + 22] = r1
 1e13132:    6c 69             	b[r4 + 22] = r4
 1e13134:    5c 67             	b[r3 + 21] = r4
 1e13136:    61 74             	r1 = 70
 1e13138:    74 5f             	r4 = h[r7 + 46] (u)
 1e1313a:    63 6f             	r3 = b[r7 + 22] (u)
 1e1313c:    6d 6d             	b[r6 + 22] = r5
 1e1313e:    6f 6e             	b[r7 + 6] = r7
 1e13140:    5c 6c             	b[r6 + 5] = r4
 1e13142:    65 5f             	r5 = h[r7 + 44] (u)
 1e13144:    67 61             	r7 = b[r0 + 22] (u)
 1e13146:    74 74             	r4 = 71
 1e13148:    5f 63             	b[r1 + 21] = r7
 1e1314a:    6f 6d             	b[r6 + 22] = r7
 1e1314c:    6d 6f             	b[r7 + 22] = r5
 1e1314e:    6e 2e             	if (r7 == 0) goto 220 <update_target_end+0x3A4 : 1e1322c >
 1e13150:    63 00             	cli r3
 1e13152:    5b 49             	[r4 + 84] = r3
 1e13154:    6e 66             	b[r3 + 6] = r6
 1e13156:    6f 5d             	h[r6 + 44] = r7
 1e13158:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x346 : 1e131ce >
 1e1315a:    5b 47             	[r3 + 84] = r3
 1e1315c:    41 54             	r1 = h[r2 + 8] (u)
 1e1315e:    54 5f             	r4 = h[r7 + 42] (u)
 1e13160:    43 4f             	r3 = [r7 + 80]
 1e13162:    4d 4d             	[r6 + 80] = r5
 1e13164:    5d 61             	b[r0 + 21] = r5
 1e13166:    74 74             	r4 = 71
 1e13168:    20 6d             	r0 = b[r6 + 18] (u)
 1e1316a:    61 6c             	r1 = b[r6 + 6] (u)
 1e1316c:    6c 6f             	b[r7 + 22] = r4
 1e1316e:    63 20             	if (r0 == 0) goto 198 <update_target_end+0x3AE : 1e13236 >
 1e13170:    73 69             	r3 = b[r4 + 23] (u)
 1e13172:    7a 65             	b[r2 + 23] = r2
 1e13174:    3d 25             	if (r2 == 0) goto -390 <update_target_end+0x168 : 1e12ff0 >
 1e13176:    64 20             	if (r0 == 0) goto 200 <update_target_end+0x3B8 : 1e13240 >
 1e13178:    66 61             	r6 = b[r0 + 22] (u)
 1e1317a:    69 6c             	b[r6 + 6] = r1
 1e1317c:    21 21             	if (r0 == 0) goto -446 <update_target_end+0x138 : 1e12fc0 >
 1e1317e:    21 0a             	sp += 64
 1e13180:    0d 0a             	sp += 24
 1e13182:    00 5b             	r0 = h[r5 + 32] (u)
 1e13184:    49 6e             	b[r7 + 4] = r1
 1e13186:    66 6f             	r6 = b[r7 + 22] (u)
 1e13188:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x3BC : 1e13244 >
 1e1318a:    20 5b             	r0 = h[r5 + 36] (u)
 1e1318c:    47 41             	r7 = [r0 + 80]
 1e1318e:    54 54             	r4 = h[r2 + 10] (u)
 1e13190:    5f 43             	[r1 + 84] = r7
 1e13192:    4f 4d             	[r6 + 80] = r7
 1e13194:    4d 5d             	h[r6 + 40] = r5
 1e13196:    6d 74             	r13 = 70
 1e13198:    75 5f             	r5 = h[r7 + 46] (u)
 1e1319a:    73 69             	r3 = b[r4 + 23] (u)
 1e1319c:    7a 65             	b[r2 + 23] = r2
 1e1319e:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x392 : 1e1321a >
 1e131a0:    25 64             	r5 = b[r2 + 2] (u)
 1e131a2:    2c 73             	r12 = 50
 1e131a4:    65 74             	r5 = 70
 1e131a6:    20 66             	r0 = b[r3 + 2] (u)
 1e131a8:    61 69             	r1 = b[r4 + 22] (u)
 1e131aa:    6c 21             	if (r0 == 0) goto -296 <update_target_end+0x1FC : 1e13084 >
 1e131ac:    21 21             	if (r0 == 0) goto -446 <update_target_end+0x168 : 1e12ff0 >
 1e131ae:    0d 0a             	sp += 24
 1e131b0:    00 5b             	r0 = h[r5 + 32] (u)
 1e131b2:    49 6e             	b[r7 + 4] = r1
 1e131b4:    66 6f             	r6 = b[r7 + 22] (u)
 1e131b6:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x3EA : 1e13272 >
 1e131b8:    20 5b             	r0 = h[r5 + 36] (u)
 1e131ba:    47 41             	r7 = [r0 + 80]
 1e131bc:    54 54             	r4 = h[r2 + 10] (u)
 1e131be:    5f 43             	[r1 + 84] = r7
 1e131c0:    4f 4d             	[r6 + 80] = r7
 1e131c2:    4d 5d             	h[r6 + 40] = r5
 1e131c4:    25 73             	r5 = 50
 1e131c6:    20 65             	r0 = b[r2 + 18] (u)
 1e131c8:    6e 64             	b[r2 + 6] = r6
 1e131ca:    0a 0d             	r10 <<= r4
 1e131cc:    0a 00             	ssync
 1e131ce:    5b 49             	[r4 + 84] = r3
 1e131d0:    6e 66             	b[r3 + 6] = r6
 1e131d2:    6f 5d             	h[r6 + 44] = r7
 1e131d4:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x3C2 : 1e1324a >
 1e131d6:    5b 47             	[r3 + 84] = r3
 1e131d8:    41 54             	r1 = h[r2 + 8] (u)
 1e131da:    54 5f             	r4 = h[r7 + 42] (u)
 1e131dc:    43 4f             	r3 = [r7 + 80]
 1e131de:    4d 4d             	[r6 + 80] = r5
 1e131e0:    5d 65             	b[r2 + 21] = r5
 1e131e2:    72 72             	r2 = 39
 1e131e4:    5f 63             	b[r1 + 21] = r7
 1e131e6:    6f 6e             	b[r7 + 6] = r7
 1e131e8:    6e 65             	b[r2 + 22] = r6
 1e131ea:    63 74             	r3 = 70
 1e131ec:    69 6f             	b[r7 + 22] = r1
 1e131ee:    6e 3a             	if (r5 != 0) goto 220 <update_target_end+0x444 : 1e132cc >
 1e131f0:    25 64             	r5 = b[r2 + 2] (u)
 1e131f2:    0a 0d             	r10 <<= r4
 1e131f4:    0a 00             	ssync
 1e131f6:    5b 49             	[r4 + 84] = r3
 1e131f8:    6e 66             	b[r3 + 6] = r6
 1e131fa:    6f 5d             	h[r6 + 44] = r7
 1e131fc:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x3EA : 1e13272 >
 1e131fe:    5b 47             	[r3 + 84] = r3
 1e13200:    41 54             	r1 = h[r2 + 8] (u)
 1e13202:    54 5f             	r4 = h[r7 + 42] (u)
 1e13204:    43 4f             	r3 = [r7 + 80]
 1e13206:    4d 4d             	[r6 + 80] = r5
 1e13208:    5d 65             	b[r2 + 21] = r5
 1e1320a:    72 72             	r2 = 39
 1e1320c:    6f 72             	r15 = 38
 1e1320e:    20 68             	r0 = b[r4 + 2] (u)
 1e13210:    61 6e             	r1 = b[r7 + 6] (u)
 1e13212:    64 6c             	r4 = b[r6 + 6] (u)
 1e13214:    65 3a             	if (r5 != 0) goto 202 <update_target_end+0x458 : 1e132e0 >
 1e13216:    25 30             	if (r0 != 0) goto 74 <update_target_end+0x3DA : 1e13262 >
 1e13218:    34 78             	r4 = 131
 1e1321a:    0d 0a             	sp += 24
 1e1321c:    00 5b             	r0 = h[r5 + 32] (u)
 1e1321e:    49 6e             	b[r7 + 4] = r1
 1e13220:    66 6f             	r6 = b[r7 + 22] (u)
 1e13222:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x456 : 1e132de >
 1e13224:    20 5b             	r0 = h[r5 + 36] (u)
 1e13226:    47 41             	r7 = [r0 + 80]
 1e13228:    54 54             	r4 = h[r2 + 10] (u)
 1e1322a:    5f 43             	[r1 + 84] = r7
 1e1322c:    4f 4d             	[r6 + 80] = r7
 1e1322e:    4d 5d             	h[r6 + 40] = r5
 1e13230:    48 43             	[r1 + 80] = r0
 1e13232:    49 5f             	h[r7 + 40] = r1
 1e13234:    45 56             	r5 = h[r3 + 8] (u)
 1e13236:    45 4e             	r5 = [r7 + 16]
 1e13238:    54 5f             	r4 = h[r7 + 42] (u)
 1e1323a:    56 45             	r6 = [r2 + 84]
 1e1323c:    4e 44             	[r2 + 16] = r6
 1e1323e:    4f 52             	h[r1 + 8] = r7
 1e13240:    5f 52             	h[r1 + 10] = r7
 1e13242:    45 4d             	r5 = [r6 + 80]
 1e13244:    4f 54             	h[r2 + 8] = r7
 1e13246:    45 5f             	r5 = h[r7 + 40] (u)
 1e13248:    54 45             	r4 = [r2 + 84]
 1e1324a:    53 54             	r3 = h[r2 + 10] (u)
 1e1324c:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x43A : 1e132c2 >
 1e1324e:    25 64             	r5 = b[r2 + 2] (u)
 1e13250:    2c 25             	if (r2 == 0) goto -424 <update_target_end+0x222 : 1e130aa >
 1e13252:    64 0a             	sp += 200
 1e13254:    0d 0a             	sp += 24
 1e13256:    00 5b             	r0 = h[r5 + 32] (u)
 1e13258:    49 6e             	b[r7 + 4] = r1
 1e1325a:    66 6f             	r6 = b[r7 + 22] (u)
 1e1325c:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x490 : 1e13318 >
 1e1325e:    20 5b             	r0 = h[r5 + 36] (u)
 1e13260:    47 41             	r7 = [r0 + 80]
 1e13262:    54 54             	r4 = h[r2 + 10] (u)
 1e13264:    5f 43             	[r1 + 84] = r7
 1e13266:    4f 4d             	[r6 + 80] = r7
 1e13268:    4d 5d             	h[r6 + 40] = r5
 1e1326a:    48 43             	[r1 + 80] = r0
 1e1326c:    49 5f             	h[r7 + 40] = r1
 1e1326e:    45 56             	r5 = h[r3 + 8] (u)
 1e13270:    45 4e             	r5 = [r7 + 16]
 1e13272:    54 5f             	r4 = h[r7 + 42] (u)
 1e13274:    45 4e             	r5 = [r7 + 16]
 1e13276:    43 52             	r3 = h[r1 + 8] (u)
 1e13278:    59 50             	h[r0 + 10] = r1
 1e1327a:    54 49             	r4 = [r4 + 84]
 1e1327c:    4f 4e             	[r7 + 16] = r7
 1e1327e:    5f 43             	[r1 + 84] = r7
 1e13280:    48 41             	[r0 + 80] = r0
 1e13282:    4e 47             	[r3 + 80] = r6
 1e13284:    45 3d             	if (r6 != 0) goto -374 <update_target_end+0x288 : 1e13110 >
 1e13286:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x240 : 1e130c8 >
 1e13288:    64 2c             	if (r6 == 0) goto 200 <update_target_end+0x4CA : 1e13352 >
 1e1328a:    68 61             	b[r0 + 22] = r0
 1e1328c:    6e 64             	b[r2 + 6] = r6
 1e1328e:    6c 65             	b[r2 + 22] = r4
 1e13290:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x484 : 1e1330c >
 1e13292:    25 30             	if (r0 != 0) goto 74 <update_target_end+0x456 : 1e132de >
 1e13294:    34 78             	r4 = 131
 1e13296:    0a 0d             	r10 <<= r4
 1e13298:    0a 00             	ssync
 1e1329a:    5b 49             	[r4 + 84] = r3
 1e1329c:    6e 66             	b[r3 + 6] = r6
 1e1329e:    6f 5d             	h[r6 + 44] = r7
 1e132a0:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x48E : 1e13316 >
 1e132a2:    5b 47             	[r3 + 84] = r3
 1e132a4:    41 54             	r1 = h[r2 + 8] (u)
 1e132a6:    54 5f             	r4 = h[r7 + 42] (u)
 1e132a8:    43 4f             	r3 = [r7 + 80]
 1e132aa:    4d 4d             	[r6 + 80] = r5
 1e132ac:    5d 6d             	b[r6 + 21] = r5
 1e132ae:    6f 64             	b[r2 + 6] = r7
 1e132b0:    65 5f             	r5 = h[r7 + 44] (u)
 1e132b2:    65 6e             	r5 = b[r7 + 6] (u)
 1e132b4:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x2A2 : 1e1312a >
 1e132b6:    64 0a             	sp += 200
 1e132b8:    0d 0a             	sp += 24
 1e132ba:    00 5b             	r0 = h[r5 + 32] (u)
 1e132bc:    49 6e             	b[r7 + 4] = r1
 1e132be:    66 6f             	r6 = b[r7 + 22] (u)
 1e132c0:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x4F4 : 1e1337c >
 1e132c2:    20 5b             	r0 = h[r5 + 36] (u)
 1e132c4:    47 41             	r7 = [r0 + 80]
 1e132c6:    54 54             	r4 = h[r2 + 10] (u)
 1e132c8:    5f 43             	[r1 + 84] = r7
 1e132ca:    4f 4d             	[r6 + 80] = r7
 1e132cc:    4d 5d             	h[r6 + 40] = r5
 1e132ce:    3e 3e             	if (r7 != 0) goto 124 <update_target_end+0x4C4 : 1e1334c >
 1e132d0:    3e 73             	r14 = 51
 1e132d2:    65 6e             	r5 = b[r7 + 6] (u)
 1e132d4:    64 20             	if (r0 == 0) goto 200 <update_target_end+0x516 : 1e1339e >
 1e132d6:    64 69             	r4 = b[r4 + 22] (u)
 1e132d8:    73 63             	r3 = b[r1 + 23] (u)
 1e132da:    6f 6e             	b[r7 + 6] = r7
 1e132dc:    6e 65             	b[r2 + 22] = r6
 1e132de:    63 74             	r3 = 70
 1e132e0:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x4D4 : 1e1335c >
 1e132e2:    25 30             	if (r0 != 0) goto 74 <update_target_end+0x4A6 : 1e1332e >
 1e132e4:    34 78             	r4 = 131
 1e132e6:    0a 0d             	r10 <<= r4
 1e132e8:    0a 00             	ssync
 1e132ea:    5b 49             	[r4 + 84] = r3
 1e132ec:    6e 66             	b[r3 + 6] = r6
 1e132ee:    6f 5d             	h[r6 + 44] = r7
 1e132f0:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x4DE : 1e13366 >
 1e132f2:    5b 47             	[r3 + 84] = r3
 1e132f4:    41 54             	r1 = h[r2 + 8] (u)
 1e132f6:    54 5f             	r4 = h[r7 + 42] (u)
 1e132f8:    43 4f             	r3 = [r7 + 80]
 1e132fa:    4d 4d             	[r6 + 80] = r5
 1e132fc:    5d 3e             	if (r7 != 0) goto 186 <update_target_end+0x530 : 1e133b8 >
 1e132fe:    3e 3e             	if (r7 != 0) goto 124 <update_target_end+0x4F4 : 1e1337c >
 1e13300:    62 75             	r2 = 86
 1e13302:    73 79             	r3 = 151
 1e13304:    2c 77             	r12 = 114
 1e13306:    61 69             	r1 = b[r4 + 22] (u)
 1e13308:    74 20             	if (r0 == 0) goto 232 <update_target_end+0x56A : 1e133f2 >
 1e1330a:    64 69             	r4 = b[r4 + 22] (u)
 1e1330c:    73 63             	r3 = b[r1 + 23] (u)
 1e1330e:    6f 6e             	b[r7 + 6] = r7
 1e13310:    6e 65             	b[r2 + 22] = r6
 1e13312:    63 74             	r3 = 70
 1e13314:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x508 : 1e13390 >
 1e13316:    25 30             	if (r0 != 0) goto 74 <update_target_end+0x4DA : 1e13362 >
 1e13318:    34 78             	r4 = 131
 1e1331a:    0a 0d             	r10 <<= r4
 1e1331c:    0a 00             	ssync
 1e1331e:    5b 49             	[r4 + 84] = r3
 1e13320:    6e 66             	b[r3 + 6] = r6
 1e13322:    6f 5d             	h[r6 + 44] = r7
 1e13324:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x512 : 1e1339a >
 1e13326:    5b 47             	[r3 + 84] = r3
 1e13328:    41 54             	r1 = h[r2 + 8] (u)
 1e1332a:    54 5f             	r4 = h[r7 + 42] (u)
 1e1332c:    43 4f             	r3 = [r7 + 80]
 1e1332e:    4d 4d             	[r6 + 80] = r5
 1e13330:    5d 25             	if (r2 == 0) goto -326 <update_target_end+0x364 : 1e131ec >
 1e13332:    73 2c             	if (r6 == 0) goto 230 <update_target_end+0x592 : 1e1341a >
 1e13334:    25 64             	r5 = b[r2 + 2] (u)
 1e13336:    0a 0d             	r10 <<= r4
 1e13338:    0a 00             	ssync
 1e1333a:    62 6c             	r2 = b[r6 + 6] (u)
 1e1333c:    65 5f             	r5 = h[r7 + 44] (u)
 1e1333e:    63 6f             	r3 = b[r7 + 22] (u)
 1e13340:    6d 6d             	b[r6 + 22] = r5
 1e13342:    5f 69             	b[r4 + 21] = r7
 1e13344:    6e 69             	b[r4 + 22] = r6
 1e13346:    74 00             	sti r4
 1e13348:    5b 49             	[r4 + 84] = r3
 1e1334a:    6e 66             	b[r3 + 6] = r6
 1e1334c:    6f 5d             	h[r6 + 44] = r7
 1e1334e:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x53C : 1e133c4 >
 1e13350:    5b 47             	[r3 + 84] = r3
 1e13352:    41 54             	r1 = h[r2 + 8] (u)
 1e13354:    54 5f             	r4 = h[r7 + 42] (u)
 1e13356:    43 4f             	r3 = [r7 + 80]
 1e13358:    4d 4d             	[r6 + 80] = r5
 1e1335a:    5d 62             	b[r1 + 5] = r5
 1e1335c:    6c 65             	b[r2 + 22] = r4
 1e1335e:    5f 66             	b[r3 + 5] = r7
 1e13360:    69 6c             	b[r6 + 6] = r1
 1e13362:    65 3a             	if (r5 != 0) goto 202 <update_target_end+0x5A6 : 1e1342e >
 1e13364:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x31E : 1e131a6 >
 1e13366:    73 0d             	r3 >>>= r5
 1e13368:    0a 00             	ssync
 1e1336a:    5b 49             	[r4 + 84] = r3
 1e1336c:    6e 66             	b[r3 + 6] = r6
 1e1336e:    6f 5d             	h[r6 + 44] = r7
 1e13370:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x55E : 1e133e6 >
 1e13372:    5b 47             	[r3 + 84] = r3
 1e13374:    41 54             	r1 = h[r2 + 8] (u)
 1e13376:    54 5f             	r4 = h[r7 + 42] (u)
 1e13378:    43 4f             	r3 = [r7 + 80]
 1e1337a:    4d 4d             	[r6 + 80] = r5
 1e1337c:    5d 67             	b[r3 + 21] = r5
 1e1337e:    61 74             	r1 = 70
 1e13380:    74 5f             	r4 = h[r7 + 46] (u)
 1e13382:    63 6f             	r3 = b[r7 + 22] (u)
 1e13384:    6e 66             	b[r3 + 6] = r6
 1e13386:    69 67             	b[r3 + 22] = r1
 1e13388:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x576 : 1e133fe >
 1e1338a:    25 64             	r5 = b[r2 + 2] (u)
 1e1338c:    2c 25             	if (r2 == 0) goto -424 <update_target_end+0x35E : 1e131e6 >
 1e1338e:    64 0a             	sp += 200
 1e13390:    0d 0a             	sp += 24
 1e13392:    00 5b             	r0 = h[r5 + 32] (u)
 1e13394:    49 6e             	b[r7 + 4] = r1
 1e13396:    66 6f             	r6 = b[r7 + 22] (u)
 1e13398:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x5CC : 1e13454 >
 1e1339a:    20 5b             	r0 = h[r5 + 36] (u)
 1e1339c:    47 41             	r7 = [r0 + 80]
 1e1339e:    54 54             	r4 = h[r2 + 10] (u)
 1e133a0:    5f 43             	[r1 + 84] = r7
 1e133a2:    4f 4d             	[r6 + 80] = r7
 1e133a4:    4d 5d             	h[r6 + 40] = r5
 1e133a6:    62 74             	r2 = 70
 1e133a8:    73 74             	r3 = 71
 1e133aa:    61 63             	r1 = b[r1 + 22] (u)
 1e133ac:    6b 5f             	h[r7 + 44] = r3
 1e133ae:    63 6f             	r3 = b[r7 + 22] (u)
 1e133b0:    6e 66             	b[r3 + 6] = r6
 1e133b2:    69 67             	b[r3 + 22] = r1
 1e133b4:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x5A2 : 1e1342a >
 1e133b6:    25 64             	r5 = b[r2 + 2] (u)
 1e133b8:    2d 25             	if (r2 == 0) goto -422 <update_target_end+0x38C : 1e13214 >
 1e133ba:    64 2d             	if (r6 == 0) goto -312 <update_target_end+0x3FC : 1e13284 >
 1e133bc:    25 64             	r5 = b[r2 + 2] (u)
 1e133be:    2d 25             	if (r2 == 0) goto -422 <update_target_end+0x392 : 1e1321a >
 1e133c0:    64 0a             	sp += 200
 1e133c2:    0d 0a             	sp += 24
 1e133c4:    00 62             	r0 = b[r1 + 0] (u)
 1e133c6:    6c 65             	b[r2 + 22] = r4
 1e133c8:    5f 63             	b[r1 + 21] = r7
 1e133ca:    6f 6d             	b[r6 + 22] = r7
 1e133cc:    6d 5f             	h[r7 + 44] = r5
 1e133ce:    65 78             	r5 = 134
 1e133d0:    69 74             	r9 = 70
 1e133d2:    00 62             	r0 = b[r1 + 0] (u)
 1e133d4:    6c 65             	b[r2 + 22] = r4
 1e133d6:    5f 63             	b[r1 + 21] = r7
 1e133d8:    6f 6d             	b[r6 + 22] = r7
 1e133da:    6d 5f             	h[r7 + 44] = r5
 1e133dc:    73 65             	r3 = b[r2 + 23] (u)
 1e133de:    74 5f             	r4 = h[r7 + 46] (u)
 1e133e0:    63 6f             	r3 = b[r7 + 22] (u)
 1e133e2:    6e 66             	b[r3 + 6] = r6
 1e133e4:    69 67             	b[r3 + 22] = r1
 1e133e6:    5f 6e             	b[r7 + 5] = r7
 1e133e8:    61 6d             	r1 = b[r6 + 22] (u)
 1e133ea:    65 00             	cli r5
 1e133ec:    3c 45             	[r2 + 76] = r4
 1e133ee:    72 72             	r2 = 39
 1e133f0:    6f 72             	r15 = 38
 1e133f2:    3e 3a             	if (r5 != 0) goto 124 <update_target_end+0x5E8 : 1e13470 >
 1e133f4:    20 5b             	r0 = h[r5 + 36] (u)
 1e133f6:    47 41             	r7 = [r0 + 80]
 1e133f8:    54 54             	r4 = h[r2 + 10] (u)
 1e133fa:    5f 43             	[r1 + 84] = r7
 1e133fc:    4f 4d             	[r6 + 80] = r7
 1e133fe:    4d 5d             	h[r6 + 40] = r5
 1e13400:    63 66             	r3 = b[r3 + 6] (u)
 1e13402:    67 5f             	r7 = h[r7 + 44] (u)
 1e13404:    6e 61             	b[r0 + 22] = r6
 1e13406:    6d 65             	b[r2 + 22] = r5
 1e13408:    20 6f             	r0 = b[r7 + 18] (u)
 1e1340a:    76 65             	r6 = b[r2 + 23] (u)
 1e1340c:    72 66             	r2 = b[r3 + 7] (u)
 1e1340e:    6c 6f             	b[r7 + 22] = r4
 1e13410:    77 21             	if (r0 == 0) goto -274 <update_target_end+0x478 : 1e13300 >
 1e13412:    21 21             	if (r0 == 0) goto -446 <update_target_end+0x3CE : 1e13256 >
 1e13414:    0a 0d             	r10 <<= r4
 1e13416:    0a 00             	ssync
 1e13418:    3c 45             	[r2 + 76] = r4
 1e1341a:    72 72             	r2 = 39
 1e1341c:    6f 72             	r15 = 38
 1e1341e:    3e 3a             	if (r5 != 0) goto 124 <update_target_end+0x614 : 1e1349c >
 1e13420:    20 5b             	r0 = h[r5 + 36] (u)
 1e13422:    47 41             	r7 = [r0 + 80]
 1e13424:    54 54             	r4 = h[r2 + 10] (u)
 1e13426:    5f 43             	[r1 + 84] = r7
 1e13428:    4f 4d             	[r6 + 80] = r7
 1e1342a:    4d 5d             	h[r6 + 40] = r5
 1e1342c:    61 64             	r1 = b[r2 + 6] (u)
 1e1342e:    64 5f             	r4 = h[r7 + 44] (u)
 1e13430:    6e 61             	b[r0 + 22] = r6
 1e13432:    6d 65             	b[r2 + 22] = r5
 1e13434:    20 6f             	r0 = b[r7 + 18] (u)
 1e13436:    76 65             	r6 = b[r2 + 23] (u)
 1e13438:    72 66             	r2 = b[r3 + 7] (u)
 1e1343a:    6c 6f             	b[r7 + 22] = r4
 1e1343c:    77 21             	if (r0 == 0) goto -274 <update_target_end+0x4A4 : 1e1332c >
 1e1343e:    21 21             	if (r0 == 0) goto -446 <update_target_end+0x3FA : 1e13282 >
 1e13440:    0a 0d             	r10 <<= r4
 1e13442:    0a 00             	ssync
 1e13444:    5b 49             	[r4 + 84] = r3
 1e13446:    6e 66             	b[r3 + 6] = r6
 1e13448:    6f 5d             	h[r6 + 44] = r7
 1e1344a:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x638 : 1e134c0 >
 1e1344c:    5b 47             	[r3 + 84] = r3
 1e1344e:    41 54             	r1 = h[r2 + 8] (u)
 1e13450:    54 5f             	r4 = h[r7 + 42] (u)
 1e13452:    43 4f             	r3 = [r7 + 80]
 1e13454:    4d 4d             	[r6 + 80] = r5
 1e13456:    5d 62             	b[r1 + 5] = r5
 1e13458:    6c 65             	b[r2 + 22] = r4
 1e1345a:    20 6e             	r0 = b[r7 + 2] (u)
 1e1345c:    61 6d             	r1 = b[r6 + 22] (u)
 1e1345e:    65 28             	if (r4 == 0) goto 202 <update_target_end+0x6A2 : 1e1352a >
 1e13460:    25 64             	r5 = b[r2 + 2] (u)
 1e13462:    29 3a             	if (r5 != 0) goto 82 <update_target_end+0x62E : 1e134b6 >
 1e13464:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x41E : 1e132a6 >
 1e13466:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x6C6 : 1e1354e >
 1e13468:    0a 0d             	r10 <<= r4
 1e1346a:    0a 00             	ssync
 1e1346c:    3c 45             	[r2 + 76] = r4
 1e1346e:    72 72             	r2 = 39
 1e13470:    6f 72             	r15 = 38
 1e13472:    3e 3a             	if (r5 != 0) goto 124 <update_target_end+0x668 : 1e134f0 >
 1e13474:    20 5b             	r0 = h[r5 + 36] (u)
 1e13476:    47 41             	r7 = [r0 + 80]
 1e13478:    54 54             	r4 = h[r2 + 10] (u)
 1e1347a:    5f 43             	[r1 + 84] = r7
 1e1347c:    4f 4d             	[r6 + 80] = r7
 1e1347e:    4d 5d             	h[r6 + 40] = r5
 1e13480:    61 74             	r1 = 70
 1e13482:    74 5f             	r4 = h[r7 + 46] (u)
 1e13484:    73 65             	r3 = b[r2 + 23] (u)
 1e13486:    6e 64             	b[r2 + 6] = r6
 1e13488:    5f 66             	b[r3 + 5] = r7
 1e1348a:    61 69             	r1 = b[r4 + 22] (u)
 1e1348c:    6c 3a             	if (r5 != 0) goto 216 <update_target_end+0x6DE : 1e13566 >
 1e1348e:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x448 : 1e132d0 >
 1e13490:    64 21             	if (r0 == 0) goto -312 <update_target_end+0x4D2 : 1e1335a >
 1e13492:    21 21             	if (r0 == 0) goto -446 <update_target_end+0x44E : 1e132d6 >
 1e13494:    0a 0d             	r10 <<= r4
 1e13496:    0a 00             	ssync
 1e13498:    5b 49             	[r4 + 84] = r3
 1e1349a:    6e 66             	b[r3 + 6] = r6
 1e1349c:    6f 5d             	h[r6 + 44] = r7
 1e1349e:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x68C : 1e13514 >
 1e134a0:    5b 47             	[r3 + 84] = r3
 1e134a2:    41 54             	r1 = h[r2 + 8] (u)
 1e134a4:    54 5f             	r4 = h[r7 + 42] (u)
 1e134a6:    53 45             	r3 = [r2 + 84]
 1e134a8:    52 56             	r2 = h[r3 + 10] (u)
 1e134aa:    45 52             	r5 = h[r1 + 8] (u)
 1e134ac:    5d 63             	b[r1 + 21] = r5
 1e134ae:    6f 6e             	b[r7 + 6] = r7
 1e134b0:    6e 5f             	h[r7 + 44] = r6
 1e134b2:    68 61             	b[r0 + 22] = r0
 1e134b4:    6e 64             	b[r2 + 6] = r6
 1e134b6:    6c 65             	b[r2 + 22] = r4
 1e134b8:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x6AC : 1e13534 >
 1e134ba:    25 30             	if (r0 != 0) goto 74 <update_target_end+0x67E : 1e13506 >
 1e134bc:    34 78             	r4 = 131
 1e134be:    2c 73             	r12 = 50
 1e134c0:    65 74             	r5 = 70
 1e134c2:    20 6e             	r0 = b[r7 + 2] (u)
 1e134c4:    65 77             	r5 = 118
 1e134c6:    5f 6b             	b[r5 + 21] = r7
 1e134c8:    65 79             	r5 = 150
 1e134ca:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x6BE : 1e13546 >
 1e134cc:    25 30             	if (r0 != 0) goto 74 <update_target_end+0x690 : 1e13518 >
 1e134ce:    36 75             	r6 = 83
 1e134d0:    0a 0d             	r10 <<= r4
 1e134d2:    0a 00             	ssync
 1e134d4:    5b 49             	[r4 + 84] = r3
 1e134d6:    6e 66             	b[r3 + 6] = r6
 1e134d8:    6f 5d             	h[r6 + 44] = r7
 1e134da:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x6C8 : 1e13550 >
 1e134dc:    5b 47             	[r3 + 84] = r3
 1e134de:    41 54             	r1 = h[r2 + 8] (u)
 1e134e0:    54 5f             	r4 = h[r7 + 42] (u)
 1e134e2:    53 45             	r3 = [r2 + 84]
 1e134e4:    52 56             	r2 = h[r3 + 10] (u)
 1e134e6:    45 52             	r5 = h[r1 + 8] (u)
 1e134e8:    5d 25             	if (r2 == 0) goto -326 <update_target_end+0x51C : 1e133a4 >
 1e134ea:    30 34             	if (r2 != 0) goto 96 <update_target_end+0x6C4 : 1e1354c >
 1e134ec:    78 2d             	if (r6 == 0) goto -272 <update_target_end+0x556 : 1e133de >
 1e134ee:    3e 4a             	[r5 + 12] = r6
 1e134f0:    75 73             	r5 = 55
 1e134f2:    74 20             	if (r0 == 0) goto 232 <update_target_end+0x754 : 1e135dc >
 1e134f4:    57 6f             	r7 = b[r7 + 21] (u)
 1e134f6:    72 6b             	r2 = b[r5 + 23] (u)
 1e134f8:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x758 : 1e135e0 >
 1e134fa:    43 6f             	r3 = b[r7 + 20] (u)
 1e134fc:    6e 66             	b[r3 + 6] = r6
 1e134fe:    69 72             	r9 = 38
 1e13500:    6d 65             	b[r2 + 22] = r5
 1e13502:    64 2e             	if (r7 == 0) goto 200 <update_target_end+0x744 : 1e135cc >
 1e13504:    0a 0d             	r10 <<= r4
 1e13506:    0a 00             	ssync
 1e13508:    5b 49             	[r4 + 84] = r3
 1e1350a:    6e 66             	b[r3 + 6] = r6
 1e1350c:    6f 5d             	h[r6 + 44] = r7
 1e1350e:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x6FC : 1e13584 >
 1e13510:    5b 47             	[r3 + 84] = r3
 1e13512:    41 54             	r1 = h[r2 + 8] (u)
 1e13514:    54 5f             	r4 = h[r7 + 42] (u)
 1e13516:    53 45             	r3 = [r2 + 84]
 1e13518:    52 56             	r2 = h[r3 + 10] (u)
 1e1351a:    45 52             	r5 = h[r1 + 8] (u)
 1e1351c:    5d 25             	if (r2 == 0) goto -326 <update_target_end+0x550 : 1e133d8 >
 1e1351e:    30 34             	if (r2 != 0) goto 96 <update_target_end+0x6F8 : 1e13580 >
 1e13520:    78 2d             	if (r6 == 0) goto -272 <update_target_end+0x58A : 1e13412 >
 1e13522:    3e 50             	h[r0 + 6] = r6
 1e13524:    61 73             	r1 = 54
 1e13526:    73 6b             	r3 = b[r5 + 23] (u)
 1e13528:    65 79             	r5 = 150
 1e1352a:    20 64             	r0 = b[r2 + 2] (u)
 1e1352c:    69 73             	r9 = 54
 1e1352e:    70 6c             	r0 = b[r6 + 7] (u)
 1e13530:    61 79             	r1 = 150
 1e13532:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x720 : 1e135a8 >
 1e13534:    25 30             	if (r0 != 0) goto 74 <update_target_end+0x6F8 : 1e13580 >
 1e13536:    36 75             	r6 = 83
 1e13538:    2e 0a             	sp += 92
 1e1353a:    0d 0a             	sp += 24
 1e1353c:    00 5b             	r0 = h[r5 + 32] (u)
 1e1353e:    49 6e             	b[r7 + 4] = r1
 1e13540:    66 6f             	r6 = b[r7 + 22] (u)
 1e13542:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x776 : 1e135fe >
 1e13544:    20 5b             	r0 = h[r5 + 36] (u)
 1e13546:    47 41             	r7 = [r0 + 80]
 1e13548:    54 54             	r4 = h[r2 + 10] (u)
 1e1354a:    5f 53             	h[r1 + 42] = r7
 1e1354c:    45 52             	r5 = h[r1 + 8] (u)
 1e1354e:    56 45             	r6 = [r2 + 84]
 1e13550:    52 5d             	r2 = h[r6 + 42] (u)
 1e13552:    25 30             	if (r0 != 0) goto 74 <update_target_end+0x716 : 1e1359e >
 1e13554:    34 78             	r4 = 131
 1e13556:    2d 3e             	if (r7 != 0) goto 90 <update_target_end+0x72A : 1e135b2 >
 1e13558:    50 61             	r0 = b[r0 + 21] (u)
 1e1355a:    73 73             	r3 = 55
 1e1355c:    6b 65             	b[r2 + 22] = r3
 1e1355e:    79 20             	if (r0 == 0) goto 242 <update_target_end+0x7CA : 1e13652 >
 1e13560:    69 6e             	b[r7 + 6] = r1
 1e13562:    70 75             	r0 = 87
 1e13564:    74 3a             	if (r5 != 0) goto 232 <update_target_end+0x7C6 : 1e1364e >
 1e13566:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x520 : 1e133a8 >
 1e13568:    30 36             	if (r3 != 0) goto 96 <update_target_end+0x742 : 1e135ca >
 1e1356a:    75 2e             	if (r7 == 0) goto 234 <update_target_end+0x7CE : 1e13656 >
 1e1356c:    0a 0d             	r10 <<= r4
 1e1356e:    0a 00             	ssync
 1e13570:    5b 49             	[r4 + 84] = r3
 1e13572:    6e 66             	b[r3 + 6] = r6
 1e13574:    6f 5d             	h[r6 + 44] = r7
 1e13576:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x764 : 1e135ec >
 1e13578:    5b 47             	[r3 + 84] = r3
 1e1357a:    41 54             	r1 = h[r2 + 8] (u)
 1e1357c:    54 5f             	r4 = h[r7 + 42] (u)
 1e1357e:    53 45             	r3 = [r2 + 84]
 1e13580:    52 56             	r2 = h[r3 + 10] (u)
 1e13582:    45 52             	r5 = h[r1 + 8] (u)
 1e13584:    5d 25             	if (r2 == 0) goto -326 <update_target_end+0x5B8 : 1e13440 >
 1e13586:    30 34             	if (r2 != 0) goto 96 <update_target_end+0x760 : 1e135e8 >
 1e13588:    78 2d             	if (r6 == 0) goto -272 <update_target_end+0x5F2 : 1e1347a >
 1e1358a:    3e 3d             	if (r6 != 0) goto -388 <update_target_end+0x580 : 1e13408 >
 1e1358c:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x580 : 1e13408 >
 1e1358e:    50 61             	r0 = b[r0 + 21] (u)
 1e13590:    69 72             	r9 = 38
 1e13592:    5f 70             	r15 = 5
 1e13594:    72 6f             	r2 = b[r7 + 23] (u)
 1e13596:    63 65             	r3 = b[r2 + 22] (u)
 1e13598:    73 73             	r3 = 55
 1e1359a:    2c 73             	r12 = 50
 1e1359c:    75 62             	r5 = b[r1 + 7] (u)
 1e1359e:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x792 : 1e1361a >
 1e135a0:    25 30             	if (r0 != 0) goto 74 <update_target_end+0x764 : 1e135ec >
 1e135a2:    32 78             	r2 = 131
 1e135a4:    0a 0d             	r10 <<= r4
 1e135a6:    0a 00             	ssync
 1e135a8:    5b 49             	[r4 + 84] = r3
 1e135aa:    6e 66             	b[r3 + 6] = r6
 1e135ac:    6f 5d             	h[r6 + 44] = r7
 1e135ae:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x79C : 1e13624 >
 1e135b0:    5b 47             	[r3 + 84] = r3
 1e135b2:    41 54             	r1 = h[r2 + 8] (u)
 1e135b4:    54 5f             	r4 = h[r7 + 42] (u)
 1e135b6:    53 45             	r3 = [r2 + 84]
 1e135b8:    52 56             	r2 = h[r3 + 10] (u)
 1e135ba:    45 52             	r5 = h[r1 + 8] (u)
 1e135bc:    5d 41             	[r0 + 84] = r5
 1e135be:    54 54             	r4 = h[r2 + 10] (u)
 1e135c0:    5f 49             	[r4 + 84] = r7
 1e135c2:    4e 44             	[r2 + 16] = r6
 1e135c4:    49 43             	[r1 + 80] = r1
 1e135c6:    41 54             	r1 = h[r2 + 8] (u)
 1e135c8:    49 4f             	[r7 + 80] = r1
 1e135ca:    4e 5f             	h[r7 + 40] = r6
 1e135cc:    43 4f             	r3 = [r7 + 80]
 1e135ce:    4d 50             	h[r0 + 8] = r5
 1e135d0:    4c 45             	[r2 + 80] = r4
 1e135d2:    54 45             	r4 = [r2 + 84]
 1e135d4:    3a 63             	b[r1 + 19] = r2
 1e135d6:    6f 6e             	b[r7 + 6] = r7
 1e135d8:    5f 68             	b[r4 + 5] = r7
 1e135da:    61 6e             	r1 = b[r7 + 6] (u)
 1e135dc:    64 6c             	r4 = b[r6 + 6] (u)
 1e135de:    65 3d             	if (r6 != 0) goto -310 <update_target_end+0x622 : 1e134aa >
 1e135e0:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x59A : 1e13422 >
 1e135e2:    30 34             	if (r2 != 0) goto 96 <update_target_end+0x7BC : 1e13644 >
 1e135e4:    78 2c             	if (r6 == 0) goto 240 <update_target_end+0x84E : 1e136d6 >
 1e135e6:    61 74             	r1 = 70
 1e135e8:    74 5f             	r4 = h[r7 + 46] (u)
 1e135ea:    68 61             	b[r0 + 22] = r0
 1e135ec:    6e 64             	b[r2 + 6] = r6
 1e135ee:    6c 65             	b[r2 + 22] = r4
 1e135f0:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x7E4 : 1e1366c >
 1e135f2:    25 30             	if (r0 != 0) goto 74 <update_target_end+0x7B6 : 1e1363e >
 1e135f4:    34 78             	r4 = 131
 1e135f6:    0a 0d             	r10 <<= r4
 1e135f8:    0a 00             	ssync
 1e135fa:    5b 49             	[r4 + 84] = r3
 1e135fc:    6e 66             	b[r3 + 6] = r6
 1e135fe:    6f 5d             	h[r6 + 44] = r7
 1e13600:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x7EE : 1e13676 >
 1e13602:    5b 47             	[r3 + 84] = r3
 1e13604:    41 54             	r1 = h[r2 + 8] (u)
 1e13606:    54 5f             	r4 = h[r7 + 42] (u)
 1e13608:    53 45             	r3 = [r2 + 84]
 1e1360a:    52 56             	r2 = h[r3 + 10] (u)
 1e1360c:    45 52             	r5 = h[r1 + 8] (u)
 1e1360e:    5d 44             	[r2 + 20] = r5
 1e13610:    49 52             	h[r1 + 8] = r1
 1e13612:    45 43             	r5 = [r1 + 80]
 1e13614:    54 5f             	r4 = h[r7 + 42] (u)
 1e13616:    41 44             	r1 = [r2 + 16]
 1e13618:    56 20             	if (r0 == 0) goto 172 <update_target_end+0x83E : 1e136c6 >
 1e1361a:    54 4f             	r4 = [r7 + 84]
 1e1361c:    21 0a             	sp += 64
 1e1361e:    0d 0a             	sp += 24
 1e13620:    00 5b             	r0 = h[r5 + 32] (u)
 1e13622:    49 6e             	b[r7 + 4] = r1
 1e13624:    66 6f             	r6 = b[r7 + 22] (u)
 1e13626:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x85A : 1e136e2 >
 1e13628:    20 5b             	r0 = h[r5 + 36] (u)
 1e1362a:    47 41             	r7 = [r0 + 80]
 1e1362c:    54 54             	r4 = h[r2 + 10] (u)
 1e1362e:    5f 53             	h[r1 + 42] = r7
 1e13630:    45 52             	r5 = h[r1 + 8] (u)
 1e13632:    56 45             	r6 = [r2 + 84]
 1e13634:    52 5d             	r2 = h[r6 + 42] (u)
 1e13636:    43 4f             	r3 = [r7 + 80]
 1e13638:    4e 4e             	[r7 + 16] = r6
 1e1363a:    45 43             	r5 = [r1 + 80]
 1e1363c:    54 49             	r4 = [r4 + 84]
 1e1363e:    4f 4e             	[r7 + 16] = r7
 1e13640:    20 46             	r0 = [r3 + 8]
 1e13642:    41 49             	r1 = [r4 + 80]
 1e13644:    4c 21             	if (r0 == 0) goto -360 <update_target_end+0x656 : 1e134de >
 1e13646:    21 21             	if (r0 == 0) goto -446 <update_target_end+0x602 : 1e1348a >
 1e13648:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x602 : 1e1348a >
 1e1364a:    30 78             	r0 = 131
 1e1364c:    0a 0d             	r10 <<= r4
 1e1364e:    0a 00             	ssync
 1e13650:    5b 49             	[r4 + 84] = r3
 1e13652:    6e 66             	b[r3 + 6] = r6
 1e13654:    6f 5d             	h[r6 + 44] = r7
 1e13656:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x844 : 1e136cc >
 1e13658:    5b 47             	[r3 + 84] = r3
 1e1365a:    41 54             	r1 = h[r2 + 8] (u)
 1e1365c:    54 5f             	r4 = h[r7 + 42] (u)
 1e1365e:    53 45             	r3 = [r2 + 84]
 1e13660:    52 56             	r2 = h[r3 + 10] (u)
 1e13662:    45 52             	r5 = h[r1 + 8] (u)
 1e13664:    5d 48             	[r4 + 20] = r5
 1e13666:    43 49             	r3 = [r4 + 80]
 1e13668:    5f 53             	h[r1 + 42] = r7
 1e1366a:    55 42             	r5 = [r1 + 20]
 1e1366c:    45 56             	r5 = h[r3 + 8] (u)
 1e1366e:    45 4e             	r5 = [r7 + 16]
 1e13670:    54 5f             	r4 = h[r7 + 42] (u)
 1e13672:    4c 45             	[r2 + 80] = r4
 1e13674:    5f 43             	[r1 + 84] = r7
 1e13676:    4f 4e             	[r7 + 16] = r7
 1e13678:    4e 45             	[r2 + 80] = r6
 1e1367a:    43 54             	r3 = h[r2 + 8] (u)
 1e1367c:    49 4f             	[r7 + 80] = r1
 1e1367e:    4e 5f             	h[r7 + 40] = r6
 1e13680:    43 4f             	r3 = [r7 + 80]
 1e13682:    4d 50             	h[r0 + 8] = r5
 1e13684:    4c 45             	[r2 + 80] = r4
 1e13686:    54 45             	r4 = [r2 + 84]
 1e13688:    3a 63             	b[r1 + 19] = r2
 1e1368a:    6f 6e             	b[r7 + 6] = r7
 1e1368c:    6e 5f             	h[r7 + 44] = r6
 1e1368e:    68 61             	b[r0 + 22] = r0
 1e13690:    6e 64             	b[r2 + 6] = r6
 1e13692:    6c 65             	b[r2 + 22] = r4
 1e13694:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x888 : 1e13710 >
 1e13696:    25 30             	if (r0 != 0) goto 74 <update_target_end+0x85A : 1e136e2 >
 1e13698:    34 78             	r4 = 131
 1e1369a:    2c 72             	r12 = 34
 1e1369c:    73 73             	r3 = 55
 1e1369e:    69 3d             	if (r6 != 0) goto -302 <update_target_end+0x6EA : 1e13572 >
 1e136a0:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x65A : 1e134e2 >
 1e136a2:    64 0a             	sp += 200
 1e136a4:    0d 0a             	sp += 24
 1e136a6:    00 5b             	r0 = h[r5 + 32] (u)
 1e136a8:    49 6e             	b[r7 + 4] = r1
 1e136aa:    66 6f             	r6 = b[r7 + 22] (u)
 1e136ac:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x8E0 : 1e13768 >
 1e136ae:    20 5b             	r0 = h[r5 + 36] (u)
 1e136b0:    47 41             	r7 = [r0 + 80]
 1e136b2:    54 54             	r4 = h[r2 + 10] (u)
 1e136b4:    5f 53             	h[r1 + 42] = r7
 1e136b6:    45 52             	r5 = h[r1 + 8] (u)
 1e136b8:    56 45             	r6 = [r2 + 84]
 1e136ba:    52 5d             	r2 = h[r6 + 42] (u)
 1e136bc:    63 6f             	r3 = b[r7 + 22] (u)
 1e136be:    6e 6e             	b[r7 + 6] = r6
 1e136c0:    5f 69             	b[r4 + 21] = r7
 1e136c2:    6e 74             	r14 = 70
 1e136c4:    65 72             	r5 = 38
 1e136c6:    76 61             	r6 = b[r0 + 23] (u)
 1e136c8:    6c 20             	if (r0 == 0) goto 216 <update_target_end+0x91A : 1e137a2 >
 1e136ca:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x8BE : 1e13746 >
 1e136cc:    25 64             	r5 = b[r2 + 2] (u)
 1e136ce:    0a 0d             	r10 <<= r4
 1e136d0:    0a 00             	ssync
 1e136d2:    5b 49             	[r4 + 84] = r3
 1e136d4:    6e 66             	b[r3 + 6] = r6
 1e136d6:    6f 5d             	h[r6 + 44] = r7
 1e136d8:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x8C6 : 1e1374e >
 1e136da:    5b 47             	[r3 + 84] = r3
 1e136dc:    41 54             	r1 = h[r2 + 8] (u)
 1e136de:    54 5f             	r4 = h[r7 + 42] (u)
 1e136e0:    53 45             	r3 = [r2 + 84]
 1e136e2:    52 56             	r2 = h[r3 + 10] (u)
 1e136e4:    45 52             	r5 = h[r1 + 8] (u)
 1e136e6:    5d 63             	b[r1 + 21] = r5
 1e136e8:    6f 6e             	b[r7 + 6] = r7
 1e136ea:    6e 5f             	h[r7 + 44] = r6
 1e136ec:    6c 61             	b[r0 + 22] = r4
 1e136ee:    74 65             	r4 = b[r2 + 23] (u)
 1e136f0:    6e 63             	b[r1 + 22] = r6
 1e136f2:    79 20             	if (r0 == 0) goto 242 <update_target_end+0x95E : 1e137e6 >
 1e136f4:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x8E8 : 1e13770 >
 1e136f6:    25 64             	r5 = b[r2 + 2] (u)
 1e136f8:    0a 0d             	r10 <<= r4
 1e136fa:    0a 00             	ssync
 1e136fc:    5b 49             	[r4 + 84] = r3
 1e136fe:    6e 66             	b[r3 + 6] = r6
 1e13700:    6f 5d             	h[r6 + 44] = r7
 1e13702:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x8F0 : 1e13778 >
 1e13704:    5b 47             	[r3 + 84] = r3
 1e13706:    41 54             	r1 = h[r2 + 8] (u)
 1e13708:    54 5f             	r4 = h[r7 + 42] (u)
 1e1370a:    53 45             	r3 = [r2 + 84]
 1e1370c:    52 56             	r2 = h[r3 + 10] (u)
 1e1370e:    45 52             	r5 = h[r1 + 8] (u)
 1e13710:    5d 63             	b[r1 + 21] = r5
 1e13712:    6f 6e             	b[r7 + 6] = r7
 1e13714:    6e 5f             	h[r7 + 44] = r6
 1e13716:    74 69             	r4 = b[r4 + 23] (u)
 1e13718:    6d 65             	b[r2 + 22] = r5
 1e1371a:    6f 75             	r15 = 86
 1e1371c:    74 20             	if (r0 == 0) goto 232 <update_target_end+0x97E : 1e13806 >
 1e1371e:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x912 : 1e1379a >
 1e13720:    25 64             	r5 = b[r2 + 2] (u)
 1e13722:    0a 0d             	r10 <<= r4
 1e13724:    0a 00             	ssync
 1e13726:    5b 49             	[r4 + 84] = r3
 1e13728:    6e 66             	b[r3 + 6] = r6
 1e1372a:    6f 5d             	h[r6 + 44] = r7
 1e1372c:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x91A : 1e137a2 >
 1e1372e:    5b 47             	[r3 + 84] = r3
 1e13730:    41 54             	r1 = h[r2 + 8] (u)
 1e13732:    54 5f             	r4 = h[r7 + 42] (u)
 1e13734:    53 45             	r3 = [r2 + 84]
 1e13736:    52 56             	r2 = h[r3 + 10] (u)
 1e13738:    45 52             	r5 = h[r1 + 8] (u)
 1e1373a:    5d 63             	b[r1 + 21] = r5
 1e1373c:    6f 6e             	b[r7 + 6] = r7
 1e1373e:    6e 5f             	h[r7 + 44] = r6
 1e13740:    75 70             	r5 = 7
 1e13742:    64 61             	r4 = b[r0 + 22] (u)
 1e13744:    74 65             	r4 = b[r2 + 23] (u)
 1e13746:    5f 68             	b[r4 + 5] = r7
 1e13748:    61 6e             	r1 = b[r7 + 6] (u)
 1e1374a:    64 6c             	r4 = b[r6 + 6] (u)
 1e1374c:    65 20             	if (r0 == 0) goto 202 <update_target_end+0x990 : 1e13818 >
 1e1374e:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x908 : 1e13790 >
 1e13750:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x944 : 1e137cc >
 1e13752:    25 30             	if (r0 != 0) goto 74 <update_target_end+0x916 : 1e1379e >
 1e13754:    34 78             	r4 = 131
 1e13756:    0a 0d             	r10 <<= r4
 1e13758:    0a 00             	ssync
 1e1375a:    5b 49             	[r4 + 84] = r3
 1e1375c:    6e 66             	b[r3 + 6] = r6
 1e1375e:    6f 5d             	h[r6 + 44] = r7
 1e13760:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x94E : 1e137d6 >
 1e13762:    5b 47             	[r3 + 84] = r3
 1e13764:    41 54             	r1 = h[r2 + 8] (u)
 1e13766:    54 5f             	r4 = h[r7 + 42] (u)
 1e13768:    53 45             	r3 = [r2 + 84]
 1e1376a:    52 56             	r2 = h[r3 + 10] (u)
 1e1376c:    45 52             	r5 = h[r1 + 8] (u)
 1e1376e:    5d 63             	b[r1 + 21] = r5
 1e13770:    6f 6e             	b[r7 + 6] = r7
 1e13772:    6e 5f             	h[r7 + 44] = r6
 1e13774:    75 70             	r5 = 7
 1e13776:    64 61             	r4 = b[r0 + 22] (u)
 1e13778:    74 65             	r4 = b[r2 + 23] (u)
 1e1377a:    5f 69             	b[r4 + 21] = r7
 1e1377c:    6e 74             	r14 = 70
 1e1377e:    65 72             	r5 = 38
 1e13780:    76 61             	r6 = b[r0 + 23] (u)
 1e13782:    6c 20             	if (r0 == 0) goto 216 <update_target_end+0x9D4 : 1e1385c >
 1e13784:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x978 : 1e13800 >
 1e13786:    25 64             	r5 = b[r2 + 2] (u)
 1e13788:    0a 0d             	r10 <<= r4
 1e1378a:    0a 00             	ssync
 1e1378c:    5b 49             	[r4 + 84] = r3
 1e1378e:    6e 66             	b[r3 + 6] = r6
 1e13790:    6f 5d             	h[r6 + 44] = r7
 1e13792:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x980 : 1e13808 >
 1e13794:    5b 47             	[r3 + 84] = r3
 1e13796:    41 54             	r1 = h[r2 + 8] (u)
 1e13798:    54 5f             	r4 = h[r7 + 42] (u)
 1e1379a:    53 45             	r3 = [r2 + 84]
 1e1379c:    52 56             	r2 = h[r3 + 10] (u)
 1e1379e:    45 52             	r5 = h[r1 + 8] (u)
 1e137a0:    5d 63             	b[r1 + 21] = r5
 1e137a2:    6f 6e             	b[r7 + 6] = r7
 1e137a4:    6e 5f             	h[r7 + 44] = r6
 1e137a6:    75 70             	r5 = 7
 1e137a8:    64 61             	r4 = b[r0 + 22] (u)
 1e137aa:    74 65             	r4 = b[r2 + 23] (u)
 1e137ac:    5f 6c             	b[r6 + 5] = r7
 1e137ae:    61 74             	r1 = 70
 1e137b0:    65 6e             	r5 = b[r7 + 6] (u)
 1e137b2:    63 79             	r3 = 150
 1e137b4:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x96E : 1e137f6 >
 1e137b6:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x9AA : 1e13832 >
 1e137b8:    25 64             	r5 = b[r2 + 2] (u)
 1e137ba:    0a 0d             	r10 <<= r4
 1e137bc:    0a 00             	ssync
 1e137be:    5b 49             	[r4 + 84] = r3
 1e137c0:    6e 66             	b[r3 + 6] = r6
 1e137c2:    6f 5d             	h[r6 + 44] = r7
 1e137c4:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x9B2 : 1e1383a >
 1e137c6:    5b 47             	[r3 + 84] = r3
 1e137c8:    41 54             	r1 = h[r2 + 8] (u)
 1e137ca:    54 5f             	r4 = h[r7 + 42] (u)
 1e137cc:    53 45             	r3 = [r2 + 84]
 1e137ce:    52 56             	r2 = h[r3 + 10] (u)
 1e137d0:    45 52             	r5 = h[r1 + 8] (u)
 1e137d2:    5d 63             	b[r1 + 21] = r5
 1e137d4:    6f 6e             	b[r7 + 6] = r7
 1e137d6:    6e 5f             	h[r7 + 44] = r6
 1e137d8:    75 70             	r5 = 7
 1e137da:    64 61             	r4 = b[r0 + 22] (u)
 1e137dc:    74 65             	r4 = b[r2 + 23] (u)
 1e137de:    5f 74             	r15 = 69
 1e137e0:    69 6d             	b[r6 + 22] = r1
 1e137e2:    65 6f             	r5 = b[r7 + 22] (u)
 1e137e4:    75 74             	r5 = 71
 1e137e6:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x9A0 : 1e13828 >
 1e137e8:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x9DC : 1e13864 >
 1e137ea:    25 64             	r5 = b[r2 + 2] (u)
 1e137ec:    0a 0d             	r10 <<= r4
 1e137ee:    0a 00             	ssync
 1e137f0:    5b 49             	[r4 + 84] = r3
 1e137f2:    6e 66             	b[r3 + 6] = r6
 1e137f4:    6f 5d             	h[r6 + 44] = r7
 1e137f6:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x9E4 : 1e1386c >
 1e137f8:    5b 47             	[r3 + 84] = r3
 1e137fa:    41 54             	r1 = h[r2 + 8] (u)
 1e137fc:    54 5f             	r4 = h[r7 + 42] (u)
 1e137fe:    53 45             	r3 = [r2 + 84]
 1e13800:    52 56             	r2 = h[r3 + 10] (u)
 1e13802:    45 52             	r5 = h[r1 + 8] (u)
 1e13804:    5d 63             	b[r1 + 21] = r5
 1e13806:    6f 6e             	b[r7 + 6] = r7
 1e13808:    6e 5f             	h[r7 + 44] = r6
 1e1380a:    68 61             	b[r0 + 22] = r0
 1e1380c:    6e 64             	b[r2 + 6] = r6
 1e1380e:    6c 65             	b[r2 + 22] = r4
 1e13810:    20 3d             	if (r6 != 0) goto -448 <update_target_end+0x7CA : 1e13652 >
 1e13812:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x7CC : 1e13654 >
 1e13814:    30 34             	if (r2 != 0) goto 96 <update_target_end+0x9EE : 1e13876 >
 1e13816:    78 0a             	sp += 240
 1e13818:    0d 0a             	sp += 24
 1e1381a:    00 5b             	r0 = h[r5 + 32] (u)
 1e1381c:    49 6e             	b[r7 + 4] = r1
 1e1381e:    66 6f             	r6 = b[r7 + 22] (u)
 1e13820:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0xA54 : 1e138dc >
 1e13822:    20 5b             	r0 = h[r5 + 36] (u)
 1e13824:    47 41             	r7 = [r0 + 80]
 1e13826:    54 54             	r4 = h[r2 + 10] (u)
 1e13828:    5f 53             	h[r1 + 42] = r7
 1e1382a:    45 52             	r5 = h[r1 + 8] (u)
 1e1382c:    56 45             	r6 = [r2 + 84]
 1e1382e:    52 5d             	r2 = h[r6 + 42] (u)
 1e13830:    41 50             	r1 = h[r0 + 8] (u)
 1e13832:    50 20             	if (r0 == 0) goto 160 <update_target_end+0xA4C : 1e138d4 >
 1e13834:    48 43             	[r1 + 80] = r0
 1e13836:    49 5f             	h[r7 + 40] = r1
 1e13838:    53 55             	r3 = h[r2 + 42] (u)
 1e1383a:    42 45             	r2 = [r2 + 80]
 1e1383c:    56 45             	r6 = [r2 + 84]
 1e1383e:    4e 54             	h[r2 + 8] = r6
 1e13840:    5f 4c             	[r6 + 20] = r7
 1e13842:    45 5f             	r5 = h[r7 + 40] (u)
 1e13844:    44 41             	r4 = [r0 + 80]
 1e13846:    54 41             	r4 = [r0 + 84]
 1e13848:    5f 4c             	[r6 + 20] = r7
 1e1384a:    45 4e             	r5 = [r7 + 16]
 1e1384c:    47 54             	r7 = h[r2 + 8] (u)
 1e1384e:    48 5f             	h[r7 + 40] = r0
 1e13850:    43 48             	r3 = [r4 + 16]
 1e13852:    41 4e             	r1 = [r7 + 16]
 1e13854:    47 45             	r7 = [r2 + 80]
 1e13856:    0a 0d             	r10 <<= r4
 1e13858:    0a 00             	ssync
 1e1385a:    46 61             	r6 = b[r0 + 20] (u)
 1e1385c:    69 6c             	b[r6 + 6] = r1
 1e1385e:    00 53             	r0 = h[r1 + 32] (u)
 1e13860:    75 63             	r5 = b[r1 + 23] (u)
 1e13862:    63 00             	cli r3
 1e13864:    5b 49             	[r4 + 84] = r3
 1e13866:    6e 66             	b[r3 + 6] = r6
 1e13868:    6f 5d             	h[r6 + 44] = r7
 1e1386a:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0xA58 : 1e138e0 >
 1e1386c:    5b 47             	[r3 + 84] = r3
 1e1386e:    41 54             	r1 = h[r2 + 8] (u)
 1e13870:    54 5f             	r4 = h[r7 + 42] (u)
 1e13872:    53 45             	r3 = [r2 + 84]
 1e13874:    52 56             	r2 = h[r3 + 10] (u)
 1e13876:    45 52             	r5 = h[r1 + 8] (u)
 1e13878:    5d 41             	[r0 + 84] = r5
 1e1387a:    50 50             	r0 = h[r0 + 10] (u)
 1e1387c:    20 48             	r0 = [r4 + 8]
 1e1387e:    43 49             	r3 = [r4 + 80]
 1e13880:    5f 53             	h[r1 + 42] = r7
 1e13882:    55 42             	r5 = [r1 + 20]
 1e13884:    45 56             	r5 = h[r3 + 8] (u)
 1e13886:    45 4e             	r5 = [r7 + 16]
 1e13888:    54 5f             	r4 = h[r7 + 42] (u)
 1e1388a:    4c 45             	[r2 + 80] = r4
 1e1388c:    5f 50             	h[r0 + 10] = r7
 1e1388e:    48 59             	h[r4 + 40] = r0
 1e13890:    5f 55             	h[r2 + 42] = r7
 1e13892:    50 44             	r0 = [r2 + 20]
 1e13894:    41 54             	r1 = h[r2 + 8] (u)
 1e13896:    45 20             	if (r0 == 0) goto 138 <update_target_end+0xA9A : 1e13922 >
 1e13898:    25 73             	r5 = 50
 1e1389a:    0a 0d             	r10 <<= r4
 1e1389c:    0a 00             	ssync
 1e1389e:    5b 49             	[r4 + 84] = r3
 1e138a0:    6e 66             	b[r3 + 6] = r6
 1e138a2:    6f 5d             	h[r6 + 44] = r7
 1e138a4:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0xA92 : 1e1391a >
 1e138a6:    5b 47             	[r3 + 84] = r3
 1e138a8:    41 54             	r1 = h[r2 + 8] (u)
 1e138aa:    54 5f             	r4 = h[r7 + 42] (u)
 1e138ac:    53 45             	r3 = [r2 + 84]
 1e138ae:    52 56             	r2 = h[r3 + 10] (u)
 1e138b0:    45 52             	r5 = h[r1 + 8] (u)
 1e138b2:    5d 54             	h[r2 + 10] = r5
 1e138b4:    78 20             	if (r0 == 0) goto 240 <update_target_end+0xB1E : 1e139a6 >
 1e138b6:    50 48             	r0 = [r4 + 20]
 1e138b8:    59 3a             	if (r5 != 0) goto 178 <update_target_end+0xAE4 : 1e1396c >
 1e138ba:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x874 : 1e136fc >
 1e138bc:    73 0a             	sp += 228
 1e138be:    0d 0a             	sp += 24
 1e138c0:    00 5b             	r0 = h[r5 + 32] (u)
 1e138c2:    49 6e             	b[r7 + 4] = r1
 1e138c4:    66 6f             	r6 = b[r7 + 22] (u)
 1e138c6:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0xAFA : 1e13982 >
 1e138c8:    20 5b             	r0 = h[r5 + 36] (u)
 1e138ca:    47 41             	r7 = [r0 + 80]
 1e138cc:    54 54             	r4 = h[r2 + 10] (u)
 1e138ce:    5f 53             	h[r1 + 42] = r7
 1e138d0:    45 52             	r5 = h[r1 + 8] (u)
 1e138d2:    56 45             	r6 = [r2 + 84]
 1e138d4:    52 5d             	r2 = h[r6 + 42] (u)
 1e138d6:    52 78             	r2 = 133
 1e138d8:    20 50             	r0 = h[r0 + 4] (u)
 1e138da:    48 59             	h[r4 + 40] = r0
 1e138dc:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0xACA : 1e13952 >
 1e138de:    25 73             	r5 = 50
 1e138e0:    0a 0d             	r10 <<= r4
 1e138e2:    0a 00             	ssync
 1e138e4:    5b 49             	[r4 + 84] = r3
 1e138e6:    6e 66             	b[r3 + 6] = r6
 1e138e8:    6f 5d             	h[r6 + 44] = r7
 1e138ea:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0xAD8 : 1e13960 >
 1e138ec:    5b 47             	[r3 + 84] = r3
 1e138ee:    41 54             	r1 = h[r2 + 8] (u)
 1e138f0:    54 5f             	r4 = h[r7 + 42] (u)
 1e138f2:    53 45             	r3 = [r2 + 84]
 1e138f4:    52 56             	r2 = h[r3 + 10] (u)
 1e138f6:    45 52             	r5 = h[r1 + 8] (u)
 1e138f8:    5d 48             	[r4 + 20] = r5
 1e138fa:    43 49             	r3 = [r4 + 80]
 1e138fc:    5f 45             	[r2 + 84] = r7
 1e138fe:    56 45             	r6 = [r2 + 84]
 1e13900:    4e 54             	h[r2 + 8] = r6
 1e13902:    5f 44             	[r2 + 20] = r7
 1e13904:    49 53             	h[r1 + 40] = r1
 1e13906:    43 4f             	r3 = [r7 + 80]
 1e13908:    4e 4e             	[r7 + 16] = r6
 1e1390a:    45 43             	r5 = [r1 + 80]
 1e1390c:    54 49             	r4 = [r4 + 84]
 1e1390e:    4f 4e             	[r7 + 16] = r7
 1e13910:    5f 43             	[r1 + 84] = r7
 1e13912:    4f 4d             	[r6 + 80] = r7
 1e13914:    50 4c             	r0 = [r6 + 20]
 1e13916:    45 54             	r5 = h[r2 + 8] (u)
 1e13918:    45 3a             	if (r5 != 0) goto 138 <update_target_end+0xB1C : 1e139a4 >
 1e1391a:    63 6f             	r3 = b[r7 + 22] (u)
 1e1391c:    6e 6e             	b[r7 + 6] = r6
 1e1391e:    5f 68             	b[r4 + 5] = r7
 1e13920:    61 6e             	r1 = b[r7 + 6] (u)
 1e13922:    64 6c             	r4 = b[r6 + 6] (u)
 1e13924:    65 3d             	if (r6 != 0) goto -310 <update_target_end+0x968 : 1e137f0 >
 1e13926:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x8E0 : 1e13768 >
 1e13928:    30 34             	if (r2 != 0) goto 96 <update_target_end+0xB02 : 1e1398a >
 1e1392a:    78 2c             	if (r6 == 0) goto 240 <update_target_end+0xB94 : 1e13a1c >
 1e1392c:    20 72             	r0 = 34
 1e1392e:    65 61             	r5 = b[r0 + 22] (u)
 1e13930:    73 6f             	r3 = b[r7 + 23] (u)
 1e13932:    6e 3d             	if (r6 != 0) goto -292 <update_target_end+0x988 : 1e13810 >
 1e13934:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x8EE : 1e13776 >
 1e13936:    30 32             	if (r1 != 0) goto 96 <update_target_end+0xB10 : 1e13998 >
 1e13938:    78 0a             	sp += 240
 1e1393a:    0d 0a             	sp += 24
 1e1393c:    00 5b             	r0 = h[r5 + 32] (u)
 1e1393e:    49 6e             	b[r7 + 4] = r1
 1e13940:    66 6f             	r6 = b[r7 + 22] (u)
 1e13942:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0xB76 : 1e139fe >
 1e13944:    20 5b             	r0 = h[r5 + 36] (u)
 1e13946:    47 41             	r7 = [r0 + 80]
 1e13948:    54 54             	r4 = h[r2 + 10] (u)
 1e1394a:    5f 53             	h[r1 + 42] = r7
 1e1394c:    45 52             	r5 = h[r1 + 8] (u)
 1e1394e:    56 45             	r6 = [r2 + 84]
 1e13950:    52 5d             	r2 = h[r6 + 42] (u)
 1e13952:    68 61             	b[r0 + 22] = r0
 1e13954:    6e 64             	b[r2 + 6] = r6
 1e13956:    6c 65             	b[r2 + 22] = r4
 1e13958:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0xB4C : 1e139d4 >
 1e1395a:    25 30             	if (r0 != 0) goto 74 <update_target_end+0xB1E : 1e139a6 >
 1e1395c:    32 78             	r2 = 131
 1e1395e:    2c 20             	if (r0 == 0) goto 88 <update_target_end+0xB30 : 1e139b8 >
 1e13960:    41 54             	r1 = h[r2 + 8] (u)
 1e13962:    54 20             	if (r0 == 0) goto 168 <update_target_end+0xB84 : 1e13a0c >
 1e13964:    4d 54             	h[r2 + 8] = r5
 1e13966:    55 20             	if (r0 == 0) goto 170 <update_target_end+0xB8A : 1e13a12 >
 1e13968:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0xB5C : 1e139e4 >
 1e1396a:    25 75             	r5 = 82
 1e1396c:    0a 0d             	r10 <<= r4
 1e1396e:    0a 00             	ssync
 1e13970:    5b 49             	[r4 + 84] = r3
 1e13972:    6e 66             	b[r3 + 6] = r6
 1e13974:    6f 5d             	h[r6 + 44] = r7
 1e13976:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0xB64 : 1e139ec >
 1e13978:    5b 47             	[r3 + 84] = r3
 1e1397a:    41 54             	r1 = h[r2 + 8] (u)
 1e1397c:    54 5f             	r4 = h[r7 + 42] (u)
 1e1397e:    53 45             	r3 = [r2 + 84]
 1e13980:    52 56             	r2 = h[r3 + 10] (u)
 1e13982:    45 52             	r5 = h[r1 + 8] (u)
 1e13984:    5d 2d             	if (r6 == 0) goto -326 <update_target_end+0x9B8 : 1e13840 >
 1e13986:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x95A : 1e137e2 >
 1e13988:    48 43             	[r1 + 80] = r0
 1e1398a:    49 5f             	h[r7 + 40] = r1
 1e1398c:    45 56             	r5 = h[r3 + 8] (u)
 1e1398e:    45 4e             	r5 = [r7 + 16]
 1e13990:    54 5f             	r4 = h[r7 + 42] (u)
 1e13992:    56 45             	r6 = [r2 + 84]
 1e13994:    4e 44             	[r2 + 16] = r6
 1e13996:    4f 52             	h[r1 + 8] = r7
 1e13998:    5f 52             	h[r1 + 10] = r7
 1e1399a:    45 4d             	r5 = [r6 + 80]
 1e1399c:    4f 54             	h[r2 + 8] = r7
 1e1399e:    45 5f             	r5 = h[r7 + 40] (u)
 1e139a0:    54 45             	r4 = [r2 + 84]
 1e139a2:    53 54             	r3 = h[r2 + 10] (u)
 1e139a4:    0a 0d             	r10 <<= r4
 1e139a6:    0a 00             	ssync
 1e139a8:    5b 49             	[r4 + 84] = r3
 1e139aa:    6e 66             	b[r3 + 6] = r6
 1e139ac:    6f 5d             	h[r6 + 44] = r7
 1e139ae:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0xB9C : 1e13a24 >
 1e139b0:    5b 47             	[r3 + 84] = r3
 1e139b2:    41 54             	r1 = h[r2 + 8] (u)
 1e139b4:    54 5f             	r4 = h[r7 + 42] (u)
 1e139b6:    53 45             	r3 = [r2 + 84]
 1e139b8:    52 56             	r2 = h[r3 + 10] (u)
 1e139ba:    45 52             	r5 = h[r1 + 8] (u)
 1e139bc:    5d 2d             	if (r6 == 0) goto -326 <update_target_end+0x9F0 : 1e13878 >
 1e139be:    75 70             	r5 = 7
 1e139c0:    64 61             	r4 = b[r0 + 22] (u)
 1e139c2:    74 65             	r4 = b[r2 + 23] (u)
 1e139c4:    5f 72             	r15 = 37
 1e139c6:    73 70             	r3 = 7
 1e139c8:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x9B6 : 1e1383e >
 1e139ca:    30 34             	if (r2 != 0) goto 96 <update_target_end+0xBA4 : 1e13a2c >
 1e139cc:    78 2c             	if (r6 == 0) goto 240 <update_target_end+0xC36 : 1e13abe >
 1e139ce:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x988 : 1e13810 >
 1e139d0:    30 32             	if (r1 != 0) goto 96 <update_target_end+0xBAA : 1e13a32 >
 1e139d2:    78 0a             	sp += 240
 1e139d4:    0d 0a             	sp += 24
 1e139d6:    00 5b             	r0 = h[r5 + 32] (u)
 1e139d8:    49 6e             	b[r7 + 4] = r1
 1e139da:    66 6f             	r6 = b[r7 + 22] (u)
 1e139dc:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0xC10 : 1e13a98 >
 1e139de:    20 5b             	r0 = h[r5 + 36] (u)
 1e139e0:    47 41             	r7 = [r0 + 80]
 1e139e2:    54 54             	r4 = h[r2 + 10] (u)
 1e139e4:    5f 53             	h[r1 + 42] = r7
 1e139e6:    45 52             	r5 = h[r1 + 8] (u)
 1e139e8:    56 45             	r6 = [r2 + 84]
 1e139ea:    52 5d             	r2 = h[r6 + 42] (u)
 1e139ec:    72 65             	r2 = b[r2 + 23] (u)
 1e139ee:    6d 6f             	b[r7 + 22] = r5
 1e139f0:    74 65             	r4 = b[r2 + 23] (u)
 1e139f2:    72 20             	if (r0 == 0) goto 228 <update_target_end+0xC50 : 1e13ad8 >
 1e139f4:    72 65             	r2 = b[r2 + 23] (u)
 1e139f6:    6a 65             	b[r2 + 22] = r2
 1e139f8:    63 74             	r3 = 70
 1e139fa:    0a 0d             	r10 <<= r4
 1e139fc:    0a 00             	ssync
 1e139fe:    5b 49             	[r4 + 84] = r3
 1e13a00:    6e 66             	b[r3 + 6] = r6
 1e13a02:    6f 5d             	h[r6 + 44] = r7
 1e13a04:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0xBF2 : 1e13a7a >
 1e13a06:    5b 47             	[r3 + 84] = r3
 1e13a08:    41 54             	r1 = h[r2 + 8] (u)
 1e13a0a:    54 5f             	r4 = h[r7 + 42] (u)
 1e13a0c:    53 45             	r3 = [r2 + 84]
 1e13a0e:    52 56             	r2 = h[r3 + 10] (u)
 1e13a10:    45 52             	r5 = h[r1 + 8] (u)
 1e13a12:    5d 72             	r13 = 37
 1e13a14:    65 6d             	r5 = b[r6 + 22] (u)
 1e13a16:    6f 74             	r15 = 70
 1e13a18:    65 72             	r5 = 38
 1e13a1a:    20 61             	r0 = b[r0 + 18] (u)
 1e13a1c:    63 63             	r3 = b[r1 + 22] (u)
 1e13a1e:    65 70             	r5 = 6
 1e13a20:    74 20             	if (r0 == 0) goto 232 <update_target_end+0xC82 : 1e13b0a >
 1e13a22:    0a 0d             	r10 <<= r4
 1e13a24:    0a 00             	ssync
 1e13a26:    5b 49             	[r4 + 84] = r3
 1e13a28:    6e 66             	b[r3 + 6] = r6
 1e13a2a:    6f 5d             	h[r6 + 44] = r7
 1e13a2c:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0xC1A : 1e13aa2 >
 1e13a2e:    5b 47             	[r3 + 84] = r3
 1e13a30:    41 54             	r1 = h[r2 + 8] (u)
 1e13a32:    54 5f             	r4 = h[r7 + 42] (u)
 1e13a34:    53 45             	r3 = [r2 + 84]
 1e13a36:    52 56             	r2 = h[r3 + 10] (u)
 1e13a38:    45 52             	r5 = h[r1 + 8] (u)
 1e13a3a:    5d 48             	[r4 + 20] = r5
 1e13a3c:    43 49             	r3 = [r4 + 80]
 1e13a3e:    5f 45             	[r2 + 84] = r7
 1e13a40:    56 45             	r6 = [r2 + 84]
 1e13a42:    4e 54             	h[r2 + 8] = r6
 1e13a44:    5f 45             	[r2 + 84] = r7
 1e13a46:    4e 43             	[r1 + 80] = r6
 1e13a48:    52 59             	r2 = h[r4 + 42] (u)
 1e13a4a:    50 54             	r0 = h[r2 + 10] (u)
 1e13a4c:    49 4f             	[r7 + 80] = r1
 1e13a4e:    4e 5f             	h[r7 + 40] = r6
 1e13a50:    43 48             	r3 = [r4 + 16]
 1e13a52:    41 4e             	r1 = [r7 + 16]
 1e13a54:    47 45             	r7 = [r2 + 80]
 1e13a56:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0xC4A : 1e13ad2 >
 1e13a58:    25 64             	r5 = b[r2 + 2] (u)
 1e13a5a:    0a 0d             	r10 <<= r4
 1e13a5c:    0a 00             	ssync
 1e13a5e:    5b 49             	[r4 + 84] = r3
 1e13a60:    6e 66             	b[r3 + 6] = r6
 1e13a62:    6f 5d             	h[r6 + 44] = r7
 1e13a64:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0xC52 : 1e13ada >
 1e13a66:    5b 47             	[r3 + 84] = r3
 1e13a68:    41 54             	r1 = h[r2 + 8] (u)
 1e13a6a:    54 5f             	r4 = h[r7 + 42] (u)
 1e13a6c:    53 45             	r3 = [r2 + 84]
 1e13a6e:    52 56             	r2 = h[r3 + 10] (u)
 1e13a70:    45 52             	r5 = h[r1 + 8] (u)
 1e13a72:    5d 63             	b[r1 + 21] = r5
 1e13a74:    6f 6e             	b[r7 + 6] = r7
 1e13a76:    6e 65             	b[r2 + 22] = r6
 1e13a78:    63 74             	r3 = 70
 1e13a7a:    69 6f             	b[r7 + 22] = r1
 1e13a7c:    6e 5f             	h[r7 + 44] = r6
 1e13a7e:    75 70             	r5 = 7
 1e13a80:    64 61             	r4 = b[r0 + 22] (u)
 1e13a82:    74 65             	r4 = b[r2 + 23] (u)
 1e13a84:    5f 72             	r15 = 37
 1e13a86:    65 71             	r5 = 22
 1e13a88:    75 65             	r5 = b[r2 + 23] (u)
 1e13a8a:    73 74             	r3 = 71
 1e13a8c:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0xC7A : 1e13b02 >
 1e13a8e:    25 30             	if (r0 != 0) goto 74 <update_target_end+0xC52 : 1e13ada >
 1e13a90:    34 78             	r4 = 131
 1e13a92:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0xC80 : 1e13b08 >
 1e13a94:    2d 25             	if (r2 == 0) goto -422 <update_target_end+0xA68 : 1e138f0 >
 1e13a96:    64 2d             	if (r6 == 0) goto -312 <update_target_end+0xAD8 : 1e13960 >
 1e13a98:    25 64             	r5 = b[r2 + 2] (u)
 1e13a9a:    2d 25             	if (r2 == 0) goto -422 <update_target_end+0xA6E : 1e138f6 >
 1e13a9c:    64 2d             	if (r6 == 0) goto -312 <update_target_end+0xADE : 1e13966 >
 1e13a9e:    25 64             	r5 = b[r2 + 2] (u)
 1e13aa0:    2d 0a             	sp += 88
 1e13aa2:    0d 0a             	sp += 24
 1e13aa4:    00 4e             	r0 = [r7 + 0]
 1e13aa6:    6f 6e             	b[r7 + 6] = r7
 1e13aa8:    65 00             	cli r5
 1e13aaa:    31 4d             	r1 = [r6 + 76]
 1e13aac:    00 32             	if (r1 != 0) goto 0 <update_target_end+0xC26 : 1e13aae >
 1e13aae:    4d 00             	testset b[r13]
 1e13ab0:    43 6f             	r3 = b[r7 + 20] (u)
 1e13ab2:    64 65             	r4 = b[r2 + 22] (u)
 1e13ab4:    64 00             	cli r4
 1e13ab6:    5b 49             	[r4 + 84] = r3
 1e13ab8:    6e 66             	b[r3 + 6] = r6
 1e13aba:    6f 5d             	h[r6 + 44] = r7
 1e13abc:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0xCAA : 1e13b32 >
 1e13abe:    5b 47             	[r3 + 84] = r3
 1e13ac0:    41 54             	r1 = h[r2 + 8] (u)
 1e13ac2:    54 5f             	r4 = h[r7 + 42] (u)
 1e13ac4:    53 45             	r3 = [r2 + 84]
 1e13ac6:    52 56             	r2 = h[r3 + 10] (u)
 1e13ac8:    45 52             	r5 = h[r1 + 8] (u)
 1e13aca:    5d 25             	if (r2 == 0) goto -326 <update_target_end+0xAFE : 1e13986 >
 1e13acc:    73 0a             	sp += 228
 1e13ace:    0d 0a             	sp += 24
 1e13ad0:    00 5f             	r0 = h[r7 + 32] (u)
 1e13ad2:    5f 67             	b[r3 + 21] = r7
 1e13ad4:    61 74             	r1 = 70
 1e13ad6:    74 5f             	r4 = h[r7 + 46] (u)
 1e13ad8:    73 65             	r3 = b[r2 + 23] (u)
 1e13ada:    72 76             	r2 = 103
 1e13adc:    65 72             	r5 = 38
 1e13ade:    5f 6a             	b[r5 + 5] = r7
 1e13ae0:    75 73             	r5 = 55
 1e13ae2:    74 5f             	r4 = h[r7 + 46] (u)
 1e13ae4:    6e 65             	b[r2 + 22] = r6
 1e13ae6:    77 5f             	r7 = h[r7 + 46] (u)
 1e13ae8:    64 65             	r4 = b[r2 + 22] (u)
 1e13aea:    76 5f             	r6 = h[r7 + 46] (u)
 1e13aec:    61 64             	r1 = b[r2 + 6] (u)
 1e13aee:    76 00             	sti r6
 1e13af0:    5b 49             	[r4 + 84] = r3
 1e13af2:    6e 66             	b[r3 + 6] = r6
 1e13af4:    6f 5d             	h[r6 + 44] = r7
 1e13af6:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0xCE4 : 1e13b6c >
 1e13af8:    5b 47             	[r3 + 84] = r3
 1e13afa:    41 54             	r1 = h[r2 + 8] (u)
 1e13afc:    54 5f             	r4 = h[r7 + 42] (u)
 1e13afe:    53 45             	r3 = [r2 + 84]
 1e13b00:    52 56             	r2 = h[r3 + 10] (u)
 1e13b02:    45 52             	r5 = h[r1 + 8] (u)
 1e13b04:    5d 64             	b[r2 + 5] = r5
 1e13b06:    65 76             	r5 = 102
 1e13b08:    5f 64             	b[r2 + 5] = r7
 1e13b0a:    6f 69             	b[r4 + 22] = r7
 1e13b0c:    6e 67             	b[r3 + 22] = r6
 1e13b0e:    0a 0d             	r10 <<= r4
 1e13b10:    0a 00             	ssync
 1e13b12:    5b 49             	[r4 + 84] = r3
 1e13b14:    6e 66             	b[r3 + 6] = r6
 1e13b16:    6f 5d             	h[r6 + 44] = r7
 1e13b18:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0xD06 : 1e13b8e >
 1e13b1a:    5b 47             	[r3 + 84] = r3
 1e13b1c:    41 54             	r1 = h[r2 + 8] (u)
 1e13b1e:    54 5f             	r4 = h[r7 + 42] (u)
 1e13b20:    53 45             	r3 = [r2 + 84]
 1e13b22:    52 56             	r2 = h[r3 + 10] (u)
 1e13b24:    45 52             	r5 = h[r1 + 8] (u)
 1e13b26:    5d 6e             	b[r7 + 5] = r5
 1e13b28:    6f 20             	if (r0 == 0) goto 222 <update_target_end+0xD80 : 1e13c08 >
 1e13b2a:    69 64             	b[r2 + 6] = r1
 1e13b2c:    6c 65             	b[r2 + 22] = r4
 1e13b2e:    20 64             	r0 = b[r2 + 2] (u)
 1e13b30:    65 76             	r5 = 102
 1e13b32:    20 74             	r0 = 66
 1e13b34:    6f 20             	if (r0 == 0) goto 222 <update_target_end+0xD8C : 1e13c14 >
 1e13b36:    64 6f             	r4 = b[r7 + 22] (u)
 1e13b38:    21 21             	if (r0 == 0) goto -446 <update_target_end+0xAF4 : 1e1397c >
 1e13b3a:    21 0a             	sp += 64
 1e13b3c:    0d 0a             	sp += 24
 1e13b3e:    00 5b             	r0 = h[r5 + 32] (u)
 1e13b40:    49 6e             	b[r7 + 4] = r1
 1e13b42:    66 6f             	r6 = b[r7 + 22] (u)
 1e13b44:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0xD78 : 1e13c00 >
 1e13b46:    20 5b             	r0 = h[r5 + 36] (u)
 1e13b48:    47 41             	r7 = [r0 + 80]
 1e13b4a:    54 54             	r4 = h[r2 + 10] (u)
 1e13b4c:    5f 53             	h[r1 + 42] = r7
 1e13b4e:    45 52             	r5 = h[r1 + 8] (u)
 1e13b50:    56 45             	r6 = [r2 + 84]
 1e13b52:    52 5d             	r2 = h[r6 + 42] (u)
 1e13b54:    6e 65             	b[r2 + 22] = r6
 1e13b56:    77 5f             	r7 = h[r7 + 46] (u)
 1e13b58:    64 65             	r4 = b[r2 + 22] (u)
 1e13b5a:    76 5f             	r6 = h[r7 + 46] (u)
 1e13b5c:    61 64             	r1 = b[r2 + 6] (u)
 1e13b5e:    76 0a             	sp += 236
 1e13b60:    0d 0a             	sp += 24
 1e13b62:    00 5b             	r0 = h[r5 + 32] (u)
 1e13b64:    49 6e             	b[r7 + 4] = r1
 1e13b66:    66 6f             	r6 = b[r7 + 22] (u)
 1e13b68:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0xD9C : 1e13c24 >
 1e13b6a:    20 5b             	r0 = h[r5 + 36] (u)
 1e13b6c:    47 41             	r7 = [r0 + 80]
 1e13b6e:    54 54             	r4 = h[r2 + 10] (u)
 1e13b70:    5f 53             	h[r1 + 42] = r7
 1e13b72:    45 52             	r5 = h[r1 + 8] (u)
 1e13b74:    56 45             	r6 = [r2 + 84]
 1e13b76:    52 5d             	r2 = h[r6 + 42] (u)
 1e13b78:    61 64             	r1 = b[r2 + 6] (u)
 1e13b7a:    76 5f             	r6 = h[r7 + 46] (u)
 1e13b7c:    65 6e             	r5 = b[r7 + 6] (u)
 1e13b7e:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0xB6C : 1e139f4 >
 1e13b80:    64 0a             	sp += 200
 1e13b82:    0d 0a             	sp += 24
 1e13b84:    00 5b             	r0 = h[r5 + 32] (u)
 1e13b86:    49 6e             	b[r7 + 4] = r1
 1e13b88:    66 6f             	r6 = b[r7 + 22] (u)
 1e13b8a:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0xDBE : 1e13c46 >
 1e13b8c:    20 5b             	r0 = h[r5 + 36] (u)
 1e13b8e:    47 41             	r7 = [r0 + 80]
 1e13b90:    54 54             	r4 = h[r2 + 10] (u)
 1e13b92:    5f 53             	h[r1 + 42] = r7
 1e13b94:    45 52             	r5 = h[r1 + 8] (u)
 1e13b96:    56 45             	r6 = [r2 + 84]
 1e13b98:    52 5d             	r2 = h[r6 + 42] (u)
 1e13b9a:    73 65             	r3 = b[r2 + 23] (u)
 1e13b9c:    72 76             	r2 = 103
 1e13b9e:    65 72             	r5 = 38
 1e13ba0:    5f 77             	r15 = 117
 1e13ba2:    6f 72             	r15 = 38
 1e13ba4:    6b 5f             	h[r7 + 44] = r3
 1e13ba6:    73 74             	r3 = 71
 1e13ba8:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0xB96 : 1e13a1e >
 1e13baa:    78 2d             	if (r6 == 0) goto -272 <update_target_end+0xC14 : 1e13a9c >
 1e13bac:    3e 25             	if (r2 == 0) goto -388 <update_target_end+0xBA2 : 1e13a2a >
 1e13bae:    78 0a             	sp += 240
 1e13bb0:    0d 0a             	sp += 24
 1e13bb2:    00 5b             	r0 = h[r5 + 32] (u)
 1e13bb4:    49 6e             	b[r7 + 4] = r1
 1e13bb6:    66 6f             	r6 = b[r7 + 22] (u)
 1e13bb8:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0xDEC : 1e13c74 >
 1e13bba:    20 5b             	r0 = h[r5 + 36] (u)
 1e13bbc:    47 41             	r7 = [r0 + 80]
 1e13bbe:    54 54             	r4 = h[r2 + 10] (u)
 1e13bc0:    5f 53             	h[r1 + 42] = r7
 1e13bc2:    45 52             	r5 = h[r1 + 8] (u)
 1e13bc4:    56 45             	r6 = [r2 + 84]
 1e13bc6:    52 5d             	r2 = h[r6 + 42] (u)
 1e13bc8:    6d 6f             	b[r7 + 22] = r5
 1e13bca:    64 65             	r4 = b[r2 + 22] (u)
 1e13bcc:    5f 65             	b[r2 + 21] = r7
 1e13bce:    6e 3a             	if (r5 != 0) goto 220 <update_target_end+0xE24 : 1e13cac >
 1e13bd0:    25 64             	r5 = b[r2 + 2] (u)
 1e13bd2:    0a 0d             	r10 <<= r4
 1e13bd4:    0a 00             	ssync
 1e13bd6:    5b 49             	[r4 + 84] = r3
 1e13bd8:    6e 66             	b[r3 + 6] = r6
 1e13bda:    6f 5d             	h[r6 + 44] = r7
 1e13bdc:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0xDCA : 1e13c52 >
 1e13bde:    5b 47             	[r3 + 84] = r3
 1e13be0:    41 54             	r1 = h[r2 + 8] (u)
 1e13be2:    54 5f             	r4 = h[r7 + 42] (u)
 1e13be4:    53 45             	r3 = [r2 + 84]
 1e13be6:    52 56             	r2 = h[r3 + 10] (u)
 1e13be8:    45 52             	r5 = h[r1 + 8] (u)
 1e13bea:    5d 63             	b[r1 + 21] = r5
 1e13bec:    6f 6e             	b[r7 + 6] = r7
 1e13bee:    6e 65             	b[r2 + 22] = r6
 1e13bf0:    63 74             	r3 = 70
 1e13bf2:    69 6f             	b[r7 + 22] = r1
 1e13bf4:    6e 5f             	h[r7 + 44] = r6
 1e13bf6:    75 70             	r5 = 7
 1e13bf8:    64 61             	r4 = b[r0 + 22] (u)
 1e13bfa:    74 65             	r4 = b[r2 + 23] (u)
 1e13bfc:    20 62             	r0 = b[r1 + 2] (u)
 1e13bfe:    75 73             	r5 = 55
 1e13c00:    79 21             	if (r0 == 0) goto -270 <update_target_end+0xC6C : 1e13af4 >
 1e13c02:    21 21             	if (r0 == 0) goto -446 <update_target_end+0xBBE : 1e13a46 >
 1e13c04:    0a 0d             	r10 <<= r4
 1e13c06:    0a 00             	ssync
 1e13c08:    62 6c             	r2 = b[r6 + 6] (u)
 1e13c0a:    65 5f             	r5 = h[r7 + 44] (u)
 1e13c0c:    67 61             	r7 = b[r0 + 22] (u)
 1e13c0e:    74 74             	r4 = 71
 1e13c10:    5f 73             	r15 = 53
 1e13c12:    65 72             	r5 = 38
 1e13c14:    76 65             	r6 = b[r2 + 23] (u)
 1e13c16:    72 5f             	r2 = h[r7 + 46] (u)
 1e13c18:    70 72             	r0 = 39
 1e13c1a:    6f 66             	b[r3 + 6] = r7
 1e13c1c:    69 6c             	b[r6 + 6] = r1
 1e13c1e:    65 5f             	r5 = h[r7 + 44] (u)
 1e13c20:    69 6e             	b[r7 + 6] = r1
 1e13c22:    69 74             	r9 = 70
 1e13c24:    00 62             	r0 = b[r1 + 0] (u)
 1e13c26:    6c 65             	b[r2 + 22] = r4
 1e13c28:    5f 67             	b[r3 + 21] = r7
 1e13c2a:    61 74             	r1 = 70
 1e13c2c:    74 5f             	r4 = h[r7 + 46] (u)
 1e13c2e:    73 65             	r3 = b[r2 + 23] (u)
 1e13c30:    72 76             	r2 = 103
 1e13c32:    65 72             	r5 = 38
 1e13c34:    5f 69             	b[r4 + 21] = r7
 1e13c36:    6e 69             	b[r4 + 22] = r6
 1e13c38:    74 00             	sti r4
 1e13c3a:    62 6c             	r2 = b[r6 + 6] (u)
 1e13c3c:    65 5f             	r5 = h[r7 + 44] (u)
 1e13c3e:    67 61             	r7 = b[r0 + 22] (u)
 1e13c40:    74 74             	r4 = 71
 1e13c42:    5f 73             	r15 = 53
 1e13c44:    65 72             	r5 = 38
 1e13c46:    76 65             	r6 = b[r2 + 23] (u)
 1e13c48:    72 5f             	r2 = h[r7 + 46] (u)
 1e13c4a:    65 78             	r5 = 134
 1e13c4c:    69 74             	r9 = 70
 1e13c4e:    00 5b             	r0 = h[r5 + 32] (u)
 1e13c50:    49 6e             	b[r7 + 4] = r1
 1e13c52:    66 6f             	r6 = b[r7 + 22] (u)
 1e13c54:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0xE88 : 1e13d10 >
 1e13c56:    20 5b             	r0 = h[r5 + 36] (u)
 1e13c58:    54 45             	r4 = [r2 + 84]
 1e13c5a:    53 54             	r3 = h[r2 + 10] (u)
 1e13c5c:    2d 55             	h[r2 + 36] = r5
 1e13c5e:    50 44             	r0 = [r2 + 20]
 1e13c60:    41 54             	r1 = h[r2 + 8] (u)
 1e13c62:    45 5d             	r5 = h[r6 + 40] (u)
 1e13c64:    6d 73             	r13 = 54
 1e13c66:    67 3a             	if (r5 != 0) goto 206 <update_target_end+0xEAE : 1e13d36 >
 1e13c68:    25 78             	r5 = 130
 1e13c6a:    0a 0d             	r10 <<= r4
 1e13c6c:    0a 00             	ssync
 1e13c6e:    72 65             	r2 = b[r2 + 23] (u)
 1e13c70:    74 5f             	r4 = h[r7 + 46] (u)
 1e13c72:    63 6f             	r3 = b[r7 + 22] (u)
 1e13c74:    64 65             	r4 = b[r2 + 22] (u)
 1e13c76:    2d 3e             	if (r7 != 0) goto 90 <update_target_end+0xE4A : 1e13cd2 >
 1e13c78:    73 74             	r3 = 71
 1e13c7a:    75 3a             	if (r5 != 0) goto 234 <update_target_end+0xEDE : 1e13d66 >
 1e13c7c:    25 64             	r5 = b[r2 + 2] (u)
 1e13c7e:    20 65             	r0 = b[r2 + 18] (u)
 1e13c80:    72 72             	r2 = 39
 1e13c82:    5f 63             	b[r1 + 21] = r7
 1e13c84:    6f 64             	b[r2 + 6] = r7
 1e13c86:    65 3a             	if (r5 != 0) goto 202 <update_target_end+0xECA : 1e13d52 >
 1e13c88:    25 64             	r5 = b[r2 + 2] (u)
 1e13c8a:    0a 00             	ssync
 1e13c8c:    5b 49             	[r4 + 84] = r3
 1e13c8e:    6e 66             	b[r3 + 6] = r6
 1e13c90:    6f 5d             	h[r6 + 44] = r7
 1e13c92:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0xE80 : 1e13d08 >
 1e13c94:    5b 54             	h[r2 + 10] = r3
 1e13c96:    45 53             	r5 = h[r1 + 40] (u)
 1e13c98:    54 2d             	if (r6 == 0) goto -344 <update_target_end+0xCBA : 1e13b42 >
 1e13c9a:    55 50             	r5 = h[r0 + 10] (u)
 1e13c9c:    44 41             	r4 = [r0 + 80]
 1e13c9e:    54 45             	r4 = [r2 + 84]
 1e13ca0:    5d 77             	r13 = 117
 1e13ca2:    61 69             	r1 = b[r4 + 22] (u)
 1e13ca4:    74 20             	if (r0 == 0) goto 232 <update_target_end+0xF06 : 1e13d8e >
 1e13ca6:    64 69             	r4 = b[r4 + 22] (u)
 1e13ca8:    73 63             	r3 = b[r1 + 23] (u)
 1e13caa:    6f 6e             	b[r7 + 6] = r7
 1e13cac:    0a 0d             	r10 <<= r4
 1e13cae:    0a 00             	ssync
 1e13cb0:    62 6c             	r2 = b[r6 + 6] (u)
 1e13cb2:    65 20             	if (r0 == 0) goto 202 <update_target_end+0xEF6 : 1e13d7e >
 1e13cb4:    61 64             	r1 = b[r2 + 6] (u)
 1e13cb6:    64 72             	r4 = 38
 1e13cb8:    3a 0a             	sp += 116
 1e13cba:    00 5b             	r0 = h[r5 + 32] (u)
 1e13cbc:    49 6e             	b[r7 + 4] = r1
 1e13cbe:    66 6f             	r6 = b[r7 + 22] (u)
 1e13cc0:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0xEF4 : 1e13d7c >
 1e13cc2:    20 5b             	r0 = h[r5 + 36] (u)
 1e13cc4:    54 45             	r4 = [r2 + 84]
 1e13cc6:    53 54             	r3 = h[r2 + 10] (u)
 1e13cc8:    2d 55             	h[r2 + 36] = r5
 1e13cca:    50 44             	r0 = [r2 + 20]
 1e13ccc:    41 54             	r1 = h[r2 + 8] (u)
 1e13cce:    45 5d             	r5 = h[r6 + 40] (u)
 1e13cd0:    73 74             	r3 = 71
 1e13cd2:    61 74             	r1 = 70
 1e13cd4:    65 3a             	if (r5 != 0) goto 202 <update_target_end+0xF18 : 1e13da0 >
 1e13cd6:    25 78             	r5 = 130
 1e13cd8:    20 65             	r0 = b[r2 + 18] (u)
 1e13cda:    72 72             	r2 = 39
 1e13cdc:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0xCCA : 1e13b52 >
 1e13cde:    78 0a             	sp += 240
 1e13ce0:    0d 0a             	sp += 24
 1e13ce2:    00 5b             	r0 = h[r5 + 32] (u)
 1e13ce4:    49 6e             	b[r7 + 4] = r1
 1e13ce6:    66 6f             	r6 = b[r7 + 22] (u)
 1e13ce8:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0xF1C : 1e13da4 >
 1e13cea:    20 5b             	r0 = h[r5 + 36] (u)
 1e13cec:    54 45             	r4 = [r2 + 84]
 1e13cee:    53 54             	r3 = h[r2 + 10] (u)
 1e13cf0:    2d 55             	h[r2 + 36] = r5
 1e13cf2:    50 44             	r0 = [r2 + 20]
 1e13cf4:    41 54             	r1 = h[r2 + 8] (u)
 1e13cf6:    45 5d             	r5 = h[r6 + 40] (u)
 1e13cf8:    63 6c             	r3 = b[r6 + 6] (u)
 1e13cfa:    6f 73             	r15 = 54
 1e13cfc:    65 20             	if (r0 == 0) goto 202 <update_target_end+0xF40 : 1e13dc8 >
 1e13cfe:    62 6c             	r2 = b[r6 + 6] (u)
 1e13d00:    65 20             	if (r0 == 0) goto 202 <update_target_end+0xF44 : 1e13dcc >
 1e13d02:    68 77             	r8 = 118
 1e13d04:    0a 0d             	r10 <<= r4
 1e13d06:    0a 00             	ssync
 1e13d08:    62 72             	r2 = 38
 1e13d0a:    65 64             	r5 = b[r2 + 6] (u)
 1e13d0c:    72 00             	sti r2
 1e13d0e:    3c 45             	[r2 + 76] = r4
 1e13d10:    72 72             	r2 = 39
 1e13d12:    6f 72             	r15 = 38
 1e13d14:    3e 3a             	if (r5 != 0) goto 124 <update_target_end+0xF0A : 1e13d92 >
 1e13d16:    20 5b             	r0 = h[r5 + 36] (u)
 1e13d18:    54 45             	r4 = [r2 + 84]
 1e13d1a:    53 54             	r3 = h[r2 + 10] (u)
 1e13d1c:    2d 55             	h[r2 + 36] = r5
 1e13d1e:    50 44             	r0 = [r2 + 20]
 1e13d20:    41 54             	r1 = h[r2 + 8] (u)
 1e13d22:    45 5d             	r5 = h[r6 + 40] (u)
 1e13d24:    62 74             	r2 = 70
 1e13d26:    20 73             	r0 = 50
 1e13d28:    61 76             	r1 = 102
 1e13d2a:    65 20             	if (r0 == 0) goto 202 <update_target_end+0xF6E : 1e13df6 >
 1e13d2c:    63 6f             	r3 = b[r7 + 22] (u)
 1e13d2e:    6e 6e             	b[r7 + 6] = r6
 1e13d30:    20 69             	r0 = b[r4 + 18] (u)
 1e13d32:    6e 66             	b[r3 + 6] = r6
 1e13d34:    6f 20             	if (r0 == 0) goto 222 <update_target_end+0xF8C : 1e13e14 >
 1e13d36:    66 61             	r6 = b[r0 + 22] (u)
 1e13d38:    69 6c             	b[r6 + 6] = r1
 1e13d3a:    21 0a             	sp += 64
 1e13d3c:    0d 0a             	sp += 24
 1e13d3e:    00 5b             	r0 = h[r5 + 32] (u)
 1e13d40:    49 6e             	b[r7 + 4] = r1
 1e13d42:    66 6f             	r6 = b[r7 + 22] (u)
 1e13d44:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0xF78 : 1e13e00 >
 1e13d46:    20 5b             	r0 = h[r5 + 36] (u)
 1e13d48:    54 45             	r4 = [r2 + 84]
 1e13d4a:    53 54             	r3 = h[r2 + 10] (u)
 1e13d4c:    2d 55             	h[r2 + 36] = r5
 1e13d4e:    50 44             	r0 = [r2 + 20]
 1e13d50:    41 54             	r1 = h[r2 + 8] (u)
 1e13d52:    45 5d             	r5 = h[r6 + 40] (u)
 1e13d54:    74 65             	r4 = b[r2 + 23] (u)
 1e13d56:    73 74             	r3 = 71
 1e13d58:    62 6f             	r2 = b[r7 + 22] (u)
 1e13d5a:    78 20             	if (r0 == 0) goto 240 <update_target_end+0xFC4 : 1e13e4c >
 1e13d5c:    6d 73             	r13 = 54
 1e13d5e:    67 20             	if (r0 == 0) goto 206 <update_target_end+0xFA6 : 1e13e2e >
 1e13d60:    68 61             	b[r0 + 22] = r0
 1e13d62:    6e 64             	b[r2 + 6] = r6
 1e13d64:    6c 65             	b[r2 + 22] = r4
 1e13d66:    20 72             	r0 = 34
 1e13d68:    65 67             	r5 = b[r3 + 22] (u)
 1e13d6a:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0xD58 : 1e13be0 >
 1e13d6c:    78 0a             	sp += 240
 1e13d6e:    0d 0a             	sp += 24
 1e13d70:    00 6f             	r0 = b[r7 + 16] (u)
 1e13d72:    74 61             	r4 = b[r0 + 23] (u)
 1e13d74:    00 5b             	r0 = h[r5 + 32] (u)
 1e13d76:    49 6e             	b[r7 + 4] = r1
 1e13d78:    66 6f             	r6 = b[r7 + 22] (u)
 1e13d7a:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0xFAE : 1e13e36 >
 1e13d7c:    20 5b             	r0 = h[r5 + 36] (u)
 1e13d7e:    41 50             	r1 = h[r0 + 8] (u)
 1e13d80:    50 2d             	if (r6 == 0) goto -352 <update_target_end+0xD9A : 1e13c22 >
 1e13d82:    55 50             	r5 = h[r0 + 10] (u)
 1e13d84:    44 41             	r4 = [r0 + 80]
 1e13d86:    54 45             	r4 = [r2 + 84]
 1e13d88:    5d 74             	r13 = 69
 1e13d8a:    79 70             	r9 = 7
 1e13d8c:    65 3a             	if (r5 != 0) goto 202 <update_target_end+0xFD0 : 1e13e58 >
 1e13d8e:    25 78             	r5 = 130
 1e13d90:    20 73             	r0 = 50
 1e13d92:    74 61             	r4 = b[r0 + 23] (u)
 1e13d94:    74 65             	r4 = b[r2 + 23] (u)
 1e13d96:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0xD84 : 1e13c0c >
 1e13d98:    78 20             	if (r0 == 0) goto 240 <update_target_end+0x1002 : 1e13e8a >
 1e13d9a:    63 6f             	r3 = b[r7 + 22] (u)
 1e13d9c:    64 65             	r4 = b[r2 + 22] (u)
 1e13d9e:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0xD8C : 1e13c14 >
 1e13da0:    78 0a             	sp += 240
 1e13da2:    0d 0a             	sp += 24
 1e13da4:    00 5b             	r0 = h[r5 + 32] (u)
 1e13da6:    49 6e             	b[r7 + 4] = r1
 1e13da8:    66 6f             	r6 = b[r7 + 22] (u)
 1e13daa:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0xFDE : 1e13e66 >
 1e13dac:    20 5b             	r0 = h[r5 + 36] (u)
 1e13dae:    41 50             	r1 = h[r0 + 8] (u)
 1e13db0:    50 2d             	if (r6 == 0) goto -352 <update_target_end+0xDCA : 1e13c52 >
 1e13db2:    55 50             	r5 = h[r0 + 10] (u)
 1e13db4:    44 41             	r4 = [r0 + 80]
 1e13db6:    54 45             	r4 = [r2 + 84]
 1e13db8:    5d 73             	r13 = 53
 1e13dba:    75 63             	r5 = b[r1 + 23] (u)
 1e13dbc:    63 20             	if (r0 == 0) goto 198 <update_target_end+0xFFC : 1e13e84 >
 1e13dbe:    72 65             	r2 = b[r2 + 23] (u)
 1e13dc0:    70 6f             	r0 = b[r7 + 23] (u)
 1e13dc2:    72 74             	r2 = 71
 1e13dc4:    20 73             	r0 = 50
 1e13dc6:    74 6f             	r4 = b[r7 + 23] (u)
 1e13dc8:    72 65             	r2 = b[r2 + 23] (u)
 1e13dca:    64 0a             	sp += 200
 1e13dcc:    0d 0a             	sp += 24
 1e13dce:    00 5b             	r0 = h[r5 + 32] (u)
 1e13dd0:    49 6e             	b[r7 + 4] = r1
 1e13dd2:    66 6f             	r6 = b[r7 + 22] (u)
 1e13dd4:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x1008 : 1e13e90 >
 1e13dd6:    20 5b             	r0 = h[r5 + 36] (u)
 1e13dd8:    41 50             	r1 = h[r0 + 8] (u)
 1e13dda:    50 2d             	if (r6 == 0) goto -352 <update_target_end+0xDF4 : 1e13c7c >
 1e13ddc:    55 50             	r5 = h[r0 + 10] (u)
 1e13dde:    44 41             	r4 = [r0 + 80]
 1e13de0:    54 45             	r4 = [r2 + 84]
 1e13de2:    5d 3c             	if (r6 != 0) goto 186 <update_target_end+0x1016 : 1e13e9e >
 1e13de4:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xDB8 : 1e13c40 >
 1e13de6:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xDBA : 1e13c42 >
 1e13de8:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xDBC : 1e13c44 >
 1e13dea:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xDBE : 1e13c46 >
 1e13dec:    75 70             	r5 = 7
 1e13dee:    64 61             	r4 = b[r0 + 22] (u)
 1e13df0:    74 65             	r4 = b[r2 + 23] (u)
 1e13df2:    5f 72             	r15 = 37
 1e13df4:    65 73             	r5 = 54
 1e13df6:    75 6c             	r5 = b[r6 + 7] (u)
 1e13df8:    74 5f             	r4 = h[r7 + 46] (u)
 1e13dfa:    64 65             	r4 = b[r2 + 22] (u)
 1e13dfc:    61 6c             	r1 = b[r6 + 6] (u)
 1e13dfe:    3d 30             	if (r0 != 0) goto 122 <update_target_end+0xFF2 : 1e13e7a >
 1e13e00:    78 25             	if (r2 == 0) goto -272 <update_target_end+0xE6A : 1e13cf2 >
 1e13e02:    78 20             	if (r0 == 0) goto 240 <update_target_end+0x106C : 1e13ef4 >
 1e13e04:    25 78             	r5 = 130
 1e13e06:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xDDA : 1e13c62 >
 1e13e08:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xDDC : 1e13c64 >
 1e13e0a:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xDDE : 1e13c66 >
 1e13e0c:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xDE0 : 1e13c68 >
 1e13e0e:    2d 3e             	if (r7 != 0) goto 90 <update_target_end+0xFE2 : 1e13e6a >
 1e13e10:    0a 0d             	r10 <<= r4
 1e13e12:    0a 00             	ssync
 1e13e14:    65 6e             	r5 = b[r7 + 6] (u)
 1e13e16:    74 65             	r4 = b[r2 + 23] (u)
 1e13e18:    72 5f             	r2 = h[r7 + 46] (u)
 1e13e1a:    73 79             	r3 = 151
 1e13e1c:    73 5f             	r3 = h[r7 + 46] (u)
 1e13e1e:    73 6f             	r3 = b[r7 + 23] (u)
 1e13e20:    66 74             	r6 = 70
 1e13e22:    5f 70             	r15 = 5
 1e13e24:    6f 77             	r15 = 118
 1e13e26:    65 72             	r5 = 38
 1e13e28:    6f 66             	b[r3 + 6] = r7
 1e13e2a:    66 0a             	sp += 204
 1e13e2c:    00 63             	r0 = b[r1 + 16] (u)
 1e13e2e:    6c 6f             	b[r7 + 22] = r4
 1e13e30:    73 65             	r3 = b[r2 + 23] (u)
 1e13e32:    20 48             	r0 = [r4 + 8]
 1e13e34:    77 20             	if (r0 == 0) goto 238 <update_target_end+0x109C : 1e13f24 >
 1e13e36:    4e 61             	b[r0 + 20] = r6
 1e13e38:    6d 65             	b[r2 + 22] = r5
 1e13e3a:    20 3a             	if (r5 != 0) goto 64 <update_target_end+0xFF4 : 1e13e7c >
 1e13e3c:    20 25             	if (r2 == 0) goto -448 <update_target_end+0xDF6 : 1e13c7e >
 1e13e3e:    73 0a             	sp += 228
 1e13e40:    00 5b             	r0 = h[r5 + 32] (u)
 1e13e42:    49 6e             	b[r7 + 4] = r1
 1e13e44:    66 6f             	r6 = b[r7 + 22] (u)
 1e13e46:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x107A : 1e13f02 >
 1e13e48:    20 5b             	r0 = h[r5 + 36] (u)
 1e13e4a:    41 50             	r1 = h[r0 + 8] (u)
 1e13e4c:    50 2d             	if (r6 == 0) goto -352 <update_target_end+0xE66 : 1e13cee >
 1e13e4e:    55 50             	r5 = h[r0 + 10] (u)
 1e13e50:    44 41             	r4 = [r0 + 80]
 1e13e52:    54 45             	r4 = [r2 + 84]
 1e13e54:    5d 65             	b[r2 + 21] = r5
 1e13e56:    78 74             	r8 = 71
 1e13e58:    5f 66             	b[r3 + 5] = r7
 1e13e5a:    69 6c             	b[r6 + 6] = r1
 1e13e5c:    6c 20             	if (r0 == 0) goto 216 <update_target_end+0x10AE : 1e13f36 >
 1e13e5e:    3a 0d             	r10 >>>= r4
 1e13e60:    0a 00             	ssync
 1e13e62:    3c 45             	[r2 + 76] = r4
 1e13e64:    72 72             	r2 = 39
 1e13e66:    6f 72             	r15 = 38
 1e13e68:    3e 3a             	if (r5 != 0) goto 124 <update_target_end+0x105E : 1e13ee6 >
 1e13e6a:    20 5b             	r0 = h[r5 + 36] (u)
 1e13e6c:    41 50             	r1 = h[r0 + 8] (u)
 1e13e6e:    50 2d             	if (r6 == 0) goto -352 <update_target_end+0xE88 : 1e13d10 >
 1e13e70:    55 50             	r5 = h[r0 + 10] (u)
 1e13e72:    44 41             	r4 = [r0 + 80]
 1e13e74:    54 45             	r4 = [r2 + 84]
 1e13e76:    5d 6f             	b[r7 + 21] = r5
 1e13e78:    74 61             	r4 = b[r0 + 23] (u)
 1e13e7a:    20 61             	r0 = b[r0 + 18] (u)
 1e13e7c:    64 64             	r4 = b[r2 + 6] (u)
 1e13e7e:    72 20             	if (r0 == 0) goto 228 <update_target_end+0x10DC : 1e13f64 >
 1e13e80:    65 72             	r5 = 38
 1e13e82:    72 0a             	sp += 228
 1e13e84:    0d 0a             	sp += 24
 1e13e86:    00 3e             	if (r7 != 0) goto 0 <update_target_end+0x1000 : 1e13e88 >
 1e13e88:    3e 3e             	if (r7 != 0) goto 124 <update_target_end+0x107E : 1e13f06 >
 1e13e8a:    3e 3e             	if (r7 != 0) goto 124 <update_target_end+0x1080 : 1e13f08 >
 1e13e8c:    3e 3e             	if (r7 != 0) goto 124 <update_target_end+0x1082 : 1e13f0a >
 1e13e8e:    3e 3e             	if (r7 != 0) goto 124 <update_target_end+0x1084 : 1e13f0c >
 1e13e90:    3e 3e             	if (r7 != 0) goto 124 <update_target_end+0x1086 : 1e13f0e >
 1e13e92:    3e 3e             	if (r7 != 0) goto 124 <update_target_end+0x1088 : 1e13f10 >
 1e13e94:    3e 3e             	if (r7 != 0) goto 124 <update_target_end+0x108A : 1e13f12 >
 1e13e96:    3e 3e             	if (r7 != 0) goto 124 <update_target_end+0x108C : 1e13f14 >
 1e13e98:    61 70             	r1 = 6
 1e13e9a:    70 5f             	r0 = h[r7 + 46] (u)
 1e13e9c:    6d 61             	b[r0 + 22] = r5
 1e13e9e:    69 6e             	b[r7 + 6] = r1
 1e13ea0:    2e 2e             	if (r7 == 0) goto 92 <update_target_end+0x1076 : 1e13efe >
 1e13ea2:    2e 0a             	sp += 92
 1e13ea4:    00 5b             	r0 = h[r5 + 32] (u)
 1e13ea6:    49 6e             	b[r7 + 4] = r1
 1e13ea8:    66 6f             	r6 = b[r7 + 22] (u)
 1e13eaa:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x10DE : 1e13f66 >
 1e13eac:    20 5b             	r0 = h[r5 + 36] (u)
 1e13eae:    41 50             	r1 = h[r0 + 8] (u)
 1e13eb0:    50 5d             	r0 = h[r6 + 42] (u)
 1e13eb2:    72 75             	r2 = 87
 1e13eb4:    6e 20             	if (r0 == 0) goto 220 <update_target_end+0x110A : 1e13f92 >
 1e13eb6:    61 70             	r1 = 6
 1e13eb8:    70 3e             	if (r7 != 0) goto 224 <update_target_end+0x1112 : 1e13f9a >
 1e13eba:    3e 3e             	if (r7 != 0) goto 124 <update_target_end+0x10B0 : 1e13f38 >
 1e13ebc:    20 25             	if (r2 == 0) goto -448 <update_target_end+0xE76 : 1e13cfe >
 1e13ebe:    73 0d             	r3 >>>= r5
 1e13ec0:    0a 00             	ssync
 1e13ec2:    5b 49             	[r4 + 84] = r3
 1e13ec4:    6e 66             	b[r3 + 6] = r6
 1e13ec6:    6f 5d             	h[r6 + 44] = r7
 1e13ec8:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x10B6 : 1e13f3e >
 1e13eca:    5b 41             	[r0 + 84] = r3
 1e13ecc:    50 50             	r0 = h[r0 + 10] (u)
 1e13ece:    5d 25             	if (r2 == 0) goto -326 <update_target_end+0xF02 : 1e13d8a >
 1e13ed0:    73 2c             	if (r6 == 0) goto 230 <update_target_end+0x1130 : 1e13fb8 >
 1e13ed2:    25 73             	r5 = 50
 1e13ed4:    0d 0a             	sp += 24
 1e13ed6:    00 41             	r0 = [r0 + 64]
 1e13ed8:    75 67             	r5 = b[r3 + 23] (u)
 1e13eda:    20 31             	if (r0 != 0) goto -448 <update_target_end+0xE94 : 1e13d1c >
 1e13edc:    36 20             	if (r0 == 0) goto 108 <update_target_end+0x10C2 : 1e13f4a >
 1e13ede:    32 30             	if (r0 != 0) goto 100 <update_target_end+0x10BC : 1e13f44 >
 1e13ee0:    32 32             	if (r1 != 0) goto 100 <update_target_end+0x10BE : 1e13f46 >
 1e13ee2:    00 31             	if (r0 != 0) goto -512 <update_target_end+0xE5C : 1e13ce4 >
 1e13ee4:    36 3a             	if (r5 != 0) goto 108 <update_target_end+0x10CA : 1e13f52 >
 1e13ee6:    32 38             	if (r4 != 0) goto 100 <update_target_end+0x10C4 : 1e13f4c >
 1e13ee8:    3a 30             	if (r0 != 0) goto 116 <update_target_end+0x10D6 : 1e13f5e >
 1e13eea:    37 00             	[--sp] = rets
 1e13eec:    62 74             	r2 = 70
 1e13eee:    65 6e             	r5 = b[r7 + 6] (u)
 1e13ef0:    63 72             	r3 = 38
 1e13ef2:    79 00             	sti r9
 1e13ef4:    61 70             	r1 = 6
 1e13ef6:    70 5f             	r0 = h[r7 + 46] (u)
 1e13ef8:    6b 65             	b[r2 + 22] = r3
 1e13efa:    79 66             	b[r3 + 7] = r1
 1e13efc:    6f 62             	b[r1 + 6] = r7
 1e13efe:    5f 64             	b[r2 + 5] = r7
 1e13f00:    65 61             	r5 = b[r0 + 22] (u)
 1e13f02:    6c 00             	cli r12
 1e13f04:    6b 65             	b[r2 + 22] = r3
 1e13f06:    79 66             	b[r3 + 7] = r1
 1e13f08:    6f 62             	b[r1 + 6] = r7
 1e13f0a:    00 61             	r0 = b[r0 + 16] (u)
 1e13f0c:    70 70             	r0 = 7
 1e13f0e:    5f 6b             	b[r5 + 21] = r7
 1e13f10:    65 79             	r5 = 150
 1e13f12:    5f 65             	b[r2 + 21] = r7
 1e13f14:    76 6e             	r6 = b[r7 + 7] (u)
 1e13f16:    65 74             	r5 = 70
 1e13f18:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x1106 : 1e13f8e >
 1e13f1a:    25 64             	r5 = b[r2 + 2] (u)
 1e13f1c:    2c 25             	if (r2 == 0) goto -424 <update_target_end+0xEEE : 1e13d76 >
 1e13f1e:    64 0a             	sp += 200
 1e13f20:    00 5b             	r0 = h[r5 + 32] (u)
 1e13f22:    49 6e             	b[r7 + 4] = r1
 1e13f24:    66 6f             	r6 = b[r7 + 22] (u)
 1e13f26:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x115A : 1e13fe2 >
 1e13f28:    20 5b             	r0 = h[r5 + 36] (u)
 1e13f2a:    4b 45             	[r2 + 80] = r3
 1e13f2c:    59 46             	[r3 + 20] = r1
 1e13f2e:    4f 42             	[r1 + 16] = r7
 1e13f30:    5d 2d             	if (r6 == 0) goto -326 <update_target_end+0xF64 : 1e13dec >
 1e13f32:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xF06 : 1e13d8e >
 1e13f34:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xF08 : 1e13d90 >
 1e13f36:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xF0A : 1e13d92 >
 1e13f38:    2d 6b             	b[r5 + 18] = r5
 1e13f3a:    65 79             	r5 = 150
 1e13f3c:    66 6f             	r6 = b[r7 + 22] (u)
 1e13f3e:    62 5f             	r2 = h[r7 + 44] (u)
 1e13f40:    62 74             	r2 = 70
 1e13f42:    5f 63             	b[r1 + 21] = r7
 1e13f44:    6f 6e             	b[r7 + 6] = r7
 1e13f46:    6e 63             	b[r1 + 22] = r6
 1e13f48:    74 69             	r4 = b[r4 + 23] (u)
 1e13f4a:    6f 6e             	b[r7 + 6] = r7
 1e13f4c:    5f 73             	r15 = 53
 1e13f4e:    74 61             	r4 = b[r0 + 23] (u)
 1e13f50:    74 75             	r4 = 87
 1e13f52:    73 5f             	r3 = h[r7 + 46] (u)
 1e13f54:    65 76             	r5 = 102
 1e13f56:    65 6e             	r5 = b[r7 + 6] (u)
 1e13f58:    74 5f             	r4 = h[r7 + 46] (u)
 1e13f5a:    68 61             	b[r0 + 22] = r0
 1e13f5c:    6e 64             	b[r2 + 6] = r6
 1e13f5e:    6c 65             	b[r2 + 22] = r4
 1e13f60:    72 20             	if (r0 == 0) goto 228 <update_target_end+0x11BE : 1e14046 >
 1e13f62:    25 64             	r5 = b[r2 + 2] (u)
 1e13f64:    0d 0a             	sp += 24
 1e13f66:    00 5b             	r0 = h[r5 + 32] (u)
 1e13f68:    49 6e             	b[r7 + 4] = r1
 1e13f6a:    66 6f             	r6 = b[r7 + 22] (u)
 1e13f6c:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x11A0 : 1e14028 >
 1e13f6e:    20 5b             	r0 = h[r5 + 36] (u)
 1e13f70:    4b 45             	[r2 + 80] = r3
 1e13f72:    59 46             	[r3 + 20] = r1
 1e13f74:    4f 42             	[r1 + 16] = r7
 1e13f76:    5d 42             	[r1 + 20] = r5
 1e13f78:    54 5f             	r4 = h[r7 + 42] (u)
 1e13f7a:    53 54             	r3 = h[r2 + 10] (u)
 1e13f7c:    41 54             	r1 = h[r2 + 8] (u)
 1e13f7e:    55 53             	r5 = h[r1 + 42] (u)
 1e13f80:    5f 49             	[r4 + 84] = r7
 1e13f82:    4e 49             	[r4 + 80] = r6
 1e13f84:    54 5f             	r4 = h[r7 + 42] (u)
 1e13f86:    4f 4b             	[r5 + 80] = r7
 1e13f88:    0a 0d             	r10 <<= r4
 1e13f8a:    0a 00             	ssync
 1e13f8c:    5b 49             	[r4 + 84] = r3
 1e13f8e:    6e 66             	b[r3 + 6] = r6
 1e13f90:    6f 5d             	h[r6 + 44] = r7
 1e13f92:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x1180 : 1e14008 >
 1e13f94:    5b 4b             	[r5 + 84] = r3
 1e13f96:    45 59             	r5 = h[r4 + 40] (u)
 1e13f98:    46 4f             	r6 = [r7 + 80]
 1e13f9a:    42 5d             	r2 = h[r6 + 40] (u)
 1e13f9c:    23 23             	if (r1 == 0) goto -442 <update_target_end+0xF5C : 1e13de4 >
 1e13f9e:    23 23             	if (r1 == 0) goto -442 <update_target_end+0xF5E : 1e13de6 >
 1e13fa0:    23 23             	if (r1 == 0) goto -442 <update_target_end+0xF60 : 1e13de8 >
 1e13fa2:    20 25             	if (r2 == 0) goto -448 <update_target_end+0xF5C : 1e13de4 >
 1e13fa4:    73 3a             	if (r5 != 0) goto 230 <update_target_end+0x1204 : 1e1408c >
 1e13fa6:    20 25             	if (r2 == 0) goto -448 <update_target_end+0xF60 : 1e13de8 >
 1e13fa8:    64 2c             	if (r6 == 0) goto 200 <update_target_end+0x11EA : 1e14072 >
 1e13faa:    25 64             	r5 = b[r2 + 2] (u)
 1e13fac:    0a 0d             	r10 <<= r4
 1e13fae:    0a 00             	ssync
 1e13fb0:    6b 65             	b[r2 + 22] = r3
 1e13fb2:    79 66             	b[r3 + 7] = r1
 1e13fb4:    6f 62             	b[r1 + 6] = r7
 1e13fb6:    5f 61             	b[r0 + 21] = r7
 1e13fb8:    70 70             	r0 = 7
 1e13fba:    5f 73             	r15 = 53
 1e13fbc:    65 6c             	r5 = b[r6 + 6] (u)
 1e13fbe:    65 63             	r5 = b[r1 + 22] (u)
 1e13fc0:    74 5f             	r4 = h[r7 + 46] (u)
 1e13fc2:    62 74             	r2 = 70
 1e13fc4:    6d 6f             	b[r7 + 22] = r5
 1e13fc6:    64 65             	r4 = b[r2 + 22] (u)
 1e13fc8:    00 5b             	r0 = h[r5 + 32] (u)
 1e13fca:    49 6e             	b[r7 + 4] = r1
 1e13fcc:    66 6f             	r6 = b[r7 + 22] (u)
 1e13fce:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x1202 : 1e1408a >
 1e13fd0:    20 5b             	r0 = h[r5 + 36] (u)
 1e13fd2:    4b 45             	[r2 + 80] = r3
 1e13fd4:    59 46             	[r3 + 20] = r1
 1e13fd6:    4f 42             	[r1 + 16] = r7
 1e13fd8:    5d 2d             	if (r6 == 0) goto -326 <update_target_end+0x100C : 1e13e94 >
 1e13fda:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xFAE : 1e13e36 >
 1e13fdc:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xFB0 : 1e13e38 >
 1e13fde:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xFB2 : 1e13e3a >
 1e13fe0:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xFB4 : 1e13e3c >
 1e13fe2:    61 70             	r1 = 6
 1e13fe4:    70 20             	if (r0 == 0) goto 224 <update_target_end+0x123E : 1e140c6 >
 1e13fe6:    73 65             	r3 = b[r2 + 23] (u)
 1e13fe8:    6c 65             	b[r2 + 22] = r4
 1e13fea:    63 74             	r3 = 70
 1e13fec:    20 62             	r0 = b[r1 + 2] (u)
 1e13fee:    6c 65             	b[r2 + 22] = r4
 1e13ff0:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xFC4 : 1e13e4c >
 1e13ff2:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xFC6 : 1e13e4e >
 1e13ff4:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xFC8 : 1e13e50 >
 1e13ff6:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0xFCA : 1e13e52 >
 1e13ff8:    0a 0d             	r10 <<= r4
 1e13ffa:    0a 00             	ssync
 1e13ffc:    44 3a             	if (r5 != 0) goto 136 <update_target_end+0x11FE : 1e14086 >
 1e13ffe:    5c 73             	r12 = 53
 1e14000:    68 69             	b[r4 + 22] = r0
 1e14002:    78 75             	r8 = 87
 1e14004:    6e 5c             	h[r6 + 12] = r6
 1e14006:    66 77             	r6 = 118
 1e14008:    2d 41             	[r0 + 72] = r5
 1e1400a:    43 36             	if (r3 != 0) goto 134 <update_target_end+0x120A : 1e14092 >
 1e1400c:    33 5f             	r3 = h[r7 + 38] (u)
 1e1400e:    42 54             	r2 = h[r2 + 8] (u)
 1e14010:    5f 53             	h[r1 + 42] = r7
 1e14012:    44 4b             	r4 = [r5 + 80]
 1e14014:    2d 6d             	b[r6 + 18] = r5
 1e14016:    61 73             	r1 = 54
 1e14018:    74 65             	r4 = b[r2 + 23] (u)
 1e1401a:    72 5c             	r2 = h[r6 + 14] (u)
 1e1401c:    61 70             	r1 = 6
 1e1401e:    70 73             	r0 = 55
 1e14020:    5c 68             	b[r4 + 5] = r4
 1e14022:    69 64             	b[r2 + 6] = r1
 1e14024:    5c 65             	b[r2 + 21] = r4
 1e14026:    78 61             	b[r0 + 23] = r0
 1e14028:    6d 70             	r13 = 6
 1e1402a:    6c 65             	b[r2 + 22] = r4
 1e1402c:    73 5c             	r3 = h[r6 + 14] (u)
 1e1402e:    6b 65             	b[r2 + 22] = r3
 1e14030:    79 66             	b[r3 + 7] = r1
 1e14032:    6f 62             	b[r1 + 6] = r7
 1e14034:    5c 61             	b[r0 + 21] = r4
 1e14036:    70 70             	r0 = 7
 1e14038:    5f 6b             	b[r5 + 21] = r7
 1e1403a:    65 79             	r5 = 150
 1e1403c:    66 6f             	r6 = b[r7 + 22] (u)
 1e1403e:    62 2e             	if (r7 == 0) goto 196 <update_target_end+0x127C : 1e14104 >
 1e14040:    63 00             	cli r3
 1e14042:    5b 49             	[r4 + 84] = r3
 1e14044:    6e 66             	b[r3 + 6] = r6
 1e14046:    6f 5d             	h[r6 + 44] = r7
 1e14048:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x1236 : 1e140be >
 1e1404a:    5b 4b             	[r5 + 84] = r3
 1e1404c:    45 59             	r5 = h[r4 + 40] (u)
 1e1404e:    46 4f             	r6 = [r7 + 80]
 1e14050:    42 5d             	r2 = h[r6 + 40] (u)
 1e14052:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x1026 : 1e13eae >
 1e14054:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x1028 : 1e13eb0 >
 1e14056:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x102A : 1e13eb2 >
 1e14058:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x102C : 1e13eb4 >
 1e1405a:    2d 61             	b[r0 + 18] = r5
 1e1405c:    70 70             	r0 = 7
 1e1405e:    20 73             	r0 = 50
 1e14060:    65 6c             	r5 = b[r6 + 6] (u)
 1e14062:    65 63             	r5 = b[r1 + 22] (u)
 1e14064:    74 20             	if (r0 == 0) goto 232 <update_target_end+0x12C6 : 1e1414e >
 1e14066:    65 64             	r5 = b[r2 + 6] (u)
 1e14068:    72 2d             	if (r6 == 0) goto -284 <update_target_end+0x10C6 : 1e13f4e >
 1e1406a:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x103E : 1e13ec6 >
 1e1406c:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x1040 : 1e13ec8 >
 1e1406e:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x1042 : 1e13eca >
 1e14070:    2d 0a             	sp += 88
 1e14072:    0d 0a             	sp += 24
 1e14074:    00 5b             	r0 = h[r5 + 32] (u)
 1e14076:    49 6e             	b[r7 + 4] = r1
 1e14078:    66 6f             	r6 = b[r7 + 22] (u)
 1e1407a:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x12AE : 1e14136 >
 1e1407c:    20 5b             	r0 = h[r5 + 36] (u)
 1e1407e:    4b 45             	[r2 + 80] = r3
 1e14080:    59 46             	[r3 + 20] = r1
 1e14082:    4f 42             	[r1 + 16] = r7
 1e14084:    5d 6e             	b[r7 + 5] = r5
 1e14086:    6f 74             	r15 = 70
 1e14088:    20 73             	r0 = 50
 1e1408a:    75 72             	r5 = 39
 1e1408c:    70 70             	r0 = 7
 1e1408e:    6f 72             	r15 = 38
 1e14090:    74 20             	if (r0 == 0) goto 232 <update_target_end+0x12F2 : 1e1417a >
 1e14092:    65 64             	r5 = b[r2 + 6] (u)
 1e14094:    72 2c             	if (r6 == 0) goto 228 <update_target_end+0x12F2 : 1e1417a >
 1e14096:    6d 61             	b[r0 + 22] = r5
 1e14098:    6b 65             	b[r2 + 22] = r3
 1e1409a:    20 73             	r0 = 50
 1e1409c:    75 72             	r5 = 39
 1e1409e:    65 20             	if (r0 == 0) goto 202 <update_target_end+0x12E2 : 1e1416a >
 1e140a0:    63 6f             	r3 = b[r7 + 22] (u)
 1e140a2:    6e 66             	b[r3 + 6] = r6
 1e140a4:    69 67             	b[r3 + 22] = r1
 1e140a6:    20 21             	if (r0 == 0) goto -448 <update_target_end+0x1060 : 1e13ee8 >
 1e140a8:    21 21             	if (r0 == 0) goto -446 <update_target_end+0x1064 : 1e13eec >
 1e140aa:    0a 0d             	r10 <<= r4
 1e140ac:    0a 00             	ssync
 1e140ae:    5b 49             	[r4 + 84] = r3
 1e140b0:    6e 66             	b[r3 + 6] = r6
 1e140b2:    6f 5d             	h[r6 + 44] = r7
 1e140b4:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x12A2 : 1e1412a >
 1e140b6:    5b 4b             	[r5 + 84] = r3
 1e140b8:    45 59             	r5 = h[r4 + 40] (u)
 1e140ba:    46 4f             	r6 = [r7 + 80]
 1e140bc:    42 5d             	r2 = h[r6 + 40] (u)
 1e140be:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x1092 : 1e13f1a >
 1e140c0:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x1094 : 1e13f1c >
 1e140c2:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x1096 : 1e13f1e >
 1e140c4:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x1098 : 1e13f20 >
 1e140c6:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x109A : 1e13f22 >
 1e140c8:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x109C : 1e13f24 >
 1e140ca:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x109E : 1e13f26 >
 1e140cc:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x10A0 : 1e13f28 >
 1e140ce:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x10A2 : 1e13f2a >
 1e140d0:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x10A4 : 1e13f2c >
 1e140d2:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x10A6 : 1e13f2e >
 1e140d4:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x10A8 : 1e13f30 >
 1e140d6:    6b 65             	b[r2 + 22] = r3
 1e140d8:    79 66             	b[r3 + 7] = r1
 1e140da:    6f 62             	b[r1 + 6] = r7
 1e140dc:    5f 62             	b[r1 + 5] = r7
 1e140de:    74 5f             	r4 = h[r7 + 46] (u)
 1e140e0:    68 63             	b[r1 + 22] = r0
 1e140e2:    69 5f             	h[r7 + 44] = r1
 1e140e4:    65 76             	r5 = 102
 1e140e6:    65 6e             	r5 = b[r7 + 6] (u)
 1e140e8:    74 5f             	r4 = h[r7 + 46] (u)
 1e140ea:    68 61             	b[r0 + 22] = r0
 1e140ec:    6e 64             	b[r2 + 6] = r6
 1e140ee:    6c 65             	b[r2 + 22] = r4
 1e140f0:    72 20             	if (r0 == 0) goto 228 <update_target_end+0x134E : 1e141d6 >
 1e140f2:    72 65             	r2 = b[r2 + 23] (u)
 1e140f4:    61 73             	r1 = 54
 1e140f6:    6f 6e             	b[r7 + 6] = r7
 1e140f8:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x10B2 : 1e13f3a >
 1e140fa:    78 20             	if (r0 == 0) goto 240 <update_target_end+0x1364 : 1e141ec >
 1e140fc:    25 78             	r5 = 130
 1e140fe:    0d 0a             	sp += 24
 1e14100:    00 5b             	r0 = h[r5 + 32] (u)
 1e14102:    49 6e             	b[r7 + 4] = r1
 1e14104:    66 6f             	r6 = b[r7 + 22] (u)
 1e14106:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x133A : 1e141c2 >
 1e14108:    20 5b             	r0 = h[r5 + 36] (u)
 1e1410a:    4b 45             	[r2 + 80] = r3
 1e1410c:    59 46             	[r3 + 20] = r1
 1e1410e:    4f 42             	[r1 + 16] = r7
 1e14110:    5d 6b             	b[r5 + 21] = r5
 1e14112:    65 79             	r5 = 150
 1e14114:    66 6f             	r6 = b[r7 + 22] (u)
 1e14116:    62 5f             	r2 = h[r7 + 44] (u)
 1e14118:    68 6f             	b[r7 + 22] = r0
 1e1411a:    67 70             	r7 = 6
 1e1411c:    5f 62             	b[r1 + 5] = r7
 1e1411e:    6c 65             	b[r2 + 22] = r4
 1e14120:    5f 73             	r15 = 53
 1e14122:    74 61             	r4 = b[r0 + 23] (u)
 1e14124:    74 75             	r4 = 87
 1e14126:    73 5f             	r3 = h[r7 + 46] (u)
 1e14128:    63 61             	r3 = b[r0 + 22] (u)
 1e1412a:    6c 6c             	b[r6 + 6] = r4
 1e1412c:    62 61             	r2 = b[r0 + 22] (u)
 1e1412e:    63 6b             	r3 = b[r5 + 22] (u)
 1e14130:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1124 : 1e13fac >
 1e14132:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1126 : 1e13fae >
 1e14134:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1128 : 1e13fb0 >
 1e14136:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x112A : 1e13fb2 >
 1e14138:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x112C : 1e13fb4 >
 1e1413a:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x112E : 1e13fb6 >
 1e1413c:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1130 : 1e13fb8 >
 1e1413e:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1132 : 1e13fba >
 1e14140:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1134 : 1e13fbc >
 1e14142:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1136 : 1e13fbe >
 1e14144:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x10FE : 1e13f86 >
 1e14146:    64 20             	if (r0 == 0) goto 200 <update_target_end+0x1388 : 1e14210 >
 1e14148:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1302 : 1e1418a >
 1e1414a:    72 65             	r2 = b[r2 + 23] (u)
 1e1414c:    61 73             	r1 = 54
 1e1414e:    6f 6e             	b[r7 + 6] = r7
 1e14150:    3a 30             	if (r0 != 0) goto 116 <update_target_end+0x133E : 1e141c6 >
 1e14152:    78 25             	if (r2 == 0) goto -272 <update_target_end+0x11BC : 1e14044 >
 1e14154:    78 0a             	sp += 240
 1e14156:    0d 0a             	sp += 24
 1e14158:    00 42             	r0 = [r1 + 0]
 1e1415a:    4c 45             	[r2 + 80] = r4
 1e1415c:    5f 53             	h[r1 + 42] = r7
 1e1415e:    54 5f             	r4 = h[r7 + 42] (u)
 1e14160:    44 49             	r4 = [r4 + 80]
 1e14162:    53 43             	r3 = [r1 + 84]
 1e14164:    4f 4e             	[r7 + 16] = r7
 1e14166:    4e 20             	if (r0 == 0) goto 156 <update_target_end+0x137C : 1e14204 >
 1e14168:    42 59             	r2 = h[r4 + 40] (u)
 1e1416a:    20 4c             	r0 = [r6 + 8]
 1e1416c:    4f 43             	[r1 + 80] = r7
 1e1416e:    41 4c             	r1 = [r6 + 16]
 1e14170:    2e 2e             	if (r7 == 0) goto 92 <update_target_end+0x1346 : 1e141ce >
 1e14172:    2e 0a             	sp += 92
 1e14174:    00 5b             	r0 = h[r5 + 32] (u)
 1e14176:    49 6e             	b[r7 + 4] = r1
 1e14178:    66 6f             	r6 = b[r7 + 22] (u)
 1e1417a:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x13AE : 1e14236 >
 1e1417c:    20 5b             	r0 = h[r5 + 36] (u)
 1e1417e:    4b 45             	[r2 + 80] = r3
 1e14180:    59 46             	[r3 + 20] = r1
 1e14182:    4f 42             	[r1 + 16] = r7
 1e14184:    5d 2d             	if (r6 == 0) goto -326 <update_target_end+0x11B8 : 1e14040 >
 1e14186:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x115A : 1e13fe2 >
 1e14188:    2d 25             	if (r2 == 0) goto -422 <update_target_end+0x115C : 1e13fe4 >
 1e1418a:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x13EA : 1e14272 >
 1e1418c:    72 65             	r2 = b[r2 + 23] (u)
 1e1418e:    61 73             	r1 = 54
 1e14190:    6f 6e             	b[r7 + 6] = r7
 1e14192:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x114C : 1e13fd4 >
 1e14194:    78 20             	if (r0 == 0) goto 240 <update_target_end+0x13FE : 1e14286 >
 1e14196:    25 78             	r5 = 130
 1e14198:    0d 0a             	sp += 24
 1e1419a:    00 6b             	r0 = b[r5 + 16] (u)
 1e1419c:    65 79             	r5 = 150
 1e1419e:    66 6f             	r6 = b[r7 + 22] (u)
 1e141a0:    62 5f             	r2 = h[r7 + 44] (u)
 1e141a2:    62 74             	r2 = 70
 1e141a4:    5f 63             	b[r1 + 21] = r7
 1e141a6:    6f 6d             	b[r6 + 22] = r7
 1e141a8:    6d 6f             	b[r7 + 22] = r5
 1e141aa:    6e 5f             	h[r7 + 44] = r6
 1e141ac:    65 76             	r5 = 102
 1e141ae:    65 6e             	r5 = b[r7 + 6] (u)
 1e141b0:    74 5f             	r4 = h[r7 + 46] (u)
 1e141b2:    68 61             	b[r0 + 22] = r0
 1e141b4:    6e 64             	b[r2 + 6] = r6
 1e141b6:    6c 65             	b[r2 + 22] = r4
 1e141b8:    72 00             	sti r2
 1e141ba:    5b 49             	[r4 + 84] = r3
 1e141bc:    6e 66             	b[r3 + 6] = r6
 1e141be:    6f 5d             	h[r6 + 44] = r7
 1e141c0:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x13AE : 1e14236 >
 1e141c2:    5b 4b             	[r5 + 84] = r3
 1e141c4:    45 59             	r5 = h[r4 + 40] (u)
 1e141c6:    46 4f             	r6 = [r7 + 80]
 1e141c8:    42 5d             	r2 = h[r6 + 40] (u)
 1e141ca:    20 43             	r0 = [r1 + 72]
 1e141cc:    4f 4d             	[r6 + 80] = r7
 1e141ce:    4d 4f             	[r7 + 80] = r5
 1e141d0:    4e 5f             	h[r7 + 40] = r6
 1e141d2:    45 56             	r5 = h[r3 + 8] (u)
 1e141d4:    45 4e             	r5 = [r7 + 16]
 1e141d6:    54 5f             	r4 = h[r7 + 42] (u)
 1e141d8:    45 44             	r5 = [r2 + 16]
 1e141da:    52 5f             	r2 = h[r7 + 42] (u)
 1e141dc:    52 45             	r2 = [r2 + 84]
 1e141de:    4d 4f             	[r7 + 80] = r5
 1e141e0:    54 45             	r4 = [r2 + 84]
 1e141e2:    5f 54             	h[r2 + 10] = r7
 1e141e4:    59 50             	h[r0 + 10] = r1
 1e141e6:    45 20             	if (r0 == 0) goto 138 <update_target_end+0x13EA : 1e14272 >
 1e141e8:    0a 0d             	r10 <<= r4
 1e141ea:    0a 00             	ssync
 1e141ec:    5b 49             	[r4 + 84] = r3
 1e141ee:    6e 66             	b[r3 + 6] = r6
 1e141f0:    6f 5d             	h[r6 + 44] = r7
 1e141f2:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x13E0 : 1e14268 >
 1e141f4:    5b 4b             	[r5 + 84] = r3
 1e141f6:    45 59             	r5 = h[r4 + 40] (u)
 1e141f8:    46 4f             	r6 = [r7 + 80]
 1e141fa:    42 5d             	r2 = h[r6 + 40] (u)
 1e141fc:    20 43             	r0 = [r1 + 72]
 1e141fe:    4f 4d             	[r6 + 80] = r7
 1e14200:    4d 4f             	[r7 + 80] = r5
 1e14202:    4e 5f             	h[r7 + 40] = r6
 1e14204:    45 56             	r5 = h[r3 + 8] (u)
 1e14206:    45 4e             	r5 = [r7 + 16]
 1e14208:    54 5f             	r4 = h[r7 + 42] (u)
 1e1420a:    42 4c             	r2 = [r6 + 16]
 1e1420c:    45 5f             	r5 = h[r7 + 40] (u)
 1e1420e:    52 45             	r2 = [r2 + 84]
 1e14210:    4d 4f             	[r7 + 80] = r5
 1e14212:    54 45             	r4 = [r2 + 84]
 1e14214:    5f 54             	h[r2 + 10] = r7
 1e14216:    59 50             	h[r0 + 10] = r1
 1e14218:    45 20             	if (r0 == 0) goto 138 <update_target_end+0x141C : 1e142a4 >
 1e1421a:    0a 0d             	r10 <<= r4
 1e1421c:    0a 00             	ssync
 1e1421e:    5b 49             	[r4 + 84] = r3
 1e14220:    6e 66             	b[r3 + 6] = r6
 1e14222:    6f 5d             	h[r6 + 44] = r7
 1e14224:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x1412 : 1e1429a >
 1e14226:    5b 4b             	[r5 + 84] = r3
 1e14228:    45 59             	r5 = h[r4 + 40] (u)
 1e1422a:    46 4f             	r6 = [r7 + 80]
 1e1422c:    42 5d             	r2 = h[r6 + 40] (u)
 1e1422e:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x1202 : 1e1408a >
 1e14230:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x1204 : 1e1408c >
 1e14232:    25 73             	r5 = 50
 1e14234:    0d 0a             	sp += 24
 1e14236:    00 6b             	r0 = b[r5 + 16] (u)
 1e14238:    65 79             	r5 = 150
 1e1423a:    66 6f             	r6 = b[r7 + 22] (u)
 1e1423c:    62 5f             	r2 = h[r7 + 44] (u)
 1e1423e:    61 75             	r1 = 86
 1e14240:    74 6f             	r4 = b[r7 + 23] (u)
 1e14242:    5f 73             	r15 = 53
 1e14244:    68 75             	r8 = 86
 1e14246:    74 64             	r4 = b[r2 + 7] (u)
 1e14248:    6f 77             	r15 = 118
 1e1424a:    6e 5f             	h[r7 + 44] = r6
 1e1424c:    64 69             	r4 = b[r4 + 22] (u)
 1e1424e:    73 61             	r3 = b[r0 + 23] (u)
 1e14250:    62 6c             	r2 = b[r6 + 6] (u)
 1e14252:    65 00             	cli r5
 1e14254:    5b 49             	[r4 + 84] = r3
 1e14256:    6e 66             	b[r3 + 6] = r6
 1e14258:    6f 5d             	h[r6 + 44] = r7
 1e1425a:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x1448 : 1e142d0 >
 1e1425c:    5b 4b             	[r5 + 84] = r3
 1e1425e:    45 59             	r5 = h[r4 + 40] (u)
 1e14260:    46 4f             	r6 = [r7 + 80]
 1e14262:    42 5d             	r2 = h[r6 + 40] (u)
 1e14264:    6b 65             	b[r2 + 22] = r3
 1e14266:    79 66             	b[r3 + 7] = r1
 1e14268:    6f 62             	b[r1 + 6] = r7
 1e1426a:    5f 73             	r15 = 53
 1e1426c:    65 74             	r5 = 70
 1e1426e:    5f 73             	r15 = 53
 1e14270:    6f 66             	b[r3 + 6] = r7
 1e14272:    74 5f             	r4 = h[r7 + 46] (u)
 1e14274:    70 6f             	r0 = b[r7 + 23] (u)
 1e14276:    77 65             	r7 = b[r2 + 23] (u)
 1e14278:    72 6f             	r2 = b[r7 + 23] (u)
 1e1427a:    66 66             	r6 = b[r3 + 6] (u)
 1e1427c:    0a 0d             	r10 <<= r4
 1e1427e:    0a 00             	ssync
 1e14280:    5b 49             	[r4 + 84] = r3
 1e14282:    6e 66             	b[r3 + 6] = r6
 1e14284:    6f 5d             	h[r6 + 44] = r7
 1e14286:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x1474 : 1e142fc >
 1e14288:    5b 4b             	[r5 + 84] = r3
 1e1428a:    45 59             	r5 = h[r4 + 40] (u)
 1e1428c:    46 4f             	r6 = [r7 + 80]
 1e1428e:    42 5d             	r2 = h[r6 + 40] (u)
 1e14290:    2d 68             	b[r4 + 2] = r5
 1e14292:    69 64             	b[r2 + 6] = r1
 1e14294:    5f 69             	b[r4 + 21] = r7
 1e14296:    6e 66             	b[r3 + 6] = r6
 1e14298:    6f 20             	if (r0 == 0) goto 222 <update_target_end+0x14F0 : 1e14378 >
 1e1429a:    76 6d             	r6 = b[r6 + 23] (u)
 1e1429c:    5f 64             	b[r2 + 5] = r7
 1e1429e:    6f 3a             	if (r5 != 0) goto 222 <update_target_end+0x14F6 : 1e1437e >
 1e142a0:    25 64             	r5 = b[r2 + 2] (u)
 1e142a2:    0a 0d             	r10 <<= r4
 1e142a4:    0a 00             	ssync
 1e142a6:    5b 49             	[r4 + 84] = r3
 1e142a8:    6e 66             	b[r3 + 6] = r6
 1e142aa:    6f 5d             	h[r6 + 44] = r7
 1e142ac:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x149A : 1e14322 >
 1e142ae:    5b 4b             	[r5 + 84] = r3
 1e142b0:    45 59             	r5 = h[r4 + 40] (u)
 1e142b2:    46 4f             	r6 = [r7 + 80]
 1e142b4:    42 5d             	r2 = h[r6 + 40] (u)
 1e142b6:    2d 6e             	b[r7 + 2] = r5
 1e142b8:    75 6c             	r5 = b[r6 + 7] (u)
 1e142ba:    6c 2d             	if (r6 == 0) goto -296 <update_target_end+0x130C : 1e14194 >
 1e142bc:    2d 0a             	sp += 88
 1e142be:    0d 0a             	sp += 24
 1e142c0:    00 5b             	r0 = h[r5 + 32] (u)
 1e142c2:    49 6e             	b[r7 + 4] = r1
 1e142c4:    66 6f             	r6 = b[r7 + 22] (u)
 1e142c6:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x14FA : 1e14382 >
 1e142c8:    20 5b             	r0 = h[r5 + 36] (u)
 1e142ca:    4b 45             	[r2 + 80] = r3
 1e142cc:    59 46             	[r3 + 20] = r1
 1e142ce:    4f 42             	[r1 + 16] = r7
 1e142d0:    5d 2d             	if (r6 == 0) goto -326 <update_target_end+0x1304 : 1e1418c >
 1e142d2:    65 78             	r5 = 134
 1e142d4:    69 73             	r9 = 54
 1e142d6:    74 2d             	if (r6 == 0) goto -280 <update_target_end+0x1338 : 1e141c0 >
 1e142d8:    2d 0a             	sp += 88
 1e142da:    0d 0a             	sp += 24
 1e142dc:    00 5b             	r0 = h[r5 + 32] (u)
 1e142de:    49 6e             	b[r7 + 4] = r1
 1e142e0:    66 6f             	r6 = b[r7 + 22] (u)
 1e142e2:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x1516 : 1e1439e >
 1e142e4:    20 5b             	r0 = h[r5 + 36] (u)
 1e142e6:    4b 45             	[r2 + 80] = r3
 1e142e8:    59 46             	[r3 + 20] = r1
 1e142ea:    4f 42             	[r1 + 16] = r7
 1e142ec:    5d 2d             	if (r6 == 0) goto -326 <update_target_end+0x1320 : 1e141a8 >
 1e142ee:    77 72             	r7 = 39
 1e142f0:    69 74             	r9 = 70
 1e142f2:    65 30             	if (r0 != 0) goto 202 <update_target_end+0x1536 : 1e143be >
 1e142f4:    30 2d             	if (r6 == 0) goto -416 <update_target_end+0x12CE : 1e14156 >
 1e142f6:    2d 0a             	sp += 88
 1e142f8:    0d 0a             	sp += 24
 1e142fa:    00 5b             	r0 = h[r5 + 32] (u)
 1e142fc:    49 6e             	b[r7 + 4] = r1
 1e142fe:    66 6f             	r6 = b[r7 + 22] (u)
 1e14300:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x1534 : 1e143bc >
 1e14302:    20 5b             	r0 = h[r5 + 36] (u)
 1e14304:    4b 45             	[r2 + 80] = r3
 1e14306:    59 46             	[r3 + 20] = r1
 1e14308:    4f 42             	[r1 + 16] = r7
 1e1430a:    5d 2d             	if (r6 == 0) goto -326 <update_target_end+0x133E : 1e141c6 >
 1e1430c:    77 72             	r7 = 39
 1e1430e:    69 74             	r9 = 70
 1e14310:    65 31             	if (r0 != 0) goto -310 <update_target_end+0x1354 : 1e141dc >
 1e14312:    31 2d             	if (r6 == 0) goto -414 <update_target_end+0x12EE : 1e14176 >
 1e14314:    2d 0a             	sp += 88
 1e14316:    0d 0a             	sp += 24
 1e14318:    00 5b             	r0 = h[r5 + 32] (u)
 1e1431a:    49 6e             	b[r7 + 4] = r1
 1e1431c:    66 6f             	r6 = b[r7 + 22] (u)
 1e1431e:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x1552 : 1e143da >
 1e14320:    20 5b             	r0 = h[r5 + 36] (u)
 1e14322:    4b 45             	[r2 + 80] = r3
 1e14324:    59 46             	[r3 + 20] = r1
 1e14326:    4f 42             	[r1 + 16] = r7
 1e14328:    5d 6c             	b[r6 + 5] = r5
 1e1432a:    65 64             	r5 = b[r2 + 6] (u)
 1e1432c:    5f 73             	r15 = 53
 1e1432e:    74 61             	r4 = b[r0 + 23] (u)
 1e14330:    74 65             	r4 = b[r2 + 23] (u)
 1e14332:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x1520 : 1e143a8 >
 1e14334:    25 64             	r5 = b[r2 + 2] (u)
 1e14336:    3e 3e             	if (r7 != 0) goto 124 <update_target_end+0x152C : 1e143b4 >
 1e14338:    3e 25             	if (r2 == 0) goto -388 <update_target_end+0x132E : 1e141b6 >
 1e1433a:    64 0d             	r4 >>= r5
 1e1433c:    0a 00             	ssync
 1e1433e:    3c 45             	[r2 + 76] = r4
 1e14340:    72 72             	r2 = 39
 1e14342:    6f 72             	r15 = 38
 1e14344:    3e 3a             	if (r5 != 0) goto 124 <update_target_end+0x153A : 1e143c2 >
 1e14346:    20 5b             	r0 = h[r5 + 36] (u)
 1e14348:    4b 45             	[r2 + 80] = r3
 1e1434a:    59 46             	[r3 + 20] = r1
 1e1434c:    4f 42             	[r1 + 16] = r7
 1e1434e:    5d 55             	h[r2 + 42] = r5
 1e14350:    6e 6b             	b[r5 + 22] = r6
 1e14352:    6e 6f             	b[r7 + 22] = r6
 1e14354:    77 20             	if (r0 == 0) goto 238 <update_target_end+0x15BC : 1e14444 >
 1e14356:    6c 65             	b[r2 + 22] = r4
 1e14358:    64 5f             	r4 = h[r7 + 44] (u)
 1e1435a:    73 74             	r3 = 71
 1e1435c:    61 74             	r1 = 70
 1e1435e:    65 3a             	if (r5 != 0) goto 202 <update_target_end+0x15A2 : 1e1442a >
 1e14360:    25 64             	r5 = b[r2 + 2] (u)
 1e14362:    0d 0a             	sp += 24
 1e14364:    00 5b             	r0 = h[r5 + 32] (u)
 1e14366:    49 6e             	b[r7 + 4] = r1
 1e14368:    66 6f             	r6 = b[r7 + 22] (u)
 1e1436a:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x159E : 1e14426 >
 1e1436c:    20 5b             	r0 = h[r5 + 36] (u)
 1e1436e:    4b 45             	[r2 + 80] = r3
 1e14370:    59 46             	[r3 + 20] = r1
 1e14372:    4f 42             	[r1 + 16] = r7
 1e14374:    5d 6c             	b[r6 + 5] = r5
 1e14376:    65 64             	r5 = b[r2 + 6] (u)
 1e14378:    5f 74             	r15 = 69
 1e1437a:    69 6d             	b[r6 + 22] = r1
 1e1437c:    65 72             	r5 = 38
 1e1437e:    20 73             	r0 = 50
 1e14380:    74 6f             	r4 = b[r7 + 23] (u)
 1e14382:    70 0d             	r0 >>>= r5
 1e14384:    0a 00             	ssync
 1e14386:    5b 49             	[r4 + 84] = r3
 1e14388:    6e 66             	b[r3 + 6] = r6
 1e1438a:    6f 5d             	h[r6 + 44] = r7
 1e1438c:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x157A : 1e14402 >
 1e1438e:    5b 4b             	[r5 + 84] = r3
 1e14390:    45 59             	r5 = h[r4 + 40] (u)
 1e14392:    46 4f             	r6 = [r7 + 80]
 1e14394:    42 5d             	r2 = h[r6 + 40] (u)
 1e14396:    6c 65             	b[r2 + 22] = r4
 1e14398:    64 5f             	r4 = h[r7 + 44] (u)
 1e1439a:    74 69             	r4 = b[r4 + 23] (u)
 1e1439c:    6d 65             	b[r2 + 22] = r5
 1e1439e:    72 20             	if (r0 == 0) goto 228 <update_target_end+0x15FC : 1e14484 >
 1e143a0:    73 74             	r3 = 71
 1e143a2:    61 72             	r1 = 38
 1e143a4:    74 20             	if (r0 == 0) goto 232 <update_target_end+0x1606 : 1e1448e >
 1e143a6:    25 64             	r5 = b[r2 + 2] (u)
 1e143a8:    20 6d             	r0 = b[r6 + 18] (u)
 1e143aa:    73 0d             	r3 >>>= r5
 1e143ac:    0a 00             	ssync
 1e143ae:    5b 49             	[r4 + 84] = r3
 1e143b0:    6e 66             	b[r3 + 6] = r6
 1e143b2:    6f 5d             	h[r6 + 44] = r7
 1e143b4:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x15A2 : 1e1442a >
 1e143b6:    5b 4b             	[r5 + 84] = r3
 1e143b8:    45 59             	r5 = h[r4 + 40] (u)
 1e143ba:    46 4f             	r6 = [r7 + 80]
 1e143bc:    42 5d             	r2 = h[r6 + 40] (u)
 1e143be:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x13B2 : 1e1423a >
 1e143c0:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x13B4 : 1e1423c >
 1e143c2:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x13B6 : 1e1423e >
 1e143c4:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x13B8 : 1e14240 >
 1e143c6:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x13BA : 1e14242 >
 1e143c8:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x13BC : 1e14244 >
 1e143ca:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x13BE : 1e14246 >
 1e143cc:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x13C0 : 1e14248 >
 1e143ce:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x13C2 : 1e1424a >
 1e143d0:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x13C4 : 1e1424c >
 1e143d2:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x13C6 : 1e1424e >
 1e143d4:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x13C8 : 1e14250 >
 1e143d6:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x13CA : 1e14252 >
 1e143d8:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x13CC : 1e14254 >
 1e143da:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x13CE : 1e14256 >
 1e143dc:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x13D0 : 1e14258 >
 1e143de:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x13D2 : 1e1425a >
 1e143e0:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x13D4 : 1e1425c >
 1e143e2:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x13D6 : 1e1425e >
 1e143e4:    3d 0d             	r13 >>>= r4
 1e143e6:    0a 00             	ssync
 1e143e8:    5b 49             	[r4 + 84] = r3
 1e143ea:    6e 66             	b[r3 + 6] = r6
 1e143ec:    6f 5d             	h[r6 + 44] = r7
 1e143ee:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x15DC : 1e14464 >
 1e143f0:    5b 4b             	[r5 + 84] = r3
 1e143f2:    45 59             	r5 = h[r4 + 40] (u)
 1e143f4:    46 4f             	r6 = [r7 + 80]
 1e143f6:    42 5d             	r2 = h[r6 + 40] (u)
 1e143f8:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x13CC : 1e14254 >
 1e143fa:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x13CE : 1e14256 >
 1e143fc:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x13D0 : 1e14258 >
 1e143fe:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x13D2 : 1e1425a >
 1e14400:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x13D4 : 1e1425c >
 1e14402:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x13D6 : 1e1425e >
 1e14404:    2d 6b             	b[r5 + 18] = r5
 1e14406:    65 79             	r5 = 150
 1e14408:    66 6f             	r6 = b[r7 + 22] (u)
 1e1440a:    62 20             	if (r0 == 0) goto 196 <update_target_end+0x1648 : 1e144d0 >
 1e1440c:    44 45             	r4 = [r2 + 80]
 1e1440e:    4d 4f             	[r7 + 80] = r5
 1e14410:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x13E4 : 1e1426c >
 1e14412:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x13E6 : 1e1426e >
 1e14414:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x13E8 : 1e14270 >
 1e14416:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x13EA : 1e14272 >
 1e14418:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x13EC : 1e14274 >
 1e1441a:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x13EE : 1e14276 >
 1e1441c:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x13F0 : 1e14278 >
 1e1441e:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x13F2 : 1e1427a >
 1e14420:    2d 0d             	r13 >>= r4
 1e14422:    0a 00             	ssync
 1e14424:    5b 49             	[r4 + 84] = r3
 1e14426:    6e 66             	b[r3 + 6] = r6
 1e14428:    6f 5d             	h[r6 + 44] = r7
 1e1442a:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x1618 : 1e144a0 >
 1e1442c:    5b 4b             	[r5 + 84] = r3
 1e1442e:    45 59             	r5 = h[r4 + 40] (u)
 1e14430:    46 4f             	r6 = [r7 + 80]
 1e14432:    42 5d             	r2 = h[r6 + 40] (u)
 1e14434:    61 70             	r1 = 6
 1e14436:    70 5f             	r0 = h[r7 + 46] (u)
 1e14438:    66 69             	r6 = b[r4 + 22] (u)
 1e1443a:    6c 65             	b[r2 + 22] = r4
 1e1443c:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x162A : 1e144b2 >
 1e1443e:    25 73             	r5 = 50
 1e14440:    0d 0a             	sp += 24
 1e14442:    00 5b             	r0 = h[r5 + 32] (u)
 1e14444:    49 6e             	b[r7 + 4] = r1
 1e14446:    66 6f             	r6 = b[r7 + 22] (u)
 1e14448:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x167C : 1e14504 >
 1e1444a:    20 5b             	r0 = h[r5 + 36] (u)
 1e1444c:    4b 45             	[r2 + 80] = r3
 1e1444e:    59 46             	[r3 + 20] = r1
 1e14450:    4f 42             	[r1 + 16] = r7
 1e14452:    5d 41             	[r0 + 84] = r5
 1e14454:    50 50             	r0 = h[r0 + 10] (u)
 1e14456:    5f 53             	h[r1 + 42] = r7
 1e14458:    54 41             	r4 = [r0 + 84]
 1e1445a:    5f 44             	[r2 + 20] = r7
 1e1445c:    45 53             	r5 = h[r1 + 40] (u)
 1e1445e:    54 52             	r4 = h[r1 + 10] (u)
 1e14460:    4f 59             	h[r4 + 40] = r7
 1e14462:    0a 0d             	r10 <<= r4
 1e14464:    0a 00             	ssync
 1e14466:    5b 49             	[r4 + 84] = r3
 1e14468:    6e 66             	b[r3 + 6] = r6
 1e1446a:    6f 5d             	h[r6 + 44] = r7
 1e1446c:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x165A : 1e144e2 >
 1e1446e:    5b 43             	[r1 + 84] = r3
 1e14470:    4f 4d             	[r6 + 80] = r7
 1e14472:    4d 5f             	h[r7 + 40] = r5
 1e14474:    42 4c             	r2 = [r6 + 16]
 1e14476:    45 5d             	r5 = h[r6 + 40] (u)
 1e14478:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x144C : 1e142d4 >
 1e1447a:    2d 62             	b[r1 + 2] = r5
 1e1447c:    6c 65             	b[r2 + 22] = r4
 1e1447e:    27 73             	r7 = 50
 1e14480:    20 61             	r0 = b[r0 + 18] (u)
 1e14482:    64 64             	r4 = b[r2 + 6] (u)
 1e14484:    72 65             	r2 = b[r2 + 23] (u)
 1e14486:    73 73             	r3 = 55
 1e14488:    0d 0a             	sp += 24
 1e1448a:    00 5b             	r0 = h[r5 + 32] (u)
 1e1448c:    49 6e             	b[r7 + 4] = r1
 1e1448e:    66 6f             	r6 = b[r7 + 22] (u)
 1e14490:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x16C4 : 1e1454c >
 1e14492:    20 5b             	r0 = h[r5 + 36] (u)
 1e14494:    43 4f             	r3 = [r7 + 80]
 1e14496:    4d 4d             	[r6 + 80] = r5
 1e14498:    5f 42             	[r1 + 20] = r7
 1e1449a:    4c 45             	[r2 + 80] = r4
 1e1449c:    5d 3d             	if (r6 != 0) goto -326 <update_target_end+0x14D0 : 1e14358 >
 1e1449e:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1492 : 1e1431a >
 1e144a0:    62 74             	r2 = 70
 1e144a2:    73 74             	r3 = 71
 1e144a4:    61 63             	r1 = b[r1 + 22] (u)
 1e144a6:    6b 5f             	h[r7 + 44] = r3
 1e144a8:    65 78             	r5 = 134
 1e144aa:    69 74             	r9 = 70
 1e144ac:    0a 0d             	r10 <<= r4
 1e144ae:    0a 00             	ssync
 1e144b0:    5b 49             	[r4 + 84] = r3
 1e144b2:    6e 66             	b[r3 + 6] = r6
 1e144b4:    6f 5d             	h[r6 + 44] = r7
 1e144b6:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x16A4 : 1e1452c >
 1e144b8:    5b 43             	[r1 + 84] = r3
 1e144ba:    4f 4d             	[r6 + 80] = r7
 1e144bc:    4d 5f             	h[r7 + 40] = r5
 1e144be:    42 4c             	r2 = [r6 + 16]
 1e144c0:    45 5d             	r5 = h[r6 + 40] (u)
 1e144c2:    54 45             	r4 = [r2 + 84]
 1e144c4:    53 54             	r3 = h[r2 + 10] (u)
 1e144c6:    5f 42             	[r1 + 20] = r7
 1e144c8:    4f 58             	h[r4 + 8] = r7
 1e144ca:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x14B8 : 1e14340 >
 1e144cc:    64 0d             	r4 >>= r5
 1e144ce:    0a 00             	ssync
 1e144d0:    5b 49             	[r4 + 84] = r3
 1e144d2:    6e 66             	b[r3 + 6] = r6
 1e144d4:    6f 5d             	h[r6 + 44] = r7
 1e144d6:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x16C4 : 1e1454c >
 1e144d8:    5b 43             	[r1 + 84] = r3
 1e144da:    4f 4d             	[r6 + 80] = r7
 1e144dc:    4d 5f             	h[r7 + 40] = r5
 1e144de:    42 4c             	r2 = [r6 + 16]
 1e144e0:    45 5d             	r5 = h[r6 + 40] (u)
 1e144e2:    63 6c             	r3 = b[r6 + 6] (u)
 1e144e4:    65 61             	r5 = b[r0 + 22] (u)
 1e144e6:    72 5f             	r2 = h[r7 + 46] (u)
 1e144e8:    74 65             	r4 = b[r2 + 23] (u)
 1e144ea:    73 74             	r3 = 71
 1e144ec:    5f 62             	b[r1 + 5] = r7
 1e144ee:    6f 78             	r15 = 134
 1e144f0:    5f 66             	b[r3 + 5] = r7
 1e144f2:    6c 61             	b[r0 + 22] = r4
 1e144f4:    67 0d             	r7 >>= r5
 1e144f6:    0a 00             	ssync
 1e144f8:    62 6c             	r2 = b[r6 + 6] (u)
 1e144fa:    65 5f             	r5 = h[r7 + 44] (u)
 1e144fc:    68 6f             	b[r7 + 22] = r0
 1e144fe:    67 70             	r7 = 6
 1e14500:    00 5b             	r0 = h[r5 + 32] (u)
 1e14502:    42 4c             	r2 = [r6 + 16]
 1e14504:    45 5f             	r5 = h[r7 + 40] (u)
 1e14506:    48 4f             	[r7 + 80] = r0
 1e14508:    47 50             	r7 = h[r0 + 8] (u)
 1e1450a:    5d 61             	b[r0 + 21] = r5
 1e1450c:    64 76             	r4 = 102
 1e1450e:    5f 74             	r15 = 69
 1e14510:    79 70             	r9 = 7
 1e14512:    65 3a             	if (r5 != 0) goto 202 <update_target_end+0x1756 : 1e145de >
 1e14514:    25 64             	r5 = b[r2 + 2] (u)
 1e14516:    2c 63             	b[r1 + 18] = r4
 1e14518:    68 61             	b[r0 + 22] = r0
 1e1451a:    6e 6e             	b[r7 + 6] = r6
 1e1451c:    65 6c             	r5 = b[r6 + 6] (u)
 1e1451e:    3d 25             	if (r2 == 0) goto -390 <update_target_end+0x1512 : 1e1439a >
 1e14520:    30 32             	if (r1 != 0) goto 96 <update_target_end+0x16FA : 1e14582 >
 1e14522:    78 0a             	sp += 240
 1e14524:    20 00             	rts
 1e14526:    5b 42             	[r1 + 20] = r3
 1e14528:    4c 45             	[r2 + 80] = r4
 1e1452a:    5f 48             	[r4 + 20] = r7
 1e1452c:    4f 47             	[r3 + 80] = r7
 1e1452e:    50 5d             	r0 = h[r6 + 42] (u)
 1e14530:    61 64             	r1 = b[r2 + 6] (u)
 1e14532:    76 5f             	r6 = h[r7 + 46] (u)
 1e14534:    73 65             	r3 = b[r2 + 23] (u)
 1e14536:    74 75             	r4 = 87
 1e14538:    70 5f             	r0 = h[r7 + 46] (u)
 1e1453a:    69 6e             	b[r7 + 6] = r1
 1e1453c:    69 74             	r9 = 70
 1e1453e:    20 66             	r0 = b[r3 + 2] (u)
 1e14540:    61 69             	r1 = b[r4 + 22] (u)
 1e14542:    6c 21             	if (r0 == 0) goto -296 <update_target_end+0x1594 : 1e1441c >
 1e14544:    21 21             	if (r0 == 0) goto -446 <update_target_end+0x1500 : 1e14388 >
 1e14546:    0a 20             	if (r0 == 0) goto 20 <update_target_end+0x16D4 : 1e1455c >
 1e14548:    00 2a             	if (r5 == 0) goto 0 <update_target_end+0x16C2 : 1e1454a >
 1e1454a:    2a 2a             	if (r5 == 0) goto 84 <update_target_end+0x1718 : 1e145a0 >
 1e1454c:    72 73             	r2 = 55
 1e1454e:    70 5f             	r0 = h[r7 + 46] (u)
 1e14550:    64 61             	r4 = b[r0 + 22] (u)
 1e14552:    74 61             	r4 = b[r0 + 23] (u)
 1e14554:    20 6f             	r0 = b[r7 + 18] (u)
 1e14556:    76 65             	r6 = b[r2 + 23] (u)
 1e14558:    72 66             	r2 = b[r3 + 7] (u)
 1e1455a:    6c 6f             	b[r7 + 22] = r4
 1e1455c:    77 21             	if (r0 == 0) goto -274 <update_target_end+0x15C4 : 1e1444c >
 1e1455e:    21 21             	if (r0 == 0) goto -446 <update_target_end+0x151A : 1e143a2 >
 1e14560:    21 21             	if (r0 == 0) goto -446 <update_target_end+0x151C : 1e143a4 >
 1e14562:    21 0a             	sp += 64
 1e14564:    00 5b             	r0 = h[r5 + 32] (u)
 1e14566:    42 4c             	r2 = [r6 + 16]
 1e14568:    45 5f             	r5 = h[r7 + 40] (u)
 1e1456a:    48 4f             	[r7 + 80] = r0
 1e1456c:    47 50             	r7 = h[r0 + 8] (u)
 1e1456e:    5d 72             	r13 = 37
 1e14570:    73 70             	r3 = 7
 1e14572:    5f 64             	b[r2 + 5] = r7
 1e14574:    61 74             	r1 = 70
 1e14576:    61 28             	if (r4 == 0) goto 194 <update_target_end+0x17B2 : 1e1463a >
 1e14578:    25 64             	r5 = b[r2 + 2] (u)
 1e1457a:    29 3a             	if (r5 != 0) goto 82 <update_target_end+0x1746 : 1e145ce >
 1e1457c:    20 00             	rts
 1e1457e:    2a 2a             	if (r5 == 0) goto 84 <update_target_end+0x174C : 1e145d4 >
 1e14580:    2a 68             	b[r4 + 2] = r2
 1e14582:    6f 67             	b[r3 + 22] = r7
 1e14584:    70 5f             	r0 = h[r7 + 46] (u)
 1e14586:    61 64             	r1 = b[r2 + 6] (u)
 1e14588:    76 5f             	r6 = h[r7 + 46] (u)
 1e1458a:    64 61             	r4 = b[r0 + 22] (u)
 1e1458c:    74 61             	r4 = b[r0 + 23] (u)
 1e1458e:    20 6f             	r0 = b[r7 + 18] (u)
 1e14590:    76 65             	r6 = b[r2 + 23] (u)
 1e14592:    72 66             	r2 = b[r3 + 7] (u)
 1e14594:    6c 6f             	b[r7 + 22] = r4
 1e14596:    77 21             	if (r0 == 0) goto -274 <update_target_end+0x15FE : 1e14486 >
 1e14598:    21 21             	if (r0 == 0) goto -446 <update_target_end+0x1554 : 1e143dc >
 1e1459a:    21 21             	if (r0 == 0) goto -446 <update_target_end+0x1556 : 1e143de >
 1e1459c:    21 0a             	sp += 64
 1e1459e:    00 5b             	r0 = h[r5 + 32] (u)
 1e145a0:    42 4c             	r2 = [r6 + 16]
 1e145a2:    45 5f             	r5 = h[r7 + 40] (u)
 1e145a4:    48 4f             	[r7 + 80] = r0
 1e145a6:    47 50             	r7 = h[r0 + 8] (u)
 1e145a8:    5d 68             	b[r4 + 5] = r5
 1e145aa:    6f 67             	b[r3 + 22] = r7
 1e145ac:    70 5f             	r0 = h[r7 + 46] (u)
 1e145ae:    61 64             	r1 = b[r2 + 6] (u)
 1e145b0:    76 5f             	r6 = h[r7 + 46] (u)
 1e145b2:    64 61             	r4 = b[r0 + 22] (u)
 1e145b4:    74 61             	r4 = b[r0 + 23] (u)
 1e145b6:    28 25             	if (r2 == 0) goto -432 <update_target_end+0x1580 : 1e14408 >
 1e145b8:    64 29             	if (r4 == 0) goto -312 <update_target_end+0x15FA : 1e14482 >
 1e145ba:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x17A8 : 1e14630 >
 1e145bc:    00 5b             	r0 = h[r5 + 32] (u)
 1e145be:    42 4c             	r2 = [r6 + 16]
 1e145c0:    45 5f             	r5 = h[r7 + 40] (u)
 1e145c2:    48 4f             	[r7 + 80] = r0
 1e145c4:    47 50             	r7 = h[r0 + 8] (u)
 1e145c6:    5d 52             	h[r1 + 10] = r5
 1e145c8:    45 43             	r5 = [r1 + 80]
 1e145ca:    4f 4e             	[r7 + 16] = r7
 1e145cc:    4e 45             	[r2 + 80] = r6
 1e145ce:    43 54             	r3 = h[r2 + 8] (u)
 1e145d0:    5f 41             	[r0 + 84] = r7
 1e145d2:    44 56             	r4 = h[r3 + 8] (u)
 1e145d4:    31 3d             	if (r6 != 0) goto -414 <update_target_end+0x15B0 : 1e14438 >
 1e145d6:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x1590 : 1e14418 >
 1e145d8:    30 32             	if (r1 != 0) goto 96 <update_target_end+0x17B2 : 1e1463a >
 1e145da:    78 2c             	if (r6 == 0) goto 240 <update_target_end+0x1844 : 1e146cc >
 1e145dc:    20 61             	r0 = b[r0 + 18] (u)
 1e145de:    64 64             	r4 = b[r2 + 6] (u)
 1e145e0:    72 65             	r2 = b[r2 + 23] (u)
 1e145e2:    73 73             	r3 = 55
 1e145e4:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x17D2 : 1e1465a >
 1e145e6:    00 5b             	r0 = h[r5 + 32] (u)
 1e145e8:    42 4c             	r2 = [r6 + 16]
 1e145ea:    45 5f             	r5 = h[r7 + 40] (u)
 1e145ec:    48 4f             	[r7 + 80] = r0
 1e145ee:    47 50             	r7 = h[r0 + 8] (u)
 1e145f0:    5d 2d             	if (r6 == 0) goto -326 <update_target_end+0x1624 : 1e144ac >
 1e145f2:    68 6f             	b[r7 + 22] = r0
 1e145f4:    67 70             	r7 = 6
 1e145f6:    5f 70             	r15 = 5
 1e145f8:    61 69             	r1 = b[r4 + 22] (u)
 1e145fa:    72 5f             	r2 = h[r7 + 46] (u)
 1e145fc:    69 6e             	b[r7 + 6] = r1
 1e145fe:    66 6f             	r6 = b[r7 + 22] (u)
 1e14600:    20 76             	r0 = 98
 1e14602:    6d 5f             	h[r7 + 44] = r5
 1e14604:    64 6f             	r4 = b[r7 + 22] (u)
 1e14606:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x15F4 : 1e1447c >
 1e14608:    64 0a             	sp += 200
 1e1460a:    20 00             	rts
 1e1460c:    5b 42             	[r1 + 20] = r3
 1e1460e:    4c 45             	[r2 + 80] = r4
 1e14610:    5f 48             	[r4 + 20] = r7
 1e14612:    4f 47             	[r3 + 80] = r7
 1e14614:    50 5d             	r0 = h[r6 + 42] (u)
 1e14616:    2d 6e             	b[r7 + 2] = r5
 1e14618:    75 6c             	r5 = b[r6 + 7] (u)
 1e1461a:    6c 2d             	if (r6 == 0) goto -296 <update_target_end+0x166C : 1e144f4 >
 1e1461c:    2d 0a             	sp += 88
 1e1461e:    20 00             	rts
 1e14620:    5b 42             	[r1 + 20] = r3
 1e14622:    4c 45             	[r2 + 80] = r4
 1e14624:    5f 48             	[r4 + 20] = r7
 1e14626:    4f 47             	[r3 + 80] = r7
 1e14628:    50 5d             	r0 = h[r6 + 42] (u)
 1e1462a:    2d 65             	b[r2 + 18] = r5
 1e1462c:    78 69             	b[r4 + 23] = r0
 1e1462e:    73 74             	r3 = 71
 1e14630:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x1604 : 1e1448c >
 1e14632:    0a 20             	if (r0 == 0) goto 20 <update_target_end+0x17C0 : 1e14648 >
 1e14634:    00 5b             	r0 = h[r5 + 32] (u)
 1e14636:    42 4c             	r2 = [r6 + 16]
 1e14638:    45 5f             	r5 = h[r7 + 40] (u)
 1e1463a:    48 4f             	[r7 + 80] = r0
 1e1463c:    47 50             	r7 = h[r0 + 8] (u)
 1e1463e:    5d 2d             	if (r6 == 0) goto -326 <update_target_end+0x1672 : 1e144fa >
 1e14640:    72 65             	r2 = b[r2 + 23] (u)
 1e14642:    73 65             	r3 = b[r2 + 23] (u)
 1e14644:    74 20             	if (r0 == 0) goto 232 <update_target_end+0x18A6 : 1e1472e >
 1e14646:    76 6d             	r6 = b[r6 + 23] (u)
 1e14648:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x161C : 1e144a4 >
 1e1464a:    0a 20             	if (r0 == 0) goto 20 <update_target_end+0x17D8 : 1e14660 >
 1e1464c:    00 5b             	r0 = h[r5 + 32] (u)
 1e1464e:    42 4c             	r2 = [r6 + 16]
 1e14650:    45 5f             	r5 = h[r7 + 40] (u)
 1e14652:    48 4f             	[r7 + 80] = r0
 1e14654:    47 50             	r7 = h[r0 + 8] (u)
 1e14656:    5d 25             	if (r2 == 0) goto -326 <update_target_end+0x168A : 1e14512 >
 1e14658:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x18B8 : 1e14740 >
 1e1465a:    00 62             	r0 = b[r1 + 0] (u)
 1e1465c:    74 5f             	r4 = h[r7 + 46] (u)
 1e1465e:    62 6c             	r2 = b[r6 + 6] (u)
 1e14660:    65 5f             	r5 = h[r7 + 44] (u)
 1e14662:    62 65             	r2 = b[r2 + 22] (u)
 1e14664:    66 6f             	r6 = b[r7 + 22] (u)
 1e14666:    72 65             	r2 = b[r2 + 23] (u)
 1e14668:    5f 73             	r15 = 53
 1e1466a:    74 61             	r4 = b[r0 + 23] (u)
 1e1466c:    72 74             	r2 = 71
 1e1466e:    5f 69             	b[r4 + 21] = r7
 1e14670:    6e 69             	b[r4 + 22] = r6
 1e14672:    74 00             	sti r4
 1e14674:    5b 42             	[r1 + 20] = r3
 1e14676:    4c 45             	[r2 + 80] = r4
 1e14678:    5f 48             	[r4 + 20] = r7
 1e1467a:    4f 47             	[r3 + 80] = r7
 1e1467c:    50 5d             	r0 = h[r6 + 42] (u)
 1e1467e:    49 4e             	[r7 + 16] = r1
 1e14680:    44 49             	r4 = [r4 + 80]
 1e14682:    43 41             	r3 = [r0 + 80]
 1e14684:    54 49             	r4 = [r4 + 84]
 1e14686:    4f 4e             	[r7 + 16] = r7
 1e14688:    5f 43             	[r1 + 84] = r7
 1e1468a:    4f 4d             	[r6 + 80] = r7
 1e1468c:    50 4c             	r0 = [r6 + 20]
 1e1468e:    45 54             	r5 = h[r2 + 8] (u)
 1e14690:    45 3a             	if (r5 != 0) goto 138 <update_target_end+0x1894 : 1e1471c >
 1e14692:    63 6f             	r3 = b[r7 + 22] (u)
 1e14694:    6e 5f             	h[r7 + 44] = r6
 1e14696:    68 61             	b[r0 + 22] = r0
 1e14698:    6e 64             	b[r2 + 6] = r6
 1e1469a:    6c 65             	b[r2 + 22] = r4
 1e1469c:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x1890 : 1e14718 >
 1e1469e:    25 30             	if (r0 != 0) goto 74 <update_target_end+0x1862 : 1e146ea >
 1e146a0:    34 78             	r4 = 131
 1e146a2:    2c 61             	b[r0 + 18] = r4
 1e146a4:    74 74             	r4 = 71
 1e146a6:    5f 68             	b[r4 + 5] = r7
 1e146a8:    61 6e             	r1 = b[r7 + 6] (u)
 1e146aa:    64 6c             	r4 = b[r6 + 6] (u)
 1e146ac:    65 3d             	if (r6 != 0) goto -310 <update_target_end+0x16F0 : 1e14578 >
 1e146ae:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x1668 : 1e144f0 >
 1e146b0:    30 34             	if (r2 != 0) goto 96 <update_target_end+0x188A : 1e14712 >
 1e146b2:    78 0a             	sp += 240
 1e146b4:    20 00             	rts
 1e146b6:    5b 42             	[r1 + 20] = r3
 1e146b8:    4c 45             	[r2 + 80] = r4
 1e146ba:    5f 48             	[r4 + 20] = r7
 1e146bc:    4f 47             	[r3 + 80] = r7
 1e146be:    50 5d             	r0 = h[r6 + 42] (u)
 1e146c0:    63 6f             	r3 = b[r7 + 22] (u)
 1e146c2:    6e 6e             	b[r7 + 6] = r6
 1e146c4:    65 63             	r5 = b[r1 + 22] (u)
 1e146c6:    74 69             	r4 = b[r4 + 23] (u)
 1e146c8:    6f 6e             	b[r7 + 6] = r7
 1e146ca:    5f 68             	b[r4 + 5] = r7
 1e146cc:    61 6e             	r1 = b[r7 + 6] (u)
 1e146ce:    64 6c             	r4 = b[r6 + 6] (u)
 1e146d0:    65 3a             	if (r5 != 0) goto 202 <update_target_end+0x1914 : 1e1479c >
 1e146d2:    25 30             	if (r0 != 0) goto 74 <update_target_end+0x1896 : 1e1471e >
 1e146d4:    34 78             	r4 = 131
 1e146d6:    2c 20             	if (r0 == 0) goto 88 <update_target_end+0x18A8 : 1e14730 >
 1e146d8:    72 73             	r2 = 55
 1e146da:    73 69             	r3 = b[r4 + 23] (u)
 1e146dc:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x18D0 : 1e14758 >
 1e146de:    25 64             	r5 = b[r2 + 2] (u)
 1e146e0:    0a 20             	if (r0 == 0) goto 20 <update_target_end+0x186E : 1e146f6 >
 1e146e2:    00 5b             	r0 = h[r5 + 32] (u)
 1e146e4:    42 4c             	r2 = [r6 + 16]
 1e146e6:    45 5f             	r5 = h[r7 + 40] (u)
 1e146e8:    48 4f             	[r7 + 80] = r0
 1e146ea:    47 50             	r7 = h[r0 + 8] (u)
 1e146ec:    5d 70             	r13 = 5
 1e146ee:    65 65             	r5 = b[r2 + 22] (u)
 1e146f0:    72 5f             	r2 = h[r7 + 46] (u)
 1e146f2:    61 64             	r1 = b[r2 + 6] (u)
 1e146f4:    64 72             	r4 = 38
 1e146f6:    65 73             	r5 = 54
 1e146f8:    73 5f             	r3 = h[r7 + 46] (u)
 1e146fa:    69 6e             	b[r7 + 6] = r1
 1e146fc:    66 6f             	r6 = b[r7 + 22] (u)
 1e146fe:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x18EC : 1e14774 >
 1e14700:    00 5b             	r0 = h[r5 + 32] (u)
 1e14702:    42 4c             	r2 = [r6 + 16]
 1e14704:    45 5f             	r5 = h[r7 + 40] (u)
 1e14706:    48 4f             	[r7 + 80] = r0
 1e14708:    47 50             	r7 = h[r0 + 8] (u)
 1e1470a:    5d 63             	b[r1 + 21] = r5
 1e1470c:    6f 6e             	b[r7 + 6] = r7
 1e1470e:    5f 69             	b[r4 + 21] = r7
 1e14710:    6e 74             	r14 = 70
 1e14712:    65 72             	r5 = 38
 1e14714:    76 61             	r6 = b[r0 + 23] (u)
 1e14716:    6c 20             	if (r0 == 0) goto 216 <update_target_end+0x1968 : 1e147f0 >
 1e14718:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x190C : 1e14794 >
 1e1471a:    25 64             	r5 = b[r2 + 2] (u)
 1e1471c:    0a 20             	if (r0 == 0) goto 20 <update_target_end+0x18AA : 1e14732 >
 1e1471e:    00 5b             	r0 = h[r5 + 32] (u)
 1e14720:    42 4c             	r2 = [r6 + 16]
 1e14722:    45 5f             	r5 = h[r7 + 40] (u)
 1e14724:    48 4f             	[r7 + 80] = r0
 1e14726:    47 50             	r7 = h[r0 + 8] (u)
 1e14728:    5d 63             	b[r1 + 21] = r5
 1e1472a:    6f 6e             	b[r7 + 6] = r7
 1e1472c:    5f 6c             	b[r6 + 5] = r7
 1e1472e:    61 74             	r1 = 70
 1e14730:    65 6e             	r5 = b[r7 + 6] (u)
 1e14732:    63 79             	r3 = 150
 1e14734:    20 3d             	if (r6 != 0) goto -448 <update_target_end+0x16EE : 1e14576 >
 1e14736:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x16F0 : 1e14578 >
 1e14738:    64 0a             	sp += 200
 1e1473a:    20 00             	rts
 1e1473c:    5b 42             	[r1 + 20] = r3
 1e1473e:    4c 45             	[r2 + 80] = r4
 1e14740:    5f 48             	[r4 + 20] = r7
 1e14742:    4f 47             	[r3 + 80] = r7
 1e14744:    50 5d             	r0 = h[r6 + 42] (u)
 1e14746:    63 6e             	r3 = b[r7 + 6] (u)
 1e14748:    6e 5f             	h[r7 + 44] = r6
 1e1474a:    74 69             	r4 = b[r4 + 23] (u)
 1e1474c:    6d 65             	b[r2 + 22] = r5
 1e1474e:    6f 75             	r15 = 86
 1e14750:    74 20             	if (r0 == 0) goto 232 <update_target_end+0x19B2 : 1e1483a >
 1e14752:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x1946 : 1e147ce >
 1e14754:    25 64             	r5 = b[r2 + 2] (u)
 1e14756:    0a 20             	if (r0 == 0) goto 20 <update_target_end+0x18E4 : 1e1476c >
 1e14758:    00 5b             	r0 = h[r5 + 32] (u)
 1e1475a:    42 4c             	r2 = [r6 + 16]
 1e1475c:    45 5f             	r5 = h[r7 + 40] (u)
 1e1475e:    48 4f             	[r7 + 80] = r0
 1e14760:    47 50             	r7 = h[r0 + 8] (u)
 1e14762:    5d 64             	b[r2 + 5] = r5
 1e14764:    69 73             	r9 = 54
 1e14766:    63 6f             	r3 = b[r7 + 22] (u)
 1e14768:    6e 6e             	b[r7 + 6] = r6
 1e1476a:    65 63             	r5 = b[r1 + 22] (u)
 1e1476c:    74 5f             	r4 = h[r7 + 46] (u)
 1e1476e:    68 61             	b[r0 + 22] = r0
 1e14770:    6e 64             	b[r2 + 6] = r6
 1e14772:    6c 65             	b[r2 + 22] = r4
 1e14774:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x1762 : 1e145ea >
 1e14776:    30 34             	if (r2 != 0) goto 96 <update_target_end+0x1950 : 1e147d8 >
 1e14778:    78 2c             	if (r6 == 0) goto 240 <update_target_end+0x19E2 : 1e1486a >
 1e1477a:    72 65             	r2 = b[r2 + 23] (u)
 1e1477c:    61 73             	r1 = 54
 1e1477e:    6f 6e             	b[r7 + 6] = r7
 1e14780:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x1974 : 1e147fc >
 1e14782:    25 30             	if (r0 != 0) goto 74 <update_target_end+0x1946 : 1e147ce >
 1e14784:    32 78             	r2 = 131
 1e14786:    0a 20             	if (r0 == 0) goto 20 <update_target_end+0x1914 : 1e1479c >
 1e14788:    00 5b             	r0 = h[r5 + 32] (u)
 1e1478a:    42 4c             	r2 = [r6 + 16]
 1e1478c:    45 5f             	r5 = h[r7 + 40] (u)
 1e1478e:    48 4f             	[r7 + 80] = r0
 1e14790:    47 50             	r7 = h[r0 + 8] (u)
 1e14792:    5d 45             	[r2 + 84] = r5
 1e14794:    4e 43             	[r1 + 80] = r6
 1e14796:    52 59             	r2 = h[r4 + 42] (u)
 1e14798:    50 54             	r0 = h[r2 + 10] (u)
 1e1479a:    49 4f             	[r7 + 80] = r1
 1e1479c:    4e 5f             	h[r7 + 40] = r6
 1e1479e:    43 48             	r3 = [r4 + 16]
 1e147a0:    41 4e             	r1 = [r7 + 16]
 1e147a2:    47 45             	r7 = [r2 + 80]
 1e147a4:    3a 68             	b[r4 + 3] = r2
 1e147a6:    61 6e             	r1 = b[r7 + 6] (u)
 1e147a8:    64 6c             	r4 = b[r6 + 6] (u)
 1e147aa:    65 3d             	if (r6 != 0) goto -310 <update_target_end+0x17EE : 1e14676 >
 1e147ac:    25 30             	if (r0 != 0) goto 74 <update_target_end+0x1970 : 1e147f8 >
 1e147ae:    34 78             	r4 = 131
 1e147b0:    2c 73             	r12 = 50
 1e147b2:    74 61             	r4 = b[r0 + 23] (u)
 1e147b4:    74 65             	r4 = b[r2 + 23] (u)
 1e147b6:    3d 25             	if (r2 == 0) goto -390 <update_target_end+0x17AA : 1e14632 >
 1e147b8:    64 2c             	if (r6 == 0) goto 200 <update_target_end+0x19FA : 1e14882 >
 1e147ba:    70 72             	r0 = 39
 1e147bc:    6f 63             	b[r1 + 22] = r7
 1e147be:    65 73             	r5 = 54
 1e147c0:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x1A20 : 1e148a8 >
 1e147c2:    3d 25             	if (r2 == 0) goto -390 <update_target_end+0x17B6 : 1e1463e >
 1e147c4:    30 32             	if (r1 != 0) goto 96 <update_target_end+0x199E : 1e14826 >
 1e147c6:    78 20             	if (r0 == 0) goto 240 <update_target_end+0x1A30 : 1e148b8 >
 1e147c8:    00 5b             	r0 = h[r5 + 32] (u)
 1e147ca:    42 4c             	r2 = [r6 + 16]
 1e147cc:    45 5f             	r5 = h[r7 + 40] (u)
 1e147ce:    48 4f             	[r7 + 80] = r0
 1e147d0:    47 50             	r7 = h[r0 + 8] (u)
 1e147d2:    5d 72             	r13 = 37
 1e147d4:    65 63             	r5 = b[r1 + 22] (u)
 1e147d6:    6f 6e             	b[r7 + 6] = r7
 1e147d8:    6e 65             	b[r2 + 22] = r6
 1e147da:    63 74             	r3 = 70
 1e147dc:    2e 2e             	if (r7 == 0) goto 92 <update_target_end+0x19B2 : 1e1483a >
 1e147de:    2e 0a             	sp += 92
 1e147e0:    20 00             	rts
 1e147e2:    5b 42             	[r1 + 20] = r3
 1e147e4:    4c 45             	[r2 + 80] = r4
 1e147e6:    5f 48             	[r4 + 20] = r7
 1e147e8:    4f 47             	[r3 + 80] = r7
 1e147ea:    50 5d             	r0 = h[r6 + 42] (u)
 1e147ec:    75 70             	r5 = 7
 1e147ee:    64 61             	r4 = b[r0 + 22] (u)
 1e147f0:    74 65             	r4 = b[r2 + 23] (u)
 1e147f2:    20 72             	r0 = 34
 1e147f4:    65 63             	r5 = b[r1 + 22] (u)
 1e147f6:    6f 6e             	b[r7 + 6] = r7
 1e147f8:    6e 65             	b[r2 + 22] = r6
 1e147fa:    63 74             	r3 = 70
 1e147fc:    20 70             	r0 = 2
 1e147fe:    65 65             	r5 = b[r2 + 22] (u)
 1e14800:    72 0a             	sp += 228
 1e14802:    20 00             	rts
 1e14804:    5b 42             	[r1 + 20] = r3
 1e14806:    4c 45             	[r2 + 80] = r4
 1e14808:    5f 48             	[r4 + 20] = r7
 1e1480a:    4f 47             	[r3 + 80] = r7
 1e1480c:    50 5d             	r0 = h[r6 + 42] (u)
 1e1480e:    5f 5f             	h[r7 + 42] = r7
 1e14810:    68 6f             	b[r7 + 22] = r0
 1e14812:    67 70             	r7 = 6
 1e14814:    5f 72             	r15 = 37
 1e14816:    65 73             	r5 = 54
 1e14818:    75 6d             	r5 = b[r6 + 23] (u)
 1e1481a:    65 5f             	r5 = h[r7 + 44] (u)
 1e1481c:    61 6c             	r1 = b[r6 + 6] (u)
 1e1481e:    6c 5f             	h[r7 + 44] = r4
 1e14820:    63 63             	r3 = b[r1 + 22] (u)
 1e14822:    63 5f             	r3 = h[r7 + 44] (u)
 1e14824:    65 6e             	r5 = b[r7 + 6] (u)
 1e14826:    61 62             	r1 = b[r1 + 6] (u)
 1e14828:    6c 65             	b[r2 + 22] = r4
 1e1482a:    0a 20             	if (r0 == 0) goto 20 <update_target_end+0x19B8 : 1e14840 >
 1e1482c:    00 5b             	r0 = h[r5 + 32] (u)
 1e1482e:    42 4c             	r2 = [r6 + 16]
 1e14830:    45 5f             	r5 = h[r7 + 40] (u)
 1e14832:    48 4f             	[r7 + 80] = r0
 1e14834:    47 50             	r7 = h[r0 + 8] (u)
 1e14836:    5d 6c             	b[r6 + 5] = r5
 1e14838:    69 73             	r9 = 54
 1e1483a:    74 27             	if (r3 == 0) goto -280 <update_target_end+0x189C : 1e14724 >
 1e1483c:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x1A9C : 1e14924 >
 1e1483e:    72 65             	r2 = b[r2 + 23] (u)
 1e14840:    6d 6f             	b[r7 + 22] = r5
 1e14842:    74 65             	r4 = b[r2 + 23] (u)
 1e14844:    5f 74             	r15 = 69
 1e14846:    79 70             	r9 = 7
 1e14848:    65 3a             	if (r5 != 0) goto 202 <update_target_end+0x1A8C : 1e14914 >
 1e1484a:    25 64             	r5 = b[r2 + 2] (u)
 1e1484c:    0a 20             	if (r0 == 0) goto 20 <update_target_end+0x19DA : 1e14862 >
 1e1484e:    00 5b             	r0 = h[r5 + 32] (u)
 1e14850:    42 4c             	r2 = [r6 + 16]
 1e14852:    45 5f             	r5 = h[r7 + 40] (u)
 1e14854:    48 4f             	[r7 + 80] = r0
 1e14856:    47 50             	r7 = h[r0 + 8] (u)
 1e14858:    5d 66             	b[r3 + 5] = r5
 1e1485a:    69 72             	r9 = 38
 1e1485c:    73 74             	r3 = 71
 1e1485e:    20 70             	r0 = 2
 1e14860:    61 69             	r1 = b[r4 + 22] (u)
 1e14862:    72 2e             	if (r7 == 0) goto 228 <update_target_end+0x1AC0 : 1e14948 >
 1e14864:    2e 2e             	if (r7 == 0) goto 92 <update_target_end+0x1A3A : 1e148c2 >
 1e14866:    0a 20             	if (r0 == 0) goto 20 <update_target_end+0x19F4 : 1e1487c >
 1e14868:    00 5b             	r0 = h[r5 + 32] (u)
 1e1486a:    42 4c             	r2 = [r6 + 16]
 1e1486c:    45 5f             	r5 = h[r7 + 40] (u)
 1e1486e:    48 4f             	[r7 + 80] = r0
 1e14870:    47 50             	r7 = h[r0 + 8] (u)
 1e14872:    5d 63             	b[r1 + 21] = r5
 1e14874:    6f 6e             	b[r7 + 6] = r7
 1e14876:    6e 5f             	h[r7 + 44] = r6
 1e14878:    70 61             	r0 = b[r0 + 23] (u)
 1e1487a:    72 61             	r2 = b[r0 + 23] (u)
 1e1487c:    6d 20             	if (r0 == 0) goto 218 <update_target_end+0x1AD0 : 1e14958 >
 1e1487e:    75 70             	r5 = 7
 1e14880:    64 61             	r4 = b[r0 + 22] (u)
 1e14882:    74 65             	r4 = b[r2 + 23] (u)
 1e14884:    5f 63             	b[r1 + 21] = r7
 1e14886:    6f 6d             	b[r6 + 22] = r7
 1e14888:    70 6c             	r0 = b[r6 + 7] (u)
 1e1488a:    65 74             	r5 = 70
 1e1488c:    65 3a             	if (r5 != 0) goto 202 <update_target_end+0x1AD0 : 1e14958 >
 1e1488e:    25 30             	if (r0 != 0) goto 74 <update_target_end+0x1A52 : 1e148da >
 1e14890:    34 78             	r4 = 131
 1e14892:    0a 20             	if (r0 == 0) goto 20 <update_target_end+0x1A20 : 1e148a8 >
 1e14894:    00 5b             	r0 = h[r5 + 32] (u)
 1e14896:    42 4c             	r2 = [r6 + 16]
 1e14898:    45 5f             	r5 = h[r7 + 40] (u)
 1e1489a:    48 4f             	[r7 + 80] = r0
 1e1489c:    47 50             	r7 = h[r0 + 8] (u)
 1e1489e:    5d 75             	r13 = 85
 1e148a0:    70 64             	r0 = b[r2 + 7] (u)
 1e148a2:    61 74             	r1 = 70
 1e148a4:    65 5f             	r5 = h[r7 + 44] (u)
 1e148a6:    69 6e             	b[r7 + 6] = r1
 1e148a8:    74 65             	r4 = b[r2 + 23] (u)
 1e148aa:    72 76             	r2 = 103
 1e148ac:    61 6c             	r1 = b[r6 + 6] (u)
 1e148ae:    20 3d             	if (r6 != 0) goto -448 <update_target_end+0x1868 : 1e146f0 >
 1e148b0:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x186A : 1e146f2 >
 1e148b2:    64 0a             	sp += 200
 1e148b4:    20 00             	rts
 1e148b6:    5b 42             	[r1 + 20] = r3
 1e148b8:    4c 45             	[r2 + 80] = r4
 1e148ba:    5f 48             	[r4 + 20] = r7
 1e148bc:    4f 47             	[r3 + 80] = r7
 1e148be:    50 5d             	r0 = h[r6 + 42] (u)
 1e148c0:    75 70             	r5 = 7
 1e148c2:    64 61             	r4 = b[r0 + 22] (u)
 1e148c4:    74 65             	r4 = b[r2 + 23] (u)
 1e148c6:    5f 6c             	b[r6 + 5] = r7
 1e148c8:    61 74             	r1 = 70
 1e148ca:    65 6e             	r5 = b[r7 + 6] (u)
 1e148cc:    63 79             	r3 = 150
 1e148ce:    20 3d             	if (r6 != 0) goto -448 <update_target_end+0x1888 : 1e14710 >
 1e148d0:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x188A : 1e14712 >
 1e148d2:    64 0a             	sp += 200
 1e148d4:    20 00             	rts
 1e148d6:    5b 42             	[r1 + 20] = r3
 1e148d8:    4c 45             	[r2 + 80] = r4
 1e148da:    5f 48             	[r4 + 20] = r7
 1e148dc:    4f 47             	[r3 + 80] = r7
 1e148de:    50 5d             	r0 = h[r6 + 42] (u)
 1e148e0:    75 70             	r5 = 7
 1e148e2:    64 61             	r4 = b[r0 + 22] (u)
 1e148e4:    74 65             	r4 = b[r2 + 23] (u)
 1e148e6:    5f 74             	r15 = 69
 1e148e8:    69 6d             	b[r6 + 22] = r1
 1e148ea:    65 6f             	r5 = b[r7 + 22] (u)
 1e148ec:    75 74             	r5 = 71
 1e148ee:    20 3d             	if (r6 != 0) goto -448 <update_target_end+0x18A8 : 1e14730 >
 1e148f0:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x18AA : 1e14732 >
 1e148f2:    64 0a             	sp += 200
 1e148f4:    20 00             	rts
 1e148f6:    5b 42             	[r1 + 20] = r3
 1e148f8:    4c 45             	[r2 + 80] = r4
 1e148fa:    5f 48             	[r4 + 20] = r7
 1e148fc:    4f 47             	[r3 + 80] = r7
 1e148fe:    50 5d             	r0 = h[r6 + 42] (u)
 1e14900:    44 49             	r4 = [r4 + 80]
 1e14902:    52 45             	r2 = [r2 + 84]
 1e14904:    43 54             	r3 = h[r2 + 8] (u)
 1e14906:    5f 41             	[r0 + 84] = r7
 1e14908:    44 56             	r4 = h[r3 + 8] (u)
 1e1490a:    5f 54             	h[r2 + 10] = r7
 1e1490c:    49 4d             	[r6 + 80] = r1
 1e1490e:    45 4f             	r5 = [r7 + 80]
 1e14910:    55 54             	r5 = h[r2 + 10] (u)
 1e14912:    0a 20             	if (r0 == 0) goto 20 <update_target_end+0x1AA0 : 1e14928 >
 1e14914:    00 5b             	r0 = h[r5 + 32] (u)
 1e14916:    42 4c             	r2 = [r6 + 16]
 1e14918:    45 5f             	r5 = h[r7 + 40] (u)
 1e1491a:    48 4f             	[r7 + 80] = r0
 1e1491c:    47 50             	r7 = h[r0 + 8] (u)
 1e1491e:    5d 73             	r13 = 53
 1e14920:    65 72             	r5 = 38
 1e14922:    76 65             	r6 = b[r2 + 23] (u)
 1e14924:    72 5f             	r2 = h[r7 + 46] (u)
 1e14926:    73 74             	r3 = 71
 1e14928:    61 74             	r1 = 70
 1e1492a:    65 3a             	if (r5 != 0) goto 202 <update_target_end+0x1B6E : 1e149f6 >
 1e1492c:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x18E6 : 1e1476e >
 1e1492e:    30 32             	if (r1 != 0) goto 96 <update_target_end+0x1B08 : 1e14990 >
 1e14930:    78 2c             	if (r6 == 0) goto 240 <update_target_end+0x1B9A : 1e14a22 >
 1e14932:    25 30             	if (r0 != 0) goto 74 <update_target_end+0x1AF6 : 1e1497e >
 1e14934:    32 78             	r2 = 131
 1e14936:    0a 20             	if (r0 == 0) goto 20 <update_target_end+0x1AC4 : 1e1494c >
 1e14938:    00 5b             	r0 = h[r5 + 32] (u)
 1e1493a:    42 4c             	r2 = [r6 + 16]
 1e1493c:    45 5f             	r5 = h[r7 + 40] (u)
 1e1493e:    48 4f             	[r7 + 80] = r0
 1e14940:    47 50             	r7 = h[r0 + 8] (u)
 1e14942:    5d 62             	b[r1 + 5] = r5
 1e14944:    6c 65             	b[r2 + 22] = r4
 1e14946:    5f 73             	r15 = 53
 1e14948:    74 61             	r4 = b[r0 + 23] (u)
 1e1494a:    74 65             	r4 = b[r2 + 23] (u)
 1e1494c:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x193A : 1e147c2 >
 1e1494e:    30 32             	if (r1 != 0) goto 96 <update_target_end+0x1B28 : 1e149b0 >
 1e14950:    78 3d             	if (r6 != 0) goto -272 <update_target_end+0x19BA : 1e14842 >
 1e14952:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1946 : 1e147ce >
 1e14954:    3e 25             	if (r2 == 0) goto -388 <update_target_end+0x194A : 1e147d2 >
 1e14956:    30 32             	if (r1 != 0) goto 96 <update_target_end+0x1B30 : 1e149b8 >
 1e14958:    78 0a             	sp += 240
 1e1495a:    20 00             	rts
 1e1495c:    5b 42             	[r1 + 20] = r3
 1e1495e:    4c 45             	[r2 + 80] = r4
 1e14960:    5f 48             	[r4 + 20] = r7
 1e14962:    4f 47             	[r3 + 80] = r7
 1e14964:    50 5d             	r0 = h[r6 + 42] (u)
 1e14966:    6c 65             	b[r2 + 22] = r4
 1e14968:    5f 68             	b[r4 + 5] = r7
 1e1496a:    6f 67             	b[r3 + 22] = r7
 1e1496c:    70 20             	if (r0 == 0) goto 224 <update_target_end+0x1BC6 : 1e14a4e >
 1e1496e:    25 30             	if (r0 != 0) goto 74 <update_target_end+0x1B32 : 1e149ba >
 1e14970:    32 78             	r2 = 131
 1e14972:    3a 72             	r10 = 35
 1e14974:    65 6d             	r5 = b[r6 + 22] (u)
 1e14976:    6f 74             	r15 = 70
 1e14978:    65 5f             	r5 = h[r7 + 44] (u)
 1e1497a:    74 79             	r4 = 151
 1e1497c:    70 65             	r0 = b[r2 + 23] (u)
 1e1497e:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x1B72 : 1e149fa >
 1e14980:    25 30             	if (r0 != 0) goto 74 <update_target_end+0x1B44 : 1e149cc >
 1e14982:    32 78             	r2 = 131
 1e14984:    0a 20             	if (r0 == 0) goto 20 <update_target_end+0x1B12 : 1e1499a >
 1e14986:    00 5b             	r0 = h[r5 + 32] (u)
 1e14988:    42 4c             	r2 = [r6 + 16]
 1e1498a:    45 5f             	r5 = h[r7 + 40] (u)
 1e1498c:    48 4f             	[r7 + 80] = r0
 1e1498e:    47 50             	r7 = h[r0 + 8] (u)
 1e14990:    5d 77             	r13 = 117
 1e14992:    72 69             	r2 = b[r4 + 23] (u)
 1e14994:    74 65             	r4 = b[r2 + 23] (u)
 1e14996:    5f 63             	b[r1 + 21] = r7
 1e14998:    61 6c             	r1 = b[r6 + 6] (u)
 1e1499a:    6c 62             	b[r1 + 6] = r4
 1e1499c:    61 63             	r1 = b[r1 + 22] (u)
 1e1499e:    6b 2c             	if (r6 == 0) goto 214 <update_target_end+0x1BEE : 1e14a76 >
 1e149a0:    20 68             	r0 = b[r4 + 2] (u)
 1e149a2:    61 6e             	r1 = b[r7 + 6] (u)
 1e149a4:    64 6c             	r4 = b[r6 + 6] (u)
 1e149a6:    65 3d             	if (r6 != 0) goto -310 <update_target_end+0x19EA : 1e14872 >
 1e149a8:    20 30             	if (r0 != 0) goto 64 <update_target_end+0x1B62 : 1e149ea >
 1e149aa:    78 25             	if (r2 == 0) goto -272 <update_target_end+0x1A14 : 1e1489c >
 1e149ac:    30 34             	if (r2 != 0) goto 96 <update_target_end+0x1B86 : 1e14a0e >
 1e149ae:    78 2c             	if (r6 == 0) goto 240 <update_target_end+0x1C18 : 1e14aa0 >
 1e149b0:    73 69             	r3 = b[r4 + 23] (u)
 1e149b2:    7a 65             	b[r2 + 23] = r2
 1e149b4:    20 3d             	if (r6 != 0) goto -448 <update_target_end+0x196E : 1e147f6 >
 1e149b6:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x1970 : 1e147f8 >
 1e149b8:    64 0a             	sp += 200
 1e149ba:    20 00             	rts
 1e149bc:    5b 42             	[r1 + 20] = r3
 1e149be:    4c 45             	[r2 + 80] = r4
 1e149c0:    5f 48             	[r4 + 20] = r7
 1e149c2:    4f 47             	[r3 + 80] = r7
 1e149c4:    50 5d             	r0 = h[r6 + 42] (u)
 1e149c6:    0a 2d             	if (r6 == 0) goto -492 <update_target_end+0x1954 : 1e147dc >
 1e149c8:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x199C : 1e14824 >
 1e149ca:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x199E : 1e14826 >
 1e149cc:    2d 77             	r13 = 114
 1e149ce:    72 69             	r2 = b[r4 + 23] (u)
 1e149d0:    74 65             	r4 = b[r2 + 23] (u)
 1e149d2:    20 63             	r0 = b[r1 + 18] (u)
 1e149d4:    63 63             	r3 = b[r1 + 22] (u)
 1e149d6:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x19C4 : 1e1484c >
 1e149d8:    30 34             	if (r2 != 0) goto 96 <update_target_end+0x1BB2 : 1e14a3a >
 1e149da:    78 2c             	if (r6 == 0) goto 240 <update_target_end+0x1C44 : 1e14acc >
 1e149dc:    25 30             	if (r0 != 0) goto 74 <update_target_end+0x1BA0 : 1e14a28 >
 1e149de:    32 78             	r2 = 131
 1e149e0:    0a 20             	if (r0 == 0) goto 20 <update_target_end+0x1B6E : 1e149f6 >
 1e149e2:    00 5b             	r0 = h[r5 + 32] (u)
 1e149e4:    42 4c             	r2 = [r6 + 16]
 1e149e6:    45 5f             	r5 = h[r7 + 40] (u)
 1e149e8:    48 4f             	[r7 + 80] = r0
 1e149ea:    47 50             	r7 = h[r0 + 8] (u)
 1e149ec:    5d 74             	r13 = 69
 1e149ee:    72 61             	r2 = b[r0 + 23] (u)
 1e149f0:    6e 73             	r14 = 54
 1e149f2:    66 65             	r6 = b[r2 + 22] (u)
 1e149f4:    72 5f             	r2 = h[r7 + 46] (u)
 1e149f6:    72 78             	r2 = 135
 1e149f8:    28 25             	if (r2 == 0) goto -432 <update_target_end+0x19C2 : 1e1484a >
 1e149fa:    64 29             	if (r4 == 0) goto -312 <update_target_end+0x1A3C : 1e148c4 >
 1e149fc:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x1BEA : 1e14a72 >
 1e149fe:    00 5b             	r0 = h[r5 + 32] (u)
 1e14a00:    42 4c             	r2 = [r6 + 16]
 1e14a02:    45 5f             	r5 = h[r7 + 40] (u)
 1e14a04:    48 4f             	[r7 + 80] = r0
 1e14a06:    47 50             	r7 = h[r0 + 8] (u)
 1e14a08:    5d 72             	r13 = 37
 1e14a0a:    65 61             	r5 = b[r0 + 22] (u)
 1e14a0c:    64 5f             	r4 = h[r7 + 44] (u)
 1e14a0e:    63 61             	r3 = b[r0 + 22] (u)
 1e14a10:    6c 6c             	b[r6 + 6] = r4
 1e14a12:    62 61             	r2 = b[r0 + 22] (u)
 1e14a14:    63 6b             	r3 = b[r5 + 22] (u)
 1e14a16:    2c 20             	if (r0 == 0) goto 88 <update_target_end+0x1BE8 : 1e14a70 >
 1e14a18:    68 61             	b[r0 + 22] = r0
 1e14a1a:    6e 64             	b[r2 + 6] = r6
 1e14a1c:    6c 65             	b[r2 + 22] = r4
 1e14a1e:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x1C12 : 1e14a9a >
 1e14a20:    30 78             	r0 = 131
 1e14a22:    25 30             	if (r0 != 0) goto 74 <update_target_end+0x1BE6 : 1e14a6e >
 1e14a24:    34 78             	r4 = 131
 1e14a26:    2c 62             	b[r1 + 2] = r4
 1e14a28:    75 66             	r5 = b[r3 + 7] (u)
 1e14a2a:    66 65             	r6 = b[r2 + 22] (u)
 1e14a2c:    72 3d             	if (r6 != 0) goto -284 <update_target_end+0x1A8A : 1e14912 >
 1e14a2e:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x19E8 : 1e14870 >
 1e14a30:    30 38             	if (r4 != 0) goto 96 <update_target_end+0x1C0A : 1e14a92 >
 1e14a32:    78 0a             	sp += 240
 1e14a34:    20 00             	rts
 1e14a36:    5b 42             	[r1 + 20] = r3
 1e14a38:    4c 45             	[r2 + 80] = r4
 1e14a3a:    5f 48             	[r4 + 20] = r7
 1e14a3c:    4f 47             	[r3 + 80] = r7
 1e14a3e:    50 5d             	r0 = h[r6 + 42] (u)
 1e14a40:    0a 2d             	if (r6 == 0) goto -492 <update_target_end+0x19CE : 1e14856 >
 1e14a42:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x1A16 : 1e1489e >
 1e14a44:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x1A18 : 1e148a0 >
 1e14a46:    2d 72             	r13 = 34
 1e14a48:    65 61             	r5 = b[r0 + 22] (u)
 1e14a4a:    64 20             	if (r0 == 0) goto 200 <update_target_end+0x1C8C : 1e14b14 >
 1e14a4c:    67 61             	r7 = b[r0 + 22] (u)
 1e14a4e:    70 5f             	r0 = h[r7 + 46] (u)
 1e14a50:    6e 61             	b[r0 + 22] = r6
 1e14a52:    6d 65             	b[r2 + 22] = r5
 1e14a54:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x1C42 : 1e14aca >
 1e14a56:    25 73             	r5 = 50
 1e14a58:    0a 20             	if (r0 == 0) goto 20 <update_target_end+0x1BE6 : 1e14a6e >
 1e14a5a:    00 5b             	r0 = h[r5 + 32] (u)
 1e14a5c:    42 4c             	r2 = [r6 + 16]
 1e14a5e:    45 5f             	r5 = h[r7 + 40] (u)
 1e14a60:    48 4f             	[r7 + 80] = r0
 1e14a62:    47 50             	r7 = h[r0 + 8] (u)
 1e14a64:    5d 0a             	sp += 184
 1e14a66:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x1A3A : 1e148c2 >
 1e14a68:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x1A3C : 1e148c4 >
 1e14a6a:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x1A3E : 1e148c6 >
 1e14a6c:    67 65             	r7 = b[r2 + 22] (u)
 1e14a6e:    74 20             	if (r0 == 0) goto 232 <update_target_end+0x1CD0 : 1e14b58 >
 1e14a70:    50 65             	r0 = b[r2 + 21] (u)
 1e14a72:    72 69             	r2 = b[r4 + 23] (u)
 1e14a74:    70 68             	r0 = b[r4 + 7] (u)
 1e14a76:    65 72             	r5 = 38
 1e14a78:    61 6c             	r1 = b[r6 + 6] (u)
 1e14a7a:    5f 50             	h[r0 + 10] = r7
 1e14a7c:    72 65             	r2 = b[r2 + 23] (u)
 1e14a7e:    66 65             	r6 = b[r2 + 22] (u)
 1e14a80:    72 72             	r2 = 39
 1e14a82:    65 64             	r5 = b[r2 + 6] (u)
 1e14a84:    5f 43             	[r1 + 84] = r7
 1e14a86:    6f 6e             	b[r7 + 6] = r7
 1e14a88:    6e 65             	b[r2 + 22] = r6
 1e14a8a:    63 74             	r3 = 70
 1e14a8c:    69 6f             	b[r7 + 22] = r1
 1e14a8e:    6e 5f             	h[r7 + 44] = r6
 1e14a90:    50 61             	r0 = b[r0 + 21] (u)
 1e14a92:    72 61             	r2 = b[r0 + 23] (u)
 1e14a94:    6d 65             	b[r2 + 22] = r5
 1e14a96:    74 65             	r4 = b[r2 + 23] (u)
 1e14a98:    72 73             	r2 = 55
 1e14a9a:    0a 20             	if (r0 == 0) goto 20 <update_target_end+0x1C28 : 1e14ab0 >
 1e14a9c:    00 5b             	r0 = h[r5 + 32] (u)
 1e14a9e:    42 4c             	r2 = [r6 + 16]
 1e14aa0:    45 5f             	r5 = h[r7 + 40] (u)
 1e14aa2:    48 4f             	[r7 + 80] = r0
 1e14aa4:    47 50             	r7 = h[r0 + 8] (u)
 1e14aa6:    5d 72             	r13 = 37
 1e14aa8:    65 61             	r5 = b[r0 + 22] (u)
 1e14aaa:    64 20             	if (r0 == 0) goto 200 <update_target_end+0x1CEC : 1e14b74 >
 1e14aac:    50 6e             	r0 = b[r7 + 5] (u)
 1e14aae:    50 5f             	r0 = h[r7 + 42] (u)
 1e14ab0:    49 44             	[r2 + 16] = r1
 1e14ab2:    0a 20             	if (r0 == 0) goto 20 <update_target_end+0x1C40 : 1e14ac8 >
 1e14ab4:    00 5b             	r0 = h[r5 + 32] (u)
 1e14ab6:    42 4c             	r2 = [r6 + 16]
 1e14ab8:    45 5f             	r5 = h[r7 + 40] (u)
 1e14aba:    48 4f             	[r7 + 80] = r0
 1e14abc:    47 50             	r7 = h[r0 + 8] (u)
 1e14abe:    5d 61             	b[r0 + 21] = r5
 1e14ac0:    74 74             	r4 = 71
 1e14ac2:    5f 76             	r15 = 101
 1e14ac4:    61 6c             	r1 = b[r6 + 6] (u)
 1e14ac6:    75 65             	r5 = b[r2 + 23] (u)
 1e14ac8:    5f 6c             	b[r6 + 5] = r7
 1e14aca:    65 6e             	r5 = b[r7 + 6] (u)
 1e14acc:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x1CC0 : 1e14b48 >
 1e14ace:    25 64             	r5 = b[r2 + 2] (u)
 1e14ad0:    0a 20             	if (r0 == 0) goto 20 <update_target_end+0x1C5E : 1e14ae6 >
 1e14ad2:    00 5b             	r0 = h[r5 + 32] (u)
 1e14ad4:    42 4c             	r2 = [r6 + 16]
 1e14ad6:    45 5f             	r5 = h[r7 + 40] (u)
 1e14ad8:    48 4f             	[r7 + 80] = r0
 1e14ada:    47 50             	r7 = h[r0 + 8] (u)
 1e14adc:    5d 25             	if (r2 == 0) goto -326 <update_target_end+0x1B10 : 1e14998 >
 1e14ade:    73 0a             	sp += 228
 1e14ae0:    20 00             	rts
 1e14ae2:    62 74             	r2 = 70
 1e14ae4:    5f 62             	b[r1 + 5] = r7
 1e14ae6:    6c 65             	b[r2 + 22] = r4
 1e14ae8:    5f 69             	b[r4 + 21] = r7
 1e14aea:    6e 69             	b[r4 + 22] = r6
 1e14aec:    74 00             	sti r4
 1e14aee:    5b 42             	[r1 + 20] = r3
 1e14af0:    4c 45             	[r2 + 80] = r4
 1e14af2:    5f 48             	[r4 + 20] = r7
 1e14af4:    4f 47             	[r3 + 80] = r7
 1e14af6:    50 5d             	r0 = h[r6 + 42] (u)
 1e14af8:    62 6c             	r2 = b[r6 + 6] (u)
 1e14afa:    65 5f             	r5 = h[r7 + 44] (u)
 1e14afc:    66 69             	r6 = b[r4 + 22] (u)
 1e14afe:    6c 65             	b[r2 + 22] = r4
 1e14b00:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x1CEE : 1e14b76 >
 1e14b02:    25 73             	r5 = 50
 1e14b04:    20 00             	rts
 1e14b06:    44 3a             	if (r5 != 0) goto 136 <update_target_end+0x1D08 : 1e14b90 >
 1e14b08:    5c 73             	r12 = 53
 1e14b0a:    68 69             	b[r4 + 22] = r0
 1e14b0c:    78 75             	r8 = 87
 1e14b0e:    6e 5c             	h[r6 + 12] = r6
 1e14b10:    66 77             	r6 = 118
 1e14b12:    2d 41             	[r0 + 72] = r5
 1e14b14:    43 36             	if (r3 != 0) goto 134 <update_target_end+0x1D14 : 1e14b9c >
 1e14b16:    33 5f             	r3 = h[r7 + 38] (u)
 1e14b18:    42 54             	r2 = h[r2 + 8] (u)
 1e14b1a:    5f 53             	h[r1 + 42] = r7
 1e14b1c:    44 4b             	r4 = [r5 + 80]
 1e14b1e:    2d 6d             	b[r6 + 18] = r5
 1e14b20:    61 73             	r1 = 54
 1e14b22:    74 65             	r4 = b[r2 + 23] (u)
 1e14b24:    72 5c             	r2 = h[r6 + 14] (u)
 1e14b26:    61 70             	r1 = 6
 1e14b28:    70 73             	r0 = 55
 1e14b2a:    5c 68             	b[r4 + 5] = r4
 1e14b2c:    69 64             	b[r2 + 6] = r1
 1e14b2e:    5c 6d             	b[r6 + 21] = r4
 1e14b30:    6f 64             	b[r2 + 6] = r7
 1e14b32:    75 6c             	r5 = b[r6 + 7] (u)
 1e14b34:    65 73             	r5 = 54
 1e14b36:    5c 62             	b[r1 + 5] = r4
 1e14b38:    74 5c             	r4 = h[r6 + 14] (u)
 1e14b3a:    62 6c             	r2 = b[r6 + 6] (u)
 1e14b3c:    65 5f             	r5 = h[r7 + 44] (u)
 1e14b3e:    68 6f             	b[r7 + 22] = r0
 1e14b40:    67 70             	r7 = 6
 1e14b42:    2e 63             	b[r1 + 18] = r6
 1e14b44:    00 68             	r0 = b[r4 + 0] (u)
 1e14b46:    6f 67             	b[r3 + 22] = r7
 1e14b48:    70 5f             	r0 = h[r7 + 46] (u)
 1e14b4a:    73 65             	r3 = b[r2 + 23] (u)
 1e14b4c:    72 76             	r2 = 103
 1e14b4e:    65 72             	r5 = 38
 1e14b50:    5f 69             	b[r4 + 21] = r7
 1e14b52:    6e 69             	b[r4 + 22] = r6
 1e14b54:    74 00             	sti r4
 1e14b56:    5b 42             	[r1 + 20] = r3
 1e14b58:    4c 45             	[r2 + 80] = r4
 1e14b5a:    5f 48             	[r4 + 20] = r7
 1e14b5c:    4f 47             	[r3 + 80] = r7
 1e14b5e:    50 5d             	r0 = h[r6 + 42] (u)
 1e14b60:    6d 6f             	b[r7 + 22] = r5
 1e14b62:    64 65             	r4 = b[r2 + 22] (u)
 1e14b64:    5f 65             	b[r2 + 21] = r7
 1e14b66:    6e 3a             	if (r5 != 0) goto 220 <update_target_end+0x1DBC : 1e14c44 >
 1e14b68:    25 64             	r5 = b[r2 + 2] (u)
 1e14b6a:    0a 20             	if (r0 == 0) goto 20 <update_target_end+0x1CF8 : 1e14b80 >
 1e14b6c:    00 5b             	r0 = h[r5 + 32] (u)
 1e14b6e:    42 4c             	r2 = [r6 + 16]
 1e14b70:    45 5f             	r5 = h[r7 + 40] (u)
 1e14b72:    48 4f             	[r7 + 80] = r0
 1e14b74:    47 50             	r7 = h[r0 + 8] (u)
 1e14b76:    5d 2a             	if (r5 == 0) goto 186 <update_target_end+0x1DAA : 1e14c32 >
 1e14b78:    2a 2a             	if (r5 == 0) goto 84 <update_target_end+0x1D46 : 1e14bce >
 1e14b7a:    2a 2a             	if (r5 == 0) goto 84 <update_target_end+0x1D48 : 1e14bd0 >
 1e14b7c:    20 62             	r0 = b[r1 + 2] (u)
 1e14b7e:    6c 65             	b[r2 + 22] = r4
 1e14b80:    5f 65             	b[r2 + 21] = r7
 1e14b82:    78 69             	b[r4 + 23] = r0
 1e14b84:    74 2a             	if (r5 == 0) goto 232 <update_target_end+0x1DE6 : 1e14c6e >
 1e14b86:    2a 2a             	if (r5 == 0) goto 84 <update_target_end+0x1D54 : 1e14bdc >
 1e14b88:    2a 2a             	if (r5 == 0) goto 84 <update_target_end+0x1D56 : 1e14bde >
 1e14b8a:    2a 0a             	sp += 84
 1e14b8c:    20 00             	rts
 1e14b8e:    62 74             	r2 = 70
 1e14b90:    5f 62             	b[r1 + 5] = r7
 1e14b92:    6c 65             	b[r2 + 22] = r4
 1e14b94:    5f 65             	b[r2 + 21] = r7
 1e14b96:    78 69             	b[r4 + 23] = r0
 1e14b98:    74 00             	sti r4
 1e14b9a:    5b 42             	[r1 + 20] = r3
 1e14b9c:    4c 45             	[r2 + 80] = r4
 1e14b9e:    5f 48             	[r4 + 20] = r7
 1e14ba0:    4f 47             	[r3 + 80] = r7
 1e14ba2:    50 5d             	r0 = h[r6 + 42] (u)
 1e14ba4:    72 65             	r2 = b[r2 + 23] (u)
 1e14ba6:    70 6f             	r0 = b[r7 + 23] (u)
 1e14ba8:    72 74             	r2 = 71
 1e14baa:    5f 69             	b[r4 + 21] = r7
 1e14bac:    64 20             	if (r0 == 0) goto 200 <update_target_end+0x1DEE : 1e14c76 >
 1e14bae:    25 64             	r5 = b[r2 + 2] (u)
 1e14bb0:    2c 65             	b[r2 + 18] = r4
 1e14bb2:    72 72             	r2 = 39
 1e14bb4:    21 21             	if (r0 == 0) goto -446 <update_target_end+0x1B70 : 1e149f8 >
 1e14bb6:    21 0a             	sp += 64
 1e14bb8:    20 00             	rts
 1e14bba:    5b 49             	[r4 + 84] = r3
 1e14bbc:    6e 66             	b[r3 + 6] = r6
 1e14bbe:    6f 5d             	h[r6 + 44] = r7
 1e14bc0:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x1DAE : 1e14c36 >
 1e14bc2:    5b 55             	h[r2 + 42] = r3
 1e14bc4:    53 45             	r3 = [r2 + 84]
 1e14bc6:    52 5f             	r2 = h[r7 + 42] (u)
 1e14bc8:    43 46             	r3 = [r3 + 16]
 1e14bca:    47 5d             	r7 = h[r6 + 40] (u)
 1e14bcc:    72 65             	r2 = b[r2 + 23] (u)
 1e14bce:    61 64             	r1 = b[r2 + 6] (u)
 1e14bd0:    20 62             	r0 = b[r1 + 2] (u)
 1e14bd2:    74 20             	if (r0 == 0) goto 232 <update_target_end+0x1E34 : 1e14cbc >
 1e14bd4:    6e 61             	b[r0 + 22] = r6
 1e14bd6:    6d 65             	b[r2 + 22] = r5
 1e14bd8:    20 65             	r0 = b[r2 + 18] (u)
 1e14bda:    72 72             	r2 = 39
 1e14bdc:    0a 0d             	r10 <<= r4
 1e14bde:    0a 00             	ssync
 1e14be0:    5b 49             	[r4 + 84] = r3
 1e14be2:    6e 66             	b[r3 + 6] = r6
 1e14be4:    6f 5d             	h[r6 + 44] = r7
 1e14be6:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x1DD4 : 1e14c5c >
 1e14be8:    5b 55             	h[r2 + 42] = r3
 1e14bea:    53 45             	r3 = [r2 + 84]
 1e14bec:    52 5f             	r2 = h[r7 + 42] (u)
 1e14bee:    43 46             	r3 = [r3 + 16]
 1e14bf0:    47 5d             	r7 = h[r6 + 40] (u)
 1e14bf2:    62 74             	r2 = 70
 1e14bf4:    20 6e             	r0 = b[r7 + 2] (u)
 1e14bf6:    61 6d             	r1 = b[r6 + 22] (u)
 1e14bf8:    65 20             	if (r0 == 0) goto 202 <update_target_end+0x1E3C : 1e14cc4 >
 1e14bfa:    63 6f             	r3 = b[r7 + 22] (u)
 1e14bfc:    6e 66             	b[r3 + 6] = r6
 1e14bfe:    69 67             	b[r3 + 22] = r1
 1e14c00:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x1BEE : 1e14a76 >
 1e14c02:    73 0a             	sp += 228
 1e14c04:    0d 0a             	sp += 24
 1e14c06:    00 5b             	r0 = h[r5 + 32] (u)
 1e14c08:    44 65             	r4 = b[r2 + 20] (u)
 1e14c0a:    62 75             	r2 = 86
 1e14c0c:    67 5d             	r7 = h[r6 + 44] (u)
 1e14c0e:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x1DFC : 1e14c84 >
 1e14c10:    5b 55             	h[r2 + 42] = r3
 1e14c12:    53 45             	r3 = [r2 + 84]
 1e14c14:    52 5f             	r2 = h[r7 + 42] (u)
 1e14c16:    43 46             	r3 = [r3 + 16]
 1e14c18:    47 5d             	r7 = h[r6 + 40] (u)
 1e14c1a:    72 65             	r2 = b[r2 + 23] (u)
 1e14c1c:    61 64             	r1 = b[r2 + 6] (u)
 1e14c1e:    20 72             	r0 = 34
 1e14c20:    66 20             	if (r0 == 0) goto 204 <update_target_end+0x1E66 : 1e14cee >
 1e14c22:    65 72             	r5 = 38
 1e14c24:    72 0a             	sp += 228
 1e14c26:    0d 0a             	sp += 24
 1e14c28:    00 5b             	r0 = h[r5 + 32] (u)
 1e14c2a:    49 6e             	b[r7 + 4] = r1
 1e14c2c:    66 6f             	r6 = b[r7 + 22] (u)
 1e14c2e:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x1E62 : 1e14cea >
 1e14c30:    20 5b             	r0 = h[r5 + 36] (u)
 1e14c32:    55 53             	r5 = h[r1 + 42] (u)
 1e14c34:    45 52             	r5 = h[r1 + 8] (u)
 1e14c36:    5f 43             	[r1 + 84] = r7
 1e14c38:    46 47             	r6 = [r3 + 80]
 1e14c3a:    5d 72             	r13 = 37
 1e14c3c:    66 20             	if (r0 == 0) goto 204 <update_target_end+0x1E82 : 1e14d0a >
 1e14c3e:    63 6f             	r3 = b[r7 + 22] (u)
 1e14c40:    6e 66             	b[r3 + 6] = r6
 1e14c42:    69 67             	b[r3 + 22] = r1
 1e14c44:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x1C32 : 1e14aba >
 1e14c46:    64 0a             	sp += 200
 1e14c48:    0d 0a             	sp += 24
 1e14c4a:    00 5b             	r0 = h[r5 + 32] (u)
 1e14c4c:    49 6e             	b[r7 + 4] = r1
 1e14c4e:    66 6f             	r6 = b[r7 + 22] (u)
 1e14c50:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x1E84 : 1e14d0c >
 1e14c52:    20 5b             	r0 = h[r5 + 36] (u)
 1e14c54:    55 53             	r5 = h[r1 + 42] (u)
 1e14c56:    45 52             	r5 = h[r1 + 8] (u)
 1e14c58:    5f 43             	[r1 + 84] = r7
 1e14c5a:    46 47             	r6 = [r3 + 80]
 1e14c5c:    5d 77             	r13 = 117
 1e14c5e:    61 72             	r1 = 38
 1e14c60:    6e 69             	b[r4 + 22] = r6
 1e14c62:    6e 67             	b[r3 + 22] = r6
 1e14c64:    5f 74             	r15 = 69
 1e14c66:    6f 6e             	b[r7 + 6] = r7
 1e14c68:    65 5f             	r5 = h[r7 + 44] (u)
 1e14c6a:    76 3a             	if (r5 != 0) goto 236 <update_target_end+0x1ED0 : 1e14d58 >
 1e14c6c:    25 64             	r5 = b[r2 + 2] (u)
 1e14c6e:    20 70             	r0 = 2
 1e14c70:    6f 77             	r15 = 118
 1e14c72:    65 72             	r5 = 38
 1e14c74:    6f 66             	b[r3 + 6] = r7
 1e14c76:    66 5f             	r6 = h[r7 + 44] (u)
 1e14c78:    74 6f             	r4 = b[r7 + 23] (u)
 1e14c7a:    6e 65             	b[r2 + 22] = r6
 1e14c7c:    5f 76             	r15 = 101
 1e14c7e:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x1C6C : 1e14af4 >
 1e14c80:    64 0a             	sp += 200
 1e14c82:    0d 0a             	sp += 24
 1e14c84:    00 5b             	r0 = h[r5 + 32] (u)
 1e14c86:    49 6e             	b[r7 + 4] = r1
 1e14c88:    66 6f             	r6 = b[r7 + 22] (u)
 1e14c8a:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x1EBE : 1e14d46 >
 1e14c8c:    20 5b             	r0 = h[r5 + 36] (u)
 1e14c8e:    55 53             	r5 = h[r1 + 42] (u)
 1e14c90:    45 52             	r5 = h[r1 + 8] (u)
 1e14c92:    5f 43             	[r1 + 84] = r7
 1e14c94:    46 47             	r6 = [r3 + 80]
 1e14c96:    5d 61             	b[r0 + 21] = r5
 1e14c98:    75 74             	r5 = 71
 1e14c9a:    6f 5f             	h[r7 + 44] = r7
 1e14c9c:    6f 66             	b[r3 + 6] = r7
 1e14c9e:    66 5f             	r6 = h[r7 + 44] (u)
 1e14ca0:    74 69             	r4 = b[r4 + 23] (u)
 1e14ca2:    6d 65             	b[r2 + 22] = r5
 1e14ca4:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x1C92 : 1e14b1a >
 1e14ca6:    64 0a             	sp += 200
 1e14ca8:    0d 0a             	sp += 24
 1e14caa:    00 5b             	r0 = h[r5 + 32] (u)
 1e14cac:    49 6e             	b[r7 + 4] = r1
 1e14cae:    66 6f             	r6 = b[r7 + 22] (u)
 1e14cb0:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x1EE4 : 1e14d6c >
 1e14cb2:    20 5b             	r0 = h[r5 + 36] (u)
 1e14cb4:    55 53             	r5 = h[r1 + 42] (u)
 1e14cb6:    45 52             	r5 = h[r1 + 8] (u)
 1e14cb8:    5f 43             	[r1 + 84] = r7
 1e14cba:    46 47             	r6 = [r3 + 80]
 1e14cbc:    5d 3e             	if (r7 != 0) goto 186 <update_target_end+0x1EF0 : 1e14d78 >
 1e14cbe:    3e 3e             	if (r7 != 0) goto 124 <update_target_end+0x1EB4 : 1e14d3c >
 1e14cc0:    69 6e             	b[r7 + 6] = r1
 1e14cc2:    69 74             	r9 = 70
 1e14cc4:    20 6d             	r0 = b[r6 + 18] (u)
 1e14cc6:    61 63             	r1 = b[r1 + 22] (u)
 1e14cc8:    20 61             	r0 = b[r0 + 18] (u)
 1e14cca:    64 64             	r4 = b[r2 + 6] (u)
 1e14ccc:    72 21             	if (r0 == 0) goto -284 <update_target_end+0x1D2A : 1e14bb2 >
 1e14cce:    21 21             	if (r0 == 0) goto -446 <update_target_end+0x1C8A : 1e14b12 >
 1e14cd0:    0a 0d             	r10 <<= r4
 1e14cd2:    0a 00             	ssync
 1e14cd4:    5b 49             	[r4 + 84] = r3
 1e14cd6:    6e 66             	b[r3 + 6] = r6
 1e14cd8:    6f 5d             	h[r6 + 44] = r7
 1e14cda:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x1EC8 : 1e14d50 >
 1e14cdc:    5b 55             	h[r2 + 42] = r3
 1e14cde:    53 45             	r3 = [r2 + 84]
 1e14ce0:    52 5f             	r2 = h[r7 + 42] (u)
 1e14ce2:    43 46             	r3 = [r3 + 16]
 1e14ce4:    47 5d             	r7 = h[r6 + 40] (u)
 1e14ce6:    6d 61             	b[r0 + 22] = r5
 1e14ce8:    63 3a             	if (r5 != 0) goto 198 <update_target_end+0x1F28 : 1e14db0 >
 1e14cea:    0d 0a             	sp += 24
 1e14cec:    00 5b             	r0 = h[r5 + 32] (u)
 1e14cee:    49 6e             	b[r7 + 4] = r1
 1e14cf0:    66 6f             	r6 = b[r7 + 22] (u)
 1e14cf2:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x1F26 : 1e14dae >
 1e14cf4:    20 5b             	r0 = h[r5 + 36] (u)
 1e14cf6:    55 53             	r5 = h[r1 + 42] (u)
 1e14cf8:    45 52             	r5 = h[r1 + 8] (u)
 1e14cfa:    5f 43             	[r1 + 84] = r7
 1e14cfc:    46 47             	r6 = [r3 + 80]
 1e14cfe:    5d 6c             	b[r6 + 5] = r5
 1e14d00:    72 63             	r2 = b[r1 + 23] (u)
 1e14d02:    20 63             	r0 = b[r1 + 18] (u)
 1e14d04:    66 67             	r6 = b[r3 + 22] (u)
 1e14d06:    3a 0d             	r10 >>>= r4
 1e14d08:    0a 00             	ssync
 1e14d0a:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1CFE : 1e14b86 >
 1e14d0c:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1D00 : 1e14b88 >
 1e14d0e:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1D02 : 1e14b8a >
 1e14d10:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1D04 : 1e14b8c >
 1e14d12:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1D06 : 1e14b8e >
 1e14d14:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1D08 : 1e14b90 >
 1e14d16:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1D0A : 1e14b92 >
 1e14d18:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1D0C : 1e14b94 >
 1e14d1a:    3d 56             	h[r3 + 6] = r5
 1e14d1c:    65 72             	r5 = 38
 1e14d1e:    73 69             	r3 = b[r4 + 23] (u)
 1e14d20:    6f 6e             	b[r7 + 6] = r7
 1e14d22:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1D16 : 1e14b9e >
 1e14d24:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1D18 : 1e14ba0 >
 1e14d26:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1D1A : 1e14ba2 >
 1e14d28:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1D1C : 1e14ba4 >
 1e14d2a:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1D1E : 1e14ba6 >
 1e14d2c:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1D20 : 1e14ba8 >
 1e14d2e:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1D22 : 1e14baa >
 1e14d30:    3d 0a             	sp += 120
 1e14d32:    00 3d             	if (r6 != 0) goto -512 <update_target_end+0x1CAC : 1e14b34 >
 1e14d34:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1D28 : 1e14bb0 >
 1e14d36:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1D2A : 1e14bb2 >
 1e14d38:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1D2C : 1e14bb4 >
 1e14d3a:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1D2E : 1e14bb6 >
 1e14d3c:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1D30 : 1e14bb8 >
 1e14d3e:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1D32 : 1e14bba >
 1e14d40:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1D34 : 1e14bbc >
 1e14d42:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1D36 : 1e14bbe >
 1e14d44:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1D38 : 1e14bc0 >
 1e14d46:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1D3A : 1e14bc2 >
 1e14d48:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1D3C : 1e14bc4 >
 1e14d4a:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1D3E : 1e14bc6 >
 1e14d4c:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1D40 : 1e14bc8 >
 1e14d4e:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1D42 : 1e14bca >
 1e14d50:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1D44 : 1e14bcc >
 1e14d52:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1D46 : 1e14bce >
 1e14d54:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1D48 : 1e14bd0 >
 1e14d56:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1D4A : 1e14bd2 >
 1e14d58:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x1D4C : 1e14bd4 >
 1e14d5a:    0a 00             	ssync
 1e14d5c:    5b 49             	[r4 + 84] = r3
 1e14d5e:    6e 66             	b[r3 + 6] = r6
 1e14d60:    6f 5d             	h[r6 + 44] = r7
 1e14d62:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x1F50 : 1e14dd8 >
 1e14d64:    5b 42             	[r1 + 20] = r3
 1e14d66:    4f 41             	[r0 + 80] = r7
 1e14d68:    52 44             	r2 = [r2 + 20]
 1e14d6a:    5d 50             	h[r0 + 10] = r5
 1e14d6c:    6f 77             	r15 = 118
 1e14d6e:    65 72             	r5 = 38
 1e14d70:    20 69             	r0 = b[r4 + 18] (u)
 1e14d72:    6e 69             	b[r4 + 22] = r6
 1e14d74:    74 20             	if (r0 == 0) goto 232 <update_target_end+0x1FD6 : 1e14e5e >
 1e14d76:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x1F64 : 1e14dec >
 1e14d78:    25 73             	r5 = 50
 1e14d7a:    0d 0a             	sp += 24
 1e14d7c:    00 44             	r0 = [r2 + 0]
 1e14d7e:    3a 5c             	h[r6 + 6] = r2
 1e14d80:    73 68             	r3 = b[r4 + 7] (u)
 1e14d82:    69 78             	r9 = 134
 1e14d84:    75 6e             	r5 = b[r7 + 7] (u)
 1e14d86:    5c 66             	b[r3 + 5] = r4
 1e14d88:    77 2d             	if (r6 == 0) goto -274 <update_target_end+0x1DF0 : 1e14c78 >
 1e14d8a:    41 43             	r1 = [r1 + 80]
 1e14d8c:    36 33             	if (r1 != 0) goto -404 <update_target_end+0x1D72 : 1e14bfa >
 1e14d8e:    5f 42             	[r1 + 20] = r7
 1e14d90:    54 5f             	r4 = h[r7 + 42] (u)
 1e14d92:    53 44             	r3 = [r2 + 20]
 1e14d94:    4b 2d             	if (r6 == 0) goto -362 <update_target_end+0x1DA4 : 1e14c2c >
 1e14d96:    6d 61             	b[r0 + 22] = r5
 1e14d98:    73 74             	r3 = 71
 1e14d9a:    65 72             	r5 = 38
 1e14d9c:    5c 61             	b[r0 + 21] = r4
 1e14d9e:    70 70             	r0 = 7
 1e14da0:    73 5c             	r3 = h[r6 + 14] (u)
 1e14da2:    68 69             	b[r4 + 22] = r0
 1e14da4:    64 5c             	r4 = h[r6 + 12] (u)
 1e14da6:    62 6f             	r2 = b[r7 + 22] (u)
 1e14da8:    61 72             	r1 = 38
 1e14daa:    64 5c             	r4 = h[r6 + 12] (u)
 1e14dac:    62 64             	r2 = b[r2 + 6] (u)
 1e14dae:    31 39             	if (r4 != 0) goto -414 <update_target_end+0x1D8A : 1e14c12 >
 1e14db0:    5c 62             	b[r1 + 5] = r4
 1e14db2:    6f 61             	b[r0 + 22] = r7
 1e14db4:    72 64             	r2 = b[r2 + 7] (u)
 1e14db6:    5f 61             	b[r0 + 21] = r7
 1e14db8:    63 36             	if (r3 != 0) goto 198 <update_target_end+0x1FF8 : 1e14e80 >
 1e14dba:    33 32             	if (r1 != 0) goto 102 <update_target_end+0x1F9A : 1e14e22 >
 1e14dbc:    38 61             	b[r0 + 19] = r0
 1e14dbe:    5f 6b             	b[r5 + 21] = r7
 1e14dc0:    65 79             	r5 = 150
 1e14dc2:    66 6f             	r6 = b[r7 + 22] (u)
 1e14dc4:    62 2e             	if (r7 == 0) goto 196 <update_target_end+0x2002 : 1e14e8a >
 1e14dc6:    63 00             	cli r3
 1e14dc8:    5b 49             	[r4 + 84] = r3
 1e14dca:    6e 66             	b[r3 + 6] = r6
 1e14dcc:    6f 5d             	h[r6 + 44] = r7
 1e14dce:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x1FBC : 1e14e44 >
 1e14dd0:    5b 42             	[r1 + 20] = r3
 1e14dd2:    4f 41             	[r0 + 80] = r7
 1e14dd4:    52 44             	r2 = [r2 + 20]
 1e14dd6:    5d 25             	if (r2 == 0) goto -326 <update_target_end+0x1E0A : 1e14c92 >
 1e14dd8:    73 0d             	r3 >>>= r5
 1e14dda:    0a 00             	ssync
 1e14ddc:    62 6f             	r2 = b[r7 + 22] (u)
 1e14dde:    61 72             	r1 = 38
 1e14de0:    64 5f             	r4 = h[r7 + 44] (u)
 1e14de2:    73 65             	r3 = b[r2 + 23] (u)
 1e14de4:    74 5f             	r4 = h[r7 + 46] (u)
 1e14de6:    73 6f             	r3 = b[r7 + 23] (u)
 1e14de8:    66 74             	r6 = 70
 1e14dea:    5f 70             	r15 = 5
 1e14dec:    6f 77             	r15 = 118
 1e14dee:    65 72             	r5 = 38
 1e14df0:    6f 66             	b[r3 + 6] = r7
 1e14df2:    66 00             	cli r6
 1e14df4:    63 6c             	r3 = b[r6 + 6] (u)
 1e14df6:    6f 63             	b[r1 + 22] = r7
 1e14df8:    6b 00             	cli r11
 1e14dfa:    75 61             	r5 = b[r0 + 23] (u)
 1e14dfc:    72 74             	r2 = 71
 1e14dfe:    00 74             	r0 = 64
 1e14e00:    6d 72             	r13 = 38
 1e14e02:    31 00             	pc = [sp++]
 1e14e04:    52 45             	r2 = [r2 + 84]
 1e14e06:    54 49             	r4 = [r4 + 84]
 1e14e08:    20 3d             	if (r6 != 0) goto -448 <update_target_end+0x1DC2 : 1e14c4a >
 1e14e0a:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x1DC4 : 1e14c4c >
 1e14e0c:    30 38             	if (r4 != 0) goto 96 <update_target_end+0x1FE6 : 1e14e6e >
 1e14e0e:    78 20             	if (r0 == 0) goto 240 <update_target_end+0x2078 : 1e14f00 >
 1e14e10:    0d 0a             	sp += 24
 1e14e12:    00 55             	r0 = h[r2 + 32] (u)
 1e14e14:    53 50             	r3 = h[r0 + 10] (u)
 1e14e16:    20 3d             	if (r6 != 0) goto -448 <update_target_end+0x1DD0 : 1e14c58 >
 1e14e18:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x1DD2 : 1e14c5a >
 1e14e1a:    30 38             	if (r4 != 0) goto 96 <update_target_end+0x1FF4 : 1e14e7c >
 1e14e1c:    78 20             	if (r0 == 0) goto 240 <update_target_end+0x2086 : 1e14f0e >
 1e14e1e:    0d 0a             	sp += 24
 1e14e20:    00 53             	r0 = h[r1 + 32] (u)
 1e14e22:    53 50             	r3 = h[r0 + 10] (u)
 1e14e24:    20 3d             	if (r6 != 0) goto -448 <update_target_end+0x1DDE : 1e14c66 >
 1e14e26:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x1DE0 : 1e14c68 >
 1e14e28:    30 38             	if (r4 != 0) goto 96 <update_target_end+0x2002 : 1e14e8a >
 1e14e2a:    78 20             	if (r0 == 0) goto 240 <update_target_end+0x2094 : 1e14f1c >
 1e14e2c:    0d 0a             	sp += 24
 1e14e2e:    00 67             	r0 = b[r3 + 16] (u)
 1e14e30:    65 74             	r5 = 70
 1e14e32:    5f 63             	b[r1 + 21] = r7
 1e14e34:    68 69             	b[r4 + 22] = r0
 1e14e36:    70 5f             	r0 = h[r7 + 46] (u)
 1e14e38:    69 64             	b[r2 + 6] = r1
 1e14e3a:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x2028 : 1e14eb0 >
 1e14e3c:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x1FF6 : 1e14e7e >
 1e14e3e:    25 78             	r5 = 130
 1e14e40:    0a 00             	ssync
 1e14e42:    67 65             	r7 = b[r2 + 22] (u)
 1e14e44:    74 5f             	r4 = h[r7 + 46] (u)
 1e14e46:    76 62             	r6 = b[r1 + 7] (u)
 1e14e48:    61 74             	r1 = 70
 1e14e4a:    5f 74             	r15 = 69
 1e14e4c:    72 69             	r2 = b[r4 + 23] (u)
 1e14e4e:    6d 3a             	if (r5 != 0) goto 218 <update_target_end+0x20A2 : 1e14f2a >
 1e14e50:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x1E0A : 1e14c92 >
 1e14e52:    78 0a             	sp += 240
 1e14e54:    00 67             	r0 = b[r3 + 16] (u)
 1e14e56:    65 74             	r5 = 70
 1e14e58:    5f 76             	r15 = 101
 1e14e5a:    62 67             	r2 = b[r3 + 22] (u)
 1e14e5c:    5f 74             	r15 = 69
 1e14e5e:    72 69             	r2 = b[r4 + 23] (u)
 1e14e60:    6d 3a             	if (r5 != 0) goto 218 <update_target_end+0x20B4 : 1e14f3c >
 1e14e62:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x201C : 1e14ea4 >
 1e14e64:    25 78             	r5 = 130
 1e14e66:    0a 00             	ssync
 1e14e68:    44 42             	r4 = [r1 + 16]
 1e14e6a:    47 5f             	r7 = h[r7 + 40] (u)
 1e14e6c:    46 46             	r6 = [r3 + 16]
 1e14e6e:    54 00             	testset b[r4]
 1e14e70:    44 42             	r4 = [r1 + 16]
 1e14e72:    47 5f             	r7 = h[r7 + 40] (u)
 1e14e74:    45 51             	r5 = h[r0 + 40] (u)
 1e14e76:    00 43             	r0 = [r1 + 64]
 1e14e78:    78 72             	r8 = 39
 1e14e7a:    77 30             	if (r0 != 0) goto 238 <update_target_end+0x20E2 : 1e14f6a >
 1e14e7c:    72 77             	r2 = 119
 1e14e7e:    31 72             	r1 = 35
 1e14e80:    77 00             	sti r7
 1e14e82:    73 6f             	r3 = b[r7 + 23] (u)
 1e14e84:    66 74             	r6 = 70
 1e14e86:    6f 66             	b[r3 + 6] = r7
 1e14e88:    66 5f             	r6 = h[r7 + 44] (u)
 1e14e8a:    6c 65             	b[r2 + 22] = r4
 1e14e8c:    67 61             	r7 = b[r0 + 22] (u)
 1e14e8e:    63 79             	r3 = 150
 1e14e90:    00 73             	r0 = 48
 1e14e92:    6f 66             	b[r3 + 6] = r7
 1e14e94:    74 6f             	r4 = b[r7 + 23] (u)
 1e14e96:    66 66             	r6 = b[r3 + 6] (u)
 1e14e98:    5f 61             	b[r0 + 21] = r7
 1e14e9a:    64 76             	r4 = 102
 1e14e9c:    61 6e             	r1 = b[r7 + 6] (u)
 1e14e9e:    63 65             	r3 = b[r2 + 22] (u)
 1e14ea0:    00 4d             	r0 = [r6 + 64]
 1e14ea2:    32 50             	r2 = h[r0 + 6] (u)
 1e14ea4:    5f 56             	h[r3 + 10] = r7
 1e14ea6:    44 44             	r4 = [r2 + 16]
 1e14ea8:    49 4f             	[r7 + 80] = r1
 1e14eaa:    5f 4b             	[r5 + 84] = r7
 1e14eac:    45 45             	r5 = [r2 + 80]
 1e14eae:    50 3a             	if (r5 != 0) goto 160 <update_target_end+0x20C8 : 1e14f50 >
 1e14eb0:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x1E6A : 1e14cf2 >
 1e14eb2:    64 0a             	sp += 200
 1e14eb4:    00 4d             	r0 = [r6 + 64]
 1e14eb6:    32 50             	r2 = h[r0 + 6] (u)
 1e14eb8:    5f 4c             	[r6 + 20] = r7
 1e14eba:    52 43             	r2 = [r1 + 84]
 1e14ebc:    5f 4b             	[r5 + 84] = r7
 1e14ebe:    45 45             	r5 = [r2 + 80]
 1e14ec0:    50 3a             	if (r5 != 0) goto 160 <update_target_end+0x20DA : 1e14f62 >
 1e14ec2:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x1E7C : 1e14d04 >
 1e14ec4:    64 0a             	sp += 200
 1e14ec6:    00 4d             	r0 = [r6 + 64]
 1e14ec8:    32 50             	r2 = h[r0 + 6] (u)
 1e14eca:    5f 52             	h[r1 + 10] = r7
 1e14ecc:    54 43             	r4 = [r1 + 84]
 1e14ece:    5f 4b             	[r5 + 84] = r7
 1e14ed0:    45 45             	r5 = [r2 + 80]
 1e14ed2:    50 3a             	if (r5 != 0) goto 160 <update_target_end+0x20EC : 1e14f74 >
 1e14ed4:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x1E8E : 1e14d16 >
 1e14ed6:    64 0a             	sp += 200
 1e14ed8:    00 5b             	r0 = h[r5 + 32] (u)
 1e14eda:    32 2d             	if (r6 == 0) goto -412 <update_target_end+0x1EB8 : 1e14d40 >
 1e14edc:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x1EF6 : 1e14d7e >
 1e14ede:    33 5d             	r3 = h[r6 + 38] (u)
 1e14ee0:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x1EB4 : 1e14d3c >
 1e14ee2:    52 65             	r2 = b[r2 + 21] (u)
 1e14ee4:    73 65             	r3 = b[r2 + 23] (u)
 1e14ee6:    74 20             	if (r0 == 0) goto 232 <update_target_end+0x2148 : 1e14fd0 >
 1e14ee8:    53 6f             	r3 = b[r7 + 21] (u)
 1e14eea:    75 72             	r5 = 39
 1e14eec:    63 65             	r3 = b[r2 + 22] (u)
 1e14eee:    20 3a             	if (r5 != 0) goto 64 <update_target_end+0x20A8 : 1e14f30 >
 1e14ef0:    20 30             	if (r0 != 0) goto 64 <update_target_end+0x20AA : 1e14f32 >
 1e14ef2:    78 25             	if (r2 == 0) goto -272 <update_target_end+0x1F5C : 1e14de4 >
 1e14ef4:    78 0a             	sp += 240
 1e14ef6:    00 56             	r0 = h[r3 + 0] (u)
 1e14ef8:    44 44             	r4 = [r2 + 16]
 1e14efa:    49 4f             	[r7 + 80] = r1
 1e14efc:    20 50             	r0 = h[r0 + 4] (u)
 1e14efe:    4f 52             	h[r1 + 8] = r7
 1e14f00:    00 56             	r0 = h[r3 + 0] (u)
 1e14f02:    44 44             	r4 = [r2 + 16]
 1e14f04:    49 4f             	[r7 + 80] = r1
 1e14f06:    20 4c             	r0 = [r6 + 8]
 1e14f08:    56 44             	r6 = [r2 + 20]
 1e14f0a:    00 56             	r0 = h[r3 + 0] (u)
 1e14f0c:    43 4d             	r3 = [r6 + 80]
 1e14f0e:    00 50             	r0 = h[r0 + 0] (u)
 1e14f10:    50 49             	r0 = [r4 + 84]
 1e14f12:    4e 52             	h[r1 + 8] = r6
 1e14f14:    00 5b             	r0 = h[r5 + 32] (u)
 1e14f16:    31 2d             	if (r6 == 0) goto -414 <update_target_end+0x1EF2 : 1e14d7a >
 1e14f18:    50 31             	if (r0 != 0) goto -352 <update_target_end+0x1F32 : 1e14dba >
 1e14f1a:    31 5d             	r1 = h[r6 + 38] (u)
 1e14f1c:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x1EF0 : 1e14d78 >
 1e14f1e:    52 65             	r2 = b[r2 + 21] (u)
 1e14f20:    73 65             	r3 = b[r2 + 23] (u)
 1e14f22:    74 20             	if (r0 == 0) goto 232 <update_target_end+0x2184 : 1e1500c >
 1e14f24:    53 6f             	r3 = b[r7 + 21] (u)
 1e14f26:    75 72             	r5 = 39
 1e14f28:    63 65             	r3 = b[r2 + 22] (u)
 1e14f2a:    20 3a             	if (r5 != 0) goto 64 <update_target_end+0x20E4 : 1e14f6c >
 1e14f2c:    20 30             	if (r0 != 0) goto 64 <update_target_end+0x20E6 : 1e14f6e >
 1e14f2e:    78 25             	if (r2 == 0) goto -272 <update_target_end+0x1F98 : 1e14e20 >
 1e14f30:    78 0a             	sp += 240
 1e14f32:    00 50             	r0 = h[r0 + 0] (u)
 1e14f34:    56 44             	r6 = [r2 + 20]
 1e14f36:    44 20             	if (r0 == 0) goto 136 <update_target_end+0x2138 : 1e14fc0 >
 1e14f38:    50 4f             	r0 = [r7 + 84]
 1e14f3a:    52 00             	testset b[r2]
 1e14f3c:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x1F56 : 1e14dde >
 1e14f3e:    33 20             	if (r0 == 0) goto 102 <update_target_end+0x211E : 1e14fa6 >
 1e14f40:    53 59             	r3 = h[r4 + 42] (u)
 1e14f42:    53 20             	if (r0 == 0) goto 166 <update_target_end+0x2162 : 1e14fea >
 1e14f44:    52 45             	r2 = [r2 + 84]
 1e14f46:    53 45             	r3 = [r2 + 84]
 1e14f48:    54 00             	testset b[r4]
 1e14f4a:    57 44             	r7 = [r2 + 20]
 1e14f4c:    54 20             	if (r0 == 0) goto 168 <update_target_end+0x216E : 1e14ff6 >
 1e14f4e:    52 45             	r2 = [r2 + 84]
 1e14f50:    53 45             	r3 = [r2 + 84]
 1e14f52:    54 00             	testset b[r4]
 1e14f54:    5b 30             	if (r0 != 0) goto 182 <update_target_end+0x2184 : 1e1500c >
 1e14f56:    2d 4d             	[r6 + 72] = r5
 1e14f58:    53 59             	r3 = h[r4 + 42] (u)
 1e14f5a:    53 5d             	r3 = h[r6 + 42] (u)
 1e14f5c:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x1F30 : 1e14db8 >
 1e14f5e:    52 65             	r2 = b[r2 + 21] (u)
 1e14f60:    73 65             	r3 = b[r2 + 23] (u)
 1e14f62:    74 20             	if (r0 == 0) goto 232 <update_target_end+0x21C4 : 1e1504c >
 1e14f64:    53 6f             	r3 = b[r7 + 21] (u)
 1e14f66:    75 72             	r5 = 39
 1e14f68:    63 65             	r3 = b[r2 + 22] (u)
 1e14f6a:    20 3a             	if (r5 != 0) goto 64 <update_target_end+0x2124 : 1e14fac >
 1e14f6c:    20 30             	if (r0 != 0) goto 64 <update_target_end+0x2126 : 1e14fae >
 1e14f6e:    78 25             	if (r2 == 0) goto -272 <update_target_end+0x1FD8 : 1e14e60 >
 1e14f70:    78 0a             	sp += 240
 1e14f72:    00 50             	r0 = h[r0 + 0] (u)
 1e14f74:    31 31             	if (r0 != 0) goto -414 <update_target_end+0x1F50 : 1e14dd8 >
 1e14f76:    20 53             	r0 = h[r1 + 36] (u)
 1e14f78:    59 53             	h[r1 + 42] = r1
 1e14f7a:    20 52             	r0 = h[r1 + 4] (u)
 1e14f7c:    45 53             	r5 = h[r1 + 40] (u)
 1e14f7e:    45 54             	r5 = h[r2 + 8] (u)
 1e14f80:    00 44             	r0 = [r2 + 0]
 1e14f82:    56 44             	r6 = [r2 + 20]
 1e14f84:    44 20             	if (r0 == 0) goto 136 <update_target_end+0x2186 : 1e1500e >
 1e14f86:    50 4f             	r0 = [r7 + 84]
 1e14f88:    52 00             	testset b[r2]
 1e14f8a:    44 56             	r4 = h[r3 + 8] (u)
 1e14f8c:    44 44             	r4 = [r2 + 16]
 1e14f8e:    20 4e             	r0 = [r7 + 8]
 1e14f90:    4f 20             	if (r0 == 0) goto 158 <update_target_end+0x21A8 : 1e15030 >
 1e14f92:    4f 4b             	[r5 + 80] = r7
 1e14f94:    00 6d             	r0 = b[r6 + 16] (u)
 1e14f96:    6e 74             	r14 = 70
 1e14f98:    2f 73             	r15 = 50
 1e14f9a:    64 66             	r4 = b[r3 + 6] (u)
 1e14f9c:    69 6c             	b[r6 + 6] = r1
 1e14f9e:    65 2f             	if (r7 == 0) goto -310 <update_target_end+0x1FE2 : 1e14e6a >
 1e14fa0:    72 65             	r2 = b[r2 + 23] (u)
 1e14fa2:    73 2f             	if (r7 == 0) goto -282 <update_target_end+0x2002 : 1e14e8a >
 1e14fa4:    70 31             	if (r0 != 0) goto -288 <update_target_end+0x1FFE : 1e14e86 >
 1e14fa6:    31 5f             	r1 = h[r7 + 38] (u)
 1e14fa8:    63 6f             	r3 = b[r7 + 22] (u)
 1e14faa:    64 65             	r4 = b[r2 + 22] (u)
 1e14fac:    2e 62             	b[r1 + 2] = r6
 1e14fae:    69 6e             	b[r7 + 6] = r1
 1e14fb0:    00 44             	r0 = [r2 + 0]
 1e14fb2:    42 47             	r2 = [r3 + 80]
 1e14fb4:    5f 52             	h[r1 + 10] = r7
 1e14fb6:    45 56             	r5 = h[r3 + 8] (u)
 1e14fb8:    00 30             	if (r0 != 0) goto 0 <update_target_end+0x2132 : 1e14fba >
 1e14fba:    72 00             	sti r2
 1e14fbc:    77 6b             	r7 = b[r5 + 23] (u)
 1e14fbe:    75 70             	r5 = 7
 1e14fc0:    5f 68             	b[r4 + 5] = r7
 1e14fc2:    6f 6c             	b[r6 + 6] = r7
 1e14fc4:    64 00             	cli r4
 1e14fc6:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x1FE0 : 1e14e68 >
 1e14fc8:    5f 57             	h[r3 + 42] = r7
 1e14fca:    4b 55             	h[r2 + 40] = r3
 1e14fcc:    50 5f             	r0 = h[r7 + 42] (u)
 1e14fce:    45 4e             	r5 = [r7 + 16]
 1e14fd0:    30 20             	if (r0 == 0) goto 96 <update_target_end+0x21AA : 1e15032 >
 1e14fd2:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x218C : 1e15014 >
 1e14fd4:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x218E : 1e15016 >
 1e14fd6:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x2190 : 1e15018 >
 1e14fd8:    20 69             	r0 = b[r4 + 18] (u)
 1e14fda:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x223A : 1e150c2 >
 1e14fdc:    30 78             	r0 = 131
 1e14fde:    25 78             	r5 = 130
 1e14fe0:    0a 00             	ssync
 1e14fe2:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x1FFC : 1e14e84 >
 1e14fe4:    5f 57             	h[r3 + 42] = r7
 1e14fe6:    4b 55             	h[r2 + 40] = r3
 1e14fe8:    50 5f             	r0 = h[r7 + 42] (u)
 1e14fea:    45 4e             	r5 = [r7 + 16]
 1e14fec:    31 20             	if (r0 == 0) goto 98 <update_target_end+0x21C8 : 1e15050 >
 1e14fee:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x21A8 : 1e15030 >
 1e14ff0:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x21AA : 1e15032 >
 1e14ff2:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x21AC : 1e15034 >
 1e14ff4:    20 69             	r0 = b[r4 + 18] (u)
 1e14ff6:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x2256 : 1e150de >
 1e14ff8:    30 78             	r0 = 131
 1e14ffa:    25 78             	r5 = 130
 1e14ffc:    0a 00             	ssync
 1e14ffe:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x2018 : 1e14ea0 >
 1e15000:    5f 57             	h[r3 + 42] = r7
 1e15002:    4b 55             	h[r2 + 40] = r3
 1e15004:    50 5f             	r0 = h[r7 + 42] (u)
 1e15006:    45 44             	r5 = [r2 + 16]
 1e15008:    47 45             	r7 = [r2 + 80]
 1e1500a:    30 20             	if (r0 == 0) goto 96 <update_target_end+0x21E4 : 1e1506c >
 1e1500c:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x21C6 : 1e1504e >
 1e1500e:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x21C8 : 1e15050 >
 1e15010:    20 69             	r0 = b[r4 + 18] (u)
 1e15012:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x2272 : 1e150fa >
 1e15014:    30 78             	r0 = 131
 1e15016:    25 78             	r5 = 130
 1e15018:    0a 00             	ssync
 1e1501a:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x2034 : 1e14ebc >
 1e1501c:    5f 57             	h[r3 + 42] = r7
 1e1501e:    4b 55             	h[r2 + 40] = r3
 1e15020:    50 5f             	r0 = h[r7 + 42] (u)
 1e15022:    45 44             	r5 = [r2 + 16]
 1e15024:    47 45             	r7 = [r2 + 80]
 1e15026:    31 20             	if (r0 == 0) goto 98 <update_target_end+0x2202 : 1e1508a >
 1e15028:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x21E2 : 1e1506a >
 1e1502a:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x21E4 : 1e1506c >
 1e1502c:    20 69             	r0 = b[r4 + 18] (u)
 1e1502e:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x228E : 1e15116 >
 1e15030:    30 78             	r0 = 131
 1e15032:    25 78             	r5 = 130
 1e15034:    0a 00             	ssync
 1e15036:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x2050 : 1e14ed8 >
 1e15038:    5f 57             	h[r3 + 42] = r7
 1e1503a:    4b 55             	h[r2 + 40] = r3
 1e1503c:    50 5f             	r0 = h[r7 + 42] (u)
 1e1503e:    4c 45             	[r2 + 80] = r4
 1e15040:    56 45             	r6 = [r2 + 84]
 1e15042:    4c 30             	if (r0 != 0) goto 152 <update_target_end+0x2254 : 1e150dc >
 1e15044:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x21FE : 1e15086 >
 1e15046:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x2200 : 1e15088 >
 1e15048:    20 69             	r0 = b[r4 + 18] (u)
 1e1504a:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x22AA : 1e15132 >
 1e1504c:    30 78             	r0 = 131
 1e1504e:    25 78             	r5 = 130
 1e15050:    0a 00             	ssync
 1e15052:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x206C : 1e14ef4 >
 1e15054:    5f 57             	h[r3 + 42] = r7
 1e15056:    4b 55             	h[r2 + 40] = r3
 1e15058:    50 5f             	r0 = h[r7 + 42] (u)
 1e1505a:    4c 45             	[r2 + 80] = r4
 1e1505c:    56 45             	r6 = [r2 + 84]
 1e1505e:    4c 31             	if (r0 != 0) goto -360 <update_target_end+0x2070 : 1e14ef8 >
 1e15060:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x221A : 1e150a2 >
 1e15062:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x221C : 1e150a4 >
 1e15064:    20 69             	r0 = b[r4 + 18] (u)
 1e15066:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x22C6 : 1e1514e >
 1e15068:    30 78             	r0 = 131
 1e1506a:    25 78             	r5 = 130
 1e1506c:    0a 00             	ssync
 1e1506e:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x2088 : 1e14f10 >
 1e15070:    5f 57             	h[r3 + 42] = r7
 1e15072:    4b 55             	h[r2 + 40] = r3
 1e15074:    50 5f             	r0 = h[r7 + 42] (u)
 1e15076:    50 4e             	r0 = [r7 + 20]
 1e15078:    44 30             	if (r0 != 0) goto 136 <update_target_end+0x227A : 1e15102 >
 1e1507a:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x2234 : 1e150bc >
 1e1507c:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x2236 : 1e150be >
 1e1507e:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x2238 : 1e150c0 >
 1e15080:    20 69             	r0 = b[r4 + 18] (u)
 1e15082:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x22E2 : 1e1516a >
 1e15084:    30 78             	r0 = 131
 1e15086:    25 78             	r5 = 130
 1e15088:    0a 00             	ssync
 1e1508a:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x20A4 : 1e14f2c >
 1e1508c:    5f 57             	h[r3 + 42] = r7
 1e1508e:    4b 55             	h[r2 + 40] = r3
 1e15090:    50 5f             	r0 = h[r7 + 42] (u)
 1e15092:    50 4e             	r0 = [r7 + 20]
 1e15094:    44 31             	if (r0 != 0) goto -376 <update_target_end+0x2096 : 1e14f1e >
 1e15096:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x2250 : 1e150d8 >
 1e15098:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x2252 : 1e150da >
 1e1509a:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x2254 : 1e150dc >
 1e1509c:    20 69             	r0 = b[r4 + 18] (u)
 1e1509e:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x22FE : 1e15186 >
 1e150a0:    30 78             	r0 = 131
 1e150a2:    25 78             	r5 = 130
 1e150a4:    0a 00             	ssync
 1e150a6:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x20C0 : 1e14f48 >
 1e150a8:    5f 41             	[r0 + 84] = r7
 1e150aa:    57 4b             	r7 = [r5 + 84]
 1e150ac:    55 50             	r5 = h[r0 + 10] (u)
 1e150ae:    5f 45             	[r2 + 84] = r7
 1e150b0:    4e 20             	if (r0 == 0) goto 156 <update_target_end+0x22C6 : 1e1514e >
 1e150b2:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x226C : 1e150f4 >
 1e150b4:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x226E : 1e150f6 >
 1e150b6:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x2270 : 1e150f8 >
 1e150b8:    20 69             	r0 = b[r4 + 18] (u)
 1e150ba:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x231A : 1e151a2 >
 1e150bc:    30 78             	r0 = 131
 1e150be:    25 78             	r5 = 130
 1e150c0:    0a 00             	ssync
 1e150c2:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x20DC : 1e14f64 >
 1e150c4:    5f 41             	[r0 + 84] = r7
 1e150c6:    57 4b             	r7 = [r5 + 84]
 1e150c8:    55 50             	r5 = h[r0 + 10] (u)
 1e150ca:    5f 50             	h[r0 + 10] = r7
 1e150cc:    5f 49             	[r4 + 84] = r7
 1e150ce:    45 20             	if (r0 == 0) goto 138 <update_target_end+0x22D2 : 1e1515a >
 1e150d0:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x228A : 1e15112 >
 1e150d2:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x228C : 1e15114 >
 1e150d4:    20 69             	r0 = b[r4 + 18] (u)
 1e150d6:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x2336 : 1e151be >
 1e150d8:    30 78             	r0 = 131
 1e150da:    25 78             	r5 = 130
 1e150dc:    0a 00             	ssync
 1e150de:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x20F8 : 1e14f80 >
 1e150e0:    5f 41             	[r0 + 84] = r7
 1e150e2:    57 4b             	r7 = [r5 + 84]
 1e150e4:    55 50             	r5 = h[r0 + 10] (u)
 1e150e6:    5f 4e             	[r7 + 20] = r7
 1e150e8:    5f 49             	[r4 + 84] = r7
 1e150ea:    45 20             	if (r0 == 0) goto 138 <update_target_end+0x22EE : 1e15176 >
 1e150ec:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x22A6 : 1e1512e >
 1e150ee:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x22A8 : 1e15130 >
 1e150f0:    20 69             	r0 = b[r4 + 18] (u)
 1e150f2:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x2352 : 1e151da >
 1e150f4:    30 78             	r0 = 131
 1e150f6:    25 78             	r5 = 130
 1e150f8:    0a 00             	ssync
 1e150fa:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x2114 : 1e14f9c >
 1e150fc:    5f 41             	[r0 + 84] = r7
 1e150fe:    57 4b             	r7 = [r5 + 84]
 1e15100:    55 50             	r5 = h[r0 + 10] (u)
 1e15102:    5f 4c             	[r6 + 20] = r7
 1e15104:    45 56             	r5 = h[r3 + 8] (u)
 1e15106:    45 4c             	r5 = [r6 + 16]
 1e15108:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x22C2 : 1e1514a >
 1e1510a:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x22C4 : 1e1514c >
 1e1510c:    20 69             	r0 = b[r4 + 18] (u)
 1e1510e:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x236E : 1e151f6 >
 1e15110:    30 78             	r0 = 131
 1e15112:    25 78             	r5 = 130
 1e15114:    0a 00             	ssync
 1e15116:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x2130 : 1e14fb8 >
 1e15118:    5f 41             	[r0 + 84] = r7
 1e1511a:    57 4b             	r7 = [r5 + 84]
 1e1511c:    55 50             	r5 = h[r0 + 10] (u)
 1e1511e:    5f 50             	h[r0 + 10] = r7
 1e15120:    5f 50             	h[r0 + 10] = r7
 1e15122:    4e 44             	[r2 + 16] = r6
 1e15124:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x22DE : 1e15166 >
 1e15126:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x22E0 : 1e15168 >
 1e15128:    20 69             	r0 = b[r4 + 18] (u)
 1e1512a:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x238A : 1e15212 >
 1e1512c:    30 78             	r0 = 131
 1e1512e:    25 78             	r5 = 130
 1e15130:    0a 00             	ssync
 1e15132:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x214C : 1e14fd4 >
 1e15134:    5f 41             	[r0 + 84] = r7
 1e15136:    57 4b             	r7 = [r5 + 84]
 1e15138:    55 50             	r5 = h[r0 + 10] (u)
 1e1513a:    5f 4e             	[r7 + 20] = r7
 1e1513c:    5f 50             	h[r0 + 10] = r7
 1e1513e:    4e 44             	[r2 + 16] = r6
 1e15140:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x22FA : 1e15182 >
 1e15142:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x22FC : 1e15184 >
 1e15144:    20 69             	r0 = b[r4 + 18] (u)
 1e15146:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x23A6 : 1e1522e >
 1e15148:    30 78             	r0 = 131
 1e1514a:    25 78             	r5 = 130
 1e1514c:    0a 00             	ssync
 1e1514e:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x2168 : 1e14ff0 >
 1e15150:    5f 41             	[r0 + 84] = r7
 1e15152:    57 4b             	r7 = [r5 + 84]
 1e15154:    55 50             	r5 = h[r0 + 10] (u)
 1e15156:    5f 46             	[r3 + 20] = r7
 1e15158:    4c 54             	h[r2 + 8] = r4
 1e1515a:    30 20             	if (r0 == 0) goto 96 <update_target_end+0x2334 : 1e151bc >
 1e1515c:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x2316 : 1e1519e >
 1e1515e:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x2318 : 1e151a0 >
 1e15160:    20 69             	r0 = b[r4 + 18] (u)
 1e15162:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x23C2 : 1e1524a >
 1e15164:    30 78             	r0 = 131
 1e15166:    25 78             	r5 = 130
 1e15168:    0a 00             	ssync
 1e1516a:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x2184 : 1e1500c >
 1e1516c:    5f 41             	[r0 + 84] = r7
 1e1516e:    57 4b             	r7 = [r5 + 84]
 1e15170:    55 50             	r5 = h[r0 + 10] (u)
 1e15172:    5f 46             	[r3 + 20] = r7
 1e15174:    4c 54             	h[r2 + 8] = r4
 1e15176:    31 20             	if (r0 == 0) goto 98 <update_target_end+0x2352 : 1e151da >
 1e15178:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x2332 : 1e151ba >
 1e1517a:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x2334 : 1e151bc >
 1e1517c:    20 69             	r0 = b[r4 + 18] (u)
 1e1517e:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x23DE : 1e15266 >
 1e15180:    30 78             	r0 = 131
 1e15182:    25 78             	r5 = 130
 1e15184:    0a 00             	ssync
 1e15186:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x21A0 : 1e15028 >
 1e15188:    5f 41             	[r0 + 84] = r7
 1e1518a:    57 4b             	r7 = [r5 + 84]
 1e1518c:    55 50             	r5 = h[r0 + 10] (u)
 1e1518e:    5f 46             	[r3 + 20] = r7
 1e15190:    4c 54             	h[r2 + 8] = r4
 1e15192:    32 20             	if (r0 == 0) goto 100 <update_target_end+0x2370 : 1e151f8 >
 1e15194:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x234E : 1e151d6 >
 1e15196:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x2350 : 1e151d8 >
 1e15198:    20 69             	r0 = b[r4 + 18] (u)
 1e1519a:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x23FA : 1e15282 >
 1e1519c:    30 78             	r0 = 131
 1e1519e:    25 78             	r5 = 130
 1e151a0:    0a 00             	ssync
 1e151a2:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x21BC : 1e15044 >
 1e151a4:    5f 41             	[r0 + 84] = r7
 1e151a6:    57 4b             	r7 = [r5 + 84]
 1e151a8:    55 50             	r5 = h[r0 + 10] (u)
 1e151aa:    5f 49             	[r4 + 84] = r7
 1e151ac:    4e 53             	h[r1 + 40] = r6
 1e151ae:    45 4c             	r5 = [r6 + 16]
 1e151b0:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x236A : 1e151f2 >
 1e151b2:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x236C : 1e151f4 >
 1e151b4:    20 69             	r0 = b[r4 + 18] (u)
 1e151b6:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x2416 : 1e1529e >
 1e151b8:    30 78             	r0 = 131
 1e151ba:    25 78             	r5 = 130
 1e151bc:    0a 00             	ssync
 1e151be:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x21D8 : 1e15060 >
 1e151c0:    5f 50             	h[r0 + 10] = r7
 1e151c2:    4f 52             	h[r1 + 8] = r7
 1e151c4:    54 5f             	r4 = h[r7 + 42] (u)
 1e151c6:    53 45             	r3 = [r2 + 84]
 1e151c8:    4c 30             	if (r0 != 0) goto 152 <update_target_end+0x23DA : 1e15262 >
 1e151ca:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x2384 : 1e1520c >
 1e151cc:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x2386 : 1e1520e >
 1e151ce:    20 69             	r0 = b[r4 + 18] (u)
 1e151d0:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x2430 : 1e152b8 >
 1e151d2:    30 78             	r0 = 131
 1e151d4:    25 78             	r5 = 130
 1e151d6:    0a 00             	ssync
 1e151d8:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x21F2 : 1e1507a >
 1e151da:    5f 50             	h[r0 + 10] = r7
 1e151dc:    4f 52             	h[r1 + 8] = r7
 1e151de:    54 5f             	r4 = h[r7 + 42] (u)
 1e151e0:    53 45             	r3 = [r2 + 84]
 1e151e2:    4c 31             	if (r0 != 0) goto -360 <update_target_end+0x21F4 : 1e1507c >
 1e151e4:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x239E : 1e15226 >
 1e151e6:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x23A0 : 1e15228 >
 1e151e8:    20 69             	r0 = b[r4 + 18] (u)
 1e151ea:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x244A : 1e152d2 >
 1e151ec:    30 78             	r0 = 131
 1e151ee:    25 78             	r5 = 130
 1e151f0:    0a 00             	ssync
 1e151f2:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x220C : 1e15094 >
 1e151f4:    5f 50             	h[r0 + 10] = r7
 1e151f6:    4f 52             	h[r1 + 8] = r7
 1e151f8:    54 5f             	r4 = h[r7 + 42] (u)
 1e151fa:    53 45             	r3 = [r2 + 84]
 1e151fc:    4c 32             	if (r1 != 0) goto 152 <update_target_end+0x240E : 1e15296 >
 1e151fe:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x23B8 : 1e15240 >
 1e15200:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x23BA : 1e15242 >
 1e15202:    20 69             	r0 = b[r4 + 18] (u)
 1e15204:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x2464 : 1e152ec >
 1e15206:    30 78             	r0 = 131
 1e15208:    25 78             	r5 = 130
 1e1520a:    0a 00             	ssync
 1e1520c:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x2226 : 1e150ae >
 1e1520e:    5f 50             	h[r0 + 10] = r7
 1e15210:    4f 52             	h[r1 + 8] = r7
 1e15212:    54 5f             	r4 = h[r7 + 42] (u)
 1e15214:    53 45             	r3 = [r2 + 84]
 1e15216:    4c 33             	if (r1 != 0) goto -360 <update_target_end+0x2228 : 1e150b0 >
 1e15218:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x23D2 : 1e1525a >
 1e1521a:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x23D4 : 1e1525c >
 1e1521c:    20 69             	r0 = b[r4 + 18] (u)
 1e1521e:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x247E : 1e15306 >
 1e15220:    30 78             	r0 = 131
 1e15222:    25 78             	r5 = 130
 1e15224:    0a 00             	ssync
 1e15226:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x2240 : 1e150c8 >
 1e15228:    5f 50             	h[r0 + 10] = r7
 1e1522a:    4f 52             	h[r1 + 8] = r7
 1e1522c:    54 5f             	r4 = h[r7 + 42] (u)
 1e1522e:    53 45             	r3 = [r2 + 84]
 1e15230:    4c 34             	if (r2 != 0) goto 152 <update_target_end+0x2442 : 1e152ca >
 1e15232:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x23EC : 1e15274 >
 1e15234:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x23EE : 1e15276 >
 1e15236:    20 69             	r0 = b[r4 + 18] (u)
 1e15238:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x2498 : 1e15320 >
 1e1523a:    30 78             	r0 = 131
 1e1523c:    25 78             	r5 = 130
 1e1523e:    0a 00             	ssync
 1e15240:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x225A : 1e150e2 >
 1e15242:    5f 50             	h[r0 + 10] = r7
 1e15244:    4f 52             	h[r1 + 8] = r7
 1e15246:    54 5f             	r4 = h[r7 + 42] (u)
 1e15248:    53 45             	r3 = [r2 + 84]
 1e1524a:    4c 35             	if (r2 != 0) goto -360 <update_target_end+0x225C : 1e150e4 >
 1e1524c:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x2406 : 1e1528e >
 1e1524e:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x2408 : 1e15290 >
 1e15250:    20 69             	r0 = b[r4 + 18] (u)
 1e15252:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x24B2 : 1e1533a >
 1e15254:    30 78             	r0 = 131
 1e15256:    25 78             	r5 = 130
 1e15258:    0a 00             	ssync
 1e1525a:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x2274 : 1e150fc >
 1e1525c:    5f 50             	h[r0 + 10] = r7
 1e1525e:    4f 52             	h[r1 + 8] = r7
 1e15260:    54 5f             	r4 = h[r7 + 42] (u)
 1e15262:    53 45             	r3 = [r2 + 84]
 1e15264:    4c 36             	if (r3 != 0) goto 152 <update_target_end+0x2476 : 1e152fe >
 1e15266:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x2420 : 1e152a8 >
 1e15268:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x2422 : 1e152aa >
 1e1526a:    20 69             	r0 = b[r4 + 18] (u)
 1e1526c:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x24CC : 1e15354 >
 1e1526e:    30 78             	r0 = 131
 1e15270:    25 78             	r5 = 130
 1e15272:    0a 00             	ssync
 1e15274:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x228E : 1e15116 >
 1e15276:    5f 50             	h[r0 + 10] = r7
 1e15278:    4f 52             	h[r1 + 8] = r7
 1e1527a:    54 5f             	r4 = h[r7 + 42] (u)
 1e1527c:    53 45             	r3 = [r2 + 84]
 1e1527e:    4c 37             	if (r3 != 0) goto -360 <update_target_end+0x2290 : 1e15118 >
 1e15280:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x243A : 1e152c2 >
 1e15282:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x243C : 1e152c4 >
 1e15284:    20 69             	r0 = b[r4 + 18] (u)
 1e15286:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x24E6 : 1e1536e >
 1e15288:    30 78             	r0 = 131
 1e1528a:    25 78             	r5 = 130
 1e1528c:    0a 00             	ssync
 1e1528e:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x22A8 : 1e15130 >
 1e15290:    5f 50             	h[r0 + 10] = r7
 1e15292:    4f 52             	h[r1 + 8] = r7
 1e15294:    54 5f             	r4 = h[r7 + 42] (u)
 1e15296:    53 45             	r3 = [r2 + 84]
 1e15298:    4c 38             	if (r4 != 0) goto 152 <update_target_end+0x24AA : 1e15332 >
 1e1529a:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x2454 : 1e152dc >
 1e1529c:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x2456 : 1e152de >
 1e1529e:    20 69             	r0 = b[r4 + 18] (u)
 1e152a0:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x2500 : 1e15388 >
 1e152a2:    30 78             	r0 = 131
 1e152a4:    25 78             	r5 = 130
 1e152a6:    0a 00             	ssync
 1e152a8:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x22C2 : 1e1514a >
 1e152aa:    5f 50             	h[r0 + 10] = r7
 1e152ac:    4f 52             	h[r1 + 8] = r7
 1e152ae:    54 5f             	r4 = h[r7 + 42] (u)
 1e152b0:    53 45             	r3 = [r2 + 84]
 1e152b2:    4c 39             	if (r4 != 0) goto -360 <update_target_end+0x22C4 : 1e1514c >
 1e152b4:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x246E : 1e152f6 >
 1e152b6:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x2470 : 1e152f8 >
 1e152b8:    20 69             	r0 = b[r4 + 18] (u)
 1e152ba:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x251A : 1e153a2 >
 1e152bc:    30 78             	r0 = 131
 1e152be:    25 78             	r5 = 130
 1e152c0:    0a 00             	ssync
 1e152c2:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x22DC : 1e15164 >
 1e152c4:    5f 50             	h[r0 + 10] = r7
 1e152c6:    4f 52             	h[r1 + 8] = r7
 1e152c8:    54 5f             	r4 = h[r7 + 42] (u)
 1e152ca:    53 45             	r3 = [r2 + 84]
 1e152cc:    4c 31             	if (r0 != 0) goto -360 <update_target_end+0x22DE : 1e15166 >
 1e152ce:    30 20             	if (r0 == 0) goto 96 <update_target_end+0x24A8 : 1e15330 >
 1e152d0:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x248A : 1e15312 >
 1e152d2:    20 69             	r0 = b[r4 + 18] (u)
 1e152d4:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x2534 : 1e153bc >
 1e152d6:    30 78             	r0 = 131
 1e152d8:    25 78             	r5 = 130
 1e152da:    0a 00             	ssync
 1e152dc:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x22F6 : 1e1517e >
 1e152de:    5f 50             	h[r0 + 10] = r7
 1e152e0:    4f 52             	h[r1 + 8] = r7
 1e152e2:    54 5f             	r4 = h[r7 + 42] (u)
 1e152e4:    53 45             	r3 = [r2 + 84]
 1e152e6:    4c 31             	if (r0 != 0) goto -360 <update_target_end+0x22F8 : 1e15180 >
 1e152e8:    31 20             	if (r0 == 0) goto 98 <update_target_end+0x24C4 : 1e1534c >
 1e152ea:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x24A4 : 1e1532c >
 1e152ec:    20 69             	r0 = b[r4 + 18] (u)
 1e152ee:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x254E : 1e153d6 >
 1e152f0:    30 78             	r0 = 131
 1e152f2:    25 78             	r5 = 130
 1e152f4:    0a 00             	ssync
 1e152f6:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x2310 : 1e15198 >
 1e152f8:    5f 41             	[r0 + 84] = r7
 1e152fa:    50 4f             	r0 = [r7 + 84]
 1e152fc:    52 54             	r2 = h[r2 + 10] (u)
 1e152fe:    5f 53             	h[r1 + 42] = r7
 1e15300:    45 4c             	r5 = [r6 + 16]
 1e15302:    30 20             	if (r0 == 0) goto 96 <update_target_end+0x24DC : 1e15364 >
 1e15304:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x24BE : 1e15346 >
 1e15306:    69 73             	r9 = 54
 1e15308:    20 30             	if (r0 != 0) goto 64 <update_target_end+0x24C2 : 1e1534a >
 1e1530a:    78 25             	if (r2 == 0) goto -272 <update_target_end+0x2374 : 1e151fc >
 1e1530c:    78 0a             	sp += 240
 1e1530e:    00 50             	r0 = h[r0 + 0] (u)
 1e15310:    33 5f             	r3 = h[r7 + 38] (u)
 1e15312:    41 50             	r1 = h[r0 + 8] (u)
 1e15314:    4f 52             	h[r1 + 8] = r7
 1e15316:    54 5f             	r4 = h[r7 + 42] (u)
 1e15318:    53 45             	r3 = [r2 + 84]
 1e1531a:    4c 31             	if (r0 != 0) goto -360 <update_target_end+0x232C : 1e151b4 >
 1e1531c:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x24D6 : 1e1535e >
 1e1531e:    20 69             	r0 = b[r4 + 18] (u)
 1e15320:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x2580 : 1e15408 >
 1e15322:    30 78             	r0 = 131
 1e15324:    25 78             	r5 = 130
 1e15326:    0a 00             	ssync
 1e15328:    50 33             	if (r1 != 0) goto -352 <update_target_end+0x2342 : 1e151ca >
 1e1532a:    5f 41             	[r0 + 84] = r7
 1e1532c:    50 4f             	r0 = [r7 + 84]
 1e1532e:    52 54             	r2 = h[r2 + 10] (u)
 1e15330:    5f 53             	h[r1 + 42] = r7
 1e15332:    45 4c             	r5 = [r6 + 16]
 1e15334:    32 20             	if (r0 == 0) goto 100 <update_target_end+0x2512 : 1e1539a >
 1e15336:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x24F0 : 1e15378 >
 1e15338:    69 73             	r9 = 54
 1e1533a:    20 30             	if (r0 != 0) goto 64 <update_target_end+0x24F4 : 1e1537c >
 1e1533c:    78 25             	if (r2 == 0) goto -272 <update_target_end+0x23A6 : 1e1522e >
 1e1533e:    78 0a             	sp += 240
 1e15340:    00 63             	r0 = b[r1 + 16] (u)
 1e15342:    6d 64             	b[r2 + 6] = r5
 1e15344:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x2532 : 1e153ba >
 1e15346:    25 64             	r5 = b[r2 + 2] (u)
 1e15348:    0a 00             	ssync
 1e1534a:    72 74             	r2 = 71
 1e1534c:    63 5f             	r3 = h[r7 + 44] (u)
 1e1534e:    74 72             	r4 = 39
 1e15350:    69 6d             	b[r6 + 22] = r1
 1e15352:    00 6f             	r0 = b[r7 + 16] (u)
 1e15354:    74 67             	r4 = b[r3 + 23] (u)
 1e15356:    00 3c             	if (r6 != 0) goto 0 <update_target_end+0x24D0 : 1e15358 >
 1e15358:    45 72             	r5 = 36
 1e1535a:    72 6f             	r2 = b[r7 + 23] (u)
 1e1535c:    72 3e             	if (r7 != 0) goto 228 <update_target_end+0x25BA : 1e15442 >
 1e1535e:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x254C : 1e153d4 >
 1e15360:    5b 53             	h[r1 + 42] = r3
 1e15362:    59 53             	h[r1 + 42] = r1
 1e15364:    43 46             	r3 = [r3 + 16]
 1e15366:    47 5d             	r7 = h[r6 + 40] (u)
 1e15368:    6b 65             	b[r2 + 22] = r3
 1e1536a:    79 5f             	h[r7 + 46] = r1
 1e1536c:    6d 61             	b[r0 + 22] = r5
 1e1536e:    63 20             	if (r0 == 0) goto 198 <update_target_end+0x25AE : 1e15436 >
 1e15370:    61 6c             	r1 = b[r6 + 6] (u)
 1e15372:    6c 20             	if (r0 == 0) goto 216 <update_target_end+0x25C4 : 1e1544c >
 1e15374:    30 0d             	r0 >>>= r4
 1e15376:    0a 00             	ssync
 1e15378:    6f 73             	r15 = 54
 1e1537a:    00 49             	r0 = [r4 + 64]
 1e1537c:    44 4c             	r4 = [r6 + 16]
 1e1537e:    45 00             	testset b[r5]
 1e15380:    3c 45             	[r2 + 76] = r4
 1e15382:    72 72             	r2 = 39
 1e15384:    6f 72             	r15 = 38
 1e15386:    3e 3a             	if (r5 != 0) goto 124 <update_target_end+0x257C : 1e15404 >
 1e15388:    20 5b             	r0 = h[r5 + 36] (u)
 1e1538a:    50 6f             	r0 = b[r7 + 21] (u)
 1e1538c:    72 74             	r2 = 71
 1e1538e:    5d 76             	r13 = 101
 1e15390:    41 70             	r1 = 4
 1e15392:    70 6c             	r0 = b[r6 + 7] (u)
 1e15394:    69 63             	b[r1 + 22] = r1
 1e15396:    61 74             	r1 = 70
 1e15398:    69 6f             	b[r7 + 22] = r1
 1e1539a:    6e 4d             	[r6 + 88] = r6
 1e1539c:    61 6c             	r1 = b[r6 + 6] (u)
 1e1539e:    6c 6f             	b[r7 + 22] = r4
 1e153a0:    63 46             	r3 = [r3 + 24]
 1e153a2:    61 69             	r1 = b[r4 + 22] (u)
 1e153a4:    6c 65             	b[r2 + 22] = r4
 1e153a6:    64 48             	r4 = [r4 + 24]
 1e153a8:    6f 6f             	b[r7 + 22] = r7
 1e153aa:    6b 0d             	r11 >>= r5
 1e153ac:    0a 00             	ssync
 1e153ae:    70 76             	r0 = 103
 1e153b0:    50 6f             	r0 = b[r7 + 21] (u)
 1e153b2:    72 74             	r2 = 71
 1e153b4:    4d 61             	b[r0 + 20] = r5
 1e153b6:    6c 6c             	b[r6 + 6] = r4
 1e153b8:    6f 63             	b[r1 + 22] = r7
 1e153ba:    00 25             	if (r2 == 0) goto -512 <update_target_end+0x2334 : 1e151bc >
 1e153bc:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x261C : 1e154a4 >
 1e153be:    25 64             	r5 = b[r2 + 2] (u)
 1e153c0:    0a 00             	ssync
 1e153c2:    76 50             	r6 = h[r0 + 14] (u)
 1e153c4:    6f 72             	r15 = 38
 1e153c6:    74 46             	r4 = [r3 + 28]
 1e153c8:    72 65             	r2 = b[r2 + 23] (u)
 1e153ca:    65 00             	cli r5
 1e153cc:    73 79             	r3 = 151
 1e153ce:    73 5f             	r3 = h[r7 + 46] (u)
 1e153d0:    65 76             	r5 = 102
 1e153d2:    65 6e             	r5 = b[r7 + 6] (u)
 1e153d4:    74 00             	sti r4
 1e153d6:    61 70             	r1 = 6
 1e153d8:    70 5f             	r0 = h[r7 + 46] (u)
 1e153da:    61 72             	r1 = 38
 1e153dc:    65 61             	r5 = b[r0 + 22] (u)
 1e153de:    5f 68             	b[r4 + 5] = r7
 1e153e0:    65 61             	r5 = b[r0 + 22] (u)
 1e153e2:    64 00             	cli r4
 1e153e4:    45 58             	r5 = h[r4 + 8] (u)
 1e153e6:    54 5f             	r4 = h[r7 + 42] (u)
 1e153e8:    52 45             	r2 = [r2 + 84]
 1e153ea:    53 45             	r3 = [r2 + 84]
 1e153ec:    52 56             	r2 = h[r3 + 10] (u)
 1e153ee:    45 44             	r5 = [r2 + 16]
 1e153f0:    00 72             	r0 = 32
 1e153f2:    65 73             	r5 = 54
 1e153f4:    00 76             	r0 = 96
 1e153f6:    6d 00             	cli r13
 1e153f8:    3c 45             	[r2 + 76] = r4
 1e153fa:    72 72             	r2 = 39
 1e153fc:    6f 72             	r15 = 38
 1e153fe:    3e 3a             	if (r5 != 0) goto 124 <update_target_end+0x25F4 : 1e1547c >
 1e15400:    20 5b             	r0 = h[r5 + 36] (u)
 1e15402:    53 44             	r3 = [r2 + 20]
 1e15404:    46 49             	r6 = [r4 + 80]
 1e15406:    4c 45             	[r2 + 80] = r4
 1e15408:    5d 73             	r13 = 53
 1e1540a:    64 66             	r4 = b[r3 + 6] (u)
 1e1540c:    69 6c             	b[r6 + 6] = r1
 1e1540e:    65 20             	if (r0 == 0) goto 202 <update_target_end+0x2652 : 1e154da >
 1e15410:    67 65             	r7 = b[r2 + 22] (u)
 1e15412:    74 5f             	r4 = h[r7 + 46] (u)
 1e15414:    76 6d             	r6 = b[r6 + 23] (u)
 1e15416:    5f 61             	b[r0 + 21] = r7
 1e15418:    64 64             	r4 = b[r2 + 6] (u)
 1e1541a:    72 20             	if (r0 == 0) goto 228 <update_target_end+0x2678 : 1e15500 >
 1e1541c:    65 72             	r5 = 38
 1e1541e:    72 21             	if (r0 == 0) goto -284 <update_target_end+0x247C : 1e15304 >
 1e15420:    21 21             	if (r0 == 0) goto -446 <update_target_end+0x23DC : 1e15264 >
 1e15422:    0d 0a             	sp += 24
 1e15424:    00 5b             	r0 = h[r5 + 32] (u)
 1e15426:    49 6e             	b[r7 + 4] = r1
 1e15428:    66 6f             	r6 = b[r7 + 22] (u)
 1e1542a:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x265E : 1e154e6 >
 1e1542c:    20 5b             	r0 = h[r5 + 36] (u)
 1e1542e:    53 44             	r3 = [r2 + 20]
 1e15430:    46 49             	r6 = [r4 + 80]
 1e15432:    4c 45             	[r2 + 80] = r4
 1e15434:    5d 56             	h[r3 + 10] = r5
 1e15436:    4d 20             	if (r0 == 0) goto 154 <update_target_end+0x264A : 1e154d2 >
 1e15438:    73 69             	r3 = b[r4 + 23] (u)
 1e1543a:    7a 65             	b[r2 + 23] = r2
 1e1543c:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x262A : 1e154b2 >
 1e1543e:    30 78             	r0 = 131
 1e15440:    25 78             	r5 = 130
 1e15442:    20 40             	r0 = [r0 + 8]
 1e15444:    20 30             	if (r0 != 0) goto 64 <update_target_end+0x25FE : 1e15486 >
 1e15446:    78 25             	if (r2 == 0) goto -272 <update_target_end+0x24B0 : 1e15338 >
 1e15448:    78 0d             	r8 >>>= r5
 1e1544a:    0a 00             	ssync
 1e1544c:    5b 49             	[r4 + 84] = r3
 1e1544e:    6e 66             	b[r3 + 6] = r6
 1e15450:    6f 5d             	h[r6 + 44] = r7
 1e15452:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x2640 : 1e154c8 >
 1e15454:    5b 53             	h[r1 + 42] = r3
 1e15456:    44 46             	r4 = [r3 + 16]
 1e15458:    49 4c             	[r6 + 16] = r1
 1e1545a:    45 5d             	r5 = h[r6 + 40] (u)
 1e1545c:    64 69             	r4 = b[r4 + 22] (u)
 1e1545e:    73 6b             	r3 = b[r5 + 23] (u)
 1e15460:    20 63             	r0 = b[r1 + 18] (u)
 1e15462:    61 70             	r1 = 6
 1e15464:    61 63             	r1 = b[r1 + 22] (u)
 1e15466:    69 74             	r9 = 70
 1e15468:    79 20             	if (r0 == 0) goto 242 <update_target_end+0x26D4 : 1e1555c >
 1e1546a:    25 64             	r5 = b[r2 + 2] (u)
 1e1546c:    20 4b             	r0 = [r5 + 72]
 1e1546e:    42 0d             	r2 <<= r5
 1e15470:    0a 00             	ssync
 1e15472:    3c 45             	[r2 + 76] = r4
 1e15474:    72 72             	r2 = 39
 1e15476:    6f 72             	r15 = 38
 1e15478:    3e 3a             	if (r5 != 0) goto 124 <update_target_end+0x266E : 1e154f6 >
 1e1547a:    20 5b             	r0 = h[r5 + 36] (u)
 1e1547c:    53 44             	r3 = [r2 + 20]
 1e1547e:    46 49             	r6 = [r4 + 80]
 1e15480:    4c 45             	[r2 + 80] = r4
 1e15482:    5d 66             	b[r3 + 5] = r5
 1e15484:    69 6c             	b[r6 + 6] = r1
 1e15486:    65 20             	if (r0 == 0) goto 202 <update_target_end+0x26CA : 1e15552 >
 1e15488:    68 65             	b[r2 + 22] = r0
 1e1548a:    61 64             	r1 = b[r2 + 6] (u)
 1e1548c:    20 63             	r0 = b[r1 + 18] (u)
 1e1548e:    72 63             	r2 = b[r1 + 23] (u)
 1e15490:    20 65             	r0 = b[r2 + 18] (u)
 1e15492:    72 72             	r2 = 39
 1e15494:    2c 61             	b[r0 + 18] = r4
 1e15496:    64 64             	r4 = b[r2 + 6] (u)
 1e15498:    72 3d             	if (r6 != 0) goto -284 <update_target_end+0x24F6 : 1e1537e >
 1e1549a:    25 78             	r5 = 130
 1e1549c:    0a 0d             	r10 <<= r4
 1e1549e:    0a 00             	ssync
 1e154a0:    6c 61             	b[r0 + 22] = r4
 1e154a2:    73 74             	r3 = 71
 1e154a4:    20 66             	r0 = b[r3 + 2] (u)
 1e154a6:    69 6c             	b[r6 + 6] = r1
 1e154a8:    65 5f             	r5 = h[r7 + 44] (u)
 1e154aa:    61 64             	r1 = b[r2 + 6] (u)
 1e154ac:    64 72             	r4 = 38
 1e154ae:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x249C : 1e15324 >
 1e154b0:    78 20             	if (r0 == 0) goto 240 <update_target_end+0x271A : 1e155a2 >
 1e154b2:    25 78             	r5 = 130
 1e154b4:    0a 00             	ssync
 1e154b6:    65 6e             	r5 = b[r7 + 6] (u)
 1e154b8:    64 5f             	r4 = h[r7 + 44] (u)
 1e154ba:    61 64             	r1 = b[r2 + 6] (u)
 1e154bc:    64 72             	r4 = 38
 1e154be:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x24AC : 1e15334 >
 1e154c0:    78 0a             	sp += 240
 1e154c2:    00 6d             	r0 = b[r6 + 16] (u)
 1e154c4:    6e 74             	r14 = 70
 1e154c6:    2f 73             	r15 = 50
 1e154c8:    64 66             	r4 = b[r3 + 6] (u)
 1e154ca:    69 6c             	b[r6 + 6] = r1
 1e154cc:    65 00             	cli r5
 1e154ce:    5b 44             	[r2 + 20] = r3
 1e154d0:    65 62             	r5 = b[r1 + 6] (u)
 1e154d2:    75 67             	r5 = b[r3 + 23] (u)
 1e154d4:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x2708 : 1e15590 >
 1e154d6:    20 5b             	r0 = h[r5 + 36] (u)
 1e154d8:    53 44             	r3 = [r2 + 20]
 1e154da:    46 49             	r6 = [r4 + 80]
 1e154dc:    4c 45             	[r2 + 80] = r4
 1e154de:    5d 73             	r13 = 53
 1e154e0:    64 66             	r4 = b[r3 + 6] (u)
 1e154e2:    69 6c             	b[r6 + 6] = r1
 1e154e4:    65 20             	if (r0 == 0) goto 202 <update_target_end+0x2728 : 1e155b0 >
 1e154e6:    6d 6f             	b[r7 + 22] = r5
 1e154e8:    75 6e             	r5 = b[r7 + 7] (u)
 1e154ea:    74 20             	if (r0 == 0) goto 232 <update_target_end+0x274C : 1e155d4 >
 1e154ec:    73 75             	r3 = 87
 1e154ee:    63 63             	r3 = b[r1 + 22] (u)
 1e154f0:    0d 0a             	sp += 24
 1e154f2:    00 5b             	r0 = h[r5 + 32] (u)
 1e154f4:    44 65             	r4 = b[r2 + 20] (u)
 1e154f6:    62 75             	r2 = 86
 1e154f8:    67 5d             	r7 = h[r6 + 44] (u)
 1e154fa:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x26E8 : 1e15570 >
 1e154fc:    5b 53             	h[r1 + 42] = r3
 1e154fe:    44 46             	r4 = [r3 + 16]
 1e15500:    49 4c             	[r6 + 16] = r1
 1e15502:    45 5d             	r5 = h[r6 + 40] (u)
 1e15504:    73 64             	r3 = b[r2 + 7] (u)
 1e15506:    66 69             	r6 = b[r4 + 22] (u)
 1e15508:    6c 65             	b[r2 + 22] = r4
 1e1550a:    20 6d             	r0 = b[r6 + 18] (u)
 1e1550c:    6f 75             	r15 = 86
 1e1550e:    6e 74             	r14 = 70
 1e15510:    20 66             	r0 = b[r3 + 2] (u)
 1e15512:    61 69             	r1 = b[r4 + 22] (u)
 1e15514:    6c 65             	b[r2 + 22] = r4
 1e15516:    64 21             	if (r0 == 0) goto -312 <update_target_end+0x2558 : 1e153e0 >
 1e15518:    21 21             	if (r0 == 0) goto -446 <update_target_end+0x24D4 : 1e1535c >
 1e1551a:    0d 0a             	sp += 24
 1e1551c:    00 61             	r0 = b[r0 + 16] (u)
 1e1551e:    70 70             	r0 = 7
 1e15520:    00 3c             	if (r6 != 0) goto 0 <update_target_end+0x269A : 1e15522 >
 1e15522:    45 72             	r5 = 36
 1e15524:    72 6f             	r2 = b[r7 + 23] (u)
 1e15526:    72 3e             	if (r7 != 0) goto 228 <update_target_end+0x2784 : 1e1560c >
 1e15528:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x2716 : 1e1559e >
 1e1552a:    5b 53             	h[r1 + 42] = r3
 1e1552c:    44 46             	r4 = [r3 + 16]
 1e1552e:    49 4c             	[r6 + 16] = r1
 1e15530:    45 5d             	r5 = h[r6 + 40] (u)
 1e15532:    73 64             	r3 = b[r2 + 7] (u)
 1e15534:    66 69             	r6 = b[r4 + 22] (u)
 1e15536:    6c 65             	b[r2 + 22] = r4
 1e15538:    20 6e             	r0 = b[r7 + 2] (u)
 1e1553a:    6f 74             	r15 = 70
 1e1553c:    20 73             	r0 = 50
 1e1553e:    75 70             	r5 = 7
 1e15540:    70 6f             	r0 = b[r7 + 23] (u)
 1e15542:    72 74             	r2 = 71
 1e15544:    20 70             	r0 = 2
 1e15546:    61 72             	r1 = 38
 1e15548:    74 20             	if (r0 == 0) goto 232 <update_target_end+0x27AA : 1e15632 >
 1e1554a:    25 73             	r5 = 50
 1e1554c:    0d 0a             	sp += 24
 1e1554e:    00 5b             	r0 = h[r5 + 32] (u)
 1e15550:    44 65             	r4 = b[r2 + 20] (u)
 1e15552:    62 75             	r2 = 86
 1e15554:    67 5d             	r7 = h[r6 + 44] (u)
 1e15556:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x2744 : 1e155cc >
 1e15558:    5b 53             	h[r1 + 42] = r3
 1e1555a:    44 46             	r4 = [r3 + 16]
 1e1555c:    49 4c             	[r6 + 16] = r1
 1e1555e:    45 5d             	r5 = h[r6 + 40] (u)
 1e15560:    4f 70             	r15 = 4
 1e15562:    65 6e             	r5 = b[r7 + 6] (u)
 1e15564:    20 30             	if (r0 != 0) goto 64 <update_target_end+0x271E : 1e155a6 >
 1e15566:    78 25             	if (r2 == 0) goto -272 <update_target_end+0x25D0 : 1e15458 >
 1e15568:    78 2c             	if (r6 == 0) goto 240 <update_target_end+0x27D2 : 1e1565a >
 1e1556a:    20 5b             	r0 = h[r5 + 36] (u)
 1e1556c:    25 73             	r5 = 50
 1e1556e:    5d 20             	if (r0 == 0) goto 186 <update_target_end+0x27A2 : 1e1562a >
 1e15570:    46 61             	r6 = b[r0 + 20] (u)
 1e15572:    69 6c             	b[r6 + 6] = r1
 1e15574:    21 20             	if (r0 == 0) goto 66 <update_target_end+0x2730 : 1e155b8 >
 1e15576:    28 3e             	if (r7 != 0) goto 80 <update_target_end+0x2740 : 1e155c8 >
 1e15578:    5f 3c             	if (r6 != 0) goto 190 <update_target_end+0x27B0 : 1e15638 >
 1e1557a:    29 0d             	r9 >>= r4
 1e1557c:    0a 00             	ssync
 1e1557e:    74 61             	r4 = b[r0 + 23] (u)
 1e15580:    73 6b             	r3 = b[r5 + 23] (u)
 1e15582:    71 00             	sti r1
 1e15584:    61 6c             	r1 = b[r6 + 6] (u)
 1e15586:    6c 6f             	b[r7 + 22] = r4
 1e15588:    63 2d             	if (r6 == 0) goto -314 <update_target_end+0x25C8 : 1e15450 >
 1e1558a:    65 72             	r5 = 38
 1e1558c:    31 3a             	if (r5 != 0) goto 98 <update_target_end+0x2768 : 1e155f0 >
 1e1558e:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x2548 : 1e153d0 >
 1e15590:    78 2c             	if (r6 == 0) goto 240 <update_target_end+0x27FA : 1e15682 >
 1e15592:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x254C : 1e153d4 >
 1e15594:    78 2c             	if (r6 == 0) goto 240 <update_target_end+0x27FE : 1e15686 >
 1e15596:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x2550 : 1e153d8 >
 1e15598:    78 0a             	sp += 240
 1e1559a:    00 28             	if (r4 == 0) goto 0 <update_target_end+0x2714 : 1e1559c >
 1e1559c:    6e 75             	r14 = 86
 1e1559e:    6c 6c             	b[r6 + 6] = r4
 1e155a0:    29 00             	swi 1
 1e155a2:    5b 25             	if (r2 == 0) goto -330 <update_target_end+0x25D2 : 1e1545a >
 1e155a4:    30 32             	if (r1 != 0) goto 96 <update_target_end+0x277E : 1e15606 >
 1e155a6:    64 3a             	if (r5 != 0) goto 200 <update_target_end+0x27E8 : 1e15670 >
 1e155a8:    25 30             	if (r0 != 0) goto 74 <update_target_end+0x276C : 1e155f4 >
 1e155aa:    32 64             	r2 = b[r2 + 3] (u)
 1e155ac:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x259A : 1e15422 >
 1e155ae:    30 32             	if (r1 != 0) goto 96 <update_target_end+0x2788 : 1e15610 >
 1e155b0:    64 2e             	if (r7 == 0) goto 200 <update_target_end+0x27F2 : 1e1567a >
 1e155b2:    25 30             	if (r0 != 0) goto 74 <update_target_end+0x2776 : 1e155fe >
 1e155b4:    33 64             	r3 = b[r2 + 3] (u)
 1e155b6:    5d 00             	testset b[r13]
 1e155b8:    28 77             	r8 = 114
 1e155ba:    61 72             	r1 = 38
 1e155bc:    6e 29             	if (r4 == 0) goto -292 <update_target_end+0x2612 : 1e1549a >
 1e155be:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x27AC : 1e15634 >
 1e155c0:    00 28             	if (r4 == 0) goto 0 <update_target_end+0x273A : 1e155c2 >
 1e155c2:    65 72             	r5 = 38
 1e155c4:    72 6f             	r2 = b[r7 + 23] (u)
 1e155c6:    72 29             	if (r4 == 0) goto -284 <update_target_end+0x2624 : 1e154ac >
 1e155c8:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x27B6 : 1e1563e >
 1e155ca:    00 75             	r0 = 80
 1e155cc:    73 72             	r3 = 39
 1e155ce:    5f 73             	r15 = 53
 1e155d0:    79 73             	r9 = 55
 1e155d2:    74 69             	r4 = b[r4 + 23] (u)
 1e155d4:    6d 65             	b[r2 + 22] = r5
 1e155d6:    72 00             	sti r2
 1e155d8:    6d 6e             	b[r7 + 6] = r5
 1e155da:    74 2f             	if (r7 == 0) goto -280 <update_target_end+0x263C : 1e154c4 >
 1e155dc:    73 64             	r3 = b[r2 + 7] (u)
 1e155de:    66 69             	r6 = b[r4 + 22] (u)
 1e155e0:    6c 65             	b[r2 + 22] = r4
 1e155e2:    2f 61             	b[r0 + 18] = r7
 1e155e4:    70 70             	r0 = 7
 1e155e6:    2f 63             	b[r1 + 18] = r7
 1e155e8:    66 67             	r6 = b[r3 + 22] (u)
 1e155ea:    5f 74             	r15 = 69
 1e155ec:    6f 6f             	b[r7 + 22] = r7
 1e155ee:    6c 2e             	if (r7 == 0) goto 216 <update_target_end+0x2840 : 1e156c8 >
 1e155f0:    62 69             	r2 = b[r4 + 22] (u)
 1e155f2:    6e 00             	cli r14
 1e155f4:    3c 45             	[r2 + 76] = r4
 1e155f6:    72 72             	r2 = 39
 1e155f8:    6f 72             	r15 = 38
 1e155fa:    3e 3a             	if (r5 != 0) goto 124 <update_target_end+0x27F0 : 1e15678 >
 1e155fc:    20 5b             	r0 = h[r5 + 36] (u)
 1e155fe:    43 46             	r3 = [r3 + 16]
 1e15600:    47 20             	if (r0 == 0) goto 142 <update_target_end+0x2808 : 1e15690 >
 1e15602:    42 49             	r2 = [r4 + 80]
 1e15604:    4e 5d             	h[r6 + 40] = r6
 1e15606:    6f 70             	r15 = 6
 1e15608:    65 6e             	r5 = b[r7 + 6] (u)
 1e1560a:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x25C4 : 1e1544c >
 1e1560c:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x286C : 1e156f4 >
 1e1560e:    66 61             	r6 = b[r0 + 22] (u)
 1e15610:    69 6c             	b[r6 + 6] = r1
 1e15612:    0d 0a             	sp += 24
 1e15614:    00 6d             	r0 = b[r6 + 16] (u)
 1e15616:    6e 74             	r14 = 70
 1e15618:    2f 73             	r15 = 50
 1e1561a:    64 66             	r4 = b[r3 + 6] (u)
 1e1561c:    69 6c             	b[r6 + 6] = r1
 1e1561e:    65 2f             	if (r7 == 0) goto -310 <update_target_end+0x2662 : 1e154ea >
 1e15620:    61 70             	r1 = 6
 1e15622:    70 2f             	if (r7 == 0) goto -288 <update_target_end+0x267C : 1e15504 >
 1e15624:    62 74             	r2 = 70
 1e15626:    69 66             	b[r3 + 6] = r1
 1e15628:    00 3c             	if (r6 != 0) goto 0 <update_target_end+0x27A2 : 1e1562a >
 1e1562a:    45 72             	r5 = 36
 1e1562c:    72 6f             	r2 = b[r7 + 23] (u)
 1e1562e:    72 3e             	if (r7 != 0) goto 228 <update_target_end+0x288C : 1e15714 >
 1e15630:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x281E : 1e156a6 >
 1e15632:    5b 42             	[r1 + 20] = r3
 1e15634:    54 49             	r4 = [r4 + 84]
 1e15636:    46 5d             	r6 = h[r6 + 40] (u)
 1e15638:    63 68             	r3 = b[r4 + 6] (u)
 1e1563a:    65 63             	r5 = b[r1 + 22] (u)
 1e1563c:    6b 20             	if (r0 == 0) goto 214 <update_target_end+0x288C : 1e15714 >
 1e1563e:    69 74             	r9 = 70
 1e15640:    65 6d             	r5 = b[r6 + 22] (u)
 1e15642:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x25FC : 1e15484 >
 1e15644:    64 20             	if (r0 == 0) goto 200 <update_target_end+0x2886 : 1e1570e >
 1e15646:    65 72             	r5 = 38
 1e15648:    72 21             	if (r0 == 0) goto -284 <update_target_end+0x26A6 : 1e1552e >
 1e1564a:    0d 0a             	sp += 24
 1e1564c:    00 5b             	r0 = h[r5 + 32] (u)
 1e1564e:    49 6e             	b[r7 + 4] = r1
 1e15650:    66 6f             	r6 = b[r7 + 22] (u)
 1e15652:    5d 3a             	if (r5 != 0) goto 186 <update_target_end+0x2886 : 1e1570e >
 1e15654:    20 5b             	r0 = h[r5 + 36] (u)
 1e15656:    42 54             	r2 = h[r2 + 8] (u)
 1e15658:    49 46             	[r3 + 16] = r1
 1e1565a:    5d 25             	if (r2 == 0) goto -326 <update_target_end+0x268E : 1e15516 >
 1e1565c:    73 20             	if (r0 == 0) goto 230 <update_target_end+0x28BC : 1e15744 >
 1e1565e:    40 20             	if (r0 == 0) goto 128 <update_target_end+0x2858 : 1e156e0 >
 1e15660:    30 78             	r0 = 131
 1e15662:    25 78             	r5 = 130
 1e15664:    0d 0a             	sp += 24
 1e15666:    00 5f             	r0 = h[r7 + 32] (u)
 1e15668:    5f 62             	b[r1 + 5] = r7
 1e1566a:    74 69             	r4 = b[r4 + 23] (u)
 1e1566c:    66 5f             	r6 = h[r7 + 44] (u)
 1e1566e:    61 72             	r1 = 38
 1e15670:    65 61             	r5 = b[r0 + 22] (u)
 1e15672:    5f 65             	b[r2 + 21] = r7
 1e15674:    72 61             	r2 = b[r0 + 23] (u)
 1e15676:    73 65             	r3 = b[r2 + 23] (u)
 1e15678:    00 62             	r0 = b[r1 + 0] (u)
 1e1567a:    74 73             	r4 = 55
 1e1567c:    74 61             	r4 = b[r0 + 23] (u)
 1e1567e:    63 6b             	r3 = b[r5 + 22] (u)
 1e15680:    5f 6c             	b[r6 + 5] = r7
 1e15682:    6f 77             	r15 = 118
 1e15684:    70 77             	r0 = 119
 1e15686:    65 72             	r5 = 38
 1e15688:    5f 64             	b[r2 + 5] = r7
 1e1568a:    65 61             	r5 = b[r0 + 22] (u)
 1e1568c:    6c 00             	cli r12
 1e1568e:    62 74             	r2 = 70
 1e15690:    73 74             	r3 = 71
 1e15692:    61 63             	r1 = b[r1 + 22] (u)
 1e15694:    6b 00             	cli r11
 1e15696:    73 74             	r3 = 71
 1e15698:    61 63             	r1 = b[r1 + 22] (u)
 1e1569a:    6b 5f             	h[r7 + 44] = r3
 1e1569c:    72 65             	r2 = b[r2 + 23] (u)
 1e1569e:    73 75             	r3 = 87
 1e156a0:    6d 65             	b[r2 + 22] = r5
 1e156a2:    5f 66             	b[r3 + 5] = r7
 1e156a4:    61 69             	r1 = b[r4 + 22] (u)
 1e156a6:    6c 21             	if (r0 == 0) goto -296 <update_target_end+0x26F8 : 1e15580 >
 1e156a8:    21 21             	if (r0 == 0) goto -446 <update_target_end+0x2664 : 1e154ec >
 1e156aa:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x2698 : 1e15520 >
 1e156ac:    64 0a             	sp += 200
 1e156ae:    00 62             	r0 = b[r1 + 0] (u)
 1e156b0:    74 70             	r4 = 7
 1e156b2:    72 6f             	r2 = b[r7 + 23] (u)
 1e156b4:    66 69             	r6 = b[r4 + 22] (u)
 1e156b6:    6c 65             	b[r2 + 22] = r4
 1e156b8:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x28A6 : 1e1572e >
 1e156ba:    71 66             	r1 = b[r3 + 7] (u)
 1e156bc:    75 6c             	r5 = b[r6 + 7] (u)
 1e156be:    6c 3a             	if (r5 != 0) goto 216 <update_target_end+0x2910 : 1e15798 >
 1e156c0:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x267A : 1e15502 >
 1e156c2:    64 2c             	if (r6 == 0) goto 200 <update_target_end+0x2904 : 1e1578c >
 1e156c4:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x267E : 1e15506 >
 1e156c6:    64 0a             	sp += 200
 1e156c8:    00 6c             	r0 = b[r6 + 0] (u)
 1e156ca:    65 5f             	r5 = h[r7 + 44] (u)
 1e156cc:    73 75             	r3 = 87
 1e156ce:    70 70             	r0 = 7
 1e156d0:    6f 72             	r15 = 38
 1e156d2:    74 3a             	if (r5 != 0) goto 232 <update_target_end+0x2934 : 1e157bc >
 1e156d4:    25 78             	r5 = 130
 1e156d6:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x2690 : 1e15518 >
 1e156d8:    78 0a             	sp += 240
 1e156da:    00 6c             	r0 = b[r6 + 0] (u)
 1e156dc:    65 5f             	r5 = h[r7 + 44] (u)
 1e156de:    63 6f             	r3 = b[r7 + 22] (u)
 1e156e0:    6e 66             	b[r3 + 6] = r6
 1e156e2:    69 67             	b[r3 + 22] = r1
 1e156e4:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x26D2 : 1e1555a >
 1e156e6:    78 20             	if (r0 == 0) goto 240 <update_target_end+0x2950 : 1e157d8 >
 1e156e8:    25 78             	r5 = 130
 1e156ea:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x26A4 : 1e1552c >
 1e156ec:    78 20             	if (r0 == 0) goto 240 <update_target_end+0x2956 : 1e157de >
 1e156ee:    25 78             	r5 = 130
 1e156f0:    0a 00             	ssync
 1e156f2:    62 74             	r2 = 70
 1e156f4:    73 74             	r3 = 71
 1e156f6:    61 63             	r1 = b[r1 + 22] (u)
 1e156f8:    6b 5f             	h[r7 + 44] = r3
 1e156fa:    65 78             	r5 = 134
 1e156fc:    69 74             	r9 = 70
 1e156fe:    20 65             	r0 = b[r2 + 18] (u)
 1e15700:    6e 74             	r14 = 70
 1e15702:    65 72             	r5 = 38
 1e15704:    0a 00             	ssync
 1e15706:    62 6c             	r2 = b[r6 + 6] (u)
 1e15708:    65 5f             	r5 = h[r7 + 44] (u)
 1e1570a:    65 78             	r5 = 134
 1e1570c:    69 74             	r9 = 70
 1e1570e:    20 6f             	r0 = b[r7 + 18] (u)
 1e15710:    76 65             	r6 = b[r2 + 23] (u)
 1e15712:    72 0a             	sp += 228
 1e15714:    00 62             	r0 = b[r1 + 0] (u)
 1e15716:    74 63             	r4 = b[r1 + 23] (u)
 1e15718:    74 72             	r4 = 39
 1e1571a:    6c 65             	b[r2 + 22] = r4
 1e1571c:    72 20             	if (r0 == 0) goto 228 <update_target_end+0x297A : 1e15802 >
 1e1571e:    65 78             	r5 = 134
 1e15720:    69 74             	r9 = 70
 1e15722:    20 6f             	r0 = b[r7 + 18] (u)
 1e15724:    76 65             	r6 = b[r2 + 23] (u)
 1e15726:    72 20             	if (r0 == 0) goto 228 <update_target_end+0x2984 : 1e1580c >
 1e15728:    0a 00             	ssync
 1e1572a:    62 74             	r2 = 70
 1e1572c:    73 74             	r3 = 71
 1e1572e:    61 63             	r1 = b[r1 + 22] (u)
 1e15730:    6b 20             	if (r0 == 0) goto 214 <update_target_end+0x2980 : 1e15808 >
 1e15732:    65 78             	r5 = 134
 1e15734:    69 74             	r9 = 70
 1e15736:    20 6f             	r0 = b[r7 + 18] (u)
 1e15738:    76 65             	r6 = b[r2 + 23] (u)
 1e1573a:    72 20             	if (r0 == 0) goto 228 <update_target_end+0x2998 : 1e15820 >
 1e1573c:    0a 00             	ssync
 1e1573e:    32 32             	if (r1 != 0) goto 100 <update_target_end+0x291C : 1e157a4 >
 1e15740:    32 44             	r2 = [r2 + 12]
 1e15742:    00 32             	if (r1 != 0) goto 0 <update_target_end+0x28BC : 1e15744 >
 1e15744:    32 32             	if (r1 != 0) goto 100 <update_target_end+0x2922 : 1e157aa >
 1e15746:    32 32             	if (r1 != 0) goto 100 <update_target_end+0x2924 : 1e157ac >
 1e15748:    00 6c             	r0 = b[r6 + 0] (u)
 1e1574a:    65 6e             	r5 = b[r7 + 6] (u)
 1e1574c:    3d 30             	if (r0 != 0) goto 122 <update_target_end+0x2940 : 1e157c8 >
 1e1574e:    3f 00             	ssp = sp
 1e15750:    62 6c             	r2 = b[r6 + 6] (u)
 1e15752:    65 5f             	r5 = h[r7 + 44] (u)
 1e15754:    65 72             	r5 = 38
 1e15756:    72 5f             	r2 = h[r7 + 46] (u)
 1e15758:    73 3a             	if (r5 != 0) goto 230 <update_target_end+0x29B8 : 1e15840 >
 1e1575a:    77 6c             	r7 = b[r6 + 7] (u)
 1e1575c:    65 6e             	r5 = b[r7 + 6] (u)
 1e1575e:    3d 25             	if (r2 == 0) goto -390 <update_target_end+0x2752 : 1e155da >
 1e15760:    64 2c             	if (r6 == 0) goto 200 <update_target_end+0x29A2 : 1e1582a >
 1e15762:    65 72             	r5 = 38
 1e15764:    72 3d             	if (r6 != 0) goto -284 <update_target_end+0x27C2 : 1e1564a >
 1e15766:    25 64             	r5 = b[r2 + 2] (u)
 1e15768:    2c 6c             	b[r6 + 2] = r4
 1e1576a:    65 6e             	r5 = b[r7 + 6] (u)
 1e1576c:    3d 25             	if (r2 == 0) goto -390 <update_target_end+0x2760 : 1e155e8 >
 1e1576e:    64 0a             	sp += 200
 1e15770:    00 61             	r0 = b[r0 + 16] (u)
 1e15772:    74 74             	r4 = 71
 1e15774:    5f 65             	b[r2 + 21] = r7
 1e15776:    72 72             	r2 = 39
 1e15778:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x2766 : 1e155ee >
 1e1577a:    30 32             	if (r1 != 0) goto 96 <update_target_end+0x2954 : 1e157dc >
 1e1577c:    78 0a             	sp += 240
 1e1577e:    00 61             	r0 = b[r0 + 16] (u)
 1e15780:    74 74             	r4 = 71
 1e15782:    5f 73             	r15 = 53
 1e15784:    65 6e             	r5 = b[r7 + 6] (u)
 1e15786:    64 20             	if (r0 == 0) goto 200 <update_target_end+0x29C8 : 1e15850 >
 1e15788:    6e 65             	b[r2 + 22] = r6
 1e1578a:    65 64             	r5 = b[r2 + 6] (u)
 1e1578c:    5f 73             	r15 = 53
 1e1578e:    69 7a             	r9 = 166
 1e15790:    65 20             	if (r0 == 0) goto 202 <update_target_end+0x29D4 : 1e1585c >
 1e15792:    3e 3d             	if (r6 != 0) goto -388 <update_target_end+0x2788 : 1e15610 >
 1e15794:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x274E : 1e155d6 >
 1e15796:    64 2b             	if (r5 == 0) goto -312 <update_target_end+0x27D8 : 1e15660 >
 1e15798:    25 64             	r5 = b[r2 + 2] (u)
 1e1579a:    2b 25             	if (r2 == 0) goto -426 <update_target_end+0x276A : 1e155f2 >
 1e1579c:    64 0a             	sp += 200
 1e1579e:    00 6c             	r0 = b[r6 + 0] (u)
 1e157a0:    6f 63             	b[r1 + 22] = r7
 1e157a2:    61 6c             	r1 = b[r6 + 6] (u)
 1e157a4:    5f 73             	r15 = 53
 1e157a6:    65 6e             	r5 = b[r7 + 6] (u)
 1e157a8:    64 62             	r4 = b[r1 + 6] (u)
 1e157aa:    75 66             	r5 = b[r3 + 7] (u)
 1e157ac:    5f 73             	r15 = 53
 1e157ae:    69 7a             	r9 = 166
 1e157b0:    65 20             	if (r0 == 0) goto 202 <update_target_end+0x29F4 : 1e1587c >
 1e157b2:    6e 6f             	b[r7 + 22] = r6
 1e157b4:    74 20             	if (r0 == 0) goto 232 <update_target_end+0x2A16 : 1e1589e >
 1e157b6:    65 6e             	r5 = b[r7 + 6] (u)
 1e157b8:    6f 75             	r15 = 86
 1e157ba:    67 68             	r7 = b[r4 + 6] (u)
 1e157bc:    21 21             	if (r0 == 0) goto -446 <update_target_end+0x2778 : 1e15600 >
 1e157be:    21 2c             	if (r6 == 0) goto 66 <update_target_end+0x297A : 1e15802 >
 1e157c0:    6e 65             	b[r2 + 22] = r6
 1e157c2:    65 64             	r5 = b[r2 + 6] (u)
 1e157c4:    5f 73             	r15 = 53
 1e157c6:    69 7a             	r9 = 166
 1e157c8:    65 20             	if (r0 == 0) goto 202 <update_target_end+0x2A0C : 1e15894 >
 1e157ca:    3e 3d             	if (r6 != 0) goto -388 <update_target_end+0x27C0 : 1e15648 >
 1e157cc:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x2786 : 1e1560e >
 1e157ce:    64 0a             	sp += 200
 1e157d0:    00 23             	if (r1 == 0) goto -512 <update_target_end+0x274A : 1e155d2 >
 1e157d2:    23 23             	if (r1 == 0) goto -442 <update_target_end+0x2792 : 1e1561a >
 1e157d4:    66 69             	r6 = b[r4 + 22] (u)
 1e157d6:    78 20             	if (r0 == 0) goto 240 <update_target_end+0x2A40 : 1e158c8 >
 1e157d8:    62 6c             	r2 = b[r6 + 6] (u)
 1e157da:    65 20             	if (r0 == 0) goto 202 <update_target_end+0x2A1E : 1e158a6 >
 1e157dc:    6c 69             	b[r4 + 22] = r4
 1e157de:    73 74             	r3 = 71
 1e157e0:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x27CE : 1e15656 >
 1e157e2:    64 0a             	sp += 200
 1e157e4:    00 61             	r0 = b[r0 + 16] (u)
 1e157e6:    74 74             	r4 = 71
 1e157e8:    20 64             	r0 = b[r2 + 2] (u)
 1e157ea:    69 73             	r9 = 54
 1e157ec:    63 6f             	r3 = b[r7 + 22] (u)
 1e157ee:    6e 6e             	b[r7 + 6] = r6
 1e157f0:    00 73             	r0 = 48
 1e157f2:    6d 20             	if (r0 == 0) goto 218 <update_target_end+0x2A46 : 1e158ce >
 1e157f4:    64 69             	r4 = b[r4 + 22] (u)
 1e157f6:    73 63             	r3 = b[r1 + 23] (u)
 1e157f8:    6f 6e             	b[r7 + 6] = r7
 1e157fa:    6e 65             	b[r2 + 22] = r6
 1e157fc:    63 74             	r3 = 70
 1e157fe:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x27EC : 1e15674 >
 1e15800:    64 0a             	sp += 200
 1e15802:    00 61             	r0 = b[r0 + 16] (u)
 1e15804:    70 70             	r0 = 7
 1e15806:    5f 63             	b[r1 + 21] = r7
 1e15808:    6f 72             	r15 = 38
 1e1580a:    65 00             	cli r5
 1e1580c:    62 74             	r2 = 70
 1e1580e:    00 31             	if (r0 != 0) goto -512 <update_target_end+0x2788 : 1e15610 >
 1e15810:    31 31             	if (r0 != 0) goto -414 <update_target_end+0x27EC : 1e15674 >
 1e15812:    32 31             	if (r0 != 0) goto -412 <update_target_end+0x27F0 : 1e15678 >
 1e15814:    34 00             	[--sp] = rets
 1e15816:    62 30             	if (r0 != 0) goto 196 <update_target_end+0x2A54 : 1e158dc >
 1e15818:    33 00             	pc = [sp++]
 1e1581a:    73 61             	r3 = b[r0 + 23] (u)
 1e1581c:    76 65             	r6 = b[r2 + 23] (u)
 1e1581e:    20 66             	r0 = b[r3 + 2] (u)
 1e15820:    72 61             	r2 = b[r0 + 23] (u)
 1e15822:    6d 65             	b[r2 + 22] = r5
 1e15824:    5f 75             	r15 = 85
 1e15826:    73 65             	r3 = b[r2 + 23] (u)
 1e15828:    64 5f             	r4 = h[r7 + 44] (u)
 1e1582a:    6e 75             	r14 = 86
 1e1582c:    6d 3d             	if (r6 != 0) goto -294 <update_target_end+0x2880 : 1e15708 >
 1e1582e:    25 64             	r5 = b[r2 + 2] (u)
 1e15830:    0a 00             	ssync
 1e15832:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x2826 : 1e156ae >
 1e15834:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x2828 : 1e156b0 >
 1e15836:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x282A : 1e156b2 >
 1e15838:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x282C : 1e156b4 >
 1e1583a:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x282E : 1e156b6 >
 1e1583c:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x2830 : 1e156b8 >
 1e1583e:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x2832 : 1e156ba >
 1e15840:    3d 3d             	if (r6 != 0) goto -390 <update_target_end+0x2834 : 1e156bc >
 1e15842:    3d 75             	r13 = 83
 1e15844:    70 64             	r0 = b[r2 + 7] (u)
 1e15846:    61 74             	r1 = 70
 1e15848:    65 5f             	r5 = h[r7 + 44] (u)
 1e1584a:    70 61             	r0 = b[r0 + 23] (u)
 1e1584c:    72 61             	r2 = b[r0 + 23] (u)
 1e1584e:    6d 5f             	h[r7 + 44] = r5
 1e15850:    6c 65             	b[r2 + 22] = r4
 1e15852:    6e 3a             	if (r5 != 0) goto 220 <update_target_end+0x2AA8 : 1e15930 >
 1e15854:    25 64             	r5 = b[r2 + 2] (u)
 1e15856:    0a 00             	ssync
 1e15858:    6e 65             	b[r2 + 22] = r6
 1e1585a:    77 5f             	r7 = h[r7 + 46] (u)
 1e1585c:    66 72             	r6 = 38
 1e1585e:    61 6d             	r1 = b[r6 + 22] (u)
 1e15860:    65 5f             	r5 = h[r7 + 44] (u)
 1e15862:    70 74             	r0 = 71
 1e15864:    72 3a             	if (r5 != 0) goto 228 <update_target_end+0x2AC2 : 1e1594a >
 1e15866:    25 78             	r5 = 130
 1e15868:    0a 00             	ssync
 1e1586a:    75 6e             	r5 = b[r7 + 7] (u)
 1e1586c:    73 6e             	r3 = b[r7 + 7] (u)
 1e1586e:    69 66             	b[r3 + 6] = r1
 1e15870:    66 5f             	r6 = h[r7 + 44] (u)
 1e15872:    61 63             	r1 = b[r1 + 22] (u)
 1e15874:    6b 5f             	h[r7 + 44] = r3
 1e15876:    31 0a             	sp += 96
 1e15878:    00 70             	r0 = 0
 1e1587a:    61 75             	r1 = 86
 1e1587c:    73 65             	r3 = b[r2 + 23] (u)
 1e1587e:    5f 65             	b[r2 + 21] = r7
 1e15880:    6e 63             	b[r1 + 22] = r6
 1e15882:    5f 64             	b[r2 + 5] = r7
 1e15884:    65 62             	r5 = b[r1 + 6] (u)
 1e15886:    75 67             	r5 = b[r3 + 23] (u)
 1e15888:    0a 00             	ssync
 1e1588a:    70 6f             	r0 = b[r7 + 23] (u)
 1e1588c:    73 74             	r3 = 71
 1e1588e:    5f 65             	b[r2 + 21] = r7
 1e15890:    6e 63             	b[r1 + 22] = r6
 1e15892:    0a 00             	ssync
 1e15894:    70 72             	r0 = 39
 1e15896:    6f 62             	b[r1 + 6] = r7
 1e15898:    5f 65             	b[r2 + 21] = r7
 1e1589a:    6e 63             	b[r1 + 22] = r6
 1e1589c:    0a 00             	ssync
 1e1589e:    0a 0a             	sp += 20
 1e158a0:    0a 2d             	if (r6 == 0) goto -492 <update_target_end+0x282E : 1e156b6 >
 1e158a2:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x2876 : 1e156fe >
 1e158a4:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x2878 : 1e15700 >
 1e158a6:    2d 2d             	if (r6 == 0) goto -422 <update_target_end+0x287A : 1e15702 >
 1e158a8:    66 75             	r6 = 86
 1e158aa:    6e 3a             	if (r5 != 0) goto 220 <update_target_end+0x2B00 : 1e15988 >
 1e158ac:    25 73             	r5 = 50
 1e158ae:    20 70             	r0 = 2
 1e158b0:    61 72             	r1 = 38
 1e158b2:    6d 20             	if (r0 == 0) goto 218 <update_target_end+0x2B06 : 1e1598e >
 1e158b4:    3d 20             	if (r0 == 0) goto 122 <update_target_end+0x2AA8 : 1e15930 >
 1e158b6:    30 78             	r0 = 131
 1e158b8:    25 78             	r5 = 130
 1e158ba:    0a 00             	ssync
 1e158bc:    5f 5f             	h[r7 + 42] = r7
 1e158be:    62 74             	r2 = 70
 1e158c0:    5f 75             	r15 = 85
 1e158c2:    70 64             	r0 = b[r2 + 7] (u)
 1e158c4:    61 74             	r1 = 70
 1e158c6:    61 5f             	r1 = h[r7 + 44] (u)
 1e158c8:    73 61             	r3 = b[r0 + 23] (u)
 1e158ca:    76 65             	r6 = b[r2 + 23] (u)
 1e158cc:    5f 6c             	b[r6 + 5] = r7
 1e158ce:    69 6e             	b[r7 + 6] = r1
 1e158d0:    6b 5f             	h[r7 + 44] = r3
 1e158d2:    69 6e             	b[r7 + 6] = r1
 1e158d4:    66 6f             	r6 = b[r7 + 22] (u)
 1e158d6:    00 63             	r0 = b[r1 + 16] (u)
 1e158d8:    6c 6b             	b[r5 + 22] = r4
 1e158da:    6f 66             	b[r3 + 6] = r7
 1e158dc:    66 5f             	r6 = h[r7 + 44] (u)
 1e158de:    64 72             	r4 = 38
 1e158e0:    69 66             	b[r3 + 6] = r1
 1e158e2:    74 3a             	if (r5 != 0) goto 232 <update_target_end+0x2B44 : 1e159cc >
 1e158e4:    25 78             	r5 = 130
 1e158e6:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x28A0 : 1e15728 >
 1e158e8:    78 0a             	sp += 240
 1e158ea:    00 62             	r0 = b[r1 + 0] (u)
 1e158ec:    30 34             	if (r2 != 0) goto 96 <update_target_end+0x2AC6 : 1e1594e >
 1e158ee:    00 62             	r0 = b[r1 + 0] (u)
 1e158f0:    74 63             	r4 = b[r1 + 23] (u)
 1e158f2:    74 72             	r4 = 39
 1e158f4:    6c 65             	b[r2 + 22] = r4
 1e158f6:    72 00             	sti r2
 1e158f8:    48 34             	if (r2 != 0) goto 144 <update_target_end+0x2B02 : 1e1598a >
 1e158fa:    5f 43             	[r1 + 84] = r7
 1e158fc:    6f 6e             	b[r7 + 6] = r7
 1e158fe:    74 72             	r4 = 39
 1e15900:    6f 6c             	b[r6 + 6] = r7
 1e15902:    6c 65             	b[r2 + 22] = r4
 1e15904:    72 00             	sti r2
 1e15906:    67 65             	r7 = b[r2 + 22] (u)
 1e15908:    74 20             	if (r0 == 0) goto 232 <update_target_end+0x2B6A : 1e159f2 >
 1e1590a:    6c 69             	b[r4 + 22] = r4
 1e1590c:    6e 6b             	b[r5 + 22] = r6
 1e1590e:    20 65             	r0 = b[r2 + 18] (u)
 1e15910:    72 72             	r2 = 39
 1e15912:    00 6c             	r0 = b[r6 + 0] (u)
 1e15914:    69 6e             	b[r7 + 6] = r1
 1e15916:    6b 5f             	h[r7 + 44] = r3
 1e15918:    6c 61             	b[r0 + 22] = r4
 1e1591a:    79 65             	b[r2 + 23] = r1
 1e1591c:    72 00             	sti r2
 1e1591e:    31 48             	r1 = [r4 + 12]
 1e15920:    32 32             	if (r1 != 0) goto 100 <update_target_end+0x2AFE : 1e15986 >
 1e15922:    32 00             	pc = [sp++]
 1e15924:    31 48             	r1 = [r4 + 12]
 1e15926:    63 30             	if (r0 != 0) goto 198 <update_target_end+0x2B66 : 1e159ee >
 1e15928:    38 00             	cc = 0
 1e1592a:    48 63             	b[r1 + 20] = r0
 1e1592c:    30 38             	if (r4 != 0) goto 96 <update_target_end+0x2B06 : 1e1598e >
 1e1592e:    63 30             	if (r0 != 0) goto 198 <update_target_end+0x2B6E : 1e159f6 >
 1e15930:    32 00             	pc = [sp++]
 1e15932:    31 48             	r1 = [r4 + 12]
 1e15934:    31 31             	if (r0 != 0) goto -414 <update_target_end+0x2910 : 1e15798 >
 1e15936:    41 32             	if (r1 != 0) goto 130 <update_target_end+0x2B32 : 1e159ba >
 1e15938:    32 32             	if (r1 != 0) goto 100 <update_target_end+0x2B16 : 1e1599e >
 1e1593a:    31 00             	pc = [sp++]
 1e1593c:    31 48             	r1 = [r4 + 12]
 1e1593e:    31 00             	pc = [sp++]
 1e15940:    31 48             	r1 = [r4 + 12]
 1e15942:    00 31             	if (r0 != 0) goto -512 <update_target_end+0x28BC : 1e15744 >
 1e15944:    48 32             	if (r1 != 0) goto 144 <update_target_end+0x2B4E : 1e159d6 >
 1e15946:    00 31             	if (r0 != 0) goto -512 <update_target_end+0x28C0 : 1e15748 >
 1e15948:    48 31             	if (r0 != 0) goto -368 <update_target_end+0x2952 : 1e157da >
 1e1594a:    32 32             	if (r1 != 0) goto 100 <update_target_end+0x2B28 : 1e159b0 >
 1e1594c:    00 31             	if (r0 != 0) goto -512 <update_target_end+0x28C6 : 1e1574e >
 1e1594e:    48 48             	[r4 + 16] = r0
 1e15950:    00 31             	if (r0 != 0) goto -512 <update_target_end+0x28CA : 1e15752 >
 1e15952:    31 31             	if (r0 != 0) goto -414 <update_target_end+0x292E : 1e157b6 >
 1e15954:    00 63             	r0 = b[r1 + 16] (u)
 1e15956:    30 38             	if (r4 != 0) goto 96 <update_target_end+0x2B30 : 1e159b8 >
 1e15958:    63 30             	if (r0 != 0) goto 198 <update_target_end+0x2B98 : 1e15a20 >
 1e1595a:    34 00             	[--sp] = rets
 1e1595c:    31 31             	if (r0 != 0) goto -414 <update_target_end+0x2938 : 1e157c0 >
 1e1595e:    32 00             	pc = [sp++]
 1e15960:    31 63             	r1 = b[r1 + 19] (u)
 1e15962:    31 36             	if (r3 != 0) goto 98 <update_target_end+0x2B3E : 1e159c6 >
 1e15964:    00 31             	if (r0 != 0) goto -512 <update_target_end+0x28DE : 1e15766 >
 1e15966:    63 30             	if (r0 != 0) goto 198 <update_target_end+0x2BA6 : 1e15a2e >
 1e15968:    38 00             	cc = 0
 1e1596a:    72 66             	r2 = b[r3 + 7] (u)
 1e1596c:    5f 6f             	b[r7 + 21] = r7
 1e1596e:    73 63             	r3 = b[r1 + 23] (u)
 1e15970:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x295E : 1e157e6 >
 1e15972:    78 20             	if (r0 == 0) goto 240 <update_target_end+0x2BDC : 1e15a64 >
 1e15974:    50 4c             	r0 = [r6 + 20]
 1e15976:    4c 5f             	h[r7 + 40] = r4
 1e15978:    63 6f             	r3 = b[r7 + 22] (u)
 1e1597a:    6d 70             	r13 = 6
 1e1597c:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x296A : 1e157f2 >
 1e1597e:    78 20             	if (r0 == 0) goto 240 <update_target_end+0x2BE8 : 1e15a70 >
 1e15980:    0a 00             	ssync
 1e15982:    52 45             	r2 = [r2 + 84]
 1e15984:    54 53             	r4 = h[r1 + 42] (u)
 1e15986:    20 3d             	if (r6 != 0) goto -448 <update_target_end+0x2940 : 1e157c8 >
 1e15988:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x2942 : 1e157ca >
 1e1598a:    30 38             	if (r4 != 0) goto 96 <update_target_end+0x2B64 : 1e159ec >
 1e1598c:    78 20             	if (r0 == 0) goto 240 <update_target_end+0x2BF6 : 1e15a7e >
 1e1598e:    0d 0a             	sp += 24
 1e15990:    00 5b             	r0 = h[r5 + 32] (u)
 1e15992:    44 65             	r4 = b[r2 + 20] (u)
 1e15994:    62 75             	r2 = 86
 1e15996:    67 5d             	r7 = h[r6 + 44] (u)
 1e15998:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x2B86 : 1e15a0e >
 1e1599a:    5b 4c             	[r6 + 20] = r3
 1e1599c:    42 55             	r2 = h[r2 + 40] (u)
 1e1599e:    46 5d             	r6 = h[r6 + 40] (u)
 1e159a0:    6c 62             	b[r1 + 6] = r4
 1e159a2:    75 66             	r5 = b[r3 + 7] (u)
 1e159a4:    20 6d             	r0 = b[r6 + 18] (u)
 1e159a6:    69 73             	r9 = 54
 1e159a8:    61 6c             	r1 = b[r6 + 6] (u)
 1e159aa:    67 69             	r7 = b[r4 + 22] (u)
 1e159ac:    6e 20             	if (r0 == 0) goto 220 <update_target_end+0x2C02 : 1e15a8a >
 1e159ae:    3a 20             	if (r0 == 0) goto 116 <update_target_end+0x2B9C : 1e15a24 >
 1e159b0:    30 78             	r0 = 131
 1e159b2:    25 78             	r5 = 130
 1e159b4:    20 2f             	if (r7 == 0) goto -448 <update_target_end+0x296E : 1e157f6 >
 1e159b6:    20 30             	if (r0 != 0) goto 64 <update_target_end+0x2B70 : 1e159f8 >
 1e159b8:    78 25             	if (r2 == 0) goto -272 <update_target_end+0x2A22 : 1e158aa >
 1e159ba:    78 0d             	r8 >>>= r5
 1e159bc:    0a 00             	ssync
 1e159be:    3c 45             	[r2 + 76] = r4
 1e159c0:    72 72             	r2 = 39
 1e159c2:    6f 72             	r15 = 38
 1e159c4:    3e 3a             	if (r5 != 0) goto 124 <update_target_end+0x2BBA : 1e15a42 >
 1e159c6:    20 5b             	r0 = h[r5 + 36] (u)
 1e159c8:    4c 42             	[r1 + 16] = r4
 1e159ca:    55 46             	r5 = [r3 + 20]
 1e159cc:    5d 66             	b[r3 + 5] = r5
 1e159ce:    72 65             	r2 = b[r2 + 23] (u)
 1e159d0:    65 2d             	if (r6 == 0) goto -310 <update_target_end+0x2A14 : 1e1589c >
 1e159d2:    65 72             	r5 = 38
 1e159d4:    72 3a             	if (r5 != 0) goto 228 <update_target_end+0x2C32 : 1e15aba >
 1e159d6:    20 25             	if (r2 == 0) goto -448 <update_target_end+0x2990 : 1e15818 >
 1e159d8:    78 0d             	r8 >>>= r5
 1e159da:    0a 0d             	r10 <<= r4
 1e159dc:    0a 00             	ssync
 1e159de:    70 65             	r0 = b[r2 + 23] (u)
 1e159e0:    6e 64             	b[r2 + 6] = r6
 1e159e2:    5f 66             	b[r3 + 5] = r7
 1e159e4:    6f 72             	r15 = 38
 1e159e6:    5f 74             	r15 = 69
 1e159e8:    78 5f             	h[r7 + 46] = r0
 1e159ea:    62 75             	r2 = 86
 1e159ec:    6c 6b             	b[r5 + 22] = r4
 1e159ee:    0a 00             	ssync
 1e159f0:    75 70             	r5 = 7
 1e159f2:    64 61             	r4 = b[r0 + 22] (u)
 1e159f4:    74 65             	r4 = b[r2 + 23] (u)
 1e159f6:    00 73             	r0 = 48
 1e159f8:    69 6e             	b[r7 + 6] = r1
 1e159fa:    67 6c             	r7 = b[r6 + 6] (u)
 1e159fc:    65 20             	if (r0 == 0) goto 202 <update_target_end+0x2C40 : 1e15ac8 >
 1e159fe:    62 61             	r2 = b[r0 + 22] (u)
 1e15a00:    6e 6b             	b[r5 + 22] = r6
 1e15a02:    20 75             	r0 = 82
 1e15a04:    70 64             	r0 = b[r2 + 7] (u)
 1e15a06:    61 74             	r1 = 70
 1e15a08:    65 0a             	sp += 200
 1e15a0a:    00 72             	r0 = 32
 1e15a0c:    65 73             	r5 = 54
 1e15a0e:    2e 62             	b[r1 + 2] = r6
 1e15a10:    69 6e             	b[r7 + 6] = r1
 1e15a12:    00 74             	r0 = 64
 1e15a14:    61 62             	r1 = b[r1 + 6] (u)
 1e15a16:    5f 6c             	b[r6 + 5] = r7
 1e15a18:    65 6e             	r5 = b[r7 + 6] (u)
 1e15a1a:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x2A08 : 1e15890 >
 1e15a1c:    64 0a             	sp += 200
 1e15a1e:    00 69             	r0 = b[r4 + 16] (u)
 1e15a20:    64 6c             	r4 = b[r6 + 6] (u)
 1e15a22:    65 5f             	r5 = h[r7 + 44] (u)
 1e15a24:    72 65             	r2 = b[r2 + 23] (u)
 1e15a26:    61 64             	r1 = b[r2 + 6] (u)
 1e15a28:    3a 25             	if (r2 == 0) goto -396 <update_target_end+0x2A16 : 1e1589e >
 1e15a2a:    78 20             	if (r0 == 0) goto 240 <default_profile_data+0x24 : 1e15b1c >
 1e15a2c:    25 78             	r5 = 130
 1e15a2e:    0a 00             	ssync
 1e15a30:    3e 3e             	if (r7 != 0) goto 124 <update_target_end+0x2C26 : 1e15aae >
 1e15a32:    3e 6c             	b[r6 + 3] = r6
 1e15a34:    6f 61             	b[r0 + 22] = r7
 1e15a36:    64 65             	r4 = b[r2 + 22] (u)
 1e15a38:    72 5f             	r2 = h[r7 + 46] (u)
 1e15a3a:    6c 65             	b[r2 + 22] = r4
 1e15a3c:    6e 3a             	if (r5 != 0) goto 220 <default_profile_data+0x22 : 1e15b1a >
 1e15a3e:    30 78             	r0 = 131
 1e15a40:    25 78             	r5 = 130
 1e15a42:    20 72             	r0 = 34
 1e15a44:    65 73             	r5 = 54
 1e15a46:    5f 61             	b[r0 + 21] = r7
 1e15a48:    72 65             	r2 = b[r2 + 23] (u)
 1e15a4a:    61 5f             	r1 = h[r7 + 44] (u)
 1e15a4c:    6c 65             	b[r2 + 22] = r4
 1e15a4e:    6e 3a             	if (r5 != 0) goto 220 <task_info_table+0x8 : 1e15b2c >
 1e15a50:    30 78             	r0 = 131
 1e15a52:    25 78             	r5 = 130
 1e15a54:    20 74             	r0 = 66
 1e15a56:    6f 74             	r15 = 70
 1e15a58:    61 6c             	r1 = b[r6 + 6] (u)
 1e15a5a:    5f 6c             	b[r6 + 5] = r7
 1e15a5c:    65 6e             	r5 = b[r7 + 6] (u)
 1e15a5e:    3a 30             	if (r0 != 0) goto 116 <update_target_end+0x2C4C : 1e15ad4 >
 1e15a60:    78 25             	if (r2 == 0) goto -272 <update_target_end+0x2ACA : 1e15952 >
 1e15a62:    78 0a             	sp += 240
 1e15a64:    00 4c             	r0 = [r6 + 0]
 1e15a66:    4f 41             	[r0 + 80] = r7
 1e15a68:    44 45             	r4 = [r2 + 80]
 1e15a6a:    52 2e             	if (r7 == 0) goto 164 <default_profile_data+0x18 : 1e15b10 >
 1e15a6c:    42 49             	r2 = [r4 + 80]
 1e15a6e:    4e 00             	testset b[r14]
 1e15a70:    72 65             	r2 = b[r2 + 23] (u)
 1e15a72:    73 65             	r3 = b[r2 + 23] (u)
 1e15a74:    72 76             	r2 = 103
 1e15a76:    65 5f             	r5 = h[r7 + 44] (u)
 1e15a78:    73 61             	r3 = b[r0 + 23] (u)
 1e15a7a:    64 64             	r4 = b[r2 + 6] (u)
 1e15a7c:    72 3a             	if (r5 != 0) goto 228 <task_info_table+0x3E : 1e15b62 >
 1e15a7e:    30 78             	r0 = 131
 1e15a80:    25 78             	r5 = 130
 1e15a82:    20 20             	if (r0 == 0) goto 64 <update_target_end+0x2C3C : 1e15ac4 >
 1e15a84:    6c 6f             	b[r7 + 22] = r4
 1e15a86:    61 64             	r1 = b[r2 + 6] (u)
 1e15a88:    65 72             	r5 = 38
 1e15a8a:    5f 61             	b[r0 + 21] = r7
 1e15a8c:    72 65             	r2 = b[r2 + 23] (u)
 1e15a8e:    61 5f             	r1 = h[r7 + 44] (u)
 1e15a90:    6c 65             	b[r2 + 22] = r4
 1e15a92:    6e 3a             	if (r5 != 0) goto 220 <task_info_table+0x4C : 1e15b70 >
 1e15a94:    30 78             	r0 = 131
 1e15a96:    25 78             	r5 = 130
 1e15a98:    0a 00             	ssync
 1e15a9a:    76 6d             	r6 = b[r6 + 23] (u)
 1e15a9c:    5f 75             	r15 = 85
 1e15a9e:    70 64             	r0 = b[r2 + 7] (u)
 1e15aa0:    61 74             	r1 = 70
 1e15aa2:    65 5f             	r5 = h[r7 + 44] (u)
 1e15aa4:    70 61             	r0 = b[r0 + 23] (u)
 1e15aa6:    72 61             	r2 = b[r0 + 23] (u)
 1e15aa8:    6d 2e             	if (r7 == 0) goto 218 <app_keyfob_ops : 1e15b84 >
 1e15aaa:    6f 74             	r15 = 70
 1e15aac:    61 5f             	r1 = h[r7 + 44] (u)
 1e15aae:    61 64             	r1 = b[r2 + 6] (u)
 1e15ab0:    64 72             	r4 = 38
 1e15ab2:    3a 30             	if (r0 != 0) goto 116 <task_info_table+0x4 : 1e15b28 >
 1e15ab4:    78 25             	if (r2 == 0) goto -272 <update_target_end+0x2B1E : 1e159a6 >
 1e15ab6:    78 20             	if (r0 == 0) goto 240 <keyfob_report_map+0xA : 1e15ba8 >
 1e15ab8:    20 20             	if (r0 == 0) goto 64 <default_profile_data+0x2 : 1e15afa >
 1e15aba:    74 79             	r4 = 151
 1e15abc:    70 65             	r0 = b[r2 + 23] (u)
 1e15abe:    3a 30             	if (r0 != 0) goto 116 <task_info_table+0x10 : 1e15b34 >
 1e15ac0:    78 25             	if (r2 == 0) goto -272 <update_target_end+0x2B2A : 1e159b2 >
 1e15ac2:    78 0a             	sp += 240
 1e15ac4:    00 00             	nop
 1e15ac6:    00 00             	nop
 1e15ac8:    00 00             	nop
 1e15aca:    00 00             	nop
 1e15acc:    00 00             	nop
 1e15ace:    00 00             	nop
 1e15ad0:    00 00             	nop
 1e15ad2:    00 00             	nop
 1e15ad4:    00 00             	nop
 1e15ad6:    00 00             	nop
 1e15ad8:    00 00             	nop
 1e15ada:    00 00             	nop
 1e15adc:    00 00             	nop
 1e15ade:    00 00             	nop


ble_ext_name:
 1e15ae0:    28 42             	[r1 + 8] = r0
 1e15ae2:    4c 45             	[r2 + 80] = r4
 1e15ae4:    29 00             	swi 1
 1e15ae6:    00 00             	nop


server_phy_result:
 1e15ae8:    a5 3a             	if (r5 != 0) goto 330 <PnP_ID+0x4 : 1e15c34 >
 1e15aea:    e1 01             	[--sp] = {psr, reti}
 1e15aec:    aa 3a             	if (r5 != 0) goto 340 <hogp_profile_data+0x7 : 1e15c42 >
 1e15aee:    e1 01             	[--sp] = {psr, reti}
 1e15af0:    ad 3a             	if (r5 != 0) goto 346 <hogp_profile_data+0x11 : 1e15c4c >
 1e15af2:    e1 01             	[--sp] = {psr, reti}
 1e15af4:    b0 3a             	if (r5 != 0) goto 352 <hogp_profile_data+0x1B : 1e15c56 >
 1e15af6:    e1 01             	[--sp] = {psr, reti}


default_profile_data:
 1e15af8:    0a 00             	ssync
 1e15afa:    02 00             	idle
 1e15afc:    01 00             	nop
 1e15afe:    00 28             	if (r4 == 0) goto 0 <default_profile_data+0x8 : 1e15b00 >
 1e15b00:    00 18             	goto 0 <default_profile_data+0xA : 1e15b02 >
 1e15b02:    00 00             	nop
 1e15b04:    05 5a             	r5 = h[r5 + 0] (u)
 1e15b06:    00 00             	nop
 1e15b08:    98 1b             	goto 1840 <dev_id_list+0x1A6 : 1e1623a >
 1e15b0a:    e0 01             	[--sp] = {psr}
 1e15b0c:    70 f2 e1 01       	if (r0 == r7) goto 962 <hogp_profile_data+0x297 : 1e15ed2 >
 1e15b10:    01 00             	nop
 1e15b12:    00 00             	nop
 1e15b14:    09 5a             	h[r5 + 0] = r1
 1e15b16:    00 00             	nop
 1e15b18:    c0 19             	goto 896 <hogp_profile_data+0x25F : 1e15e9a >
 1e15b1a:    e0 01             	[--sp] = {psr}
 1e15b1c:    8c f2 e1 01       	if (r12 == r8) goto 962 <hogp_profile_data+0x2A7 : 1e15ee2 >
 1e15b20:    01 00             	nop
 1e15b22:    00 00             	nop


task_info_table:
 1e15b24:    03 58             	r3 = h[r4 + 0] (u)
 1e15b26:    e1 01             	[--sp] = {psr, reti}
 1e15b28:    01 00             	nop
 1e15b2a:    80 02             	r0 = [sp+32]
 1e15b2c:    80 00             	call r0
 1e15b2e:    00 00             	nop
 1e15b30:    cc 53             	h[r1 + 56] = r4
 1e15b32:    e1 01             	[--sp] = {psr, reti}
 1e15b34:    07 00             	hbkpt
 1e15b36:    00 01             	{r3-r0} = [sp++]
 1e15b38:    00 00             	nop
 1e15b3a:    00 00             	nop
 1e15b3c:    ef 58             	h[r4 + 28] = r7
 1e15b3e:    e1 01             	[--sp] = {psr, reti}
 1e15b40:    04 00             	bkpt
 1e15b42:    00 02             	r0 = [sp]
 1e15b44:    00 01             	{r3-r0} = [sp++]
 1e15b46:    00 00             	nop
 1e15b48:    ec 3e             	if (r7 != 0) goto 472 <hogp_profile_data+0xE7 : 1e15d22 >
 1e15b4a:    e1 01             	[--sp] = {psr, reti}
 1e15b4c:    01 00             	nop
 1e15b4e:    00 02             	r0 = [sp]
 1e15b50:    80 00             	call r0
 1e15b52:    00 00             	nop
 1e15b54:    8e 56             	h[r3 + 16] = r6
 1e15b56:    e1 01             	[--sp] = {psr, reti}
 1e15b58:    03 00             	idle
 1e15b5a:    00 03             	r0 = [sp+64]
 1e15b5c:    00 01             	{r3-r0} = [sp++]
 1e15b5e:    00 00             	nop
 1e15b60:    cf 55             	h[r2 + 56] = r7
 1e15b62:    e1 01             	[--sp] = {psr, reti}
 1e15b64:    07 00             	hbkpt
 1e15b66:    80 00             	call r0
 1e15b68:    00 00             	nop
 1e15b6a:    00 00             	nop
 1e15b6c:    f0 59             	r0 = h[r4 + 62] (u)
 1e15b6e:    e1 01             	[--sp] = {psr, reti}
 1e15b70:    01 00             	nop
 1e15b72:    00 02             	r0 = [sp]
 1e15b74:    00 00             	nop
 1e15b76:    00 00             	nop
 1e15b78:    00 00             	nop
 1e15b7a:    00 00             	nop
 1e15b7c:    00 00             	nop
 1e15b7e:    00 00             	nop
 1e15b80:    00 00             	nop
 1e15b82:    00 00             	nop


app_keyfob_ops:
 1e15b84:    74 22             	if (r1 == 0) goto 232 <hogp_profile_data+0x33 : 1e15c6e >
 1e15b86:    e0 01             	[--sp] = {psr}
 1e15b88:    70 29             	if (r4 == 0) goto -288 <update_target_end+0x2BE2 : 1e15a6a >
 1e15b8a:    e0 01             	[--sp] = {psr}


key_a_power_press:
 1e15b8c:    00 04             	r0 = r0.b0 (u)
 1e15b8e:    00 00             	nop


key_a_power_null:
 1e15b8f:    00 00             	nop
 1e15b91:    00 00             	nop


key_a_big_press:
 1e15b92:    00 02             	r0 = [sp]
 1e15b94:    00 00             	nop


key_a_big_null:
 1e15b95:    00 00             	nop
 1e15b97:    00 00             	nop


key_a_small_press:
 1e15b98:    00 01             	{r3-r0} = [sp++]
 1e15b9a:    00 00             	nop


key_a_small_null:
 1e15b9b:    00 00             	nop
 1e15b9d:    00 05             	r0 = r4.b0 (u)


keyfob_report_map:
 1e15b9e:    05 0c             	r5 <<= r0
 1e15ba0:    09 01             	{r9-r4} = [sp++]
 1e15ba2:    a1 01             	{psr, reti} = [sp++]
 1e15ba4:    85 03             	r5 = [sp+96]
 1e15ba6:    15 00             	lockset
 1e15ba8:    25 01             	{r5, r4} = [sp++]
 1e15baa:    75 01             	[--sp] = {rets, r5, r4}
 1e15bac:    95 0b             	sp += -216
 1e15bae:    0a 23             	if (r1 == 0) goto -492 <update_target_end+0x2B3C : 1e159c4 >
 1e15bb0:    02 0a             	sp += 4
 1e15bb2:    21 02             	r1 = [sp+8]
 1e15bb4:    0a b1             	r10 = r0 + r4
 1e15bb6:    01 09             	r1 += r0
 1e15bb8:    b8 09             	r8 += r11
 1e15bba:    b6 09             	r6 += r11
 1e15bbc:    cd 09             	r13 += r12
 1e15bbe:    b5 09             	r5 += r11
 1e15bc0:    e2 09             	r2 += r14
 1e15bc2:    ea 09             	r10 += r14
 1e15bc4:    e9 09             	r9 += r14
 1e15bc6:    30 0a             	sp += 96
 1e15bc8:    ae 01             	{psr, rets, retx, rete} = [sp++]
 1e15bca:    81 02             	r1 = [sp+32]
 1e15bcc:    95 01             	{sr4, retx, reti} = [sp++]
 1e15bce:    75 0d             	r5 >>>= r5
 1e15bd0:    81 03             	r1 = [sp+96]
 1e15bd2:    c0 00             	pfetch [r0]


hogp_server_init_cfg:
 1e15bd4:    3a 2d             	if (r6 == 0) goto -396 <update_target_end+0x2BC2 : 1e15a4a >
 1e15bd6:    e0 01             	[--sp] = {psr}
 1e15bd8:    ac 2f             	if (r7 == 0) goto -168 <task_info_table+0xE : 1e15b32 >
 1e15bda:    e0 01             	[--sp] = {psr}
 1e15bdc:    dc 31             	if (r0 != 0) goto -72 <key_a_big_null+0x1 : 1e15b96 >
 1e15bde:    e0 01             	[--sp] = {psr}


hogp_sm_init_config:
 1e15be0:    30 05             	r0 = r4.l (s)
 1e15be2:    07 10             	call 14 <Peripheral_Preferred_Connection_Parameters+0xA : 1e15bf2 >
 1e15be4:    00 00             	nop
 1e15be6:    00 00             	nop


Peripheral_Preferred_Connection_Parameters:
 1e15be8:    06 00             	hbkpt
 1e15bea:    09 00             	csync
 1e15bec:    64 00             	cli r4
 1e15bee:    2c 01             	{r12-r4} = [sp++]
 1e15bf0:    0c 00             	syscall
 1e15bf2:    0c 00             	syscall
 1e15bf4:    1e 00             	sti
 1e15bf6:    2c 01             	{r12-r4} = [sp++]


Manufacturer_Name_String:
 1e15bf8:    7a 68             	b[r4 + 7] = r2
 1e15bfa:    75 68             	r5 = b[r4 + 7] (u)
 1e15bfc:    61 69             	r1 = b[r4 + 22] (u)
 1e15bfe:    5f 6a             	b[r5 + 5] = r7
 1e15c00:    69 65             	b[r2 + 22] = r1
 1e15c02:    6c 69             	b[r4 + 22] = r4
 1e15c04:    00 68             	r0 = b[r4 + 0] (u)


Model_Number_String:
 1e15c05:    68 69             	b[r4 + 22] = r0
 1e15c07:    64 5f             	r4 = h[r7 + 44] (u)
 1e15c09:    6d 6f             	b[r7 + 22] = r5
 1e15c0b:    75 73             	r5 = 55
 1e15c0d:    65 00             	cli r5


Serial_Number_String:
 1e15c0f:    30 30             	if (r0 != 0) goto 96 <hogp_profile_data+0x36 : 1e15c71 >
 1e15c11:    30 30             	if (r0 != 0) goto 96 <hogp_profile_data+0x38 : 1e15c73 >
 1e15c13:    30 30             	if (r0 != 0) goto 96 <hogp_profile_data+0x3A : 1e15c75 >
 1e15c15:    00 30             	if (r0 != 0) goto 0 <Hardware_Revision_String+0x1 : 1e15c17 >


Hardware_Revision_String:
 1e15c16:    30 2e             	if (r7 == 0) goto 96 <hogp_profile_data+0x3D : 1e15c78 >
 1e15c18:    30 2e             	if (r7 == 0) goto 96 <hogp_profile_data+0x3F : 1e15c7a >
 1e15c1a:    31 00             	pc = [sp++]


Firmware_Revision_String:
 1e15c1c:    30 2e             	if (r7 == 0) goto 96 <hogp_profile_data+0x43 : 1e15c7e >
 1e15c1e:    30 2e             	if (r7 == 0) goto 96 <hogp_profile_data+0x45 : 1e15c80 >
 1e15c20:    31 00             	pc = [sp++]


Software_Revision_String:
 1e15c22:    30 2e             	if (r7 == 0) goto 96 <hogp_profile_data+0x49 : 1e15c84 >
 1e15c24:    30 2e             	if (r7 == 0) goto 96 <hogp_profile_data+0x4B : 1e15c86 >
 1e15c26:    31 00             	pc = [sp++]


System_ID:
 1e15c28:    00 00             	nop
 1e15c2a:    00 00             	nop
 1e15c2c:    00 00             	nop
 1e15c2e:    00 00             	nop


PnP_ID:
 1e15c30:    02 ac             	r2 = sp + 192
 1e15c32:    05 2c             	if (r6 == 0) goto 10 <hogp_profile_data+0x3 : 1e15c3e >
 1e15c34:    02 1b             	goto 1540 <dev_id_list+0x1A6 : 1e1623a >
 1e15c36:    01 01             	{r3-r1} = [sp++]


hid_information:
 1e15c37:    01 01             	{r3-r1} = [sp++]
 1e15c39:    00 03             	r0 = [sp+64]


hogp_profile_data:
 1e15c3b:    0a 00             	ssync
 1e15c3d:    02 00             	idle
 1e15c3f:    01 00             	nop
 1e15c41:    00 28             	if (r4 == 0) goto 0 <hogp_profile_data+0x8 : 1e15c43 >
 1e15c43:    00 18             	goto 0 <hogp_profile_data+0xA : 1e15c45 >
 1e15c45:    0d 00             	syscall
 1e15c47:    02 00             	idle
 1e15c49:    02 00             	idle
 1e15c4b:    03 28             	if (r4 == 0) goto 6 <hogp_profile_data+0x18 : 1e15c53 >
 1e15c4d:    02 03             	r2 = [sp+64]
 1e15c4f:    00 00             	nop
 1e15c51:    2a 08             	r10 = r2
 1e15c53:    00 02             	r0 = [sp]
 1e15c55:    01 03             	r1 = [sp+64]
 1e15c57:    00 00             	nop
 1e15c59:    2a 0d             	r10 >>= r4
 1e15c5b:    00 02             	r0 = [sp]
 1e15c5d:    00 04             	r0 = r0.b0 (u)
 1e15c5f:    00 03             	r0 = [sp+64]
 1e15c61:    28 02             	[sp+8] = r0
 1e15c63:    05 00             	bkpt
 1e15c65:    01 2a             	if (r5 == 0) goto 2 <hogp_profile_data+0x2E : 1e15c69 >
 1e15c67:    08 00             	csync
 1e15c69:    02 01             	{r3, r2} = [sp++]
 1e15c6b:    05 00             	bkpt
 1e15c6d:    01 2a             	if (r5 == 0) goto 2 <hogp_profile_data+0x36 : 1e15c71 >
 1e15c6f:    0d 00             	syscall
 1e15c71:    02 00             	idle
 1e15c73:    06 00             	hbkpt
 1e15c75:    03 28             	if (r4 == 0) goto 6 <hogp_profile_data+0x42 : 1e15c7d >
 1e15c77:    02 07             	r2 = -16
 1e15c79:    00 04             	r0 = r0.b0 (u)
 1e15c7b:    2a 08             	r10 = r2
 1e15c7d:    00 02             	r0 = [sp]
 1e15c7f:    01 07             	r1 = -16
 1e15c81:    00 04             	r0 = r0.b0 (u)
 1e15c83:    2a 0a             	sp += 84
 1e15c85:    00 02             	r0 = [sp]
 1e15c87:    00 08             	r0 = r0
 1e15c89:    00 00             	nop
 1e15c8b:    28 01             	{r8-r4} = [sp++]
 1e15c8d:    18 0d             	r8 <<<= r4
 1e15c8f:    00 02             	r0 = [sp]
 1e15c91:    00 09             	r0 += r0
 1e15c93:    00 03             	r0 = [sp+64]
 1e15c95:    28 20             	if (r0 == 0) goto 80 <hogp_profile_data+0xAC : 1e15ce7 >
 1e15c97:    0a 00             	ssync
 1e15c99:    05 2a             	if (r5 == 0) goto 10 <hogp_profile_data+0x6A : 1e15ca5 >
 1e15c9b:    08 00             	csync
 1e15c9d:    20 00             	rts
 1e15c9f:    0a 00             	ssync
 1e15ca1:    05 2a             	if (r5 == 0) goto 10 <hogp_profile_data+0x72 : 1e15cad >
 1e15ca3:    0a 00             	ssync
 1e15ca5:    0a 01             	{r10-r4} = [sp++]
 1e15ca7:    0b 00             	ssync
 1e15ca9:    02 29             	if (r4 == 0) goto -508 <update_target_end+0x2C27 : 1e15aaf >
 1e15cab:    00 00             	nop
 1e15cad:    0a 00             	ssync
 1e15caf:    02 00             	idle
 1e15cb1:    0c 00             	syscall
 1e15cb3:    00 28             	if (r4 == 0) goto 0 <hogp_profile_data+0x7A : 1e15cb5 >
 1e15cb5:    0a 18             	goto 20 <hogp_profile_data+0x90 : 1e15ccb >
 1e15cb7:    0d 00             	syscall
 1e15cb9:    02 00             	idle
 1e15cbb:    0d 00             	syscall
 1e15cbd:    03 28             	if (r4 == 0) goto 6 <hogp_profile_data+0x8A : 1e15cc5 >
 1e15cbf:    02 0e             	r2 = r0 * r0
 1e15cc1:    00 29             	if (r4 == 0) goto -512 <update_target_end+0x2C3B : 1e15ac3 >
 1e15cc3:    2a 08             	r10 = r2
 1e15cc5:    00 02             	r0 = [sp]
 1e15cc7:    01 0e             	r1 = r0 * r0
 1e15cc9:    00 29             	if (r4 == 0) goto -512 <update_target_end+0x2C43 : 1e15acb >
 1e15ccb:    2a 0d             	r10 >>= r4
 1e15ccd:    00 02             	r0 = [sp]
 1e15ccf:    00 0f             	r0 = r0 * r4
 1e15cd1:    00 03             	r0 = [sp+64]
 1e15cd3:    28 02             	[sp+8] = r0
 1e15cd5:    10 00             	lockclr
 1e15cd7:    24 2a             	if (r5 == 0) goto 72 <hogp_profile_data+0xE6 : 1e15d21 >
 1e15cd9:    08 00             	csync
 1e15cdb:    02 01             	{r3, r2} = [sp++]
 1e15cdd:    10 00             	lockclr
 1e15cdf:    24 2a             	if (r5 == 0) goto 72 <hogp_profile_data+0xEE : 1e15d29 >
 1e15ce1:    0d 00             	syscall
 1e15ce3:    02 00             	idle
 1e15ce5:    11 00             	lockclr
 1e15ce7:    03 28             	if (r4 == 0) goto 6 <hogp_profile_data+0xB4 : 1e15cef >
 1e15ce9:    02 12             	call 1028 <dev_id_list+0x5B : 1e160ef >
 1e15ceb:    00 25             	if (r2 == 0) goto -512 <server_phy_result+0x5 : 1e15aed >
 1e15ced:    2a 08             	r10 = r2
 1e15cef:    00 02             	r0 = [sp]
 1e15cf1:    01 12             	call 1026 <dev_id_list+0x61 : 1e160f5 >
 1e15cf3:    00 25             	if (r2 == 0) goto -512 <server_phy_result+0xD : 1e15af5 >
 1e15cf5:    2a 0d             	r10 >>= r4
 1e15cf7:    00 02             	r0 = [sp]
 1e15cf9:    00 13             	call 1536 <dev_id_list+0x267 : 1e162fb >
 1e15cfb:    00 03             	r0 = [sp+64]
 1e15cfd:    28 02             	[sp+8] = r0
 1e15cff:    14 00             	lockset
 1e15d01:    27 2a             	if (r5 == 0) goto 78 <hogp_profile_data+0x116 : 1e15d51 >
 1e15d03:    08 00             	csync
 1e15d05:    02 01             	{r3, r2} = [sp++]
 1e15d07:    14 00             	lockset
 1e15d09:    27 2a             	if (r5 == 0) goto 78 <hogp_profile_data+0x11E : 1e15d59 >
 1e15d0b:    0d 00             	syscall
 1e15d0d:    02 00             	idle
 1e15d0f:    15 00             	lockset
 1e15d11:    03 28             	if (r4 == 0) goto 6 <hogp_profile_data+0xDE : 1e15d19 >
 1e15d13:    02 16             	call -1020 <update_target_end+0x2A91 : 1e15919 >
 1e15d15:    00 26             	if (r3 == 0) goto 0 <hogp_profile_data+0xDC : 1e15d17 >
 1e15d17:    2a 08             	r10 = r2
 1e15d19:    00 02             	r0 = [sp]
 1e15d1b:    01 16             	call -1022 <update_target_end+0x2A97 : 1e1591f >
 1e15d1d:    00 26             	if (r3 == 0) goto 0 <hogp_profile_data+0xE4 : 1e15d1f >
 1e15d1f:    2a 0d             	r10 >>= r4
 1e15d21:    00 02             	r0 = [sp]
 1e15d23:    00 17             	call -512 <task_info_table+0x1 : 1e15b25 >
 1e15d25:    00 03             	r0 = [sp+64]
 1e15d27:    28 02             	[sp+8] = r0
 1e15d29:    18 00             	cli
 1e15d2b:    28 2a             	if (r5 == 0) goto 80 <hogp_profile_data+0x142 : 1e15d7d >
 1e15d2d:    08 00             	csync
 1e15d2f:    02 01             	{r3, r2} = [sp++]
 1e15d31:    18 00             	cli
 1e15d33:    28 2a             	if (r5 == 0) goto 80 <hogp_profile_data+0x14A : 1e15d85 >
 1e15d35:    0d 00             	syscall
 1e15d37:    02 00             	idle
 1e15d39:    19 00             	cli
 1e15d3b:    03 28             	if (r4 == 0) goto 6 <hogp_profile_data+0x108 : 1e15d43 >
 1e15d3d:    02 1a             	goto 1028 <dev_id_list+0xAF : 1e16143 >
 1e15d3f:    00 23             	if (r1 == 0) goto -512 <task_info_table+0x1D : 1e15b41 >
 1e15d41:    2a 08             	r10 = r2
 1e15d43:    00 02             	r0 = [sp]
 1e15d45:    01 1a             	goto 1026 <dev_id_list+0xB5 : 1e16149 >
 1e15d47:    00 23             	if (r1 == 0) goto -512 <task_info_table+0x25 : 1e15b49 >
 1e15d49:    2a 0d             	r10 >>= r4
 1e15d4b:    00 02             	r0 = [sp]
 1e15d4d:    00 1b             	goto 1536 <dev_id_list+0x2BB : 1e1634f >
 1e15d4f:    00 03             	r0 = [sp+64]
 1e15d51:    28 02             	[sp+8] = r0
 1e15d53:    1c 00             	sti
 1e15d55:    2a 2a             	if (r5 == 0) goto 84 <hogp_profile_data+0x170 : 1e15dab >
 1e15d57:    08 00             	csync
 1e15d59:    02 01             	{r3, r2} = [sp++]
 1e15d5b:    1c 00             	sti
 1e15d5d:    2a 2a             	if (r5 == 0) goto 84 <hogp_profile_data+0x178 : 1e15db3 >
 1e15d5f:    0d 00             	syscall
 1e15d61:    02 00             	idle
 1e15d63:    1d 00             	sti
 1e15d65:    03 28             	if (r4 == 0) goto 6 <hogp_profile_data+0x132 : 1e15d6d >
 1e15d67:    02 1e             	goto -1020 <update_target_end+0x2AE5 : 1e1596d >
 1e15d69:    00 50             	r0 = h[r0 + 0] (u)
 1e15d6b:    2a 08             	r10 = r2
 1e15d6d:    00 02             	r0 = [sp]
 1e15d6f:    05 1e             	goto -1014 <update_target_end+0x2AF3 : 1e1597b >
 1e15d71:    00 50             	r0 = h[r0 + 0] (u)
 1e15d73:    2a 0a             	sp += 84
 1e15d75:    00 02             	r0 = [sp]
 1e15d77:    00 1f             	goto -512 <task_info_table+0x55 : 1e15b79 >
 1e15d79:    00 00             	nop
 1e15d7b:    28 0f             	r0 = r5 * r4
 1e15d7d:    18 0d             	r8 <<<= r4
 1e15d7f:    00 02             	r0 = [sp]
 1e15d81:    00 20             	if (r0 == 0) goto 0 <hogp_profile_data+0x148 : 1e15d83 >
 1e15d83:    00 03             	r0 = [sp+64]
 1e15d85:    28 12             	call 1104 <dev_id_list+0x143 : 1e161d7 >
 1e15d87:    21 00             	rts
 1e15d89:    19 2a             	if (r5 == 0) goto 50 <hogp_profile_data+0x182 : 1e15dbd >
 1e15d8b:    08 00             	csync
 1e15d8d:    12 01             	{rets, r3, r2} = [sp++]
 1e15d8f:    21 00             	rts
 1e15d91:    19 2a             	if (r5 == 0) goto 50 <hogp_profile_data+0x18A : 1e15dc5 >
 1e15d93:    0a 00             	ssync
 1e15d95:    0a 01             	{r10-r4} = [sp++]
 1e15d97:    22 00             	rti
 1e15d99:    02 29             	if (r4 == 0) goto -508 <keyfob_report_map+0x1 : 1e15b9f >
 1e15d9b:    00 00             	nop
 1e15d9d:    0a 00             	ssync
 1e15d9f:    02 00             	idle
 1e15da1:    23 00             	rti
 1e15da3:    00 28             	if (r4 == 0) goto 0 <hogp_profile_data+0x16A : 1e15da5 >
 1e15da5:    12 18             	goto 36 <hogp_profile_data+0x190 : 1e15dcb >
 1e15da7:    0d 00             	syscall
 1e15da9:    02 00             	idle
 1e15dab:    24 00             	rtx
 1e15dad:    03 28             	if (r4 == 0) goto 6 <hogp_profile_data+0x17A : 1e15db5 >
 1e15daf:    06 25             	if (r2 == 0) goto -500 <keyfob_report_map+0x1F : 1e15bbd >
 1e15db1:    00 4e             	r0 = [r7 + 0]
 1e15db3:    2a 09             	r10 += r2
 1e15db5:    00 06             	r0 = -32
 1e15db7:    00 25             	if (r2 == 0) goto -512 <keyfob_report_map+0x1B : 1e15bb9 >
 1e15db9:    00 4e             	r0 = [r7 + 0]
 1e15dbb:    2a 01             	{r10-r4} = [sp++]
 1e15dbd:    0d 00             	syscall
 1e15dbf:    02 00             	idle
 1e15dc1:    26 00             	rte
 1e15dc3:    03 28             	if (r4 == 0) goto 6 <hogp_profile_data+0x190 : 1e15dcb >
 1e15dc5:    1a 27             	if (r3 == 0) goto -460 <Manufacturer_Name_String+0x3 : 1e15bfb >
 1e15dc7:    00 4d             	r0 = [r6 + 64]
 1e15dc9:    2a 08             	r10 = r2
 1e15dcb:    00 1a             	goto 1024 <dev_id_list+0x139 : 1e161cd >
 1e15dcd:    01 27             	if (r3 == 0) goto -510 <keyfob_report_map+0x33 : 1e15bd1 >
 1e15dcf:    00 4d             	r0 = [r6 + 64]
 1e15dd1:    2a 0a             	sp += 84
 1e15dd3:    00 0a             	sp += 0
 1e15dd5:    01 28             	if (r4 == 0) goto 2 <hogp_profile_data+0x19E : 1e15dd9 >
 1e15dd7:    00 02             	r0 = [sp]
 1e15dd9:    29 00             	swi 1
 1e15ddb:    00 0a             	sp += 0
 1e15ddd:    00 02             	r0 = [sp]
 1e15ddf:    00 29             	if (r4 == 0) goto -512 <hogp_sm_init_config+0x1 : 1e15be1 >
 1e15de1:    00 08             	r0 = r0
 1e15de3:    29 01             	{r9-r4} = [sp++]
 1e15de5:    01 0d             	r1 <<= r4
 1e15de7:    00 02             	r0 = [sp]
 1e15de9:    00 2a             	if (r5 == 0) goto 0 <hogp_profile_data+0x1B0 : 1e15deb >
 1e15deb:    00 03             	r0 = [sp+64]
 1e15ded:    28 1a             	goto 1104 <dev_id_list+0x1AB : 1e1623f >
 1e15def:    2b 00             	swi 3
 1e15df1:    4d 2a             	if (r5 == 0) goto 154 <hogp_profile_data+0x252 : 1e15e8d >
 1e15df3:    08 00             	csync
 1e15df5:    1a 01             	{rets, r10-r4} = [sp++]
 1e15df7:    2b 00             	swi 3
 1e15df9:    4d 2a             	if (r5 == 0) goto 154 <hogp_profile_data+0x25A : 1e15e95 >
 1e15dfb:    0a 00             	ssync
 1e15dfd:    0a 01             	{r10-r4} = [sp++]
 1e15dff:    2c 00             	swi 4
 1e15e01:    02 29             	if (r4 == 0) goto -508 <Model_Number_String+0x2 : 1e15c07 >
 1e15e03:    00 00             	nop
 1e15e05:    0a 00             	ssync
 1e15e07:    02 00             	idle
 1e15e09:    2d 00             	swi 5
 1e15e0b:    08 29             	if (r4 == 0) goto -496 <Firmware_Revision_String+0x1 : 1e15c1d >
 1e15e0d:    02 01             	{r3, r2} = [sp++]
 1e15e0f:    0d 00             	syscall
 1e15e11:    02 00             	idle
 1e15e13:    2e 00             	swi 6
 1e15e15:    03 28             	if (r4 == 0) goto 6 <hogp_profile_data+0x1E2 : 1e15e1d >
 1e15e17:    0e 2f             	if (r7 == 0) goto -484 <PnP_ID+0x5 : 1e15c35 >
 1e15e19:    00 4d             	r0 = [r6 + 64]
 1e15e1b:    2a 08             	r10 = r2
 1e15e1d:    00 0e             	r0 = r0 * r0
 1e15e1f:    01 2f             	if (r7 == 0) goto -510 <Software_Revision_String+0x1 : 1e15c23 >
 1e15e21:    00 4d             	r0 = [r6 + 64]
 1e15e23:    2a 0a             	sp += 84
 1e15e25:    00 02             	r0 = [sp]
 1e15e27:    00 30             	if (r0 != 0) goto 0 <hogp_profile_data+0x1EE : 1e15e29 >
 1e15e29:    00 08             	r0 = r0
 1e15e2b:    29 01             	{r9-r4} = [sp++]
 1e15e2d:    02 0d             	r2 <<= r4
 1e15e2f:    00 02             	r0 = [sp]
 1e15e31:    00 31             	if (r0 != 0) goto -512 <PnP_ID+0x3 : 1e15c33 >
 1e15e33:    00 03             	r0 = [sp+64]
 1e15e35:    28 1a             	goto 1104 <dev_id_list+0x1F3 : 1e16287 >
 1e15e37:    32 00             	pc = [sp++]
 1e15e39:    4d 2a             	if (r5 == 0) goto 154 <hogp_profile_data+0x29A : 1e15ed5 >
 1e15e3b:    08 00             	csync
 1e15e3d:    1a 01             	{rets, r10-r4} = [sp++]
 1e15e3f:    32 00             	pc = [sp++]
 1e15e41:    4d 2a             	if (r5 == 0) goto 154 <hogp_profile_data+0x2A2 : 1e15edd >
 1e15e43:    0a 00             	ssync
 1e15e45:    0a 01             	{r10-r4} = [sp++]
 1e15e47:    33 00             	pc = [sp++]
 1e15e49:    02 29             	if (r4 == 0) goto -508 <hogp_profile_data+0x14 : 1e15c4f >
 1e15e4b:    00 00             	nop
 1e15e4d:    0a 00             	ssync
 1e15e4f:    02 00             	idle
 1e15e51:    34 00             	[--sp] = rets
 1e15e53:    08 29             	if (r4 == 0) goto -496 <hogp_profile_data+0x2A : 1e15c65 >
 1e15e55:    03 01             	{r3} = [sp++]
 1e15e57:    0d 00             	syscall
 1e15e59:    02 00             	idle
 1e15e5b:    35 00             	[--sp] = rets
 1e15e5d:    03 28             	if (r4 == 0) goto 6 <hogp_profile_data+0x22A : 1e15e65 >
 1e15e5f:    1a 36             	if (r3 != 0) goto 52 <hogp_profile_data+0x25A : 1e15e95 >
 1e15e61:    00 4d             	r0 = [r6 + 64]
 1e15e63:    2a 08             	r10 = r2
 1e15e65:    00 1a             	goto 1024 <dev_id_list+0x1D3 : 1e16267 >
 1e15e67:    01 36             	if (r3 != 0) goto 2 <hogp_profile_data+0x230 : 1e15e6b >
 1e15e69:    00 4d             	r0 = [r6 + 64]
 1e15e6b:    2a 0a             	sp += 84
 1e15e6d:    00 0a             	sp += 0
 1e15e6f:    01 37             	if (r3 != 0) goto -510 <hogp_profile_data+0x38 : 1e15c73 >
 1e15e71:    00 02             	r0 = [sp]
 1e15e73:    29 00             	swi 1
 1e15e75:    00 0a             	sp += 0
 1e15e77:    00 02             	r0 = [sp]
 1e15e79:    00 38             	if (r4 != 0) goto 0 <hogp_profile_data+0x240 : 1e15e7b >
 1e15e7b:    00 08             	r0 = r0
 1e15e7d:    29 04             	r9 = r0.l (u)
 1e15e7f:    01 0d             	r1 <<= r4
 1e15e81:    00 02             	r0 = [sp]
 1e15e83:    00 39             	if (r4 != 0) goto -512 <hogp_profile_data+0x4A : 1e15c85 >
 1e15e85:    00 03             	r0 = [sp+64]
 1e15e87:    28 1a             	goto 1104 <dev_id_list+0x245 : 1e162d9 >
 1e15e89:    3a 00             	cc = 1
 1e15e8b:    4d 2a             	if (r5 == 0) goto 154 <hogp_profile_data+0x2EC : 1e15f27 >
 1e15e8d:    08 00             	csync
 1e15e8f:    1a 01             	{rets, r10-r4} = [sp++]
 1e15e91:    3a 00             	cc = 1
 1e15e93:    4d 2a             	if (r5 == 0) goto 154 <hogp_profile_data+0x2F4 : 1e15f2f >
 1e15e95:    0a 00             	ssync
 1e15e97:    0a 01             	{r10-r4} = [sp++]
 1e15e99:    3b 00             	cc = 1
 1e15e9b:    02 29             	if (r4 == 0) goto -508 <hogp_profile_data+0x66 : 1e15ca1 >
 1e15e9d:    00 00             	nop
 1e15e9f:    0a 00             	ssync
 1e15ea1:    02 00             	idle
 1e15ea3:    3c 00             	sp = usp
 1e15ea5:    08 29             	if (r4 == 0) goto -496 <hogp_profile_data+0x7C : 1e15cb7 >
 1e15ea7:    05 01             	{r5, r4} = [sp++]
 1e15ea9:    0d 00             	syscall
 1e15eab:    02 00             	idle
 1e15ead:    3d 00             	sp = ssp
 1e15eaf:    03 28             	if (r4 == 0) goto 6 <hogp_profile_data+0x27C : 1e15eb7 >
 1e15eb1:    1a 3e             	if (r7 != 0) goto 52 <hogp_profile_data+0x2AC : 1e15ee7 >
 1e15eb3:    00 4d             	r0 = [r6 + 64]
 1e15eb5:    2a 08             	r10 = r2
 1e15eb7:    00 1a             	goto 1024 <dev_id_list+0x225 : 1e162b9 >
 1e15eb9:    01 3e             	if (r7 != 0) goto 2 <hogp_profile_data+0x282 : 1e15ebd >
 1e15ebb:    00 4d             	r0 = [r6 + 64]
 1e15ebd:    2a 0a             	sp += 84
 1e15ebf:    00 0a             	sp += 0
 1e15ec1:    01 3f             	if (r7 != 0) goto -510 <hogp_profile_data+0x8A : 1e15cc5 >
 1e15ec3:    00 02             	r0 = [sp]
 1e15ec5:    29 00             	swi 1
 1e15ec7:    00 0a             	sp += 0
 1e15ec9:    00 02             	r0 = [sp]
 1e15ecb:    00 40             	r0 = [r0 + 0]
 1e15ecd:    00 08             	r0 = r0
 1e15ecf:    29 06             	r9 = -30
 1e15ed1:    01 0d             	r1 <<= r4
 1e15ed3:    00 02             	r0 = [sp]
 1e15ed5:    00 41             	r0 = [r0 + 64]
 1e15ed7:    00 03             	r0 = [sp+64]
 1e15ed9:    28 02             	[sp+8] = r0
 1e15edb:    42 00             	testset b[r2]
 1e15edd:    4b 2a             	if (r5 == 0) goto 150 <report_id_handle_table+0x5 : 1e15f75 >
 1e15edf:    08 00             	csync
 1e15ee1:    02 01             	{r3, r2} = [sp++]
 1e15ee3:    42 00             	testset b[r2]
 1e15ee5:    4b 2a             	if (r5 == 0) goto 150 <report_id_handle_table+0xD : 1e15f7d >
 1e15ee7:    0d 00             	syscall
 1e15ee9:    02 00             	idle
 1e15eeb:    43 00             	testset b[r3]
 1e15eed:    03 28             	if (r4 == 0) goto 6 <hogp_profile_data+0x2BA : 1e15ef5 >
 1e15eef:    1a 44             	[r2 + 4] = r2
 1e15ef1:    00 33             	if (r1 != 0) goto -512 <hogp_profile_data+0xB8 : 1e15cf3 >
 1e15ef3:    2a 08             	r10 = r2
 1e15ef5:    00 1a             	goto 1024 <dev_id_list+0x263 : 1e162f7 >
 1e15ef7:    00 44             	r0 = [r2 + 0]
 1e15ef9:    00 33             	if (r1 != 0) goto -512 <hogp_profile_data+0xC0 : 1e15cfb >
 1e15efb:    2a 0a             	sp += 84
 1e15efd:    00 0a             	sp += 0
 1e15eff:    01 45             	r1 = [r2 + 64]
 1e15f01:    00 02             	r0 = [sp]
 1e15f03:    29 00             	swi 1
 1e15f05:    00 0d             	r0 <<= r4
 1e15f07:    00 02             	r0 = [sp]
 1e15f09:    00 46             	r0 = [r3 + 0]
 1e15f0b:    00 03             	r0 = [sp+64]
 1e15f0d:    28 02             	[sp+8] = r0
 1e15f0f:    47 00             	testset b[r7]
 1e15f11:    4a 2a             	if (r5 == 0) goto 148 <wk_param+0xF : 1e15fa7 >
 1e15f13:    08 00             	csync
 1e15f15:    02 01             	{r3, r2} = [sp++]
 1e15f17:    47 00             	testset b[r7]
 1e15f19:    4a 2a             	if (r5 == 0) goto 148 <wk_param+0x17 : 1e15faf >
 1e15f1b:    0d 00             	syscall
 1e15f1d:    02 00             	idle
 1e15f1f:    48 00             	testset b[r8]
 1e15f21:    03 28             	if (r4 == 0) goto 6 <hogp_profile_data+0x2EE : 1e15f29 >
 1e15f23:    04 49             	r4 = [r4 + 64]
 1e15f25:    00 4c             	r0 = [r6 + 0]
 1e15f27:    2a 08             	r10 = r2
 1e15f29:    00 04             	r0 = r0.b0 (u)
 1e15f2b:    01 49             	r1 = [r4 + 64]
 1e15f2d:    00 4c             	r0 = [r6 + 0]
 1e15f2f:    2a 0a             	sp += 84
 1e15f31:    00 02             	r0 = [sp]
 1e15f33:    00 4a             	r0 = [r5 + 0]
 1e15f35:    00 00             	nop
 1e15f37:    28 40             	[r0 + 8] = r0
 1e15f39:    ae 0d             	r14 >>= r6
 1e15f3b:    00 02             	r0 = [sp]
 1e15f3d:    00 4b             	r0 = [r5 + 64]
 1e15f3f:    00 03             	r0 = [sp+64]
 1e15f41:    28 04             	r8 = r0.l (u)
 1e15f43:    4c 00             	testset b[r12]
 1e15f45:    41 ae             	r1 = sp + 228
 1e15f47:    08 00             	csync
 1e15f49:    04 01             	{r4} = [sp++]
 1e15f4b:    4c 00             	testset b[r12]
 1e15f4d:    41 ae             	r1 = sp + 228
 1e15f4f:    0d 00             	syscall
 1e15f51:    02 00             	idle
 1e15f53:    4d 00             	testset b[r13]
 1e15f55:    03 28             	if (r4 == 0) goto 6 <hogp_profile_data+0x322 : 1e15f5d >
 1e15f57:    10 4e             	r0 = [r7 + 4]
 1e15f59:    00 42             	r0 = [r1 + 0]
 1e15f5b:    ae 08             	r14 = r10
 1e15f5d:    00 10             	call 0 <hogp_profile_data+0x324 : 1e15f5f >
 1e15f5f:    00 4e             	r0 = [r7 + 0]
 1e15f61:    00 42             	r0 = [r1 + 0]
 1e15f63:    ae 0a             	sp += 348
 1e15f65:    00 0a             	sp += 0
 1e15f67:    01 4f             	r1 = [r7 + 64]
 1e15f69:    00 02             	r0 = [sp]
 1e15f6b:    29 00             	swi 1
 1e15f6d:    00 00             	nop
 1e15f6f:    00 00             	nop


report_id_handle_table:
 1e15f70:    00 00             	nop
 1e15f72:    27 00             	rte
 1e15f74:    2b 00             	swi 3
 1e15f76:    32 00             	pc = [sp++]
 1e15f78:    36 00             	[--sp] = rets
 1e15f7a:    3a 00             	cc = 1
 1e15f7c:    3e 00             	usp = sp
 1e15f7e:    ff ff ff ff ff ff 	pc = 4294967295


btif_table:
 1e15f84:    66 00             	cli r6
 1e15f86:    06 00             	hbkpt
 1e15f88:    6e 00             	cli r14
 1e15f8a:    06 00             	hbkpt
 1e15f8c:    00 00             	nop
 1e15f8e:    00 00             	nop


pwm_led_data:
 1e15f90:    00 00             	nop
 1e15f92:    00 00             	nop
 1e15f94:    09 00             	csync
 1e15f96:    00 00             	nop


wk_param:
 1e15f98:    00 00             	nop
 1e15f9a:    00 00             	nop
 1e15f9c:    42 08             	r2 = r4
 1e15f9e:    00 00             	nop
 1e15fa0:    47 08             	r7 = r4
 1e15fa2:    00 00             	nop
 1e15fa4:    00 00             	nop
 1e15fa6:    00 00             	nop
 1e15fa8:    00 00             	nop
 1e15faa:    00 00             	nop
 1e15fac:    00 00             	nop
 1e15fae:    00 00             	nop
 1e15fb0:    00 00             	nop
 1e15fb2:    00 00             	nop
 1e15fb4:    00 00             	nop
 1e15fb6:    00 00             	nop
 1e15fb8:    00 00             	nop
 1e15fba:    00 00             	nop
 1e15fbc:    00 00             	nop
 1e15fbe:    00 00             	nop
 1e15fc0:    00 00             	nop
 1e15fc2:    00 00             	nop
 1e15fc4:    00 00             	nop
 1e15fc6:    00 00             	nop
 1e15fc8:    00 00             	nop
 1e15fca:    00 00             	nop
 1e15fcc:    00 00             	nop
 1e15fce:    00 00             	nop
 1e15fd0:    00 00             	nop
 1e15fd2:    00 00             	nop
 1e15fd4:    00 00             	nop
 1e15fd6:    00 00             	nop
 1e15fd8:    00 00             	nop
 1e15fda:    00 00             	nop
 1e15fdc:    00 00             	nop
 1e15fde:    00 00             	nop
 1e15fe0:    00 00             	nop
 1e15fe2:    00 00             	nop


iokey_list:
 1e15fe4:    11 00             	lockclr
 1e15fe6:    00 01             	{r3-r0} = [sp++]
 1e15fe8:    32 00             	pc = [sp++]
 1e15fea:    00 02             	r0 = [sp]


iokey_data:
 1e15fec:    01 02             	r1 = [sp]
 1e15fee:    00 00             	nop
 1e15ff0:    e4 5f             	r4 = h[r7 + 60] (u)
 1e15ff2:    e1 01             	[--sp] = {psr, reti}
 1e15ff4:    fe ff 00 01 02 00 	sp = 131328
 1e15ffa:    00 00             	nop


timer_div.636:
 1e15ffc:    01 00             	nop
 1e15ffe:    00 00             	nop
 1e16000:    04 00             	bkpt
 1e16002:    00 00             	nop
 1e16004:    10 00             	lockclr
 1e16006:    00 00             	nop
 1e16008:    40 00             	testset b[r0]
 1e1600a:    00 00             	nop
 1e1600c:    02 00             	idle
 1e1600e:    00 00             	nop
 1e16010:    08 00             	csync
 1e16012:    00 00             	nop
 1e16014:    20 00             	rts
 1e16016:    00 00             	nop
 1e16018:    80 00             	call r0
 1e1601a:    00 00             	nop
 1e1601c:    00 01             	{r3-r0} = [sp++]
 1e1601e:    00 00             	nop
 1e16020:    00 04             	r0 = r0.b0 (u)
 1e16022:    00 00             	nop
 1e16024:    00 10             	call 0 <timer_div.636+0x2A : 1e16026 >
 1e16026:    00 00             	nop
 1e16028:    00 40             	r0 = [r0 + 0]
 1e1602a:    00 00             	nop
 1e1602c:    00 02             	r0 = [sp]
 1e1602e:    00 00             	nop
 1e16030:    00 08             	r0 = r0
 1e16032:    00 00             	nop
 1e16034:    00 20             	if (r0 == 0) goto 0 <timer_div.636+0x3A : 1e16036 >
 1e16036:    00 00             	nop
 1e16038:    00 80             	r0 += 0
 1e1603a:    00 00             	nop


timer_power_ops:
 1e1603c:    00 00             	nop
 1e1603e:    00 00             	nop
 1e16040:    00 00             	nop
 1e16042:    00 00             	nop
 1e16044:    00 00             	nop
 1e16046:    00 00             	nop
 1e16048:    f4 36             	if (r3 != 0) goto 488 <dev_id_list+0x19E : 1e16232 >
 1e1604a:    e0 01             	[--sp] = {psr}
 1e1604c:    12 37             	if (r3 != 0) goto -476 <hogp_profile_data+0x237 : 1e15e72 >
 1e1604e:    e0 01             	[--sp] = {psr}
 1e16050:    00 00             	nop
 1e16052:    00 00             	nop


wdt_time:
 1e16054:    01 00             	nop
 1e16056:    00 00             	nop
 1e16058:    02 00             	idle
 1e1605a:    00 00             	nop
 1e1605c:    04 00             	bkpt
 1e1605e:    00 00             	nop
 1e16060:    08 00             	csync
 1e16062:    00 00             	nop
 1e16064:    10 00             	lockclr
 1e16066:    00 00             	nop
 1e16068:    20 00             	rts
 1e1606a:    00 00             	nop
 1e1606c:    40 00             	testset b[r0]
 1e1606e:    00 00             	nop
 1e16070:    80 00             	call r0
 1e16072:    00 00             	nop
 1e16074:    00 01             	{r3-r0} = [sp++]
 1e16076:    00 00             	nop
 1e16078:    00 02             	r0 = [sp]
 1e1607a:    00 00             	nop
 1e1607c:    00 04             	r0 = r0.b0 (u)
 1e1607e:    00 00             	nop
 1e16080:    00 08             	r0 = r0
 1e16082:    00 00             	nop
 1e16084:    00 10             	call 0 <wdt_time+0x32 : 1e16086 >
 1e16086:    00 00             	nop
 1e16088:    00 20             	if (r0 == 0) goto 0 <wdt_time+0x36 : 1e1608a >
 1e1608a:    00 00             	nop
 1e1608c:    00 40             	r0 = [r0 + 0]
 1e1608e:    00 00             	nop
 1e16090:    00 80             	r0 += 0
 1e16092:    00 00             	nop


dev_id_list:
 1e16094:    44 42             	r4 = [r1 + 16]
 1e16096:    47 5f             	r7 = h[r7 + 40] (u)
 1e16098:    52 45             	r2 = [r2 + 84]
 1e1609a:    56 00             	testset b[r6]
 1e1609c:    00 00             	nop
 1e1609e:    00 00             	nop
 1e160a0:    00 00             	nop
 1e160a2:    00 00             	nop
 1e160a4:    00 44             	r0 = [r2 + 0]
 1e160a6:    42 47             	r2 = [r3 + 80]
 1e160a8:    5f 41             	[r0 + 84] = r7
 1e160aa:    4c 4e             	[r7 + 16] = r4
 1e160ac:    4b 30             	if (r0 != 0) goto 150 <dev_id_list+0xB0 : 1e16144 >
 1e160ae:    00 00             	nop
 1e160b0:    00 00             	nop
 1e160b2:    00 00             	nop
 1e160b4:    00 01             	{r3-r0} = [sp++]
 1e160b6:    44 42             	r4 = [r1 + 16]
 1e160b8:    47 5f             	r7 = h[r7 + 40] (u)
 1e160ba:    41 4c             	r1 = [r6 + 16]
 1e160bc:    4e 4b             	[r5 + 80] = r6
 1e160be:    31 00             	pc = [sp++]
 1e160c0:    00 00             	nop
 1e160c2:    00 00             	nop
 1e160c4:    00 00             	nop
 1e160c6:    02 44             	r2 = [r2 + 0]
 1e160c8:    42 47             	r2 = [r3 + 80]
 1e160ca:    5f 41             	[r0 + 84] = r7
 1e160cc:    55 44             	r5 = [r2 + 20]
 1e160ce:    49 4f             	[r7 + 80] = r1
 1e160d0:    00 00             	nop
 1e160d2:    00 00             	nop
 1e160d4:    00 00             	nop
 1e160d6:    00 03             	r0 = [sp+64]
 1e160d8:    44 42             	r4 = [r1 + 16]
 1e160da:    47 5f             	r7 = h[r7 + 40] (u)
 1e160dc:    53 50             	r3 = h[r0 + 10] (u)
 1e160de:    44 49             	r4 = [r4 + 80]
 1e160e0:    46 5f             	r6 = h[r7 + 40] (u)
 1e160e2:    44 00             	testset b[r4]
 1e160e4:    00 00             	nop
 1e160e6:    00 00             	nop
 1e160e8:    04 44             	r4 = [r2 + 0]
 1e160ea:    42 47             	r2 = [r3 + 80]
 1e160ec:    5f 53             	h[r1 + 42] = r7
 1e160ee:    50 44             	r0 = [r2 + 20]
 1e160f0:    49 46             	[r3 + 16] = r1
 1e160f2:    5f 49             	[r4 + 84] = r7
 1e160f4:    00 00             	nop
 1e160f6:    00 00             	nop
 1e160f8:    00 05             	r0 = r4.b0 (u)
 1e160fa:    44 42             	r4 = [r1 + 16]
 1e160fc:    47 5f             	r7 = h[r7 + 40] (u)
 1e160fe:    49 53             	h[r1 + 40] = r1
 1e16100:    50 00             	testset b[r0]
 1e16102:    00 00             	nop
 1e16104:    00 00             	nop
 1e16106:    00 00             	nop
 1e16108:    00 00             	nop
 1e1610a:    06 44             	r6 = [r2 + 0]
 1e1610c:    42 47             	r2 = [r3 + 80]
 1e1610e:    5f 50             	h[r0 + 10] = r7
 1e16110:    41 50             	r1 = h[r0 + 8] (u)
 1e16112:    00 00             	nop
 1e16114:    00 00             	nop
 1e16116:    00 00             	nop
 1e16118:    00 00             	nop
 1e1611a:    00 07             	r0 = -16
 1e1611c:    44 42             	r4 = [r1 + 16]
 1e1611e:    47 5f             	r7 = h[r7 + 40] (u)
 1e16120:    50 4c             	r0 = [r6 + 20]
 1e16122:    4e 4b             	[r5 + 80] = r6
 1e16124:    00 00             	nop
 1e16126:    00 00             	nop
 1e16128:    00 00             	nop
 1e1612a:    00 00             	nop
 1e1612c:    08 44             	[r2 + 0] = r0
 1e1612e:    42 47             	r2 = [r3 + 80]
 1e16130:    5f 53             	h[r1 + 42] = r7
 1e16132:    42 43             	r2 = [r1 + 80]
 1e16134:    00 00             	nop
 1e16136:    00 00             	nop
 1e16138:    00 00             	nop
 1e1613a:    00 00             	nop
 1e1613c:    00 09             	r0 += r0
 1e1613e:    44 42             	r4 = [r1 + 16]
 1e16140:    47 5f             	r7 = h[r7 + 40] (u)
 1e16142:    41 41             	r1 = [r0 + 80]
 1e16144:    43 00             	testset b[r3]
 1e16146:    00 00             	nop
 1e16148:    00 00             	nop
 1e1614a:    00 00             	nop
 1e1614c:    00 00             	nop
 1e1614e:    0a 44             	[r2 + 0] = r2
 1e16150:    42 47             	r2 = [r3 + 80]
 1e16152:    5f 41             	[r0 + 84] = r7
 1e16154:    45 53             	r5 = h[r1 + 40] (u)
 1e16156:    00 00             	nop
 1e16158:    00 00             	nop
 1e1615a:    00 00             	nop
 1e1615c:    00 00             	nop
 1e1615e:    00 0b             	sp += -512
 1e16160:    44 42             	r4 = [r1 + 16]
 1e16162:    47 5f             	r7 = h[r7 + 40] (u)
 1e16164:    53 44             	r3 = [r2 + 20]
 1e16166:    30 00             	pc = [sp++]
 1e16168:    00 00             	nop
 1e1616a:    00 00             	nop
 1e1616c:    00 00             	nop
 1e1616e:    00 00             	nop
 1e16170:    0c 44             	[r2 + 0] = r4
 1e16172:    42 47             	r2 = [r3 + 80]
 1e16174:    5f 53             	h[r1 + 42] = r7
 1e16176:    44 31             	if (r0 != 0) goto -376 <timer_div.636+0x4 : 1e16000 >
 1e16178:    00 00             	nop
 1e1617a:    00 00             	nop
 1e1617c:    00 00             	nop
 1e1617e:    00 00             	nop
 1e16180:    00 0d             	r0 <<= r4
 1e16182:    44 42             	r4 = [r1 + 16]
 1e16184:    47 5f             	r7 = h[r7 + 40] (u)
 1e16186:    53 50             	r3 = h[r0 + 10] (u)
 1e16188:    49 30             	if (r0 != 0) goto 146 <dev_id_list+0x188 : 1e1621c >
 1e1618a:    00 00             	nop
 1e1618c:    00 00             	nop
 1e1618e:    00 00             	nop
 1e16190:    00 00             	nop
 1e16192:    0e 44             	[r2 + 0] = r6
 1e16194:    42 47             	r2 = [r3 + 80]
 1e16196:    5f 53             	h[r1 + 42] = r7
 1e16198:    50 49             	r0 = [r4 + 84]
 1e1619a:    31 00             	pc = [sp++]
 1e1619c:    00 00             	nop
 1e1619e:    00 00             	nop
 1e161a0:    00 00             	nop
 1e161a2:    00 0f             	r0 = r0 * r4
 1e161a4:    44 42             	r4 = [r1 + 16]
 1e161a6:    47 5f             	r7 = h[r7 + 40] (u)
 1e161a8:    53 50             	r3 = h[r0 + 10] (u)
 1e161aa:    49 32             	if (r1 != 0) goto 146 <dev_id_list+0x1AA : 1e1623e >
 1e161ac:    00 00             	nop
 1e161ae:    00 00             	nop
 1e161b0:    00 00             	nop
 1e161b2:    00 00             	nop
 1e161b4:    10 44             	r0 = [r2 + 4]
 1e161b6:    42 47             	r2 = [r3 + 80]
 1e161b8:    5f 55             	h[r2 + 42] = r7
 1e161ba:    41 52             	r1 = h[r1 + 8] (u)
 1e161bc:    54 30             	if (r0 != 0) goto 168 <dev_id_list+0x1D2 : 1e16266 >
 1e161be:    57 00             	testset b[r7]
 1e161c0:    00 00             	nop
 1e161c2:    00 00             	nop
 1e161c4:    00 11             	call 512 <dev_id_list+0x332 : 1e163c6 >
 1e161c6:    44 42             	r4 = [r1 + 16]
 1e161c8:    47 5f             	r7 = h[r7 + 40] (u)
 1e161ca:    55 41             	r5 = [r0 + 84]
 1e161cc:    52 54             	r2 = h[r2 + 10] (u)
 1e161ce:    30 52             	r0 = h[r1 + 6] (u)
 1e161d0:    00 00             	nop
 1e161d2:    00 00             	nop
 1e161d4:    00 00             	nop
 1e161d6:    12 44             	r2 = [r2 + 4]
 1e161d8:    42 47             	r2 = [r3 + 80]
 1e161da:    5f 55             	h[r2 + 42] = r7
 1e161dc:    41 52             	r1 = h[r1 + 8] (u)
 1e161de:    54 31             	if (r0 != 0) goto -344 <wdt_time+0x34 : 1e16088 >
 1e161e0:    57 00             	testset b[r7]
 1e161e2:    00 00             	nop
 1e161e4:    00 00             	nop
 1e161e6:    00 13             	call 1536 <__VERSION_END+0x2 : 1e167e8 >
 1e161e8:    44 42             	r4 = [r1 + 16]
 1e161ea:    47 5f             	r7 = h[r7 + 40] (u)
 1e161ec:    55 41             	r5 = [r0 + 84]
 1e161ee:    52 54             	r2 = h[r2 + 10] (u)
 1e161f0:    31 52             	r1 = h[r1 + 6] (u)
 1e161f2:    00 00             	nop
 1e161f4:    00 00             	nop
 1e161f6:    00 00             	nop
 1e161f8:    14 44             	r4 = [r2 + 4]
 1e161fa:    42 47             	r2 = [r3 + 80]
 1e161fc:    5f 55             	h[r2 + 42] = r7
 1e161fe:    41 52             	r1 = h[r1 + 8] (u)
 1e16200:    54 32             	if (r1 != 0) goto 168 <dev_id_list+0x216 : 1e162aa >
 1e16202:    57 00             	testset b[r7]
 1e16204:    00 00             	nop
 1e16206:    00 00             	nop
 1e16208:    00 15             	call -1536 <Model_Number_String+0x5 : 1e15c0a >
 1e1620a:    44 42             	r4 = [r1 + 16]
 1e1620c:    47 5f             	r7 = h[r7 + 40] (u)
 1e1620e:    55 41             	r5 = [r0 + 84]
 1e16210:    52 54             	r2 = h[r2 + 10] (u)
 1e16212:    32 52             	r2 = h[r1 + 6] (u)
 1e16214:    00 00             	nop
 1e16216:    00 00             	nop
 1e16218:    00 00             	nop
 1e1621a:    16 44             	r6 = [r2 + 4]
 1e1621c:    42 47             	r2 = [r3 + 80]
 1e1621e:    5f 43             	[r1 + 84] = r7
 1e16220:    54 4d             	r4 = [r6 + 84]
 1e16222:    00 00             	nop
 1e16224:    00 00             	nop
 1e16226:    00 00             	nop
 1e16228:    00 00             	nop
 1e1622a:    00 17             	call -512 <timer_div.636+0x30 : 1e1602c >
 1e1622c:    44 42             	r4 = [r1 + 16]
 1e1622e:    47 5f             	r7 = h[r7 + 40] (u)
 1e16230:    41 58             	r1 = h[r4 + 8] (u)
 1e16232:    49 5f             	h[r7 + 40] = r1
 1e16234:    4d 30             	if (r0 != 0) goto 154 <dev_id_list+0x23C : 1e162d0 >
 1e16236:    00 00             	nop
 1e16238:    00 00             	nop
 1e1623a:    00 00             	nop
 1e1623c:    80 44             	r0 = [r2 + 32]
 1e1623e:    42 47             	r2 = [r3 + 80]
 1e16240:    5f 41             	[r0 + 84] = r7
 1e16242:    58 49             	[r4 + 84] = r0
 1e16244:    5f 4d             	[r6 + 84] = r7
 1e16246:    31 00             	pc = [sp++]
 1e16248:    00 00             	nop
 1e1624a:    00 00             	nop
 1e1624c:    00 81             	r0 += 16
 1e1624e:    44 42             	r4 = [r1 + 16]
 1e16250:    47 5f             	r7 = h[r7 + 40] (u)
 1e16252:    41 58             	r1 = h[r4 + 8] (u)
 1e16254:    49 5f             	h[r7 + 40] = r1
 1e16256:    4d 32             	if (r1 != 0) goto 154 <dev_id_list+0x25E : 1e162f2 >
 1e16258:    00 00             	nop
 1e1625a:    00 00             	nop
 1e1625c:    00 00             	nop
 1e1625e:    82 44             	r2 = [r2 + 32]
 1e16260:    42 47             	r2 = [r3 + 80]
 1e16262:    5f 41             	[r0 + 84] = r7
 1e16264:    58 49             	[r4 + 84] = r0
 1e16266:    5f 4d             	[r6 + 84] = r7
 1e16268:    33 00             	pc = [sp++]
 1e1626a:    00 00             	nop
 1e1626c:    00 00             	nop
 1e1626e:    00 83             	r0 += 48
 1e16270:    44 42             	r4 = [r1 + 16]
 1e16272:    47 5f             	r7 = h[r7 + 40] (u)
 1e16274:    41 58             	r1 = h[r4 + 8] (u)
 1e16276:    49 5f             	h[r7 + 40] = r1
 1e16278:    4d 34             	if (r2 != 0) goto 154 <dev_id_list+0x280 : 1e16314 >
 1e1627a:    00 00             	nop
 1e1627c:    00 00             	nop
 1e1627e:    00 00             	nop
 1e16280:    84 44             	r4 = [r2 + 32]
 1e16282:    42 47             	r2 = [r3 + 80]
 1e16284:    5f 41             	[r0 + 84] = r7
 1e16286:    58 49             	[r4 + 84] = r0
 1e16288:    5f 4d             	[r6 + 84] = r7
 1e1628a:    35 00             	[--sp] = rets
 1e1628c:    00 00             	nop
 1e1628e:    00 00             	nop
 1e16290:    00 85             	r0 += 80
 1e16292:    44 42             	r4 = [r1 + 16]
 1e16294:    47 5f             	r7 = h[r7 + 40] (u)
 1e16296:    41 58             	r1 = h[r4 + 8] (u)
 1e16298:    49 5f             	h[r7 + 40] = r1
 1e1629a:    4d 36             	if (r3 != 0) goto 154 <dev_id_list+0x2A2 : 1e16336 >
 1e1629c:    00 00             	nop
 1e1629e:    00 00             	nop
 1e162a0:    00 00             	nop
 1e162a2:    86 44             	r6 = [r2 + 32]
 1e162a4:    42 47             	r2 = [r3 + 80]
 1e162a6:    5f 41             	[r0 + 84] = r7
 1e162a8:    58 49             	[r4 + 84] = r0
 1e162aa:    5f 4d             	[r6 + 84] = r7
 1e162ac:    37 00             	[--sp] = rets
 1e162ae:    00 00             	nop
 1e162b0:    00 00             	nop
 1e162b2:    00 87             	r0 += 112
 1e162b4:    44 42             	r4 = [r1 + 16]
 1e162b6:    47 5f             	r7 = h[r7 + 40] (u)
 1e162b8:    41 58             	r1 = h[r4 + 8] (u)
 1e162ba:    49 5f             	h[r7 + 40] = r1
 1e162bc:    4d 38             	if (r4 != 0) goto 154 <dev_id_list+0x2C4 : 1e16358 >
 1e162be:    00 00             	nop
 1e162c0:    00 00             	nop
 1e162c2:    00 00             	nop
 1e162c4:    88 44             	[r2 + 32] = r0
 1e162c6:    42 47             	r2 = [r3 + 80]
 1e162c8:    5f 41             	[r0 + 84] = r7
 1e162ca:    58 49             	[r4 + 84] = r0
 1e162cc:    5f 4d             	[r6 + 84] = r7
 1e162ce:    39 00             	cc = 0
 1e162d0:    00 00             	nop
 1e162d2:    00 00             	nop
 1e162d4:    00 89             	r0 += -112
 1e162d6:    44 42             	r4 = [r1 + 16]
 1e162d8:    47 5f             	r7 = h[r7 + 40] (u)
 1e162da:    41 58             	r1 = h[r4 + 8] (u)
 1e162dc:    49 5f             	h[r7 + 40] = r1
 1e162de:    4d 41             	[r0 + 80] = r5
 1e162e0:    00 00             	nop
 1e162e2:    00 00             	nop
 1e162e4:    00 00             	nop
 1e162e6:    8a 44             	[r2 + 32] = r2
 1e162e8:    42 47             	r2 = [r3 + 80]
 1e162ea:    5f 41             	[r0 + 84] = r7
 1e162ec:    58 49             	[r4 + 84] = r0
 1e162ee:    5f 4d             	[r6 + 84] = r7
 1e162f0:    42 00             	testset b[r2]
 1e162f2:    00 00             	nop
 1e162f4:    00 00             	nop
 1e162f6:    00 8b             	r0 += -80
 1e162f8:    44 42             	r4 = [r1 + 16]
 1e162fa:    47 5f             	r7 = h[r7 + 40] (u)
 1e162fc:    41 58             	r1 = h[r4 + 8] (u)
 1e162fe:    49 5f             	h[r7 + 40] = r1
 1e16300:    4d 43             	[r1 + 80] = r5
 1e16302:    00 00             	nop
 1e16304:    00 00             	nop
 1e16306:    00 00             	nop
 1e16308:    8c 44             	[r2 + 32] = r4
 1e1630a:    42 47             	r2 = [r3 + 80]
 1e1630c:    5f 41             	[r0 + 84] = r7
 1e1630e:    58 49             	[r4 + 84] = r0
 1e16310:    5f 4d             	[r6 + 84] = r7
 1e16312:    44 00             	testset b[r4]
 1e16314:    00 00             	nop
 1e16316:    00 00             	nop
 1e16318:    00 8d             	r0 += -48
 1e1631a:    44 42             	r4 = [r1 + 16]
 1e1631c:    47 5f             	r7 = h[r7 + 40] (u)
 1e1631e:    41 58             	r1 = h[r4 + 8] (u)
 1e16320:    49 5f             	h[r7 + 40] = r1
 1e16322:    4d 45             	[r2 + 80] = r5
 1e16324:    00 00             	nop
 1e16326:    00 00             	nop
 1e16328:    00 00             	nop
 1e1632a:    8e 44             	[r2 + 32] = r6
 1e1632c:    42 47             	r2 = [r3 + 80]
 1e1632e:    5f 41             	[r0 + 84] = r7
 1e16330:    58 49             	[r4 + 84] = r0
 1e16332:    5f 4d             	[r6 + 84] = r7
 1e16334:    46 00             	testset b[r6]
 1e16336:    00 00             	nop
 1e16338:    00 00             	nop
 1e1633a:    00 8f             	r0 += -16
 1e1633c:    44 42             	r4 = [r1 + 16]
 1e1633e:    47 5f             	r7 = h[r7 + 40] (u)
 1e16340:    55 53             	r5 = h[r1 + 42] (u)
 1e16342:    42 00             	testset b[r2]
 1e16344:    00 00             	nop
 1e16346:    00 00             	nop
 1e16348:    00 00             	nop
 1e1634a:    00 00             	nop
 1e1634c:    a0 44             	r0 = [r2 + 40]
 1e1634e:    42 47             	r2 = [r3 + 80]
 1e16350:    5f 42             	[r1 + 20] = r7
 1e16352:    54 00             	testset b[r4]
 1e16354:    00 00             	nop
 1e16356:    00 00             	nop
 1e16358:    00 00             	nop
 1e1635a:    00 00             	nop
 1e1635c:    00 a2             	r0 = sp + 32
 1e1635e:    44 42             	r4 = [r1 + 16]
 1e16360:    47 5f             	r7 = h[r7 + 40] (u)
 1e16362:    46 46             	r6 = [r3 + 16]
 1e16364:    54 00             	testset b[r4]
 1e16366:    00 00             	nop
 1e16368:    00 00             	nop
 1e1636a:    00 00             	nop
 1e1636c:    00 00             	nop
 1e1636e:    a3 44             	r3 = [r2 + 40]
 1e16370:    42 47             	r2 = [r3 + 80]
 1e16372:    5f 45             	[r2 + 84] = r7
 1e16374:    51 00             	testset b[r1]
 1e16376:    00 00             	nop
 1e16378:    00 00             	nop
 1e1637a:    00 00             	nop
 1e1637c:    00 00             	nop
 1e1637e:    00 a4             	r0 = sp + 64
 1e16380:    44 42             	r4 = [r1 + 16]
 1e16382:    47 5f             	r7 = h[r7 + 40] (u)
 1e16384:    46 49             	r6 = [r4 + 80]
 1e16386:    52 00             	testset b[r2]
 1e16388:    00 00             	nop
 1e1638a:    00 00             	nop
 1e1638c:    00 00             	nop
 1e1638e:    00 00             	nop
 1e16390:    a5 44             	r5 = [r2 + 40]
 1e16392:    42 47             	r2 = [r3 + 80]
 1e16394:    5f 43             	[r1 + 84] = r7
 1e16396:    50 55             	r0 = h[r2 + 42] (u)
 1e16398:    30 5f             	r0 = h[r7 + 38] (u)
 1e1639a:    57 52             	r7 = h[r1 + 10] (u)
 1e1639c:    00 00             	nop
 1e1639e:    00 00             	nop
 1e163a0:    00 f0 44 42       	if ((r0 & r0) == 0) goto 33928 <lmp_hci_disconnect+0x18 : 1e1e82c >
 1e163a4:    47 5f             	r7 = h[r7 + 40] (u)
 1e163a6:    43 50             	r3 = h[r0 + 8] (u)
 1e163a8:    55 30             	if (r0 != 0) goto 170 <PD_map_tbl+0x11 : 1e16454 >
 1e163aa:    5f 52             	h[r1 + 10] = r7
 1e163ac:    44 00             	testset b[r4]
 1e163ae:    00 00             	nop
 1e163b0:    00 00             	nop
 1e163b2:    f1 44             	r1 = [r2 + 60]
 1e163b4:    42 47             	r2 = [r3 + 80]
 1e163b6:    5f 43             	[r1 + 84] = r7
 1e163b8:    50 55             	r0 = h[r2 + 42] (u)
 1e163ba:    30 5f             	r0 = h[r7 + 38] (u)
 1e163bc:    49 46             	[r3 + 16] = r1
 1e163be:    00 00             	nop
 1e163c0:    00 00             	nop
 1e163c2:    00 f2 44 42       	if (r0 ?? r0) goto 1160 <m_code_addr+0x4E : 1e1684e >
 1e163c6:    47 5f             	r7 = h[r7 + 40] (u)
 1e163c8:    53 44             	r3 = [r2 + 20]
 1e163ca:    54 41             	r4 = [r0 + 84]
 1e163cc:    50 00             	testset b[r0]
 1e163ce:    00 00             	nop
 1e163d0:    00 00             	nop
 1e163d2:    00 00             	nop
 1e163d4:    ff 4d             	[r6 + 124] = r7
 1e163d6:    53 47             	r3 = [r3 + 84]
 1e163d8:    5f 4e             	[r7 + 20] = r7
 1e163da:    55 4c             	r5 = [r6 + 20]
 1e163dc:    4c 00             	testset b[r12]
 1e163de:    00 00             	nop
 1e163e0:    00 00             	nop
 1e163e2:    00 00             	nop
 1e163e4:    00 ff 00 00 00 00 	if (r0 == 0) goto 0 <dev_id_list+0x356 : 1e163ea >
 1e163ea:    00 00             	nop
 1e163ec:    00 00             	nop
 1e163ee:    00 00             	nop
 1e163f0:    00 00             	nop
 1e163f2:    00 00             	nop
 1e163f4:    00 00             	nop
 1e163f6:    00 00             	nop
 1e163f8:    00 00             	nop
 1e163fa:    00 00             	nop
 1e163fc:    00 00             	nop
 1e163fe:    00 00             	nop


flash_powerup_ok_flash:
 1e16400:    66 6c             	r6 = b[r6 + 6] (u)
 1e16402:    61 73             	r1 = 54
 1e16404:    68 5f             	h[r7 + 44] = r0
 1e16406:    70 6f             	r0 = b[r7 + 23] (u)
 1e16408:    77 65             	r7 = b[r2 + 23] (u)
 1e1640a:    72 75             	r2 = 87
 1e1640c:    70 5f             	r0 = h[r7 + 46] (u)
 1e1640e:    6f 6b             	b[r5 + 22] = r7
 1e16410:    00 00             	nop
 1e16412:    00 00             	nop
 1e16414:    00 00             	nop
 1e16416:    00 00             	nop
 1e16418:    00 00             	nop
 1e1641a:    00 00             	nop
 1e1641c:    00 00             	nop
 1e1641e:    00 00             	nop


PB_valid:
 1e16420:    00 01             	{r3-r0} = [sp++]
 1e16422:    02 03             	r2 = [sp+64]
 1e16424:    04 05             	r4 = r4.b0 (u)
 1e16426:    06 07             	r6 = -16
 1e16428:    08 09             	r8 += r0


PA_map_tbl:
 1e1642a:    01 02             	r1 = [sp]
 1e1642c:    03 04             	r3 = r0.b0 (u)
 1e1642e:    05 06             	r5 = -32
 1e16430:    07 08             	r7 = r0
 1e16432:    09 0a             	sp += 16


PB_map_tbl:
 1e16434:    0b 0c             	r11 <<= r0
 1e16436:    0d 0e             	r5 = r1 * r0
 1e16438:    0f 10             	call 30 <PD_map_tbl+0x15 : 1e16458 >
 1e1643a:    11 12             	call 1058 <m_code_addr+0x5E : 1e1685e >
 1e1643c:    13 14             	call -2010 <hogp_profile_data+0x29 : 1e15c64 >


PD_valid:
 1e1643e:    00 01             	{r3-r0} = [sp++]
 1e16440:    02 03             	r2 = [sp+64]
 1e16442:    04 15             	call -1528 <hogp_profile_data+0x211 : 1e15e4c >


PD_map_tbl:
 1e16443:    15 16             	call -982 <wdt_time+0x1B : 1e1606f >
 1e16445:    17 18             	goto 46 <sys_power_ops+0x15 : 1e16475 >
 1e16447:    19 00             	cli
 1e16449:    00 ff ff 00 f0 ff 	if (r0 == 255) goto -32 <PA_map_tbl+0x5 : 1e1642f >
 1e1644f:    ff 00             	flushinv [r15]
 1e16451:    ff ff ff c9 00 00 	pc = 51711
 1e16457:    00 c8             	r0 = r0 <<< 32
 1e16459:    00 00             	nop
 1e1645b:    00 cc             	r0 = r0 <<< 16
 1e1645d:    00 00             	nop
 1e1645f:    00 00             	nop


sys_power_ops:
 1e16460:    00 00             	nop
 1e16462:    00 00             	nop
 1e16464:    5c 06             	r12 = -27
 1e16466:    e1 01             	[--sp] = {psr, reti}
 1e16468:    00 00             	nop
 1e1646a:    00 00             	nop
 1e1646c:    e4 06             	r4 = -18
 1e1646e:    e1 01             	[--sp] = {psr, reti}
 1e16470:    fa 06             	r10 = -17
 1e16472:    e1 01             	[--sp] = {psr, reti}
 1e16474:    00 00             	nop
 1e16476:    00 00             	nop


log_str:
 1e16478:    b8 55             	h[r2 + 54] = r0
 1e1647a:    e1 01             	[--sp] = {psr, reti}
 1e1647c:    c1 55             	r1 = h[r2 + 56] (u)
 1e1647e:    e1 01             	[--sp] = {psr, reti}


group_item_table:
 1e16480:    65 00             	cli r5
 1e16482:    20 00             	rts
 1e16484:    14 00             	lockset


sm_run.buffer:
 1e16486:    0b 01             	{r11-r4} = [sp++]


bluetooth_base_uuid:
 1e16488:    fb 34             	if (r2 != 0) goto 502 <gpio_regs+0x1C4 : 1e16680 >
 1e1648a:    9b 5f             	h[r7 + 50] = r3
 1e1648c:    80 00             	call r0
 1e1648e:    00 80             	r0 += 0
 1e16490:    00 10             	call 0 <bluetooth_base_uuid+0xA : 1e16492 >
 1e16492:    00 00             	nop
 1e16494:    00 00             	nop
 1e16496:    00 00             	nop
 1e16498:    00 18             	goto 0 <bluetooth_base_uuid+0x12 : 1e1649a >
 1e1649a:    4e 66             	b[r3 + 4] = r6


ufw_flash_file_match_api.match_file_prefix:
 1e1649b:    66 6c             	r6 = b[r6 + 6] (u)
 1e1649d:    61 73             	r1 = 54
 1e1649f:    68 00             	cli r8


ufw_flash_file_match_api.match_file_suffix:
 1e164a1:    2e 62             	b[r1 + 2] = r6
 1e164a3:    69 6e             	b[r7 + 6] = r1
 1e164a5:    00 00             	nop
 1e164a7:    00 00             	nop


boot_addr_tab:
 1e164a8:    00 00             	nop
 1e164aa:    00 00             	nop
 1e164ac:    00 10             	call 0 <boot_addr_tab+0x6 : 1e164ae >
 1e164ae:    00 00             	nop
 1e164b0:    00 00             	nop
 1e164b2:    01 00             	nop
 1e164b4:    01 02             	r1 = [sp]
 1e164b6:    04 08             	r4 = r0
 1e164b8:    01 03             	r1 = [sp+64]
 1e164ba:    05 07             	r5 = -16


gpio_regs:
 1e164bc:    00 50             	r0 = h[r0 + 0] (u)
 1e164be:    1e 00             	sti
 1e164c0:    00 51             	r0 = h[r0 + 32] (u)
 1e164c2:    1e 00             	sti
 1e164c4:    00 53             	r0 = h[r1 + 32] (u)
 1e164c6:    1e 00             	sti
 1e164c8:    00 59             	r0 = h[r4 + 32] (u)
 1e164ca:    1e 00             	sti
 1e164cc:    00 00             	nop
 1e164ce:    00 00             	nop
 1e164d0:    0d 0a             	sp += 24
 1e164d2:    0d 0a             	sp += 24
 1e164d4:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x29C : 1e16330 >
 1e164d6:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x29E : 1e16332 >
 1e164d8:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x2A0 : 1e16334 >
 1e164da:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x2A2 : 1e16336 >
 1e164dc:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x2A4 : 1e16338 >
 1e164de:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x2A6 : 1e1633a >
 1e164e0:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x2A8 : 1e1633c >
 1e164e2:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x2AA : 1e1633e >
 1e164e4:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x2AC : 1e16340 >
 1e164e6:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x2AE : 1e16342 >
 1e164e8:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x2B0 : 1e16344 >
 1e164ea:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x2B2 : 1e16346 >
 1e164ec:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x2B4 : 1e16348 >
 1e164ee:    2d 77             	r13 = 114
 1e164f0:    61 74             	r1 = 70
 1e164f2:    63 68             	r3 = b[r4 + 6] (u)
 1e164f4:    64 6f             	r4 = b[r7 + 22] (u)
 1e164f6:    67 2d             	if (r6 == 0) goto -306 <dev_id_list+0x332 : 1e163c6 >
 1e164f8:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x2C0 : 1e16354 >
 1e164fa:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x2C2 : 1e16356 >
 1e164fc:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x2C4 : 1e16358 >
 1e164fe:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x2C6 : 1e1635a >
 1e16500:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x2C8 : 1e1635c >
 1e16502:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x2CA : 1e1635e >
 1e16504:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x2CC : 1e16360 >
 1e16506:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x2CE : 1e16362 >
 1e16508:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x2D0 : 1e16364 >
 1e1650a:    2d 2d             	if (r6 == 0) goto -422 <dev_id_list+0x2D2 : 1e16366 >
 1e1650c:    0d 0a             	sp += 24
 1e1650e:    0d 00             	syscall
 1e16510:    50 33             	if (r1 != 0) goto -352 <dev_id_list+0x31E : 1e163b2 >
 1e16512:    33 20             	if (r0 == 0) goto 102 <gpio_regs+0xBE : 1e1657a >
 1e16514:    50 4f             	r0 = [r7 + 84]
 1e16516:    57 45             	r7 = [r2 + 84]
 1e16518:    52 20             	if (r0 == 0) goto 164 <gpio_regs+0x102 : 1e165be >
 1e1651a:    52 45             	r2 = [r2 + 84]
 1e1651c:    54 55             	r4 = h[r2 + 42] (u)
 1e1651e:    52 4e             	r2 = [r7 + 20]
 1e16520:    00 00             	nop
 1e16522:    00 00             	nop
 1e16524:    00 00             	nop
 1e16526:    00 00             	nop
 1e16528:    00 00             	nop
 1e1652a:    00 00             	nop
 1e1652c:    00 00             	nop
 1e1652e:    00 00             	nop
 1e16530:    50 31             	if (r0 != 0) goto -352 <dev_id_list+0x33E : 1e163d2 >
 1e16532:    31 20             	if (r0 == 0) goto 98 <gpio_regs+0xDA : 1e16596 >
 1e16534:    53 59             	r3 = h[r4 + 42] (u)
 1e16536:    53 20             	if (r0 == 0) goto 166 <gpio_regs+0x122 : 1e165de >
 1e16538:    52 45             	r2 = [r2 + 84]
 1e1653a:    53 45             	r3 = [r2 + 84]
 1e1653c:    54 20             	if (r0 == 0) goto 168 <gpio_regs+0x12A : 1e165e6 >
 1e1653e:    4d 41             	[r0 + 80] = r5
 1e16540:    53 4b             	r3 = [r5 + 84]
 1e16542:    00 00             	nop
 1e16544:    00 00             	nop
 1e16546:    00 00             	nop
 1e16548:    00 00             	nop
 1e1654a:    00 00             	nop
 1e1654c:    00 00             	nop
 1e1654e:    00 00             	nop
 1e16550:    50 33             	if (r1 != 0) goto -352 <dev_id_list+0x35E : 1e163f2 >
 1e16552:    33 20             	if (r0 == 0) goto 102 <gpio_regs+0xFE : 1e165ba >
 1e16554:    53 59             	r3 = h[r4 + 42] (u)
 1e16556:    53 20             	if (r0 == 0) goto 166 <gpio_regs+0x142 : 1e165fe >
 1e16558:    53 4f             	r3 = [r7 + 84]
 1e1655a:    46 54             	r6 = h[r2 + 8] (u)
 1e1655c:    20 52             	r0 = h[r1 + 4] (u)
 1e1655e:    45 53             	r5 = h[r1 + 40] (u)
 1e16560:    45 54             	r5 = h[r2 + 8] (u)
 1e16562:    20 3a             	if (r5 != 0) goto 64 <gpio_regs+0xE8 : 1e165a4 >
 1e16564:    20 50             	r0 = h[r0 + 4] (u)
 1e16566:    33 5f             	r3 = h[r7 + 38] (u)
 1e16568:    50 52             	r0 = h[r1 + 10] (u)
 1e1656a:    5f 50             	h[r0 + 10] = r7
 1e1656c:    57 52             	r7 = h[r1 + 10] (u)
 1e1656e:    5b 34             	if (r2 != 0) goto 182 <gpio_regs+0x16A : 1e16626 >
 1e16570:    5d 3d             	if (r6 != 0) goto -326 <PA_map_tbl+0x2 : 1e1642c >
 1e16572:    31 00             	pc = [sp++]
 1e16574:    00 00             	nop
 1e16576:    00 00             	nop
 1e16578:    00 00             	nop
 1e1657a:    00 00             	nop
 1e1657c:    00 00             	nop
 1e1657e:    00 00             	nop
 1e16580:    73 6f             	r3 = b[r7 + 23] (u)
 1e16582:    66 74             	r6 = 70
 1e16584:    5f 72             	r15 = 37
 1e16586:    65 73             	r5 = 54
 1e16588:    65 74             	r5 = 70
 1e1658a:    5f 65             	b[r2 + 21] = r7
 1e1658c:    78 63             	b[r1 + 23] = r0
 1e1658e:    65 70             	r5 = 6
 1e16590:    74 69             	r4 = b[r4 + 23] (u)
 1e16592:    6f 6e             	b[r7 + 6] = r7
 1e16594:    00 00             	nop
 1e16596:    00 00             	nop
 1e16598:    00 00             	nop
 1e1659a:    00 00             	nop
 1e1659c:    00 00             	nop
 1e1659e:    00 00             	nop
 1e165a0:    73 6f             	r3 = b[r7 + 23] (u)
 1e165a2:    66 74             	r6 = 70
 1e165a4:    5f 72             	r15 = 37
 1e165a6:    65 73             	r5 = 54
 1e165a8:    65 74             	r5 = 70
 1e165aa:    5f 61             	b[r0 + 21] = r7
 1e165ac:    73 73             	r3 = 55
 1e165ae:    65 72             	r5 = 38
 1e165b0:    74 00             	sti r4
 1e165b2:    00 00             	nop
 1e165b4:    00 00             	nop
 1e165b6:    00 00             	nop
 1e165b8:    00 00             	nop
 1e165ba:    00 00             	nop
 1e165bc:    00 00             	nop
 1e165be:    00 00             	nop
 1e165c0:    50 31             	if (r0 != 0) goto -352 <sys_power_ops+0x2 : 1e16462 >
 1e165c2:    31 20             	if (r0 == 0) goto 98 <gpio_regs+0x16A : 1e16626 >
 1e165c4:    50 4f             	r0 = [r7 + 84]
 1e165c6:    57 45             	r7 = [r2 + 84]
 1e165c8:    52 20             	if (r0 == 0) goto 164 <gpio_regs+0x1B2 : 1e1666e >
 1e165ca:    52 45             	r2 = [r2 + 84]
 1e165cc:    54 55             	r4 = h[r2 + 42] (u)
 1e165ce:    52 4e             	r2 = [r7 + 20]
 1e165d0:    00 00             	nop
 1e165d2:    00 00             	nop
 1e165d4:    00 00             	nop
 1e165d6:    00 00             	nop
 1e165d8:    00 00             	nop
 1e165da:    00 00             	nop
 1e165dc:    00 00             	nop
 1e165de:    00 00             	nop
 1e165e0:    50 33             	if (r1 != 0) goto -352 <group_item_table+0x2 : 1e16482 >
 1e165e2:    33 20             	if (r0 == 0) goto 102 <gpio_regs+0x18E : 1e1664a >
 1e165e4:    53 4f             	r3 = [r7 + 84]
 1e165e6:    46 54             	r6 = h[r2 + 8] (u)
 1e165e8:    20 52             	r0 = h[r1 + 4] (u)
 1e165ea:    45 53             	r5 = h[r1 + 40] (u)
 1e165ec:    45 54             	r5 = h[r2 + 8] (u)
 1e165ee:    20 50             	r0 = h[r0 + 4] (u)
 1e165f0:    31 31             	if (r0 != 0) goto -414 <PD_map_tbl+0x11 : 1e16454 >
 1e165f2:    20 3a             	if (r5 != 0) goto 64 <gpio_regs+0x178 : 1e16634 >
 1e165f4:    20 50             	r0 = h[r0 + 4] (u)
 1e165f6:    33 5f             	r3 = h[r7 + 38] (u)
 1e165f8:    49 56             	h[r3 + 8] = r1
 1e165fa:    53 5f             	r3 = h[r7 + 42] (u)
 1e165fc:    43 4c             	r3 = [r6 + 16]
 1e165fe:    52 5b             	r2 = h[r5 + 42] (u)
 1e16600:    35 5d             	r5 = h[r6 + 38] (u)
 1e16602:    3d 31             	if (r0 != 0) goto -390 <log_str+0x6 : 1e1647e >
 1e16604:    00 00             	nop
 1e16606:    00 00             	nop
 1e16608:    00 00             	nop
 1e1660a:    00 00             	nop
 1e1660c:    00 00             	nop
 1e1660e:    00 00             	nop
 1e16610:    50 31             	if (r0 != 0) goto -352 <boot_addr_tab+0xA : 1e164b2 >
 1e16612:    31 20             	if (r0 == 0) goto 98 <gpio_regs+0x1BA : 1e16676 >
 1e16614:    53 59             	r3 = h[r4 + 42] (u)
 1e16616:    53 20             	if (r0 == 0) goto 166 <gpio_regs+0x202 : 1e166be >
 1e16618:    53 4f             	r3 = [r7 + 84]
 1e1661a:    46 54             	r6 = h[r2 + 8] (u)
 1e1661c:    20 52             	r0 = h[r1 + 4] (u)
 1e1661e:    45 53             	r5 = h[r1 + 40] (u)
 1e16620:    45 54             	r5 = h[r2 + 8] (u)
 1e16622:    20 3a             	if (r5 != 0) goto 64 <gpio_regs+0x1A8 : 1e16664 >
 1e16624:    20 50             	r0 = h[r0 + 4] (u)
 1e16626:    31 31             	if (r0 != 0) goto -414 <bluetooth_base_uuid+0x2 : 1e1648a >
 1e16628:    5f 50             	h[r0 + 10] = r7
 1e1662a:    57 52             	r7 = h[r1 + 10] (u)
 1e1662c:    5f 43             	[r1 + 84] = r7
 1e1662e:    4f 4e             	[r7 + 16] = r7
 1e16630:    5b 34             	if (r2 != 0) goto 182 <gpio_regs+0x22C : 1e166e8 >
 1e16632:    5d 3d             	if (r6 != 0) goto -326 <gpio_regs+0x32 : 1e164ee >
 1e16634:    31 00             	pc = [sp++]
 1e16636:    00 00             	nop
 1e16638:    00 00             	nop
 1e1663a:    00 00             	nop
 1e1663c:    00 00             	nop
 1e1663e:    00 00             	nop
 1e16640:    4d 41             	[r0 + 80] = r5
 1e16642:    49 4e             	[r7 + 16] = r1
 1e16644:    20 53             	r0 = h[r1 + 36] (u)
 1e16646:    59 53             	h[r1 + 42] = r1
 1e16648:    20 52             	r0 = h[r1 + 4] (u)
 1e1664a:    45 53             	r5 = h[r1 + 40] (u)
 1e1664c:    45 54             	r5 = h[r2 + 8] (u)
 1e1664e:    20 4d             	r0 = [r6 + 72]
 1e16650:    41 53             	r1 = h[r1 + 40] (u)
 1e16652:    4b 00             	testset b[r11]
 1e16654:    00 00             	nop
 1e16656:    00 00             	nop
 1e16658:    00 00             	nop
 1e1665a:    00 00             	nop
 1e1665c:    00 00             	nop
 1e1665e:    00 00             	nop
 1e16660:    4d 41             	[r0 + 80] = r5
 1e16662:    49 4e             	[r7 + 16] = r1
 1e16664:    20 50             	r0 = h[r0 + 4] (u)
 1e16666:    4f 57             	h[r3 + 40] = r7
 1e16668:    45 52             	r5 = h[r1 + 8] (u)
 1e1666a:    20 52             	r0 = h[r1 + 4] (u)
 1e1666c:    45 54             	r5 = h[r2 + 8] (u)
 1e1666e:    55 52             	r5 = h[r1 + 10] (u)
 1e16670:    4e 00             	testset b[r14]
 1e16672:    00 00             	nop
 1e16674:    00 00             	nop
 1e16676:    00 00             	nop
 1e16678:    00 00             	nop
 1e1667a:    00 00             	nop
 1e1667c:    00 00             	nop
 1e1667e:    00 00             	nop
 1e16680:    4d 41             	[r0 + 80] = r5
 1e16682:    49 4e             	[r7 + 16] = r1
 1e16684:    20 53             	r0 = h[r1 + 36] (u)
 1e16686:    59 53             	h[r1 + 42] = r1
 1e16688:    20 53             	r0 = h[r1 + 36] (u)
 1e1668a:    4f 46             	[r3 + 16] = r7
 1e1668c:    54 20             	if (r0 == 0) goto 168 <gpio_regs+0x27A : 1e16736 >
 1e1668e:    52 45             	r2 = [r2 + 84]
 1e16690:    53 45             	r3 = [r2 + 84]
 1e16692:    54 20             	if (r0 == 0) goto 168 <gpio_regs+0x280 : 1e1673c >
 1e16694:    3a 20             	if (r0 == 0) goto 116 <gpio_regs+0x24E : 1e1670a >
 1e16696:    4a 4c             	[r6 + 16] = r2
 1e16698:    5f 43             	[r1 + 84] = r7
 1e1669a:    4c 4f             	[r7 + 80] = r4
 1e1669c:    43 4b             	r3 = [r5 + 80]
 1e1669e:    2d 3e             	if (r7 != 0) goto 90 <gpio_regs+0x23E : 1e166fa >
 1e166a0:    50 57             	r0 = h[r3 + 42] (u)
 1e166a2:    52 5f             	r2 = h[r7 + 42] (u)
 1e166a4:    43 4f             	r3 = [r7 + 80]
 1e166a6:    4e 5b             	h[r5 + 40] = r6
 1e166a8:    34 5d             	r4 = h[r6 + 38] (u)
 1e166aa:    3d 31             	if (r0 != 0) goto -390 <gpio_regs+0x6A : 1e16526 >
 1e166ac:    00 00             	nop
 1e166ae:    00 00             	nop
 1e166b0:    50 31             	if (r0 != 0) goto -352 <gpio_regs+0x96 : 1e16552 >
 1e166b2:    31 20             	if (r0 == 0) goto 98 <gpio_regs+0x25A : 1e16716 >
 1e166b4:    53 4f             	r3 = [r7 + 84]
 1e166b6:    46 54             	r6 = h[r2 + 8] (u)
 1e166b8:    20 52             	r0 = h[r1 + 4] (u)
 1e166ba:    45 53             	r5 = h[r1 + 40] (u)
 1e166bc:    45 54             	r5 = h[r2 + 8] (u)
 1e166be:    20 4d             	r0 = [r6 + 72]
 1e166c0:    41 49             	r1 = [r4 + 80]
 1e166c2:    4e 20             	if (r0 == 0) goto 156 <gpio_regs+0x2A4 : 1e16760 >
 1e166c4:    3a 20             	if (r0 == 0) goto 116 <gpio_regs+0x27E : 1e1673a >
 1e166c6:    50 31             	if (r0 != 0) goto -352 <gpio_regs+0xAC : 1e16568 >
 1e166c8:    31 5f             	r1 = h[r7 + 38] (u)
 1e166ca:    53 59             	r3 = h[r4 + 42] (u)
 1e166cc:    53 5f             	r3 = h[r7 + 42] (u)
 1e166ce:    43 4f             	r3 = [r7 + 80]
 1e166d0:    4e 32             	if (r1 != 0) goto 156 <gpio_regs+0x2B2 : 1e1676e >
 1e166d2:    5b 33             	if (r1 != 0) goto -330 <gpio_regs+0xCE : 1e1658a >
 1e166d4:    5d 3d             	if (r6 != 0) goto -326 <gpio_regs+0xD4 : 1e16590 >
 1e166d6:    31 00             	pc = [sp++]
 1e166d8:    00 00             	nop
 1e166da:    00 00             	nop
 1e166dc:    00 00             	nop
 1e166de:    00 00             	nop
 1e166e0:    67 61             	r7 = b[r0 + 22] (u)
 1e166e2:    70 20             	if (r0 == 0) goto 224 <storage_device_end+0x1C : 1e167c4 >
 1e166e4:    73 65             	r3 = b[r2 + 23] (u)
 1e166e6:    6e 64             	b[r2 + 6] = r6
 1e166e8:    20 63             	r0 = b[r1 + 18] (u)
 1e166ea:    6f 6e             	b[r7 + 6] = r7
 1e166ec:    6e 20             	if (r0 == 0) goto 220 <lib_update_version+0x2 : 1e167ca >
 1e166ee:    70 61             	r0 = b[r0 + 23] (u)
 1e166f0:    72 61             	r2 = b[r0 + 23] (u)
 1e166f2:    6d 20             	if (r0 == 0) goto 218 <lib_update_version+0x6 : 1e167ce >
 1e166f4:    32 32             	if (r1 != 0) goto 100 <gpio_regs+0x29E : 1e1675a >
 1e166f6:    32 32             	if (r1 != 0) goto 100 <gpio_regs+0x2A0 : 1e1675c >
 1e166f8:    00 00             	nop
 1e166fa:    00 00             	nop
 1e166fc:    00 00             	nop
 1e166fe:    00 00             	nop
 1e16700:    23 23             	if (r1 == 0) goto -442 <gpio_regs+0x8C : 1e16548 >
 1e16702:    23 72             	r3 = 34
 1e16704:    65 73             	r5 = 54
 1e16706:    65 74             	r5 = 70
 1e16708:    20 62             	r0 = b[r1 + 2] (u)
 1e1670a:    6c 65             	b[r2 + 22] = r4
 1e1670c:    20 6c             	r0 = b[r6 + 2] (u)
 1e1670e:    69 73             	r9 = 54
 1e16710:    74 00             	sti r4
 1e16712:    00 00             	nop
 1e16714:    00 00             	nop
 1e16716:    00 00             	nop
 1e16718:    00 00             	nop
 1e1671a:    00 00             	nop
 1e1671c:    00 00             	nop
 1e1671e:    00 00             	nop
 1e16720:    70 61             	r0 = b[r0 + 23] (u)
 1e16722:    69 72             	r9 = 38
 1e16724:    5f 69             	b[r4 + 21] = r7
 1e16726:    73 5f             	r3 = h[r7 + 46] (u)
 1e16728:    6e 6f             	b[r7 + 22] = r6
 1e1672a:    74 5f             	r4 = h[r7 + 46] (u)
 1e1672c:    61 6c             	r1 = b[r6 + 6] (u)
 1e1672e:    6c 6f             	b[r7 + 22] = r4
 1e16730:    77 21             	if (r0 == 0) goto -274 <gpio_regs+0x164 : 1e16620 >
 1e16732:    21 21             	if (r0 == 0) goto -446 <gpio_regs+0xBA : 1e16576 >
 1e16734:    00 00             	nop
 1e16736:    00 00             	nop
 1e16738:    00 00             	nop
 1e1673a:    00 00             	nop
 1e1673c:    00 00             	nop
 1e1673e:    00 00             	nop
 1e16740:    62 6c             	r2 = b[r6 + 6] (u)
 1e16742:    65 20             	if (r0 == 0) goto 202 <m_code_addr+0xE : 1e1680e >
 1e16744:    74 65             	r4 = b[r2 + 23] (u)
 1e16746:    73 74             	r3 = 71
 1e16748:    20 75             	r0 = 82
 1e1674a:    70 64             	r0 = b[r2 + 7] (u)
 1e1674c:    61 74             	r1 = 70
 1e1674e:    65 20             	if (r0 == 0) goto 202 <m_code_addr+0x1A : 1e1681a >
 1e16750:    65 78             	r5 = 134
 1e16752:    69 74             	r9 = 70
 1e16754:    00 00             	nop
 1e16756:    00 00             	nop
 1e16758:    00 00             	nop
 1e1675a:    00 00             	nop
 1e1675c:    00 00             	nop
 1e1675e:    00 00             	nop
 1e16760:    76 6d             	r6 = b[r6 + 23] (u)
 1e16762:    5f 75             	r15 = 85
 1e16764:    70 64             	r0 = b[r2 + 7] (u)
 1e16766:    61 74             	r1 = 70
 1e16768:    65 5f             	r5 = h[r7 + 44] (u)
 1e1676a:    70 61             	r0 = b[r0 + 23] (u)
 1e1676c:    72 61             	r2 = b[r0 + 23] (u)
 1e1676e:    6d 20             	if (r0 == 0) goto 218 <m_code_addr+0x4A : 1e1684a >
 1e16770:    77 72             	r7 = 39
 1e16772:    69 74             	r9 = 70
 1e16774:    65 20             	if (r0 == 0) goto 202 <m_code_addr+0x40 : 1e16840 >
 1e16776:    65 72             	r5 = 38
 1e16778:    72 00             	sti r2
 1e1677a:    00 00             	nop
 1e1677c:    00 00             	nop
 1e1677e:    00 00             	nop


clock_mcpwm:
 1e16780:    c4 03             	r4 = [sp+112]
 1e16782:    e0 01             	[--sp] = {psr}
 1e16784:    d6 03             	r6 = [sp+116]
 1e16786:    e0 01             	[--sp] = {psr}


clock_uart:
 1e16788:    72 36             	if (r3 != 0) goto 228 <m_code_addr+0x6E : 1e1686e >
 1e1678a:    e0 01             	[--sp] = {psr}
 1e1678c:    74 36             	if (r3 != 0) goto 232 <m_code_addr+0x76 : 1e16876 >
 1e1678e:    e0 01             	[--sp] = {psr}


clock_timer:
 1e16790:    d2 36             	if (r3 != 0) goto 420 <m_code_addr+0x136 : 1e16936 >
 1e16792:    e0 01             	[--sp] = {psr}
 1e16794:    f0 36             	if (r3 != 0) goto 480 <bt_frac_pll_int_48m+0x2A : 1e16976 >
 1e16796:    e0 01             	[--sp] = {psr}


clock_lrc:
 1e16798:    60 42             	r0 = [r1 + 24]
 1e1679a:    e0 01             	[--sp] = {psr}
 1e1679c:    a2 42             	r2 = [r1 + 40]
 1e1679e:    e0 01             	[--sp] = {psr}


clock_port:
 1e167a0:    f2 fb e0 01       	r2 = sp + 480
 1e167a4:    fe fb e0 01       	r14 = sp + 480


storage_device_end:
 1e167a8:    c5 56             	r5 = h[r3 + 24] (u)
 1e167aa:    a9 0b             	sp += -176
 1e167ac:    42 54             	r2 = h[r2 + 8] (u)
 1e167ae:    43 54             	r3 = h[r2 + 8] (u)
 1e167b0:    52 4c             	r2 = [r6 + 20]
 1e167b2:    45 52             	r5 = h[r1 + 8] (u)
 1e167b4:    2d 40             	[r0 + 8] = r5
 1e167b6:    32 30             	if (r0 != 0) goto 100 <m_code_addr+0x1C : 1e1681c >
 1e167b8:    32 32             	if (r1 != 0) goto 100 <m_code_addr+0x1E : 1e1681e >
 1e167ba:    30 33             	if (r1 != 0) goto -416 <gpio_regs+0x160 : 1e1661c >
 1e167bc:    31 34             	if (r2 != 0) goto 98 <m_code_addr+0x20 : 1e16820 >
 1e167be:    2d 24             	if (r2 == 0) goto 90 <m_code_addr+0x1A : 1e1681a >
 1e167c0:    30 33             	if (r1 != 0) goto -416 <gpio_regs+0x166 : 1e16622 >
 1e167c2:    63 61             	r3 = b[r0 + 22] (u)
 1e167c4:    31 31             	if (r0 != 0) goto -414 <gpio_regs+0x16C : 1e16628 >
 1e167c6:    38 00             	cc = 0


lib_update_version:
 1e167c8:    d7 56             	r7 = h[r3 + 26] (u)
 1e167ca:    a9 0b             	sp += -176
 1e167cc:    55 50             	r5 = h[r0 + 10] (u)
 1e167ce:    44 41             	r4 = [r0 + 80]
 1e167d0:    54 45             	r4 = [r2 + 84]
 1e167d2:    2d 40             	[r0 + 8] = r5
 1e167d4:    32 30             	if (r0 != 0) goto 100 <m_code_addr+0x3A : 1e1683a >
 1e167d6:    32 32             	if (r1 != 0) goto 100 <m_code_addr+0x3C : 1e1683c >
 1e167d8:    30 33             	if (r1 != 0) goto -416 <gpio_regs+0x17E : 1e1663a >
 1e167da:    31 34             	if (r2 != 0) goto 98 <m_code_addr+0x3E : 1e1683e >
 1e167dc:    2d 24             	if (r2 == 0) goto 90 <m_code_addr+0x38 : 1e16838 >
 1e167de:    32 31             	if (r0 != 0) goto -412 <gpio_regs+0x188 : 1e16644 >
 1e167e0:    38 39             	if (r4 != 0) goto -400 <gpio_regs+0x196 : 1e16652 >
 1e167e2:    64 64             	r4 = b[r2 + 6] (u)
 1e167e4:    62 00             	cli r2


__VERSION_END:
 1e167e6:    00 00             	nop
 1e167e8:    00 00             	nop
 1e167ea:    00 00             	nop
 1e167ec:    00 00             	nop
 1e167ee:    00 00             	nop
 1e167f0:    00 00             	nop
 1e167f2:    00 00             	nop
 1e167f4:    00 00             	nop
 1e167f6:    00 00             	nop
 1e167f8:    00 00             	nop
 1e167fa:    00 00             	nop
 1e167fc:    00 00             	nop
 1e167fe:    00 00             	nop


m_code_addr:
 1e16800:    55 55             	r5 = h[r2 + 42] (u)
 1e16802:    05 00             	bkpt
 1e16804:    00 00             	nop
 1e16806:    10 00             	lockclr
 1e16808:    ab aa             	r11 = sp + 170
 1e1680a:    1a 00             	cli
 1e1680c:    55 55             	r5 = h[r2 + 42] (u)
 1e1680e:    25 00             	rtx
 1e16810:    00 00             	nop
 1e16812:    30 00             	pc = [sp++]
 1e16814:    ab aa             	r11 = sp + 170
 1e16816:    3a 00             	cc = 1
 1e16818:    55 55             	r5 = h[r2 + 42] (u)
 1e1681a:    45 00             	testset b[r5]
 1e1681c:    00 00             	nop
 1e1681e:    50 00             	testset b[r0]
 1e16820:    ab aa             	r11 = sp + 170
 1e16822:    5a 00             	testset b[r10]
 1e16824:    55 55             	r5 = h[r2 + 42] (u)
 1e16826:    65 00             	cli r5
 1e16828:    00 00             	nop
 1e1682a:    70 00             	sti r0
 1e1682c:    ab aa             	r11 = sp + 170
 1e1682e:    7a 00             	sti r10
 1e16830:    55 55             	r5 = h[r2 + 42] (u)
 1e16832:    85 00             	call r5
 1e16834:    00 00             	nop
 1e16836:    90 00             	goto r0
 1e16838:    ab aa             	r11 = sp + 170
 1e1683a:    9a 00             	goto r10
 1e1683c:    55 55             	r5 = h[r2 + 42] (u)
 1e1683e:    a5 00             	tbb [r5]
 1e16840:    00 00             	nop
 1e16842:    b0 00             	tbh [r0]
 1e16844:    ab aa             	r11 = sp + 170
 1e16846:    ba 00             	tbh [r10]
 1e16848:    55 55             	r5 = h[r2 + 42] (u)
 1e1684a:    c5 00             	pfetch [r5]
 1e1684c:    00 00             	nop
 1e1684e:    d0 00             	iflush [r0]
 1e16850:    ab aa             	r11 = sp + 170
 1e16852:    da 00             	iflush [r10]
 1e16854:    55 55             	r5 = h[r2 + 42] (u)
 1e16856:    e5 00             	flush [r5]
 1e16858:    00 00             	nop
 1e1685a:    f0 00             	flushinv [r0]
 1e1685c:    ab aa             	r11 = sp + 170
 1e1685e:    fa 00             	flushinv [r10]
 1e16860:    55 55             	r5 = h[r2 + 42] (u)
 1e16862:    05 00             	bkpt
 1e16864:    00 00             	nop
 1e16866:    10 00             	lockclr
 1e16868:    ab aa             	r11 = sp + 170
 1e1686a:    1a 00             	cli
 1e1686c:    55 55             	r5 = h[r2 + 42] (u)
 1e1686e:    25 00             	rtx
 1e16870:    00 00             	nop
 1e16872:    30 00             	pc = [sp++]
 1e16874:    ab aa             	r11 = sp + 170
 1e16876:    3a 00             	cc = 1
 1e16878:    55 55             	r5 = h[r2 + 42] (u)
 1e1687a:    45 00             	testset b[r5]
 1e1687c:    00 00             	nop
 1e1687e:    50 00             	testset b[r0]
 1e16880:    ab aa             	r11 = sp + 170
 1e16882:    5a 00             	testset b[r10]
 1e16884:    55 55             	r5 = h[r2 + 42] (u)
 1e16886:    65 00             	cli r5
 1e16888:    00 00             	nop
 1e1688a:    70 00             	sti r0
 1e1688c:    ab aa             	r11 = sp + 170
 1e1688e:    7a 00             	sti r10
 1e16890:    55 55             	r5 = h[r2 + 42] (u)
 1e16892:    85 00             	call r5
 1e16894:    00 00             	nop
 1e16896:    90 00             	goto r0
 1e16898:    ab aa             	r11 = sp + 170
 1e1689a:    9a 00             	goto r10
 1e1689c:    55 55             	r5 = h[r2 + 42] (u)
 1e1689e:    a5 00             	tbb [r5]
 1e168a0:    00 00             	nop
 1e168a2:    b0 00             	tbh [r0]
 1e168a4:    ab aa             	r11 = sp + 170
 1e168a6:    ba 00             	tbh [r10]
 1e168a8:    55 55             	r5 = h[r2 + 42] (u)
 1e168aa:    c5 00             	pfetch [r5]
 1e168ac:    00 00             	nop
 1e168ae:    d0 00             	iflush [r0]
 1e168b0:    ab aa             	r11 = sp + 170
 1e168b2:    da 00             	iflush [r10]
 1e168b4:    55 55             	r5 = h[r2 + 42] (u)
 1e168b6:    e5 00             	flush [r5]
 1e168b8:    00 00             	nop
 1e168ba:    f0 00             	flushinv [r0]
 1e168bc:    ab aa             	r11 = sp + 170
 1e168be:    fa 00             	flushinv [r10]
 1e168c0:    55 55             	r5 = h[r2 + 42] (u)
 1e168c2:    05 00             	bkpt
 1e168c4:    00 00             	nop
 1e168c6:    10 00             	lockclr
 1e168c8:    ab aa             	r11 = sp + 170
 1e168ca:    1a 00             	cli
 1e168cc:    55 55             	r5 = h[r2 + 42] (u)
 1e168ce:    25 00             	rtx
 1e168d0:    00 00             	nop
 1e168d2:    30 00             	pc = [sp++]
 1e168d4:    ab aa             	r11 = sp + 170
 1e168d6:    3a 00             	cc = 1
 1e168d8:    55 55             	r5 = h[r2 + 42] (u)
 1e168da:    45 00             	testset b[r5]
 1e168dc:    00 00             	nop
 1e168de:    50 00             	testset b[r0]
 1e168e0:    ab aa             	r11 = sp + 170
 1e168e2:    5a 00             	testset b[r10]
 1e168e4:    55 55             	r5 = h[r2 + 42] (u)
 1e168e6:    65 00             	cli r5
 1e168e8:    00 00             	nop
 1e168ea:    70 00             	sti r0
 1e168ec:    ab aa             	r11 = sp + 170
 1e168ee:    7a 00             	sti r10
 1e168f0:    55 55             	r5 = h[r2 + 42] (u)
 1e168f2:    85 00             	call r5
 1e168f4:    00 00             	nop
 1e168f6:    90 00             	goto r0
 1e168f8:    ab aa             	r11 = sp + 170
 1e168fa:    9a 00             	goto r10
 1e168fc:    55 55             	r5 = h[r2 + 42] (u)
 1e168fe:    a5 00             	tbb [r5]
 1e16900:    00 00             	nop
 1e16902:    b0 00             	tbh [r0]
 1e16904:    ab aa             	r11 = sp + 170
 1e16906:    ba 00             	tbh [r10]
 1e16908:    55 55             	r5 = h[r2 + 42] (u)
 1e1690a:    c5 00             	pfetch [r5]
 1e1690c:    00 00             	nop
 1e1690e:    d0 00             	iflush [r0]
 1e16910:    ab aa             	r11 = sp + 170
 1e16912:    da 00             	iflush [r10]
 1e16914:    55 55             	r5 = h[r2 + 42] (u)
 1e16916:    e5 00             	flush [r5]
 1e16918:    00 00             	nop
 1e1691a:    f0 00             	flushinv [r0]
 1e1691c:    ab aa             	r11 = sp + 170
 1e1691e:    fa 00             	flushinv [r10]
 1e16920:    55 55             	r5 = h[r2 + 42] (u)
 1e16922:    05 00             	bkpt
 1e16924:    00 00             	nop
 1e16926:    10 00             	lockclr
 1e16928:    ab aa             	r11 = sp + 170
 1e1692a:    1a 00             	cli
 1e1692c:    55 55             	r5 = h[r2 + 42] (u)
 1e1692e:    25 00             	rtx
 1e16930:    00 00             	nop
 1e16932:    30 00             	pc = [sp++]
 1e16934:    ab aa             	r11 = sp + 170
 1e16936:    3a 00             	cc = 1
 1e16938:    55 55             	r5 = h[r2 + 42] (u)
 1e1693a:    45 00             	testset b[r5]
 1e1693c:    00 00             	nop
 1e1693e:    50 00             	testset b[r0]
 1e16940:    ab aa             	r11 = sp + 170
 1e16942:    5a 00             	testset b[r10]
 1e16944:    00 00             	nop
 1e16946:    00 00             	nop
 1e16948:    00 00             	nop
 1e1694a:    00 00             	nop


bt_frac_pll_int_48m:
 1e1694c:    64 64             	r4 = b[r2 + 6] (u)
 1e1694e:    64 64             	r4 = b[r2 + 6] (u)
 1e16950:    64 64             	r4 = b[r2 + 6] (u)
 1e16952:    64 64             	r4 = b[r2 + 6] (u)
 1e16954:    64 64             	r4 = b[r2 + 6] (u)
 1e16956:    64 64             	r4 = b[r2 + 6] (u)
 1e16958:    64 64             	r4 = b[r2 + 6] (u)
 1e1695a:    64 64             	r4 = b[r2 + 6] (u)
 1e1695c:    64 64             	r4 = b[r2 + 6] (u)
 1e1695e:    64 64             	r4 = b[r2 + 6] (u)
 1e16960:    64 64             	r4 = b[r2 + 6] (u)
 1e16962:    64 64             	r4 = b[r2 + 6] (u)
 1e16964:    65 65             	r5 = b[r2 + 22] (u)
 1e16966:    65 65             	r5 = b[r2 + 22] (u)
 1e16968:    65 65             	r5 = b[r2 + 22] (u)
 1e1696a:    65 65             	r5 = b[r2 + 22] (u)
 1e1696c:    65 65             	r5 = b[r2 + 22] (u)
 1e1696e:    65 65             	r5 = b[r2 + 22] (u)
 1e16970:    65 65             	r5 = b[r2 + 22] (u)
 1e16972:    65 65             	r5 = b[r2 + 22] (u)
 1e16974:    65 65             	r5 = b[r2 + 22] (u)
 1e16976:    65 65             	r5 = b[r2 + 22] (u)
 1e16978:    65 65             	r5 = b[r2 + 22] (u)
 1e1697a:    65 65             	r5 = b[r2 + 22] (u)
 1e1697c:    66 66             	r6 = b[r3 + 6] (u)
 1e1697e:    66 66             	r6 = b[r3 + 6] (u)
 1e16980:    66 66             	r6 = b[r3 + 6] (u)
 1e16982:    66 66             	r6 = b[r3 + 6] (u)
 1e16984:    66 66             	r6 = b[r3 + 6] (u)
 1e16986:    66 66             	r6 = b[r3 + 6] (u)
 1e16988:    66 66             	r6 = b[r3 + 6] (u)
 1e1698a:    66 66             	r6 = b[r3 + 6] (u)
 1e1698c:    66 66             	r6 = b[r3 + 6] (u)
 1e1698e:    66 66             	r6 = b[r3 + 6] (u)
 1e16990:    66 66             	r6 = b[r3 + 6] (u)
 1e16992:    66 66             	r6 = b[r3 + 6] (u)
 1e16994:    67 67             	r7 = b[r3 + 22] (u)
 1e16996:    67 67             	r7 = b[r3 + 22] (u)
 1e16998:    67 67             	r7 = b[r3 + 22] (u)
 1e1699a:    67 67             	r7 = b[r3 + 22] (u)
 1e1699c:    67 00             	cli r7
 1e1699e:    00 00             	nop


TXPWR_table:
 1e169a0:    d1 da             	r1 = r2 >>> 11
 1e169a2:    00 1e             	goto -1024 <gpio_regs+0xE8 : 1e165a4 >
 1e169a4:    d1 da             	r1 = r2 >>> 11
 1e169a6:    01 1e             	goto -1022 <gpio_regs+0xEE : 1e165aa >
 1e169a8:    d1 da             	r1 = r2 >>> 11
 1e169aa:    03 1e             	goto -1018 <gpio_regs+0xF6 : 1e165b2 >
 1e169ac:    d1 da             	r1 = r2 >>> 11
 1e169ae:    07 1e             	goto -1010 <gpio_regs+0x102 : 1e165be >
 1e169b0:    d1 da             	r1 = r2 >>> 11
 1e169b2:    0f 1e             	goto -994 <gpio_regs+0x116 : 1e165d2 >
 1e169b4:    d1 da             	r1 = r2 >>> 11
 1e169b6:    1f 1e             	goto -962 <gpio_regs+0x13A : 1e165f6 >
 1e169b8:    d1 da             	r1 = r2 >>> 11
 1e169ba:    3f 1e             	goto -898 <gpio_regs+0x17E : 1e1663a >
 1e169bc:    d1 da             	r1 = r2 >>> 11
 1e169be:    7f 1e             	goto -770 <gpio_regs+0x202 : 1e166be >
 1e169c0:    d1 da             	r1 = r2 >>> 11
 1e169c2:    ff 1e             	goto -514 <storage_device_end+0x1A : 1e167c2 >
 1e169c4:    d1 da             	r1 = r2 >>> 11
 1e169c6:    ff 1f             	goto -2 <TXPWR_table+0x26 : 1e169c6 >
 1e169c8:    e9 da             	r1 = r5 >>> 11
 1e169ca:    ff 1f             	goto -2 <TXPWR_table+0x2A : 1e169ca >


TXSET_table:
 1e169cc:    f2 00             	flushinv [r2]
 1e169ce:    00 00             	nop
 1e169d0:    f2 00             	flushinv [r2]
 1e169d2:    00 00             	nop
 1e169d4:    f2 00             	flushinv [r2]
 1e169d6:    00 00             	nop
 1e169d8:    f2 00             	flushinv [r2]
 1e169da:    00 00             	nop
 1e169dc:    f2 00             	flushinv [r2]
 1e169de:    00 00             	nop
 1e169e0:    f2 00             	flushinv [r2]
 1e169e2:    00 00             	nop
 1e169e4:    f2 00             	flushinv [r2]
 1e169e6:    00 00             	nop
 1e169e8:    f2 00             	flushinv [r2]
 1e169ea:    00 00             	nop
 1e169ec:    f2 00             	flushinv [r2]
 1e169ee:    00 00             	nop
 1e169f0:    f2 00             	flushinv [r2]
 1e169f2:    00 00             	nop
 1e169f4:    f2 00             	flushinv [r2]
 1e169f6:    00 00             	nop


anl_gain_set:
 1e169f8:    47 0d             	r7 <<= r5
 1e169fa:    f1 20             	if (r0 == 0) goto 482 <gain_adj_step+0x26 : 1e16bde >
 1e169fc:    47 0d             	r7 <<= r5
 1e169fe:    f1 20             	if (r0 == 0) goto 482 <gain_adj_step+0x2A : 1e16be2 >
 1e16a00:    47 0d             	r7 <<= r5
 1e16a02:    f1 20             	if (r0 == 0) goto 482 <gain_adj_step+0x2E : 1e16be6 >
 1e16a04:    47 0d             	r7 <<= r5
 1e16a06:    f1 20             	if (r0 == 0) goto 482 <gain_adj_step+0x32 : 1e16bea >
 1e16a08:    47 0d             	r7 <<= r5
 1e16a0a:    f1 20             	if (r0 == 0) goto 482 <gain_adj_step+0x36 : 1e16bee >
 1e16a0c:    47 0d             	r7 <<= r5
 1e16a0e:    f1 20             	if (r0 == 0) goto 482 <gain_adj_step+0x3A : 1e16bf2 >
 1e16a10:    47 0d             	r7 <<= r5
 1e16a12:    f1 20             	if (r0 == 0) goto 482 <gain_adj_step+0x3E : 1e16bf6 >
 1e16a14:    47 0d             	r7 <<= r5
 1e16a16:    f1 20             	if (r0 == 0) goto 482 <bt_pll_para+0x2 : 1e16bfa >
 1e16a18:    47 0d             	r7 <<= r5
 1e16a1a:    f1 20             	if (r0 == 0) goto 482 <bt_pll_para+0x6 : 1e16bfe >
 1e16a1c:    47 0d             	r7 <<= r5
 1e16a1e:    f1 20             	if (r0 == 0) goto 482 <bt_pll_para+0xA : 1e16c02 >
 1e16a20:    47 0d             	r7 <<= r5
 1e16a22:    f1 20             	if (r0 == 0) goto 482 <bt_pll_para+0xE : 1e16c06 >
 1e16a24:    47 0d             	r7 <<= r5
 1e16a26:    f1 20             	if (r0 == 0) goto 482 <bt_pll_para+0x12 : 1e16c0a >
 1e16a28:    47 0d             	r7 <<= r5
 1e16a2a:    f1 20             	if (r0 == 0) goto 482 <bt_pll_para+0x16 : 1e16c0e >
 1e16a2c:    47 0d             	r7 <<= r5
 1e16a2e:    f1 20             	if (r0 == 0) goto 482 <bt_pll_para+0x1A : 1e16c12 >
 1e16a30:    47 0d             	r7 <<= r5
 1e16a32:    f1 20             	if (r0 == 0) goto 482 <bredr_set_fix_pwr+0x2 : 1e16c16 >
 1e16a34:    47 0d             	r7 <<= r5
 1e16a36:    f1 20             	if (r0 == 0) goto 482 <bredr_set_fix_pwr+0x6 : 1e16c1a >
 1e16a38:    47 0d             	r7 <<= r5
 1e16a3a:    f1 20             	if (r0 == 0) goto 482 <bredr_set_fix_pwr+0xA : 1e16c1e >
 1e16a3c:    47 0d             	r7 <<= r5
 1e16a3e:    f1 20             	if (r0 == 0) goto 482 <bt_max_pwr_set : 1e16c22 >
 1e16a40:    47 0d             	r7 <<= r5
 1e16a42:    f1 20             	if (r0 == 0) goto 482 <bt_max_pwr_set+0x4 : 1e16c26 >
 1e16a44:    47 0d             	r7 <<= r5
 1e16a46:    f1 20             	if (r0 == 0) goto 482 <bt_max_pwr_set+0x8 : 1e16c2a >
 1e16a48:    47 0d             	r7 <<= r5
 1e16a4a:    f1 20             	if (r0 == 0) goto 482 <bt_max_pwr_set+0xC : 1e16c2e >
 1e16a4c:    47 0d             	r7 <<= r5
 1e16a4e:    f1 22             	if (r1 == 0) goto 482 <bt_max_pwr_set+0x10 : 1e16c32 >
 1e16a50:    47 2d             	if (r6 == 0) goto -370 <m_code_addr+0xE0 : 1e168e0 >
 1e16a52:    f1 22             	if (r1 == 0) goto 482 <btagc_init : 1e16c36 >
 1e16a54:    47 4d             	r7 = [r6 + 80]
 1e16a56:    f1 22             	if (r1 == 0) goto 482 <btagc_init+0x4 : 1e16c3a >
 1e16a58:    46 0d             	r6 <<= r5
 1e16a5a:    f1 22             	if (r1 == 0) goto 482 <btagc_init+0x8 : 1e16c3e >
 1e16a5c:    46 2d             	if (r6 == 0) goto -372 <m_code_addr+0xEA : 1e168ea >
 1e16a5e:    f1 22             	if (r1 == 0) goto 482 <btagc_init+0xC : 1e16c42 >
 1e16a60:    46 4d             	r6 = [r6 + 80]
 1e16a62:    f1 22             	if (r1 == 0) goto 482 <btagc_init+0x10 : 1e16c46 >
 1e16a64:    46 6d             	r6 = b[r6 + 20] (u)
 1e16a66:    f1 22             	if (r1 == 0) goto 482 <btagc_init+0x14 : 1e16c4a >
 1e16a68:    46 8d             	r6 += -44
 1e16a6a:    f1 22             	if (r1 == 0) goto 482 <btagc_init+0x18 : 1e16c4e >
 1e16a6c:    46 ad             	r6 = sp + 212
 1e16a6e:    f1 22             	if (r1 == 0) goto 482 <btagc_init+0x1C : 1e16c52 >
 1e16a70:    46 cd             	r6 = r0 <<< 21
 1e16a72:    f1 22             	if (r1 == 0) goto 482 <btagc_init+0x20 : 1e16c56 >
 1e16a74:    46 ed f1 22       	if (r6 >= 212) goto 1506 <bt_analog_part_init+0xE : 1e1705a >
 1e16a78:    44 0d             	r4 <<= r5
 1e16a7a:    f1 28             	if (r4 == 0) goto 482 <btagc_init+0x28 : 1e16c5e >
 1e16a7c:    44 2d             	if (r6 == 0) goto -376 <m_code_addr+0x106 : 1e16906 >
 1e16a7e:    f1 28             	if (r4 == 0) goto 482 <btagc_init+0x2C : 1e16c62 >
 1e16a80:    44 4d             	r4 = [r6 + 80]
 1e16a82:    f1 28             	if (r4 == 0) goto 482 <btagc_init+0x30 : 1e16c66 >
 1e16a84:    44 6d             	r4 = b[r6 + 20] (u)
 1e16a86:    f1 28             	if (r4 == 0) goto 482 <btagc_init+0x34 : 1e16c6a >
 1e16a88:    44 8d             	r4 += -44
 1e16a8a:    f1 28             	if (r4 == 0) goto 482 <btagc_init+0x38 : 1e16c6e >
 1e16a8c:    44 ad             	r4 = sp + 212
 1e16a8e:    f1 28             	if (r4 == 0) goto 482 <btagc_init+0x3C : 1e16c72 >
 1e16a90:    44 cd             	r4 = r0 <<< 21
 1e16a92:    f1 28             	if (r4 == 0) goto 482 <btagc_init+0x40 : 1e16c76 >
 1e16a94:    44 ed f1 28       	if (r4 >= 212) goto -3614 <hogp_profile_data+0x3F : 1e15c7a >
 1e16a98:    c1 0f             	r1 = r0 * r7
 1e16a9a:    f1 2e             	if (r7 == 0) goto 482 <btagc_init+0x48 : 1e16c7e >
 1e16a9c:    c1 2f             	if (r7 == 0) goto -126 <anl_gain_set+0x28 : 1e16a20 >
 1e16a9e:    f1 2e             	if (r7 == 0) goto 482 <btagc_init+0x4C : 1e16c82 >
 1e16aa0:    c1 4f             	r1 = [r7 + 112]
 1e16aa2:    f1 2e             	if (r7 == 0) goto 482 <btagc_init+0x50 : 1e16c86 >
 1e16aa4:    c1 6f             	r1 = b[r7 + 28] (u)
 1e16aa6:    f1 2e             	if (r7 == 0) goto 482 <btagc_init+0x54 : 1e16c8a >
 1e16aa8:    c1 8f             	r1 += -4
 1e16aaa:    f1 2e             	if (r7 == 0) goto 482 <btagc_init+0x58 : 1e16c8e >
 1e16aac:    c1 af             	r1 = sp + 252
 1e16aae:    f1 2e             	if (r7 == 0) goto 482 <btagc_init+0x5C : 1e16c92 >
 1e16ab0:    c1 cf             	r1 = r0 <<< 31
 1e16ab2:    f1 2e             	if (r7 == 0) goto 482 <btagc_init+0x60 : 1e16c96 >
 1e16ab4:    c1 ef f1 2e       	if (r1 >= 252) goto -542 <m_code_addr+0x9A : 1e1689a >
 1e16ab8:    c8 0d             	r8 <<= r7
 1e16aba:    f1 2c             	if (r6 == 0) goto 482 <btagc_init+0x68 : 1e16c9e >
 1e16abc:    c8 2d             	if (r6 == 0) goto -112 <anl_gain_set+0x56 : 1e16a4e >
 1e16abe:    f1 2c             	if (r6 == 0) goto 482 <btagc_init+0x6C : 1e16ca2 >
 1e16ac0:    c8 4d             	[r6 + 112] = r0
 1e16ac2:    f1 2c             	if (r6 == 0) goto 482 <btagc_init+0x70 : 1e16ca6 >
 1e16ac4:    c8 6d             	b[r6 + 28] = r0
 1e16ac6:    f1 2c             	if (r6 == 0) goto 482 <btagc_init+0x74 : 1e16caa >
 1e16ac8:    c8 8d             	r8 += -36
 1e16aca:    f1 2c             	if (r6 == 0) goto 482 <btagc_init+0x78 : 1e16cae >
 1e16acc:    c8 ad             	r8 = sp + 220
 1e16ace:    f1 2c             	if (r6 == 0) goto 482 <btagc_init+0x7C : 1e16cb2 >
 1e16ad0:    c8 cd             	r0 = r1 <<< 23
 1e16ad2:    f1 2c             	if (r6 == 0) goto 482 <btagc_init+0x80 : 1e16cb6 >
 1e16ad4:    c8 ed f1 2c       	if (r8 >= 220) goto -1566 <boot_addr_tab+0x12 : 1e164ba >


anl_gain_set_h:
 1e16ad8:    0d 00             	syscall
 1e16ada:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x20 : 1e16af8 >
 1e16ade:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x24 : 1e16afc >
 1e16ae2:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x28 : 1e16b00 >
 1e16ae6:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x2C : 1e16b04 >
 1e16aea:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x30 : 1e16b08 >
 1e16aee:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x34 : 1e16b0c >
 1e16af2:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x38 : 1e16b10 >
 1e16af6:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x3C : 1e16b14 >
 1e16afa:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x40 : 1e16b18 >
 1e16afe:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x44 : 1e16b1c >
 1e16b02:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x48 : 1e16b20 >
 1e16b06:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x4C : 1e16b24 >
 1e16b0a:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x50 : 1e16b28 >
 1e16b0e:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x54 : 1e16b2c >
 1e16b12:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x58 : 1e16b30 >
 1e16b16:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x5C : 1e16b34 >
 1e16b1a:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x60 : 1e16b38 >
 1e16b1e:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x64 : 1e16b3c >
 1e16b22:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x68 : 1e16b40 >
 1e16b26:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x6C : 1e16b44 >
 1e16b2a:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x70 : 1e16b48 >
 1e16b2e:    00 f2 0d 00       	if (r0 == r0) goto 26 <anl_gain_set_h+0x74 : 1e16b4c >
 1e16b32:    00 f4 0d 00       	[r0 + 0] |= 2256
 1e16b36:    00 f6 0d 00       	r0 = [r0 + 13]
 1e16b3a:    00 f8 0d 00       	r0 = h[r0+r0] (u)
 1e16b3e:    00 fa 0d 00       	r0 = b[r0+r0] (u)
 1e16b42:    00 fc 0d 00       	r0 = r0 + 13
 1e16b46:    00 fe 0d 00       	r0 = r0 * 2256
 1e16b4a:    00 00             	nop
 1e16b4c:    0d 00             	syscall
 1e16b4e:    00 02             	r0 = [sp]
 1e16b50:    0d 00             	syscall
 1e16b52:    00 04             	r0 = r0.b0 (u)
 1e16b54:    0d 00             	syscall
 1e16b56:    00 06             	r0 = -32
 1e16b58:    0d 00             	syscall
 1e16b5a:    00 08             	r0 = r0
 1e16b5c:    0d 00             	syscall
 1e16b5e:    00 0a             	sp += 0
 1e16b60:    0d 00             	syscall
 1e16b62:    00 0c             	r0 <<= r0
 1e16b64:    0d 00             	syscall
 1e16b66:    00 0e             	r0 = r0 * r0
 1e16b68:    0d 00             	syscall
 1e16b6a:    00 10             	call 0 <anl_gain_set_h+0x94 : 1e16b6c >
 1e16b6c:    0d 00             	syscall
 1e16b6e:    00 12             	call 1024 <bt_exit_deepsleep+0x2C : 1e16f70 >
 1e16b70:    0d 00             	syscall
 1e16b72:    00 14             	call -2048 <dev_id_list+0x2E0 : 1e16374 >
 1e16b74:    0d 00             	syscall
 1e16b76:    00 16             	call -1024 <gpio_regs+0x2BC : 1e16778 >
 1e16b78:    0d 00             	syscall
 1e16b7a:    00 18             	goto 0 <anl_gain_set_h+0xA4 : 1e16b7c >
 1e16b7c:    0d 00             	syscall
 1e16b7e:    00 1a             	goto 1024 <bt_exit_deepsleep+0x3C : 1e16f80 >
 1e16b80:    0d 00             	syscall
 1e16b82:    00 1c             	goto -2048 <dev_id_list+0x2F0 : 1e16384 >
 1e16b84:    0d 00             	syscall
 1e16b86:    00 1e             	goto -1024 <clock_uart : 1e16788 >
 1e16b88:    0d 00             	syscall
 1e16b8a:    00 20             	if (r0 == 0) goto 0 <anl_gain_set_h+0xB4 : 1e16b8c >
 1e16b8c:    0d 00             	syscall
 1e16b8e:    00 22             	if (r1 == 0) goto 0 <anl_gain_set_h+0xB8 : 1e16b90 >
 1e16b90:    0d 00             	syscall
 1e16b92:    00 24             	if (r2 == 0) goto 0 <anl_gain_set_h+0xBC : 1e16b94 >
 1e16b94:    0d 00             	syscall
 1e16b96:    00 26             	if (r3 == 0) goto 0 <anl_gain_set_h+0xC0 : 1e16b98 >
 1e16b98:    0d 00             	syscall
 1e16b9a:    00 28             	if (r4 == 0) goto 0 <anl_gain_set_h+0xC4 : 1e16b9c >
 1e16b9c:    0d 00             	syscall
 1e16b9e:    00 2a             	if (r5 == 0) goto 0 <anl_gain_set_h+0xC8 : 1e16ba0 >
 1e16ba0:    0d 00             	syscall
 1e16ba2:    00 2c             	if (r6 == 0) goto 0 <anl_gain_set_h+0xCC : 1e16ba4 >
 1e16ba4:    0d 00             	syscall
 1e16ba6:    00 2e             	if (r7 == 0) goto 0 <anl_gain_set_h+0xD0 : 1e16ba8 >
 1e16ba8:    0d 00             	syscall
 1e16baa:    00 30             	if (r0 != 0) goto 0 <anl_gain_set_h+0xD4 : 1e16bac >
 1e16bac:    0d 00             	syscall
 1e16bae:    00 32             	if (r1 != 0) goto 0 <anl_gain_set_h+0xD8 : 1e16bb0 >
 1e16bb0:    0d 00             	syscall
 1e16bb2:    00 34             	if (r2 != 0) goto 0 <anl_gain_set_h+0xDC : 1e16bb4 >
 1e16bb4:    0d 00             	syscall
 1e16bb6:    00 36             	if (r3 != 0) goto 0 <gain_adj_step : 1e16bb8 >


gain_adj_step:
 1e16bb8:    ec ed ed ee       	if (r12 ?? -34) goto -550 <bt_frac_pll_int_48m+0x4A : 1e16996 >
 1e16bbc:    ee ef ef f0       	if (r14 ?? -2) goto 478 <btagc_init+0x168 : 1e16d9e >
 1e16bc0:    f0 f1 f1 f2       	if ((r0 & r15) != 0) goto -6686 <update_target_end+0x231E : 1e151a6 >
 1e16bc4:    f2 f3 f3 f4       	goto -1709594 <uECC_vli_cmp_unsafe+0x1B6E5B2 : 1c755ae >
 1e16bc8:    f4 f5              <unkown instruction>
 1e16bca:    f5 f6 f6 f7       	[r15 ++= r7] = r5
 1e16bce:    f7 f8 f8 f9       	h[r15 ++= r9] = r7.h
 1e16bd2:    f9 fa              <unkown instruction>
 1e16bd4:    fa fb fb fc       	r10 = sp + 64763
 1e16bd8:    fc fd fd 00       	r0 = r0 <> r15
 1e16bdc:    00 00             	nop
 1e16bde:    00 00             	nop
 1e16be0:    00 00             	nop
 1e16be2:    00 00             	nop
 1e16be4:    00 00             	nop
 1e16be6:    03 03             	r3 = [sp+64]
 1e16be8:    04 04             	r4 = r0.b0 (u)
 1e16bea:    05 05             	r5 = r4.b0 (u)
 1e16bec:    06 06             	r6 = -32
 1e16bee:    07 07             	r7 = -16
 1e16bf0:    08 08             	r8 = r0
 1e16bf2:    09 09             	r9 += r0
 1e16bf4:    0a 0a             	sp += 20
 1e16bf6:    0b 0b             	sp += -492


bt_pll_para:
 1e16bf8:    c1 ff e8 09 00 00 	r1 = 2536 <system_data_end : 9e8 >			  ## RF.c:89:0
 1e16bfe:    02 70             	r2 = 0			  ## RF.c:96:17
 1e16c00:    fa 62             	b[r1 + 15] = r2			  ## RF.c:96:17
 1e16c02:    c2 ff 40 42 0f 00 	r2 = 1000000 <text_size+0xD3390 : f4240 >			  ## RF.c:99:24
 1e16c08:    c0 fe 20 00       	r0 = r0 / r2 (u)			  ## RF.c:99:24
 1e16c0c:    68 62             	b[r1 + 6] = r0			  ## RF.c:99:18
 1e16c0e:    a0 70             	r0 = 10			  ## RF.c:100:17
 1e16c10:    78 62             	b[r1 + 7] = r0			  ## RF.c:100:17
 1e16c12:    20 00             	rts			  ## RF.c:102:1


bredr_set_fix_pwr:
 1e16c14:    c0 ff e8 09 00 00 	r0 = 2536 <system_data_end : 9e8 >			  ## RF.c:64:0
 1e16c1a:    71 70             	r1 = 7			  ## RF.c:65:22
 1e16c1c:    29 60             	b[r0 + 2] = r1			  ## RF.c:65:22
 1e16c1e:    c0 f3 ea 3f       	goto 32724 <bredr_link_reset_power : 1e1ebf6 >			  ## RF.c:66:5


bt_max_pwr_set:
 1e16c22:    20 fd 0f 09       	r0 = r0 & 15			  ## RF.c:55:0
 1e16c26:    01 fb 50 68       	r1 = 26704 <report_overlay_end+0x1508 : 6850 >			  ## RF.c:59:20
 1e16c2a:    50 b2             	r0 |= r1			  ## RF.c:59:20
 1e16c2c:    c1 ff e8 09 00 00 	r1 = 2536 <system_data_end : 9e8 >			  ## RF.c:59:20
 1e16c32:    08 52             	h[r1 + 0] = r0			  ## RF.c:59:20
 1e16c34:    20 00             	rts			  ## RF.c:60:1


btagc_init:
 1e16c36:    79 01             	[--sp] = {rets, r9-r4}			  ## btagc.c:321:0
 1e16c38:    c8 ff 80 fd 1c 00 	r8 = 1899904 <uECC_vli_cmp_unsafe+0xC8D84 : 1cfd80 >			  ## btagc.c:321:0
 1e16c3e:    00 f4 10 8a       	[r8 + 0] |= 4096			  ## btagc.c:233:5
 1e16c42:    00 f4 20 8a       	[r8 + 0] |= 8192			  ## btagc.c:234:5
 1e16c46:    00 f4 80 8a       	[r8 + 0] |= 32768			  ## btagc.c:235:5
 1e16c4a:    c2 ff f8 69 e1 01 	r2 = 31549944 <anl_gain_set : 1e169f8 >			  ## btagc.c:235:5
 1e16c50:    03 70             	r3 = 0
 1e16c52:    c4 ff d8 6a e1 01 	r4 = 31550168 <anl_gain_set_h : 1e16ad8 >
 1e16c58:    c5 ff f8 69 e1 01 	r5 = 31549944 <anl_gain_set : 1e169f8 >
 1e16c5e:    13 f6 18 80       	[r8 + 24] = r3			  ## btagc.c:239:20
 1e16c62:    06 f6 00 80       	r6 = [r8 + 0]			  ## btagc.c:239:20
 1e16c66:    76 b7             	r6 &= 4294950911			  ## btagc.c:239:20
 1e16c68:    16 f6 00 80       	[r8 + 0] = r6			  ## btagc.c:239:20
 1e16c6c:    73 e3 07 c0       	ifs (r3 > 55) goto 14 <btagc_init+0x48 : 1e16c7e >			  ## btagc.c:241:13
 1e16c70:    06 4a             	r6 = [r5 + 0]			  ## btagc.c:252:26
 1e16c72:    16 f6 1c 80       	[r8 + 28] = r6			  ## btagc.c:252:24
 1e16c76:    00 f4 40 8a       	[r8 + 0] |= 16384			  ## btagc.c:254:13
 1e16c7a:    06 48             	r6 = [r4 + 0]			  ## btagc.c:255:26
 1e16c7c:    1a 18             	goto 52 <btagc_init+0x7C : 1e16cb2 >			  ## btagc.c:255:26
 1e16c7e:    09 f9 01 20       	r9 = b[r2 + 1] (u)			  ## btagc.c:262:28
 1e16c82:    07 64             	r7 = b[r2 + 0] (u)			  ## btagc.c:261:28
 1e16c84:    21 64             	r1 = b[r2 + 2] (u)			  ## btagc.c:263:28
 1e16c86:    36 64             	r6 = b[r2 + 3] (u)			  ## btagc.c:264:28
 1e16c88:    c8 fd 40 79       	r7 <= insert(r9, p:8, l:8)			  ## btagc.c:261:67
 1e16c8c:    c8 fd 80 71       	r7 <= insert(r1, p:16, l:8)			  ## btagc.c:262:67
 1e16c90:    c8 fd c0 76       	r7 <= insert(r6, p:24, l:8)			  ## btagc.c:263:68
 1e16c94:    17 f6 1c 80       	[r8 + 28] = r7			  ## btagc.c:261:24
 1e16c98:    00 f4 40 8a       	[r8 + 0] |= 16384			  ## btagc.c:266:13
 1e16c9c:    09 f9 05 20       	r9 = b[r2 + 5] (u)			  ## btagc.c:268:28
 1e16ca0:    46 64             	r6 = b[r2 + 4] (u)			  ## btagc.c:267:28
 1e16ca2:    67 64             	r7 = b[r2 + 6] (u)			  ## btagc.c:269:28
 1e16ca4:    71 64             	r1 = b[r2 + 7] (u)			  ## btagc.c:270:28
 1e16ca6:    c8 fd 40 69       	r6 <= insert(r9, p:8, l:8)			  ## btagc.c:267:67
 1e16caa:    c8 fd 80 67       	r6 <= insert(r7, p:16, l:8)			  ## btagc.c:268:67
 1e16cae:    c8 fd c0 61       	r6 <= insert(r1, p:24, l:8)			  ## btagc.c:269:68
 1e16cb2:    16 f6 1c 80       	[r8 + 28] = r6
 1e16cb6:    82 80             	r2 += 8			  ## btagc.c:238:19
 1e16cb8:    45 80             	r5 += 4			  ## btagc.c:238:19
 1e16cba:    13 80             	r3 += 1			  ## btagc.c:238:26
 1e16cbc:    44 80             	r4 += 4			  ## btagc.c:238:19
 1e16cbe:    03 e4 ce 1f       	if (r3 != 64) goto -100 <btagc_init+0x28 : 1e16c5e >			  ## btagc.c:238:19
 1e16cc2:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:274:5
 1e16cc6:    f1 b6             	r1 &= 4294959103			  ## btagc.c:274:5
 1e16cc8:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:274:5
 1e16ccc:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:275:5
 1e16cd0:    71 b7             	r1 &= 4294950911			  ## btagc.c:275:5
 1e16cd2:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:275:5
 1e16cd6:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:276:5
 1e16cda:    71 b6             	r1 &= 4294963199			  ## btagc.c:276:5
 1e16cdc:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:276:5
 1e16ce0:    00 f4 80 8a       	[r8 + 0] |= 32768			  ## btagc.c:277:5
 1e16ce4:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:334:5
 1e16ce8:    31 fd 0e 1b       	r1 = r1 & 4294049791			  ## btagc.c:334:5
 1e16cec:    01 fd 0a 1b       	r1 = r1 | 655360			  ## btagc.c:334:5
 1e16cf0:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:334:5
 1e16cf4:    00 f4 01 89       	[r8 + 0] |= 1			  ## btagc.c:336:5
 1e16cf8:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:337:5
 1e16cfc:    31 fd 1e 19       	r1 = r1 & 4294967265			  ## btagc.c:337:5
 1e16d00:    01 fd 06 19       	r1 = r1 | 6			  ## btagc.c:337:5
 1e16d04:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:337:5
 1e16d08:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:338:5
 1e16d0c:    02 fb 3f fc       	r2 = -961 <bank_code_load_addr+0x1DC647 : 1fffc3f >			  ## btagc.c:338:5
 1e16d10:    51 b5             	r1 &= r2			  ## btagc.c:338:5
 1e16d12:    11 b3             	r1 |= 64			  ## btagc.c:338:5
 1e16d14:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:338:5
 1e16d18:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:339:5
 1e16d1c:    20 fd 01 09       	r0 = r0 & 1			  ## btagc.c:339:5
 1e16d20:    71 b5             	r1 &= 4294966271			  ## btagc.c:339:5
 1e16d22:    c1 fd 50 10       	r1 <= insert(r0, p:10, l:1)			  ## btagc.c:339:5
 1e16d26:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:339:5
 1e16d2a:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:340:5
 1e16d2e:    f1 b5             	r1 &= 4294965247			  ## btagc.c:340:5
 1e16d30:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:340:5
 1e16d34:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:341:5
 1e16d38:    71 b6             	r1 &= 4294963199			  ## btagc.c:341:5
 1e16d3a:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:341:5
 1e16d3e:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:342:5
 1e16d42:    f1 b6             	r1 &= 4294959103			  ## btagc.c:342:5
 1e16d44:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:342:5
 1e16d48:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:343:5
 1e16d4c:    71 b7             	r1 &= 4294950911			  ## btagc.c:343:5
 1e16d4e:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:343:5
 1e16d52:    00 f4 80 8a       	[r8 + 0] |= 32768			  ## btagc.c:344:5
 1e16d56:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:345:5
 1e16d5a:    71 b8             	r1 &= 4294901759			  ## btagc.c:345:5
 1e16d5c:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:345:5
 1e16d60:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:346:5
 1e16d64:    71 ba             	r1 &= 4293918719			  ## btagc.c:346:5
 1e16d66:    c1 fd a0 10       	r1 <= insert(r0, p:20, l:1)			  ## btagc.c:346:5
 1e16d6a:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:346:5
 1e16d6e:    00 f6 00 80       	r0 = [r8 + 0]			  ## btagc.c:347:5
 1e16d72:    30 fd fc 06       	r0 = r0 & 4162846719			  ## btagc.c:347:5
 1e16d76:    00 fd 70 06       	r0 = r0 | 62914560			  ## btagc.c:347:5
 1e16d7a:    10 f6 00 80       	[r8 + 0] = r0			  ## btagc.c:347:5
 1e16d7e:    00 f6 00 80       	r0 = [r8 + 0]			  ## btagc.c:348:5
 1e16d82:    f0 bd             	r0 &= 4160749567			  ## btagc.c:348:5
 1e16d84:    10 f6 00 80       	[r8 + 0] = r0			  ## btagc.c:348:5
 1e16d88:    00 f6 00 80       	r0 = [r8 + 0]			  ## btagc.c:349:5
 1e16d8c:    70 be             	r0 &= 4026531839			  ## btagc.c:349:5
 1e16d8e:    10 f6 00 80       	[r8 + 0] = r0			  ## btagc.c:349:5
 1e16d92:    00 f6 04 80       	r0 = [r8 + 4]			  ## btagc.c:351:5
 1e16d96:    30 fd 3f 09       	r0 = r0 & 4294967232			  ## btagc.c:351:5
 1e16d9a:    00 fd 37 09       	r0 = r0 | 55			  ## btagc.c:351:5
 1e16d9e:    10 f6 04 80       	[r8 + 4] = r0			  ## btagc.c:351:5
 1e16da2:    00 f6 04 80       	r0 = [r8 + 4]			  ## btagc.c:352:5
 1e16da6:    30 fd 3f 0a       	r0 = r0 & 4294951167			  ## btagc.c:352:5
 1e16daa:    00 fd 27 0a       	r0 = r0 | 9984			  ## btagc.c:352:5
 1e16dae:    10 f6 04 80       	[r8 + 4] = r0			  ## btagc.c:352:5
 1e16db2:    00 f6 04 80       	r0 = [r8 + 4]			  ## btagc.c:353:5
 1e16db6:    30 fd 60 02       	r0 = r0 & 4294852607			  ## btagc.c:353:5
 1e16dba:    00 fd 20 02       	r0 = r0 | 81920			  ## btagc.c:353:5
 1e16dbe:    10 f6 04 80       	[r8 + 4] = r0			  ## btagc.c:353:5
 1e16dc2:    00 f6 04 80       	r0 = [r8 + 4]			  ## btagc.c:354:5
 1e16dc6:    30 fd 0e 0b       	r0 = r0 & 4294049791			  ## btagc.c:354:5
 1e16dca:    00 fd 0a 0b       	r0 = r0 | 655360			  ## btagc.c:354:5
 1e16dce:    10 f6 04 80       	[r8 + 4] = r0			  ## btagc.c:354:5
 1e16dd2:    00 f6 04 80       	r0 = [r8 + 4]			  ## btagc.c:355:5
 1e16dd6:    70 ba             	r0 &= 4293918719			  ## btagc.c:355:5
 1e16dd8:    10 f6 04 80       	[r8 + 4] = r0			  ## btagc.c:355:5
 1e16ddc:    00 f6 04 80       	r0 = [r8 + 4]			  ## btagc.c:356:5
 1e16de0:    30 fd 70 06       	r0 = r0 & 4232052735			  ## btagc.c:356:5
 1e16de4:    00 fd c0 0b       	r0 = r0 | 12582912			  ## btagc.c:356:5
 1e16de8:    10 f6 04 80       	[r8 + 4] = r0			  ## btagc.c:356:5
 1e16dec:    00 f6 04 80       	r0 = [r8 + 4]			  ## btagc.c:357:5
 1e16df0:    30 fd 3c 0c       	r0 = r0 & 3288334335			  ## btagc.c:357:5
 1e16df4:    10 bd             	r0 |= 67108864			  ## btagc.c:357:5
 1e16df6:    10 f6 04 80       	[r8 + 4] = r0			  ## btagc.c:357:5
 1e16dfa:    01 f4 40 8c       	[r8 + 4] |= 1073741824			  ## btagc.c:358:5
 1e16dfe:    00 f6 08 80       	r0 = [r8 + 8]			  ## btagc.c:360:5
 1e16e02:    30 fd 3f 09       	r0 = r0 & 4294967232			  ## btagc.c:360:5
 1e16e06:    00 fd 29 09       	r0 = r0 | 41			  ## btagc.c:360:5
 1e16e0a:    10 f6 08 80       	[r8 + 8] = r0			  ## btagc.c:360:5
 1e16e0e:    00 f6 08 80       	r0 = [r8 + 8]			  ## btagc.c:361:5
 1e16e12:    30 fd 7c 00       	r0 = r0 & 4294963263			  ## btagc.c:361:5
 1e16e16:    00 fd 24 00       	r0 = r0 | 2624			  ## btagc.c:361:5
 1e16e1a:    10 f6 08 80       	[r8 + 8] = r0			  ## btagc.c:361:5
 1e16e1e:    00 f6 08 80       	r0 = [r8 + 8]			  ## btagc.c:362:5
 1e16e22:    30 fd fc 02       	r0 = r0 & 4294709247			  ## btagc.c:362:5
 1e16e26:    00 fd a4 02       	r0 = r0 | 167936			  ## btagc.c:362:5
 1e16e2a:    10 f6 08 80       	[r8 + 8] = r0			  ## btagc.c:362:5
 1e16e2e:    00 f6 08 80       	r0 = [r8 + 8]			  ## btagc.c:363:5
 1e16e32:    30 fd fc 0b       	r0 = r0 & 4278452223			  ## btagc.c:363:5
 1e16e36:    00 fd ac 0b       	r0 = r0 | 11272192			  ## btagc.c:363:5
 1e16e3a:    10 f6 08 80       	[r8 + 8] = r0			  ## btagc.c:363:5
 1e16e3e:    00 f6 08 80       	r0 = [r8 + 8]			  ## btagc.c:364:5
 1e16e42:    30 fd 3f 0c       	r0 = r0 & 3238002687			  ## btagc.c:364:5
 1e16e46:    00 fd 2d 0c       	r0 = r0 | 754974720			  ## btagc.c:364:5
 1e16e4a:    10 f6 08 80       	[r8 + 8] = r0			  ## btagc.c:364:5
 1e16e4e:    00 f6 08 80       	r0 = [r8 + 8]			  ## btagc.c:365:5
 1e16e52:    30 fd c0 0c       	r0 = r0 & 1073741823			  ## btagc.c:365:5
 1e16e56:    10 f6 08 80       	[r8 + 8] = r0			  ## btagc.c:365:5
 1e16e5a:    00 f6 0c 80       	r0 = [r8 + 12]			  ## btagc.c:367:5
 1e16e5e:    30 fd 3f 09       	r0 = r0 & 4294967232			  ## btagc.c:367:5
 1e16e62:    00 fd 2f 09       	r0 = r0 | 47			  ## btagc.c:367:5
 1e16e66:    10 f6 0c 80       	[r8 + 12] = r0			  ## btagc.c:367:5
 1e16e6a:    00 f6 0c 80       	r0 = [r8 + 12]			  ## btagc.c:368:5
 1e16e6e:    30 fd 7c 00       	r0 = r0 & 4294963263			  ## btagc.c:368:5
 1e16e72:    00 fd 5c 00       	r0 = r0 | 3520			  ## btagc.c:368:5
 1e16e76:    10 f6 0c 80       	[r8 + 12] = r0			  ## btagc.c:368:5
 1e16e7a:    00 f6 0c 80       	r0 = [r8 + 12]			  ## btagc.c:369:5
 1e16e7e:    30 fd fc 02       	r0 = r0 & 4294709247			  ## btagc.c:369:5
 1e16e82:    10 f6 0c 80       	[r8 + 12] = r0			  ## btagc.c:369:5
 1e16e86:    00 f6 0c 80       	r0 = [r8 + 12]			  ## btagc.c:370:5
 1e16e8a:    30 fd fc 0b       	r0 = r0 & 4278452223			  ## btagc.c:370:5
 1e16e8e:    10 f6 0c 80       	[r8 + 12] = r0			  ## btagc.c:370:5
 1e16e92:    00 f6 0c 80       	r0 = [r8 + 12]			  ## btagc.c:371:5
 1e16e96:    30 fd 03 0c       	r0 = r0 & 4244635647			  ## btagc.c:371:5
 1e16e9a:    10 f6 0c 80       	[r8 + 12] = r0			  ## btagc.c:371:5
 1e16e9e:    00 f6 0c 80       	r0 = [r8 + 12]			  ## btagc.c:372:5
 1e16ea2:    30 fd fc 0c       	r0 = r0 & 67108863			  ## btagc.c:372:5
 1e16ea6:    10 f6 0c 80       	[r8 + 12] = r0			  ## btagc.c:372:5
 1e16eaa:    00 f6 00 80       	r0 = [r8 + 0]			  ## btagc.c:374:5
 1e16eae:    f0 b7             	r0 &= 4294934527			  ## btagc.c:374:5
 1e16eb0:    10 f6 00 80       	[r8 + 0] = r0			  ## btagc.c:374:5
 1e16eb4:    00 f4 80 8a       	[r8 + 0] |= 32768			  ## btagc.c:375:5
 1e16eb8:    59 01             	{pc, r9-r4} = [sp++]			  ## btagc.c:376:1


bt_enter_deepsleep:
 1e16eba:    74 01             	[--sp] = {rets, r4}			  ## RF.c:529:0
 1e16ebc:    c0 ff e8 09 00 00 	r0 = 2536 <system_data_end : 9e8 >			  ## RF.c:530:12
 1e16ec2:    90 60             	r0 = b[r0 + 9] (u)			  ## RF.c:530:12
 1e16ec4:    3e 20             	if (r0 == 0) goto 124 <bt_enter_deepsleep+0x88 : 1e16f42 >			  ## RF.c:530:12
 1e16ec6:    00 fb fc 03       	r0 = 1020 <BTCTLER_LE_RAM_TOTAL+0x1E : 3fc >			  ## RF.c:534:25
 1e16eca:    bf f3 74 c5       	call -29976 <malloc : 1e0f9b6 >			  ## RF.c:534:25
 1e16ece:    04 08             	r4 = r0			  ## RF.c:534:25
 1e16ed0:    c0 ff 40 2a 00 00 	r0 = 10816 <rf_pwr_off_info_p : 2a40 >			  ## RF.c:534:23
 1e16ed6:    0c 40             	[r0 + 0] = r4			  ## RF.c:534:23
 1e16ed8:    02 38             	if (r4 != 0) goto 4 <bt_enter_deepsleep+0x24 : 1e16ede >			  ## RF.c:534:23
 1e16eda:    8f f3 81 62       	call 2016514 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e16ede:    c1 ff 00 19 1e 00 	r1 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >			  ## RF.c:537:5
 1e16ee4:    02 7a             	r2 = 160			  ## RF.c:537:5
 1e16ee6:    40 08             	r0 = r4			  ## RF.c:537:5
 1e16ee8:    97 f3 fc 7f       	call 3080184 <memcpy : 106ee4 >			  ## RF.c:537:5
 1e16eec:    40 fc a0 00       	r0 = r4 + 160			  ## RF.c:539:37
 1e16ef0:    20 fb 1c 1b       	r1 = 1835008			  ## RF.c:539:5
 1e16ef4:    02 fb 40 01       	r2 = 320 <DRIVER_RAM_TOTAL+0x4E : 140 >			  ## RF.c:539:5
 1e16ef8:    97 f3 f4 7f       	call 3080168 <memcpy : 106ee4 >			  ## RF.c:539:5
 1e16efc:    40 fc e0 01       	r0 = r4 + 480			  ## RF.c:541:37
 1e16f00:    c1 ff 00 fc 1c 00 	r1 = 1899520 <uECC_vli_cmp_unsafe+0xC8C04 : 1cfc00 >			  ## RF.c:541:5
 1e16f06:    02 fb 10 02       	r2 = 528 <BTCTLER_CL_RAM_TOTAL+0x2C : 210 >			  ## RF.c:541:5
 1e16f0a:    97 f3 eb 7f       	call 3080150 <memcpy : 106ee4 >			  ## RF.c:541:5
 1e16f0e:    c0 ff b4 00 1c 00 	r0 = 1835188 <uECC_vli_cmp_unsafe+0xB90B8 : 1c00b4 >			  ## RF.c:541:5
 1e16f14:    21 40             	r1 = [r0 + 8]			  ## RF.c:543:44
 1e16f16:    42 fc f0 03       	r2 = r4 + 1008			  ## RF.c:543:44
 1e16f1a:    09 44             	[r2 + 0] = r1			  ## RF.c:543:42
 1e16f1c:    01 40             	r1 = [r0 + 0]			  ## RF.c:544:45
 1e16f1e:    19 44             	[r2 + 4] = r1			  ## RF.c:544:43
 1e16f20:    10 40             	r0 = [r0 + 4]			  ## RF.c:545:45
 1e16f22:    28 44             	[r2 + 8] = r0			  ## RF.c:545:43
 1e16f24:    00 fb 60 01       	r0 = 352 <DRIVER_RAM_TOTAL+0x6E : 160 >			  ## RF.c:550:29
 1e16f28:    bf f3 45 c5       	call -30070 <malloc : 1e0f9b6 >			  ## RF.c:550:29
 1e16f2c:    02 08             	r2 = r0			  ## RF.c:550:29
 1e16f2e:    c0 ff 44 2a 00 00 	r0 = 10820 <ble_pwr_off_store : 2a44 >			  ## RF.c:550:27
 1e16f34:    0a 40             	[r0 + 0] = r2			  ## RF.c:550:27
 1e16f36:    02 34             	if (r2 != 0) goto 4 <bt_enter_deepsleep+0x82 : 1e16f3c >			  ## RF.c:550:27
 1e16f38:    8f f3 52 62       	call 2016420 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e16f3c:    20 08             	r0 = r2			  ## RF.c:553:9
 1e16f3e:    80 f3 1d 14       	call 10298 <ble_enter_deepsleep : 1e1977c >			  ## RF.c:553:9
 1e16f42:    54 01             	{pc, r4} = [sp++]			  ## RF.c:555:1


bt_exit_deepsleep:
 1e16f44:    76 01             	[--sp] = {rets, r6-r4}			  ## RF.c:558:0
 1e16f46:    c1 ff e8 09 00 00 	r1 = 2536 <system_data_end : 9e8 >			  ## RF.c:558:0
 1e16f4c:    90 62             	r0 = b[r1 + 9] (u)			  ## RF.c:559:12
 1e16f4e:    7d 20             	if (r0 == 0) goto 250 <bt_exit_deepsleep+0x106 : 1e1704a >			  ## RF.c:559:12
 1e16f50:    10 70             	r0 = 1			  ## RF.c:569:21
 1e16f52:    c2 ff 00 21 1f 00 	r2 = 2040064 <uECC_vli_cmp_unsafe+0xEB104 : 1f2100 >			  ## RF.c:569:21
 1e16f58:    10 f6 00 21       	[r2 + 256] = r0			  ## RF.c:569:21
 1e16f5c:    c0 ff 10 00 1e 00 	r0 = 1966096 <uECC_vli_cmp_unsafe+0xD9014 : 1e0010 >			  ## RF.c:569:21
 1e16f62:    03 40             	r3 = [r0 + 0]			  ## RF.c:572:5
 1e16f64:    33 fd c0 3a       	r3 = r3 & 4294918143			  ## RF.c:572:5
 1e16f68:    13 b7             	r3 |= 16384			  ## RF.c:572:5
 1e16f6a:    0b 40             	[r0 + 0] = r3			  ## RF.c:572:5
 1e16f6c:    60 62             	r0 = b[r1 + 6] (u)			  ## RF.c:574:11
 1e16f6e:    00 fe 0a 09       	r0 = r0 * 10			  ## RF.c:574:24
 1e16f72:    8f f3 71 6e       	call 2022626 <delay : 4c58 >			  ## RF.c:574:5
 1e16f76:    00 f4 80 29       	[r2 + 0] |= 128			  ## RF.c:575:5
 1e16f7a:    00 44             	r0 = [r2 + 0]			  ## RF.c:576:5
 1e16f7c:    30 fd 1f 0b       	r0 = r0 & 4292935679			  ## RF.c:576:5
 1e16f80:    00 fd 0c 0b       	r0 = r0 | 786432			  ## RF.c:576:5
 1e16f84:    08 44             	[r2 + 0] = r0			  ## RF.c:576:5
 1e16f86:    60 62             	r0 = b[r1 + 6] (u)			  ## RF.c:578:11
 1e16f88:    00 fe 0a 09       	r0 = r0 * 10			  ## RF.c:578:24
 1e16f8c:    8f f3 64 6e       	call 2022600 <delay : 4c58 >			  ## RF.c:578:5
 1e16f90:    00 44             	r0 = [r2 + 0]			  ## RF.c:579:5
 1e16f92:    70 b0             	r0 &= 4294967294			  ## RF.c:579:5
 1e16f94:    08 44             	[r2 + 0] = r0			  ## RF.c:579:5
 1e16f96:    60 62             	r0 = b[r1 + 6] (u)			  ## RF.c:580:11
 1e16f98:    00 fe 0a 09       	r0 = r0 * 10			  ## RF.c:580:24
 1e16f9c:    8f f3 5c 6e       	call 2022584 <delay : 4c58 >			  ## RF.c:580:5
 1e16fa0:    00 f4 01 29       	[r2 + 0] |= 1			  ## RF.c:581:5
 1e16fa4:    60 62             	r0 = b[r1 + 6] (u)			  ## RF.c:583:11
 1e16fa6:    00 fe 0a 09       	r0 = r0 * 10			  ## RF.c:583:24
 1e16faa:    8f f3 55 6e       	call 2022570 <delay : 4c58 >			  ## RF.c:583:5
 1e16fae:    c0 ff 7c fc 1c 00 	r0 = 1899644 <uECC_vli_cmp_unsafe+0xC8C80 : 1cfc7c >			  ## RF.c:584:5
 1e16fb4:    00 f4 40 09       	[r0 + 0] |= 64			  ## RF.c:584:5
 1e16fb8:    c4 ff 20 01 1c 00 	r4 = 1835296 <uECC_vli_cmp_unsafe+0xB9124 : 1c0120 >			  ## RF.c:584:5
 1e16fbe:    03 f4 01 49       	[r4 + 12] |= 1			  ## RF.c:586:22
 1e16fc2:    c5 ff 40 2a 00 00 	r5 = 10816 <rf_pwr_off_info_p : 2a40 >
 1e16fc8:    00 4a             	r0 = [r5 + 0]
 1e16fca:    01 70             	r1 = 0
 1e16fcc:    c2 ff 00 19 1e 00 	r2 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e16fd2:    33 fd 01 19       	r3 = r1 & 4294967294			  ## RF.c:593:22
 1e16fd6:    83 e0 02 00       	if (r3 == 8) goto 4 <bt_exit_deepsleep+0x9A : 1e16fde >			  ## RF.c:593:22
 1e16fda:    03 40             	r3 = [r0 + 0]			  ## RF.c:594:34
 1e16fdc:    0b 44             	[r2 + 0] = r3			  ## RF.c:594:32
 1e16fde:    40 80             	r0 += 4			  ## RF.c:592:19
 1e16fe0:    11 80             	r1 += 1			  ## RF.c:592:62
 1e16fe2:    42 80             	r2 += 4			  ## RF.c:592:19
 1e16fe4:    81 e2 f5 1f       	if (r1 != 40) goto -22 <bt_exit_deepsleep+0x8E : 1e16fd2 >			  ## RF.c:592:19
 1e16fe8:    06 4a             	r6 = [r5 + 0]			  ## RF.c:601:41
 1e16fea:    61 fc a0 00       	r1 = r6 + 160			  ## RF.c:601:5
 1e16fee:    20 fb 1c 0b       	r0 = 1835008			  ## RF.c:601:5
 1e16ff2:    02 fb 40 01       	r2 = 320 <DRIVER_RAM_TOTAL+0x4E : 140 >			  ## RF.c:601:5
 1e16ff6:    97 f3 75 7f       	call 3079914 <memcpy : 106ee4 >			  ## RF.c:601:5
 1e16ffa:    60 fc e0 01       	r0 = r6 + 480			  ## RF.c:603:5
 1e16ffe:    01 fb d5 ff       	r1 = -43 <bank_code_load_addr+0x1DC9DD : 1ffffd5 >			  ## RF.c:603:5
 1e17002:    c2 ff 00 fc 1c 00 	r2 = 1899520 <uECC_vli_cmp_unsafe+0xC8C04 : 1cfc00 >			  ## RF.c:603:5
 1e17008:    21 e0 02 30       	if (r1 < 2) goto 4 <bt_exit_deepsleep+0xCC : 1e17010 >
 1e1700c:    03 40             	r3 = [r0 + 0]			  ## RF.c:606:65
 1e1700e:    0b 44             	[r2 + 0] = r3			  ## RF.c:606:63
 1e17010:    40 80             	r0 += 4			  ## RF.c:603:19
 1e17012:    11 80             	r1 += 1			  ## RF.c:603:19
 1e17014:    42 80             	r2 += 4			  ## RF.c:603:19
 1e17016:    91 e5 f7 1f       	if (r1 != 89) goto -18 <bt_exit_deepsleep+0xC4 : 1e17008 >			  ## RF.c:603:19
 1e1701a:    00 4a             	r0 = [r5 + 0]			  ## RF.c:611:23
 1e1701c:    01 fc f0 03       	r1 = r0 + 1008			  ## RF.c:611:23
 1e17020:    12 42             	r2 = [r1 + 4]			  ## RF.c:611:42
 1e17022:    0a 48             	[r4 + 0] = r2			  ## RF.c:611:21
 1e17024:    22 42             	r2 = [r1 + 8]			  ## RF.c:612:42
 1e17026:    1a 48             	[r4 + 4] = r2			  ## RF.c:612:21
 1e17028:    01 42             	r1 = [r1 + 0]			  ## RF.c:613:44
 1e1702a:    29 48             	[r4 + 8] = r1			  ## RF.c:613:23
 1e1702c:    01 f4 80 4a       	[r4 + 4] |= 32768			  ## RF.c:615:21
 1e17030:    02 f4 80 4a       	[r4 + 8] |= 32768			  ## RF.c:616:23
 1e17034:    bf f3 ea c4       	call -30252 <free : 1e0fa0c >			  ## RF.c:625:5
 1e17038:    c4 ff 44 2a 00 00 	r4 = 10820 <ble_pwr_off_store : 2a44 >			  ## RF.c:631:28
 1e1703e:    00 48             	r0 = [r4 + 0]			  ## RF.c:631:28
 1e17040:    80 f3 bd 13       	call 10106 <ble_exit_deepsleep : 1e197be >			  ## RF.c:631:9
 1e17044:    00 48             	r0 = [r4 + 0]			  ## RF.c:633:14
 1e17046:    bf f3 e1 c4       	call -30270 <free : 1e0fa0c >			  ## RF.c:633:9
 1e1704a:    56 01             	{pc, r6-r4} = [sp++]			  ## RF.c:635:1


bt_analog_part_init:
 1e1704c:    c0 ff 00 19 1e 00 	r0 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >			  ## analog.c:1811:0
 1e17052:    15 f4 10 0a       	[r0 + 84] |= 4096			  ## analog.c:1817:23
 1e17056:    51 41             	r1 = [r0 + 84]			  ## analog.c:1818:23
 1e17058:    f1 b5             	r1 &= 4294965247			  ## analog.c:1818:23
 1e1705a:    59 41             	[r0 + 84] = r1			  ## analog.c:1818:23
 1e1705c:    51 41             	r1 = [r0 + 84]			  ## analog.c:1819:23
 1e1705e:    f1 b6             	r1 &= 4294959103			  ## analog.c:1819:23
 1e17060:    59 41             	[r0 + 84] = r1			  ## analog.c:1819:23
 1e17062:    15 f4 40 0a       	[r0 + 84] |= 16384			  ## analog.c:1820:23
 1e17066:    15 f4 80 09       	[r0 + 84] |= 128			  ## analog.c:1824:23
 1e1706a:    c1 ff e5 83 80 48 	r1 = 1216381925 <uECC_vli_cmp_unsafe+0x7013E9 : 8083e5 >			  ## analog.c:1826:22
 1e17070:    09 40             	[r0 + 0] = r1			  ## analog.c:1826:22
 1e17072:    c1 ff 16 80 1c 04 	r1 = 68976662 <uECC_vli_cmp_unsafe+0xC101A : 1c8016 >			  ## analog.c:1842:22
 1e17078:    19 40             	[r0 + 4] = r1			  ## analog.c:1842:22
 1e1707a:    c1 ff d8 85 00 00 	r1 = 34264 <nvbss_size+0x1AD8 : 85d8 >			  ## analog.c:1857:22
 1e17080:    29 40             	[r0 + 8] = r1			  ## analog.c:1857:22
 1e17082:    c1 ff 00 3e 88 00 	r1 = 8928768 <uECC_vli_cmp_unsafe+0x77CE04 : 883e00 >			  ## analog.c:1869:22
 1e17088:    39 40             	[r0 + 12] = r1			  ## analog.c:1869:22
 1e1708a:    c1 ff 62 2e 40 01 	r1 = 20983394 <uECC_vli_cmp_unsafe+0x12FBE66 : 1402e62 >			  ## analog.c:1880:22
 1e17090:    49 40             	[r0 + 16] = r1			  ## analog.c:1880:22
 1e17092:    01 40             	r1 = [r0 + 0]			  ## analog.c:1880:22
 1e17094:    02 fb 3f f8       	r2 = -1985 <bank_code_load_addr+0x1DC247 : 1fff83f >			  ## analog.c:1880:22
 1e17098:    51 b5             	r1 &= r2			  ## analog.c:1880:22
 1e1709a:    09 40             	[r0 + 0] = r1			  ## analog.c:1880:22
 1e1709c:    11 40             	r1 = [r0 + 4]			  ## analog.c:1880:22
 1e1709e:    c2 ff ff 0f c7 ff 	r2 = 4291235839 <uECC_vli_cmp_unsafe+0x1B6A003 : 1c70fff >			  ## analog.c:1880:22
 1e170a4:    51 b5             	r1 &= r2			  ## analog.c:1880:22
 1e170a6:    19 40             	[r0 + 4] = r1			  ## analog.c:1880:22
 1e170a8:    01 40             	r1 = [r0 + 0]			  ## analog.c:1880:22
 1e170aa:    02 fb 40 03       	r2 = 832 <BTCTLER_LE_CONTROLLER_BSS_SIZE+0x34 : 340 >			  ## analog.c:1880:22
 1e170ae:    51 b4             	r1 |= r2			  ## analog.c:1880:22
 1e170b0:    09 40             	[r0 + 0] = r1			  ## analog.c:1880:22
 1e170b2:    01 f4 44 04       	[r0 + 4] |= 1605632			  ## analog.c:1880:22
 1e170b6:    c1 ff 18 05 d0 00 	r1 = 13632792 <uECC_vli_cmp_unsafe+0xBF951C : d00518 >			  ## analog.c:1902:23
 1e170bc:    59 40             	[r0 + 20] = r1			  ## analog.c:1902:23
 1e170be:    c1 ff 5a d3 e6 ff 	r1 = 4293317466 <bank_code_load_addr+0x49D62 : 1e6d35a >			  ## analog.c:1925:22
 1e170c4:    69 40             	[r0 + 24] = r1			  ## analog.c:1925:22
 1e170c6:    c7 f4 0f 09       	[r0 + 28] = 15			  ## analog.c:1937:22
 1e170ca:    81 40             	r1 = [r0 + 32]			  ## analog.c:1951:22
 1e170cc:    31 fd 7f 13       	r1 = r1 & 4294445055			  ## analog.c:1951:22
 1e170d0:    89 40             	[r0 + 32] = r1			  ## analog.c:1951:22
 1e170d2:    08 f4 2a 03       	[r0 + 32] |= 348160			  ## analog.c:1954:22
 1e170d6:    c1 ff df 06 a9 02 	r1 = 44631775 <uECC_vli_cmp_unsafe+0x9896E3 : a906df >			  ## analog.c:1958:23
 1e170dc:    a9 40             	[r0 + 40] = r1			  ## analog.c:1958:23
 1e170de:    c1 ff 01 b4 06 42 	r1 = 1107735553 <text_size+0x4A551 : 6b401 >			  ## analog.c:1978:23
 1e170e4:    b9 40             	[r0 + 44] = r1			  ## analog.c:1978:23
 1e170e6:    01 fc 0c 2e       	r1 = r0 + 11788
 1e170ea:    00 f4 20 19       	[r1 + 0] |= 32			  ## analog.c:1796:9
 1e170ee:    02 42             	r2 = [r1 + 0]			  ## analog.c:1797:9
 1e170f0:    03 fb 3f fe       	r3 = -449 <bank_code_load_addr+0x1DC847 : 1fffe3f >			  ## analog.c:1797:9
 1e170f4:    52 b7             	r2 &= r3			  ## analog.c:1797:9
 1e170f6:    12 b4             	r2 |= 256			  ## analog.c:1797:9
 1e170f8:    0a 42             	[r1 + 0] = r2			  ## analog.c:1797:9
 1e170fa:    04 f4 01 0a       	[r0 + 16] |= 256			  ## analog.c:1798:26
 1e170fe:    04 f4 02 0c       	[r0 + 16] |= 33554432			  ## analog.c:1799:26
 1e17102:    41 40             	r1 = [r0 + 16]			  ## analog.c:1800:26
 1e17104:    f1 b4             	r1 &= 4294966783			  ## analog.c:1800:26
 1e17106:    49 40             	[r0 + 16] = r1			  ## analog.c:1800:26
 1e17108:    20 00             	rts			  ## analog.c:1997:1


get_bta_pll_bank:
 1e1710a:    74 01             	[--sp] = {rets, r4}			  ## analog.c:301:0
 1e1710c:    01 70             	r1 = 0			  ## analog.c:301:0
 1e1710e:    43 71             	r3 = 20			  ## analog.c:301:0
 1e17110:    c2 ff e8 09 00 00 	r2 = 2536 <system_data_end : 9e8 >			  ## analog.c:301:0
 1e17116:    04 fa 00 32       	r4 = b[r3+r2] (u)			  ## analog.c:305:24
 1e1711a:    04 f2 08 80       	if (r4 > r0) goto 16 <get_bta_pll_bank+0x24 : 1e1712e >			  ## analog.c:305:24
 1e1711e:    34 fc ee ff       	r4 = r3 + -18			  ## analog.c:304:19
 1e17122:    13 80             	r3 += 1			  ## analog.c:304:19
 1e17124:    11 80             	r1 += 1			  ## analog.c:304:19
 1e17126:    f4 e1 f6 3f       	if (r4 < 31) goto -20 <get_bta_pll_bank+0xC : 1e17116 >			  ## analog.c:304:19
 1e1712a:    00 70             	r0 = 0
 1e1712c:    03 18             	goto 6 <get_bta_pll_bank+0x2A : 1e17134 >
 1e1712e:    00 f9 32 20       	r0 = b[r2 + 50] (u)			  ## analog.c:297:12
 1e17132:    60 b0             	r0 = r0 - r1			  ## analog.c:306:13
 1e17134:    00 04             	r0 = r0.b0 (u)			  ## analog.c:311:1
 1e17136:    54 01             	{pc, r4} = [sp++]			  ## analog.c:311:1


bt_fre_offset_value_init:
 1e17138:    75 01             	[--sp] = {rets, r5, r4}			  ## analog.c:211:0
 1e1713a:    fc 0b             	sp += -8			  ## analog.c:211:0
 1e1713c:    c4 ff e8 09 00 00 	r4 = 2536 <system_data_end : 9e8 >			  ## analog.c:211:0
 1e17142:    00 70             	r0 = 0			  ## analog.c:211:0
 1e17144:    58 58             	h[r4 + 10] = r0			  ## analog.c:213:19
 1e17146:    c8 68             	b[r4 + 12] = r0			  ## analog.c:214:24
 1e17148:    01 a0             	r1 = sp + 0			  ## analog.c:214:24
 1e1714a:    e0 76             	r0 = 110			  ## analog.c:218:11
 1e1714c:    62 70             	r2 = 6			  ## analog.c:218:11
 1e1714e:    bf f3 0f d2       	call -23522 <syscfg_read : 1e11570 >			  ## analog.c:218:11
 1e17152:    00 04             	r0 = r0.b0 (u)			  ## analog.c:219:10
 1e17154:    60 e0 1b 10       	if (r0 != 6) goto 54 <bt_fre_offset_value_init+0x56 : 1e1718e >			  ## analog.c:219:10
 1e17158:    85 f5 00 00       	r5 = h[sp] (u)			  ## analog.c:219:28
 1e1715c:    00 a0             	r0 = sp + 0			  ## analog.c:219:28
 1e1715e:    90 b0             	r0 |= 2			  ## analog.c:219:52
 1e17160:    41 70             	r1 = 4			  ## analog.c:219:35
 1e17162:    bf f3 22 51       	call -89532 <CRC16 : 1e013aa >			  ## analog.c:219:35
 1e17166:    05 f2 12 10       	if (r5 != r0) goto 36 <bt_fre_offset_value_init+0x56 : 1e1718e >			  ## analog.c:219:35
 1e1716a:    80 f5 04 00       	r0 = h[sp+4] (u)			  ## analog.c:220:29
 1e1716e:    81 f5 02 00       	r1 = h[sp+2] (u)			  ## analog.c:220:29
 1e17172:    d0 fd 80 10       	r1 <= insert(r0, p:16, l:16)			  ## analog.c:220:29
 1e17176:    59 58             	h[r4 + 10] = r1			  ## analog.c:220:23
 1e17178:    10 70             	r0 = 1			  ## analog.c:221:28
 1e1717a:    09 c4             	r1 = r1 << 16			  ## analog.c:222:14
 1e1717c:    41 fb c8 1b       	r1 = r1 + 13107200			  ## analog.c:222:35
 1e17180:    42 fb c8 05       	r2 = r0 + 26214400			  ## analog.c:222:35
 1e17184:    c8 68             	b[r4 + 12] = r0			  ## analog.c:221:28
 1e17186:    21 f2 02 30       	if (r1 < r2) goto 4 <bt_fre_offset_value_init+0x56 : 1e1718e >			  ## analog.c:221:28
 1e1718a:    00 70             	r0 = 0			  ## analog.c:223:27
 1e1718c:    58 58             	h[r4 + 10] = r0			  ## analog.c:223:27
 1e1718e:    04 0a             	sp += 8
 1e17190:    55 01             	{pc, r5, r4} = [sp++]			  ## analog.c:229:1


reset_trim_info:
 1e17192:    75 01             	[--sp] = {rets, r5, r4}			  ## analog.c:77:0
 1e17194:    c0 ff 08 fc 1c 00 	r0 = 1899528 <uECC_vli_cmp_unsafe+0xC8C0C : 1cfc08 >			  ## analog.c:77:0
 1e1719a:    01 40             	r1 = [r0 + 0]			  ## analog.c:86:17
 1e1719c:    02 fb 00 fc       	r2 = -1024 <bank_code_load_addr+0x1DC608 : 1fffc00 >			  ## analog.c:86:17
 1e171a0:    51 b5             	r1 &= r2			  ## analog.c:86:17
 1e171a2:    09 40             	[r0 + 0] = r1			  ## analog.c:86:17
 1e171a4:    c1 ff 1c 2a 00 00 	r1 = 10780 <tws_bulk_pool_end : 2a1c >			  ## analog.c:109:21
 1e171aa:    12 62             	r2 = b[r1 + 1] (u)			  ## analog.c:87:20
 1e171ac:    03 62             	r3 = b[r1 + 0] (u)			  ## analog.c:87:20
 1e171ae:    04 40             	r4 = [r0 + 0]			  ## analog.c:87:17
 1e171b0:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## analog.c:87:20
 1e171b4:    02 fb ff 03       	r2 = 1023 <BTCTLER_LE_RAM_TOTAL+0x21 : 3ff >			  ## analog.c:87:20
 1e171b8:    53 b5             	r3 &= r2			  ## analog.c:87:20
 1e171ba:    53 b8             	r3 |= r4			  ## analog.c:87:17
 1e171bc:    0b 40             	[r0 + 0] = r3			  ## analog.c:87:17
 1e171be:    03 40             	r3 = [r0 + 0]			  ## analog.c:88:17
 1e171c0:    c4 ff ff 03 f0 ff 	r4 = 4293919743 <bank_code_load_addr+0xDCE07 : 1f003ff >			  ## analog.c:88:17
 1e171c6:    53 b9             	r3 &= r4			  ## analog.c:88:17
 1e171c8:    0b 40             	[r0 + 0] = r3			  ## analog.c:88:17
 1e171ca:    33 62             	r3 = b[r1 + 3] (u)			  ## analog.c:89:20
 1e171cc:    24 62             	r4 = b[r1 + 2] (u)			  ## analog.c:89:20
 1e171ce:    05 40             	r5 = [r0 + 0]			  ## analog.c:89:17
 1e171d0:    c8 fd 40 43       	r4 <= insert(r3, p:8, l:8)			  ## analog.c:89:20
 1e171d4:    52 b9             	r2 &= r4			  ## analog.c:89:20
 1e171d6:    92 c2             	r2 = r2 << 10			  ## analog.c:89:20
 1e171d8:    52 ba             	r2 |= r5			  ## analog.c:89:17
 1e171da:    0a 40             	[r0 + 0] = r2			  ## analog.c:89:17
 1e171dc:    22 40             	r2 = [r0 + 8]			  ## analog.c:92:17
 1e171de:    32 fd ff 29       	r2 = r2 & 4294967040			  ## analog.c:92:17
 1e171e2:    2a 40             	[r0 + 8] = r2			  ## analog.c:92:17
 1e171e4:    42 62             	r2 = b[r1 + 4] (u)			  ## analog.c:93:21
 1e171e6:    23 40             	r3 = [r0 + 8]			  ## analog.c:93:17
 1e171e8:    52 b6             	r2 |= r3			  ## analog.c:93:17
 1e171ea:    2a 40             	[r0 + 8] = r2			  ## analog.c:93:17
 1e171ec:    22 40             	r2 = [r0 + 8]			  ## analog.c:94:17
 1e171ee:    32 fd ff 2a       	r2 = r2 & 4294902015			  ## analog.c:94:17
 1e171f2:    2a 40             	[r0 + 8] = r2			  ## analog.c:94:17
 1e171f4:    72 62             	r2 = b[r1 + 7] (u)			  ## analog.c:95:21
 1e171f6:    63 62             	r3 = b[r1 + 6] (u)			  ## analog.c:95:21
 1e171f8:    24 40             	r4 = [r0 + 8]			  ## analog.c:95:17
 1e171fa:    d8 fd 40 32       	r3 <= insert(r2, p:8, l:24)			  ## analog.c:95:21
 1e171fe:    1a c2             	r2 = r3 << 8			  ## analog.c:95:21
 1e17200:    a2 04             	r2 = r2.l (u)			  ## analog.c:95:21
 1e17202:    52 b8             	r2 |= r4			  ## analog.c:95:17
 1e17204:    2a 40             	[r0 + 8] = r2			  ## analog.c:95:17
 1e17206:    22 40             	r2 = [r0 + 8]			  ## analog.c:96:17
 1e17208:    32 fd ff 2b       	r2 = r2 & 4278255615			  ## analog.c:96:17
 1e1720c:    2a 40             	[r0 + 8] = r2			  ## analog.c:96:17
 1e1720e:    c2 62             	r2 = b[r1 + 12] (u)			  ## analog.c:97:21
 1e17210:    23 40             	r3 = [r0 + 8]			  ## analog.c:97:17
 1e17212:    12 c4             	r2 = r2 << 16			  ## analog.c:97:21
 1e17214:    52 b6             	r2 |= r3			  ## analog.c:97:17
 1e17216:    2a 40             	[r0 + 8] = r2			  ## analog.c:97:17
 1e17218:    c2 ff 08 19 1e 00 	r2 = 1972488 <uECC_vli_cmp_unsafe+0xDA90C : 1e1908 >			  ## analog.c:97:17
 1e1721e:    03 44             	r3 = [r2 + 0]			  ## analog.c:100:22
 1e17220:    33 fd ff 35       	r3 = r3 & 4261543935			  ## analog.c:100:22
 1e17224:    0b 44             	[r2 + 0] = r3			  ## analog.c:100:22
 1e17226:    e3 62             	r3 = b[r1 + 14] (u)			  ## analog.c:101:25
 1e17228:    04 44             	r4 = [r2 + 0]			  ## analog.c:101:22
 1e1722a:    5b c4             	r3 = r3 << 17			  ## analog.c:101:25
 1e1722c:    53 b8             	r3 |= r4			  ## analog.c:101:22
 1e1722e:    0b 44             	[r2 + 0] = r3			  ## analog.c:101:22
 1e17230:    13 44             	r3 = [r2 + 4]			  ## analog.c:102:22
 1e17232:    33 fd ff 39       	r3 = r3 & 4294967040			  ## analog.c:102:22
 1e17236:    1b 44             	[r2 + 4] = r3			  ## analog.c:102:22
 1e17238:    03 63             	r3 = b[r1 + 16] (u)			  ## analog.c:103:25
 1e1723a:    14 44             	r4 = [r2 + 4]			  ## analog.c:103:22
 1e1723c:    53 b8             	r3 |= r4			  ## analog.c:103:22
 1e1723e:    1b 44             	[r2 + 4] = r3			  ## analog.c:103:22
 1e17240:    32 40             	r2 = [r0 + 12]			  ## analog.c:106:17
 1e17242:    03 fb 00 fe       	r3 = -512 <bank_code_load_addr+0x1DC808 : 1fffe00 >			  ## analog.c:106:17
 1e17246:    52 b7             	r2 &= r3			  ## analog.c:106:17
 1e17248:    3a 40             	[r0 + 12] = r2			  ## analog.c:106:17
 1e1724a:    32 63             	r2 = b[r1 + 19] (u)			  ## analog.c:107:21
 1e1724c:    23 63             	r3 = b[r1 + 18] (u)			  ## analog.c:107:21
 1e1724e:    34 40             	r4 = [r0 + 12]			  ## analog.c:107:17
 1e17250:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## analog.c:107:21
 1e17254:    02 fb ff 01       	r2 = 511 <BTCTLER_CL_RAM_TOTAL+0x1B : 1ff >			  ## analog.c:107:21
 1e17258:    53 b5             	r3 &= r2			  ## analog.c:107:21
 1e1725a:    53 b8             	r3 |= r4			  ## analog.c:107:17
 1e1725c:    3b 40             	[r0 + 12] = r3			  ## analog.c:107:17
 1e1725e:    33 40             	r3 = [r0 + 12]			  ## analog.c:108:17
 1e17260:    c4 ff ff 01 fc ff 	r4 = 4294705663 <bank_code_load_addr+0x19CC07 : 1fc01ff >			  ## analog.c:108:17
 1e17266:    53 b9             	r3 &= r4			  ## analog.c:108:17
 1e17268:    3b 40             	[r0 + 12] = r3			  ## analog.c:108:17
 1e1726a:    53 63             	r3 = b[r1 + 21] (u)			  ## analog.c:109:21
 1e1726c:    41 63             	r1 = b[r1 + 20] (u)			  ## analog.c:109:21
 1e1726e:    34 40             	r4 = [r0 + 12]			  ## analog.c:109:17
 1e17270:    c8 fd 40 13       	r1 <= insert(r3, p:8, l:8)			  ## analog.c:109:21
 1e17274:    51 b5             	r1 &= r2			  ## analog.c:109:21
 1e17276:    49 c2             	r1 = r1 << 9			  ## analog.c:109:21
 1e17278:    51 b8             	r1 |= r4			  ## analog.c:109:17
 1e1727a:    39 40             	[r0 + 12] = r1			  ## analog.c:109:17
 1e1727c:    55 01             	{pc, r5, r4} = [sp++]			  ## analog.c:110:1


txtrim_analog_init:
 1e1727e:    34 00             	[--sp] = rets			  ## analog.c:1060:0
 1e17280:    e5 16             	call -566 <bt_analog_part_init : 1e1704c >			  ## analog.c:1061:5
 1e17282:    c0 ff 00 19 1e 00 	r0 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >			  ## analog.c:1061:5
 1e17288:    00 f4 0c 0b       	[r0 + 0] |= 786432			  ## analog.c:1063:22
 1e1728c:    11 40             	r1 = [r0 + 4]			  ## analog.c:1066:22
 1e1728e:    f1 b5             	r1 &= 4294965247			  ## analog.c:1066:22
 1e17290:    19 40             	[r0 + 4] = r1			  ## analog.c:1066:22
 1e17292:    21 40             	r1 = [r0 + 8]			  ## analog.c:1067:22
 1e17294:    71 b0             	r1 &= 4294967294			  ## analog.c:1067:22
 1e17296:    29 40             	[r0 + 8] = r1			  ## analog.c:1067:22
 1e17298:    21 40             	r1 = [r0 + 8]			  ## analog.c:1068:22
 1e1729a:    02 fb 3f fe       	r2 = -449 <bank_code_load_addr+0x1DC847 : 1fffe3f >			  ## analog.c:1068:22
 1e1729e:    51 b5             	r1 &= r2			  ## analog.c:1068:22
 1e172a0:    29 40             	[r0 + 8] = r1			  ## analog.c:1068:22
 1e172a2:    21 40             	r1 = [r0 + 8]			  ## analog.c:1069:22
 1e172a4:    71 b0             	r1 &= 4294967294			  ## analog.c:1069:22
 1e172a6:    29 40             	[r0 + 8] = r1			  ## analog.c:1069:22
 1e172a8:    31 40             	r1 = [r0 + 12]			  ## analog.c:1070:22
 1e172aa:    31 fd 1e 1b       	r1 = r1 & 4293001215			  ## analog.c:1070:22
 1e172ae:    39 40             	[r0 + 12] = r1			  ## analog.c:1070:22
 1e172b0:    31 40             	r1 = [r0 + 12]			  ## analog.c:1071:22
 1e172b2:    31 fd 7c 1a       	r1 = r1 & 4294935551			  ## analog.c:1071:22
 1e172b6:    39 40             	[r0 + 12] = r1			  ## analog.c:1071:22
 1e172b8:    41 40             	r1 = [r0 + 16]			  ## analog.c:1072:22
 1e172ba:    71 b1             	r1 &= 4294967291			  ## analog.c:1072:22
 1e172bc:    49 40             	[r0 + 16] = r1			  ## analog.c:1072:22
 1e172be:    41 40             	r1 = [r0 + 16]			  ## analog.c:1073:22
 1e172c0:    71 b8             	r1 &= 4294901759			  ## analog.c:1073:22
 1e172c2:    49 40             	[r0 + 16] = r1			  ## analog.c:1073:22
 1e172c4:    31 40             	r1 = [r0 + 12]			  ## analog.c:1076:22
 1e172c6:    c2 ff 00 04 16 00 	r2 = 1442816 <uECC_vli_cmp_unsafe+0x59404 : 160400 >			  ## analog.c:1076:22
 1e172cc:    51 b4             	r1 |= r2			  ## analog.c:1076:22
 1e172ce:    39 40             	[r0 + 12] = r1			  ## analog.c:1076:22
 1e172d0:    04 f4 05 09       	[r0 + 16] |= 5			  ## analog.c:1079:22
 1e172d4:    04 f4 01 0b       	[r0 + 16] |= 65536			  ## analog.c:1082:22
 1e172d8:    03 f4 01 0b       	[r0 + 12] |= 65536			  ## analog.c:1084:22
 1e172dc:    05 f4 0f 09       	[r0 + 20] |= 15			  ## analog.c:1089:22
 1e172e0:    51 40             	r1 = [r0 + 20]			  ## analog.c:1094:22
 1e172e2:    c2 ff 80 c0 00 00 	r2 = 49280 <_nv_pre_end+0x580 : c080 >			  ## analog.c:1094:22
 1e172e8:    51 b4             	r1 |= r2			  ## analog.c:1094:22
 1e172ea:    59 40             	[r0 + 20] = r1			  ## analog.c:1094:22
 1e172ec:    61 40             	r1 = [r0 + 24]			  ## analog.c:1098:22
 1e172ee:    69 40             	[r0 + 24] = r1			  ## analog.c:1098:22
 1e172f0:    71 40             	r1 = [r0 + 28]			  ## analog.c:1100:22
 1e172f2:    c2 ff 10 00 18 00 	r2 = 1572880 <uECC_vli_cmp_unsafe+0x79014 : 180010 >			  ## analog.c:1100:22
 1e172f8:    51 b4             	r1 |= r2			  ## analog.c:1100:22
 1e172fa:    79 40             	[r0 + 28] = r1			  ## analog.c:1100:22
 1e172fc:    30 00             	pc = [sp++]			  ## analog.c:1112:1


vco_lock_trim:
 1e172fe:    7f 01             	[--sp] = {rets, r15-r4}			  ## analog.c:1405:0
 1e17300:    fe 0b             	sp += -4			  ## analog.c:1405:0
 1e17302:    c4 ff 00 19 1e 00 	r4 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >			  ## analog.c:1405:0
 1e17308:    0e f6 00 40       	r14 = [r4 + 0]			  ## analog.c:1415:26
 1e1730c:    0f f6 04 40       	r15 = [r4 + 4]			  ## analog.c:1416:26
 1e17310:    0d f6 08 40       	r13 = [r4 + 8]			  ## analog.c:1417:26
 1e17314:    09 f6 0c 40       	r9 = [r4 + 12]			  ## analog.c:1418:26
 1e17318:    0a f6 10 40       	r10 = [r4 + 16]			  ## analog.c:1419:26
 1e1731c:    0b f6 14 40       	r11 = [r4 + 20]			  ## analog.c:1420:26
 1e17320:    0c f6 18 40       	r12 = [r4 + 24]			  ## analog.c:1421:26
 1e17324:    70 48             	r0 = [r4 + 28]			  ## analog.c:1422:26
 1e17326:    08 02             	[sp] = r0			  ## analog.c:1428:5
 1e17328:    aa 17             	call -172 <txtrim_analog_init : 1e1727e >			  ## analog.c:1428:5
 1e1732a:    05 70             	r5 = 0
 1e1732c:    c1 ff c0 fd 1c 00 	r1 = 1899968 <uECC_vli_cmp_unsafe+0xC8DC4 : 1cfdc0 >
 1e17332:    0d 42             	[r1 + 0] = r5			  ## analog.c:1430:45
 1e17334:    1d 42             	[r1 + 4] = r5			  ## analog.c:1430:31
 1e17336:    2d 42             	[r1 + 8] = r5			  ## analog.c:1430:17
 1e17338:    13 fc e0 fe       	r3 = r1 + -288			  ## analog.c:1430:17
 1e1733c:    00 f4 01 3b       	[r3 + 0] |= 65536			  ## analog.c:1432:20
 1e17340:    20 70             	r0 = 2			  ## analog.c:1433:5
 1e17342:    8f f3 89 6c       	call 2021650 <delay : 4c58 >			  ## analog.c:1433:5
 1e17346:    12 fc 50 fe       	r2 = r1 + -432			  ## analog.c:1433:5
 1e1734a:    1b f4 02 29       	[r2 + 108] |= 2			  ## analog.c:1434:13
 1e1734e:    20 70             	r0 = 2			  ## analog.c:1435:5
 1e17350:    8f f3 82 6c       	call 2021636 <delay : 4c58 >			  ## analog.c:1435:5
 1e17354:    1b f4 04 29       	[r2 + 108] |= 4			  ## analog.c:1436:13
 1e17358:    20 70             	r0 = 2			  ## analog.c:1437:5
 1e1735a:    8f f3 7d 6c       	call 2021626 <delay : 4c58 >			  ## analog.c:1437:5
 1e1735e:    02 f4 15 19       	[r1 + 8] |= 21			  ## analog.c:1438:17
 1e17362:    20 70             	r0 = 2			  ## analog.c:1439:5
 1e17364:    8f f3 78 6c       	call 2021616 <delay : 4c58 >			  ## analog.c:1439:5
 1e17368:    02 f4 02 1c       	[r1 + 8] |= 33554432			  ## analog.c:1440:17
 1e1736c:    20 70             	r0 = 2			  ## analog.c:1441:5
 1e1736e:    8f f3 73 6c       	call 2021606 <delay : 4c58 >			  ## analog.c:1441:5
 1e17372:    20 42             	r0 = [r1 + 8]			  ## analog.c:1442:17
 1e17374:    28 42             	[r1 + 8] = r0			  ## analog.c:1442:17
 1e17376:    20 70             	r0 = 2			  ## analog.c:1443:5
 1e17378:    8f f3 6e 6c       	call 2021596 <delay : 4c58 >			  ## analog.c:1443:5
 1e1737c:    20 42             	r0 = [r1 + 8]			  ## analog.c:1444:17
 1e1737e:    28 42             	[r1 + 8] = r0			  ## analog.c:1444:17
 1e17380:    20 70             	r0 = 2			  ## analog.c:1445:5
 1e17382:    8f f3 69 6c       	call 2021586 <delay : 4c58 >			  ## analog.c:1445:5
 1e17386:    00 f4 2a 19       	[r1 + 0] |= 42			  ## analog.c:1446:17
 1e1738a:    20 70             	r0 = 2			  ## analog.c:1447:5
 1e1738c:    8f f3 64 6c       	call 2021576 <delay : 4c58 >			  ## analog.c:1447:5
 1e17390:    00 f4 01 1a       	[r1 + 0] |= 256			  ## analog.c:1448:17
 1e17394:    20 70             	r0 = 2			  ## analog.c:1449:5
 1e17396:    8f f3 5f 6c       	call 2021566 <delay : 4c58 >			  ## analog.c:1449:5
 1e1739a:    00 42             	r0 = [r1 + 0]			  ## analog.c:1450:17
 1e1739c:    f0 b4             	r0 &= 4294966783			  ## analog.c:1450:17
 1e1739e:    08 42             	[r1 + 0] = r0			  ## analog.c:1450:17
 1e173a0:    20 70             	r0 = 2			  ## analog.c:1451:5
 1e173a2:    8f f3 59 6c       	call 2021554 <delay : 4c58 >			  ## analog.c:1451:5
 1e173a6:    00 f4 0c 1a       	[r1 + 0] |= 3072			  ## analog.c:1452:17
 1e173aa:    20 70             	r0 = 2			  ## analog.c:1453:5
 1e173ac:    8f f3 54 6c       	call 2021544 <delay : 4c58 >			  ## analog.c:1453:5
 1e173b0:    00 f4 01 1b       	[r1 + 0] |= 65536			  ## analog.c:1454:17
 1e173b4:    20 70             	r0 = 2			  ## analog.c:1455:5
 1e173b6:    8f f3 4f 6c       	call 2021534 <delay : 4c58 >			  ## analog.c:1455:5
 1e173ba:    00 f4 02 1b       	[r1 + 0] |= 131072			  ## analog.c:1456:17
 1e173be:    20 70             	r0 = 2			  ## analog.c:1457:5
 1e173c0:    8f f3 4a 6c       	call 2021524 <delay : 4c58 >			  ## analog.c:1457:5
 1e173c4:    00 f4 20 1b       	[r1 + 0] |= 2097152			  ## analog.c:1458:17
 1e173c8:    20 70             	r0 = 2			  ## analog.c:1459:5
 1e173ca:    8f f3 45 6c       	call 2021514 <delay : 4c58 >			  ## analog.c:1459:5
 1e173ce:    01 f4 80 19       	[r1 + 4] |= 128			  ## analog.c:1460:17
 1e173d2:    20 70             	r0 = 2			  ## analog.c:1461:5
 1e173d4:    8f f3 40 6c       	call 2021504 <delay : 4c58 >			  ## analog.c:1461:5
 1e173d8:    01 f4 40 19       	[r1 + 4] |= 64			  ## analog.c:1462:17
 1e173dc:    20 70             	r0 = 2			  ## analog.c:1463:5
 1e173de:    8f f3 3b 6c       	call 2021494 <delay : 4c58 >			  ## analog.c:1463:5
 1e173e2:    05 f4 08 2a       	[r2 + 20] |= 2048			  ## analog.c:1464:17
 1e173e6:    00 44             	r0 = [r2 + 0]			  ## analog.c:1466:17
 1e173e8:    30 fd ff 0a       	r0 = r0 & 4294902015			  ## analog.c:1466:17
 1e173ec:    08 44             	[r2 + 0] = r0			  ## analog.c:1466:17
 1e173ee:    00 44             	r0 = [r2 + 0]			  ## analog.c:1467:17
 1e173f0:    08 44             	[r2 + 0] = r0			  ## analog.c:1467:17
 1e173f2:    00 44             	r0 = [r2 + 0]			  ## analog.c:1468:17
 1e173f4:    30 fd ff 09       	r0 = r0 & 4294967040			  ## analog.c:1468:17
 1e173f8:    08 44             	[r2 + 0] = r0			  ## analog.c:1468:17
 1e173fa:    00 f4 78 29       	[r2 + 0] |= 120			  ## analog.c:1469:17
 1e173fe:    a0 70             	r0 = 10			  ## analog.c:1471:5
 1e17400:    8f f3 2a 6c       	call 2021460 <delay : 4c58 >			  ## analog.c:1471:5
 1e17404:    00 42             	r0 = [r1 + 0]			  ## analog.c:1474:21
 1e17406:    f0 b8             	r0 &= 4294836223			  ## analog.c:1474:21
 1e17408:    08 42             	[r1 + 0] = r0			  ## analog.c:1474:21
 1e1740a:    20 70             	r0 = 2			  ## analog.c:1475:9
 1e1740c:    8f f3 24 6c       	call 2021448 <delay : 4c58 >			  ## analog.c:1475:9
 1e17410:    00 f4 02 1b       	[r1 + 0] |= 131072			  ## analog.c:1476:21
 1e17414:    30 42             	r0 = [r1 + 12]			  ## analog.c:1477:17
 1e17416:    3a f3 fd 0f       	if ((r0 & 67108864) != 0) goto -6 <vco_lock_trim+0x116 : 1e17414 >			  ## analog.c:1477:9
 1e1741a:    15 80             	r5 += 1			  ## analog.c:1473:25
 1e1741c:    40 05             	r0 = r5.b0 (u)			  ## analog.c:1473:25
 1e1741e:    30 e0 f1 1f       	if (r0 != 3) goto -30 <vco_lock_trim+0x106 : 1e17404 >			  ## analog.c:1473:25
 1e17422:    05 70             	r5 = 0
 1e17424:    06 70             	r6 = 0
 1e17426:    00 42             	r0 = [r1 + 0]			  ## analog.c:1482:21
 1e17428:    f0 b8             	r0 &= 4294836223			  ## analog.c:1482:21
 1e1742a:    08 42             	[r1 + 0] = r0			  ## analog.c:1482:21
 1e1742c:    20 70             	r0 = 2			  ## analog.c:1483:9
 1e1742e:    8f f3 13 6c       	call 2021414 <delay : 4c58 >			  ## analog.c:1483:9
 1e17432:    00 f4 02 1b       	[r1 + 0] |= 131072			  ## analog.c:1484:21
 1e17436:    30 42             	r0 = [r1 + 12]			  ## analog.c:1485:17
 1e17438:    3a f3 fd 0f       	if ((r0 & 67108864) != 0) goto -6 <vco_lock_trim+0x138 : 1e17436 >			  ## analog.c:1485:9
 1e1743c:    40 42             	r0 = [r1 + 16]			  ## analog.c:1487:20
 1e1743e:    57 42             	r7 = [r1 + 20]			  ## analog.c:1489:20
 1e17440:    b0 fd 40 00       	r0 = sextra(r0, p:8, l:16)			  ## analog.c:1488:25
 1e17444:    80 fe 00 50       	r5 += r0 * r0			  ## analog.c:1491:34
 1e17448:    b0 fd 40 07       	r0 = sextra(r7, p:8, l:16)			  ## analog.c:1490:25
 1e1744c:    16 80             	r6 += 1			  ## analog.c:1480:26
 1e1744e:    87 05             	r7 = r6.b0 (u)			  ## analog.c:1480:26
 1e17450:    80 fe 00 50       	r5 += r0 * r0			  ## analog.c:1491:15
 1e17454:    97 e1 e7 1f       	if (r7 != 25) goto -50 <vco_lock_trim+0x128 : 1e17426 >
 1e17458:    00 44             	r0 = [r2 + 0]			  ## analog.c:1497:17
 1e1745a:    30 fd ff 0b       	r0 = r0 & 4278255615			  ## analog.c:1497:17
 1e1745e:    08 44             	[r2 + 0] = r0			  ## analog.c:1497:17
 1e17460:    c0 ff 1c 2a 00 00 	r0 = 10780 <tws_bulk_pool_end : 2a1c >			  ## analog.c:1502:20
 1e17466:    c6 60             	r6 = b[r0 + 12] (u)			  ## analog.c:1498:20
 1e17468:    07 44             	r7 = [r2 + 0]			  ## analog.c:1498:17
 1e1746a:    36 c4             	r6 = r6 << 16			  ## analog.c:1498:20
 1e1746c:    56 be             	r6 |= r7			  ## analog.c:1498:17
 1e1746e:    0e 44             	[r2 + 0] = r6			  ## analog.c:1498:17
 1e17470:    06 44             	r6 = [r2 + 0]			  ## analog.c:1499:17
 1e17472:    36 fd ff 6a       	r6 = r6 & 4294902015			  ## analog.c:1499:17
 1e17476:    0e 44             	[r2 + 0] = r6			  ## analog.c:1499:17
 1e17478:    76 60             	r6 = b[r0 + 7] (u)			  ## analog.c:1500:20
 1e1747a:    67 60             	r7 = b[r0 + 6] (u)			  ## analog.c:1500:20
 1e1747c:    08 f6 00 20       	r8 = [r2 + 0]			  ## analog.c:1500:17
 1e17480:    d8 fd 40 76       	r7 <= insert(r6, p:8, l:24)			  ## analog.c:1500:20
 1e17484:    3e c2             	r6 = r7 << 8			  ## analog.c:1500:20
 1e17486:    a6 05             	r6 = r6.l (u)			  ## analog.c:1500:20
 1e17488:    e0 fd 80 66       	r6 = r6 | r8			  ## analog.c:1500:17
 1e1748c:    0e 44             	[r2 + 0] = r6			  ## analog.c:1500:17
 1e1748e:    06 44             	r6 = [r2 + 0]			  ## analog.c:1501:17
 1e17490:    36 fd ff 69       	r6 = r6 & 4294967040			  ## analog.c:1501:17
 1e17494:    0e 44             	[r2 + 0] = r6			  ## analog.c:1501:17
 1e17496:    40 60             	r0 = b[r0 + 4] (u)			  ## analog.c:1502:20
 1e17498:    06 44             	r6 = [r2 + 0]			  ## analog.c:1502:17
 1e1749a:    50 bc             	r0 |= r6			  ## analog.c:1502:17
 1e1749c:    08 44             	[r2 + 0] = r0			  ## analog.c:1502:17
 1e1749e:    00 46             	r0 = [r3 + 0]			  ## analog.c:1503:20
 1e174a0:    70 b8             	r0 &= 4294901759			  ## analog.c:1503:20
 1e174a2:    08 46             	[r3 + 0] = r0			  ## analog.c:1503:20
 1e174a4:    20 70             	r0 = 2			  ## analog.c:1504:5
 1e174a6:    8f f3 d7 6b       	call 2021294 <delay : 4c58 >			  ## analog.c:1504:5
 1e174aa:    b0 45             	r0 = [r2 + 108]			  ## analog.c:1505:13
 1e174ac:    f0 b0             	r0 &= 4294967293			  ## analog.c:1505:13
 1e174ae:    b8 45             	[r2 + 108] = r0			  ## analog.c:1505:13
 1e174b0:    20 70             	r0 = 2			  ## analog.c:1506:5
 1e174b2:    8f f3 d1 6b       	call 2021282 <delay : 4c58 >			  ## analog.c:1506:5
 1e174b6:    b0 45             	r0 = [r2 + 108]			  ## analog.c:1507:13
 1e174b8:    70 b1             	r0 &= 4294967291			  ## analog.c:1507:13
 1e174ba:    b8 45             	[r2 + 108] = r0			  ## analog.c:1507:13
 1e174bc:    20 70             	r0 = 2			  ## analog.c:1508:5
 1e174be:    8f f3 cb 6b       	call 2021270 <delay : 4c58 >			  ## analog.c:1508:5
 1e174c2:    00 70             	r0 = 0			  ## analog.c:1508:5
 1e174c4:    08 42             	[r1 + 0] = r0			  ## analog.c:1509:45
 1e174c6:    18 42             	[r1 + 4] = r0			  ## analog.c:1509:31
 1e174c8:    28 42             	[r1 + 8] = r0			  ## analog.c:1509:17
 1e174ca:    20 70             	r0 = 2			  ## analog.c:1510:5
 1e174cc:    8f f3 c4 6b       	call 2021256 <delay : 4c58 >			  ## analog.c:1510:5
 1e174d0:    50 44             	r0 = [r2 + 20]			  ## analog.c:1511:17
 1e174d2:    f0 b5             	r0 &= 4294965247			  ## analog.c:1511:17
 1e174d4:    58 44             	[r2 + 20] = r0			  ## analog.c:1511:17
 1e174d6:    1e f6 00 40       	[r4 + 0] = r14			  ## analog.c:1513:22
 1e174da:    1f f6 04 40       	[r4 + 4] = r15			  ## analog.c:1514:22
 1e174de:    1d f6 08 40       	[r4 + 8] = r13			  ## analog.c:1515:22
 1e174e2:    19 f6 0c 40       	[r4 + 12] = r9			  ## analog.c:1516:22
 1e174e6:    1a f6 10 40       	[r4 + 16] = r10			  ## analog.c:1517:22
 1e174ea:    1b f6 14 40       	[r4 + 20] = r11			  ## analog.c:1518:22
 1e174ee:    1c f6 18 40       	[r4 + 24] = r12			  ## analog.c:1519:22
 1e174f2:    90 71             	r0 = 25			  ## analog.c:1495:10
 1e174f4:    c0 fe 00 05       	r0 = r5 / r0 (u)			  ## analog.c:1495:10
 1e174f8:    01 02             	r1 = [sp]			  ## analog.c:1520:22
 1e174fa:    79 48             	[r4 + 28] = r1			  ## analog.c:1520:22
 1e174fc:    02 0a             	sp += 4			  ## analog.c:1520:22
 1e174fe:    5f 01             	{pc, r15-r4} = [sp++]			  ## analog.c:1522:5


set_ldo_trim_res:
 1e17500:    7f 01             	[--sp] = {rets, r15-r4}			  ## analog.c:3712:0
 1e17502:    04 08             	r4 = r0			  ## analog.c:3712:0
 1e17504:    08 f9 09 40       	r8 = b[r4 + 9] (u)			  ## analog.c:3740:13
 1e17508:    09 f9 07 40       	r9 = b[r4 + 7] (u)			  ## analog.c:3737:13
 1e1750c:    0a f9 06 40       	r10 = b[r4 + 6] (u)			  ## analog.c:3734:13
 1e17510:    0b f9 04 40       	r11 = b[r4 + 4] (u)			  ## analog.c:3728:13
 1e17514:    0c f9 03 40       	r12 = b[r4 + 3] (u)			  ## analog.c:3725:13
 1e17518:    26 68             	r6 = b[r4 + 2] (u)			  ## analog.c:3722:13
 1e1751a:    0e f9 01 40       	r14 = b[r4 + 1] (u)			  ## analog.c:3719:13
 1e1751e:    0f f9 00 40       	r15 = b[r4 + 0] (u)			  ## analog.c:3716:13
 1e17522:    40 71             	r0 = 20			  ## analog.c:3745:5
 1e17524:    8f f3 98 6b       	call 2021168 <delay : 4c58 >			  ## analog.c:3745:5
 1e17528:    10 70             	r0 = 1			  ## analog.c:3745:5
 1e1752a:    12 70             	r2 = 1			  ## analog.c:3716:31
 1e1752c:    0f e0 01 00       	if (r15 == 0) goto 2 <set_ldo_trim_res+0x32 : 1e17532 >			  ## analog.c:3716:31
 1e17530:    02 70             	r2 = 0			  ## analog.c:3716:31
 1e17532:    21 70             	r1 = 2
 1e17534:    0f e0 01 00       	if (r15 == 0) goto 2 <set_ldo_trim_res+0x3A : 1e1753a >
 1e17538:    11 70             	r1 = 1			  ## analog.c:3720:18
 1e1753a:    0e e0 01 00       	if (r14 == 0) goto 2 <set_ldo_trim_res+0x40 : 1e17540 >
 1e1753e:    21 08             	r1 = r2			  ## analog.c:3719:9
 1e17540:    12 70             	r2 = 1			  ## analog.c:3722:13
 1e17542:    01 2c             	if (r6 == 0) goto 2 <set_ldo_trim_res+0x46 : 1e17546 >			  ## analog.c:3722:13
 1e17544:    02 70             	r2 = 0			  ## analog.c:3722:13
 1e17546:    21 09             	r1 += r2			  ## analog.c:3722:9
 1e17548:    12 70             	r2 = 1			  ## analog.c:3725:13
 1e1754a:    0c e0 01 00       	if (r12 == 0) goto 2 <set_ldo_trim_res+0x50 : 1e17550 >			  ## analog.c:3725:13
 1e1754e:    02 70             	r2 = 0			  ## analog.c:3725:13
 1e17550:    21 09             	r1 += r2			  ## analog.c:3725:9
 1e17552:    12 70             	r2 = 1			  ## analog.c:3728:13
 1e17554:    0b e0 01 00       	if (r11 == 0) goto 2 <set_ldo_trim_res+0x5A : 1e1755a >			  ## analog.c:3728:13
 1e17558:    02 70             	r2 = 0			  ## analog.c:3728:13
 1e1755a:    21 09             	r1 += r2			  ## analog.c:3728:9
 1e1755c:    12 70             	r2 = 1			  ## analog.c:3734:13
 1e1755e:    0a e0 01 00       	if (r10 == 0) goto 2 <set_ldo_trim_res+0x64 : 1e17564 >			  ## analog.c:3734:13
 1e17562:    02 70             	r2 = 0			  ## analog.c:3734:13
 1e17564:    21 09             	r1 += r2			  ## analog.c:3734:9
 1e17566:    12 70             	r2 = 1			  ## analog.c:3737:13
 1e17568:    09 e0 01 00       	if (r9 == 0) goto 2 <set_ldo_trim_res+0x6E : 1e1756e >			  ## analog.c:3737:13
 1e1756c:    02 70             	r2 = 0			  ## analog.c:3737:13
 1e1756e:    21 09             	r1 += r2			  ## analog.c:3737:9
 1e17570:    08 e0 01 00       	if (r8 == 0) goto 2 <set_ldo_trim_res+0x76 : 1e17576 >
 1e17574:    00 70             	r0 = 0			  ## analog.c:3740:13
 1e17576:    10 09             	r0 += r1			  ## analog.c:3740:9
 1e17578:    20 e0 a2 80       	if (r0 > 2) goto 324 <set_ldo_trim_res+0x1C0 : 1e176c0 >
 1e1757c:    c0 16             	call -640 <vco_lock_trim : 1e172fe >			  ## analog.c:3762:17
 1e1757e:    c1 68             	r1 = b[r4 + 12] (u)			  ## analog.c:3764:17
 1e17580:    b5 68             	r5 = b[r4 + 11] (u)			  ## analog.c:3764:17
 1e17582:    0d 08             	r13 = r0			  ## analog.c:3762:17
 1e17584:    c8 fd 40 51       	r5 <= insert(r1, p:8, l:8)			  ## analog.c:3764:17
 1e17588:    c7 ff 00 19 1e 00 	r7 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >			  ## analog.c:3764:17
 1e1758e:    00 f3 0a 50       	if ((r5 & 1) == 0) goto 20 <set_ldo_trim_res+0xA6 : 1e175a6 >			  ## analog.c:3764:17
 1e17592:    b0 4e             	r0 = [r7 + 44]			  ## analog.c:3766:31
 1e17594:    30 fd 1c 0a       	r0 = r0 & 4294960127			  ## analog.c:3766:31
 1e17598:    b8 4e             	[r7 + 44] = r0			  ## analog.c:3766:31
 1e1759a:    b0 4e             	r0 = [r7 + 44]			  ## analog.c:3767:31
 1e1759c:    21 fd 07 f9       	r1 = r15 & 7			  ## analog.c:3767:34
 1e175a0:    89 c2             	r1 = r1 << 10			  ## analog.c:3767:34
 1e175a2:    50 b2             	r0 |= r1			  ## analog.c:3767:31
 1e175a4:    b8 4e             	[r7 + 44] = r0			  ## analog.c:3767:31
 1e175a6:    01 f3 0a 50       	if ((r5 & 2) == 0) goto 20 <set_ldo_trim_res+0xBE : 1e175be >
 1e175aa:    b0 4e             	r0 = [r7 + 44]			  ## analog.c:3777:31
 1e175ac:    30 fd e0 0a       	r0 = r0 & 4294909951			  ## analog.c:3777:31
 1e175b0:    b8 4e             	[r7 + 44] = r0			  ## analog.c:3777:31
 1e175b2:    b0 4e             	r0 = [r7 + 44]			  ## analog.c:3778:31
 1e175b4:    21 fd 07 e9       	r1 = r14 & 7			  ## analog.c:3778:34
 1e175b8:    49 c3             	r1 = r1 << 13			  ## analog.c:3778:34
 1e175ba:    50 b2             	r0 |= r1			  ## analog.c:3778:31
 1e175bc:    b8 4e             	[r7 + 44] = r0			  ## analog.c:3778:31
 1e175be:    02 f3 0a 50       	if ((r5 & 4) == 0) goto 20 <set_ldo_trim_res+0xD6 : 1e175d6 >
 1e175c2:    b0 4e             	r0 = [r7 + 44]			  ## analog.c:3788:31
 1e175c4:    30 fd 07 0b       	r0 = r0 & 4294508543			  ## analog.c:3788:31
 1e175c8:    b8 4e             	[r7 + 44] = r0			  ## analog.c:3788:31
 1e175ca:    b0 4e             	r0 = [r7 + 44]			  ## analog.c:3789:31
 1e175cc:    21 fd 07 69       	r1 = r6 & 7			  ## analog.c:3789:34
 1e175d0:    09 c4             	r1 = r1 << 16			  ## analog.c:3789:34
 1e175d2:    50 b2             	r0 |= r1			  ## analog.c:3789:31
 1e175d4:    b8 4e             	[r7 + 44] = r0			  ## analog.c:3789:31
 1e175d6:    03 f3 0a 50       	if ((r5 & 8) == 0) goto 20 <set_ldo_trim_res+0xEE : 1e175ee >
 1e175da:    a0 4e             	r0 = [r7 + 40]			  ## analog.c:3799:31
 1e175dc:    30 fd 07 0c       	r0 = r0 & 4177526783			  ## analog.c:3799:31
 1e175e0:    a8 4e             	[r7 + 40] = r0			  ## analog.c:3799:31
 1e175e2:    a0 4e             	r0 = [r7 + 40]			  ## analog.c:3800:31
 1e175e4:    21 fd 07 c9       	r1 = r12 & 7			  ## analog.c:3800:34
 1e175e8:    09 c6             	r1 = r1 << 24			  ## analog.c:3800:34
 1e175ea:    50 b2             	r0 |= r1			  ## analog.c:3800:31
 1e175ec:    a8 4e             	[r7 + 40] = r0			  ## analog.c:3800:31
 1e175ee:    04 f3 0b 50       	if ((r5 & 16) == 0) goto 22 <set_ldo_trim_res+0x108 : 1e17608 >
 1e175f2:    80 4e             	r0 = [r7 + 32]			  ## analog.c:3810:30
 1e175f4:    30 fd 1c 09       	r0 = r0 & 4294967267			  ## analog.c:3810:30
 1e175f8:    88 4e             	[r7 + 32] = r0			  ## analog.c:3810:30
 1e175fa:    80 4e             	r0 = [r7 + 32]			  ## analog.c:3811:30
 1e175fc:    f0 fd 10 1b       	r1 = r11 << 2			  ## analog.c:3811:33
 1e17600:    21 fd 1c 19       	r1 = r1 & 28			  ## analog.c:3811:33
 1e17604:    50 b2             	r0 |= r1			  ## analog.c:3811:30
 1e17606:    88 4e             	[r7 + 32] = r0			  ## analog.c:3811:30
 1e17608:    06 f3 0a 50       	if ((r5 & 64) == 0) goto 20 <set_ldo_trim_res+0x120 : 1e17620 >
 1e1760c:    40 4e             	r0 = [r7 + 16]			  ## analog.c:3832:30
 1e1760e:    30 fd c0 0b       	r0 = r0 & 4282384383			  ## analog.c:3832:30
 1e17612:    48 4e             	[r7 + 16] = r0			  ## analog.c:3832:30
 1e17614:    40 4e             	r0 = [r7 + 16]			  ## analog.c:3833:30
 1e17616:    21 fd 03 a9       	r1 = r10 & 3			  ## analog.c:3833:33
 1e1761a:    89 c5             	r1 = r1 << 22			  ## analog.c:3833:33
 1e1761c:    50 b2             	r0 |= r1			  ## analog.c:3833:30
 1e1761e:    48 4e             	[r7 + 16] = r0			  ## analog.c:3833:30
 1e17620:    50 05             	r0 = r5.b0 (s)			  ## analog.c:3841:13
 1e17622:    f0 ef 0a c0       	ifs (r0 > -1) goto 20 <set_ldo_trim_res+0x13A : 1e1763a >			  ## analog.c:3841:13
 1e17626:    60 4e             	r0 = [r7 + 24]			  ## analog.c:3843:30
 1e17628:    30 fd 60 02       	r0 = r0 & 4294852607			  ## analog.c:3843:30
 1e1762c:    68 4e             	[r7 + 24] = r0			  ## analog.c:3843:30
 1e1762e:    60 4e             	r0 = [r7 + 24]			  ## analog.c:3844:30
 1e17630:    21 fd 07 99       	r1 = r9 & 7			  ## analog.c:3844:33
 1e17634:    89 c3             	r1 = r1 << 14			  ## analog.c:3844:33
 1e17636:    50 b2             	r0 |= r1			  ## analog.c:3844:30
 1e17638:    68 4e             	[r7 + 24] = r0			  ## analog.c:3844:30
 1e1763a:    09 f3 0a 50       	if ((r5 & 512) == 0) goto 20 <set_ldo_trim_res+0x152 : 1e17652 >
 1e1763e:    00 4e             	r0 = [r7 + 0]			  ## analog.c:3855:30
 1e17640:    30 fd e0 0b       	r0 = r0 & 4280287231			  ## analog.c:3855:30
 1e17644:    08 4e             	[r7 + 0] = r0			  ## analog.c:3855:30
 1e17646:    00 4e             	r0 = [r7 + 0]			  ## analog.c:3856:30
 1e17648:    21 fd 07 89       	r1 = r8 & 7			  ## analog.c:3856:33
 1e1764c:    49 c5             	r1 = r1 << 21			  ## analog.c:3856:33
 1e1764e:    50 b2             	r0 |= r1			  ## analog.c:3856:30
 1e17650:    08 4e             	[r7 + 0] = r0			  ## analog.c:3856:30
 1e17652:    20 73             	r0 = 50			  ## analog.c:3864:9
 1e17654:    8f f3 00 6b       	call 2020864 <delay : 4c58 >			  ## analog.c:3864:9
 1e17658:    52 16             	call -860 <vco_lock_trim : 1e172fe >			  ## analog.c:3865:17
 1e1765a:    90 fb 00 0d       	r0 = r13 - r0			  ## analog.c:3871:24
 1e1765e:    01 fb c1 12       	r1 = 4801 <_cpu0_sstack_begin+0x271 : 12c1 >			  ## analog.c:3871:41
 1e17662:    10 f2 1e b0       	ifs (r0 < r1) goto 60 <set_ldo_trim_res+0x1A2 : 1e176a2 >			  ## analog.c:3871:41
 1e17666:    02 f3 1c 50       	if ((r5 & 4) == 0) goto 56 <set_ldo_trim_res+0x1A2 : 1e176a2 >
 1e1766a:    80 05             	r0 = r6.b0 (u)			  ## analog.c:3871:81
 1e1766c:    50 e0 28 80       	if (r0 > 5) goto 80 <set_ldo_trim_res+0x1C0 : 1e176c0 >			  ## analog.c:3871:81
 1e17670:    16 80             	r6 += 1			  ## analog.c:3874:34
 1e17672:    2e 68             	b[r4 + 2] = r6			  ## analog.c:3874:34
 1e17674:    b0 4e             	r0 = [r7 + 44]			  ## analog.c:3875:35
 1e17676:    30 fd 07 0b       	r0 = r0 & 4294508543			  ## analog.c:3875:35
 1e1767a:    b8 4e             	[r7 + 44] = r0			  ## analog.c:3875:35
 1e1767c:    b0 4e             	r0 = [r7 + 44]			  ## analog.c:3876:35
 1e1767e:    21 fd 07 69       	r1 = r6 & 7			  ## analog.c:3876:38
 1e17682:    09 c4             	r1 = r1 << 16			  ## analog.c:3876:38
 1e17684:    50 b2             	r0 |= r1			  ## analog.c:3876:35
 1e17686:    b8 4e             	[r7 + 44] = r0			  ## analog.c:3876:35
 1e17688:    20 73             	r0 = 50			  ## analog.c:3878:17
 1e1768a:    8f f3 e5 6a       	call 2020810 <delay : 4c58 >			  ## analog.c:3878:17
 1e1768e:    37 16             	call -914 <vco_lock_trim : 1e172fe >			  ## analog.c:3879:25
 1e17690:    01 08             	r1 = r0			  ## analog.c:3879:25
 1e17692:    a0 70             	r0 = 10			  ## analog.c:3882:17
 1e17694:    8f f3 e0 6a       	call 2020800 <delay : 4c58 >			  ## analog.c:3882:17
 1e17698:    90 fb 10 0d       	r0 = r13 - r1			  ## analog.c:3871:24
 1e1769c:    2c ff 96 00 e4 ff 	ifs (r0 > 4800) goto -56 <set_ldo_trim_res+0x16A : 1e1766a >			  ## analog.c:3871:24
 1e176a2:    80 05             	r0 = r6.b0 (u)			  ## analog.c:3884:38
 1e176a4:    50 e0 0c 80       	if (r0 > 5) goto 24 <set_ldo_trim_res+0x1C0 : 1e176c0 >			  ## analog.c:3884:38
 1e176a8:    b0 4e             	r0 = [r7 + 44]			  ## analog.c:3885:39
 1e176aa:    30 fd 07 0b       	r0 = r0 & 4294508543			  ## analog.c:3885:39
 1e176ae:    b8 4e             	[r7 + 44] = r0			  ## analog.c:3885:39
 1e176b0:    b0 4e             	r0 = [r7 + 44]			  ## analog.c:3886:39
 1e176b2:    31 c4             	r1 = r6 << 16			  ## analog.c:3886:42
 1e176b4:    41 fb 01 1b       	r1 = r1 + 65536			  ## analog.c:3886:42
 1e176b8:    21 fd 07 1b       	r1 = r1 & 458752			  ## analog.c:3886:42
 1e176bc:    50 b2             	r0 |= r1			  ## analog.c:3886:39
 1e176be:    b8 4e             	[r7 + 44] = r0			  ## analog.c:3886:39
 1e176c0:    5f 01             	{pc, r15-r4} = [sp++]			  ## analog.c:3897:1


rxtrim_analog_init:
 1e176c2:    34 00             	[--sp] = rets			  ## analog.c:606:0
 1e176c4:    c3 14             	call -1658 <bt_analog_part_init : 1e1704c >			  ## analog.c:607:5
 1e176c6:    c0 ff 00 19 1e 00 	r0 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >			  ## analog.c:607:5
 1e176cc:    01 40             	r1 = [r0 + 0]			  ## analog.c:609:22
 1e176ce:    02 fb 3f f8       	r2 = -1985 <bank_code_load_addr+0x1DC247 : 1fff83f >			  ## analog.c:609:22
 1e176d2:    51 b5             	r1 &= r2			  ## analog.c:609:22
 1e176d4:    09 40             	[r0 + 0] = r1			  ## analog.c:609:22
 1e176d6:    01 40             	r1 = [r0 + 0]			  ## analog.c:610:22
 1e176d8:    02 fb c0 03       	r2 = 960 <NVRAM_DATA_SIZE+0x7C : 3c0 >			  ## analog.c:610:22
 1e176dc:    51 b4             	r1 |= r2			  ## analog.c:610:22
 1e176de:    09 40             	[r0 + 0] = r1			  ## analog.c:610:22
 1e176e0:    61 40             	r1 = [r0 + 24]			  ## analog.c:612:22
 1e176e2:    c2 ff ff ff 1f 00 	r2 = 2097151 <uECC_vli_cmp_unsafe+0xF9003 : 1fffff >			  ## analog.c:612:22
 1e176e8:    51 b5             	r1 &= r2			  ## analog.c:612:22
 1e176ea:    69 40             	[r0 + 24] = r1			  ## analog.c:612:22
 1e176ec:    06 f4 fc 06       	[r0 + 24] |= 132120576			  ## analog.c:613:22
 1e176f0:    21 40             	r1 = [r0 + 8]			  ## analog.c:615:22
 1e176f2:    02 fb 3f fe       	r2 = -449 <bank_code_load_addr+0x1DC847 : 1fffe3f >			  ## analog.c:615:22
 1e176f6:    51 b5             	r1 &= r2			  ## analog.c:615:22
 1e176f8:    29 40             	[r0 + 8] = r1			  ## analog.c:615:22
 1e176fa:    11 40             	r1 = [r0 + 4]			  ## analog.c:616:22
 1e176fc:    31 fd f0 1a       	r1 = r1 & 4294905855			  ## analog.c:616:22
 1e17700:    19 40             	[r0 + 4] = r1			  ## analog.c:616:22
 1e17702:    31 40             	r1 = [r0 + 12]			  ## analog.c:618:22
 1e17704:    c2 ff ff 83 e1 ff 	r2 = 4292969471 <.GJTIE830_1_1_+0x5B3 : 1e183ff >			  ## analog.c:618:22
 1e1770a:    51 b5             	r1 &= r2			  ## analog.c:618:22
 1e1770c:    39 40             	[r0 + 12] = r1			  ## analog.c:618:22
 1e1770e:    21 40             	r1 = [r0 + 8]			  ## analog.c:621:22
 1e17710:    02 fb c0 01       	r2 = 448 <BTCTLER_CONTROLLER_BSS_SIZE : 1c0 >			  ## analog.c:621:22
 1e17714:    51 b4             	r1 |= r2			  ## analog.c:621:22
 1e17716:    29 40             	[r0 + 8] = r1			  ## analog.c:621:22
 1e17718:    01 f4 50 0a       	[r0 + 4] |= 20480			  ## analog.c:622:22
 1e1771c:    31 40             	r1 = [r0 + 12]			  ## analog.c:624:22
 1e1771e:    c2 ff 00 7c 15 00 	r2 = 1408000 <uECC_vli_cmp_unsafe+0x50C04 : 157c00 >			  ## analog.c:624:22
 1e17724:    51 b4             	r1 |= r2			  ## analog.c:624:22
 1e17726:    39 40             	[r0 + 12] = r1			  ## analog.c:624:22
 1e17728:    04 f4 05 09       	[r0 + 16] |= 5			  ## analog.c:628:22
 1e1772c:    04 f4 01 0b       	[r0 + 16] |= 65536			  ## analog.c:631:22
 1e17730:    01 f4 08 0a       	[r0 + 4] |= 2048			  ## analog.c:633:22
 1e17734:    02 f4 01 09       	[r0 + 8] |= 1			  ## analog.c:634:22
 1e17738:    00 f4 0c 0b       	[r0 + 0] |= 786432			  ## analog.c:635:22
 1e1773c:    01 f4 01 09       	[r0 + 4] |= 1			  ## analog.c:638:22
 1e17740:    05 f4 0d 09       	[r0 + 20] |= 13			  ## analog.c:640:22
 1e17744:    51 40             	r1 = [r0 + 20]			  ## analog.c:645:22
 1e17746:    c2 ff 80 c0 00 00 	r2 = 49280 <_nv_pre_end+0x580 : c080 >			  ## analog.c:645:22
 1e1774c:    51 b4             	r1 |= r2			  ## analog.c:645:22
 1e1774e:    59 40             	[r0 + 20] = r1			  ## analog.c:645:22
 1e17750:    06 f4 10 0b       	[r0 + 24] |= 1048576			  ## analog.c:649:22
 1e17754:    30 00             	pc = [sp++]			  ## analog.c:651:1


get_ldo_voltage:
 1e17756:    77 01             	[--sp] = {rets, r7-r4}			  ## analog.c:3362:0
 1e17758:    c7 ff 00 19 1e 00 	r7 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >			  ## analog.c:3362:0
 1e1775e:    01 4e             	r1 = [r7 + 0]			  ## analog.c:3358:5
 1e17760:    04 08             	r4 = r0			  ## analog.c:3358:5
 1e17762:    30 fd 38 1a       	r0 = r1 & 4294952959			  ## analog.c:3358:5
 1e17766:    08 4e             	[r7 + 0] = r0			  ## analog.c:3358:5
 1e17768:    bf f3 0f 70       	call -73698 <adc_pmu_detect_en : 1e0578a >			  ## analog.c:3367:5
 1e1776c:    d0 70             	r0 = 13			  ## analog.c:3368:5
 1e1776e:    bf f3 98 45       	call -95440 <adc_sample : 1e002a2 >			  ## analog.c:3368:5
 1e17772:    05 70             	r5 = 0
 1e17774:    76 fc 00 18       	r6 = r7 + 6144
 1e17778:    00 70             	r0 = 0
 1e1777a:    01 4c             	r1 = [r6 + 0]			  ## analog.c:3370:26
 1e1777c:    51 04             	r1 = r1.b0 (s)			  ## analog.c:3370:16
 1e1777e:    f1 ef fc cf       	ifs (r1 > -1) goto -8 <get_ldo_voltage+0x24 : 1e1777a >			  ## analog.c:3370:9
 1e17782:    11 4c             	r1 = [r6 + 4]			  ## analog.c:3372:30
 1e17784:    00 f4 40 69       	[r6 + 0] |= 64			  ## analog.c:3373:21
 1e17788:    10 80             	r0 += 1			  ## analog.c:3369:30
 1e1778a:    15 09             	r5 += r1			  ## analog.c:3372:19
 1e1778c:    a0 e0 f5 1f       	if (r0 != 10) goto -22 <get_ldo_voltage+0x24 : 1e1777a >
 1e17790:    00 4e             	r0 = [r7 + 0]			  ## analog.c:3358:5
 1e17792:    21 fd 07 49       	r1 = r4 & 7			  ## analog.c:3358:5
 1e17796:    30 fd 38 0a       	r0 = r0 & 4294952959			  ## analog.c:3358:5
 1e1779a:    c3 fd 58 01       	r0 <= insert(r1, p:11, l:3)			  ## analog.c:3358:5
 1e1779e:    08 4e             	[r7 + 0] = r0			  ## analog.c:3358:5
 1e177a0:    80 7c             	r0 = 200			  ## analog.c:3377:5
 1e177a2:    8f f3 59 6a       	call 2020530 <delay : 4c58 >			  ## analog.c:3377:5
 1e177a6:    f0 70             	r0 = 15			  ## analog.c:3379:5
 1e177a8:    bf f3 7b 45       	call -95498 <adc_sample : 1e002a2 >			  ## analog.c:3379:5
 1e177ac:    00 70             	r0 = 0
 1e177ae:    01 70             	r1 = 0
 1e177b0:    02 4c             	r2 = [r6 + 0]			  ## analog.c:3381:26
 1e177b2:    92 04             	r2 = r2.b0 (s)			  ## analog.c:3381:16
 1e177b4:    f2 ef fc cf       	ifs (r2 > -1) goto -8 <get_ldo_voltage+0x5A : 1e177b0 >			  ## analog.c:3381:9
 1e177b8:    12 4c             	r2 = [r6 + 4]			  ## analog.c:3383:30
 1e177ba:    00 f4 40 69       	[r6 + 0] |= 64			  ## analog.c:3384:21
 1e177be:    11 80             	r1 += 1			  ## analog.c:3380:30
 1e177c0:    20 09             	r0 += r2			  ## analog.c:3383:19
 1e177c2:    a1 e0 f5 1f       	if (r1 != 10) goto -22 <get_ldo_voltage+0x5A : 1e177b0 >
 1e177c6:    c1 ff 00 08 00 00 	r1 = 2048 <report_mmu_tlb_size : 800 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/efuse.c:21:23
 1e177cc:    f1 52             	r1 = h[r1 + 30] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/efuse.c:21:23
 1e177ce:    a2 70             	r2 = 10			  ## analog.c:3388:29
 1e177d0:    c0 fe 20 35       	r3 = r5 / r2 (u)			  ## analog.c:3387:29
 1e177d4:    c0 fe 20 00       	r0 = r0 / r2 (u)			  ## analog.c:3388:29
 1e177d8:    85 fd 20 11       	r1 = uextra(r1, p:4, l:5)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/efuse.c:21:40
 1e177dc:    01 fe 03 19       	r1 = r1 * 3			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/efuse.c:21:40
 1e177e0:    11 fc 21 03       	r1 = r1 + 801			  ## analog.c:3346:11
 1e177e4:    08 0e             	r0 = r1 * r0			  ## analog.c:3347:23
 1e177e6:    c0 fe 30 00       	r0 = r0 / r3 (u)			  ## analog.c:3347:29
 1e177ea:    57 01             	{pc, r7-r4} = [sp++]			  ## analog.c:3395:5


bta_pll_config_init:
 1e177ec:    7c 01             	[--sp] = {rets, r12-r4}			  ## analog.c:2617:0
 1e177ee:    04 70             	r4 = 0			  ## analog.c:2617:0
 1e177f0:    cc ff ac fc 1c 00 	r12 = 1899692 <uECC_vli_cmp_unsafe+0xC8CB0 : 1cfcac >			  ## analog.c:2617:0
 1e177f6:    14 f6 00 c0       	[r12 + 0] = r4			  ## analog.c:2623:19
 1e177fa:    c6 ff 00 68 e1 01 	r6 = 31549440 <m_code_addr : 1e16800 >			  ## analog.c:2623:19
 1e17800:    f7 74             	r7 = 79			  ## analog.c:2623:19
 1e17802:    c8 ff 4c 69 e1 01 	r8 = 31549772 <bt_frac_pll_int_48m : 1e1694c >			  ## analog.c:2623:19
 1e17808:    c9 ff 24 01 08 00 	r9 = 524580 <text_size+0x5F274 : 80124 >			  ## analog.c:2623:19
 1e1780e:    4a fb 10 9b       	r10 = r9 + 1048576			  ## analog.c:2623:19
 1e17812:    cb ff ff ff 7f 00 	r11 = 8388607 <uECC_vli_cmp_unsafe+0x6F9003 : 7fffff >			  ## analog.c:2623:19
 1e17818:    05 fa 00 48       	r5 = b[r4+r8] (u)			  ## analog.c:2630:32
 1e1781c:    c0 05             	r0 = r7.b0 (u)			  ## analog.c:2627:16
 1e1781e:    75 14             	call -1814 <get_bta_pll_bank : 1e1710a >			  ## analog.c:2627:16
 1e17820:    41 f6 04 60       	r1 = [r6 ++= 4]			  ## analog.c:2629:32
 1e17824:    52 fb 40 1b       	r2 = r1 - 4194304			  ## analog.c:2632:64
 1e17828:    00 c3             	r0 = r0 << 12			  ## analog.c:2632:64
 1e1782a:    23 ff 80 2b 05 00 	if (r2 < 8388608) goto 10 <bta_pll_config_init+0x4E : 1e1783a >			  ## analog.c:2632:64
 1e17830:    e0 fd 90 00       	r0 = r0 | r9			  ## analog.c:2634:126
 1e17834:    10 f6 04 c0       	[r12 + 4] = r0			  ## analog.c:2634:28
 1e17838:    0c 18             	goto 24 <bta_pll_config_init+0x66 : 1e17852 >			  ## analog.c:2634:28
 1e1783a:    e0 fd a0 00       	r0 = r0 | r10			  ## analog.c:2637:126
 1e1783e:    10 f6 04 c0       	[r12 + 4] = r0			  ## analog.c:2637:28
 1e17842:    b1 f2 04 c0       	ifs (r1 > r11) goto 8 <bta_pll_config_init+0x62 : 1e1784e >			  ## analog.c:2639:17
 1e17846:    41 fb 80 1b       	r1 = r1 + 8388608			  ## analog.c:2641:38
 1e1784a:    f5 8f             	r5 += -1			  ## analog.c:2640:38
 1e1784c:    02 18             	goto 4 <bta_pll_config_init+0x66 : 1e17852 >
 1e1784e:    51 fb 80 1b       	r1 = r1 - 8388608			  ## analog.c:2643:38
 1e17852:    08 d9             	r0 = r1 >>> 4			  ## analog.c:2646:77
 1e17854:    29 c5             	r1 = r5 << 20			  ## analog.c:2646:46
 1e17856:    50 b2             	r0 |= r1			  ## analog.c:2646:53
 1e17858:    10 f6 04 c0       	[r12 + 4] = r0			  ## analog.c:2646:23
 1e1785c:    14 80             	r4 += 1			  ## analog.c:2626:26
 1e1785e:    17 80             	r7 += 1			  ## analog.c:2626:19
 1e17860:    14 e5 da 1f       	if (r4 != 81) goto -76 <bta_pll_config_init+0x2C : 1e17818 >			  ## analog.c:2626:19
 1e17864:    5c 01             	{pc, r12-r4} = [sp++]			  ## analog.c:2648:1


bt_rf_init:
 1e17866:    7f 01             	[--sp] = {rets, r15-r4}			  ## RF.c:395:0
 1e17868:    64 0b             	sp += -312			  ## RF.c:395:0
 1e1786a:    80 f3 a0 0c       	call 6464 <set_bt_version : 1e191ae >			  ## RF.c:399:5
 1e1786e:    10 70             	r0 = 1			  ## RF.c:400:21
 1e17870:    cd ff 00 21 1f 00 	r13 = 2040064 <uECC_vli_cmp_unsafe+0xEB104 : 1f2100 >			  ## RF.c:400:21
 1e17876:    10 f6 00 d1       	[r13 + 256] = r0			  ## RF.c:400:21
 1e1787a:    cc ff e8 09 00 00 	r12 = 2536 <system_data_end : 9e8 >			  ## RF.c:400:21
 1e17880:    08 70             	r8 = 0			  ## RF.c:400:21
 1e17882:    18 f9 0f c0       	b[r12 + 15] = r8			  ## RF.c:96:17
 1e17886:    80 71             	r0 = 24			  ## RF.c:99:18
 1e17888:    10 f9 06 c0       	b[r12 + 6] = r0			  ## RF.c:99:18
 1e1788c:    a0 70             	r0 = 10			  ## RF.c:99:18
 1e1788e:    10 f9 07 c0       	b[r12 + 7] = r0			  ## RF.c:100:17
 1e17892:    c0 ff 10 00 1e 00 	r0 = 1966096 <uECC_vli_cmp_unsafe+0xD9014 : 1e0010 >			  ## RF.c:100:17
 1e17898:    01 40             	r1 = [r0 + 0]			  ## RF.c:407:5
 1e1789a:    31 fd c0 1a       	r1 = r1 & 4294918143			  ## RF.c:407:5
 1e1789e:    11 b7             	r1 |= 16384			  ## RF.c:407:5
 1e178a0:    09 40             	[r0 + 0] = r1			  ## RF.c:407:5
 1e178a2:    00 7f             	r0 = 240			  ## RF.c:409:5
 1e178a4:    8f f3 d8 69       	call 2020272 <delay : 4c58 >			  ## RF.c:409:5
 1e178a8:    00 f4 80 d9       	[r13 + 0] |= 128			  ## RF.c:410:5
 1e178ac:    00 f6 00 d0       	r0 = [r13 + 0]			  ## RF.c:411:5
 1e178b0:    30 fd 1f 0b       	r0 = r0 & 4292935679			  ## RF.c:411:5
 1e178b4:    00 fd 0c 0b       	r0 = r0 | 786432			  ## RF.c:411:5
 1e178b8:    10 f6 00 d0       	[r13 + 0] = r0			  ## RF.c:411:5
 1e178bc:    00 f9 06 c0       	r0 = b[r12 + 6] (u)			  ## RF.c:413:11
 1e178c0:    00 fe 0a 09       	r0 = r0 * 10			  ## RF.c:413:24
 1e178c4:    8f f3 c8 69       	call 2020240 <delay : 4c58 >			  ## RF.c:413:5
 1e178c8:    00 f4 01 d9       	[r13 + 0] |= 1			  ## RF.c:414:5
 1e178cc:    00 f9 06 c0       	r0 = b[r12 + 6] (u)			  ## RF.c:415:11
 1e178d0:    00 fe 0a 09       	r0 = r0 * 10			  ## RF.c:415:24
 1e178d4:    8f f3 c0 69       	call 2020224 <delay : 4c58 >			  ## RF.c:415:5
 1e178d8:    c4 ff 00 fc 1c 00 	r4 = 1899520 <uECC_vli_cmp_unsafe+0xC8C04 : 1cfc00 >			  ## RF.c:415:5
 1e178de:    10 f4 04 4a       	[r4 + 64] |= 1024			  ## RF.c:416:16
 1e178e2:    cf ff 00 19 1e 00 	r15 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e178e8:    18 f6 50 f0       	[r15 + 80] = r8
 1e178ec:    d5 f4 80 f9       	[r15 + 84] = 128
 1e178f0:    14 f4 40 49       	[r4 + 80] |= 64			  ## analog.c:2969:16
 1e178f4:    47 fc 98 00       	r7 = r4 + 152
 1e178f8:    10 4e             	r0 = [r7 + 4]			  ## analog.c:2763:20
 1e178fa:    30 fd 1f 09       	r0 = r0 & 4294967264			  ## analog.c:2763:20
 1e178fe:    18 4e             	[r7 + 4] = r0			  ## analog.c:2763:20
 1e17900:    01 f4 08 79       	[r7 + 4] |= 8			  ## analog.c:2764:20
 1e17904:    00 4e             	r0 = [r7 + 0]			  ## analog.c:2765:20
 1e17906:    30 fd ff 09       	r0 = r0 & 4294967040			  ## analog.c:2765:20
 1e1790a:    08 4e             	[r7 + 0] = r0			  ## analog.c:2765:20
 1e1790c:    00 f4 32 79       	[r7 + 0] |= 50			  ## analog.c:2766:20
 1e17910:    00 4e             	r0 = [r7 + 0]			  ## analog.c:2767:21
 1e17912:    30 fd ff 0b       	r0 = r0 & 4278255615			  ## analog.c:2767:21
 1e17916:    08 4e             	[r7 + 0] = r0			  ## analog.c:2767:21
 1e17918:    00 f4 32 7b       	[r7 + 0] |= 3276800			  ## analog.c:2768:21
 1e1791c:    00 4e             	r0 = [r7 + 0]			  ## analog.c:2769:21
 1e1791e:    30 fd ff 0a       	r0 = r0 & 4294902015			  ## analog.c:2769:21
 1e17922:    08 4e             	[r7 + 0] = r0			  ## analog.c:2769:21
 1e17924:    00 f4 08 7a       	[r7 + 0] |= 2048			  ## analog.c:2770:21
 1e17928:    00 4e             	r0 = [r7 + 0]			  ## analog.c:2771:21
 1e1792a:    30 fd ff 0c       	r0 = r0 & 16777215			  ## analog.c:2771:21
 1e1792e:    08 4e             	[r7 + 0] = r0			  ## analog.c:2771:21
 1e17930:    00 4e             	r0 = [r7 + 0]			  ## analog.c:2772:21
 1e17932:    08 4e             	[r7 + 0] = r0			  ## analog.c:2772:21
 1e17934:    10 4e             	r0 = [r7 + 4]			  ## analog.c:2773:21
 1e17936:    30 fd ff 0b       	r0 = r0 & 4278255615			  ## analog.c:2773:21
 1e1793a:    18 4e             	[r7 + 4] = r0			  ## analog.c:2773:21
 1e1793c:    01 f4 32 7b       	[r7 + 4] |= 3276800			  ## analog.c:2774:21
 1e17940:    10 4e             	r0 = [r7 + 4]			  ## analog.c:2775:21
 1e17942:    30 fd ff 0c       	r0 = r0 & 16777215			  ## analog.c:2775:21
 1e17946:    18 4e             	[r7 + 4] = r0			  ## analog.c:2775:21
 1e17948:    01 f4 32 7c       	[r7 + 4] |= 838860800			  ## analog.c:2776:21
 1e1794c:    a0 70             	r0 = 10			  ## analog.c:2777:5
 1e1794e:    8f f3 83 69       	call 2020102 <delay : 4c58 >			  ## analog.c:2777:5
 1e17952:    20 4e             	r0 = [r7 + 8]			  ## analog.c:2780:20
 1e17954:    30 fd ff 09       	r0 = r0 & 4294967040			  ## analog.c:2780:20
 1e17958:    28 4e             	[r7 + 8] = r0			  ## analog.c:2780:20
 1e1795a:    02 f4 0a 79       	[r7 + 8] |= 10			  ## analog.c:2781:20
 1e1795e:    20 4e             	r0 = [r7 + 8]			  ## analog.c:2782:20
 1e17960:    30 fd ff 0a       	r0 = r0 & 4294902015			  ## analog.c:2782:20
 1e17964:    28 4e             	[r7 + 8] = r0			  ## analog.c:2782:20
 1e17966:    02 f4 0a 7a       	[r7 + 8] |= 2560			  ## analog.c:2783:20
 1e1796a:    d2 f4 b9 49       	[r4 + 72] = 185			  ## analog.c:2813:17
 1e1796e:    c0 ff 44 d1 ff 0c 	r0 = 218091844 <uECC_vli_cmp_unsafe+0xEF6148 : ffd144 >			  ## analog.c:2815:18
 1e17974:    08 48             	[r4 + 0] = r0			  ## analog.c:2815:18
 1e17976:    c0 ff de 3c 00 6e 	r0 = 1845509342 <delay_p11_tmr1_lrc+0x50 : 3cde >			  ## analog.c:2830:18
 1e1797c:    18 48             	[r4 + 4] = r0			  ## analog.c:2830:18
 1e1797e:    c0 ff 00 00 10 32 	r0 = 839909376 <text_size+0xDF150 : 100000 >			  ## analog.c:2845:18
 1e17984:    28 48             	[r4 + 8] = r0			  ## analog.c:2845:18
 1e17986:    c3 f4 80 4f       	[r4 + 12] = 2155905152			  ## analog.c:2851:18
 1e1798a:    00 fb 78 78       	r0 = 30840 <nvbss_size+0xD78 : 7878 >			  ## analog.c:2856:18
 1e1798e:    48 48             	[r4 + 16] = r0			  ## analog.c:2856:18
 1e17990:    c0 ff ff 00 fc 23 	r0 = 603717887 <bank_code_load_addr+0x19CB07 : 1fc00ff >			  ## analog.c:2860:18
 1e17996:    58 48             	[r4 + 20] = r0			  ## analog.c:2860:18
 1e17998:    18 f6 18 40       	[r4 + 24] = r8			  ## analog.c:2866:18
 1e1799c:    18 f6 1c 40       	[r4 + 28] = r8			  ## analog.c:2868:18
 1e179a0:    c0 ff 37 55 55 36 	r0 = 911562039 <uECC_vli_cmp_unsafe+0x44E53B : 555537 >			  ## analog.c:2870:18
 1e179a6:    88 48             	[r4 + 32] = r0			  ## analog.c:2870:18
 1e179a8:    c0 ff 40 80 6d 7c 	r0 = 2087551040 <uECC_vli_cmp_unsafe+0x5D1044 : 6d8040 >			  ## analog.c:2876:18
 1e179ae:    98 48             	[r4 + 36] = r0			  ## analog.c:2876:18
 1e179b0:    c0 ff 20 c8 05 06 	r0 = 101042208 <text_size+0x3B970 : 5c820 >			  ## analog.c:2892:18
 1e179b6:    a8 48             	[r4 + 40] = r0			  ## analog.c:2892:18
 1e179b8:    c0 ff b8 00 20 03 	r0 = 52428984 <uECC_vli_cmp_unsafe+0x10F90BC : 12000b8 >			  ## analog.c:2902:18
 1e179be:    b8 48             	[r4 + 44] = r0			  ## analog.c:2902:18
 1e179c0:    c0 ff dc e5 14 00 	r0 = 1369564 <uECC_vli_cmp_unsafe+0x475E0 : 14e5dc >			  ## analog.c:2908:18
 1e179c6:    4e fc c0 01       	r14 = r4 + 448			  ## analog.c:2908:18
 1e179ca:    10 f6 24 e0       	[r14 + 36] = r0			  ## analog.c:2908:18
 1e179ce:    c0 ff 40 00 08 00 	r0 = 524352 <text_size+0x5F190 : 80040 >			  ## analog.c:2918:18
 1e179d4:    10 f6 28 e0       	[r14 + 40] = r0			  ## analog.c:2918:18
 1e179d8:    40 fb e0 da       	r0 = r13 + 57344			  ## analog.c:2921:18
 1e179dc:    10 f6 2c e0       	[r14 + 44] = r0			  ## analog.c:2921:18
 1e179e0:    c0 ff 00 04 80 00 	r0 = 8389632 <uECC_vli_cmp_unsafe+0x6F9404 : 800400 >			  ## analog.c:2924:18
 1e179e6:    10 f6 30 e0       	[r14 + 48] = r0			  ## analog.c:2924:18
 1e179ea:    c0 ff 20 40 14 00 	r0 = 1327136 <uECC_vli_cmp_unsafe+0x3D024 : 144020 >			  ## analog.c:2927:18
 1e179f0:    10 f6 34 e0       	[r14 + 52] = r0			  ## analog.c:2927:18
 1e179f4:    c0 ff ff 2f 3f 00 	r0 = 4141055 <uECC_vli_cmp_unsafe+0x2EC003 : 3f2fff >			  ## analog.c:2930:18
 1e179fa:    10 f6 38 e0       	[r14 + 56] = r0			  ## analog.c:2930:18
 1e179fe:    a0 48             	r0 = [r4 + 40]			  ## analog.c:2938:18
 1e17a00:    70 be             	r0 &= 4026531839			  ## analog.c:2938:18
 1e17a02:    a8 48             	[r4 + 40] = r0			  ## analog.c:2938:18
 1e17a04:    a0 48             	r0 = [r4 + 40]			  ## analog.c:2939:18
 1e17a06:    f0 be             	r0 &= 3758096383			  ## analog.c:2939:18
 1e17a08:    a8 48             	[r4 + 40] = r0			  ## analog.c:2939:18
 1e17a0a:    bf f3 1f fb       	call -2498 <bt_analog_part_init : 1e1704c >			  ## analog.c:2007:5
 1e17a0e:    00 f6 2c f0       	r0 = [r15 + 44]			  ## analog.c:370:23
 1e17a12:    30 fd f0 0c       	r0 = r0 & 268435455			  ## analog.c:370:23
 1e17a16:    10 f6 2c f0       	[r15 + 44] = r0			  ## analog.c:370:23
 1e17a1a:    0b f4 40 fc       	[r15 + 44] |= 1073741824			  ## analog.c:371:23
 1e17a1e:    c0 ff 52 52 dd 00 	r0 = 14504530 <uECC_vli_cmp_unsafe+0xCCE256 : dd5252 >			  ## analog.c:373:23
 1e17a24:    10 f6 30 f0       	[r15 + 48] = r0			  ## analog.c:373:23
 1e17a28:    c0 ff 77 a0 01 00 	r0 = 106615 <_IRQ_MEM_ADDR+0xA177 : 1a077 >			  ## analog.c:382:23
 1e17a2e:    10 f6 34 f0       	[r15 + 52] = r0			  ## analog.c:382:23
 1e17a32:    0a f4 08 fc       	[r15 + 40] |= 134217728			  ## analog.c:391:23
 1e17a36:    00 f6 54 f0       	r0 = [r15 + 84]			  ## analog.c:393:23
 1e17a3a:    01 fb 7f f8       	r1 = -1921 <bank_code_load_addr+0x1DC287 : 1fff87f >			  ## analog.c:393:23
 1e17a3e:    50 b3             	r0 &= r1			  ## analog.c:393:23
 1e17a40:    10 f6 54 f0       	[r15 + 84] = r0			  ## analog.c:393:23
 1e17a44:    15 f4 80 f9       	[r15 + 84] |= 128			  ## analog.c:394:23
 1e17a48:    00 f6 34 f0       	r0 = [r15 + 52]			  ## analog.c:317:23
 1e17a4c:    30 fd ff 09       	r0 = r0 & 4294967040			  ## analog.c:317:23
 1e17a50:    10 f6 34 f0       	[r15 + 52] = r0			  ## analog.c:317:23
 1e17a54:    0d f4 4a f9       	[r15 + 52] |= 74			  ## analog.c:318:23
 1e17a58:    7a 70             	r10 = 7			  ## analog.c:318:23
 1e17a5a:    cb ff ff ff 00 00 	r11 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## analog.c:318:23
 1e17a60:    03 70             	r3 = 0
 1e17a62:    89 08             	r9 = r8
 1e17a64:    85 08             	r5 = r8
 1e17a66:    36 fc ff ff       	r6 = r3 + -1			  ## analog.c:327:31
 1e17a6a:    00 f6 30 f0       	r0 = [r15 + 48]			  ## analog.c:327:31
 1e17a6e:    30 fd fe 05       	r0 = r0 & 4261675007			  ## analog.c:327:31
 1e17a72:    a3 05             	r3 = r6.l (u)			  ## analog.c:328:19
 1e17a74:    10 f6 30 f0       	[r15 + 48] = r0			  ## analog.c:327:31
 1e17a78:    a0 08             	r0 = r10			  ## analog.c:327:31
 1e17a7a:    b3 f2 05 00       	if (r3 == r11) goto 10 <bt_rf_init+0x222 : 1e17a88 >			  ## analog.c:327:31
 1e17a7e:    90 07             	r0 = -7			  ## analog.c:330:24
 1e17a80:    b6 f0 01 00       	if ((r6 & r11) == 0) goto 2 <bt_rf_init+0x220 : 1e17a86 >			  ## analog.c:330:24
 1e17a84:    80 70             	r0 = 8			  ## analog.c:330:24
 1e17a86:    a0 09             	r0 += r10			  ## analog.c:330:24
 1e17a88:    01 f6 30 f0       	r1 = [r15 + 48]
 1e17a8c:    80 c4             	r0 = r0 << 18
 1e17a8e:    20 fd fe 05       	r0 = r0 & 33292288
 1e17a92:    50 b2             	r0 |= r1
 1e17a94:    10 f6 30 f0       	[r15 + 48] = r0
 1e17a98:    00 f6 28 f0       	r0 = [r15 + 40]			  ## analog.c:335:31
 1e17a9c:    70 b1             	r0 &= 4294967291			  ## analog.c:335:31
 1e17a9e:    10 f6 28 f0       	[r15 + 40] = r0			  ## analog.c:335:31
 1e17aa2:    00 f9 06 c0       	r0 = b[r12 + 6] (u)			  ## analog.c:336:19
 1e17aa6:    00 fe 05 09       	r0 = r0 * 5			  ## analog.c:336:32
 1e17aaa:    8f f3 d5 68       	call 2019754 <delay : 4c58 >			  ## analog.c:336:13
 1e17aae:    0a f4 04 f9       	[r15 + 40] |= 4			  ## analog.c:337:31
 1e17ab2:    00 f9 06 c0       	r0 = b[r12 + 6] (u)			  ## analog.c:338:19
 1e17ab6:    00 fe 3c 09       	r0 = r0 * 60			  ## analog.c:338:32
 1e17aba:    8f f3 cd 68       	call 2019738 <delay : 4c58 >			  ## analog.c:338:13
 1e17abe:    00 f6 78 f0       	r0 = [r15 + 120]			  ## analog.c:340:30
 1e17ac2:    01 f6 78 f0       	r1 = [r15 + 120]			  ## analog.c:341:30
 1e17ac6:    02 f6 78 f0       	r2 = [r15 + 120]			  ## analog.c:342:30
 1e17aca:    50 b2             	r0 |= r1			  ## analog.c:341:18
 1e17acc:    50 b4             	r0 |= r2			  ## analog.c:342:18
 1e17ace:    82 fd 08 00       	r0 = uextra(r0, p:1, l:2)			  ## analog.c:342:18
 1e17ad2:    b3 f2 0c 00       	if (r3 == r11) goto 24 <bt_rf_init+0x288 : 1e17aee >			  ## analog.c:342:18
 1e17ad6:    b6 f0 01 00       	if ((r6 & r11) == 0) goto 2 <bt_rf_init+0x276 : 1e17adc >
 1e17ada:    09 08             	r9 = r0			  ## analog.c:348:13
 1e17adc:    b6 f0 01 00       	if ((r6 & r11) == 0) goto 2 <bt_rf_init+0x27C : 1e17ae2 >
 1e17ae0:    50 08             	r0 = r5			  ## analog.c:348:13
 1e17ae2:    16 80             	r6 += 1			  ## analog.c:326:23
 1e17ae4:    a1 05             	r1 = r6.l (u)			  ## analog.c:326:23
 1e17ae6:    05 08             	r5 = r0			  ## analog.c:326:23
 1e17ae8:    21 e0 bf 1f       	if (r1 != 2) goto -130 <bt_rf_init+0x204 : 1e17a6a >			  ## analog.c:326:23
 1e17aec:    03 18             	goto 6 <bt_rf_init+0x28E : 1e17af4 >			  ## analog.c:326:23
 1e17aee:    13 70             	r3 = 1
 1e17af0:    08 08             	r8 = r0
 1e17af2:    b9 1f             	goto -142 <bt_rf_init+0x200 : 1e17a66 >
 1e17af4:    e6 fd 00 38       	r3 = r8.l (u)			  ## analog.c:352:20
 1e17af8:    e6 fd 00 19       	r1 = r9.l (u)			  ## analog.c:352:20
 1e17afc:    31 f2 09 10       	if (r1 != r3) goto 18 <bt_rf_init+0x2AC : 1e17b12 >			  ## analog.c:352:20
 1e17b00:    21 04             	r1 = r0.l (u)
 1e17b02:    a0 08             	r0 = r10
 1e17b04:    31 f2 06 10       	if (r1 != r3) goto 12 <bt_rf_init+0x2AE : 1e17b14 >
 1e17b08:    0a 91             	r10 = r0 + 16			  ## analog.c:325:51
 1e17b0a:    80 08             	r0 = r8			  ## analog.c:325:51
 1e17b0c:    8a e7 a8 3f       	if (r10 < 120) goto -176 <bt_rf_init+0x1FA : 1e17a60 >			  ## analog.c:325:51
 1e17b10:    01 18             	goto 2 <bt_rf_init+0x2AE : 1e17b14 >			  ## analog.c:325:51
 1e17b12:    a0 08             	r0 = r10
 1e17b14:    00 fd 0f 09       	r0 = r0 | 15			  ## analog.c:360:12
 1e17b18:    10 f9 32 c0       	b[r12 + 50] = r0			  ## analog.c:396:45
 1e17b1c:    a8 74             	r8 = 74
 1e17b1e:    01 70             	r1 = 0
 1e17b20:    a2 74             	r2 = 74
 1e17b22:    03 18             	goto 6 <bt_rf_init+0x2C4 : 1e17b2a >
 1e17b24:    00 f9 32 c0       	r0 = b[r12 + 50] (u)
 1e17b28:    58 08             	r8 = r5
 1e17b2a:    05 f6 30 f0       	r5 = [r15 + 48]			  ## analog.c:402:27
 1e17b2e:    35 fd fe 55       	r5 = r5 & 4261675007			  ## analog.c:402:27
 1e17b32:    15 f6 30 f0       	[r15 + 48] = r5			  ## analog.c:402:27
 1e17b36:    05 f6 30 f0       	r5 = [r15 + 48]			  ## analog.c:403:27
 1e17b3a:    60 b0             	r0 = r0 - r1			  ## analog.c:297:52
 1e17b3c:    80 c4             	r0 = r0 << 18			  ## analog.c:403:31
 1e17b3e:    20 fd fe 05       	r0 = r0 & 33292288			  ## analog.c:403:31
 1e17b42:    50 ba             	r0 |= r5			  ## analog.c:403:27
 1e17b44:    10 f6 30 f0       	[r15 + 48] = r0			  ## analog.c:403:27
 1e17b48:    25 08             	r5 = r2			  ## analog.c:403:27
 1e17b4a:    00 f6 34 f0       	r0 = [r15 + 52]			  ## analog.c:408:31
 1e17b4e:    30 fd ff 09       	r0 = r0 & 4294967040			  ## analog.c:408:31
 1e17b52:    10 f6 34 f0       	[r15 + 52] = r0			  ## analog.c:408:31
 1e17b56:    00 f6 34 f0       	r0 = [r15 + 52]			  ## analog.c:409:31
 1e17b5a:    46 05             	r6 = r5.b0 (u)			  ## analog.c:409:35
 1e17b5c:    50 bc             	r0 |= r6			  ## analog.c:409:31
 1e17b5e:    10 f6 34 f0       	[r15 + 52] = r0			  ## analog.c:409:31
 1e17b62:    00 f6 28 f0       	r0 = [r15 + 40]			  ## analog.c:416:31
 1e17b66:    70 b1             	r0 &= 4294967291			  ## analog.c:416:31
 1e17b68:    10 f6 28 f0       	[r15 + 40] = r0			  ## analog.c:416:31
 1e17b6c:    00 f9 06 c0       	r0 = b[r12 + 6] (u)			  ## analog.c:417:19
 1e17b70:    00 fe 05 09       	r0 = r0 * 5			  ## analog.c:417:32
 1e17b74:    8f f3 70 68       	call 2019552 <delay : 4c58 >			  ## analog.c:417:13
 1e17b78:    0a f4 04 f9       	[r15 + 40] |= 4			  ## analog.c:418:31
 1e17b7c:    00 f9 06 c0       	r0 = b[r12 + 6] (u)			  ## analog.c:419:19
 1e17b80:    00 fe 3c 09       	r0 = r0 * 60			  ## analog.c:419:32
 1e17b84:    8f f3 68 68       	call 2019536 <delay : 4c58 >			  ## analog.c:419:13
 1e17b88:    00 f6 78 f0       	r0 = [r15 + 120]			  ## analog.c:421:30
 1e17b8c:    06 f6 78 f0       	r6 = [r15 + 120]			  ## analog.c:422:30
 1e17b90:    03 f6 78 f0       	r3 = [r15 + 120]			  ## analog.c:423:30
 1e17b94:    50 bc             	r0 |= r6			  ## analog.c:422:18
 1e17b96:    50 b6             	r0 |= r3			  ## analog.c:423:18
 1e17b98:    82 fd 08 00       	r0 = uextra(r0, p:1, l:2)			  ## analog.c:425:17
 1e17b9c:    10 e0 0f 00       	if (r0 == 1) goto 30 <bt_rf_init+0x358 : 1e17bbe >			  ## analog.c:425:17
 1e17ba0:    20 e0 05 00       	if (r0 == 2) goto 10 <bt_rf_init+0x348 : 1e17bae >
 1e17ba4:    15 80             	r5 += 1			  ## analog.c:438:25
 1e17ba6:    40 05             	r0 = r5.b0 (u)			  ## analog.c:438:25
 1e17ba8:    70 ea cf 9f       	if (r0 <= 167) goto -98 <bt_rf_init+0x2E4 : 1e17b4a >			  ## analog.c:438:25
 1e17bac:    07 18             	goto 14 <bt_rf_init+0x356 : 1e17bbc >			  ## analog.c:438:25
 1e17bae:    10 9a             	r0 = r5 + 1			  ## analog.c:430:25
 1e17bb0:    03 04             	r3 = r0.b0 (u)			  ## analog.c:430:25
 1e17bb2:    52 08             	r2 = r5			  ## analog.c:430:25
 1e17bb4:    05 08             	r5 = r0			  ## analog.c:430:25
 1e17bb6:    73 ea c8 9f       	if (r3 <= 167) goto -112 <bt_rf_init+0x2E4 : 1e17b4a >			  ## analog.c:430:25
 1e17bba:    72 7a             	r2 = 167
 1e17bbc:    75 7a             	r5 = 167
 1e17bbe:    80 fb c0 01       	r0 = r1 + r12			  ## analog.c:446:9
 1e17bc2:    83 04             	r3 = r2.b0 (u)			  ## analog.c:446:48
 1e17bc4:    e4 fd 00 68       	r6 = r8.b0 (u)			  ## analog.c:446:37
 1e17bc8:    63 09             	r3 += r6			  ## analog.c:446:46
 1e17bca:    33 80             	r3 += 3			  ## analog.c:446:54
 1e17bcc:    5b d0             	r3 = r3 >> 1			  ## analog.c:446:59
 1e17bce:    11 80             	r1 += 1			  ## analog.c:400:42
 1e17bd0:    3b 61             	b[r0 + 19] = r3			  ## analog.c:446:34
 1e17bd2:    f1 e1 a7 1f       	if (r1 != 31) goto -178 <bt_rf_init+0x2BE : 1e17b24 >			  ## analog.c:446:34
 1e17bd6:    00 f6 34 f0       	r0 = [r15 + 52]			  ## analog.c:450:23
 1e17bda:    30 fd ff 09       	r0 = r0 & 4294967040			  ## analog.c:450:23
 1e17bde:    10 f6 34 f0       	[r15 + 52] = r0			  ## analog.c:450:23
 1e17be2:    0d f4 9b f9       	[r15 + 52] |= 155			  ## analog.c:451:23
 1e17be6:    b0 79             	r0 = 155			  ## analog.c:452:13
 1e17be8:    bf f3 8f fa       	call -2786 <get_bta_pll_bank : 1e1710a >			  ## analog.c:452:13
 1e17bec:    01 f6 30 f0       	r1 = [r15 + 48]			  ## analog.c:453:23
 1e17bf0:    31 fd fe 15       	r1 = r1 & 4261675007			  ## analog.c:453:23
 1e17bf4:    11 f6 30 f0       	[r15 + 48] = r1			  ## analog.c:453:23
 1e17bf8:    01 f6 30 f0       	r1 = [r15 + 48]			  ## analog.c:454:23
 1e17bfc:    82 c4             	r2 = r0 << 18			  ## analog.c:454:27
 1e17bfe:    22 fd fe 25       	r2 = r2 & 33292288			  ## analog.c:454:27
 1e17c02:    51 b4             	r1 |= r2			  ## analog.c:454:23
 1e17c04:    11 f6 30 f0       	[r15 + 48] = r1			  ## analog.c:454:23
 1e17c08:    01 f6 28 f0       	r1 = [r15 + 40]			  ## analog.c:456:23
 1e17c0c:    f1 bd             	r1 &= 4160749567			  ## analog.c:456:23
 1e17c0e:    11 f6 28 f0       	[r15 + 40] = r1			  ## analog.c:456:23
 1e17c12:    f0 b3             	r0 &= 4294967167			  ## analog.c:2025:26
 1e17c14:    b1 fc 53 46       	r1 = r11 + 18003			  ## analog.c:2024:53
 1e17c18:    c7 fd 90 10       	r1 <= insert(r0, p:18, l:7)			  ## analog.c:2024:53
 1e17c1c:    11 f6 30 f0       	[r15 + 48] = r1			  ## analog.c:2018:23
 1e17c20:    c0 ff 77 e0 39 03 	r0 = 54124663 <uECC_vli_cmp_unsafe+0x129707B : 139e077 >			  ## analog.c:2027:23
 1e17c26:    10 f6 34 f0       	[r15 + 52] = r0			  ## analog.c:2027:23
 1e17c2a:    8e f4 ff fc       	[r15 + 56] &= 4278190080			  ## analog.c:2036:23
 1e17c2e:    00 f6 38 f0       	r0 = [r15 + 56]			  ## analog.c:2037:23
 1e17c32:    c1 ff 55 55 25 00 	r1 = 2446677 <uECC_vli_cmp_unsafe+0x14E559 : 255555 >			  ## analog.c:2037:23
 1e17c38:    50 b2             	r0 |= r1			  ## analog.c:2037:23
 1e17c3a:    10 f6 38 f0       	[r15 + 56] = r0			  ## analog.c:2037:23
 1e17c3e:    0a f4 01 f9       	[r15 + 40] |= 1			  ## analog.c:2039:23
 1e17c42:    00 f9 06 c0       	r0 = b[r12 + 6] (u)			  ## analog.c:2040:17
 1e17c46:    00 fe 96 09       	r0 = r0 * 150			  ## analog.c:2040:15
 1e17c4a:    8f f3 05 68       	call 2019338 <delay : 4c58 >			  ## analog.c:2040:5
 1e17c4e:    0d f4 80 fc       	[r15 + 52] |= 2147483648			  ## analog.c:2041:23
 1e17c52:    00 f9 06 c0       	r0 = b[r12 + 6] (u)			  ## analog.c:2042:16
 1e17c56:    00 fe 0a 09       	r0 = r0 * 10			  ## analog.c:2042:14
 1e17c5a:    8f f3 fd 67       	call 2019322 <delay : 4c58 >			  ## analog.c:2042:5
 1e17c5e:    0a f4 04 f9       	[r15 + 40] |= 4			  ## analog.c:2043:23
 1e17c62:    bf f3 69 fa       	call -2862 <bt_fre_offset_value_init : 1e17138 >			  ## analog.c:238:5
 1e17c66:    11 a1             	r1 = sp + 17			  ## analog.c:238:5
 1e17c68:    d0 75             	r0 = 93			  ## analog.c:242:21
 1e17c6a:    32 72             	r2 = 35			  ## analog.c:242:21
 1e17c6c:    bf f3 80 cc       	call -26368 <syscfg_read : 1e11570 >			  ## analog.c:242:21
 1e17c70:    01 04             	r1 = r0.b0 (u)			  ## analog.c:243:13
 1e17c72:    c0 ff 1c 2a 00 00 	r0 = 10780 <tws_bulk_pool_end : 2a1c >			  ## analog.c:243:13
 1e17c78:    c6 ff 33 2a 00 00 	r6 = 10803 <ldo_trim_res : 2a33 >			  ## analog.c:243:13
 1e17c7e:    31 e2 10 10       	if (r1 != 35) goto 32 <bt_rf_init+0x43C : 1e17ca2 >			  ## analog.c:243:13
 1e17c82:    14 a1             	r4 = sp + 17
 1e17c84:    62 71             	r2 = 22			  ## analog.c:244:13
 1e17c86:    41 08             	r1 = r4			  ## analog.c:244:13
 1e17c88:    97 f3 2c 79       	call 3076696 <memcpy : 106ee4 >			  ## analog.c:244:13
 1e17c8c:    61 99             	r1 = r4 + 22			  ## analog.c:245:56
 1e17c8e:    d2 70             	r2 = 13			  ## analog.c:245:13
 1e17c90:    60 08             	r0 = r6			  ## analog.c:245:13
 1e17c92:    97 f3 27 79       	call 3076686 <memcpy : 106ee4 >			  ## analog.c:245:13
 1e17c96:    bf f3 7c fa       	call -2824 <reset_trim_info : 1e17192 >			  ## analog.c:246:13
 1e17c9a:    60 08             	r0 = r6			  ## analog.c:247:13
 1e17c9c:    31 14             	call -1950 <set_ldo_trim_res : 1e17500 >			  ## analog.c:247:13
 1e17c9e:    c0 f3 08 08       	goto 4112 <.GJTIE830_1_1_+0xE66 : 1e18cb2 >			  ## analog.c:247:13
 1e17ca2:    bf f3 ec fa       	call -2600 <txtrim_analog_init : 1e1727e >			  ## analog.c:1116:5
 1e17ca6:    01 70             	r1 = 0			  ## analog.c:1116:5
 1e17ca8:    11 f6 08 e0       	[r14 + 8] = r1			  ## analog.c:1118:17
 1e17cac:    20 70             	r0 = 2			  ## analog.c:1119:5
 1e17cae:    8f f3 d3 67       	call 2019238 <delay : 4c58 >			  ## analog.c:1119:5
 1e17cb2:    11 f6 04 e0       	[r14 + 4] = r1			  ## analog.c:1120:17
 1e17cb6:    20 70             	r0 = 2			  ## analog.c:1121:5
 1e17cb8:    8f f3 ce 67       	call 2019228 <delay : 4c58 >			  ## analog.c:1121:5
 1e17cbc:    11 f6 00 e0       	[r14 + 0] = r1			  ## analog.c:1122:17
 1e17cc0:    20 70             	r0 = 2			  ## analog.c:1123:5
 1e17cc2:    8f f3 c9 67       	call 2019218 <delay : 4c58 >			  ## analog.c:1123:5
 1e17cc6:    02 f4 01 7b       	[r7 + 8] |= 65536			  ## analog.c:1124:20
 1e17cca:    20 70             	r0 = 2			  ## analog.c:1125:5
 1e17ccc:    8f f3 c4 67       	call 2019208 <delay : 4c58 >			  ## analog.c:1125:5
 1e17cd0:    1f f4 02 49       	[r4 + 124] |= 2			  ## analog.c:1126:13
 1e17cd4:    20 70             	r0 = 2			  ## analog.c:1127:5
 1e17cd6:    8f f3 bf 67       	call 2019198 <delay : 4c58 >			  ## analog.c:1127:5
 1e17cda:    1f f4 04 49       	[r4 + 124] |= 4			  ## analog.c:1128:13
 1e17cde:    20 70             	r0 = 2			  ## analog.c:1129:5
 1e17ce0:    8f f3 ba 67       	call 2019188 <delay : 4c58 >			  ## analog.c:1129:5
 1e17ce4:    02 f4 20 e9       	[r14 + 8] |= 32			  ## analog.c:1130:17
 1e17ce8:    20 70             	r0 = 2			  ## analog.c:1131:5
 1e17cea:    8f f3 b5 67       	call 2019178 <delay : 4c58 >			  ## analog.c:1131:5
 1e17cee:    02 f4 02 ec       	[r14 + 8] |= 33554432			  ## analog.c:1132:17
 1e17cf2:    20 70             	r0 = 2			  ## analog.c:1133:5
 1e17cf4:    8f f3 b0 67       	call 2019168 <delay : 4c58 >			  ## analog.c:1133:5
 1e17cf8:    20 70             	r0 = 2			  ## analog.c:1135:5
 1e17cfa:    8f f3 ad 67       	call 2019162 <delay : 4c58 >			  ## analog.c:1135:5
 1e17cfe:    20 70             	r0 = 2			  ## analog.c:1137:5
 1e17d00:    8f f3 aa 67       	call 2019156 <delay : 4c58 >			  ## analog.c:1137:5
 1e17d04:    00 f4 20 e9       	[r14 + 0] |= 32			  ## analog.c:1138:17
 1e17d08:    20 70             	r0 = 2			  ## analog.c:1139:5
 1e17d0a:    8f f3 a5 67       	call 2019146 <delay : 4c58 >			  ## analog.c:1139:5
 1e17d0e:    00 f4 01 ea       	[r14 + 0] |= 256			  ## analog.c:1140:17
 1e17d12:    20 70             	r0 = 2			  ## analog.c:1141:5
 1e17d14:    8f f3 a0 67       	call 2019136 <delay : 4c58 >			  ## analog.c:1141:5
 1e17d18:    00 f6 00 e0       	r0 = [r14 + 0]			  ## analog.c:1142:17
 1e17d1c:    f0 b4             	r0 &= 4294966783			  ## analog.c:1142:17
 1e17d1e:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:1142:17
 1e17d22:    20 70             	r0 = 2			  ## analog.c:1143:5
 1e17d24:    8f f3 98 67       	call 2019120 <delay : 4c58 >			  ## analog.c:1143:5
 1e17d28:    00 f4 0c ea       	[r14 + 0] |= 3072			  ## analog.c:1144:17
 1e17d2c:    20 70             	r0 = 2			  ## analog.c:1145:5
 1e17d2e:    8f f3 93 67       	call 2019110 <delay : 4c58 >			  ## analog.c:1145:5
 1e17d32:    00 f4 01 eb       	[r14 + 0] |= 65536			  ## analog.c:1146:17
 1e17d36:    20 70             	r0 = 2			  ## analog.c:1147:5
 1e17d38:    8f f3 8e 67       	call 2019100 <delay : 4c58 >			  ## analog.c:1147:5
 1e17d3c:    00 f4 02 eb       	[r14 + 0] |= 131072			  ## analog.c:1148:17
 1e17d40:    20 70             	r0 = 2			  ## analog.c:1149:5
 1e17d42:    8f f3 89 67       	call 2019090 <delay : 4c58 >			  ## analog.c:1149:5
 1e17d46:    00 f4 20 eb       	[r14 + 0] |= 2097152			  ## analog.c:1150:17
 1e17d4a:    20 70             	r0 = 2			  ## analog.c:1151:5
 1e17d4c:    8f f3 84 67       	call 2019080 <delay : 4c58 >			  ## analog.c:1151:5
 1e17d50:    01 f4 80 e9       	[r14 + 4] |= 128			  ## analog.c:1152:17
 1e17d54:    20 70             	r0 = 2			  ## analog.c:1153:5
 1e17d56:    8f f3 7f 67       	call 2019070 <delay : 4c58 >			  ## analog.c:1153:5
 1e17d5a:    01 f4 40 e9       	[r14 + 4] |= 64			  ## analog.c:1154:17
 1e17d5e:    20 70             	r0 = 2			  ## analog.c:1155:5
 1e17d60:    8f f3 7a 67       	call 2019060 <delay : 4c58 >			  ## analog.c:1155:5
 1e17d64:    09 f4 08 4a       	[r4 + 36] |= 2048			  ## analog.c:1156:17
 1e17d68:    00 f6 00 e0       	r0 = [r14 + 0]			  ## analog.c:1163:17
 1e17d6c:    f0 b8             	r0 &= 4294836223			  ## analog.c:1163:17
 1e17d6e:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:1163:17
 1e17d72:    50 70             	r0 = 5			  ## analog.c:1164:5
 1e17d74:    8f f3 70 67       	call 2019040 <delay : 4c58 >			  ## analog.c:1164:5
 1e17d78:    00 f4 02 eb       	[r14 + 0] |= 131072			  ## analog.c:1165:17
 1e17d7c:    00 f6 0c e0       	r0 = [r14 + 12]			  ## analog.c:1166:13
 1e17d80:    3a f3 fc 0f       	if ((r0 & 67108864) != 0) goto -8 <bt_rf_init+0x516 : 1e17d7c >			  ## analog.c:1166:5
 1e17d84:    00 70             	r0 = 0
 1e17d86:    38 02             	[sp+12] = r0
 1e17d88:    f3 07             	r3 = -1
 1e17d8a:    3f 70             	r15 = 3
 1e17d8c:    0d fb 00 fc       	r13 = -1024 <bank_code_load_addr+0x1DC608 : 1fffc00 >
 1e17d90:    09 fb ff 03       	r9 = 1023 <BTCTLER_LE_RAM_TOTAL+0x21 : 3ff >
 1e17d94:    cb ff ff 03 f0 ff 	r11 = 4293919743 <bank_code_load_addr+0xDCE07 : 1f003ff >
 1e17d9a:    4c fb 10 db       	r12 = r13 + 1048576
 1e17d9e:    0a 70             	r10 = 0
 1e17da0:    01 fb 9c ff       	r1 = -100 <bank_code_load_addr+0x1DC9A4 : 1ffff9c >
 1e17da4:    32 08             	r2 = r3
 1e17da6:    06 08             	r6 = r0
 1e17da8:    e4 fd 00 5f       	r5 = r15.b0 (u)
 1e17dac:    35 e0 24 80       	if (r5 > 3) goto 72 <.GJTIE830_0_0_+0x42 : 1e17df8 >
 1e17db0:    a5 00             	tbb [r5]


.GJTIS830_0_0_:
 1e17db2:    02     < 2 : 0x2 >
 1e17db3:    0b     < 11 : 0xB >
 1e17db4:    02     < 2 : 0x2 >
 1e17db5:    15     < 21 : 0x15 >
 1e17db6:    20 48             	r0 = [r4 + 8]
 1e17db8:    e2 fd d0 00       	r0 = r0 & r13
 1e17dbc:    28 48             	[r4 + 8] = r0
 1e17dbe:    20 48             	r0 = [r4 + 8]
 1e17dc0:    e2 fd 90 31       	r3 = r1 & r9
 1e17dc4:    50 b6             	r0 |= r3
 1e17dc6:    17 18             	goto 46 <.GJTIE830_0_0_+0x40 : 1e17df6 >
 1e17dc8:    20 48             	r0 = [r4 + 8]			  ## analog.c:1174:29
 1e17dca:    e2 fd b0 00       	r0 = r0 & r11			  ## analog.c:1174:29
 1e17dce:    28 48             	[r4 + 8] = r0			  ## analog.c:1174:29
 1e17dd0:    20 48             	r0 = [r4 + 8]			  ## analog.c:1175:29
 1e17dd2:    8b c2             	r3 = r1 << 10			  ## analog.c:1175:32
 1e17dd4:    e2 fd c0 33       	r3 = r3 & r12			  ## analog.c:1175:32
 1e17dd8:    50 b6             	r0 |= r3			  ## analog.c:1175:29
 1e17dda:    0d 18             	goto 26 <.GJTIE830_0_0_+0x40 : 1e17df6 >			  ## analog.c:1175:29
 1e17ddc:    20 48             	r0 = [r4 + 8]			  ## analog.c:1180:29
 1e17dde:    e2 fd b0 00       	r0 = r0 & r11			  ## analog.c:1180:29
 1e17de2:    28 48             	[r4 + 8] = r0			  ## analog.c:1180:29
 1e17de4:    20 48             	r0 = [r4 + 8]			  ## analog.c:1181:29
 1e17de6:    8b c2             	r3 = r1 << 10			  ## analog.c:1181:32
 1e17de8:    e2 fd c0 33       	r3 = r3 & r12			  ## analog.c:1181:32
 1e17dec:    50 b6             	r0 |= r3			  ## analog.c:1181:29
 1e17dee:    28 48             	[r4 + 8] = r0			  ## analog.c:1181:29
 1e17df0:    20 48             	r0 = [r4 + 8]			  ## analog.c:1182:29
 1e17df2:    e2 fd d0 00       	r0 = r0 & r13			  ## analog.c:1182:29
 1e17df6:    28 48             	[r4 + 8] = r0
 1e17df8:    00 f6 00 e0       	r0 = [r14 + 0]			  ## analog.c:1186:25
 1e17dfc:    f0 b8             	r0 &= 4294836223			  ## analog.c:1186:25
 1e17dfe:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:1186:25
 1e17e02:    50 70             	r0 = 5			  ## analog.c:1187:13
 1e17e04:    8f f3 28 67       	call 2018896 <delay : 4c58 >			  ## analog.c:1187:13
 1e17e08:    00 f4 02 eb       	[r14 + 0] |= 131072			  ## analog.c:1188:25
 1e17e0c:    00 f6 0c e0       	r0 = [r14 + 12]			  ## analog.c:1189:21
 1e17e10:    3a f3 fc 0f       	if ((r0 & 67108864) != 0) goto -8 <.GJTIE830_0_0_+0x56 : 1e17e0c >			  ## analog.c:1189:13
 1e17e14:    00 f6 10 e0       	r0 = [r14 + 16]			  ## analog.c:1192:24
 1e17e18:    03 f6 14 e0       	r3 = [r14 + 20]			  ## analog.c:1194:24
 1e17e1c:    b0 fd 40 83       	r8 = sextra(r3, p:8, l:16)			  ## analog.c:1195:29
 1e17e20:    b0 fd 40 00       	r0 = sextra(r0, p:8, l:16)			  ## analog.c:1193:29
 1e17e24:    03 0e             	r3 = r0 * r0			  ## analog.c:1196:28
 1e17e26:    80 fe 80 38       	r3 += r8 * r8			  ## analog.c:1196:37
 1e17e2a:    10 08             	r0 = r1			  ## analog.c:1198:17
 1e17e2c:    23 f2 01 30       	if (r3 < r2) goto 2 <.GJTIE830_0_0_+0x7C : 1e17e32 >
 1e17e30:    60 08             	r0 = r6			  ## analog.c:1198:17
 1e17e32:    23 f2 01 30       	if (r3 < r2) goto 2 <.GJTIE830_0_0_+0x82 : 1e17e38 >
 1e17e36:    23 08             	r3 = r2			  ## analog.c:1198:17
 1e17e38:    11 80             	r1 += 1			  ## analog.c:1169:34
 1e17e3a:    32 08             	r2 = r3			  ## analog.c:1169:34
 1e17e3c:    06 08             	r6 = r0			  ## analog.c:1169:34
 1e17e3e:    41 e6 b3 1f       	if (r1 != 100) goto -154 <bt_rf_init+0x542 : 1e17da8 >			  ## analog.c:1169:34
 1e17e42:    35 e0 17 80       	if (r5 > 3) goto 46 <.GJTIE830_1_1_+0x28 : 1e17e74 >
 1e17e46:    a5 00             	tbb [r5]


.GJTIS830_1_1_:
 1e17e48:    02     < 2 : 0x2 >
 1e17e49:    0a     < 10 : 0xA >
 1e17e4a:    02     < 2 : 0x2 >
 1e17e4b:    0a     < 10 : 0xA >
 1e17e4c:    21 48             	r1 = [r4 + 8]			  ## analog.c:1204:25
 1e17e4e:    e2 fd d0 11       	r1 = r1 & r13			  ## analog.c:1204:25
 1e17e52:    29 48             	[r4 + 8] = r1			  ## analog.c:1204:25
 1e17e54:    e2 fd 90 10       	r1 = r0 & r9			  ## analog.c:1205:28
 1e17e58:    0a 08             	r10 = r0			  ## analog.c:1205:28
 1e17e5a:    08 18             	goto 16 <.GJTIE830_1_1_+0x20 : 1e17e6c >			  ## analog.c:1205:28
 1e17e5c:    21 48             	r1 = [r4 + 8]			  ## analog.c:1210:25
 1e17e5e:    e2 fd b0 11       	r1 = r1 & r11			  ## analog.c:1210:25
 1e17e62:    29 48             	[r4 + 8] = r1			  ## analog.c:1210:25
 1e17e64:    81 c2             	r1 = r0 << 10			  ## analog.c:1211:28
 1e17e66:    e2 fd c0 11       	r1 = r1 & r12			  ## analog.c:1211:28
 1e17e6a:    38 02             	[sp+12] = r0			  ## analog.c:1211:28
 1e17e6c:    22 48             	r2 = [r4 + 8]
 1e17e6e:    51 b4             	r1 |= r2
 1e17e70:    29 48             	[r4 + 8] = r1
 1e17e72:    f3 07             	r3 = -1
 1e17e74:    f1 fc ff ff       	r1 = r15 + -1			  ## analog.c:1168:26
 1e17e78:    5f 04             	r15 = r1.b0 (s)			  ## analog.c:1168:26
 1e17e7a:    ff ef 91 cf       	ifs (r15 > -1) goto -222 <bt_rf_init+0x53A : 1e17da0 >			  ## analog.c:1168:26
 1e17e7e:    cb ff 1c 2a 00 00 	r11 = 10780 <tws_bulk_pool_end : 2a1c >
 1e17e84:    1a f9 00 b0       	b[r11 + 0] = r10			  ## analog.c:1221:22
 1e17e88:    f2 fd 40 0a       	r0 = r10 >> 8			  ## analog.c:1221:22
 1e17e8c:    10 f9 01 b0       	b[r11 + 1] = r0			  ## analog.c:1221:22
 1e17e90:    31 02             	r1 = [sp+12]			  ## analog.c:1221:22
 1e17e92:    08 d2             	r0 = r1 >> 8			  ## analog.c:1222:22
 1e17e94:    10 f9 03 b0       	b[r11 + 3] = r0			  ## analog.c:1222:22
 1e17e98:    11 f9 02 b0       	b[r11 + 2] = r1			  ## analog.c:1222:22
 1e17e9c:    20 4e             	r0 = [r7 + 8]			  ## analog.c:1224:20
 1e17e9e:    70 b8             	r0 &= 4294901759			  ## analog.c:1224:20
 1e17ea0:    28 4e             	[r7 + 8] = r0			  ## analog.c:1224:20
 1e17ea2:    20 70             	r0 = 2			  ## analog.c:1225:5
 1e17ea4:    8f f3 d8 66       	call 2018736 <delay : 4c58 >			  ## analog.c:1225:5
 1e17ea8:    f0 49             	r0 = [r4 + 124]			  ## analog.c:1226:13
 1e17eaa:    f0 b0             	r0 &= 4294967293			  ## analog.c:1226:13
 1e17eac:    f8 49             	[r4 + 124] = r0			  ## analog.c:1226:13
 1e17eae:    20 70             	r0 = 2			  ## analog.c:1227:5
 1e17eb0:    8f f3 d2 66       	call 2018724 <delay : 4c58 >			  ## analog.c:1227:5
 1e17eb4:    f0 49             	r0 = [r4 + 124]			  ## analog.c:1228:13
 1e17eb6:    70 b1             	r0 &= 4294967291			  ## analog.c:1228:13
 1e17eb8:    f8 49             	[r4 + 124] = r0			  ## analog.c:1228:13
 1e17eba:    20 70             	r0 = 2			  ## analog.c:1229:5
 1e17ebc:    8f f3 cc 66       	call 2018712 <delay : 4c58 >			  ## analog.c:1229:5
 1e17ec0:    05 70             	r5 = 0			  ## analog.c:1229:5
 1e17ec2:    15 f6 00 e0       	[r14 + 0] = r5			  ## analog.c:1230:45
 1e17ec6:    15 f6 04 e0       	[r14 + 4] = r5			  ## analog.c:1230:31
 1e17eca:    15 f6 08 e0       	[r14 + 8] = r5			  ## analog.c:1230:17
 1e17ece:    20 70             	r0 = 2			  ## analog.c:1231:5
 1e17ed0:    8f f3 c2 66       	call 2018692 <delay : 4c58 >			  ## analog.c:1231:5
 1e17ed4:    90 48             	r0 = [r4 + 36]			  ## analog.c:1232:17
 1e17ed6:    f0 b5             	r0 &= 4294965247			  ## analog.c:1232:17
 1e17ed8:    98 48             	[r4 + 36] = r0			  ## analog.c:1232:17
 1e17eda:    bf f3 d0 f9       	call -3168 <txtrim_analog_init : 1e1727e >			  ## analog.c:1240:5
 1e17ede:    15 f6 00 e0       	[r14 + 0] = r5			  ## analog.c:1241:45
 1e17ee2:    15 f6 04 e0       	[r14 + 4] = r5			  ## analog.c:1241:31
 1e17ee6:    15 f6 08 e0       	[r14 + 8] = r5			  ## analog.c:1241:17
 1e17eea:    02 f4 01 7b       	[r7 + 8] |= 65536			  ## analog.c:1243:20
 1e17eee:    20 70             	r0 = 2			  ## analog.c:1244:5
 1e17ef0:    8f f3 b2 66       	call 2018660 <delay : 4c58 >			  ## analog.c:1244:5
 1e17ef4:    1f f4 02 49       	[r4 + 124] |= 2			  ## analog.c:1245:13
 1e17ef8:    20 70             	r0 = 2			  ## analog.c:1246:5
 1e17efa:    8f f3 ad 66       	call 2018650 <delay : 4c58 >			  ## analog.c:1246:5
 1e17efe:    1f f4 04 49       	[r4 + 124] |= 4			  ## analog.c:1247:13
 1e17f02:    20 70             	r0 = 2			  ## analog.c:1248:5
 1e17f04:    8f f3 a8 66       	call 2018640 <delay : 4c58 >			  ## analog.c:1248:5
 1e17f08:    02 f4 15 e9       	[r14 + 8] |= 21			  ## analog.c:1249:17
 1e17f0c:    20 70             	r0 = 2			  ## analog.c:1250:5
 1e17f0e:    8f f3 a3 66       	call 2018630 <delay : 4c58 >			  ## analog.c:1250:5
 1e17f12:    02 f4 02 ec       	[r14 + 8] |= 33554432			  ## analog.c:1251:17
 1e17f16:    20 70             	r0 = 2			  ## analog.c:1252:5
 1e17f18:    8f f3 9e 66       	call 2018620 <delay : 4c58 >			  ## analog.c:1252:5
 1e17f1c:    00 f6 08 e0       	r0 = [r14 + 8]			  ## analog.c:1253:17
 1e17f20:    10 f6 08 e0       	[r14 + 8] = r0			  ## analog.c:1253:17
 1e17f24:    20 70             	r0 = 2			  ## analog.c:1254:5
 1e17f26:    8f f3 97 66       	call 2018606 <delay : 4c58 >			  ## analog.c:1254:5
 1e17f2a:    00 f6 08 e0       	r0 = [r14 + 8]			  ## analog.c:1255:17
 1e17f2e:    10 f6 08 e0       	[r14 + 8] = r0			  ## analog.c:1255:17
 1e17f32:    20 70             	r0 = 2			  ## analog.c:1256:5
 1e17f34:    8f f3 90 66       	call 2018592 <delay : 4c58 >			  ## analog.c:1256:5
 1e17f38:    00 f4 2a e9       	[r14 + 0] |= 42			  ## analog.c:1257:17
 1e17f3c:    20 70             	r0 = 2			  ## analog.c:1258:5
 1e17f3e:    8f f3 8b 66       	call 2018582 <delay : 4c58 >			  ## analog.c:1258:5
 1e17f42:    00 f4 01 ea       	[r14 + 0] |= 256			  ## analog.c:1259:17
 1e17f46:    20 70             	r0 = 2			  ## analog.c:1260:5
 1e17f48:    8f f3 86 66       	call 2018572 <delay : 4c58 >			  ## analog.c:1260:5
 1e17f4c:    00 f6 00 e0       	r0 = [r14 + 0]			  ## analog.c:1261:17
 1e17f50:    f0 b4             	r0 &= 4294966783			  ## analog.c:1261:17
 1e17f52:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:1261:17
 1e17f56:    20 70             	r0 = 2			  ## analog.c:1262:5
 1e17f58:    8f f3 7e 66       	call 2018556 <delay : 4c58 >			  ## analog.c:1262:5
 1e17f5c:    00 f4 0c ea       	[r14 + 0] |= 3072			  ## analog.c:1263:17
 1e17f60:    20 70             	r0 = 2			  ## analog.c:1264:5
 1e17f62:    8f f3 79 66       	call 2018546 <delay : 4c58 >			  ## analog.c:1264:5
 1e17f66:    00 f4 01 eb       	[r14 + 0] |= 65536			  ## analog.c:1265:17
 1e17f6a:    20 70             	r0 = 2			  ## analog.c:1266:5
 1e17f6c:    8f f3 74 66       	call 2018536 <delay : 4c58 >			  ## analog.c:1266:5
 1e17f70:    00 f4 02 eb       	[r14 + 0] |= 131072			  ## analog.c:1267:17
 1e17f74:    20 70             	r0 = 2			  ## analog.c:1268:5
 1e17f76:    8f f3 6f 66       	call 2018526 <delay : 4c58 >			  ## analog.c:1268:5
 1e17f7a:    00 f4 20 eb       	[r14 + 0] |= 2097152			  ## analog.c:1269:17
 1e17f7e:    20 70             	r0 = 2			  ## analog.c:1270:5
 1e17f80:    8f f3 6a 66       	call 2018516 <delay : 4c58 >			  ## analog.c:1270:5
 1e17f84:    01 f4 80 e9       	[r14 + 4] |= 128			  ## analog.c:1271:17
 1e17f88:    20 70             	r0 = 2			  ## analog.c:1272:5
 1e17f8a:    8f f3 65 66       	call 2018506 <delay : 4c58 >			  ## analog.c:1272:5
 1e17f8e:    01 f4 40 e9       	[r14 + 4] |= 64			  ## analog.c:1273:17
 1e17f92:    20 70             	r0 = 2			  ## analog.c:1274:5
 1e17f94:    8f f3 60 66       	call 2018496 <delay : 4c58 >			  ## analog.c:1274:5
 1e17f98:    09 f4 08 4a       	[r4 + 36] |= 2048			  ## analog.c:1275:17
 1e17f9c:    40 48             	r0 = [r4 + 16]			  ## analog.c:1285:17
 1e17f9e:    30 fd ff 0a       	r0 = r0 & 4294902015			  ## analog.c:1285:17
 1e17fa2:    48 48             	[r4 + 16] = r0			  ## analog.c:1285:17
 1e17fa4:    04 f4 40 4a       	[r4 + 16] |= 16384			  ## analog.c:1286:17
 1e17fa8:    00 f6 00 e0       	r0 = [r14 + 0]			  ## analog.c:1290:17
 1e17fac:    f0 b8             	r0 &= 4294836223			  ## analog.c:1290:17
 1e17fae:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:1290:17
 1e17fb2:    20 70             	r0 = 2			  ## analog.c:1291:5
 1e17fb4:    8f f3 50 66       	call 2018464 <delay : 4c58 >			  ## analog.c:1291:5
 1e17fb8:    00 f4 02 eb       	[r14 + 0] |= 131072			  ## analog.c:1292:17
 1e17fbc:    00 f6 0c e0       	r0 = [r14 + 12]			  ## analog.c:1293:13
 1e17fc0:    3a f3 fc 0f       	if ((r0 & 67108864) != 0) goto -8 <.GJTIE830_1_1_+0x170 : 1e17fbc >			  ## analog.c:1293:5
 1e17fc4:    40 48             	r0 = [r4 + 16]
 1e17fc6:    30 fd ff 09       	r0 = r0 & 4294967040
 1e17fca:    48 48             	[r4 + 16] = r0
 1e17fcc:    08 70             	r8 = 0
 1e17fce:    f3 07             	r3 = -1
 1e17fd0:    e2 71             	r2 = 30
 1e17fd2:    ca ff 00 19 1e 00 	r10 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e17fd8:    40 48             	r0 = [r4 + 16]			  ## analog.c:1297:21
 1e17fda:    50 b4             	r0 |= r2			  ## analog.c:1297:21
 1e17fdc:    48 48             	[r4 + 16] = r0			  ## analog.c:1297:21
 1e17fde:    00 f6 00 e0       	r0 = [r14 + 0]			  ## analog.c:1299:21
 1e17fe2:    85 08             	r5 = r8			  ## analog.c:1299:21
 1e17fe4:    f0 b8             	r0 &= 4294836223			  ## analog.c:1299:21
 1e17fe6:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:1299:21
 1e17fea:    20 70             	r0 = 2			  ## analog.c:1300:9
 1e17fec:    8f f3 34 66       	call 2018408 <delay : 4c58 >			  ## analog.c:1300:9
 1e17ff0:    00 f4 02 eb       	[r14 + 0] |= 131072			  ## analog.c:1301:21
 1e17ff4:    00 f6 0c e0       	r0 = [r14 + 12]			  ## analog.c:1302:17
 1e17ff8:    3a f3 fc 0f       	if ((r0 & 67108864) != 0) goto -8 <.GJTIE830_1_1_+0x1A8 : 1e17ff4 >			  ## analog.c:1302:9
 1e17ffc:    00 f6 10 e0       	r0 = [r14 + 16]			  ## analog.c:1305:20
 1e18000:    01 f6 14 e0       	r1 = [r14 + 20]			  ## analog.c:1307:20
 1e18004:    46 48             	r6 = [r4 + 16]			  ## analog.c:1307:20
 1e18006:    36 fd ff 69       	r6 = r6 & 4294967040			  ## analog.c:1307:20
 1e1800a:    b0 fd 40 11       	r1 = sextra(r1, p:8, l:16)			  ## analog.c:1308:25
 1e1800e:    b0 fd 40 00       	r0 = sextra(r0, p:8, l:16)			  ## analog.c:1306:25
 1e18012:    00 0e             	r0 = r0 * r0			  ## analog.c:1309:24
 1e18014:    80 fe 10 01       	r0 += r1 * r1			  ## analog.c:1309:33
 1e18018:    4e 48             	[r4 + 16] = r6
 1e1801a:    28 08             	r8 = r2			  ## analog.c:1311:13
 1e1801c:    30 f2 01 30       	if (r0 < r3) goto 2 <.GJTIE830_1_1_+0x1D6 : 1e18022 >			  ## analog.c:1311:13
 1e18020:    58 08             	r8 = r5			  ## analog.c:1311:13
 1e18022:    30 f2 01 30       	if (r0 < r3) goto 2 <.GJTIE830_1_1_+0x1DC : 1e18028 >
 1e18026:    30 08             	r0 = r3			  ## analog.c:1311:13
 1e18028:    12 80             	r2 += 1			  ## analog.c:1295:27
 1e1802a:    03 08             	r3 = r0			  ## analog.c:1295:27
 1e1802c:    a2 e5 d4 1f       	if (r2 != 90) goto -88 <.GJTIE830_1_1_+0x18C : 1e17fd8 >
 1e18030:    40 48             	r0 = [r4 + 16]			  ## analog.c:1320:17
 1e18032:    e4 fd 00 28       	r2 = r8.b0 (u)			  ## analog.c:1320:21
 1e18036:    50 b4             	r0 |= r2			  ## analog.c:1320:17
 1e18038:    48 48             	[r4 + 16] = r0			  ## analog.c:1320:17
 1e1803a:    f2 fd 40 08       	r0 = r8 >> 8			  ## analog.c:1326:22
 1e1803e:    10 f9 05 b0       	b[r11 + 5] = r0			  ## analog.c:1326:22
 1e18042:    18 f9 04 b0       	b[r11 + 4] = r8			  ## analog.c:1326:22
 1e18046:    40 48             	r0 = [r4 + 16]			  ## analog.c:1328:17
 1e18048:    30 fd ff 0b       	r0 = r0 & 4278255615			  ## analog.c:1328:17
 1e1804c:    48 48             	[r4 + 16] = r0			  ## analog.c:1328:17
 1e1804e:    40 48             	r0 = [r4 + 16]			  ## analog.c:1329:17
 1e18050:    48 48             	[r4 + 16] = r0			  ## analog.c:1329:17
 1e18052:    40 48             	r0 = [r4 + 16]
 1e18054:    30 fd ff 0b       	r0 = r0 & 4278255615
 1e18058:    48 48             	[r4 + 16] = r0
 1e1805a:    f3 07             	r3 = -1
 1e1805c:    c2 ff e2 ff 00 00 	r2 = 65506 <_IRQ_MEM_ADDR+0xE2 : ffe2 >
 1e18062:    80 08             	r0 = r8
 1e18064:    45 48             	r5 = [r4 + 16]			  ## analog.c:1334:21
 1e18066:    86 04             	r6 = r2.b0 (u)			  ## analog.c:1334:24
 1e18068:    36 c4             	r6 = r6 << 16			  ## analog.c:1334:24
 1e1806a:    55 bc             	r5 |= r6			  ## analog.c:1334:21
 1e1806c:    4d 48             	[r4 + 16] = r5			  ## analog.c:1334:21
 1e1806e:    06 f6 00 e0       	r6 = [r14 + 0]			  ## analog.c:1336:21
 1e18072:    09 08             	r9 = r0			  ## analog.c:1336:21
 1e18074:    30 fd 02 6b       	r0 = r6 & 4294836223			  ## analog.c:1336:21
 1e18078:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:1336:21
 1e1807c:    20 70             	r0 = 2			  ## analog.c:1337:9
 1e1807e:    8f f3 eb 65       	call 2018262 <delay : 4c58 >			  ## analog.c:1337:9
 1e18082:    00 f4 02 eb       	[r14 + 0] |= 131072			  ## analog.c:1338:21
 1e18086:    00 f6 0c e0       	r0 = [r14 + 12]			  ## analog.c:1339:17
 1e1808a:    3a f3 fc 0f       	if ((r0 & 67108864) != 0) goto -8 <.GJTIE830_1_1_+0x23A : 1e18086 >			  ## analog.c:1339:9
 1e1808e:    00 f6 10 e0       	r0 = [r14 + 16]			  ## analog.c:1342:20
 1e18092:    06 f6 14 e0       	r6 = [r14 + 20]			  ## analog.c:1344:20
 1e18096:    41 48             	r1 = [r4 + 16]			  ## analog.c:1344:20
 1e18098:    31 fd ff 1b       	r1 = r1 & 4278255615			  ## analog.c:1344:20
 1e1809c:    b0 fd 40 56       	r5 = sextra(r6, p:8, l:16)			  ## analog.c:1345:25
 1e180a0:    b0 fd 40 00       	r0 = sextra(r0, p:8, l:16)			  ## analog.c:1343:25
 1e180a4:    06 0e             	r6 = r0 * r0			  ## analog.c:1346:24
 1e180a6:    80 fe 50 65       	r6 += r5 * r5			  ## analog.c:1346:33
 1e180aa:    49 48             	[r4 + 16] = r1
 1e180ac:    20 08             	r0 = r2			  ## analog.c:1348:13
 1e180ae:    36 f2 01 30       	if (r6 < r3) goto 2 <.GJTIE830_1_1_+0x268 : 1e180b4 >
 1e180b2:    90 08             	r0 = r9			  ## analog.c:1348:13
 1e180b4:    36 f2 01 30       	if (r6 < r3) goto 2 <.GJTIE830_1_1_+0x26E : 1e180ba >
 1e180b8:    36 08             	r6 = r3			  ## analog.c:1348:13
 1e180ba:    12 80             	r2 += 1			  ## analog.c:1332:28
 1e180bc:    a1 04             	r1 = r2.l (u)			  ## analog.c:1332:28
 1e180be:    63 08             	r3 = r6			  ## analog.c:1332:28
 1e180c0:    e1 e1 d0 1f       	if (r1 != 30) goto -96 <.GJTIE830_1_1_+0x218 : 1e18064 >
 1e180c4:    41 48             	r1 = [r4 + 16]			  ## analog.c:1357:17
 1e180c6:    02 c4             	r2 = r0 << 16			  ## analog.c:1357:20
 1e180c8:    42 fb ff 2b       	r2 = r2 + 16711680			  ## analog.c:1357:20
 1e180cc:    22 fd ff 2b       	r2 = r2 & 16711680			  ## analog.c:1357:20
 1e180d0:    51 b4             	r1 |= r2			  ## analog.c:1357:17
 1e180d2:    e6 fd 00 28       	r2 = r8.l (u)			  ## analog.c:1359:14
 1e180d6:    49 48             	[r4 + 16] = r1			  ## analog.c:1357:17
 1e180d8:    f2 e3 04 80       	if (r2 > 63) goto 8 <.GJTIE830_1_1_+0x298 : 1e180e4 >			  ## analog.c:1359:9
 1e180dc:    01 74             	r1 = 64			  ## analog.c:1360:24
 1e180de:    c0 fe 20 11       	r1 = r1 / r2 (u)			  ## analog.c:1360:24
 1e180e2:    02 18             	goto 4 <.GJTIE830_1_1_+0x29C : 1e180e8 >			  ## analog.c:1360:24
 1e180e4:    8a fd 30 18       	r1 = uextra(r8, p:6, l:10)			  ## analog.c:1362:24
 1e180e8:    01 fe 0a 19       	r1 = r1 * 10
 1e180ec:    62 04             	r2 = r1.l (u)
 1e180ee:    01 fb b0 04       	r1 = 1200 <BTCTLER_LE_RAM_TOTAL+0xD2 : 4b0 >			  ## analog.c:1364:26
 1e180f2:    c0 fe 20 11       	r1 = r1 / r2 (u)			  ## analog.c:1364:26
 1e180f6:    63 07             	r3 = -10			  ## analog.c:1365:15
 1e180f8:    ce 0e             	r6 = r1 * r3			  ## analog.c:1365:15
 1e180fa:    a5 70             	r5 = 10			  ## analog.c:1365:15
 1e180fc:    80 fe 50 61       	r6 += r1 * r5			  ## analog.c:1365:15
 1e18100:    56 e0 06 b0       	ifs (r6 < 5) goto 12 <.GJTIE830_1_1_+0x2C4 : 1e18110 >			  ## analog.c:1365:15
 1e18104:    01 fe 0a 19       	r1 = r1 * 10			  ## analog.c:1364:37
 1e18108:    a1 80             	r1 += 10			  ## analog.c:1366:22
 1e1810a:    61 04             	r1 = r1.l (u)			  ## analog.c:1366:22
 1e1810c:    c0 fe 50 11       	r1 = r1 / r5 (u)			  ## analog.c:1366:28
 1e18110:    06 fb dc 05       	r6 = 1500 <BTCTLER_CONTROLLER_DATA_SIZE+0x11E : 5dc >			  ## analog.c:1371:30
 1e18114:    c0 fe 20 26       	r2 = r6 / r2 (u)			  ## analog.c:1371:30
 1e18118:    d3 0e             	r3 = r2 * r3			  ## analog.c:1372:17
 1e1811a:    80 fe 50 32       	r3 += r2 * r5			  ## analog.c:1372:17
 1e1811e:    53 e0 07 b0       	ifs (r3 < 5) goto 14 <.GJTIE830_1_1_+0x2E4 : 1e18130 >			  ## analog.c:1372:17
 1e18122:    02 fe 0a 29       	r2 = r2 * 10			  ## analog.c:1371:41
 1e18126:    a2 80             	r2 += 10			  ## analog.c:1373:26
 1e18128:    a2 04             	r2 = r2.l (u)			  ## analog.c:1373:26
 1e1812a:    a3 70             	r3 = 10			  ## analog.c:1373:26
 1e1812c:    c0 fe 30 22       	r2 = r2 / r3 (u)			  ## analog.c:1373:32
 1e18130:    10 f9 0c b0       	b[r11 + 12] = r0			  ## analog.c:1379:22
 1e18134:    00 d2             	r0 = r0 >> 8			  ## analog.c:1379:22
 1e18136:    10 f9 0d b0       	b[r11 + 13] = r0			  ## analog.c:1379:22
 1e1813a:    40 48             	r0 = [r4 + 16]			  ## analog.c:1380:17
 1e1813c:    30 fd ff 0a       	r0 = r0 & 4294902015			  ## analog.c:1380:17
 1e18140:    48 48             	[r4 + 16] = r0			  ## analog.c:1380:17
 1e18142:    04 f4 78 4a       	[r4 + 16] |= 30720			  ## analog.c:1381:17
 1e18146:    40 48             	r0 = [r4 + 16]			  ## analog.c:1382:17
 1e18148:    30 fd ff 09       	r0 = r0 & 4294967040			  ## analog.c:1382:17
 1e1814c:    48 48             	[r4 + 16] = r0			  ## analog.c:1382:17
 1e1814e:    40 48             	r0 = [r4 + 16]			  ## analog.c:1383:17
 1e18150:    43 04             	r3 = r1.b0 (u)			  ## analog.c:1383:20
 1e18152:    50 b6             	r0 |= r3			  ## analog.c:1383:17
 1e18154:    48 48             	[r4 + 16] = r0			  ## analog.c:1383:17
 1e18156:    05 70             	r5 = 0			  ## analog.c:1383:17
 1e18158:    15 f9 07 b0       	b[r11 + 7] = r5			  ## analog.c:1385:22
 1e1815c:    80 77             	r0 = 120			  ## analog.c:1385:22
 1e1815e:    10 f9 06 b0       	b[r11 + 6] = r0			  ## analog.c:1385:22
 1e18162:    08 d2             	r0 = r1 >> 8			  ## analog.c:1386:22
 1e18164:    10 f9 05 b0       	b[r11 + 5] = r0			  ## analog.c:1386:22
 1e18168:    11 f9 04 b0       	b[r11 + 4] = r1			  ## analog.c:1386:22
 1e1816c:    15 f9 0b b0       	b[r11 + 11] = r5			  ## analog.c:1388:24
 1e18170:    60 79             	r0 = 150			  ## analog.c:1388:24
 1e18172:    10 f9 0a b0       	b[r11 + 10] = r0			  ## analog.c:1388:24
 1e18176:    10 d2             	r0 = r2 >> 8			  ## analog.c:1389:24
 1e18178:    10 f9 09 b0       	b[r11 + 9] = r0			  ## analog.c:1389:24
 1e1817c:    12 f9 08 b0       	b[r11 + 8] = r2			  ## analog.c:1389:24
 1e18180:    20 4e             	r0 = [r7 + 8]			  ## analog.c:1392:20
 1e18182:    70 b8             	r0 &= 4294901759			  ## analog.c:1392:20
 1e18184:    28 4e             	[r7 + 8] = r0			  ## analog.c:1392:20
 1e18186:    20 70             	r0 = 2			  ## analog.c:1393:5
 1e18188:    8f f3 66 65       	call 2017996 <delay : 4c58 >			  ## analog.c:1393:5
 1e1818c:    f0 49             	r0 = [r4 + 124]			  ## analog.c:1394:13
 1e1818e:    f0 b0             	r0 &= 4294967293			  ## analog.c:1394:13
 1e18190:    f8 49             	[r4 + 124] = r0			  ## analog.c:1394:13
 1e18192:    20 70             	r0 = 2			  ## analog.c:1395:5
 1e18194:    8f f3 60 65       	call 2017984 <delay : 4c58 >			  ## analog.c:1395:5
 1e18198:    f0 49             	r0 = [r4 + 124]			  ## analog.c:1396:13
 1e1819a:    70 b1             	r0 &= 4294967291			  ## analog.c:1396:13
 1e1819c:    f8 49             	[r4 + 124] = r0			  ## analog.c:1396:13
 1e1819e:    20 70             	r0 = 2			  ## analog.c:1397:5
 1e181a0:    8f f3 5a 65       	call 2017972 <delay : 4c58 >			  ## analog.c:1397:5
 1e181a4:    15 f6 00 e0       	[r14 + 0] = r5			  ## analog.c:1398:45
 1e181a8:    15 f6 04 e0       	[r14 + 4] = r5			  ## analog.c:1398:31
 1e181ac:    15 f6 08 e0       	[r14 + 8] = r5			  ## analog.c:1398:17
 1e181b0:    20 70             	r0 = 2			  ## analog.c:1399:5
 1e181b2:    8f f3 51 65       	call 2017954 <delay : 4c58 >			  ## analog.c:1399:5
 1e181b6:    90 48             	r0 = [r4 + 36]			  ## analog.c:1400:17
 1e181b8:    f0 b5             	r0 &= 4294965247			  ## analog.c:1400:17
 1e181ba:    98 48             	[r4 + 36] = r0			  ## analog.c:1400:17
 1e181bc:    bf f3 81 fa       	call -2814 <rxtrim_analog_init : 1e176c2 >			  ## analog.c:903:5
 1e181c0:    00 f6 08 a0       	r0 = [r10 + 8]			  ## analog.c:905:22
 1e181c4:    01 fb 3f fe       	r1 = -449 <bank_code_load_addr+0x1DC847 : 1fffe3f >			  ## analog.c:905:22
 1e181c8:    50 b3             	r0 &= r1			  ## analog.c:905:22
 1e181ca:    10 f6 08 a0       	[r10 + 8] = r0			  ## analog.c:905:22
 1e181ce:    00 f6 08 a0       	r0 = [r10 + 8]			  ## analog.c:906:22
 1e181d2:    01 fb c0 01       	r1 = 448 <BTCTLER_CONTROLLER_BSS_SIZE : 1c0 >			  ## analog.c:906:22
 1e181d6:    50 b2             	r0 |= r1			  ## analog.c:906:22
 1e181d8:    10 f6 08 a0       	[r10 + 8] = r0			  ## analog.c:906:22
 1e181dc:    00 f6 0c a0       	r0 = [r10 + 12]			  ## analog.c:908:22
 1e181e0:    30 fd 1e 0b       	r0 = r0 & 4293001215			  ## analog.c:908:22
 1e181e4:    10 f6 0c a0       	[r10 + 12] = r0			  ## analog.c:908:22
 1e181e8:    03 f4 15 ab       	[r10 + 12] |= 1376256			  ## analog.c:909:22
 1e181ec:    00 f6 04 a0       	r0 = [r10 + 4]			  ## analog.c:912:22
 1e181f0:    f0 b5             	r0 &= 4294965247			  ## analog.c:912:22
 1e181f2:    10 f6 04 a0       	[r10 + 4] = r0			  ## analog.c:912:22
 1e181f6:    02 f4 01 a9       	[r10 + 8] |= 1			  ## analog.c:913:22
 1e181fa:    00 f6 04 a0       	r0 = [r10 + 4]			  ## analog.c:914:22
 1e181fe:    70 b0             	r0 &= 4294967294			  ## analog.c:914:22
 1e18200:    10 f6 04 a0       	[r10 + 4] = r0			  ## analog.c:914:22
 1e18204:    1f f4 02 49       	[r4 + 124] |= 2			  ## analog.c:916:13
 1e18208:    02 f4 01 7b       	[r7 + 8] |= 65536			  ## analog.c:917:20
 1e1820c:    1f f4 10 49       	[r4 + 124] |= 16			  ## analog.c:918:13
 1e18210:    90 48             	r0 = [r4 + 36]			  ## analog.c:919:17
 1e18212:    98 48             	[r4 + 36] = r0			  ## analog.c:919:17
 1e18214:    00 48             	r0 = [r4 + 0]			  ## analog.c:920:17
 1e18216:    30 fd 0c 0c       	r0 = r0 & 4093640703			  ## analog.c:920:17
 1e1821a:    08 48             	[r4 + 0] = r0			  ## analog.c:920:17
 1e1821c:    40 a3             	r0 = sp + 52			  ## analog.c:920:17
 1e1821e:    98 4e             	[r7 + 36] = r0			  ## analog.c:922:19
 1e18220:    01 70             	r1 = 0			  ## analog.c:925:20
 1e18222:    02 fb 00 01       	r2 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## analog.c:925:20
 1e18226:    97 f3 63 76       	call 3075270 <memset : 106ef0 >			  ## analog.c:925:20
 1e1822a:    00 f6 08 a0       	r0 = [r10 + 8]			  ## analog.c:928:22
 1e1822e:    30 fd ff 05       	r0 = r0 & 4261543935			  ## analog.c:928:22
 1e18232:    10 f6 08 a0       	[r10 + 8] = r0			  ## analog.c:928:22
 1e18236:    00 f6 08 a0       	r0 = [r10 + 8]			  ## analog.c:929:22
 1e1823a:    10 f6 08 a0       	[r10 + 8] = r0			  ## analog.c:929:22
 1e1823e:    00 f6 0c a0       	r0 = [r10 + 12]			  ## analog.c:931:22
 1e18242:    30 fd ff 09       	r0 = r0 & 4294967040			  ## analog.c:931:22
 1e18246:    10 f6 0c a0       	[r10 + 12] = r0			  ## analog.c:931:22
 1e1824a:    00 f6 0c a0       	r0 = [r10 + 12]			  ## analog.c:932:22
 1e1824e:    10 f6 0c a0       	[r10 + 12] = r0			  ## analog.c:932:22
 1e18252:    00 f6 0c a0       	r0 = [r10 + 12]			  ## analog.c:934:22
 1e18256:    f0 b4             	r0 &= 4294966783			  ## analog.c:934:22
 1e18258:    10 f6 0c a0       	[r10 + 12] = r0			  ## analog.c:934:22
 1e1825c:    03 f4 02 aa       	[r10 + 12] |= 512			  ## analog.c:935:22
 1e18260:    c8 f4 40 7b       	[r7 + 32] = 4194304			  ## analog.c:938:23
 1e18264:    80 4e             	r0 = [r7 + 32]			  ## analog.c:939:16
 1e18266:    00 d4             	r0 = r0 >> 16			  ## analog.c:939:9
 1e18268:    fd 31             	if (r0 != 0) goto -6 <.GJTIE830_1_1_+0x418 : 1e18264 >			  ## analog.c:939:9
 1e1826a:    15 80             	r5 += 1			  ## analog.c:937:26
 1e1826c:    60 05             	r0 = r5.l (u)			  ## analog.c:937:26
 1e1826e:    40 e1 f7 1f       	if (r0 != 20) goto -18 <.GJTIE830_1_1_+0x414 : 1e18260 >			  ## analog.c:937:26
 1e18272:    40 a3             	r0 = sp + 52
 1e18274:    00 fc fc 00       	r0 = r0 + 252
 1e18278:    18 02             	[sp+4] = r0
 1e1827a:    08 70             	r8 = 0
 1e1827c:    02 fb f8 0f       	r2 = 4088 <sys_clock_limit+0x3C : ff8 >
 1e18280:    83 94             	r3 = r2 + 8
 1e18282:    00 70             	r0 = 0
 1e18284:    28 02             	[sp+8] = r0
 1e18286:    08 02             	[sp] = r0
 1e18288:    0a fd 40 8b       	r10 = r8 | 4194304
 1e1828c:    b9 08             	r9 = r11
 1e1828e:    00 70             	r0 = 0
 1e18290:    0c 70             	r12 = 0
 1e18292:    38 02             	[sp+12] = r0
 1e18294:    00 70             	r0 = 0
 1e18296:    1a f6 20 70       	[r7 + 32] = r10			  ## analog.c:955:31
 1e1829a:    81 4e             	r1 = [r7 + 32]			  ## analog.c:956:24
 1e1829c:    09 d4             	r1 = r1 >> 16			  ## analog.c:956:17
 1e1829e:    fd 33             	if (r1 != 0) goto -6 <.GJTIE830_1_1_+0x44E : 1e1829a >			  ## analog.c:956:17
 1e182a0:    10 80             	r0 += 1			  ## analog.c:954:36
 1e182a2:    21 04             	r1 = r0.l (u)			  ## analog.c:954:36
 1e182a4:    21 e0 f7 1f       	if (r1 != 2) goto -18 <.GJTIE830_1_1_+0x44A : 1e18296 >			  ## analog.c:954:36
 1e182a8:    01 70             	r1 = 0
 1e182aa:    f0 73             	r0 = 63
 1e182ac:    16 02             	r6 = [sp+4]
 1e182ae:    45 f6 fc 6f       	r5 = [r6 ++= -4]			  ## analog.c:967:24
 1e182b2:    2c c4             	r4 = r5 << 16			  ## analog.c:967:35
 1e182b4:    e4 d8             	r4 = r4 >>> 3			  ## analog.c:969:67
 1e182b6:    80 fe 20 41       	r4 += r1 * r2			  ## analog.c:969:50
 1e182ba:    e0 fe 30 14       	r1 = r4 / r3 (s)			  ## analog.c:969:75
 1e182be:    2c dc             	r4 = r5 >>> 16			  ## analog.c:968:34
 1e182c0:    f0 fd 68 f4       	r15 = r4 << 13			  ## analog.c:970:67
 1e182c4:    80 fe 20 f1       	r15 += r1 * r2			  ## analog.c:970:50
 1e182c8:    f0 8f             	r0 += -1			  ## analog.c:965:42
 1e182ca:    e0 fe 30 1f       	r1 = r15 / r3 (s)			  ## analog.c:970:75
 1e182ce:    00 e0 ee cf       	ifs (r0 > 0) goto -36 <.GJTIE830_1_1_+0x462 : 1e182ae >			  ## analog.c:965:13
 1e182d2:    20 fb 08 0b       	r0 = 524288			  ## analog.c:972:21
 1e182d6:    e0 fe 00 bf       	r11 = r15 / r0 (s)			  ## analog.c:972:21
 1e182da:    6d fb 00 b9       	r13 = 0 - r11			  ## analog.c:975:23
 1e182de:    d1 08             	r1 = r13			  ## analog.c:974:17
 1e182e0:    c0 ff 01 00 f8 ff 	r0 = 4294443009 <bank_code_load_addr+0x15CA09 : 1f80001 >			  ## analog.c:974:17
 1e182e6:    0f f2 01 b0       	ifs (r15 < r0) goto 2 <.GJTIE830_1_1_+0x4A0 : 1e182ec >			  ## analog.c:974:17
 1e182ea:    b1 08             	r1 = r11			  ## analog.c:974:17
 1e182ec:    26 70             	r6 = 2			  ## analog.c:984:13
 1e182ee:    c1 e3 01 c0       	ifs (r1 > 60) goto 2 <.GJTIE830_1_1_+0x4A8 : 1e182f4 >			  ## analog.c:984:13
 1e182f2:    16 70             	r6 = 1			  ## analog.c:984:13
 1e182f4:    40 70             	r0 = 4			  ## analog.c:980:17
 1e182f6:    81 e7 01 c0       	ifs (r1 > 120) goto 2 <.GJTIE830_1_1_+0x4B0 : 1e182fc >			  ## analog.c:980:17
 1e182fa:    60 08             	r0 = r6			  ## analog.c:980:17
 1e182fc:    08 e0 19 00       	if (r8 == 0) goto 50 <.GJTIE830_1_1_+0x4E6 : 1e18332 >
 1e18300:    c4 ff 00 19 1e 00 	r4 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e18306:    31 48             	r1 = [r4 + 12]
 1e18308:    36 fd 01 1a       	r6 = r1 & 4294967039			  ## analog.c:1006:38
 1e1830c:    11 b4             	r1 |= 256			  ## analog.c:1004:38
 1e1830e:    c5 ff 01 00 f8 ff 	r5 = 4294443009 <bank_code_load_addr+0x15CA09 : 1f80001 >			  ## analog.c:1003:21
 1e18314:    5f f2 01 b0       	ifs (r15 < r5) goto 2 <.GJTIE830_1_1_+0x4CE : 1e1831a >			  ## analog.c:1003:21
 1e18318:    61 08             	r1 = r6			  ## analog.c:1003:21
 1e1831a:    39 48             	[r4 + 12] = r1
 1e1831c:    31 48             	r1 = [r4 + 12]			  ## analog.c:1009:34
 1e1831e:    31 fd ff 19       	r1 = r1 & 4294967040			  ## analog.c:1009:34
 1e18322:    39 48             	[r4 + 12] = r1			  ## analog.c:1009:34
 1e18324:    21 02             	r1 = [sp+8]			  ## analog.c:1008:30
 1e18326:    61 04             	r1 = r1.l (u)			  ## analog.c:1008:30
 1e18328:    01 09             	r1 += r0			  ## analog.c:1008:41
 1e1832a:    00 70             	r0 = 0			  ## analog.c:1008:41
 1e1832c:    29 02             	[sp+8] = r1
 1e1832e:    c6 98             	r6 = r4 + 12
 1e18330:    1b 18             	goto 54 <.GJTIE830_1_1_+0x51C : 1e18368 >
 1e18332:    c1 ff 00 19 1e 00 	r1 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e18338:    21 42             	r1 = [r1 + 8]
 1e1833a:    36 fd 02 1c       	r6 = r1 & 4261412863			  ## analog.c:995:38
 1e1833e:    91 bc             	r1 |= 33554432			  ## analog.c:993:38
 1e18340:    c4 ff 01 00 f8 ff 	r4 = 4294443009 <bank_code_load_addr+0x15CA09 : 1f80001 >			  ## analog.c:992:21
 1e18346:    4f f2 01 b0       	ifs (r15 < r4) goto 2 <.GJTIE830_1_1_+0x500 : 1e1834c >			  ## analog.c:992:21
 1e1834a:    61 08             	r1 = r6			  ## analog.c:992:21
 1e1834c:    c4 ff 00 19 1e 00 	r4 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e18352:    29 48             	[r4 + 8] = r1
 1e18354:    21 48             	r1 = [r4 + 8]			  ## analog.c:999:34
 1e18356:    31 fd ff 15       	r1 = r1 & 4261543935			  ## analog.c:999:34
 1e1835a:    29 48             	[r4 + 8] = r1			  ## analog.c:999:34
 1e1835c:    01 02             	r1 = [sp]			  ## analog.c:998:30
 1e1835e:    61 04             	r1 = r1.l (u)			  ## analog.c:998:30
 1e18360:    01 09             	r1 += r0			  ## analog.c:998:41
 1e18362:    10 71             	r0 = 17			  ## analog.c:998:41
 1e18364:    09 02             	[sp] = r1
 1e18366:    86 98             	r6 = r4 + 8
 1e18368:    04 4c             	r4 = [r6 + 0]
 1e1836a:    41 04             	r1 = r1.b0 (u)
 1e1836c:    f8 fd 00 01       	r0 = r1 << r0
 1e18370:    50 b8             	r0 |= r4
 1e18372:    08 4c             	[r6 + 0] = r0
 1e18374:    b1 08             	r1 = r11			  ## analog.c:1024:17
 1e18376:    c0 ff 00 00 f8 ff 	r0 = 4294443008 <bank_code_load_addr+0x15CA08 : 1f80000 >			  ## analog.c:1024:17
 1e1837c:    0f f2 01 c0       	ifs (r15 > r0) goto 2 <.GJTIE830_1_1_+0x536 : 1e18382 >			  ## analog.c:1024:17
 1e18380:    d1 08             	r1 = r13			  ## analog.c:1024:17
 1e18382:    10 70             	r0 = 1			  ## analog.c:1024:25
 1e18384:    74 fc 68 ff       	r4 = r7 + -152			  ## analog.c:1024:25
 1e18388:    a1 e1 01 b0       	ifs (r1 < 26) goto 2 <.GJTIE830_1_1_+0x542 : 1e1838e >			  ## analog.c:1024:25
 1e1838c:    00 70             	r0 = 0
 1e1838e:    40 fe 90 1b       	r1 = r11 * r9			  ## analog.c:1024:38
 1e18392:    c9 d7             	r1 = r1 >> 31			  ## analog.c:1024:45
 1e18394:    e2 fd c0 11       	r1 = r1 & r12			  ## analog.c:1024:50
 1e18398:    50 b2             	r0 |= r1			  ## analog.c:1024:31
 1e1839a:    cf ff 00 19 1e 00 	r15 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >			  ## analog.c:1024:31
 1e183a0:    1c 30             	if (r0 != 0) goto 56 <.GJTIE830_1_1_+0x58E : 1e183da >			  ## analog.c:1024:31
 1e183a2:    35 02             	r5 = [sp+12]
 1e183a4:    10 9a             	r0 = r5 + 1			  ## analog.c:1038:23
 1e183a6:    1c 70             	r12 = 1
 1e183a8:    b9 08             	r9 = r11
 1e183aa:    01 fb b9 0b       	r1 = 3001 <BTCTLER_CL_CODE_TOTAL+0x97 : bb9 >			  ## analog.c:1038:17
 1e183ae:    15 f2 70 bf       	ifs (r5 < r1) goto -288 <.GJTIE830_1_1_+0x446 : 1e18292 >			  ## analog.c:1038:17
 1e183b2:    00 f6 08 f0       	r0 = [r15 + 8]			  ## analog.c:1040:34
 1e183b6:    30 fd ff 05       	r0 = r0 & 4261543935			  ## analog.c:1040:34
 1e183ba:    10 f6 08 f0       	[r15 + 8] = r0			  ## analog.c:1040:34
 1e183be:    00 f6 08 f0       	r0 = [r15 + 8]			  ## analog.c:1041:34
 1e183c2:    10 f6 08 f0       	[r15 + 8] = r0			  ## analog.c:1041:34
 1e183c6:    00 f6 0c f0       	r0 = [r15 + 12]			  ## analog.c:1042:34
 1e183ca:    30 fd ff 09       	r0 = r0 & 4294967040			  ## analog.c:1042:34
 1e183ce:    10 f6 0c f0       	[r15 + 12] = r0			  ## analog.c:1042:34
 1e183d2:    00 f6 0c f0       	r0 = [r15 + 12]			  ## analog.c:1043:34
 1e183d6:    10 f6 0c f0       	[r15 + 12] = r0			  ## analog.c:1043:34
 1e183da:    18 80             	r8 += 1			  ## analog.c:946:25
 1e183dc:    28 e0 54 1f       	if (r8 != 2) goto -344 <.GJTIE830_1_1_+0x43C : 1e18288 >			  ## analog.c:946:25
 1e183e0:    cb ff 1c 2a 00 00 	r11 = 10780 <tws_bulk_pool_end : 2a1c >
 1e183e6:    00 02             	r0 = [sp]
 1e183e8:    10 f9 0e b0       	b[r11 + 14] = r0			  ## analog.c:1049:28
 1e183ec:    00 d2             	r0 = r0 >> 8			  ## analog.c:1049:28
 1e183ee:    10 f9 0f b0       	b[r11 + 15] = r0			  ## analog.c:1049:28
 1e183f2:    21 02             	r1 = [sp+8]			  ## analog.c:1049:28
 1e183f4:    08 d2             	r0 = r1 >> 8			  ## analog.c:1050:28
 1e183f6:    10 f9 11 b0       	b[r11 + 17] = r0			  ## analog.c:1050:28
 1e183fa:    11 f9 10 b0       	b[r11 + 16] = r1			  ## analog.c:1050:28
 1e183fe:    f0 49             	r0 = [r4 + 124]			  ## analog.c:1052:13
 1e18400:    f0 b0             	r0 &= 4294967293			  ## analog.c:1052:13
 1e18402:    f8 49             	[r4 + 124] = r0			  ## analog.c:1052:13
 1e18404:    20 4e             	r0 = [r7 + 8]			  ## analog.c:1053:20
 1e18406:    70 b8             	r0 &= 4294901759			  ## analog.c:1053:20
 1e18408:    28 4e             	[r7 + 8] = r0			  ## analog.c:1053:20
 1e1840a:    f0 49             	r0 = [r4 + 124]			  ## analog.c:1054:13
 1e1840c:    70 b2             	r0 &= 4294967279			  ## analog.c:1054:13
 1e1840e:    f8 49             	[r4 + 124] = r0			  ## analog.c:1054:13
 1e18410:    00 f4 0c 4c       	[r4 + 0] |= 201326592			  ## analog.c:1055:17
 1e18414:    bf f3 55 f9       	call -3414 <rxtrim_analog_init : 1e176c2 >			  ## analog.c:721:5
 1e18418:    02 70             	r2 = 0			  ## analog.c:721:5
 1e1841a:    12 f6 08 e0       	[r14 + 8] = r2			  ## analog.c:723:17
 1e1841e:    20 70             	r0 = 2			  ## analog.c:724:5
 1e18420:    8f f3 1a 64       	call 2017332 <delay : 4c58 >			  ## analog.c:724:5
 1e18424:    12 f6 04 e0       	[r14 + 4] = r2			  ## analog.c:725:17
 1e18428:    20 70             	r0 = 2			  ## analog.c:726:5
 1e1842a:    8f f3 15 64       	call 2017322 <delay : 4c58 >			  ## analog.c:726:5
 1e1842e:    12 f6 00 e0       	[r14 + 0] = r2			  ## analog.c:727:17
 1e18432:    20 70             	r0 = 2			  ## analog.c:728:5
 1e18434:    8f f3 10 64       	call 2017312 <delay : 4c58 >			  ## analog.c:728:5
 1e18438:    02 f4 01 7b       	[r7 + 8] |= 65536			  ## analog.c:729:20
 1e1843c:    20 70             	r0 = 2			  ## analog.c:730:5
 1e1843e:    8f f3 0b 64       	call 2017302 <delay : 4c58 >			  ## analog.c:730:5
 1e18442:    1f f4 02 49       	[r4 + 124] |= 2			  ## analog.c:731:13
 1e18446:    20 70             	r0 = 2			  ## analog.c:732:5
 1e18448:    8f f3 06 64       	call 2017292 <delay : 4c58 >			  ## analog.c:732:5
 1e1844c:    1f f4 04 49       	[r4 + 124] |= 4			  ## analog.c:733:13
 1e18450:    20 70             	r0 = 2			  ## analog.c:734:5
 1e18452:    8f f3 01 64       	call 2017282 <delay : 4c58 >			  ## analog.c:734:5
 1e18456:    02 f4 20 e9       	[r14 + 8] |= 32			  ## analog.c:735:17
 1e1845a:    20 70             	r0 = 2			  ## analog.c:736:5
 1e1845c:    8f f3 fc 63       	call 2017272 <delay : 4c58 >			  ## analog.c:736:5
 1e18460:    02 f4 02 ec       	[r14 + 8] |= 33554432			  ## analog.c:737:17
 1e18464:    20 70             	r0 = 2			  ## analog.c:738:5
 1e18466:    8f f3 f7 63       	call 2017262 <delay : 4c58 >			  ## analog.c:738:5
 1e1846a:    02 f4 01 eb       	[r14 + 8] |= 65536			  ## analog.c:739:17
 1e1846e:    20 70             	r0 = 2			  ## analog.c:740:5
 1e18470:    8f f3 f2 63       	call 2017252 <delay : 4c58 >			  ## analog.c:740:5
 1e18474:    02 f4 10 eb       	[r14 + 8] |= 1048576			  ## analog.c:741:17
 1e18478:    20 70             	r0 = 2			  ## analog.c:742:5
 1e1847a:    8f f3 ed 63       	call 2017242 <delay : 4c58 >			  ## analog.c:742:5
 1e1847e:    00 f4 20 e9       	[r14 + 0] |= 32			  ## analog.c:743:17
 1e18482:    20 70             	r0 = 2			  ## analog.c:744:5
 1e18484:    8f f3 e8 63       	call 2017232 <delay : 4c58 >			  ## analog.c:744:5
 1e18488:    00 f4 01 ea       	[r14 + 0] |= 256			  ## analog.c:745:17
 1e1848c:    20 70             	r0 = 2			  ## analog.c:746:5
 1e1848e:    8f f3 e3 63       	call 2017222 <delay : 4c58 >			  ## analog.c:746:5
 1e18492:    00 f6 00 e0       	r0 = [r14 + 0]			  ## analog.c:747:17
 1e18496:    f0 b4             	r0 &= 4294966783			  ## analog.c:747:17
 1e18498:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:747:17
 1e1849c:    20 70             	r0 = 2			  ## analog.c:748:5
 1e1849e:    8f f3 db 63       	call 2017206 <delay : 4c58 >			  ## analog.c:748:5
 1e184a2:    00 f6 00 e0       	r0 = [r14 + 0]			  ## analog.c:749:17
 1e184a6:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:749:17
 1e184aa:    20 70             	r0 = 2			  ## analog.c:750:5
 1e184ac:    8f f3 d4 63       	call 2017192 <delay : 4c58 >			  ## analog.c:750:5
 1e184b0:    00 f4 01 eb       	[r14 + 0] |= 65536			  ## analog.c:751:17
 1e184b4:    20 70             	r0 = 2			  ## analog.c:752:5
 1e184b6:    8f f3 cf 63       	call 2017182 <delay : 4c58 >			  ## analog.c:752:5
 1e184ba:    00 f4 02 eb       	[r14 + 0] |= 131072			  ## analog.c:753:17
 1e184be:    20 70             	r0 = 2			  ## analog.c:754:5
 1e184c0:    8f f3 ca 63       	call 2017172 <delay : 4c58 >			  ## analog.c:754:5
 1e184c4:    00 f4 20 eb       	[r14 + 0] |= 2097152			  ## analog.c:755:17
 1e184c8:    20 70             	r0 = 2			  ## analog.c:756:5
 1e184ca:    8f f3 c5 63       	call 2017162 <delay : 4c58 >			  ## analog.c:756:5
 1e184ce:    20 70             	r0 = 2			  ## analog.c:757:5
 1e184d0:    8f f3 c2 63       	call 2017156 <delay : 4c58 >			  ## analog.c:757:5
 1e184d4:    00 f4 01 ec       	[r14 + 0] |= 16777216			  ## analog.c:758:17
 1e184d8:    20 70             	r0 = 2			  ## analog.c:759:5
 1e184da:    8f f3 bd 63       	call 2017146 <delay : 4c58 >			  ## analog.c:759:5
 1e184de:    00 f4 02 ec       	[r14 + 0] |= 33554432			  ## analog.c:760:17
 1e184e2:    20 70             	r0 = 2			  ## analog.c:761:5
 1e184e4:    8f f3 b8 63       	call 2017136 <delay : 4c58 >			  ## analog.c:761:5
 1e184e8:    00 f4 20 ec       	[r14 + 0] |= 536870912			  ## analog.c:762:17
 1e184ec:    20 70             	r0 = 2			  ## analog.c:763:5
 1e184ee:    8f f3 b3 63       	call 2017126 <delay : 4c58 >			  ## analog.c:763:5
 1e184f2:    01 f4 80 e9       	[r14 + 4] |= 128			  ## analog.c:765:17
 1e184f6:    20 70             	r0 = 2			  ## analog.c:766:5
 1e184f8:    8f f3 ae 63       	call 2017116 <delay : 4c58 >			  ## analog.c:766:5
 1e184fc:    01 f4 40 e9       	[r14 + 4] |= 64			  ## analog.c:767:17
 1e18500:    20 70             	r0 = 2			  ## analog.c:769:5
 1e18502:    8f f3 a9 63       	call 2017106 <delay : 4c58 >			  ## analog.c:769:5
 1e18506:    09 f4 08 4a       	[r4 + 36] |= 2048			  ## analog.c:770:17
 1e1850a:    50 48             	r0 = [r4 + 20]			  ## analog.c:776:17
 1e1850c:    c1 ff ff ff 03 f8 	r1 = 4161011711 <text_size+0x1F14F : 3ffff >			  ## analog.c:776:17
 1e18512:    50 b3             	r0 &= r1			  ## analog.c:776:17
 1e18514:    58 48             	[r4 + 20] = r0			  ## analog.c:776:17
 1e18516:    50 70             	r0 = 5			  ## analog.c:777:5
 1e18518:    8f f3 9e 63       	call 2017084 <delay : 4c58 >			  ## analog.c:777:5
 1e1851c:    05 f4 7f 46       	[r4 + 20] |= 66846720			  ## analog.c:778:17
 1e18520:    50 70             	r0 = 5			  ## analog.c:779:5
 1e18522:    8f f3 99 63       	call 2017074 <delay : 4c58 >			  ## analog.c:779:5
 1e18526:    50 48             	r0 = [r4 + 20]			  ## analog.c:780:17
 1e18528:    c8 ff ff 01 fc ff 	r8 = 4294705663 <bank_code_load_addr+0x19CC07 : 1fc01ff >			  ## analog.c:780:17
 1e1852e:    e2 fd 80 00       	r0 = r0 & r8			  ## analog.c:780:17
 1e18532:    58 48             	[r4 + 20] = r0			  ## analog.c:780:17
 1e18534:    40 71             	r0 = 20			  ## analog.c:781:5
 1e18536:    49 71             	r9 = 20			  ## analog.c:781:5
 1e18538:    8f f3 8e 63       	call 2017052 <delay : 4c58 >			  ## analog.c:781:5
 1e1853c:    50 48             	r0 = [r4 + 20]
 1e1853e:    0a fb 00 fe       	r10 = -512 <bank_code_load_addr+0x1DC808 : 1fffe00 >
 1e18542:    e2 fd a0 00       	r0 = r0 & r10
 1e18546:    58 48             	[r4 + 20] = r0
 1e18548:    50 70             	r0 = 5			  ## analog.c:785:9
 1e1854a:    8f f3 85 63       	call 2017034 <delay : 4c58 >			  ## analog.c:785:9
 1e1854e:    f6 07             	r6 = -1			  ## analog.c:785:9
 1e18550:    c5 7d             	r5 = 220			  ## analog.c:785:9
 1e18552:    50 48             	r0 = [r4 + 20]			  ## analog.c:786:21
 1e18554:    21 08             	r1 = r2			  ## analog.c:786:21
 1e18556:    50 ba             	r0 |= r5			  ## analog.c:786:21
 1e18558:    58 48             	[r4 + 20] = r0			  ## analog.c:786:21
 1e1855a:    40 71             	r0 = 20			  ## analog.c:787:9
 1e1855c:    8f f3 7c 63       	call 2017016 <delay : 4c58 >			  ## analog.c:787:9
 1e18560:    02 70             	r2 = 0
 1e18562:    03 70             	r3 = 0
 1e18564:    00 f6 00 e0       	r0 = [r14 + 0]			  ## analog.c:791:25
 1e18568:    f0 bc             	r0 &= 4261412863			  ## analog.c:791:25
 1e1856a:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:791:25
 1e1856e:    50 70             	r0 = 5			  ## analog.c:792:13
 1e18570:    8f f3 72 63       	call 2016996 <delay : 4c58 >			  ## analog.c:792:13
 1e18574:    00 f4 02 ec       	[r14 + 0] |= 33554432			  ## analog.c:793:25
 1e18578:    00 f6 18 e0       	r0 = [r14 + 24]			  ## analog.c:794:21
 1e1857c:    3a f3 fc 0f       	if ((r0 & 67108864) != 0) goto -8 <.GJTIE830_1_1_+0x72C : 1e18578 >			  ## analog.c:794:13
 1e18580:    00 f6 1c e0       	r0 = [r14 + 28]			  ## analog.c:796:24
 1e18584:    04 f6 20 e0       	r4 = [r14 + 32]			  ## analog.c:798:24
 1e18588:    b0 fd 40 00       	r0 = sextra(r0, p:8, l:16)			  ## analog.c:797:29
 1e1858c:    80 fe 00 20       	r2 += r0 * r0			  ## analog.c:800:38
 1e18590:    b0 fd 40 04       	r0 = sextra(r4, p:8, l:16)			  ## analog.c:799:29
 1e18594:    13 80             	r3 += 1			  ## analog.c:790:30
 1e18596:    e4 04             	r4 = r3.l (u)			  ## analog.c:790:30
 1e18598:    80 fe 00 20       	r2 += r0 * r0			  ## analog.c:800:19
 1e1859c:    44 e1 e2 1f       	if (r4 != 20) goto -60 <.GJTIE830_1_1_+0x718 : 1e18564 >
 1e185a0:    74 fc 68 ff       	r4 = r7 + -152
 1e185a4:    50 48             	r0 = [r4 + 20]
 1e185a6:    e2 fd a0 00       	r0 = r0 & r10
 1e185aa:    58 48             	[r4 + 20] = r0
 1e185ac:    50 70             	r0 = 5			  ## analog.c:785:9
 1e185ae:    8f f3 53 63       	call 2016934 <delay : 4c58 >			  ## analog.c:785:9
 1e185b2:    e0 fe 90 02       	r0 = r2 / r9 (s)			  ## analog.c:802:14
 1e185b6:    52 08             	r2 = r5			  ## analog.c:804:13
 1e185b8:    60 f2 01 30       	if (r0 < r6) goto 2 <.GJTIE830_1_1_+0x772 : 1e185be >			  ## analog.c:804:13
 1e185bc:    12 08             	r2 = r1			  ## analog.c:804:13
 1e185be:    60 f2 01 30       	if (r0 < r6) goto 2 <.GJTIE830_1_1_+0x778 : 1e185c4 >
 1e185c2:    60 08             	r0 = r6			  ## analog.c:804:13
 1e185c4:    15 80             	r5 += 1			  ## analog.c:783:29
 1e185c6:    06 08             	r6 = r0			  ## analog.c:783:29
 1e185c8:    01 ff 18 51 c2 ff 	if (r5 != 280) goto -124 <.GJTIE830_1_1_+0x706 : 1e18552 >
 1e185ce:    50 48             	r0 = [r4 + 20]			  ## analog.c:815:17
 1e185d0:    09 fb ff 01       	r9 = 511 <BTCTLER_CL_RAM_TOTAL+0x1B : 1ff >			  ## analog.c:815:21
 1e185d4:    e2 fd 90 12       	r1 = r2 & r9			  ## analog.c:815:21
 1e185d8:    50 b2             	r0 |= r1			  ## analog.c:815:17
 1e185da:    58 48             	[r4 + 20] = r0			  ## analog.c:815:17
 1e185dc:    40 71             	r0 = 20			  ## analog.c:816:5
 1e185de:    4a 71             	r10 = 20			  ## analog.c:816:5
 1e185e0:    8f f3 3a 63       	call 2016884 <delay : 4c58 >			  ## analog.c:816:5
 1e185e4:    10 d2             	r0 = r2 >> 8			  ## analog.c:820:22
 1e185e6:    10 f9 13 b0       	b[r11 + 19] = r0			  ## analog.c:820:22
 1e185ea:    12 f9 12 b0       	b[r11 + 18] = r2			  ## analog.c:820:22
 1e185ee:    50 48             	r0 = [r4 + 20]			  ## analog.c:824:17
 1e185f0:    e2 fd 80 00       	r0 = r0 & r8			  ## analog.c:824:17
 1e185f4:    58 48             	[r4 + 20] = r0			  ## analog.c:824:17
 1e185f6:    50 48             	r0 = [r4 + 20]			  ## analog.c:825:17
 1e185f8:    58 48             	[r4 + 20] = r0			  ## analog.c:825:17
 1e185fa:    50 48             	r0 = [r4 + 20]
 1e185fc:    e2 fd 80 00       	r0 = r0 & r8
 1e18600:    58 48             	[r4 + 20] = r0
 1e18602:    c1 ff d8 ff 00 00 	r1 = 65496 <_IRQ_MEM_ADDR+0xD8 : ffd8 >
 1e18608:    f3 07             	r3 = -1
 1e1860a:    2b 08             	r11 = r2
 1e1860c:    50 70             	r0 = 5			  ## analog.c:828:9
 1e1860e:    8f f3 23 63       	call 2016838 <delay : 4c58 >			  ## analog.c:828:9
 1e18612:    70 fc 68 ff       	r0 = r7 + -152			  ## analog.c:828:9
 1e18616:    04 08             	r4 = r0			  ## analog.c:828:9
 1e18618:    50 48             	r0 = [r4 + 20]			  ## analog.c:829:21
 1e1861a:    e2 fd 90 21       	r2 = r1 & r9			  ## analog.c:829:24
 1e1861e:    52 c2             	r2 = r2 << 9			  ## analog.c:829:24
 1e18620:    50 b4             	r0 |= r2			  ## analog.c:829:21
 1e18622:    58 48             	[r4 + 20] = r0			  ## analog.c:829:21
 1e18624:    40 71             	r0 = 20			  ## analog.c:830:9
 1e18626:    8f f3 17 63       	call 2016814 <delay : 4c58 >			  ## analog.c:830:9
 1e1862a:    02 70             	r2 = 0
 1e1862c:    05 70             	r5 = 0
 1e1862e:    00 f6 00 e0       	r0 = [r14 + 0]			  ## analog.c:833:25
 1e18632:    f0 bc             	r0 &= 4261412863			  ## analog.c:833:25
 1e18634:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:833:25
 1e18638:    50 70             	r0 = 5			  ## analog.c:834:13
 1e1863a:    8f f3 0d 63       	call 2016794 <delay : 4c58 >			  ## analog.c:834:13
 1e1863e:    00 f4 02 ec       	[r14 + 0] |= 33554432			  ## analog.c:835:25
 1e18642:    00 f6 18 e0       	r0 = [r14 + 24]			  ## analog.c:836:21
 1e18646:    3a f3 fc 0f       	if ((r0 & 67108864) != 0) goto -8 <.GJTIE830_1_1_+0x7F6 : 1e18642 >			  ## analog.c:836:13
 1e1864a:    04 f6 1c e0       	r4 = [r14 + 28]			  ## analog.c:838:24
 1e1864e:    50 70             	r0 = 5			  ## analog.c:839:13
 1e18650:    8f f3 02 63       	call 2016772 <delay : 4c58 >			  ## analog.c:839:13
 1e18654:    06 f6 20 e0       	r6 = [r14 + 32]			  ## analog.c:841:24
 1e18658:    50 70             	r0 = 5			  ## analog.c:842:13
 1e1865a:    8f f3 fd 62       	call 2016762 <delay : 4c58 >			  ## analog.c:842:13
 1e1865e:    b0 fd 40 04       	r0 = sextra(r4, p:8, l:16)			  ## analog.c:840:29
 1e18662:    80 fe 00 20       	r2 += r0 * r0			  ## analog.c:844:38
 1e18666:    b0 fd 40 06       	r0 = sextra(r6, p:8, l:16)			  ## analog.c:843:29
 1e1866a:    15 80             	r5 += 1			  ## analog.c:832:30
 1e1866c:    64 05             	r4 = r5.l (u)			  ## analog.c:832:30
 1e1866e:    80 fe 00 20       	r2 += r0 * r0			  ## analog.c:844:19
 1e18672:    44 e1 dc 1f       	if (r4 != 20) goto -72 <.GJTIE830_1_1_+0x7E2 : 1e1862e >
 1e18676:    70 fc 68 ff       	r0 = r7 + -152
 1e1867a:    05 08             	r5 = r0
 1e1867c:    50 4a             	r0 = [r5 + 20]
 1e1867e:    e2 fd 80 40       	r4 = r0 & r8
 1e18682:    e0 fe a0 02       	r0 = r2 / r10 (s)			  ## analog.c:846:14
 1e18686:    5c 4a             	[r5 + 20] = r4
 1e18688:    12 08             	r2 = r1			  ## analog.c:848:13
 1e1868a:    30 f2 01 30       	if (r0 < r3) goto 2 <.GJTIE830_1_1_+0x844 : 1e18690 >			  ## analog.c:848:13
 1e1868e:    b2 08             	r2 = r11			  ## analog.c:848:13
 1e18690:    30 f2 01 30       	if (r0 < r3) goto 2 <.GJTIE830_1_1_+0x84A : 1e18696 >
 1e18694:    30 08             	r0 = r3			  ## analog.c:848:13
 1e18696:    11 80             	r1 += 1			  ## analog.c:826:28
 1e18698:    64 04             	r4 = r1.l (u)			  ## analog.c:826:28
 1e1869a:    03 08             	r3 = r0			  ## analog.c:826:28
 1e1869c:    84 e2 b5 1f       	if (r4 != 40) goto -150 <.GJTIE830_1_1_+0x7BE : 1e1860a >
 1e186a0:    54 08             	r4 = r5
 1e186a2:    50 48             	r0 = [r4 + 20]			  ## analog.c:856:17
 1e186a4:    51 c2             	r1 = r2 << 9			  ## analog.c:856:21
 1e186a6:    c3 ff 00 fe 03 00 	r3 = 261632 <text_size+0x1EF50 : 3fe00 >			  ## analog.c:856:21
 1e186ac:    51 b7             	r1 &= r3			  ## analog.c:856:21
 1e186ae:    50 b2             	r0 |= r1			  ## analog.c:856:17
 1e186b0:    58 48             	[r4 + 20] = r0			  ## analog.c:856:17
 1e186b2:    10 d2             	r0 = r2 >> 8			  ## analog.c:860:22
 1e186b4:    c1 ff 1c 2a 00 00 	r1 = 10780 <tws_bulk_pool_end : 2a1c >			  ## analog.c:860:22
 1e186ba:    58 63             	b[r1 + 21] = r0			  ## analog.c:860:22
 1e186bc:    4a 63             	b[r1 + 20] = r2			  ## analog.c:860:22
 1e186be:    20 4e             	r0 = [r7 + 8]			  ## analog.c:875:20
 1e186c0:    70 b8             	r0 &= 4294901759			  ## analog.c:875:20
 1e186c2:    28 4e             	[r7 + 8] = r0			  ## analog.c:875:20
 1e186c4:    20 70             	r0 = 2			  ## analog.c:876:5
 1e186c6:    8f f3 c7 62       	call 2016654 <delay : 4c58 >			  ## analog.c:876:5
 1e186ca:    f0 49             	r0 = [r4 + 124]			  ## analog.c:877:13
 1e186cc:    f0 b0             	r0 &= 4294967293			  ## analog.c:877:13
 1e186ce:    f8 49             	[r4 + 124] = r0			  ## analog.c:877:13
 1e186d0:    20 70             	r0 = 2			  ## analog.c:878:5
 1e186d2:    8f f3 c1 62       	call 2016642 <delay : 4c58 >			  ## analog.c:878:5
 1e186d6:    f0 49             	r0 = [r4 + 124]			  ## analog.c:879:13
 1e186d8:    70 b1             	r0 &= 4294967291			  ## analog.c:879:13
 1e186da:    f8 49             	[r4 + 124] = r0			  ## analog.c:879:13
 1e186dc:    20 70             	r0 = 2			  ## analog.c:880:5
 1e186de:    8f f3 bb 62       	call 2016630 <delay : 4c58 >			  ## analog.c:880:5
 1e186e2:    00 f6 08 e0       	r0 = [r14 + 8]			  ## analog.c:881:17
 1e186e6:    30 fd 03 0c       	r0 = r0 & 4244635647			  ## analog.c:881:17
 1e186ea:    10 f6 08 e0       	[r14 + 8] = r0			  ## analog.c:881:17
 1e186ee:    20 70             	r0 = 2			  ## analog.c:882:5
 1e186f0:    8f f3 b2 62       	call 2016612 <delay : 4c58 >			  ## analog.c:882:5
 1e186f4:    90 48             	r0 = [r4 + 36]			  ## analog.c:883:17
 1e186f6:    f0 b5             	r0 &= 4294965247			  ## analog.c:883:17
 1e186f8:    98 48             	[r4 + 36] = r0			  ## analog.c:883:17
 1e186fa:    bf f3 a7 f4       	call -5810 <bt_analog_part_init : 1e1704c >			  ## analog.c:266:9
 1e186fe:    bf f3 48 f5       	call -5488 <reset_trim_info : 1e17192 >			  ## analog.c:268:9
 1e18702:    0a f6 00 f0       	r10 = [r15 + 0]			  ## analog.c:3939:29
 1e18706:    40 71             	r0 = 20			  ## analog.c:3940:5
 1e18708:    8f f3 a6 62       	call 2016588 <delay : 4c58 >			  ## analog.c:3940:5
 1e1870c:    0e f6 04 f0       	r14 = [r15 + 4]			  ## analog.c:3941:29
 1e18710:    40 71             	r0 = 20			  ## analog.c:3942:5
 1e18712:    8f f3 a1 62       	call 2016578 <delay : 4c58 >			  ## analog.c:3942:5
 1e18716:    00 f6 08 f0       	r0 = [r15 + 8]			  ## analog.c:3943:29
 1e1871a:    38 02             	[sp+12] = r0			  ## analog.c:3944:5
 1e1871c:    40 71             	r0 = 20			  ## analog.c:3944:5
 1e1871e:    8f f3 9b 62       	call 2016566 <delay : 4c58 >			  ## analog.c:3944:5
 1e18722:    09 f6 0c f0       	r9 = [r15 + 12]			  ## analog.c:3945:29
 1e18726:    40 71             	r0 = 20			  ## analog.c:3946:5
 1e18728:    8f f3 96 62       	call 2016556 <delay : 4c58 >			  ## analog.c:3946:5
 1e1872c:    0d f6 10 f0       	r13 = [r15 + 16]			  ## analog.c:3947:29
 1e18730:    40 71             	r0 = 20			  ## analog.c:3948:5
 1e18732:    8f f3 91 62       	call 2016546 <delay : 4c58 >			  ## analog.c:3948:5
 1e18736:    00 f6 14 f0       	r0 = [r15 + 20]			  ## analog.c:3949:29
 1e1873a:    28 02             	[sp+8] = r0			  ## analog.c:3950:5
 1e1873c:    40 71             	r0 = 20			  ## analog.c:3950:5
 1e1873e:    8f f3 8b 62       	call 2016534 <delay : 4c58 >			  ## analog.c:3950:5
 1e18742:    08 f6 18 f0       	r8 = [r15 + 24]			  ## analog.c:3951:29
 1e18746:    40 71             	r0 = 20			  ## analog.c:3952:5
 1e18748:    8f f3 86 62       	call 2016524 <delay : 4c58 >			  ## analog.c:3952:5
 1e1874c:    0b f6 20 f0       	r11 = [r15 + 32]			  ## analog.c:3953:29
 1e18750:    40 71             	r0 = 20			  ## analog.c:3954:5
 1e18752:    8f f3 81 62       	call 2016514 <delay : 4c58 >			  ## analog.c:3954:5
 1e18756:    00 f6 24 f0       	r0 = [r15 + 36]			  ## analog.c:3955:29
 1e1875a:    40 71             	r0 = 20			  ## analog.c:3956:5
 1e1875c:    8f f3 7c 62       	call 2016504 <delay : 4c58 >			  ## analog.c:3956:5
 1e18760:    00 f6 28 f0       	r0 = [r15 + 40]			  ## analog.c:3957:30
 1e18764:    40 71             	r0 = 20			  ## analog.c:3958:5
 1e18766:    8f f3 77 62       	call 2016494 <delay : 4c58 >			  ## analog.c:3958:5
 1e1876a:    00 70             	r0 = 0			  ## analog.c:3958:5
 1e1876c:    c6 ff 33 2a 00 00 	r6 = 10803 <ldo_trim_res : 2a33 >			  ## analog.c:3958:5
 1e18772:    98 6c             	b[r6 + 9] = r0			  ## analog.c:3979:29
 1e18774:    78 6c             	b[r6 + 7] = r0			  ## analog.c:3972:34
 1e18776:    68 6c             	b[r6 + 6] = r0			  ## analog.c:3972:34
 1e18778:    58 6c             	b[r6 + 5] = r0			  ## analog.c:3972:34
 1e1877a:    48 6c             	b[r6 + 4] = r0			  ## analog.c:3972:34
 1e1877c:    38 6c             	b[r6 + 3] = r0			  ## analog.c:3972:34
 1e1877e:    28 6c             	b[r6 + 2] = r0			  ## analog.c:3972:34
 1e18780:    18 6c             	b[r6 + 1] = r0			  ## analog.c:3972:34
 1e18782:    08 6c             	b[r6 + 0] = r0			  ## analog.c:3972:34
 1e18784:    c0 6c             	r0 = b[r6 + 12] (u)			  ## analog.c:3981:35
 1e18786:    b1 6c             	r1 = b[r6 + 11] (u)			  ## analog.c:3981:35
 1e18788:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## analog.c:3981:35
 1e1878c:    20 fd fd 1a       	r0 = r1 & 64768			  ## analog.c:3989:28
 1e18790:    b8 6c             	b[r6 + 11] = r0			  ## analog.c:3989:28
 1e18792:    00 d2             	r0 = r0 >> 8			  ## analog.c:3989:28
 1e18794:    c8 6c             	b[r6 + 12] = r0			  ## analog.c:3989:28
 1e18796:    97 f3 01 73       	call 3073538 <local_irq_disable : 106d9c >			  ## analog.c:3991:5
 1e1879a:    00 f6 2c f0       	r0 = [r15 + 44]			  ## analog.c:3400:23
 1e1879e:    30 fd 78 0b       	r0 = r0 & 4287102975			  ## analog.c:3400:23
 1e187a2:    10 f6 2c f0       	[r15 + 44] = r0			  ## analog.c:3400:23
 1e187a6:    0b f4 28 fb       	[r15 + 44] |= 2621440			  ## analog.c:3400:23
 1e187aa:    40 71             	r0 = 20			  ## analog.c:3995:5
 1e187ac:    8f f3 54 62       	call 2016424 <delay : 4c58 >			  ## analog.c:3995:5
 1e187b0:    00 6c             	r0 = b[r6 + 0] (u)			  ## analog.c:3995:5
 1e187b2:    cf ff ff 03 f8 ff 	r15 = 4294444031 <bank_code_load_addr+0x15CE07 : 1f803ff >			  ## analog.c:3995:5
 1e187b8:    c1 ff 00 19 1e 00 	r1 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e187be:    12 08             	r2 = r1
 1e187c0:    a1 44             	r1 = [r2 + 40]			  ## analog.c:3413:23
 1e187c2:    31 fd 07 1c       	r1 = r1 & 4177526783			  ## analog.c:3413:23
 1e187c6:    a9 44             	[r2 + 40] = r1			  ## analog.c:3413:23
 1e187c8:    b1 44             	r1 = [r2 + 44]			  ## analog.c:3415:23
 1e187ca:    e2 fd f0 11       	r1 = r1 & r15			  ## analog.c:3415:23
 1e187ce:    b9 44             	[r2 + 44] = r1			  ## analog.c:3415:23
 1e187d0:    0a f4 03 2c       	[r2 + 40] |= 50331648			  ## analog.c:3419:23
 1e187d4:    b1 44             	r1 = [r2 + 44]			  ## analog.c:3421:23
 1e187d6:    20 fd 07 09       	r0 = r0 & 7			  ## analog.c:3421:29
 1e187da:    80 c2             	r0 = r0 << 10			  ## analog.c:3421:29
 1e187dc:    50 b2             	r0 |= r1			  ## analog.c:3421:23
 1e187de:    00 fd 54 03       	r0 = r0 | 434176			  ## analog.c:3421:23
 1e187e2:    b8 44             	[r2 + 44] = r0			  ## analog.c:3421:23
 1e187e4:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x4A : 7d0 >			  ## analog.c:3999:9
 1e187e8:    8f f3 36 62       	call 2016364 <delay : 4c58 >			  ## analog.c:3999:9
 1e187ec:    20 70             	r0 = 2			  ## analog.c:4000:13
 1e187ee:    bf f3 b2 f7       	call -4252 <get_ldo_voltage : 1e17756 >			  ## analog.c:4000:13
 1e187f2:    01 6c             	r1 = b[r6 + 0] (u)			  ## analog.c:4000:13
 1e187f4:    08 ff 1a 04 06 00 	if (r0 > 1050) goto 12 <.GJTIE830_1_1_+0x9BA : 1e18806 >			  ## analog.c:4000:13
 1e187fa:    10 92             	r0 = r1 + 1			  ## analog.c:4003:40
 1e187fc:    01 04             	r1 = r0.b0 (u)			  ## analog.c:4003:40
 1e187fe:    08 6c             	b[r6 + 0] = r0			  ## analog.c:4003:40
 1e18800:    81 e0 da 3f       	if (r1 < 8) goto -76 <.GJTIE830_1_1_+0x96C : 1e187b8 >			  ## analog.c:4003:40
 1e18804:    02 18             	goto 4 <.GJTIE830_1_1_+0x9BE : 1e1880a >			  ## analog.c:4003:40
 1e18806:    81 e0 02 30       	if (r1 < 8) goto 4 <.GJTIE830_1_1_+0x9C2 : 1e1880e >
 1e1880a:    71 70             	r1 = 7
 1e1880c:    09 6c             	b[r6 + 0] = r1			  ## analog.c:4007:40
 1e1880e:    c0 6c             	r0 = b[r6 + 12] (u)
 1e18810:    b2 6c             	r2 = b[r6 + 11] (u)
 1e18812:    d8 fd 40 20       	r2 <= insert(r0, p:8, l:24)
 1e18816:    03 fd 01 29       	r3 = r2 | 1			  ## analog.c:4014:39
 1e1881a:    30 fd 01 29       	r0 = r2 & 4294967294			  ## analog.c:4011:39
 1e1881e:    64 fb 03 19       	r4 = 3 - r1			  ## analog.c:4010:85
 1e18822:    02 08             	r2 = r0			  ## analog.c:4010:71
 1e18824:    14 e0 01 c0       	ifs (r4 > 1) goto 2 <.GJTIE830_1_1_+0x9DE : 1e1882a >			  ## analog.c:4010:71
 1e18828:    32 08             	r2 = r3			  ## analog.c:4010:71
 1e1882a:    d1 8f             	r1 += -3			  ## analog.c:4010:41
 1e1882c:    21 e0 01 c0       	ifs (r1 > 2) goto 2 <.GJTIE830_1_1_+0x9E6 : 1e18832 >			  ## analog.c:4010:41
 1e18830:    20 08             	r0 = r2			  ## analog.c:4010:71
 1e18832:    b8 6c             	b[r6 + 11] = r0			  ## analog.c:4011:39
 1e18834:    00 d2             	r0 = r0 >> 8			  ## analog.c:4011:39
 1e18836:    c8 6c             	b[r6 + 12] = r0			  ## analog.c:4011:39
 1e18838:    c0 ff 00 19 1e 00 	r0 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e1883e:    01 08             	r1 = r0
 1e18840:    b0 42             	r0 = [r1 + 44]			  ## analog.c:3400:23
 1e18842:    30 fd 78 0b       	r0 = r0 & 4287102975			  ## analog.c:3400:23
 1e18846:    b8 42             	[r1 + 44] = r0			  ## analog.c:3400:23
 1e18848:    0b f4 38 1b       	[r1 + 44] |= 3670016			  ## analog.c:3400:23
 1e1884c:    40 71             	r0 = 20			  ## analog.c:4024:5
 1e1884e:    8f f3 03 62       	call 2016262 <delay : 4c58 >			  ## analog.c:4024:5
 1e18852:    10 6c             	r0 = b[r6 + 1] (u)			  ## analog.c:4024:5
 1e18854:    c5 ff 00 14 06 00 	r5 = 398336 <text_size+0x40550 : 61400 >			  ## analog.c:4024:5
 1e1885a:    c1 ff 00 19 1e 00 	r1 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e18860:    12 08             	r2 = r1
 1e18862:    a1 44             	r1 = [r2 + 40]			  ## analog.c:3428:23
 1e18864:    31 fd 07 1c       	r1 = r1 & 4177526783			  ## analog.c:3428:23
 1e18868:    a9 44             	[r2 + 40] = r1			  ## analog.c:3428:23
 1e1886a:    b1 44             	r1 = [r2 + 44]			  ## analog.c:3430:23
 1e1886c:    e2 fd f0 11       	r1 = r1 & r15			  ## analog.c:3430:23
 1e18870:    b9 44             	[r2 + 44] = r1			  ## analog.c:3430:23
 1e18872:    0a f4 03 2c       	[r2 + 40] |= 50331648			  ## analog.c:3434:23
 1e18876:    b1 44             	r1 = [r2 + 44]			  ## analog.c:3436:23
 1e18878:    20 fd 07 09       	r0 = r0 & 7			  ## analog.c:3437:29
 1e1887c:    40 c3             	r0 = r0 << 13			  ## analog.c:3437:29
 1e1887e:    50 b2             	r0 |= r1			  ## analog.c:3436:23
 1e18880:    50 ba             	r0 |= r5			  ## analog.c:3436:23
 1e18882:    b8 44             	[r2 + 44] = r0			  ## analog.c:3436:23
 1e18884:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x4A : 7d0 >			  ## analog.c:4028:9
 1e18888:    8f f3 e6 61       	call 2016204 <delay : 4c58 >			  ## analog.c:4028:9
 1e1888c:    20 70             	r0 = 2			  ## analog.c:4029:13
 1e1888e:    bf f3 62 f7       	call -4412 <get_ldo_voltage : 1e17756 >			  ## analog.c:4029:13
 1e18892:    11 6c             	r1 = b[r6 + 1] (u)			  ## analog.c:4029:13
 1e18894:    08 ff 1a 04 06 00 	if (r0 > 1050) goto 12 <.GJTIE830_1_1_+0xA5A : 1e188a6 >			  ## analog.c:4029:13
 1e1889a:    10 92             	r0 = r1 + 1			  ## analog.c:4032:38
 1e1889c:    01 04             	r1 = r0.b0 (u)			  ## analog.c:4032:38
 1e1889e:    18 6c             	b[r6 + 1] = r0			  ## analog.c:4032:38
 1e188a0:    81 e0 db 3f       	if (r1 < 8) goto -74 <.GJTIE830_1_1_+0xA0E : 1e1885a >			  ## analog.c:4032:38
 1e188a4:    02 18             	goto 4 <.GJTIE830_1_1_+0xA5E : 1e188aa >			  ## analog.c:4032:38
 1e188a6:    81 e0 02 30       	if (r1 < 8) goto 4 <.GJTIE830_1_1_+0xA62 : 1e188ae >
 1e188aa:    71 70             	r1 = 7
 1e188ac:    19 6c             	b[r6 + 1] = r1			  ## analog.c:4036:38
 1e188ae:    c0 6c             	r0 = b[r6 + 12] (u)
 1e188b0:    b2 6c             	r2 = b[r6 + 11] (u)
 1e188b2:    d8 fd 40 20       	r2 <= insert(r0, p:8, l:24)
 1e188b6:    03 fd 02 29       	r3 = r2 | 2			  ## analog.c:4043:37
 1e188ba:    30 fd 02 29       	r0 = r2 & 4294967293			  ## analog.c:4040:37
 1e188be:    64 fb 03 19       	r4 = 3 - r1			  ## analog.c:4039:93
 1e188c2:    02 08             	r2 = r0			  ## analog.c:4039:74
 1e188c4:    14 e0 01 c0       	ifs (r4 > 1) goto 2 <.GJTIE830_1_1_+0xA7E : 1e188ca >			  ## analog.c:4039:74
 1e188c8:    32 08             	r2 = r3			  ## analog.c:4039:74
 1e188ca:    d1 8f             	r1 += -3			  ## analog.c:4039:39
 1e188cc:    21 e0 01 c0       	ifs (r1 > 2) goto 2 <.GJTIE830_1_1_+0xA86 : 1e188d2 >			  ## analog.c:4039:39
 1e188d0:    20 08             	r0 = r2			  ## analog.c:4039:74
 1e188d2:    b8 6c             	b[r6 + 11] = r0			  ## analog.c:4040:37
 1e188d4:    00 d2             	r0 = r0 >> 8			  ## analog.c:4040:37
 1e188d6:    c8 6c             	b[r6 + 12] = r0			  ## analog.c:4040:37
 1e188d8:    c0 ff 00 19 1e 00 	r0 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e188de:    01 08             	r1 = r0
 1e188e0:    b0 42             	r0 = [r1 + 44]			  ## analog.c:3400:23
 1e188e2:    30 fd 78 0b       	r0 = r0 & 4287102975			  ## analog.c:3400:23
 1e188e6:    b8 42             	[r1 + 44] = r0			  ## analog.c:3400:23
 1e188e8:    0b f4 48 1b       	[r1 + 44] |= 4718592			  ## analog.c:3400:23
 1e188ec:    40 71             	r0 = 20			  ## analog.c:4053:5
 1e188ee:    8f f3 b3 61       	call 2016102 <delay : 4c58 >			  ## analog.c:4053:5
 1e188f2:    20 6c             	r0 = b[r6 + 2] (u)			  ## analog.c:4053:5
 1e188f4:    c1 ff 00 19 1e 00 	r1 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e188fa:    12 08             	r2 = r1
 1e188fc:    a1 44             	r1 = [r2 + 40]			  ## analog.c:3443:23
 1e188fe:    31 fd 07 1c       	r1 = r1 & 4177526783			  ## analog.c:3443:23
 1e18902:    a9 44             	[r2 + 40] = r1			  ## analog.c:3443:23
 1e18904:    b1 44             	r1 = [r2 + 44]			  ## analog.c:3445:23
 1e18906:    e2 fd f0 11       	r1 = r1 & r15			  ## analog.c:3445:23
 1e1890a:    b9 44             	[r2 + 44] = r1			  ## analog.c:3445:23
 1e1890c:    0a f4 03 2c       	[r2 + 40] |= 50331648			  ## analog.c:3449:23
 1e18910:    b1 44             	r1 = [r2 + 44]			  ## analog.c:3451:23
 1e18912:    20 fd 07 09       	r0 = r0 & 7			  ## analog.c:3453:29
 1e18916:    00 c4             	r0 = r0 << 16			  ## analog.c:3453:29
 1e18918:    50 b2             	r0 |= r1			  ## analog.c:3451:23
 1e1891a:    00 fd b4 0a       	r0 = r0 | 46080			  ## analog.c:3451:23
 1e1891e:    b8 44             	[r2 + 44] = r0			  ## analog.c:3451:23
 1e18920:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x4A : 7d0 >			  ## analog.c:4057:9
 1e18924:    8f f3 98 61       	call 2016048 <delay : 4c58 >			  ## analog.c:4057:9
 1e18928:    20 70             	r0 = 2			  ## analog.c:4058:13
 1e1892a:    bf f3 14 f7       	call -4568 <get_ldo_voltage : 1e17756 >			  ## analog.c:4058:13
 1e1892e:    21 6c             	r1 = b[r6 + 2] (u)			  ## analog.c:4058:13
 1e18930:    08 ff 1a 04 06 00 	if (r0 > 1050) goto 12 <.GJTIE830_1_1_+0xAF6 : 1e18942 >			  ## analog.c:4058:13
 1e18936:    10 92             	r0 = r1 + 1			  ## analog.c:4061:35
 1e18938:    01 04             	r1 = r0.b0 (u)			  ## analog.c:4061:35
 1e1893a:    28 6c             	b[r6 + 2] = r0			  ## analog.c:4061:35
 1e1893c:    81 e0 da 3f       	if (r1 < 8) goto -76 <.GJTIE830_1_1_+0xAA8 : 1e188f4 >			  ## analog.c:4061:35
 1e18940:    02 18             	goto 4 <.GJTIE830_1_1_+0xAFA : 1e18946 >			  ## analog.c:4061:35
 1e18942:    81 e0 02 30       	if (r1 < 8) goto 4 <.GJTIE830_1_1_+0xAFE : 1e1894a >
 1e18946:    71 70             	r1 = 7
 1e18948:    29 6c             	b[r6 + 2] = r1			  ## analog.c:4065:35
 1e1894a:    c0 6c             	r0 = b[r6 + 12] (u)
 1e1894c:    b2 6c             	r2 = b[r6 + 11] (u)
 1e1894e:    d8 fd 40 20       	r2 <= insert(r0, p:8, l:24)
 1e18952:    03 fd 04 29       	r3 = r2 | 4			  ## analog.c:4072:34
 1e18956:    30 fd 04 29       	r0 = r2 & 4294967291			  ## analog.c:4069:34
 1e1895a:    64 fb 03 19       	r4 = 3 - r1			  ## analog.c:4068:86
 1e1895e:    02 08             	r2 = r0			  ## analog.c:4068:69
 1e18960:    14 e0 01 c0       	ifs (r4 > 1) goto 2 <.GJTIE830_1_1_+0xB1A : 1e18966 >			  ## analog.c:4068:69
 1e18964:    32 08             	r2 = r3			  ## analog.c:4068:69
 1e18966:    d1 8f             	r1 += -3			  ## analog.c:4068:36
 1e18968:    21 e0 01 c0       	ifs (r1 > 2) goto 2 <.GJTIE830_1_1_+0xB22 : 1e1896e >			  ## analog.c:4068:36
 1e1896c:    20 08             	r0 = r2			  ## analog.c:4068:69
 1e1896e:    b8 6c             	b[r6 + 11] = r0			  ## analog.c:4069:34
 1e18970:    00 d2             	r0 = r0 >> 8			  ## analog.c:4069:34
 1e18972:    c8 6c             	b[r6 + 12] = r0			  ## analog.c:4069:34
 1e18974:    c0 ff 00 19 1e 00 	r0 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e1897a:    01 08             	r1 = r0
 1e1897c:    b0 42             	r0 = [r1 + 44]			  ## analog.c:3400:23
 1e1897e:    30 fd 78 0b       	r0 = r0 & 4287102975			  ## analog.c:3400:23
 1e18982:    b8 42             	[r1 + 44] = r0			  ## analog.c:3400:23
 1e18984:    0b f4 58 1b       	[r1 + 44] |= 5767168			  ## analog.c:3400:23
 1e18988:    40 71             	r0 = 20			  ## analog.c:4082:5
 1e1898a:    8f f3 65 61       	call 2015946 <delay : 4c58 >			  ## analog.c:4082:5
 1e1898e:    30 6c             	r0 = b[r6 + 3] (u)			  ## analog.c:4082:5
 1e18990:    45 fb a0 5a       	r5 = r5 + 40960			  ## analog.c:4082:5
 1e18994:    c1 ff 00 19 1e 00 	r1 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e1899a:    12 08             	r2 = r1
 1e1899c:    a1 44             	r1 = [r2 + 40]			  ## analog.c:3459:23
 1e1899e:    31 fd 07 1c       	r1 = r1 & 4177526783			  ## analog.c:3459:23
 1e189a2:    a9 44             	[r2 + 40] = r1			  ## analog.c:3459:23
 1e189a4:    b1 44             	r1 = [r2 + 44]			  ## analog.c:3461:23
 1e189a6:    e2 fd f0 11       	r1 = r1 & r15			  ## analog.c:3461:23
 1e189aa:    b9 44             	[r2 + 44] = r1			  ## analog.c:3461:23
 1e189ac:    a1 44             	r1 = [r2 + 40]			  ## analog.c:3465:23
 1e189ae:    20 fd 07 09       	r0 = r0 & 7			  ## analog.c:3465:29
 1e189b2:    00 c6             	r0 = r0 << 24			  ## analog.c:3465:29
 1e189b4:    50 b2             	r0 |= r1			  ## analog.c:3465:23
 1e189b6:    a8 44             	[r2 + 40] = r0			  ## analog.c:3465:23
 1e189b8:    b0 44             	r0 = [r2 + 44]			  ## analog.c:3467:23
 1e189ba:    50 ba             	r0 |= r5			  ## analog.c:3467:23
 1e189bc:    b8 44             	[r2 + 44] = r0			  ## analog.c:3467:23
 1e189be:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x4A : 7d0 >			  ## analog.c:4086:9
 1e189c2:    8f f3 49 61       	call 2015890 <delay : 4c58 >			  ## analog.c:4086:9
 1e189c6:    20 70             	r0 = 2			  ## analog.c:4087:13
 1e189c8:    bf f3 c5 f6       	call -4726 <get_ldo_voltage : 1e17756 >			  ## analog.c:4087:13
 1e189cc:    31 6c             	r1 = b[r6 + 3] (u)			  ## analog.c:4087:13
 1e189ce:    08 ff 84 03 06 00 	if (r0 > 900) goto 12 <.GJTIE830_1_1_+0xB94 : 1e189e0 >			  ## analog.c:4087:13
 1e189d4:    10 92             	r0 = r1 + 1			  ## analog.c:4090:35
 1e189d6:    01 04             	r1 = r0.b0 (u)			  ## analog.c:4090:35
 1e189d8:    38 6c             	b[r6 + 3] = r0			  ## analog.c:4090:35
 1e189da:    81 e0 db 3f       	if (r1 < 8) goto -74 <.GJTIE830_1_1_+0xB48 : 1e18994 >			  ## analog.c:4090:35
 1e189de:    02 18             	goto 4 <.GJTIE830_1_1_+0xB98 : 1e189e4 >			  ## analog.c:4090:35
 1e189e0:    81 e0 02 30       	if (r1 < 8) goto 4 <.GJTIE830_1_1_+0xB9C : 1e189e8 >
 1e189e4:    71 70             	r1 = 7
 1e189e6:    39 6c             	b[r6 + 3] = r1			  ## analog.c:4094:35
 1e189e8:    c0 6c             	r0 = b[r6 + 12] (u)
 1e189ea:    b2 6c             	r2 = b[r6 + 11] (u)
 1e189ec:    d8 fd 40 20       	r2 <= insert(r0, p:8, l:24)
 1e189f0:    03 fd 08 29       	r3 = r2 | 8			  ## analog.c:4101:34
 1e189f4:    30 fd 08 29       	r0 = r2 & 4294967287			  ## analog.c:4098:34
 1e189f8:    64 fb 02 19       	r4 = 2 - r1			  ## analog.c:4097:86
 1e189fc:    02 08             	r2 = r0			  ## analog.c:4097:69
 1e189fe:    14 e0 01 c0       	ifs (r4 > 1) goto 2 <.GJTIE830_1_1_+0xBB8 : 1e18a04 >			  ## analog.c:4097:69
 1e18a02:    32 08             	r2 = r3			  ## analog.c:4097:69
 1e18a04:    e1 8f             	r1 += -2			  ## analog.c:4097:36
 1e18a06:    cf ff 00 19 1e 00 	r15 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >			  ## analog.c:4097:36
 1e18a0c:    21 e0 01 c0       	ifs (r1 > 2) goto 2 <.GJTIE830_1_1_+0xBC6 : 1e18a12 >			  ## analog.c:4097:36
 1e18a10:    20 08             	r0 = r2			  ## analog.c:4097:69
 1e18a12:    b8 6c             	b[r6 + 11] = r0			  ## analog.c:4098:34
 1e18a14:    00 d2             	r0 = r0 >> 8			  ## analog.c:4098:34
 1e18a16:    c8 6c             	b[r6 + 12] = r0			  ## analog.c:4098:34
 1e18a18:    00 f6 2c f0       	r0 = [r15 + 44]			  ## analog.c:3400:23
 1e18a1c:    30 fd 78 0b       	r0 = r0 & 4287102975			  ## analog.c:3400:23
 1e18a20:    10 f6 2c f0       	[r15 + 44] = r0			  ## analog.c:3400:23
 1e18a24:    00 f6 2c f0       	r0 = [r15 + 44]			  ## analog.c:3406:27
 1e18a28:    10 f6 2c f0       	[r15 + 44] = r0			  ## analog.c:3406:27
 1e18a2c:    40 71             	r0 = 20			  ## analog.c:4112:5
 1e18a2e:    8f f3 13 61       	call 2015782 <delay : 4c58 >			  ## analog.c:4112:5
 1e18a32:    40 6c             	r0 = b[r6 + 4] (u)			  ## analog.c:4112:5
 1e18a34:    c4 ff e1 ff 1f ff 	r4 = 4280287201 <uECC_vli_cmp_unsafe+0x10F8FE5 : 11fffe1 >			  ## analog.c:4112:5
 1e18a3a:    01 f6 20 f0       	r1 = [r15 + 32]			  ## analog.c:3510:22
 1e18a3e:    51 b9             	r1 &= r4			  ## analog.c:3510:22
 1e18a40:    11 f6 20 f0       	[r15 + 32] = r1			  ## analog.c:3510:22
 1e18a44:    01 f6 20 f0       	r1 = [r15 + 32]			  ## analog.c:3515:22
 1e18a48:    80 c0             	r0 = r0 << 2			  ## analog.c:3516:25
 1e18a4a:    20 fd 1c 09       	r0 = r0 & 28			  ## analog.c:3516:25
 1e18a4e:    50 b2             	r0 |= r1			  ## analog.c:3515:22
 1e18a50:    00 fd 60 0b       	r0 = r0 | 6291456			  ## analog.c:3515:22
 1e18a54:    10 f6 20 f0       	[r15 + 32] = r0			  ## analog.c:3515:22
 1e18a58:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x4A : 7d0 >			  ## analog.c:4116:9
 1e18a5c:    8f f3 fc 60       	call 2015736 <delay : 4c58 >			  ## analog.c:4116:9
 1e18a60:    10 70             	r0 = 1			  ## analog.c:4117:13
 1e18a62:    bf f3 78 f6       	call -4880 <get_ldo_voltage : 1e17756 >			  ## analog.c:4117:13
 1e18a66:    41 6c             	r1 = b[r6 + 4] (u)			  ## analog.c:4117:13
 1e18a68:    08 ff 1a 04 06 00 	if (r0 > 1050) goto 12 <.GJTIE830_1_1_+0xC2E : 1e18a7a >			  ## analog.c:4117:13
 1e18a6e:    10 92             	r0 = r1 + 1			  ## analog.c:4120:35
 1e18a70:    01 04             	r1 = r0.b0 (u)			  ## analog.c:4120:35
 1e18a72:    48 6c             	b[r6 + 4] = r0			  ## analog.c:4120:35
 1e18a74:    81 e0 e1 3f       	if (r1 < 8) goto -62 <.GJTIE830_1_1_+0xBEE : 1e18a3a >			  ## analog.c:4120:35
 1e18a78:    02 18             	goto 4 <.GJTIE830_1_1_+0xC32 : 1e18a7e >			  ## analog.c:4120:35
 1e18a7a:    81 e0 02 30       	if (r1 < 8) goto 4 <.GJTIE830_1_1_+0xC36 : 1e18a82 >
 1e18a7e:    71 70             	r1 = 7
 1e18a80:    49 6c             	b[r6 + 4] = r1			  ## analog.c:4124:35
 1e18a82:    c0 6c             	r0 = b[r6 + 12] (u)
 1e18a84:    b2 6c             	r2 = b[r6 + 11] (u)
 1e18a86:    d8 fd 40 20       	r2 <= insert(r0, p:8, l:24)
 1e18a8a:    03 fd 10 29       	r3 = r2 | 16			  ## analog.c:4131:34
 1e18a8e:    30 fd 10 29       	r0 = r2 & 4294967279			  ## analog.c:4128:34
 1e18a92:    64 fb 03 19       	r4 = 3 - r1			  ## analog.c:4127:84
 1e18a96:    02 08             	r2 = r0			  ## analog.c:4127:68
 1e18a98:    14 e0 01 c0       	ifs (r4 > 1) goto 2 <.GJTIE830_1_1_+0xC52 : 1e18a9e >			  ## analog.c:4127:68
 1e18a9c:    32 08             	r2 = r3			  ## analog.c:4127:68
 1e18a9e:    d1 8f             	r1 += -3			  ## analog.c:4127:36
 1e18aa0:    21 e0 01 c0       	ifs (r1 > 2) goto 2 <.GJTIE830_1_1_+0xC5A : 1e18aa6 >			  ## analog.c:4127:36
 1e18aa4:    20 08             	r0 = r2			  ## analog.c:4127:68
 1e18aa6:    b8 6c             	b[r6 + 11] = r0			  ## analog.c:4128:34
 1e18aa8:    00 d2             	r0 = r0 >> 8			  ## analog.c:4128:34
 1e18aaa:    c8 6c             	b[r6 + 12] = r0			  ## analog.c:4128:34
 1e18aac:    1b f6 20 f0       	[r15 + 32] = r11			  ## analog.c:4137:22
 1e18ab0:    40 71             	r0 = 20			  ## analog.c:4180:5
 1e18ab2:    8f f3 d1 60       	call 2015650 <delay : 4c58 >			  ## analog.c:4180:5
 1e18ab6:    60 6c             	r0 = b[r6 + 6] (u)			  ## analog.c:4180:5
 1e18ab8:    cb ff e5 53 a7 44 	r11 = 1151816677 <uECC_vli_cmp_unsafe+0x96E3E9 : a753e5 >			  ## analog.c:4180:5
 1e18abe:    c5 ff 00 3e 0d 02 	r5 = 34422272 <text_size+0xB2F50 : d3e00 >			  ## analog.c:4180:5
 1e18ac4:    c4 ff a5 16 0d 01 	r4 = 17634981 <uECC_vli_cmp_unsafe+0xFCA6A9 : 10d16a5 >			  ## analog.c:4180:5
 1e18aca:    1b f6 00 f0       	[r15 + 0] = r11			  ## analog.c:3581:22
 1e18ace:    15 f6 0c f0       	[r15 + 12] = r5			  ## analog.c:3596:22
 1e18ad2:    80 c5             	r0 = r0 << 22			  ## analog.c:3621:26
 1e18ad4:    20 fd c0 0b       	r0 = r0 & 12582912			  ## analog.c:3621:26
 1e18ad8:    50 b8             	r0 |= r4			  ## analog.c:3621:55
 1e18ada:    10 f6 10 f0       	[r15 + 16] = r0			  ## analog.c:3607:22
 1e18ade:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x4A : 7d0 >			  ## analog.c:4184:9
 1e18ae2:    8f f3 b9 60       	call 2015602 <delay : 4c58 >			  ## analog.c:4184:9
 1e18ae6:    20 70             	r0 = 2			  ## analog.c:4185:13
 1e18ae8:    bf f3 35 f6       	call -5014 <get_ldo_voltage : 1e17756 >			  ## analog.c:4185:13
 1e18aec:    61 6c             	r1 = b[r6 + 6] (u)			  ## analog.c:4185:13
 1e18aee:    08 ff 52 03 06 00 	if (r0 > 850) goto 12 <.GJTIE830_1_1_+0xCB4 : 1e18b00 >			  ## analog.c:4185:13
 1e18af4:    10 92             	r0 = r1 + 1			  ## analog.c:4188:36
 1e18af6:    01 04             	r1 = r0.b0 (u)			  ## analog.c:4188:36
 1e18af8:    68 6c             	b[r6 + 6] = r0			  ## analog.c:4188:36
 1e18afa:    41 e0 e6 3f       	if (r1 < 4) goto -52 <.GJTIE830_1_1_+0xC7E : 1e18aca >			  ## analog.c:4188:36
 1e18afe:    02 18             	goto 4 <.GJTIE830_1_1_+0xCB8 : 1e18b04 >			  ## analog.c:4188:36
 1e18b00:    41 e0 02 30       	if (r1 < 4) goto 4 <.GJTIE830_1_1_+0xCBC : 1e18b08 >
 1e18b04:    31 70             	r1 = 3
 1e18b06:    69 6c             	b[r6 + 6] = r1			  ## analog.c:4192:36
 1e18b08:    c0 6c             	r0 = b[r6 + 12] (u)
 1e18b0a:    b2 6c             	r2 = b[r6 + 11] (u)
 1e18b0c:    c8 fd 40 20       	r2 <= insert(r0, p:8, l:8)
 1e18b10:    c0 ff bf ff 00 00 	r0 = 65471 <_IRQ_MEM_ADDR+0xBF : ffbf >			  ## analog.c:4196:35
 1e18b16:    50 b5             	r0 &= r2			  ## analog.c:4196:35
 1e18b18:    12 b3             	r2 |= 64			  ## analog.c:4199:35
 1e18b1a:    f1 8f             	r1 += -1			  ## analog.c:4195:37
 1e18b1c:    21 e0 01 c0       	ifs (r1 > 2) goto 2 <.GJTIE830_1_1_+0xCD6 : 1e18b22 >			  ## analog.c:4195:37
 1e18b20:    20 08             	r0 = r2			  ## analog.c:4195:74
 1e18b22:    b8 6c             	b[r6 + 11] = r0			  ## analog.c:4196:35
 1e18b24:    00 d2             	r0 = r0 >> 8			  ## analog.c:4196:35
 1e18b26:    c8 6c             	b[r6 + 12] = r0			  ## analog.c:4196:35
 1e18b28:    1a f6 00 f0       	[r15 + 0] = r10			  ## analog.c:4203:22
 1e18b2c:    19 f6 0c f0       	[r15 + 12] = r9			  ## analog.c:4204:22
 1e18b30:    1d f6 10 f0       	[r15 + 16] = r13			  ## analog.c:4205:22
 1e18b34:    40 71             	r0 = 20			  ## analog.c:4214:5
 1e18b36:    8f f3 8f 60       	call 2015518 <delay : 4c58 >			  ## analog.c:4214:5
 1e18b3a:    70 6c             	r0 = b[r6 + 7] (u)			  ## analog.c:4214:5
 1e18b3c:    c4 ff 96 18 1a 00 	r4 = 1710230 <uECC_vli_cmp_unsafe+0x9A89A : 1a1896 >			  ## analog.c:4214:5
 1e18b42:    b9 fc 00 80       	r9 = r11 + -32768			  ## analog.c:4214:5
 1e18b46:    cb ff 9b c5 d0 08 	r11 = 147899803 <uECC_vli_cmp_unsafe+0xC0559F : d0c59b >			  ## analog.c:4214:5
 1e18b4c:    c5 ff 5a 13 e6 ff 	r5 = 4293268314 <bank_code_load_addr+0x3DD62 : 1e6135a >			  ## analog.c:4214:5
 1e18b52:    cc ff e8 09 00 00 	r12 = 2536 <system_data_end : 9e8 >			  ## analog.c:4214:5
 1e18b58:    4d fb 04 f2       	r13 = r15 + 67584			  ## analog.c:4214:5
 1e18b5c:    01 68             	r1 = b[r4 + 0] (u)			  ## analog.c:3633:5
 1e18b5e:    21 fd f8 19       	r1 = r1 & 248			  ## analog.c:3633:5
 1e18b62:    11 b1             	r1 |= 4			  ## analog.c:3633:5
 1e18b64:    09 68             	b[r4 + 0] = r1			  ## analog.c:3633:5
 1e18b66:    19 f6 00 f0       	[r15 + 0] = r9			  ## analog.c:3635:22
 1e18b6a:    1b f6 14 f0       	[r15 + 20] = r11			  ## analog.c:3650:23
 1e18b6e:    80 c3             	r0 = r0 << 14			  ## analog.c:3678:25
 1e18b70:    20 fd 60 02       	r0 = r0 & 114688			  ## analog.c:3678:25
 1e18b74:    50 ba             	r0 |= r5			  ## analog.c:3682:52
 1e18b76:    10 f6 18 f0       	[r15 + 24] = r0			  ## analog.c:3673:22
 1e18b7a:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x4A : 7d0 >			  ## analog.c:4218:9
 1e18b7e:    8f f3 6b 60       	call 2015446 <delay : 4c58 >			  ## analog.c:4218:9
 1e18b82:    20 70             	r0 = 2			  ## analog.c:4219:13
 1e18b84:    bf f3 e7 f5       	call -5170 <get_ldo_voltage : 1e17756 >			  ## analog.c:4219:13
 1e18b88:    71 6c             	r1 = b[r6 + 7] (u)			  ## analog.c:4219:13
 1e18b8a:    08 ff 1a 04 06 00 	if (r0 > 1050) goto 12 <.GJTIE830_1_1_+0xD50 : 1e18b9c >			  ## analog.c:4219:13
 1e18b90:    10 92             	r0 = r1 + 1			  ## analog.c:4222:35
 1e18b92:    01 04             	r1 = r0.b0 (u)			  ## analog.c:4222:35
 1e18b94:    78 6c             	b[r6 + 7] = r0			  ## analog.c:4222:35
 1e18b96:    81 e0 e1 3f       	if (r1 < 8) goto -62 <.GJTIE830_1_1_+0xD10 : 1e18b5c >			  ## analog.c:4222:35
 1e18b9a:    02 18             	goto 4 <.GJTIE830_1_1_+0xD54 : 1e18ba0 >			  ## analog.c:4222:35
 1e18b9c:    81 e0 02 30       	if (r1 < 8) goto 4 <.GJTIE830_1_1_+0xD58 : 1e18ba4 >
 1e18ba0:    71 70             	r1 = 7
 1e18ba2:    79 6c             	b[r6 + 7] = r1			  ## analog.c:4226:35
 1e18ba4:    c0 6c             	r0 = b[r6 + 12] (u)
 1e18ba6:    b2 6c             	r2 = b[r6 + 11] (u)
 1e18ba8:    d8 fd 40 20       	r2 <= insert(r0, p:8, l:24)
 1e18bac:    03 fd 80 29       	r3 = r2 | 128			  ## analog.c:4233:34
 1e18bb0:    30 fd 80 29       	r0 = r2 & 4294967167			  ## analog.c:4230:34
 1e18bb4:    65 fb 03 19       	r5 = 3 - r1			  ## analog.c:4229:92
 1e18bb8:    02 08             	r2 = r0			  ## analog.c:4229:72
 1e18bba:    15 e0 01 c0       	ifs (r5 > 1) goto 2 <.GJTIE830_1_1_+0xD74 : 1e18bc0 >			  ## analog.c:4229:72
 1e18bbe:    32 08             	r2 = r3			  ## analog.c:4229:72
 1e18bc0:    d1 8f             	r1 += -3			  ## analog.c:4229:36
 1e18bc2:    c9 ff 1c 2a 00 00 	r9 = 10780 <tws_bulk_pool_end : 2a1c >			  ## analog.c:4229:36
 1e18bc8:    21 e0 01 c0       	ifs (r1 > 2) goto 2 <.GJTIE830_1_1_+0xD82 : 1e18bce >			  ## analog.c:4229:36
 1e18bcc:    20 08             	r0 = r2			  ## analog.c:4229:72
 1e18bce:    b8 6c             	b[r6 + 11] = r0			  ## analog.c:4230:34
 1e18bd0:    00 d2             	r0 = r0 >> 8			  ## analog.c:4230:34
 1e18bd2:    c8 6c             	b[r6 + 12] = r0			  ## analog.c:4230:34
 1e18bd4:    00 68             	r0 = b[r4 + 0] (u)			  ## analog.c:4237:5
 1e18bd6:    20 fd f8 09       	r0 = r0 & 248			  ## analog.c:4237:5
 1e18bda:    00 fd 03 09       	r0 = r0 | 3			  ## analog.c:4237:5
 1e18bde:    08 68             	b[r4 + 0] = r0			  ## analog.c:4237:5
 1e18be0:    1a f6 00 f0       	[r15 + 0] = r10			  ## analog.c:4238:22
 1e18be4:    20 02             	r0 = [sp+8]			  ## analog.c:4239:22
 1e18be6:    10 f6 14 f0       	[r15 + 20] = r0			  ## analog.c:4239:22
 1e18bea:    18 f6 18 f0       	[r15 + 24] = r8			  ## analog.c:4240:22
 1e18bee:    40 71             	r0 = 20			  ## analog.c:4249:5
 1e18bf0:    8f f3 32 60       	call 2015332 <delay : 4c58 >			  ## analog.c:4249:5
 1e18bf4:    90 6c             	r0 = b[r6 + 9] (u)			  ## analog.c:4249:5
 1e18bf6:    c4 ff e5 d2 0f 49 	r4 = 1225773797 <uECC_vli_cmp_unsafe+0xFF62E9 : 10fd2e5 >			  ## analog.c:4249:5
 1e18bfc:    20 fd 07 09       	r0 = r0 & 7			  ## analog.c:3700:24
 1e18c00:    41 08             	r1 = r4			  ## analog.c:3702:51
 1e18c02:    c3 fd a8 10       	r1 <= insert(r0, p:21, l:3)			  ## analog.c:3702:51
 1e18c06:    11 f6 00 f0       	[r15 + 0] = r1			  ## analog.c:3690:22
 1e18c0a:    01 f4 40 fb       	[r15 + 4] |= 4194304			  ## analog.c:3705:22
 1e18c0e:    02 f4 01 f9       	[r15 + 8] |= 1			  ## analog.c:3707:22
 1e18c12:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x4A : 7d0 >			  ## analog.c:4253:9
 1e18c16:    8f f3 1f 60       	call 2015294 <delay : 4c58 >			  ## analog.c:4253:9
 1e18c1a:    20 70             	r0 = 2			  ## analog.c:4254:13
 1e18c1c:    bf f3 9b f5       	call -5322 <get_ldo_voltage : 1e17756 >			  ## analog.c:4254:13
 1e18c20:    91 6c             	r1 = b[r6 + 9] (u)			  ## analog.c:4254:13
 1e18c22:    08 ff 4c 04 06 00 	if (r0 > 1100) goto 12 <.GJTIE830_1_1_+0xDE8 : 1e18c34 >			  ## analog.c:4254:13
 1e18c28:    10 92             	r0 = r1 + 1			  ## analog.c:4257:33
 1e18c2a:    01 04             	r1 = r0.b0 (u)			  ## analog.c:4257:33
 1e18c2c:    98 6c             	b[r6 + 9] = r0			  ## analog.c:4257:33
 1e18c2e:    81 e0 e5 3f       	if (r1 < 8) goto -54 <.GJTIE830_1_1_+0xDB0 : 1e18bfc >			  ## analog.c:4257:33
 1e18c32:    02 18             	goto 4 <.GJTIE830_1_1_+0xDEC : 1e18c38 >			  ## analog.c:4257:33
 1e18c34:    81 e0 02 30       	if (r1 < 8) goto 4 <.GJTIE830_1_1_+0xDF0 : 1e18c3c >
 1e18c38:    71 70             	r1 = 7
 1e18c3a:    99 6c             	b[r6 + 9] = r1			  ## analog.c:4261:33
 1e18c3c:    c0 6c             	r0 = b[r6 + 12] (u)
 1e18c3e:    b2 6c             	r2 = b[r6 + 11] (u)
 1e18c40:    d8 fd 40 20       	r2 <= insert(r0, p:8, l:24)
 1e18c44:    03 fd 02 2a       	r3 = r2 | 512			  ## analog.c:4268:32
 1e18c48:    30 fd 02 2a       	r0 = r2 & 4294966783			  ## analog.c:4265:32
 1e18c4c:    64 fb 04 19       	r4 = 4 - r1			  ## analog.c:4264:86
 1e18c50:    02 08             	r2 = r0			  ## analog.c:4264:68
 1e18c52:    14 e0 01 c0       	ifs (r4 > 1) goto 2 <.GJTIE830_1_1_+0xE0C : 1e18c58 >			  ## analog.c:4264:68
 1e18c56:    32 08             	r2 = r3			  ## analog.c:4264:68
 1e18c58:    c1 8f             	r1 += -4			  ## analog.c:4264:34
 1e18c5a:    21 e0 01 c0       	ifs (r1 > 2) goto 2 <.GJTIE830_1_1_+0xE14 : 1e18c60 >			  ## analog.c:4264:34
 1e18c5e:    20 08             	r0 = r2			  ## analog.c:4264:68
 1e18c60:    b8 6c             	b[r6 + 11] = r0			  ## analog.c:4265:32
 1e18c62:    00 d2             	r0 = r0 >> 8			  ## analog.c:4265:32
 1e18c64:    c8 6c             	b[r6 + 12] = r0			  ## analog.c:4265:32
 1e18c66:    1a f6 00 f0       	[r15 + 0] = r10			  ## analog.c:4272:22
 1e18c6a:    1e f6 04 f0       	[r15 + 4] = r14			  ## analog.c:4273:22
 1e18c6e:    30 02             	r0 = [sp+12]			  ## analog.c:4274:22
 1e18c70:    10 f6 08 f0       	[r15 + 8] = r0			  ## analog.c:4274:22
 1e18c74:    00 f6 00 f0       	r0 = [r15 + 0]			  ## analog.c:3358:5
 1e18c78:    30 fd 38 0a       	r0 = r0 & 4294952959			  ## analog.c:3358:5
 1e18c7c:    10 f6 00 f0       	[r15 + 0] = r0			  ## analog.c:3358:5
 1e18c80:    97 f3 8a 70       	call 3072276 <local_irq_enable : 106d98 >			  ## analog.c:4283:5
 1e18c84:    bf f3 e2 f1       	call -7228 <bt_analog_part_init : 1e1704c >			  ## analog.c:278:9
 1e18c88:    bf f3 83 f2       	call -6906 <reset_trim_info : 1e17192 >			  ## analog.c:281:9
 1e18c8c:    60 08             	r0 = r6			  ## analog.c:282:9
 1e18c8e:    bf f3 37 f4       	call -6034 <set_ldo_trim_res : 1e17500 >			  ## analog.c:282:9
 1e18c92:    14 a1             	r4 = sp + 17			  ## analog.c:282:9
 1e18c94:    62 71             	r2 = 22			  ## analog.c:285:9
 1e18c96:    40 08             	r0 = r4			  ## analog.c:285:9
 1e18c98:    91 08             	r1 = r9			  ## analog.c:285:9
 1e18c9a:    97 f3 23 71       	call 3072582 <memcpy : 106ee4 >			  ## analog.c:285:9
 1e18c9e:    60 99             	r0 = r4 + 22			  ## analog.c:286:31
 1e18ca0:    d2 70             	r2 = 13			  ## analog.c:286:9
 1e18ca2:    61 08             	r1 = r6			  ## analog.c:286:9
 1e18ca4:    97 f3 1e 71       	call 3072572 <memcpy : 106ee4 >			  ## analog.c:286:9
 1e18ca8:    d0 75             	r0 = 93			  ## analog.c:287:9
 1e18caa:    32 72             	r2 = 35			  ## analog.c:287:9
 1e18cac:    41 08             	r1 = r4			  ## analog.c:287:9
 1e18cae:    bf f3 cb c4       	call -30314 <syscfg_write : 1e11648 >			  ## analog.c:287:9
 1e18cb2:    15 f4 80 f9       	[r15 + 84] |= 128			  ## analog.c:1579:23
 1e18cb6:    00 f6 00 f0       	r0 = [r15 + 0]			  ## analog.c:1581:22
 1e18cba:    c1 ff 21 00 0c 00 	r1 = 786465 <text_size+0x9F171 : c0021 >			  ## analog.c:1581:22
 1e18cc0:    50 b2             	r0 |= r1			  ## analog.c:1581:22
 1e18cc2:    10 f6 00 f0       	[r15 + 0] = r0			  ## analog.c:1581:22
 1e18cc6:    01 f4 40 fb       	[r15 + 4] |= 4194304			  ## analog.c:1586:22
 1e18cca:    00 f6 04 f0       	r0 = [r15 + 4]			  ## analog.c:1588:22
 1e18cce:    f0 b5             	r0 &= 4294965247			  ## analog.c:1588:22
 1e18cd0:    10 f6 04 f0       	[r15 + 4] = r0			  ## analog.c:1588:22
 1e18cd4:    02 70             	r2 = 0
 1e18cd6:    01 70             	r1 = 0
 1e18cd8:    00 70             	r0 = 0
 1e18cda:    03 f6 04 f0       	r3 = [r15 + 4]			  ## analog.c:1591:26
 1e18cde:    33 fd 1e 3c       	r3 = r3 & 3791650815			  ## analog.c:1591:26
 1e18ce2:    13 f6 04 f0       	[r15 + 4] = r3			  ## analog.c:1591:26
 1e18ce6:    03 f6 04 f0       	r3 = [r15 + 4]			  ## analog.c:1592:26
 1e18cea:    04 08             	r4 = r0			  ## analog.c:1592:26
 1e18cec:    e0 fd 20 03       	r0 = r3 | r2			  ## analog.c:1592:26
 1e18cf0:    10 f6 04 f0       	[r15 + 4] = r0			  ## analog.c:1592:26
 1e18cf4:    00 fb 58 02       	r0 = 600 <BTCTLER_CL_RAM_TOTAL+0x74 : 258 >			  ## analog.c:1593:9
 1e18cf8:    8f f3 ae 5f       	call 2015068 <delay : 4c58 >			  ## analog.c:1593:9
 1e18cfc:    00 f6 78 f0       	r0 = [r15 + 120]			  ## analog.c:1594:25
 1e18d00:    00 fb 58 02       	r0 = 600 <BTCTLER_CL_RAM_TOTAL+0x74 : 258 >			  ## analog.c:1595:9
 1e18d04:    8f f3 a8 5f       	call 2015056 <delay : 4c58 >			  ## analog.c:1595:9
 1e18d08:    00 f6 78 f0       	r0 = [r15 + 120]			  ## analog.c:1596:25
 1e18d0c:    00 fb 58 02       	r0 = 600 <BTCTLER_CL_RAM_TOTAL+0x74 : 258 >			  ## analog.c:1597:9
 1e18d10:    8f f3 a2 5f       	call 2015044 <delay : 4c58 >			  ## analog.c:1597:9
 1e18d14:    00 f6 78 f0       	r0 = [r15 + 120]			  ## analog.c:1598:25
 1e18d18:    81 fd 18 00       	r0 = uextra(r0, p:3, l:1)			  ## analog.c:1598:16
 1e18d1c:    60 ff ff 49 01 00 	if ((r4 & 255) == 0) goto 2 <.GJTIE830_1_1_+0xED8 : 1e18d24 >			  ## analog.c:1598:16
 1e18d22:    06 20             	if (r0 == 0) goto 12 <.GJTIE830_1_1_+0xEE4 : 1e18d30 >
 1e18d24:    11 80             	r1 += 1			  ## analog.c:1590:26
 1e18d26:    42 fb 02 2c       	r2 = r2 + 33554432			  ## analog.c:1590:19
 1e18d2a:    01 e1 d6 3f       	if (r1 < 16) goto -84 <.GJTIE830_1_1_+0xE8E : 1e18cda >			  ## analog.c:1590:19
 1e18d2e:    0d 18             	goto 26 <.GJTIE830_1_1_+0xEFE : 1e18d4a >			  ## analog.c:1590:19
 1e18d30:    00 f6 04 f0       	r0 = [r15 + 4]			  ## analog.c:1602:30
 1e18d34:    30 fd 1e 0c       	r0 = r0 & 3791650815			  ## analog.c:1602:30
 1e18d38:    10 f6 04 f0       	[r15 + 4] = r0			  ## analog.c:1602:30
 1e18d3c:    00 f6 04 f0       	r0 = [r15 + 4]			  ## analog.c:1603:30
 1e18d40:    50 b4             	r0 |= r2			  ## analog.c:1603:30
 1e18d42:    10 f6 04 f0       	[r15 + 4] = r0			  ## analog.c:1603:30
 1e18d46:    01 f4 08 fa       	[r15 + 4] |= 2048			  ## analog.c:1604:30
 1e18d4a:    10 fc ff ff       	r0 = r1 + -1			  ## analog.c:1610:18
 1e18d4e:    01 04             	r1 = r0.b0 (u)			  ## analog.c:1610:18
 1e18d50:    04 70             	r4 = 0			  ## analog.c:1610:18
 1e18d52:    10 70             	r0 = 1			  ## analog.c:1610:18
 1e18d54:    91 e0 01 30       	if (r1 < 9) goto 2 <.GJTIE830_1_1_+0xF0E : 1e18d5a >			  ## analog.c:1610:18
 1e18d58:    00 70             	r0 = 0			  ## analog.c:1610:18
 1e18d5a:    c5 ff 32 2a 00 00 	r5 = 10802 <lnav_flag : 2a32 >
 1e18d60:    08 6a             	b[r5 + 0] = r0
 1e18d62:    00 f6 54 f0       	r0 = [r15 + 84]			  ## analog.c:2060:23
 1e18d66:    70 b7             	r0 &= 4294950911			  ## analog.c:2060:23
 1e18d68:    10 f6 54 f0       	[r15 + 84] = r0			  ## analog.c:2060:23
 1e18d6c:    c0 ff ee ff b5 fe 	r0 = 4273340398 <uECC_vli_cmp_unsafe+0xA58FF2 : b5ffee >			  ## analog.c:2060:23
 1e18d72:    10 f6 50 f0       	[r15 + 80] = r0			  ## analog.c:2060:23
 1e18d76:    c0 ff 61 90 ff 01 	r0 = 33525857 <bank_code_load_addr+0x1D5A69 : 1ff9061 >			  ## analog.c:2060:23
 1e18d7c:    10 f6 54 f0       	[r15 + 84] = r0			  ## analog.c:2060:23
 1e18d80:    bf f3 34 f5       	call -5528 <bta_pll_config_init : 1e177ec >			  ## analog.c:2975:5
 1e18d84:    c5 f4 b4 79       	[r7 + 20] = 180			  ## analog.c:3155:19
 1e18d88:    c1 ff a0 69 e1 01 	r1 = 31549856 <TXPWR_table : 1e169a0 >			  ## analog.c:3155:19
 1e18d8e:    c2 ff cc 69 e1 01 	r2 = 31549900 <TXSET_table : 1e169cc >			  ## analog.c:3155:19
 1e18d94:    03 70             	r3 = 0			  ## analog.c:3155:19
 1e18d96:    6c 4e             	[r7 + 24] = r4			  ## analog.c:3157:23
 1e18d98:    a0 70             	r0 = 10			  ## analog.c:3158:9
 1e18d9a:    8f f3 5d 5f       	call 2014906 <delay : 4c58 >			  ## analog.c:3158:9
 1e18d9e:    80 f6 00 31       	r0 = [r3+r1]			  ## analog.c:3158:9
 1e18da2:    68 4e             	[r7 + 24] = r0			  ## analog.c:3158:9
 1e18da4:    a0 70             	r0 = 10			  ## analog.c:3170:9
 1e18da6:    8f f3 57 5f       	call 2014894 <delay : 4c58 >			  ## analog.c:3170:9
 1e18daa:    80 f6 00 32       	r0 = [r3+r2]			  ## analog.c:3171:25
 1e18dae:    68 4e             	[r7 + 24] = r0			  ## analog.c:3171:23
 1e18db0:    a0 70             	r0 = 10			  ## analog.c:3172:9
 1e18db2:    8f f3 51 5f       	call 2014882 <delay : 4c58 >			  ## analog.c:3172:9
 1e18db6:    43 80             	r3 += 4			  ## analog.c:3156:19
 1e18db8:    c3 e2 ed 1f       	if (r3 != 44) goto -38 <.GJTIE830_1_1_+0xF4A : 1e18d96 >			  ## analog.c:3156:5
 1e18dbc:    00 6a             	r0 = b[r5 + 0] (u)			  ## analog.c:2981:16
 1e18dbe:    01 70             	r1 = 0			  ## analog.c:2981:5
 1e18dc0:    bf f3 39 ef       	call -8590 <btagc_init : 1e16c36 >			  ## analog.c:2981:5
 1e18dc4:    15 f4 10 fa       	[r15 + 84] |= 4096			  ## analog.c:2988:23
 1e18dc8:    00 f6 54 f0       	r0 = [r15 + 84]			  ## analog.c:2989:23
 1e18dcc:    f0 b5             	r0 &= 4294965247			  ## analog.c:2989:23
 1e18dce:    10 f6 54 f0       	[r15 + 84] = r0			  ## analog.c:2989:23
 1e18dd2:    00 f6 54 f0       	r0 = [r15 + 84]			  ## analog.c:2990:23
 1e18dd6:    f0 b6             	r0 &= 4294959103			  ## analog.c:2990:23
 1e18dd8:    10 f6 54 f0       	[r15 + 84] = r0			  ## analog.c:2990:23
 1e18ddc:    70 fc 68 ff       	r0 = r7 + -152			  ## analog.c:2990:23
 1e18de0:    01 08             	r1 = r0			  ## analog.c:2990:23
 1e18de2:    40 43             	r0 = [r1 + 80]			  ## analog.c:2992:16
 1e18de4:    70 b3             	r0 &= 4294967231			  ## analog.c:2992:16
 1e18de6:    48 43             	[r1 + 80] = r0			  ## analog.c:2992:16
 1e18de8:    1f f4 40 19       	[r1 + 124] |= 64			  ## RF.c:361:5
 1e18dec:    00 f9 0d c0       	r0 = b[r12 + 13] (u)			  ## RF.c:447:12
 1e18df0:    0b 20             	if (r0 == 0) goto 22 <.GJTIE830_1_1_+0xFBC : 1e18e08 >			  ## RF.c:447:12
 1e18df2:    00 f4 08 d9       	[r13 + 0] |= 8			  ## RF.c:385:5
 1e18df6:    00 f4 10 d9       	[r13 + 0] |= 16			  ## RF.c:386:5
 1e18dfa:    f0 fc 08 39       	r0 = r15 + 14600			  ## RF.c:386:5
 1e18dfe:    01 40             	r1 = [r0 + 0]			  ## RF.c:387:19
 1e18e00:    02 fb 7f fe       	r2 = -385 <bank_code_load_addr+0x1DC887 : 1fffe7f >			  ## RF.c:387:19
 1e18e04:    51 b5             	r1 &= r2			  ## RF.c:387:19
 1e18e06:    09 40             	[r0 + 0] = r1			  ## RF.c:387:19
 1e18e08:    10 70             	r0 = 1			  ## RF.c:450:14
 1e18e0a:    10 f9 09 c0       	b[r12 + 9] = r0			  ## RF.c:450:14
 1e18e0e:    9c 0a             	sp += 312			  ## RF.c:450:14
 1e18e10:    5f 01             	{pc, r15-r4} = [sp++]			  ## RF.c:451:1


bt_rf_close:
 1e18e12:    34 00             	[--sp] = rets			  ## RF.c:455:0
 1e18e14:    c0 ff e8 09 00 00 	r0 = 2536 <system_data_end : 9e8 >			  ## RF.c:455:0
 1e18e1a:    91 60             	r1 = b[r0 + 9] (u)			  ## RF.c:456:12
 1e18e1c:    1b 22             	if (r1 == 0) goto 54 <bt_rf_close+0x42 : 1e18e54 >			  ## RF.c:456:12
 1e18e1e:    01 70             	r1 = 0
 1e18e20:    99 60             	b[r0 + 9] = r1			  ## RF.c:459:14
 1e18e22:    c2 ff 00 21 1f 00 	r2 = 2040064 <uECC_vli_cmp_unsafe+0xEB104 : 1f2100 >			  ## RF.c:459:14
 1e18e28:    00 44             	r0 = [r2 + 0]			  ## RF.c:460:5
 1e18e2a:    30 fd 1f 09       	r0 = r0 & 4294967264			  ## RF.c:460:5
 1e18e2e:    08 44             	[r2 + 0] = r0			  ## RF.c:460:5
 1e18e30:    00 fb e8 03       	r0 = 1000 <BTCTLER_LE_RAM_TOTAL+0xA : 3e8 >			  ## RF.c:461:5
 1e18e34:    8f f3 10 5f       	call 2014752 <delay : 4c58 >			  ## RF.c:461:5
 1e18e38:    09 44             	[r2 + 0] = r1			  ## RF.c:462:17
 1e18e3a:    00 fb e8 03       	r0 = 1000 <BTCTLER_LE_RAM_TOTAL+0xA : 3e8 >			  ## RF.c:463:5
 1e18e3e:    8f f3 0b 5f       	call 2014742 <delay : 4c58 >			  ## RF.c:463:5
 1e18e42:    c0 ff 10 00 1e 00 	r0 = 1966096 <uECC_vli_cmp_unsafe+0xD9014 : 1e0010 >			  ## RF.c:464:5
 1e18e48:    00 f4 c0 0a       	[r0 + 0] |= 49152			  ## RF.c:464:5
 1e18e4c:    00 fb e8 03       	r0 = 1000 <BTCTLER_LE_RAM_TOTAL+0xA : 3e8 >			  ## RF.c:465:5
 1e18e50:    8f f3 02 5f       	call 2014724 <delay : 4c58 >			  ## RF.c:465:5
 1e18e54:    30 00             	pc = [sp++]			  ## RF.c:468:1


get_bt_osc_offset_flag:
 1e18e56:    34 00             	[--sp] = rets			  ## analog.c:114:0
 1e18e58:    e0 76             	r0 = 110			  ## analog.c:115:9
 1e18e5a:    bf f3 2f c6       	call -29602 <btif_eara_check_id : 1e11abc >			  ## analog.c:115:9
 1e18e5e:    01 70             	r1 = 0			  ## analog.c:115:9
 1e18e60:    04 20             	if (r0 == 0) goto 8 <get_bt_osc_offset_flag+0x14 : 1e18e6a >			  ## analog.c:115:9
 1e18e62:    c0 ff e8 09 00 00 	r0 = 2536 <system_data_end : 9e8 >			  ## analog.c:117:19
 1e18e68:    c1 60             	r1 = b[r0 + 12] (u)			  ## analog.c:117:19
 1e18e6a:    40 04             	r0 = r1.b0 (u)			  ## analog.c:122:1
 1e18e6c:    30 00             	pc = [sp++]			  ## analog.c:122:1


bt_osc_offset_set:
 1e18e6e:    c1 ff e8 09 00 00 	r1 = 2536 <system_data_end : 9e8 >			  ## analog.c:125:0
 1e18e74:    c2 62             	r2 = b[r1 + 12] (u)			  ## analog.c:126:12
 1e18e76:    03 34             	if (r2 != 0) goto 6 <bt_osc_offset_set+0x10 : 1e18e7e >			  ## analog.c:126:12
 1e18e78:    52 52             	r2 = h[r1 + 10] (u)			  ## analog.c:130:9
 1e18e7a:    20 09             	r0 += r2			  ## analog.c:130:9
 1e18e7c:    58 52             	h[r1 + 10] = r0
 1e18e7e:    20 00             	rts			  ## analog.c:137:1


bt_osc_offset_save:
 1e18e80:    74 01             	[--sp] = {rets, r4}			  ## analog.c:193:0
 1e18e82:    fc 0b             	sp += -8			  ## analog.c:193:0
 1e18e84:    c0 ff e8 09 00 00 	r0 = 2536 <system_data_end : 9e8 >			  ## analog.c:193:0
 1e18e8a:    c1 60             	r1 = b[r0 + 12] (u)			  ## analog.c:196:12
 1e18e8c:    13 32             	if (r1 != 0) goto 38 <bt_osc_offset_save+0x34 : 1e18eb4 >			  ## analog.c:196:12
 1e18e8e:    21 f7 0a 00       	r1 = h[r0 + 10] (s)			  ## analog.c:200:18
 1e18e92:    04 a0             	r4 = sp + 0			  ## analog.c:200:18
 1e18e94:    00 fd 02 49       	r0 = r4 | 2			  ## analog.c:200:9
 1e18e98:    0a d4             	r2 = r1 >> 16			  ## analog.c:200:16
 1e18e9a:    1a 50             	h[r0 + 2] = r2			  ## analog.c:200:16
 1e18e9c:    91 f5 02 00       	h[sp+2] = r1			  ## analog.c:200:16
 1e18ea0:    41 70             	r1 = 4			  ## analog.c:201:15
 1e18ea2:    bf f3 82 42       	call -97020 <CRC16 : 1e013aa >			  ## analog.c:201:15
 1e18ea6:    90 f5 00 00       	h[sp] = r0			  ## analog.c:201:13
 1e18eaa:    e0 76             	r0 = 110			  ## analog.c:206:5
 1e18eac:    62 70             	r2 = 6			  ## analog.c:206:5
 1e18eae:    41 08             	r1 = r4			  ## analog.c:206:5
 1e18eb0:    bf f3 ca c3       	call -30828 <syscfg_write : 1e11648 >			  ## analog.c:206:5
 1e18eb4:    04 0a             	sp += 8
 1e18eb6:    54 01             	{pc, r4} = [sp++]			  ## analog.c:208:1


bt_fre_offset_get:
 1e18eb8:    c0 ff e8 09 00 00 	r0 = 2536 <system_data_end : 9e8 >			  ## analog.c:187:0
 1e18ebe:    20 f7 0a 00       	r0 = h[r0 + 10] (s)			  ## analog.c:188:12
 1e18ec2:    20 00             	rts			  ## analog.c:188:5


bt_get_fine_cnt:
 1e18ec4:    76 01             	[--sp] = {rets, r6-r4}			  ## RF.c:498:0
 1e18ec6:    c1 ff 00 50 00 00 	r1 = 20480 <nvbss_begin : 5000 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1740:23
 1e18ecc:    01 f9 47 10       	r1 = b[r1 + 71] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1740:23
 1e18ed0:    04 08             	r4 = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1740:23
 1e18ed2:    00 70             	r0 = 0
 1e18ed4:    37 32             	if (r1 != 0) goto 110 <bt_get_fine_cnt+0x80 : 1e18f44 >
 1e18ed6:    c6 ff b0 20 00 00 	r6 = 8368 <gatt_client_conn_handle : 20b0 >
 1e18edc:    01 f9 9c 60       	r1 = b[r6 + 156] (u)
 1e18ee0:    31 22             	if (r1 == 0) goto 98 <bt_get_fine_cnt+0x80 : 1e18f44 >
 1e18ee2:    05 f6 a0 60       	r5 = [r6 + 160]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:272:25
 1e18ee6:    01 70             	r1 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:275:33
 1e18ee8:    03 70             	r3 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:275:33
 1e18eea:    50 08             	r0 = r5			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:275:33
 1e18eec:    42 08             	r2 = r4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:275:33
 1e18eee:    bf f3 13 75       	call -71130 <__muldi3 : 1e07918 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:275:33
 1e18ef2:    c2 ff 00 48 e8 01 	r2 = 32000000 <bank_code_load_addr+0x61208 : 1e84800 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:275:68
 1e18ef8:    03 70             	r3 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:275:68
 1e18efa:    bf f3 2c 75       	call -71080 <__udivdi3 : 1e07956 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:275:68
 1e18efe:    01 f6 a8 60       	r1 = [r6 + 168]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:269:26
 1e18f02:    c2 ff 00 ca 9a 3b 	r2 = 1000000000 <uECC_vli_cmp_unsafe+0x18A5A04 : 19aca00 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:280:39
 1e18f08:    c0 fe 50 32       	r3 = r2 / r5 (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:280:64
 1e18f0c:    c0 fe 10 12       	r1 = r2 / r1 (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:280:39
 1e18f10:    e1 b2             	r1 = r1 - r3			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:280:49
 1e18f12:    40 0e             	r0 = r0 * r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:283:34
 1e18f14:    01 fb e8 03       	r1 = 1000 <BTCTLER_LE_RAM_TOTAL+0xA : 3e8 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:283:48
 1e18f18:    e0 fe 10 00       	r0 = r0 / r1 (s)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:283:48
 1e18f1c:    bf f3 a2 74       	call -71356 <__floatsisf : 1e07864 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:285:11
 1e18f20:    05 08             	r5 = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:285:11
 1e18f22:    00 fb d4 30       	r0 = 12500 <fw_flash_bin_head+0x160 : 30d4 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:285:22
 1e18f26:    c0 fe 00 04       	r0 = r4 / r0 (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:285:22
 1e18f2a:    bf f3 cb 74       	call -71274 <__floatunsisf : 1e078c4 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:285:14
 1e18f2e:    c1 ff 00 00 20 c0 	r1 = 3223322624 <uECC_vli_cmp_unsafe+0xF9004 : 200000 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:285:31
 1e18f34:    bf f3 bb 73       	call -71818 <__addsf3 : 1e076ae >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:285:31
 1e18f38:    01 08             	r1 = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:285:31
 1e18f3a:    50 08             	r0 = r5			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:285:11
 1e18f3c:    bf f3 07 75       	call -71154 <__subsf3 : 1e0794e >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:285:11
 1e18f40:    bf f3 6a 74       	call -71468 <__fixsfsi : 1e07818 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:285:11
 1e18f44:    c1 ff 6c fc 1c 00 	r1 = 1899628 <uECC_vli_cmp_unsafe+0xC8C70 : 1cfc6c >			  ## RF.c:505:19
 1e18f4a:    01 42             	r1 = [r1 + 0]			  ## RF.c:505:19
 1e18f4c:    40 09             	r0 += r4			  ## RF.c:505:61
 1e18f4e:    02 fb ff 07       	r2 = 2047 <DRIVER_CODE_TOTAL+0x79 : 7ff >			  ## RF.c:505:32
 1e18f52:    51 b5             	r1 &= r2			  ## RF.c:505:32
 1e18f54:    c2 70             	r2 = 12			  ## RF.c:505:41
 1e18f56:    c0 fe 20 11       	r1 = r1 / r2 (u)			  ## RF.c:505:41
 1e18f5a:    10 09             	r0 += r1			  ## RF.c:505:14
 1e18f5c:    56 01             	{pc, r6-r4} = [sp++]			  ## RF.c:507:5
 1e18f5e:    00 00             	nop


hci_transport_controller:
 1e18f60:    f8 58             	h[r4 + 30] = r0
 1e18f62:    e1 01             	[--sp] = {psr, reti}
 1e18f64:    4c 93             	r12 = r1 + 20
 1e18f66:    e1 01             	[--sp] = {psr, reti}
 1e18f68:    4e 93             	r14 = r1 + 20
 1e18f6a:    e1 01             	[--sp] = {psr, reti}
 1e18f6c:    52 93             	r2 = r1 + 21
 1e18f6e:    e1 01             	[--sp] = {psr, reti}
 1e18f70:    56 93             	r6 = r1 + 21
 1e18f72:    e1 01             	[--sp] = {psr, reti}
 1e18f74:    60 93             	r0 = r1 + 22
 1e18f76:    e1 01             	[--sp] = {psr, reti}
 1e18f78:    64 93             	r4 = r1 + 22
 1e18f7a:    e1 01             	[--sp] = {psr, reti}
 1e18f7c:    00 00             	nop
 1e18f7e:    00 00             	nop
 1e18f80:    00 00             	nop
 1e18f82:    00 00             	nop
 1e18f84:    00 00             	nop
 1e18f86:    00 00             	nop


btctrler_testbox_update_msg_handle_register:
 1e18f88:    c0 ff e8 0d 00 00 	r0 = 3560 <bt_testbox_update_msg_handle : de8 >			  ## btctrler_task.c:83:0
 1e18f8e:    c1 ff b0 17 e0 01 	r1 = 31463344 <testbox_update_msg_handle : 1e017b0 >			  ## btctrler_task.c:84:34
 1e18f94:    09 40             	[r0 + 0] = r1			  ## btctrler_task.c:84:34
 1e18f96:    20 00             	rts			  ## btctrler_task.c:85:1


btctrler_hci_cmd_to_task:
 1e18f98:    62 01             	[--sp] = {r3, r2}			  ## btctrler_task.c:251:0
 1e18f9a:    76 01             	[--sp] = {rets, r6-r4}			  ## btctrler_task.c:251:0
 1e18f9c:    de 0b             	sp += -68			  ## btctrler_task.c:251:0
 1e18f9e:    14 08             	r4 = r1			  ## btctrler_task.c:251:0
 1e18fa0:    05 08             	r5 = r0			  ## btctrler_task.c:251:0
 1e18fa2:    04 e1 02 30       	if (r4 < 16) goto 4 <btctrler_hci_cmd_to_task+0x12 : 1e18faa >			  ## btctrler_task.c:251:0
 1e18fa6:    8f f3 1b 52       	call 2008118 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e18faa:    40 a5             	r0 = sp + 84
 1e18fac:    08 02             	[sp] = r0			  ## btctrler_task.c:259:5
 1e18fae:    14 e0 0a b0       	ifs (r4 < 1) goto 20 <btctrler_hci_cmd_to_task+0x2E : 1e18fc6 >			  ## btctrler_task.c:259:5
 1e18fb2:    40 a0             	r0 = sp + 4
 1e18fb4:    41 08             	r1 = r4
 1e18fb6:    02 02             	r2 = [sp]			  ## btctrler_task.c:261:19
 1e18fb8:    43 94             	r3 = r2 + 4			  ## btctrler_task.c:261:19
 1e18fba:    0b 02             	[sp] = r3			  ## btctrler_task.c:261:19
 1e18fbc:    02 44             	r2 = [r2 + 0]			  ## btctrler_task.c:261:19
 1e18fbe:    52 f6 04 00       	[r0 ++= 4] = r2			  ## btctrler_task.c:261:17
 1e18fc2:    51 f3 f8 ff       	if (--r1 != 0) goto -16 <btctrler_hci_cmd_to_task+0x1E : 1e18fb6 >			  ## btctrler_task.c:261:17
 1e18fc6:    c6 ff ef 58 e1 01 	r6 = 31545583 <update_target_end+0x2A67 : 1e158ef >
 1e18fcc:    0f 18             	goto 30 <btctrler_hci_cmd_to_task+0x54 : 1e18fec >
 1e18fce:    28 fb 00 0b       	r0 = icfg			  ## cpu.h:72:5
 1e18fd2:    61 ff ff 09 12 00 	if ((r0 & 255) != 0) goto 36 <btctrler_hci_cmd_to_task+0x64 : 1e18ffc >
 1e18fd8:    28 fb 00 0b       	r0 = icfg			  ## cpu.h:79:5
 1e18fdc:    20 fd 03 0a       	r0 = r0 & 768			  ## cpu.h:80:18
 1e18fe0:    01 ff 00 03 0b 00 	if (r0 != 768) goto 22 <btctrler_hci_cmd_to_task+0x64 : 1e18ffc >
 1e18fe6:    20 70             	r0 = 2			  ## btctrler_task.c:276:9
 1e18fe8:    97 f3 e6 6e       	call 3071436 <os_time_dly : 106db8 >			  ## btctrler_task.c:276:9
 1e18fec:    43 a0             	r3 = sp + 4
 1e18fee:    60 08             	r0 = r6
 1e18ff0:    51 08             	r1 = r5
 1e18ff2:    42 08             	r2 = r4
 1e18ff4:    97 f3 f4 6e       	call 3071464 <os_taskq_post_type : 106de0 >
 1e18ff8:    50 e1 e9 0f       	if (r0 == 21) goto -46 <btctrler_hci_cmd_to_task+0x36 : 1e18fce >
 1e18ffc:    22 0a             	sp += 68
 1e18ffe:    16 01             	{rets, r6-r4} = [sp++]
 1e19000:    04 0a             	sp += 8
 1e19002:    20 00             	rts


btctrler_task_exit:
 1e19004:    74 01             	[--sp] = {rets, r4}			  ## btctrler_task.c:466:0
 1e19006:    fe 0b             	sp += -4			  ## btctrler_task.c:466:0
 1e19008:    00 75             	r0 = 80			  ## btctrler_task.c:475:19
 1e1900a:    bf f3 d4 b4       	call -38488 <malloc : 1e0f9b6 >			  ## btctrler_task.c:475:19
 1e1900e:    02 08             	r2 = r0			  ## btctrler_task.c:475:19
 1e19010:    0a 02             	[sp] = r2			  ## btctrler_task.c:475:13
 1e19012:    02 34             	if (r2 != 0) goto 4 <btctrler_task_exit+0x14 : 1e19018 >			  ## btctrler_task.c:475:13
 1e19014:    8f f3 e4 51       	call 2008008 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e19018:    01 70             	r1 = 0			  ## btctrler_task.c:478:5
 1e1901a:    20 08             	r0 = r2			  ## btctrler_task.c:478:5
 1e1901c:    97 f3 f0 6e       	call 3071456 <os_sem_create : 106e00 >			  ## btctrler_task.c:478:5
 1e19020:    80 f3 82 2d       	call 23300 <bredr_link_check_used : 1e1eb28 >			  ## btctrler_task.c:480:12
 1e19024:    0a 20             	if (r0 == 0) goto 20 <btctrler_task_exit+0x36 : 1e1903a >			  ## btctrler_task.c:480:12
 1e19026:    14 70             	r4 = 1
 1e19028:    30 70             	r0 = 3			  ## btctrler_task.c:481:9
 1e1902a:    97 f3 c5 6e       	call 3071370 <os_time_dly : 106db8 >			  ## btctrler_task.c:481:9
 1e1902e:    80 f3 7b 2d       	call 23286 <bredr_link_check_used : 1e1eb28 >			  ## btctrler_task.c:480:12
 1e19032:    34 e6 02 c0       	ifs (r4 > 99) goto 4 <btctrler_task_exit+0x36 : 1e1903a >			  ## btctrler_task.c:480:12
 1e19036:    14 80             	r4 += 1			  ## btctrler_task.c:480:36
 1e19038:    f7 31             	if (r0 != 0) goto -18 <btctrler_task_exit+0x24 : 1e19028 >			  ## btctrler_task.c:480:36
 1e1903a:    c0 ff 02 00 40 00 	r0 = 4194306 <uECC_vli_cmp_unsafe+0x2F9006 : 400002 >			  ## btctrler_task.c:484:5
 1e19040:    11 70             	r1 = 1			  ## btctrler_task.c:484:5
 1e19042:    02 fb 03 0c       	r2 = 3075 <BTCTLER_CL_CODE_TOTAL+0xE1 : c03 >			  ## btctrler_task.c:484:5
 1e19046:    14 70             	r4 = 1			  ## btctrler_task.c:484:5
 1e19048:    a7 17             	call -178 <btctrler_hci_cmd_to_task : 1e18f98 >			  ## btctrler_task.c:484:5
 1e1904a:    80 f3 52 2b       	call 22180 <lmp_get_conn_num : 1e1e6f2 >			  ## btctrler_task.c:487:12
 1e1904e:    09 20             	if (r0 == 0) goto 18 <btctrler_task_exit+0x5E : 1e19062 >			  ## btctrler_task.c:487:12
 1e19050:    30 70             	r0 = 3			  ## btctrler_task.c:488:9
 1e19052:    97 f3 b1 6e       	call 3071330 <os_time_dly : 106db8 >			  ## btctrler_task.c:488:9
 1e19056:    80 f3 4c 2b       	call 22168 <lmp_get_conn_num : 1e1e6f2 >			  ## btctrler_task.c:487:12
 1e1905a:    34 e6 02 c0       	ifs (r4 > 99) goto 4 <btctrler_task_exit+0x5E : 1e19062 >			  ## btctrler_task.c:487:12
 1e1905e:    14 80             	r4 += 1			  ## btctrler_task.c:487:31
 1e19060:    f7 31             	if (r0 != 0) goto -18 <btctrler_task_exit+0x4C : 1e19050 >			  ## btctrler_task.c:487:31
 1e19062:    c4 ff ef 58 e1 01 	r4 = 31545583 <update_target_end+0x2A67 : 1e158ef >			  ## btctrler_task.c:491:5
 1e19068:    c1 ff 0d 00 40 00 	r1 = 4194317 <uECC_vli_cmp_unsafe+0x2F9011 : 40000d >			  ## btctrler_task.c:491:5
 1e1906e:    03 a0             	r3 = sp + 0			  ## btctrler_task.c:491:5
 1e19070:    12 70             	r2 = 1			  ## btctrler_task.c:491:5
 1e19072:    40 08             	r0 = r4			  ## btctrler_task.c:491:5
 1e19074:    97 f3 b4 6e       	call 3071336 <os_taskq_post_type : 106de0 >			  ## btctrler_task.c:491:5
 1e19078:    00 02             	r0 = [sp]			  ## btctrler_task.c:493:17
 1e1907a:    01 70             	r1 = 0			  ## btctrler_task.c:493:5
 1e1907c:    97 f3 c4 6e       	call 3071368 <os_sem_pend : 106e08 >			  ## btctrler_task.c:493:5
 1e19080:    00 02             	r0 = [sp]			  ## btctrler_task.c:494:10
 1e19082:    bf f3 c3 b4       	call -38522 <free : 1e0fa0c >			  ## btctrler_task.c:494:5
 1e19086:    40 08             	r0 = r4			  ## btctrler_task.c:496:5
 1e19088:    bf f3 d4 be       	call -33368 <task_kill : 1e10e34 >			  ## btctrler_task.c:496:5
 1e1908c:    02 0a             	sp += 4			  ## btctrler_task.c:496:5
 1e1908e:    54 01             	{pc, r4} = [sp++]			  ## btctrler_task.c:496:5


btctrler_task_init:
 1e19090:    c0 ff 48 2a 00 00 	r0 = 10824 <h4_transport : 2a48 >			  ## btctrler_task.c:446:0
 1e19096:    c1 ff 60 8f e1 01 	r1 = 31559520 <hci_transport_controller : 1e18f60 >			  ## btctrler_task.c:454:20
 1e1909c:    09 40             	[r0 + 0] = r1			  ## btctrler_task.c:454:20
 1e1909e:    c0 ff ac 92 e1 01 	r0 = 31560364 <btctrler_task : 1e192ac >			  ## btctrler_task.c:458:5
 1e190a4:    c2 ff ef 58 e1 01 	r2 = 31545583 <update_target_end+0x2A67 : 1e158ef >			  ## btctrler_task.c:458:5
 1e190aa:    01 70             	r1 = 0			  ## btctrler_task.c:458:5
 1e190ac:    ff f3 9f be       	goto -33474 <task_create : 1e10dee >			  ## btctrler_task.c:458:5


btctrler_task_ready:
 1e190b0:    74 01             	[--sp] = {rets, r4}			  ## btctrler_task.c:324:0
 1e190b2:    fe 0b             	sp += -4			  ## btctrler_task.c:324:0
 1e190b4:    00 75             	r0 = 80			  ## btctrler_task.c:327:19
 1e190b6:    bf f3 7e b4       	call -38660 <malloc : 1e0f9b6 >			  ## btctrler_task.c:327:19
 1e190ba:    02 08             	r2 = r0			  ## btctrler_task.c:327:19
 1e190bc:    0a 02             	[sp] = r2			  ## btctrler_task.c:327:13
 1e190be:    02 34             	if (r2 != 0) goto 4 <btctrler_task_ready+0x14 : 1e190c4 >			  ## btctrler_task.c:327:13
 1e190c0:    8f f3 8e 51       	call 2007836 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e190c4:    01 70             	r1 = 0			  ## btctrler_task.c:330:5
 1e190c6:    20 08             	r0 = r2			  ## btctrler_task.c:330:5
 1e190c8:    97 f3 9a 6e       	call 3071284 <os_sem_create : 106e00 >			  ## btctrler_task.c:330:5
 1e190cc:    c0 ff ef 58 e1 01 	r0 = 31545583 <update_target_end+0x2A67 : 1e158ef >			  ## btctrler_task.c:332:11
 1e190d2:    c1 ff 0c 00 40 00 	r1 = 4194316 <uECC_vli_cmp_unsafe+0x2F9010 : 40000c >			  ## btctrler_task.c:332:11
 1e190d8:    03 a0             	r3 = sp + 0			  ## btctrler_task.c:332:11
 1e190da:    12 70             	r2 = 1			  ## btctrler_task.c:332:11
 1e190dc:    14 70             	r4 = 1			  ## btctrler_task.c:332:11
 1e190de:    97 f3 7f 6e       	call 3071230 <os_taskq_post_type : 106de0 >			  ## btctrler_task.c:332:11
 1e190e2:    02 02             	r2 = [sp]			  ## btctrler_task.c:332:11
 1e190e4:    05 20             	if (r0 == 0) goto 10 <btctrler_task_ready+0x40 : 1e190f0 >
 1e190e6:    20 08             	r0 = r2			  ## btctrler_task.c:338:5
 1e190e8:    bf f3 90 b4       	call -38624 <free : 1e0fa0c >			  ## btctrler_task.c:338:5
 1e190ec:    04 70             	r4 = 0
 1e190ee:    07 18             	goto 14 <btctrler_task_ready+0x4E : 1e190fe >
 1e190f0:    01 70             	r1 = 0			  ## btctrler_task.c:334:9
 1e190f2:    20 08             	r0 = r2			  ## btctrler_task.c:334:9
 1e190f4:    97 f3 88 6e       	call 3071248 <os_sem_pend : 106e08 >			  ## btctrler_task.c:334:9
 1e190f8:    00 02             	r0 = [sp]			  ## btctrler_task.c:335:14
 1e190fa:    bf f3 87 b4       	call -38642 <free : 1e0fa0c >			  ## btctrler_task.c:335:9
 1e190fe:    40 08             	r0 = r4			  ## btctrler_task.c:340:1
 1e19100:    02 0a             	sp += 4			  ## btctrler_task.c:340:1
 1e19102:    54 01             	{pc, r4} = [sp++]			  ## btctrler_task.c:340:1


lmp_hci_cmd_to_conn_for_handle:
 1e19104:    cf f3 6c 51       	goto 2007768 <p33_soft_reset : 33e0 >			  ## btctrler_task.c:218:0


bredr_link_event:
 1e19108:    62 01             	[--sp] = {r3, r2}			  ## btctrler_task.c:315:0
 1e1910a:    77 01             	[--sp] = {rets, r7-r4}			  ## btctrler_task.c:315:0
 1e1910c:    f4 0b             	sp += -24			  ## btctrler_task.c:315:0
 1e1910e:    c2 a2             	r2 = sp + 44			  ## btctrler_task.c:315:0
 1e19110:    0a 02             	[sp] = r2			  ## btctrler_task.c:318:5
 1e19112:    5a 02             	[sp+20] = r2
 1e19114:    18 02             	[sp+4] = r0			  ## btctrler_task.c:287:13
 1e19116:    14 92             	r4 = r1 + 1
 1e19118:    11 e0 0a b0       	ifs (r1 < 1) goto 20 <bredr_link_event+0x28 : 1e19130 >
 1e1911c:    40 a0             	r0 = sp + 4
 1e1911e:    40 80             	r0 += 4			  ## btctrler_task.c:290:19
 1e19120:    52 02             	r2 = [sp+20]			  ## btctrler_task.c:290:19
 1e19122:    43 94             	r3 = r2 + 4			  ## btctrler_task.c:290:19
 1e19124:    5b 02             	[sp+20] = r3			  ## btctrler_task.c:290:19
 1e19126:    02 44             	r2 = [r2 + 0]			  ## btctrler_task.c:290:19
 1e19128:    52 f6 04 00       	[r0 ++= 4] = r2			  ## btctrler_task.c:290:17
 1e1912c:    51 f3 f8 ff       	if (--r1 != 0) goto -16 <bredr_link_event+0x18 : 1e19120 >			  ## btctrler_task.c:290:17
 1e19130:    c5 ff ef 58 e1 01 	r5 = 31545583 <update_target_end+0x2A67 : 1e158ef >
 1e19136:    c1 ff 01 00 40 00 	r1 = 4194305 <uECC_vli_cmp_unsafe+0x2F9005 : 400001 >			  ## btctrler_task.c:295:15
 1e1913c:    43 a0             	r3 = sp + 4			  ## btctrler_task.c:295:15
 1e1913e:    50 08             	r0 = r5			  ## btctrler_task.c:295:15
 1e19140:    42 08             	r2 = r4			  ## btctrler_task.c:295:15
 1e19142:    97 f3 4d 6e       	call 3071130 <os_taskq_post_type : 106de0 >			  ## btctrler_task.c:295:15
 1e19146:    07 08             	r7 = r0			  ## btctrler_task.c:295:15
 1e19148:    57 e1 22 10       	if (r7 != 21) goto 68 <bredr_link_event+0x88 : 1e19190 >
 1e1914c:    c6 ff 01 00 40 00 	r6 = 4194305 <uECC_vli_cmp_unsafe+0x2F9005 : 400001 >
 1e19152:    28 fb 00 0b       	r0 = icfg			  ## cpu.h:72:5
 1e19156:    57 71             	r7 = 21
 1e19158:    61 ff ff 09 19 00 	if ((r0 & 255) != 0) goto 50 <bredr_link_event+0x88 : 1e19190 >
 1e1915e:    28 fb 00 0b       	r0 = icfg			  ## cpu.h:79:5
 1e19162:    20 fd 03 0a       	r0 = r0 & 768			  ## cpu.h:80:18
 1e19166:    01 ff 00 03 12 00 	if (r0 != 768) goto 36 <bredr_link_event+0x88 : 1e19190 >
 1e1916c:    8f f3 5c 50       	call 2007224 <os_current_task : 3228 >			  ## btctrler_task.c:303:21
 1e19170:    51 08             	r1 = r5			  ## btctrler_task.c:303:14
 1e19172:    97 f3 bf 6e       	call 3071358 <strcmp : 106ef4 >			  ## btctrler_task.c:303:14
 1e19176:    0c 20             	if (r0 == 0) goto 24 <bredr_link_event+0x88 : 1e19190 >			  ## btctrler_task.c:303:14
 1e19178:    20 70             	r0 = 2			  ## btctrler_task.c:308:9
 1e1917a:    97 f3 1d 6e       	call 3071034 <os_time_dly : 106db8 >			  ## btctrler_task.c:308:9
 1e1917e:    43 a0             	r3 = sp + 4			  ## btctrler_task.c:308:9
 1e19180:    50 08             	r0 = r5			  ## btctrler_task.c:295:15
 1e19182:    61 08             	r1 = r6			  ## btctrler_task.c:295:15
 1e19184:    42 08             	r2 = r4			  ## btctrler_task.c:295:15
 1e19186:    97 f3 2b 6e       	call 3071062 <os_taskq_post_type : 106de0 >			  ## btctrler_task.c:295:15
 1e1918a:    07 08             	r7 = r0			  ## btctrler_task.c:295:15
 1e1918c:    57 e1 e1 0f       	if (r7 == 21) goto -62 <bredr_link_event+0x4A : 1e19152 >
 1e19190:    70 08             	r0 = r7			  ## btctrler_task.c:320:5
 1e19192:    0c 0a             	sp += 24			  ## btctrler_task.c:320:5
 1e19194:    17 01             	{rets, r7-r4} = [sp++]			  ## btctrler_task.c:320:5
 1e19196:    04 0a             	sp += 8			  ## btctrler_task.c:320:5
 1e19198:    20 00             	rts			  ## btctrler_task.c:320:5


lmp_hci_cmd_to_conn_for_addr:
 1e1919a:    cf f3 21 51       	goto 2007618 <p33_soft_reset : 33e0 >			  ## btctrler_task.c:201:0


le_hci_send_acl_packet:
 1e1919e:    c2 ff 4c 2a 00 00 	r2 = 10828 <__h4_send_packet : 2a4c >			  ## hci_controller.c:348:0
 1e191a4:    03 44             	r3 = [r2 + 0]			  ## hci_controller.c:351:5
 1e191a6:    12 08             	r2 = r1			  ## hci_controller.c:351:5
 1e191a8:    01 08             	r1 = r0			  ## hci_controller.c:351:5
 1e191aa:    20 70             	r0 = 2			  ## hci_controller.c:351:5
 1e191ac:    93 00             	goto r3			  ## hci_controller.c:351:5


set_bt_version:
 1e191ae:    c0 ff 04 0e 00 00 	r0 = 3588 <hci_param : e04 >			  ## device_manager.c:151:0
 1e191b4:    c1 70             	r1 = 12			  ## device_manager.c:153:31
 1e191b6:    89 60             	b[r0 + 8] = r1			  ## device_manager.c:152:27
 1e191b8:    c9 60             	b[r0 + 12] = r1			  ## device_manager.c:153:31
 1e191ba:    20 00             	rts			  ## device_manager.c:154:1


hci_controller_init:
 1e191bc:    74 01             	[--sp] = {rets, r4}			  ## hci_controller.c:852:0
 1e191be:    bf f3 52 f3       	call -6492 <bt_rf_init : 1e17866 >			  ## hci_controller.c:858:5
 1e191c2:    c4 ff 48 2a 00 00 	r4 = 10824 <h4_transport : 2a48 >			  ## hci_controller.c:858:5
 1e191c8:    00 48             	r0 = [r4 + 0]			  ## hci_controller.c:826:9
 1e191ca:    c1 ff ec 0d 00 00 	r1 = 3564 <bt_task_thread : dec >			  ## list.h:189:16
 1e191d0:    09 42             	[r1 + 0] = r1			  ## list.h:188:16
 1e191d2:    19 42             	[r1 + 4] = r1			  ## list.h:189:16
 1e191d4:    0f 20             	if (r0 == 0) goto 30 <hci_controller_init+0x38 : 1e191f4 >			  ## list.h:189:16
 1e191d6:    11 40             	r1 = [r0 + 4]			  ## hci_controller.c:830:23
 1e191d8:    03 22             	if (r1 == 0) goto 6 <hci_controller_init+0x24 : 1e191e0 >			  ## hci_controller.c:830:23
 1e191da:    00 70             	r0 = 0			  ## hci_controller.c:831:9
 1e191dc:    81 00             	call r1			  ## hci_controller.c:831:9
 1e191de:    00 48             	r0 = [r4 + 0]			  ## hci_controller.c:831:9
 1e191e0:    21 40             	r1 = [r0 + 8]			  ## hci_controller.c:834:23
 1e191e2:    02 22             	if (r1 == 0) goto 4 <hci_controller_init+0x2C : 1e191e8 >			  ## hci_controller.c:834:23
 1e191e4:    81 00             	call r1			  ## hci_controller.c:835:9
 1e191e6:    00 48             	r0 = [r4 + 0]			  ## hci_controller.c:835:9
 1e191e8:    41 40             	r1 = [r0 + 16]			  ## hci_controller.c:838:23
 1e191ea:    04 22             	if (r1 == 0) goto 8 <hci_controller_init+0x38 : 1e191f4 >			  ## hci_controller.c:838:23
 1e191ec:    c0 ff 72 93 e1 01 	r0 = 31560562 <hci_h4_download_data : 1e19372 >			  ## hci_controller.c:839:9
 1e191f2:    81 00             	call r1			  ## hci_controller.c:839:9
 1e191f4:    14 01             	{rets, r4} = [sp++]			  ## hci_controller.c:920:9
 1e191f6:    c0 f3 c1 17       	goto 12162 <ll_init : 1e1c17c >			  ## hci_controller.c:920:9


hci_send_event:
 1e191fa:    62 01             	[--sp] = {r3, r2}			  ## hci_controller.c:699:0
 1e191fc:    34 00             	[--sp] = rets			  ## hci_controller.c:699:0
 1e191fe:    c0 fb f8 fd       	sp += -520			  ## hci_controller.c:699:0
 1e19202:    d0 f5 04 00       	b[sp+4] = r0			  ## hci_controller.c:703:15
 1e19206:    e2 fb 0c 02       	r2 = sp + 524			  ## hci_controller.c:703:15
 1e1920a:    0a 02             	[sp] = r2			  ## hci_controller.c:705:5
 1e1920c:    40 a0             	r0 = sp + 4			  ## hci_controller.c:705:5
 1e1920e:    90 b0             	r0 |= 2			  ## hci_controller.c:706:29
 1e19210:    bf f3 de 66       	call -78404 <__vsprintf : 1e05fd0 >			  ## hci_controller.c:706:17
 1e19214:    02 08             	r2 = r0			  ## hci_controller.c:706:17
 1e19216:    0b ff 00 21 02 00 	ifs (r2 < 256) goto 4 <hci_send_event+0x26 : 1e19220 >
 1e1921c:    8f f3 e0 50       	call 2007488 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e19220:    c0 ff 48 2a 00 00 	r0 = 10824 <h4_transport : 2a48 >			  ## hci_controller.c:667:9
 1e19226:    00 40             	r0 = [r0 + 0]			  ## hci_controller.c:667:9
 1e19228:    d2 f5 05 00       	b[sp+5] = r2			  ## hci_controller.c:708:16
 1e1922c:    08 20             	if (r0 == 0) goto 16 <hci_send_event+0x44 : 1e1923e >
 1e1922e:    63 40             	r3 = [r0 + 24]			  ## hci_controller.c:667:39
 1e19230:    06 26             	if (r3 == 0) goto 12 <hci_send_event+0x44 : 1e1923e >			  ## hci_controller.c:667:39
 1e19232:    c0 f5 05 00       	r0 = b[sp+5] (u)			  ## hci_controller.c:711:68
 1e19236:    22 90             	r2 = r0 + 2			  ## hci_controller.c:711:66
 1e19238:    41 a0             	r1 = sp + 4
 1e1923a:    40 70             	r0 = 4			  ## hci_controller.c:668:16
 1e1923c:    83 00             	call r3			  ## hci_controller.c:668:16
 1e1923e:    c0 fb 08 02       	sp += 520
 1e19242:    88 01             	{rets} = [sp++]
 1e19244:    04 0a             	sp += 8
 1e19246:    20 00             	rts


hci_send_event_cmd_complete:
 1e19248:    62 01             	[--sp] = {r3, r2}			  ## hci_controller.c:745:0
 1e1924a:    74 01             	[--sp] = {rets, r4}			  ## hci_controller.c:745:0
 1e1924c:    c0 fb f8 fd       	sp += -520			  ## hci_controller.c:745:0
 1e19250:    04 08             	r4 = r0			  ## hci_controller.c:745:0
 1e19252:    e0 70             	r0 = 14			  ## hci_controller.c:749:15
 1e19254:    d0 f5 04 00       	b[sp+4] = r0			  ## hci_controller.c:749:15
 1e19258:    e2 fb 10 02       	r2 = sp + 528			  ## hci_controller.c:749:15
 1e1925c:    0a 02             	[sp] = r2			  ## hci_controller.c:751:5
 1e1925e:    40 a0             	r0 = sp + 4			  ## hci_controller.c:751:5
 1e19260:    50 80             	r0 += 5			  ## hci_controller.c:752:29
 1e19262:    bf f3 b5 66       	call -78486 <__vsprintf : 1e05fd0 >			  ## hci_controller.c:752:17
 1e19266:    02 08             	r2 = r0			  ## hci_controller.c:752:17
 1e19268:    0b ff 00 21 02 00 	ifs (r2 < 256) goto 4 <hci_send_event_cmd_complete+0x2A : 1e19272 >
 1e1926e:    8f f3 b7 50       	call 2007406 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e19272:    30 94             	r0 = r2 + 3			  ## hci_controller.c:754:20
 1e19274:    d0 f5 05 00       	b[sp+5] = r0			  ## hci_controller.c:754:16
 1e19278:    11 70             	r1 = 1			  ## hci_controller.c:754:16
 1e1927a:    c0 ff 48 2a 00 00 	r0 = 10824 <h4_transport : 2a48 >			  ## hci_controller.c:667:9
 1e19280:    00 40             	r0 = [r0 + 0]			  ## hci_controller.c:667:9
 1e19282:    d1 f5 06 00       	b[sp+6] = r1			  ## hci_controller.c:757:17
 1e19286:    d4 f5 07 00       	b[sp+7] = r4			  ## hci_controller.c:758:17
 1e1928a:    21 d2             	r1 = r4 >> 8			  ## hci_controller.c:759:26
 1e1928c:    d1 f5 08 00       	b[sp+8] = r1			  ## hci_controller.c:759:17
 1e19290:    08 20             	if (r0 == 0) goto 16 <hci_send_event_cmd_complete+0x5A : 1e192a2 >
 1e19292:    63 40             	r3 = [r0 + 24]			  ## hci_controller.c:667:39
 1e19294:    06 26             	if (r3 == 0) goto 12 <hci_send_event_cmd_complete+0x5A : 1e192a2 >			  ## hci_controller.c:667:39
 1e19296:    c0 f5 05 00       	r0 = b[sp+5] (u)			  ## hci_controller.c:761:68
 1e1929a:    22 90             	r2 = r0 + 2			  ## hci_controller.c:761:66
 1e1929c:    41 a0             	r1 = sp + 4
 1e1929e:    40 70             	r0 = 4			  ## hci_controller.c:668:16
 1e192a0:    83 00             	call r3			  ## hci_controller.c:668:16
 1e192a2:    c0 fb 08 02       	sp += 520
 1e192a6:    14 01             	{rets, r4} = [sp++]
 1e192a8:    04 0a             	sp += 8
 1e192aa:    20 00             	rts


btctrler_task:
 1e192ac:    e4 0b             	sp += -56			  ## btctrler_task.c:88:0
 1e192ae:    86 17             	call -244 <hci_controller_init : 1e191bc >			  ## btctrler_task.c:91:5
 1e192b0:    00 a0             	r0 = sp + 0			  ## btctrler_task.c:91:5
 1e192b2:    44 90             	r4 = r0 + 4
 1e192b4:    c6 ff fa ff bf ff 	r6 = 4290772986 <uECC_vli_cmp_unsafe+0x1AF8FFE : 1bffffa >
 1e192ba:    c5 ff ec 0d 00 00 	r5 = 3564 <bt_task_thread : dec >
 1e192c0:    c7 ff e8 0d 00 00 	r7 = 3560 <bt_testbox_update_msg_handle : de8 >
 1e192c6:    c8 ff 48 2a 00 00 	r8 = 10824 <h4_transport : 2a48 >
 1e192cc:    01 a0             	r1 = sp + 0
 1e192ce:    00 70             	r0 = 0			  ## btctrler_task.c:94:19
 1e192d0:    e2 70             	r2 = 14			  ## btctrler_task.c:94:19
 1e192d2:    97 f3 7d 6d       	call 3070714 <os_taskq_pend : 106dd0 >			  ## btctrler_task.c:94:19
 1e192d6:    d0 e0 f9 1f       	if (r0 != 13) goto -14 <btctrler_task+0x20 : 1e192cc >			  ## btctrler_task.c:95:13
 1e192da:    00 02             	r0 = [sp]			  ## btctrler_task.c:99:17
 1e192dc:    81 b1             	r1 = r0 + r6			  ## btctrler_task.c:99:9
 1e192de:    71 e0 20 80       	if (r1 > 7) goto 64 <.GJTIE911_0_0_+0x36 : 1e19322 >			  ## btctrler_task.c:99:9
 1e192e2:    a1 00             	tbb [r1]


.GJTIS911_0_0_:
 1e192e4:    0d     < 13 : 0xD >
 1e192e5:    1f     < 31 : 0x1F >
 1e192e6:    04     < 4 : 0x4 >
 1e192e7:    04     < 4 : 0x4 >
 1e192e8:    04     < 4 : 0x4 >
 1e192e9:    04     < 4 : 0x4 >
 1e192ea:    09     < 9 : 0x9 >
 1e192eb:    11     < 17 : 0x11 >
 1e192ec:    01 4e             	r1 = [r7 + 0]			  ## btctrler_task.c:158:17
 1e192ee:    19 22             	if (r1 == 0) goto 50 <.GJTIE911_0_0_+0x36 : 1e19322 >			  ## btctrler_task.c:158:17
 1e192f0:    bf f3 5e 42       	call -97092 <testbox_update_msg_handle : 1e017b0 >			  ## btctrler_task.c:159:17
 1e192f4:    16 18             	goto 44 <.GJTIE911_0_0_+0x36 : 1e19322 >			  ## btctrler_task.c:159:17
 1e192f6:    10 02             	r0 = [sp+4]			  ## btctrler_task.c:144:35
 1e192f8:    97 f3 88 6d       	call 3070736 <os_sem_post : 106e0c >			  ## btctrler_task.c:144:13
 1e192fc:    12 18             	goto 36 <.GJTIE911_0_0_+0x36 : 1e19322 >			  ## btctrler_task.c:144:13
 1e192fe:    40 08             	r0 = r4			  ## btctrler_task.c:137:21
 1e19300:    80 f3 00 29       	call 20992 <ll_hci_cmd_handler : 1e1e504 >			  ## btctrler_task.c:137:21
 1e19304:    0e 18             	goto 28 <.GJTIE911_0_0_+0x36 : 1e19322 >			  ## btctrler_task.c:137:21
 1e19306:    00 f6 00 80       	r0 = [r8 + 0]			  ## hci_controller.c:946:5
 1e1930a:    30 40             	r0 = [r0 + 12]			  ## hci_controller.c:946:19
 1e1930c:    80 00             	call r0			  ## hci_controller.c:946:5
 1e1930e:    80 f3 b9 16       	call 11634 <ll_destroy : 1e1c084 >			  ## hci_controller.c:968:9
 1e19312:    bf f3 7e fd       	call -1284 <bt_rf_close : 1e18e12 >			  ## hci_controller.c:971:5
 1e19316:    10 02             	r0 = [sp+4]			  ## btctrler_task.c:149:35
 1e19318:    97 f3 78 6d       	call 3070704 <os_sem_post : 106e0c >			  ## btctrler_task.c:149:13
 1e1931c:    40 71             	r0 = 20			  ## btctrler_task.c:150:13
 1e1931e:    97 f3 4b 6d       	call 3070614 <os_time_dly : 106db8 >			  ## btctrler_task.c:150:13
 1e19322:    50 08             	r0 = r5			  ## hci_controller.c:847:5
 1e19324:    bf f3 49 70       	call -73582 <thread_run : 1e073ba >			  ## hci_controller.c:847:5
 1e19328:    d1 1f             	goto -94 <btctrler_task+0x20 : 1e192cc >			  ## hci_controller.c:847:5


bt_task_create:
 1e1932a:    00 70             	r0 = 0			  ## btctrler_task.c:39:0
 1e1932c:    20 00             	rts			  ## btctrler_task.c:41:5


bt_task_delete:
 1e1932e:    00 70             	r0 = 0			  ## btctrler_task.c:45:0
 1e19330:    20 00             	rts			  ## btctrler_task.c:46:5


bt_task_suspend:
 1e19332:    00 70             	r0 = 0			  ## btctrler_task.c:50:0
 1e19334:    20 00             	rts			  ## btctrler_task.c:59:5


bt_task_resume:
 1e19336:    34 00             	[--sp] = rets			  ## btctrler_task.c:63:0
 1e19338:    c0 ff ef 58 e1 01 	r0 = 31545583 <update_target_end+0x2A67 : 1e158ef >			  ## btctrler_task.c:69:5
 1e1933e:    f1 7f             	r1 = 255			  ## btctrler_task.c:69:5
 1e19340:    02 70             	r2 = 0			  ## btctrler_task.c:69:5
 1e19342:    03 70             	r3 = 0			  ## btctrler_task.c:69:5
 1e19344:    97 f3 4c 6d       	call 3070616 <os_taskq_post_type : 106de0 >			  ## btctrler_task.c:69:5
 1e19348:    00 70             	r0 = 0			  ## btctrler_task.c:71:5
 1e1934a:    30 00             	pc = [sp++]			  ## btctrler_task.c:71:5


h4_controller_init:
 1e1934c:    20 00             	rts			  ## h4_controller_interface.c:26:0


h4_controller_open:
 1e1934e:    00 70             	r0 = 0			  ## h4_controller_interface.c:31:0
 1e19350:    20 00             	rts			  ## h4_controller_interface.c:33:5


h4_controller_close:
 1e19352:    00 70             	r0 = 0			  ## h4_controller_interface.c:37:0
 1e19354:    20 00             	rts			  ## h4_controller_interface.c:39:5


h4_controller_register_packet_handler:
 1e19356:    c1 ff 4c 2a 00 00 	r1 = 10828 <__h4_send_packet : 2a4c >			  ## h4_controller_interface.c:43:0
 1e1935c:    08 42             	[r1 + 0] = r0			  ## h4_controller_interface.c:45:22
 1e1935e:    20 00             	rts			  ## h4_controller_interface.c:47:1


h4_controller_can_send_now:
 1e19360:    00 70             	r0 = 0			  ## h4_controller_interface.c:54:0
 1e19362:    20 00             	rts			  ## h4_controller_interface.c:55:5


h4_controller_send_packet:
 1e19364:    34 00             	[--sp] = rets			  ## h4_controller_interface.c:62:0
 1e19366:    00 04             	r0 = r0.b0 (u)			  ## h4_controller_interface.c:65:5
 1e19368:    a2 04             	r2 = r2.l (u)			  ## h4_controller_interface.c:65:5
 1e1936a:    bf f3 d3 95       	call -54362 <hci_packet_handler : 1e0bf14 >			  ## h4_controller_interface.c:65:5
 1e1936e:    00 70             	r0 = 0			  ## h4_controller_interface.c:66:5
 1e19370:    30 00             	pc = [sp++]			  ## h4_controller_interface.c:66:5


hci_h4_download_data:
 1e19372:    77 01             	[--sp] = {rets, r7-r4}			  ## hci_controller.c:612:0
 1e19374:    25 08             	r5 = r2			  ## hci_controller.c:612:0
 1e19376:    14 08             	r4 = r1			  ## hci_controller.c:612:0
 1e19378:    20 e0 1d 00       	if (r0 == 2) goto 58 <hci_h4_download_data+0x44 : 1e193b6 >			  ## hci_controller.c:616:5
 1e1937c:    10 e0 27 10       	if (r0 != 1) goto 78 <hci_h4_download_data+0x5C : 1e193ce >
 1e19380:    0b ff ff 50 02 00 	ifs (r5 < 255) goto 4 <hci_h4_download_data+0x18 : 1e1938a >
 1e19386:    8f f3 2b 50       	call 2007126 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1938a:    c7 ff 50 2a 00 00 	r7 = 10832 <hdl.3679 : 2a50 >
 1e19390:    20 4e             	r0 = [r7 + 8]			  ## hci_controller.c:585:39
 1e19392:    21 9a             	r1 = r5 + 2			  ## hci_controller.c:585:45
 1e19394:    bf f3 21 6f       	call -74174 <lbuf_alloc_btctrler : 1e071da >			  ## hci_controller.c:585:11
 1e19398:    06 08             	r6 = r0			  ## hci_controller.c:585:11
 1e1939a:    19 2c             	if (r6 == 0) goto 50 <hci_h4_download_data+0x5C : 1e193ce >			  ## hci_controller.c:585:11
 1e1939c:    0d 5c             	h[r6 + 0] = r5			  ## hci_controller.c:591:15
 1e1939e:    20 9c             	r0 = r6 + 2			  ## hci_controller.c:592:17
 1e193a0:    41 08             	r1 = r4			  ## hci_controller.c:592:5
 1e193a2:    52 08             	r2 = r5			  ## hci_controller.c:592:5
 1e193a4:    97 f3 9e 6d       	call 3070780 <memcpy : 106ee4 >			  ## hci_controller.c:592:5
 1e193a8:    60 08             	r0 = r6			  ## hci_controller.c:602:5
 1e193aa:    bf f3 89 6f       	call -73966 <lbuf_push_btctrler : 1e072c0 >			  ## hci_controller.c:602:5
 1e193ae:    80 9f             	r0 = r7 + 24			  ## hci_controller.c:604:5
 1e193b0:    17 01             	{rets, r7-r4} = [sp++]			  ## hci_controller.c:604:5
 1e193b2:    ff f3 9a 6f       	goto -73932 <thread_resume : 1e072ea >			  ## hci_controller.c:604:5
 1e193b6:    01 70             	r1 = 0			  ## hci_controller.c:626:18
 1e193b8:    40 08             	r0 = r4			  ## hci_controller.c:626:18
 1e193ba:    bf f3 7a 6f       	call -73996 <btctler_little_endian_read_16 : 1e072b2 >			  ## hci_controller.c:626:18
 1e193be:    30 fd f0 0a       	r0 = r0 & 4294905855			  ## hci_controller.c:629:36
 1e193c2:    80 f3 73 15       	call 10982 <ll_link_for_handle : 1e1beac >			  ## hci_controller.c:629:17
 1e193c6:    03 20             	if (r0 == 0) goto 6 <hci_h4_download_data+0x5C : 1e193ce >			  ## hci_controller.c:629:17
 1e193c8:    40 08             	r0 = r4			  ## hci_controller.c:631:21
 1e193ca:    80 f3 68 29       	call 21200 <ll_push_acl_data : 1e1e69e >			  ## hci_controller.c:631:21
 1e193ce:    57 01             	{pc, r7-r4} = [sp++]			  ## hci_controller.c:657:1


ble_power_ops:
 1e193d0:    50 42             	r0 = [r1 + 20]
 1e193d2:    e1 01             	[--sp] = {psr, reti}
 1e193d4:    b8 ba             	r8 ^= 2097152
 1e193d6:    e1 01             	[--sp] = {psr, reti}
 1e193d8:    8c bb             	r12 = r5 + r6
 1e193da:    e1 01             	[--sp] = {psr, reti}
 1e193dc:    bc bb             	r12 ^= 8388608
 1e193de:    e1 01             	[--sp] = {psr, reti}
 1e193e0:    9c bc             	r12 |= 33554432
 1e193e2:    e1 01             	[--sp] = {psr, reti}
 1e193e4:    00 be             	r0 = r7 + r0
 1e193e6:    e1 01             	[--sp] = {psr, reti}


ble_power_put:
 1e193e8:    74 01             	[--sp] = {rets, r4}			  ## le_low_power.c:695:0
 1e193ea:    04 08             	r4 = r0			  ## le_low_power.c:695:0
 1e193ec:    50 48             	r0 = [r4 + 20]			  ## le_low_power.c:696:13
 1e193ee:    08 20             	if (r0 == 0) goto 16 <ble_power_put+0x18 : 1e19400 >
 1e193f0:    01 40             	r1 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/system/generic/list.h:171:36
 1e193f2:    12 40             	r2 = [r0 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/system/generic/list.h:171:23
 1e193f4:    1a 42             	[r1 + 4] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/system/generic/list.h:159:16
 1e193f6:    09 44             	[r2 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/system/generic/list.h:160:16
 1e193f8:    bf f3 08 b3       	call -39408 <free : 1e0fa0c >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:736:5
 1e193fc:    c5 f4 00 49       	[r4 + 20] = 0			  ## le_low_power.c:698:24
 1e19400:    54 01             	{pc, r4} = [sp++]			  ## le_low_power.c:700:1


__set_hw_irq:
 1e19402:    76 01             	[--sp] = {rets, r6-r4}			  ## RF_ble.c:650:0
 1e19404:    15 08             	r5 = r1			  ## RF_ble.c:650:0
 1e19406:    04 08             	r4 = r0			  ## RF_ble.c:650:0
 1e19408:    97 f3 c8 6c       	call 3070352 <local_irq_disable : 106d9c >			  ## RF_ble.c:651:5
 1e1940c:    08 00             	csync			  ## RF_ble.c:651:5
 1e1940e:    c0 ff 28 80 1c 00 	r0 = 1867816 <uECC_vli_cmp_unsafe+0xC102C : 1c8028 >
 1e19414:    1d 2a             	if (r5 == 0) goto 58 <__set_hw_irq+0x4E : 1e19450 >
 1e19416:    22 fd 01 59       	r2 = r5 & 1			  ## RF_ble.c:654:9
 1e1941a:    13 40             	r3 = [r0 + 4]			  ## RF_ble.c:654:9
 1e1941c:    f8 fd 40 12       	r1 = r2 << r4			  ## RF_ble.c:654:9
 1e19420:    15 70             	r5 = 1			  ## RF_ble.c:654:9
 1e19422:    05 0d             	r5 <<= r4			  ## RF_ble.c:654:9
 1e19424:    e3 fd 50 33       	r3 = r3 & ~r5			  ## RF_ble.c:654:9
 1e19428:    53 b2             	r3 |= r1			  ## RF_ble.c:654:9
 1e1942a:    1b 40             	[r0 + 4] = r3			  ## RF_ble.c:654:9
 1e1942c:    83 98             	r3 = r4 + 8			  ## RF_ble.c:655:9
 1e1942e:    16 40             	r6 = [r0 + 4]			  ## RF_ble.c:655:9
 1e19430:    c2 0c             	r2 <<= r3			  ## RF_ble.c:655:9
 1e19432:    03 fb 00 01       	r3 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## RF_ble.c:655:9
 1e19436:    03 0d             	r3 <<= r4			  ## RF_ble.c:655:9
 1e19438:    e3 fd 30 46       	r4 = r6 & ~r3			  ## RF_ble.c:655:9
 1e1943c:    54 b4             	r4 |= r2			  ## RF_ble.c:655:9
 1e1943e:    1c 40             	[r0 + 4] = r4			  ## RF_ble.c:655:9
 1e19440:    94 40             	r4 = [r0 + 36]			  ## RF_ble.c:656:9
 1e19442:    e3 fd 30 44       	r4 = r4 & ~r3			  ## RF_ble.c:656:9
 1e19446:    54 b4             	r4 |= r2			  ## RF_ble.c:656:9
 1e19448:    9c 40             	[r0 + 36] = r4			  ## RF_ble.c:656:9
 1e1944a:    d3 b7             	r3 = ~r3			  ## RF_ble.c:655:9
 1e1944c:    d4 bb             	r4 = ~r5			  ## RF_ble.c:654:9
 1e1944e:    09 18             	goto 18 <__set_hw_irq+0x60 : 1e19462 >			  ## RF_ble.c:654:9
 1e19450:    01 fb 00 01       	r1 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## RF_ble.c:660:5
 1e19454:    01 0d             	r1 <<= r4			  ## RF_ble.c:660:5
 1e19456:    d3 b3             	r3 = ~r1			  ## RF_ble.c:660:5
 1e19458:    11 70             	r1 = 1			  ## RF_ble.c:659:5
 1e1945a:    01 0d             	r1 <<= r4			  ## RF_ble.c:659:5
 1e1945c:    d4 b3             	r4 = ~r1			  ## RF_ble.c:659:5
 1e1945e:    02 70             	r2 = 0			  ## RF_ble.c:659:5
 1e19460:    01 70             	r1 = 0			  ## RF_ble.c:659:5
 1e19462:    05 40             	r5 = [r0 + 0]			  ## RF_ble.c:659:5
 1e19464:    55 b9             	r5 &= r4			  ## RF_ble.c:659:5
 1e19466:    55 b2             	r5 |= r1			  ## RF_ble.c:659:5
 1e19468:    0d 40             	[r0 + 0] = r5			  ## RF_ble.c:659:5
 1e1946a:    05 40             	r5 = [r0 + 0]			  ## RF_ble.c:660:5
 1e1946c:    53 bb             	r3 &= r5			  ## RF_ble.c:660:5
 1e1946e:    52 b6             	r2 |= r3			  ## RF_ble.c:660:5
 1e19470:    0a 40             	[r0 + 0] = r2			  ## RF_ble.c:660:5
 1e19472:    92 40             	r2 = [r0 + 36]			  ## RF_ble.c:661:5
 1e19474:    52 b9             	r2 &= r4			  ## RF_ble.c:661:5
 1e19476:    51 b4             	r1 |= r2			  ## RF_ble.c:661:5
 1e19478:    99 40             	[r0 + 36] = r1			  ## RF_ble.c:661:5
 1e1947a:    16 01             	{rets, r6-r4} = [sp++]			  ## RF_ble.c:663:5
 1e1947c:    d7 f3 8c 6c       	goto 3070232 <local_irq_enable : 106d98 >			  ## RF_ble.c:663:5


ble_hw_disable:
 1e19480:    76 01             	[--sp] = {rets, r6-r4}			  ## RF_ble.c:681:0
 1e19482:    04 08             	r4 = r0			  ## RF_ble.c:681:0
 1e19484:    97 f3 8a 6c       	call 3070228 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e19488:    08 00             	csync			  ## RF_ble.c:304:5
 1e1948a:    c5 ff 1c 80 1c 00 	r5 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >			  ## RF_ble.c:304:5
 1e19490:    c1 f4 00 59       	[r5 + 4] = 0			  ## RF_ble.c:306:21
 1e19494:    08 00             	csync			  ## RF_ble.c:307:5
 1e19496:    c6 ff 84 2d 00 00 	r6 = 11652 <bb_hdl : 2d84 >
 1e1949c:    00 4c             	r0 = [r6 + 0]			  ## RF_ble.c:147:19
 1e1949e:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e194a0:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e194a2:    c1 71             	r1 = 28			  ## RF_ble.c:147:17
 1e194a4:    e0 fe 10 00       	r0 = r0 / r1 (s)			  ## RF_ble.c:147:17
 1e194a8:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e194aa:    01 fb f0 07       	r1 = 2032 <DRIVER_CODE_TOTAL+0x6A : 7f0 >			  ## RF_ble.c:308:50
 1e194ae:    50 b3             	r0 &= r1			  ## RF_ble.c:308:50
 1e194b0:    01 fb 05 38       	r1 = 14341 <_norflash_read+0x9 : 3805 >			  ## RF_ble.c:308:67
 1e194b4:    50 b2             	r0 |= r1			  ## RF_ble.c:308:67
 1e194b6:    08 4a             	[r5 + 0] = r0			  ## RF_ble.c:308:21
 1e194b8:    97 f3 6e 6c       	call 3070172 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5
 1e194bc:    70 4a             	r0 = [r5 + 28]			  ## RF_ble.c:685:16
 1e194be:    21 f3 fd 0f       	if ((r0 & 2) != 0) goto -6 <ble_hw_disable+0x3C : 1e194bc >			  ## RF_ble.c:685:9
 1e194c2:    00 4c             	r0 = [r6 + 0]			  ## RF_ble.c:147:19
 1e194c4:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e194c6:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e194c8:    c1 71             	r1 = 28			  ## RF_ble.c:147:17
 1e194ca:    e0 fe 10 00       	r0 = r0 / r1 (s)			  ## RF_ble.c:147:17
 1e194ce:    00 04             	r0 = r0.b0 (u)			  ## RF_ble.c:692:5
 1e194d0:    01 70             	r1 = 0			  ## RF_ble.c:692:5
 1e194d2:    16 01             	{rets, r6-r4} = [sp++]			  ## RF_ble.c:692:5
 1e194d4:    96 1f             	goto -212 <__set_hw_irq : 1e19402 >			  ## RF_ble.c:692:5


clear_all_anchor_cnt:
 1e194d6:    79 01             	[--sp] = {rets, r9-r4}			  ## RF_ble.c:1611:0
 1e194d8:    04 08             	r4 = r0			  ## RF_ble.c:1611:0
 1e194da:    08 70             	r8 = 0			  ## RF_ble.c:1611:0
 1e194dc:    c6 ff 1c 80 1c 00 	r6 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >			  ## RF_ble.c:1611:0
 1e194e2:    c9 ff 84 2d 00 00 	r9 = 11652 <bb_hdl : 2d84 >			  ## RF_ble.c:1611:0
 1e194e8:    c5 71             	r5 = 28			  ## RF_ble.c:1611:0
 1e194ea:    07 70             	r7 = 0			  ## RF_ble.c:1611:0
 1e194ec:    97 f3 56 6c       	call 3070124 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e194f0:    08 00             	csync			  ## RF_ble.c:304:5
 1e194f2:    18 f6 04 60       	[r6 + 4] = r8			  ## RF_ble.c:306:21
 1e194f6:    08 00             	csync			  ## RF_ble.c:307:5
 1e194f8:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:147:19
 1e194fc:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e194fe:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e19500:    e0 fe 50 00       	r0 = r0 / r5 (s)			  ## RF_ble.c:147:17
 1e19504:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e19506:    20 fd 7f 00       	r0 = r0 & 4080			  ## RF_ble.c:308:50
 1e1950a:    50 be             	r0 |= r7			  ## RF_ble.c:308:67
 1e1950c:    00 fd 05 09       	r0 = r0 | 5			  ## RF_ble.c:308:67
 1e19510:    08 4c             	[r6 + 0] = r0			  ## RF_ble.c:308:21
 1e19512:    97 f3 41 6c       	call 3070082 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5
 1e19516:    77 fc 00 04       	r7 = r7 + 1024			  ## RF_ble.c:1612:22
 1e1951a:    21 ff 44 7a e6 ff 	if (r7 != 17408) goto -52 <clear_all_anchor_cnt+0x16 : 1e194ec >			  ## RF_ble.c:1612:5
 1e19520:    59 01             	{pc, r9-r4} = [sp++]			  ## RF_ble.c:1615:1


hw_entity_free:
 1e19522:    03 20             	if (r0 == 0) goto 6 <hw_entity_free+0x8 : 1e1952a >			  ## RF_ble.c:3130:0
 1e19524:    01 70             	r1 = 0			  ## RF_ble.c:3140:17
 1e19526:    11 f9 64 02       	b[r0 + 612] = r1			  ## RF_ble.c:3140:17
 1e1952a:    20 00             	rts			  ## RF_ble.c:3141:1


__set_anchor_cnt:
 1e1952c:    7b 01             	[--sp] = {rets, r11-r4}			  ## RF_ble.c:315:0
 1e1952e:    15 08             	r5 = r1			  ## RF_ble.c:315:0
 1e19530:    04 08             	r4 = r0			  ## RF_ble.c:315:0
 1e19532:    97 f3 33 6c       	call 3070054 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e19536:    08 00             	csync			  ## RF_ble.c:304:5
 1e19538:    07 70             	r7 = 0			  ## RF_ble.c:304:5
 1e1953a:    c6 ff 1c 80 1c 00 	r6 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >			  ## RF_ble.c:304:5
 1e19540:    1f 4c             	[r6 + 4] = r7			  ## RF_ble.c:306:21
 1e19542:    08 00             	csync			  ## RF_ble.c:307:5
 1e19544:    c8 ff 84 2d 00 00 	r8 = 11652 <bb_hdl : 2d84 >			  ## RF_ble.c:147:19
 1e1954a:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:147:19
 1e1954e:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e19550:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e19552:    cb 71             	r11 = 28			  ## RF_ble.c:147:17
 1e19554:    e0 fe b0 00       	r0 = r0 / r11 (s)			  ## RF_ble.c:147:17
 1e19558:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e1955a:    01 fb f0 03       	r1 = 1008 <BTCTLER_LE_RAM_TOTAL+0x12 : 3f0 >			  ## RF_ble.c:308:50
 1e1955e:    50 b3             	r0 &= r1			  ## RF_ble.c:308:50
 1e19560:    01 fb 05 1c       	r1 = 7173 <profile_l2cap_hdl+0x21 : 1c05 >			  ## RF_ble.c:308:67
 1e19564:    50 b2             	r0 |= r1			  ## RF_ble.c:308:67
 1e19566:    08 4c             	[r6 + 0] = r0			  ## RF_ble.c:308:21
 1e19568:    97 f3 16 6c       	call 3069996 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5
 1e1956c:    97 f3 16 6c       	call 3069996 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e19570:    08 00             	csync			  ## RF_ble.c:304:5
 1e19572:    1f 4c             	[r6 + 4] = r7			  ## RF_ble.c:306:21
 1e19574:    08 00             	csync			  ## RF_ble.c:307:5
 1e19576:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:147:19
 1e1957a:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e1957c:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e1957e:    e0 fe b0 00       	r0 = r0 / r11 (s)			  ## RF_ble.c:147:17
 1e19582:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e19584:    20 fd 7f 00       	r0 = r0 & 4080			  ## RF_ble.c:308:50
 1e19588:    00 fd 05 09       	r0 = r0 | 5			  ## RF_ble.c:308:67
 1e1958c:    08 4c             	[r6 + 0] = r0			  ## RF_ble.c:308:21
 1e1958e:    97 f3 03 6c       	call 3069958 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5
 1e19592:    97 f3 03 6c       	call 3069958 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e19596:    08 00             	csync			  ## RF_ble.c:304:5
 1e19598:    1f 4c             	[r6 + 4] = r7			  ## RF_ble.c:306:21
 1e1959a:    08 00             	csync			  ## RF_ble.c:307:5
 1e1959c:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:147:19
 1e195a0:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e195a2:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e195a4:    e0 fe b0 00       	r0 = r0 / r11 (s)			  ## RF_ble.c:147:17
 1e195a8:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e195aa:    09 fb f0 07       	r9 = 2032 <DRIVER_CODE_TOTAL+0x6A : 7f0 >			  ## RF_ble.c:308:50
 1e195ae:    e2 fd 90 00       	r0 = r0 & r9			  ## RF_ble.c:308:50
 1e195b2:    0a fb 05 38       	r10 = 14341 <_norflash_read+0x9 : 3805 >			  ## RF_ble.c:308:67
 1e195b6:    e0 fd a0 00       	r0 = r0 | r10			  ## RF_ble.c:308:67
 1e195ba:    57 fc ff ff       	r7 = r5 + -1			  ## RF_ble.c:326:39
 1e195be:    08 4c             	[r6 + 0] = r0			  ## RF_ble.c:308:21
 1e195c0:    01 3a             	if (r5 != 0) goto 2 <__set_anchor_cnt+0x98 : 1e195c4 >			  ## RF_ble.c:308:21
 1e195c2:    07 70             	r7 = 0			  ## RF_ble.c:326:39
 1e195c4:    e5 05             	r5 = r7.l (u)			  ## RF_ble.c:326:44
 1e195c6:    97 f3 e7 6b       	call 3069902 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5
 1e195ca:    97 f3 e7 6b       	call 3069902 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e195ce:    08 00             	csync			  ## RF_ble.c:304:5
 1e195d0:    1d 4c             	[r6 + 4] = r5			  ## RF_ble.c:306:21
 1e195d2:    08 00             	csync			  ## RF_ble.c:307:5
 1e195d4:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:147:19
 1e195d8:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e195da:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e195dc:    e0 fe b0 00       	r0 = r0 / r11 (s)			  ## RF_ble.c:147:17
 1e195e0:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e195e2:    20 fd 7f 00       	r0 = r0 & 4080			  ## RF_ble.c:308:50
 1e195e6:    00 fd 05 09       	r0 = r0 | 5			  ## RF_ble.c:308:67
 1e195ea:    08 4c             	[r6 + 0] = r0			  ## RF_ble.c:308:21
 1e195ec:    38 d4             	r0 = r7 >> 16			  ## RF_ble.c:328:58
 1e195ee:    05 fd 80 0a       	r5 = r0 | 32768			  ## RF_ble.c:328:44
 1e195f2:    97 f3 d1 6b       	call 3069858 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5
 1e195f6:    97 f3 d1 6b       	call 3069858 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e195fa:    08 00             	csync			  ## RF_ble.c:304:5
 1e195fc:    1d 4c             	[r6 + 4] = r5			  ## RF_ble.c:306:21
 1e195fe:    08 00             	csync			  ## RF_ble.c:307:5
 1e19600:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:147:19
 1e19604:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e19606:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e19608:    e0 fe b0 00       	r0 = r0 / r11 (s)			  ## RF_ble.c:147:17
 1e1960c:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e1960e:    e2 fd 90 00       	r0 = r0 & r9			  ## RF_ble.c:308:50
 1e19612:    e0 fd a0 00       	r0 = r0 | r10			  ## RF_ble.c:308:67
 1e19616:    08 4c             	[r6 + 0] = r0			  ## RF_ble.c:308:21
 1e19618:    1b 01             	{rets, r11-r4} = [sp++]			  ## RF_ble.c:310:5
 1e1961a:    d7 f3 bd 6b       	goto 3069818 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5


ble_hw_enable:
 1e1961e:    75 01             	[--sp] = {rets, r5, r4}			  ## RF_ble.c:674:0
 1e19620:    c2 ff 84 2d 00 00 	r2 = 11652 <bb_hdl : 2d84 >			  ## RF_ble.c:147:19
 1e19626:    02 44             	r2 = [r2 + 0]			  ## RF_ble.c:147:19
 1e19628:    42 44             	r2 = [r2 + 16]			  ## RF_ble.c:147:35
 1e1962a:    14 08             	r4 = r1			  ## RF_ble.c:147:35
 1e1962c:    05 08             	r5 = r0
 1e1962e:    a0 ba             	r0 = r5 - r2			  ## RF_ble.c:147:17
 1e19630:    c1 71             	r1 = 28			  ## RF_ble.c:147:17
 1e19632:    e0 fe 10 00       	r0 = r0 / r1 (s)			  ## RF_ble.c:147:17
 1e19636:    00 04             	r0 = r0.b0 (u)			  ## RF_ble.c:669:5
 1e19638:    11 70             	r1 = 1			  ## RF_ble.c:669:5
 1e1963a:    e3 16             	call -570 <__set_hw_irq : 1e19402 >			  ## RF_ble.c:669:5
 1e1963c:    50 08             	r0 = r5			  ## RF_ble.c:676:5
 1e1963e:    41 08             	r1 = r4			  ## RF_ble.c:676:5
 1e19640:    15 01             	{rets, r5, r4} = [sp++]			  ## RF_ble.c:676:5
 1e19642:    74 1f             	goto -280 <__set_anchor_cnt : 1e1952c >			  ## RF_ble.c:676:5


le_hw_resume:
 1e19644:    34 00             	[--sp] = rets			  ## RF_ble.c:3999:0
 1e19646:    02 40             	r2 = [r0 + 0]			  ## RF_ble.c:4000:13
 1e19648:    03 f9 53 21       	r3 = b[r2 + 339] (u)			  ## RF_ble.c:4000:22
 1e1964c:    73 b0             	r3 &= 4294967294			  ## RF_ble.c:4000:9
 1e1964e:    23 e0 04 00       	if (r3 == 2) goto 8 <le_hw_resume+0x16 : 1e1965a >			  ## RF_ble.c:4000:9
 1e19652:    23 70             	r3 = 2			  ## RF_ble.c:4011:28
 1e19654:    13 f9 53 21       	b[r2 + 339] = r3			  ## RF_ble.c:4011:28
 1e19658:    e2 17             	call -60 <ble_hw_enable : 1e1961e >			  ## RF_ble.c:4012:5
 1e1965a:    30 00             	pc = [sp++]			  ## RF_ble.c:4013:1


le_hw_close:
 1e1965c:    77 01             	[--sp] = {rets, r7-r4}			  ## RF_ble.c:4043:0
 1e1965e:    04 08             	r4 = r0			  ## RF_ble.c:4043:0
 1e19660:    05 48             	r5 = [r4 + 0]			  ## RF_ble.c:4044:31
 1e19662:    5f 2a             	if (r5 == 0) goto 190 <le_hw_close+0xC6 : 1e19722 >
 1e19664:    c1 16             	call -638 <ble_power_put : 1e193e8 >			  ## RF_ble.c:4056:5
 1e19666:    40 08             	r0 = r4			  ## RF_ble.c:4058:5
 1e19668:    0b 17             	call -490 <ble_hw_disable : 1e19480 >			  ## RF_ble.c:4058:5
 1e1966a:    56 fc 78 01       	r6 = r5 + 376			  ## RF_ble.c:4058:5
 1e1966e:    30 4c             	r0 = [r6 + 12]			  ## RF_ble.c:4062:17
 1e19670:    bf f3 4d 42       	call -97126 <hw_dma_free : 1e01b0e >			  ## RF_ble.c:4062:5
 1e19674:    20 4c             	r0 = [r6 + 8]			  ## RF_ble.c:4063:17
 1e19676:    bf f3 4a 42       	call -97132 <hw_dma_free : 1e01b0e >			  ## RF_ble.c:4063:5
 1e1967a:    05 70             	r5 = 0			  ## RF_ble.c:4063:5
 1e1967c:    2d 4c             	[r6 + 8] = r5			  ## RF_ble.c:233:15
 1e1967e:    3d 4c             	[r6 + 12] = r5			  ## RF_ble.c:234:15
 1e19680:    10 4c             	r0 = [r6 + 4]			  ## RF_ble.c:4065:17
 1e19682:    bf f3 44 42       	call -97144 <hw_dma_free : 1e01b0e >			  ## RF_ble.c:4065:5
 1e19686:    00 4c             	r0 = [r6 + 0]			  ## RF_ble.c:4066:17
 1e19688:    bf f3 41 42       	call -97150 <hw_dma_free : 1e01b0e >			  ## RF_ble.c:4066:5
 1e1968c:    0d 4c             	[r6 + 0] = r5			  ## RF_ble.c:215:15
 1e1968e:    1d 4c             	[r6 + 4] = r5			  ## RF_ble.c:216:15
 1e19690:    60 fc 20 00       	r0 = r6 + 32			  ## RF_ble.c:4069:24
 1e19694:    bf f3 3c 42       	call -97160 <hw_dma_clear : 1e01b10 >			  ## RF_ble.c:4069:5
 1e19698:    80 9d             	r0 = r6 + 24			  ## RF_ble.c:4070:24
 1e1969a:    bf f3 39 42       	call -97166 <hw_dma_clear : 1e01b10 >			  ## RF_ble.c:4070:5
 1e1969e:    00 9d             	r0 = r6 + 16			  ## RF_ble.c:4071:24
 1e196a0:    bf f3 36 42       	call -97172 <hw_dma_clear : 1e01b10 >			  ## RF_ble.c:4071:5
 1e196a4:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:3205:21
 1e196a6:    c6 ff 84 2d 00 00 	r6 = 11652 <bb_hdl : 2d84 >			  ## RF_ble.c:3205:21
 1e196ac:    18 20             	if (r0 == 0) goto 48 <le_hw_close+0x82 : 1e196de >			  ## RF_ble.c:3205:21
 1e196ae:    40 08             	r0 = r4			  ## RF_ble.c:3210:5
 1e196b0:    12 17             	call -476 <clear_all_anchor_cnt : 1e194d6 >			  ## RF_ble.c:3210:5
 1e196b2:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:3212:32
 1e196b4:    00 f6 e4 01       	r0 = [r0 + 484]			  ## RF_ble.c:3212:41
 1e196b8:    bf f3 3a 42       	call -97164 <btctler_nv_memory_free : 1e01b30 >			  ## RF_ble.c:3212:5
 1e196bc:    00 4c             	r0 = [r6 + 0]			  ## RF_ble.c:3213:5
 1e196be:    41 40             	r1 = [r0 + 16]			  ## RF_ble.c:147:35
 1e196c0:    61 b8             	r1 = r4 - r1			  ## RF_ble.c:147:17
 1e196c2:    c2 71             	r2 = 28			  ## RF_ble.c:147:17
 1e196c4:    e0 fe 20 11       	r1 = r1 / r2 (s)			  ## RF_ble.c:147:17
 1e196c8:    41 04             	r1 = r1.b0 (u)			  ## RF_ble.c:3213:5
 1e196ca:    55 f8 00 01       	h[r0+r1<<1] = r5			  ## RF_ble.c:3213:37
 1e196ce:    01 f9 20 00       	r1 = b[r0 + 32] (u)			  ## RF_ble.c:3214:19
 1e196d2:    f1 8f             	r1 += -1			  ## RF_ble.c:3214:19
 1e196d4:    11 f9 20 00       	b[r0 + 32] = r1			  ## RF_ble.c:3214:19
 1e196d8:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:3216:24
 1e196da:    23 17             	call -442 <hw_entity_free : 1e19522 >			  ## RF_ble.c:3216:5
 1e196dc:    0d 48             	[r4 + 0] = r5			  ## RF_ble.c:3217:17
 1e196de:    97 f3 5d 6b       	call 3069626 <local_irq_disable : 106d9c >			  ## RF_ble.c:4080:5
 1e196e2:    08 00             	csync			  ## RF_ble.c:4080:5
 1e196e4:    00 4c             	r0 = [r6 + 0]
 1e196e6:    01 08             	r1 = r0
 1e196e8:    02 70             	r2 = 0
 1e196ea:    83 f7 02 10       	r3 = h[r1 ++= 2] (u)			  ## RF_ble.c:4790:13
 1e196ee:    0e 26             	if (r3 == 0) goto 28 <le_hw_close+0xB0 : 1e1970c >			  ## RF_ble.c:4790:13
 1e196f0:    43 40             	r3 = [r0 + 16]			  ## RF_ble.c:4791:35
 1e196f2:    84 f6 00 35       	r4 = [r3+r5]			  ## RF_ble.c:4792:29
 1e196f6:    0a 28             	if (r4 == 0) goto 20 <le_hw_close+0xB0 : 1e1970c >
 1e196f8:    46 fc 52 01       	r6 = r4 + 338
 1e196fc:    07 6c             	r7 = b[r6 + 0] (u)			  ## RF_ble.c:4796:31
 1e196fe:    37 e0 02 00       	if (r7 == 3) goto 4 <le_hw_close+0xAA : 1e19706 >			  ## RF_ble.c:4796:31
 1e19702:    17 e0 03 10       	if (r7 != 1) goto 6 <le_hw_close+0xB0 : 1e1970c >
 1e19706:    16 6c             	r6 = b[r6 + 1] (u)
 1e19708:    16 e0 05 00       	if (r6 == 1) goto 10 <le_hw_close+0xBA : 1e19716 >
 1e1970c:    12 80             	r2 += 1			  ## RF_ble.c:4789:42
 1e1970e:    c5 81             	r5 += 28			  ## RF_ble.c:4789:22
 1e19710:    82 e0 eb 3f       	if (r2 < 8) goto -42 <le_hw_close+0x8E : 1e196ea >			  ## RF_ble.c:4789:22
 1e19714:    04 18             	goto 8 <le_hw_close+0xC2 : 1e1971e >			  ## RF_ble.c:4789:22
 1e19716:    01 f7 5a 42       	r1 = h[r4 + 602] (u)
 1e1971a:    40 b7             	r0 = r3 + r5
 1e1971c:    93 17             	call -218 <le_hw_resume : 1e19644 >
 1e1971e:    97 f3 3b 6b       	call 3069558 <local_irq_enable : 106d98 >			  ## RF_ble.c:4084:5
 1e19722:    57 01             	{pc, r7-r4} = [sp++]			  ## RF_ble.c:4085:1


le_hw_destroy:
 1e19724:    76 01             	[--sp] = {rets, r6-r4}			  ## RF_ble.c:4571:0
 1e19726:    c4 ff 84 2d 00 00 	r4 = 11652 <bb_hdl : 2d84 >			  ## RF_ble.c:4571:0
 1e1972c:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:4574:11
 1e1972e:    25 20             	if (r0 == 0) goto 74 <le_hw_destroy+0x56 : 1e1977a >			  ## RF_ble.c:4574:11
 1e19730:    05 70             	r5 = 0
 1e19732:    06 70             	r6 = 0			  ## RF_ble.c:4581:13
 1e19734:    03 18             	goto 6 <le_hw_destroy+0x18 : 1e1973c >			  ## RF_ble.c:4581:13
 1e19736:    00 48             	r0 = [r4 + 0]
 1e19738:    c5 81             	r5 += 28			  ## RF_ble.c:4580:5
 1e1973a:    26 80             	r6 += 2			  ## RF_ble.c:4580:5
 1e1973c:    01 f8 00 06       	r1 = h[r0+r6] (u)			  ## RF_ble.c:4581:13
 1e19740:    03 22             	if (r1 == 0) goto 6 <le_hw_destroy+0x24 : 1e19748 >			  ## RF_ble.c:4581:13
 1e19742:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:4582:42
 1e19744:    50 09             	r0 += r5			  ## RF_ble.c:4582:13
 1e19746:    8a 17             	call -236 <le_hw_close : 1e1965c >			  ## RF_ble.c:4582:13
 1e19748:    e6 e0 f5 1f       	if (r6 != 14) goto -22 <le_hw_destroy+0x12 : 1e19736 >
 1e1974c:    c5 ff b0 20 00 00 	r5 = 8368 <gatt_client_conn_handle : 20b0 >
 1e19752:    00 f6 e0 50       	r0 = [r5 + 224]			  ## hw_dma.c:127:17
 1e19756:    09 20             	if (r0 == 0) goto 18 <le_hw_destroy+0x46 : 1e1976a >			  ## hw_dma.c:127:17
 1e19758:    01 f6 dc 50       	r1 = [r5 + 220]			  ## hw_dma.c:127:31
 1e1975c:    06 22             	if (r1 == 0) goto 12 <le_hw_destroy+0x46 : 1e1976a >			  ## hw_dma.c:127:31
 1e1975e:    bf f3 06 42       	call -97268 <lbuf_clear_btctrler : 1e01b6e >			  ## hw_dma.c:128:9
 1e19762:    00 f6 dc 50       	r0 = [r5 + 220]			  ## hw_dma.c:129:37
 1e19766:    bf f3 02 42       	call -97276 <lbuf_clear_btctrler : 1e01b6e >			  ## hw_dma.c:129:9
 1e1976a:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:4589:10
 1e1976c:    bf f3 4e b1       	call -40292 <free : 1e0fa0c >			  ## RF_ble.c:4589:5
 1e19770:    00 70             	r0 = 0			  ## RF_ble.c:4589:5
 1e19772:    08 48             	[r4 + 0] = r0			  ## RF_ble.c:4590:12
 1e19774:    20 fb 64 14       	r1 = 1867776			  ## RF_ble.c:4592:14
 1e19778:    08 42             	[r1 + 0] = r0			  ## RF_ble.c:4592:14
 1e1977a:    56 01             	{pc, r6-r4} = [sp++]			  ## RF_ble.c:4596:1


ble_enter_deepsleep:
 1e1977c:    75 01             	[--sp] = {rets, r5, r4}			  ## le_low_power.c:721:0
 1e1977e:    04 08             	r4 = r0			  ## le_low_power.c:721:0
 1e19780:    20 fb 64 14       	r1 = 1867776			  ## le_low_power.c:722:5
 1e19784:    c2 75             	r2 = 92			  ## le_low_power.c:722:5
 1e19786:    97 f3 ad 6b       	call 3069786 <memcpy : 106ee4 >			  ## le_low_power.c:722:5
 1e1978a:    40 fc 5c 00       	r0 = r4 + 92			  ## le_low_power.c:727:9
 1e1978e:    22 70             	r2 = 2			  ## le_low_power.c:727:9
 1e19790:    c1 ff 1c 80 1c 00 	r1 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >			  ## le_low_power.c:727:9
 1e19796:    03 fb 02 40       	r3 = 16386 <ze_entry_tm+0xB0 : 4002 >			  ## le_low_power.c:727:9
 1e1979a:    0a 42             	[r1 + 0] = r2			  ## le_low_power.c:705:21
 1e1979c:    08 00             	csync			  ## le_low_power.c:706:5
 1e1979e:    25 42             	r5 = [r1 + 8]			  ## le_low_power.c:708:12
 1e197a0:    22 fc 00 04       	r2 = r2 + 1024			  ## le_low_power.c:727:27
 1e197a4:    95 f7 02 00       	h[r0 ++= 2] = r5			  ## le_low_power.c:728:45
 1e197a8:    32 f2 f7 1f       	if (r2 != r3) goto -18 <ble_enter_deepsleep+0x1E : 1e1979a >			  ## le_low_power.c:727:9
 1e197ac:    b0 42             	r0 = [r1 + 44]			  ## le_low_power.c:732:39
 1e197ae:    10 f6 5c 41       	[r4 + 348] = r0			  ## le_low_power.c:732:37
 1e197b2:    c0 ff 74 0f 00 00 	r0 = 3956 <ble_finetimecnt_poweroff_sfr : f74 >			  ## le_low_power.c:734:34
 1e197b8:    c0 f4 00 09       	[r0 + 0] = 0			  ## le_low_power.c:734:34
 1e197bc:    55 01             	{pc, r5, r4} = [sp++]			  ## le_low_power.c:735:1


ble_exit_deepsleep:
 1e197be:    77 01             	[--sp] = {rets, r7-r4}			  ## le_low_power.c:759:0
 1e197c0:    04 08             	r4 = r0			  ## le_low_power.c:759:0
 1e197c2:    20 fb 64 04       	r0 = 1867776			  ## le_low_power.c:760:5
 1e197c6:    c2 75             	r2 = 92			  ## le_low_power.c:760:5
 1e197c8:    41 08             	r1 = r4			  ## le_low_power.c:760:5
 1e197ca:    97 f3 8b 6b       	call 3069718 <memcpy : 106ee4 >			  ## le_low_power.c:760:5
 1e197ce:    c0 ff 1c 80 1c 00 	r0 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >			  ## le_low_power.c:760:5
 1e197d4:    07 f4 01 09       	[r0 + 28] |= 1			  ## le_low_power.c:764:5
 1e197d8:    07 f4 04 09       	[r0 + 28] |= 4			  ## le_low_power.c:766:5
 1e197dc:    41 fc 5c 00       	r1 = r4 + 92
 1e197e0:    02 70             	r2 = 0
 1e197e2:    53 70             	r3 = 5
 1e197e4:    05 fb 05 40       	r5 = 16389 <ze_entry_tm+0xB3 : 4005 >
 1e197e8:    16 08             	r6 = r1
 1e197ea:    22 e0 06 00       	if (r2 == 2) goto 12 <ble_exit_deepsleep+0x3C : 1e197fa >
 1e197ee:    92 e0 04 00       	if (r2 == 9) goto 8 <ble_exit_deepsleep+0x3C : 1e197fa >
 1e197f2:    07 5c             	r7 = h[r6 + 0] (u)			  ## le_low_power.c:772:51
 1e197f4:    1f 40             	[r0 + 4] = r7			  ## le_low_power.c:714:21
 1e197f6:    08 00             	csync			  ## le_low_power.c:715:5
 1e197f8:    0b 40             	[r0 + 0] = r3			  ## le_low_power.c:716:21
 1e197fa:    26 80             	r6 += 2			  ## le_low_power.c:769:27
 1e197fc:    33 fc 00 04       	r3 = r3 + 1024			  ## le_low_power.c:769:27
 1e19800:    12 80             	r2 += 1			  ## le_low_power.c:769:72
 1e19802:    53 f2 f2 1f       	if (r3 != r5) goto -28 <ble_exit_deepsleep+0x2C : 1e197ea >
 1e19806:    92 52             	r2 = h[r1 + 18] (u)			  ## le_low_power.c:744:18
 1e19808:    21 52             	r1 = h[r1 + 4] (u)			  ## le_low_power.c:746:18
 1e1980a:    d3 d1             	r3 = r2 >> 7			  ## le_low_power.c:748:42
 1e1980c:    21 fd fe 1a       	r1 = r1 & 65024			  ## le_low_power.c:748:31
 1e19810:    51 b6             	r1 |= r3			  ## le_low_power.c:748:31
 1e19812:    19 40             	[r0 + 4] = r1			  ## le_low_power.c:714:21
 1e19814:    08 00             	csync			  ## le_low_power.c:715:5
 1e19816:    01 fb 05 08       	r1 = 2053 <report_mmu_tlb_size+0x5 : 805 >			  ## le_low_power.c:716:21
 1e1981a:    09 40             	[r0 + 0] = r1			  ## le_low_power.c:716:21
 1e1981c:    01 fd 40 29       	r1 = r2 | 64			  ## le_low_power.c:754:49
 1e19820:    19 40             	[r0 + 4] = r1			  ## le_low_power.c:714:21
 1e19822:    08 00             	csync			  ## le_low_power.c:715:5
 1e19824:    01 fb 05 24       	r1 = 9221 <log_mutex+0xD : 2405 >			  ## le_low_power.c:716:21
 1e19828:    09 40             	[r0 + 0] = r1			  ## le_low_power.c:716:21
 1e1982a:    00 f6 5c 41       	r0 = [r4 + 348]			  ## le_low_power.c:779:48
 1e1982e:    c1 ff 74 0f 00 00 	r1 = 3956 <ble_finetimecnt_poweroff_sfr : f74 >			  ## le_low_power.c:779:34
 1e19834:    08 42             	[r1 + 0] = r0			  ## le_low_power.c:779:34
 1e19836:    57 01             	{pc, r7-r4} = [sp++]			  ## le_low_power.c:780:1


le_hw_init:
 1e19838:    77 01             	[--sp] = {rets, r7-r4}			  ## RF_ble.c:4552:0
 1e1983a:    c7 ff 80 fc 1c 00 	r7 = 1899648 <uECC_vli_cmp_unsafe+0xC8C84 : 1cfc80 >			  ## RF_ble.c:4552:0
 1e19840:    00 f4 01 79       	[r7 + 0] |= 1			  ## RF_ble.c:4555:16
 1e19844:    20 fb 64 64       	r6 = 1867776			  ## RF_ble.c:4555:16
 1e19848:    c0 f4 01 69       	[r6 + 0] = 1			  ## RF_ble.c:4557:15
 1e1984c:    00 fb 01 13       	r0 = 4865 <_cpu0_sstack_begin+0x2B1 : 1301 >			  ## RF_ble.c:4560:17
 1e19850:    d8 4c             	[r6 + 52] = r0			  ## RF_ble.c:4560:17
 1e19852:    00 fb 16 0c       	r0 = 3094 <BTCTLER_CL_CODE_TOTAL+0xF4 : c16 >			  ## RF_ble.c:4528:14
 1e19856:    bf f3 ae b0       	call -40612 <malloc : 1e0f9b6 >			  ## RF_ble.c:4528:14
 1e1985a:    04 08             	r4 = r0			  ## RF_ble.c:4528:14
 1e1985c:    c0 ff 84 2d 00 00 	r0 = 11652 <bb_hdl : 2d84 >			  ## RF_ble.c:4528:12
 1e19862:    0c 40             	[r0 + 0] = r4			  ## RF_ble.c:4528:12
 1e19864:    02 38             	if (r4 != 0) goto 4 <le_hw_init+0x32 : 1e1986a >			  ## RF_ble.c:4528:12
 1e19866:    8f f3 bb 4d       	call 2005878 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1986a:    01 70             	r1 = 0			  ## RF_ble.c:4530:5
 1e1986c:    02 fb 16 0c       	r2 = 3094 <BTCTLER_CL_CODE_TOTAL+0xF4 : c16 >			  ## RF_ble.c:4530:5
 1e19870:    40 08             	r0 = r4			  ## RF_ble.c:4530:5
 1e19872:    97 f3 3d 6b       	call 3069562 <memset : 106ef0 >			  ## RF_ble.c:4530:5
 1e19876:    40 fc 24 00       	r0 = r4 + 36			  ## RF_ble.c:4532:58
 1e1987a:    48 48             	[r4 + 16] = r0			  ## RF_ble.c:4532:24
 1e1987c:    40 fc 40 00       	r0 = r4 + 64			  ## RF_ble.c:4533:69
 1e19880:    58 48             	[r4 + 20] = r0			  ## RF_ble.c:4533:31
 1e19882:    40 fc a8 02       	r0 = r4 + 680			  ## RF_ble.c:4534:51
 1e19886:    68 48             	[r4 + 24] = r0			  ## RF_ble.c:4534:28
 1e19888:    45 fc 85 08       	r5 = r4 + 2181			  ## RF_ble.c:4535:51
 1e1988c:    7d 48             	[r4 + 28] = r5			  ## RF_ble.c:4535:28
 1e1988e:    1c 4e             	[r7 + 4] = r4			  ## RF_ble.c:4543:19
 1e19890:    41 fc 16 0c       	r1 = r4 + 3094			  ## RF_ble.c:4545:45
 1e19894:    09 4f             	[r7 + 64] = r1			  ## RF_ble.c:4545:19
 1e19896:    01 fb dd 05       	r1 = 1501 <BTCTLER_CONTROLLER_DATA_SIZE+0x11F : 5dd >			  ## hw_dma.c:34:18
 1e1989a:    bf f3 b1 6b       	call -75934 <lbuf_init_btctrler : 1e07000 >			  ## hw_dma.c:34:18
 1e1989e:    c4 ff b0 20 00 00 	r4 = 8368 <gatt_client_conn_handle : 20b0 >			  ## hw_dma.c:36:16
 1e198a4:    10 f6 dc 40       	[r4 + 220] = r0			  ## hw_dma.c:34:16
 1e198a8:    01 fb 91 03       	r1 = 913 <NVRAM_DATA_SIZE+0x4D : 391 >			  ## hw_dma.c:36:18
 1e198ac:    50 08             	r0 = r5			  ## hw_dma.c:36:18
 1e198ae:    bf f3 a7 6b       	call -75954 <lbuf_init_btctrler : 1e07000 >			  ## hw_dma.c:36:18
 1e198b2:    10 f6 e0 40       	[r4 + 224] = r0			  ## hw_dma.c:36:16
 1e198b6:    c2 ff 62 b0 e1 01 	r2 = 31567970 <ble_event_irq_handler : 1e1b062 >			  ## RF_ble.c:4564:5
 1e198bc:    70 72             	r0 = 39			  ## RF_ble.c:4564:5
 1e198be:    21 70             	r1 = 2			  ## RF_ble.c:4564:5
 1e198c0:    bf f3 62 b1       	call -40252 <request_irq : 1e0fb88 >			  ## RF_ble.c:4564:5
 1e198c4:    c2 ff 4c b9 e1 01 	r2 = 31570252 <ble_rx_irq_handler : 1e1b94c >			  ## RF_ble.c:4565:5
 1e198ca:    60 72             	r0 = 38			  ## RF_ble.c:4565:5
 1e198cc:    21 70             	r1 = 2			  ## RF_ble.c:4565:5
 1e198ce:    bf f3 5b b1       	call -40266 <request_irq : 1e0fb88 >			  ## RF_ble.c:4565:5
 1e198d2:    00 f4 20 6a       	[r6 + 0] |= 8192			  ## RF_ble.c:1724:5
 1e198d6:    00 f4 40 6a       	[r6 + 0] |= 16384			  ## RF_ble.c:1725:5
 1e198da:    00 4c             	r0 = [r6 + 0]			  ## RF_ble.c:1726:5
 1e198dc:    70 b2             	r0 &= 4294967279			  ## RF_ble.c:1726:5
 1e198de:    08 4c             	[r6 + 0] = r0			  ## RF_ble.c:1726:5
 1e198e0:    20 4c             	r0 = [r6 + 8]			  ## RF_ble.c:1736:5
 1e198e2:    01 fb 00 fc       	r1 = -1024 <bank_code_load_addr+0x1DC608 : 1fffc00 >			  ## RF_ble.c:1736:5
 1e198e6:    50 b3             	r0 &= r1			  ## RF_ble.c:1736:5
 1e198e8:    00 fd 46 09       	r0 = r0 | 70			  ## RF_ble.c:1736:5
 1e198ec:    28 4c             	[r6 + 8] = r0			  ## RF_ble.c:1736:5
 1e198ee:    20 4c             	r0 = [r6 + 8]			  ## RF_ble.c:1737:5
 1e198f0:    30 fd f8 0a       	r0 = r0 & 4294903807			  ## RF_ble.c:1737:5
 1e198f4:    00 fd 78 0a       	r0 = r0 | 30720			  ## RF_ble.c:1737:5
 1e198f8:    28 4c             	[r6 + 8] = r0			  ## RF_ble.c:1737:5
 1e198fa:    30 4c             	r0 = [r6 + 12]			  ## RF_ble.c:1738:5
 1e198fc:    50 b3             	r0 &= r1			  ## RF_ble.c:1738:5
 1e198fe:    00 fd 46 09       	r0 = r0 | 70			  ## RF_ble.c:1738:5
 1e19902:    38 4c             	[r6 + 12] = r0			  ## RF_ble.c:1738:5
 1e19904:    40 4c             	r0 = [r6 + 16]			  ## RF_ble.c:1739:5
 1e19906:    30 fd ff 09       	r0 = r0 & 4294967040			  ## RF_ble.c:1739:5
 1e1990a:    00 fd 3e 09       	r0 = r0 | 62			  ## RF_ble.c:1739:5
 1e1990e:    48 4c             	[r6 + 16] = r0			  ## RF_ble.c:1739:5
 1e19910:    40 4c             	r0 = [r6 + 16]			  ## RF_ble.c:1740:5
 1e19912:    30 fd ff 0a       	r0 = r0 & 4294902015			  ## RF_ble.c:1740:5
 1e19916:    00 fd 3e 0a       	r0 = r0 | 15872			  ## RF_ble.c:1740:5
 1e1991a:    48 4c             	[r6 + 16] = r0			  ## RF_ble.c:1740:5
 1e1991c:    50 4c             	r0 = [r6 + 20]			  ## RF_ble.c:1741:5
 1e1991e:    30 fd ff 09       	r0 = r0 & 4294967040			  ## RF_ble.c:1741:5
 1e19922:    00 fd 1e 09       	r0 = r0 | 30			  ## RF_ble.c:1741:5
 1e19926:    58 4c             	[r6 + 20] = r0			  ## RF_ble.c:1741:5
 1e19928:    60 4c             	r0 = [r6 + 24]			  ## RF_ble.c:1742:5
 1e1992a:    30 fd ff 09       	r0 = r0 & 4294967040			  ## RF_ble.c:1742:5
 1e1992e:    00 fd 14 09       	r0 = r0 | 20			  ## RF_ble.c:1742:5
 1e19932:    68 4c             	[r6 + 24] = r0			  ## RF_ble.c:1742:5
 1e19934:    60 4c             	r0 = [r6 + 24]			  ## RF_ble.c:1743:5
 1e19936:    30 fd ff 0a       	r0 = r0 & 4294902015			  ## RF_ble.c:1743:5
 1e1993a:    00 fd 14 0a       	r0 = r0 | 5120			  ## RF_ble.c:1743:5
 1e1993e:    68 4c             	[r6 + 24] = r0			  ## RF_ble.c:1743:5
 1e19940:    57 01             	{pc, r7-r4} = [sp++]			  ## RF_ble.c:4568:1


hw_alloc_rx:
 1e19942:    34 00             	[--sp] = rets			  ## RF_ble.c:175:0
 1e19944:    41 91             	r1 = r0 + 20			  ## RF_ble.c:178:53
 1e19946:    00 70             	r0 = 0			  ## RF_ble.c:178:27
 1e19948:    bf f3 7d 6c       	call -75526 <hw_dma_alloc : 1e07246 >			  ## RF_ble.c:178:27
 1e1994c:    02 08             	r2 = r0			  ## RF_ble.c:178:27
 1e1994e:    05 24             	if (r2 == 0) goto 10 <hw_alloc_rx+0x18 : 1e1995a >			  ## RF_ble.c:178:27
 1e19950:    60 ff 03 29 02 00 	if ((r2 & 3) == 0) goto 4 <hw_alloc_rx+0x18 : 1e1995a >
 1e19956:    8f f3 43 4d       	call 2005638 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1995a:    20 08             	r0 = r2			  ## RF_ble.c:183:5
 1e1995c:    30 00             	pc = [sp++]			  ## RF_ble.c:183:5


PHY_TO_BLE:
 1e1995e:    34 00             	[--sp] = rets			  ## RF_ble.c:135:0
 1e19960:    c1 ff 84 2d 00 00 	r1 = 11652 <bb_hdl : 2d84 >			  ## RF_ble.c:135:0
 1e19966:    01 42             	r1 = [r1 + 0]			  ## RF_ble.c:135:0
 1e19968:    62 b0             	r2 = r0 - r1			  ## RF_ble.c:135:0
 1e1996a:    c0 ff ff ff 00 00 	r0 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## RF_ble.c:135:0
 1e19970:    02 f2 02 30       	if (r2 < r0) goto 4 <PHY_TO_BLE+0x1A : 1e19978 >			  ## RF_ble.c:135:0
 1e19974:    8f f3 34 4d       	call 2005608 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e19978:    20 08             	r0 = r2			  ## RF_ble.c:137:5
 1e1997a:    30 00             	pc = [sp++]			  ## RF_ble.c:137:5


ble_hw_tx:
 1e1997c:    76 01             	[--sp] = {rets, r6-r4}			  ## RF_ble.c:239:0
 1e1997e:    15 08             	r5 = r1			  ## RF_ble.c:239:0
 1e19980:    03 08             	r3 = r0			  ## RF_ble.c:239:0
 1e19982:    20 6b             	r0 = b[r5 + 18] (u)			  ## RF_ble.c:239:0
 1e19984:    06 46             	r6 = [r3 + 0]			  ## RF_ble.c:241:34
 1e19986:    24 08             	r4 = r2
 1e19988:    07 28             	if (r4 == 0) goto 14 <ble_hw_tx+0x1C : 1e19998 >
 1e1998a:    0d 20             	if (r0 == 0) goto 26 <ble_hw_tx+0x2A : 1e199a6 >
 1e1998c:    40 9b             	r0 = r5 + 20			  ## RF_ble.c:253:44
 1e1998e:    e7 17             	call -50 <PHY_TO_BLE : 1e1995e >			  ## RF_ble.c:253:33
 1e19990:    a8 5c             	h[r6 + 20] = r0			  ## RF_ble.c:253:31
 1e19992:    20 6b             	r0 = b[r5 + 18] (u)			  ## RF_ble.c:254:9
 1e19994:    00 c2             	r0 = r0 << 8			  ## RF_ble.c:254:9
 1e19996:    08 18             	goto 16 <ble_hw_tx+0x2C : 1e199a8 >			  ## RF_ble.c:254:9
 1e19998:    1d 20             	if (r0 == 0) goto 58 <ble_hw_tx+0x58 : 1e199d4 >
 1e1999a:    40 9b             	r0 = r5 + 20			  ## RF_ble.c:246:44
 1e1999c:    e0 17             	call -64 <PHY_TO_BLE : 1e1995e >			  ## RF_ble.c:246:33
 1e1999e:    98 5c             	h[r6 + 18] = r0			  ## RF_ble.c:246:31
 1e199a0:    20 6b             	r0 = b[r5 + 18] (u)			  ## RF_ble.c:247:9
 1e199a2:    00 c2             	r0 = r0 << 8			  ## RF_ble.c:247:9
 1e199a4:    18 18             	goto 48 <ble_hw_tx+0x5A : 1e199d6 >			  ## RF_ble.c:247:9
 1e199a6:    00 70             	r0 = 0
 1e199a8:    81 5a             	r1 = h[r5 + 16] (u)			  ## RF_ble.c:255:35
 1e199aa:    22 fd 0f 19       	r2 = r1 & 15			  ## RF_ble.c:255:72
 1e199ae:    89 d0             	r1 = r1 >> 2			  ## RF_ble.c:255:41
 1e199b0:    21 fd 30 19       	r1 = r1 & 48			  ## RF_ble.c:255:47
 1e199b4:    51 b4             	r1 |= r2			  ## RF_ble.c:255:66
 1e199b6:    c9 5c             	h[r6 + 24] = r1			  ## RF_ble.c:255:28
 1e199b8:    e1 5c             	r1 = h[r6 + 28] (u)			  ## RF_ble.c:256:25
 1e199ba:    82 5a             	r2 = h[r5 + 16] (u)			  ## RF_ble.c:257:52
 1e199bc:    21 fd 04 19       	r1 = r1 & 4			  ## RF_ble.c:256:14
 1e199c0:    50 b2             	r0 |= r1			  ## RF_ble.c:257:45
 1e199c2:    91 d1             	r1 = r2 >> 6			  ## RF_ble.c:257:55
 1e199c4:    21 fd 08 19       	r1 = r1 & 8			  ## RF_ble.c:257:55
 1e199c8:    50 b2             	r0 |= r1			  ## RF_ble.c:257:61
 1e199ca:    82 fd 20 12       	r1 = uextra(r2, p:4, l:2)			  ## RF_ble.c:257:72
 1e199ce:    50 b2             	r0 |= r1			  ## RF_ble.c:257:66
 1e199d0:    e8 5c             	h[r6 + 28] = r0			  ## RF_ble.c:257:28
 1e199d2:    16 18             	goto 44 <ble_hw_tx+0x84 : 1e19a00 >			  ## RF_ble.c:257:28
 1e199d4:    00 70             	r0 = 0
 1e199d6:    81 5a             	r1 = h[r5 + 16] (u)			  ## RF_ble.c:248:35
 1e199d8:    22 fd 0f 19       	r2 = r1 & 15			  ## RF_ble.c:248:72
 1e199dc:    89 d0             	r1 = r1 >> 2			  ## RF_ble.c:248:41
 1e199de:    21 fd 30 19       	r1 = r1 & 48			  ## RF_ble.c:248:47
 1e199e2:    51 b4             	r1 |= r2			  ## RF_ble.c:248:66
 1e199e4:    b9 5c             	h[r6 + 22] = r1			  ## RF_ble.c:248:28
 1e199e6:    d1 5c             	r1 = h[r6 + 26] (u)			  ## RF_ble.c:249:25
 1e199e8:    82 5a             	r2 = h[r5 + 16] (u)			  ## RF_ble.c:250:52
 1e199ea:    21 fd 04 19       	r1 = r1 & 4			  ## RF_ble.c:249:14
 1e199ee:    50 b2             	r0 |= r1			  ## RF_ble.c:250:45
 1e199f0:    91 d1             	r1 = r2 >> 6			  ## RF_ble.c:250:55
 1e199f2:    21 fd 08 19       	r1 = r1 & 8			  ## RF_ble.c:250:55
 1e199f6:    50 b2             	r0 |= r1			  ## RF_ble.c:250:61
 1e199f8:    82 fd 20 12       	r1 = uextra(r2, p:4, l:2)			  ## RF_ble.c:250:72
 1e199fc:    50 b2             	r0 |= r1			  ## RF_ble.c:250:66
 1e199fe:    d8 5c             	h[r6 + 26] = r0			  ## RF_ble.c:250:28
 1e19a00:    80 67             	r0 = b[r3 + 24] (u)			  ## RF_ble.c:263:17
 1e19a02:    09 20             	if (r0 == 0) goto 18 <ble_hw_tx+0x9A : 1e19a16 >			  ## RF_ble.c:263:17
 1e19a04:    09 28             	if (r4 == 0) goto 18 <ble_hw_tx+0x9C : 1e19a18 >
 1e19a06:    e0 5c             	r0 = h[r6 + 28] (u)			  ## RF_ble.c:265:9
 1e19a08:    01 67             	r1 = b[r3 + 16] (u)			  ## RF_ble.c:265:9
 1e19a0a:    70 b2             	r0 &= 4294967279			  ## RF_ble.c:265:9
 1e19a0c:    09 c1             	r1 = r1 << 4			  ## RF_ble.c:265:9
 1e19a0e:    21 fd 10 19       	r1 = r1 & 16			  ## RF_ble.c:265:9
 1e19a12:    50 b2             	r0 |= r1			  ## RF_ble.c:265:9
 1e19a14:    e8 5c             	h[r6 + 28] = r0			  ## RF_ble.c:265:9
 1e19a16:    56 01             	{pc, r6-r4} = [sp++]			  ## RF_ble.c:267:1
 1e19a18:    d0 5c             	r0 = h[r6 + 26] (u)			  ## RF_ble.c:264:26
 1e19a1a:    01 67             	r1 = b[r3 + 16] (u)			  ## RF_ble.c:264:26
 1e19a1c:    70 b2             	r0 &= 4294967279			  ## RF_ble.c:264:26
 1e19a1e:    09 c1             	r1 = r1 << 4			  ## RF_ble.c:264:26
 1e19a20:    21 fd 10 19       	r1 = r1 & 16			  ## RF_ble.c:264:26
 1e19a24:    50 b2             	r0 |= r1			  ## RF_ble.c:264:26
 1e19a26:    d8 5c             	h[r6 + 26] = r0			  ## RF_ble.c:264:26
 1e19a28:    56 01             	{pc, r6-r4} = [sp++]			  ## RF_ble.c:267:1


__hw_tx_buf_proess:
 1e19a2a:    7e 01             	[--sp] = {rets, r14-r4}			  ## RF_ble.c:2377:0
 1e19a2c:    5a 0b             	sp += -332			  ## RF_ble.c:2377:0
 1e19a2e:    08 08             	r8 = r0			  ## RF_ble.c:2377:0
 1e19a30:    07 40             	r7 = [r0 + 0]			  ## RF_ble.c:2378:34
 1e19a32:    19 08             	r9 = r1
 1e19a34:    88 c0             	r0 = r1 << 2
 1e19a36:    70 09             	r0 += r7
 1e19a38:    0a fc 80 01       	r10 = r0 + 384
 1e19a3c:    01 f6 00 a0       	r1 = [r10 + 0]
 1e19a40:    7e fc 50 01       	r14 = r7 + 336
 1e19a44:    e4 24             	if (r2 == 0) goto 456 <__hw_tx_buf_proess+0x1E4 : 1e19c0e >			  ## RF_ble.c:2384:9
 1e19a46:    7d fc a0 01       	r13 = r7 + 416
 1e19a4a:    14 22             	if (r1 == 0) goto 40 <__hw_tx_buf_proess+0x4A : 1e19a74 >
 1e19a4c:    00 f6 3c d0       	r0 = [r13 + 60]			  ## RF_ble.c:2358:13
 1e19a50:    07 20             	if (r0 == 0) goto 14 <__hw_tx_buf_proess+0x36 : 1e19a60 >			  ## RF_ble.c:2358:13
 1e19a52:    22 40             	r2 = [r0 + 8]			  ## RF_ble.c:2358:37
 1e19a54:    05 24             	if (r2 == 0) goto 10 <__hw_tx_buf_proess+0x36 : 1e19a60 >
 1e19a56:    00 f6 38 d0       	r0 = [r13 + 56]			  ## RF_ble.c:2359:43
 1e19a5a:    82 00             	call r2			  ## RF_ble.c:2359:9
 1e19a5c:    01 f6 00 a0       	r1 = [r10 + 0]
 1e19a60:    32 42             	r2 = [r1 + 12]			  ## RF_ble.c:2387:32
 1e19a62:    05 24             	if (r2 == 0) goto 10 <__hw_tx_buf_proess+0x44 : 1e19a6e >			  ## RF_ble.c:2387:32
 1e19a64:    00 f6 38 d0       	r0 = [r13 + 56]			  ## RF_ble.c:2388:49
 1e19a68:    82 00             	call r2			  ## RF_ble.c:2388:17
 1e19a6a:    01 f6 00 a0       	r1 = [r10 + 0]			  ## RF_ble.c:2388:17
 1e19a6e:    10 08             	r0 = r1			  ## RF_ble.c:2390:13
 1e19a70:    bf f3 4d 40       	call -98150 <hw_dma_free : 1e01b0e >			  ## RF_ble.c:2390:13
 1e19a74:    00 f9 f5 71       	r0 = b[r7 + 501] (u)			  ## RF_ble.c:2393:17
 1e19a78:    06 70             	r6 = 0			  ## RF_ble.c:2393:17
 1e19a7a:    05 30             	if (r0 != 0) goto 10 <__hw_tx_buf_proess+0x5C : 1e19a86 >			  ## RF_ble.c:2393:17
 1e19a7c:    e0 fc 40 00       	r0 = r14 + 64			  ## RF_ble.c:2395:38
 1e19a80:    bf f3 05 6c       	call -75766 <hw_dma_pop : 1e0728e >			  ## RF_ble.c:2395:22
 1e19a84:    06 08             	r6 = r0			  ## RF_ble.c:2395:22
 1e19a86:    08 3c             	if (r6 != 0) goto 16 <__hw_tx_buf_proess+0x6E : 1e19a98 >
 1e19a88:    00 f9 f4 71       	r0 = b[r7 + 500] (u)			  ## RF_ble.c:2399:13
 1e19a8c:    05 30             	if (r0 != 0) goto 10 <__hw_tx_buf_proess+0x6E : 1e19a98 >			  ## RF_ble.c:2399:13
 1e19a8e:    e0 fc 48 00       	r0 = r14 + 72			  ## RF_ble.c:2401:38
 1e19a92:    bf f3 fc 6b       	call -75784 <hw_dma_pop : 1e0728e >			  ## RF_ble.c:2401:22
 1e19a96:    06 08             	r6 = r0			  ## RF_ble.c:2401:22
 1e19a98:    7c fc 60 00       	r12 = r7 + 96
 1e19a9c:    cc 2c             	if (r6 == 0) goto 408 <__hw_tx_buf_proess+0x20C : 1e19c36 >
 1e19a9e:    02 f6 48 e0       	r2 = [r14 + 72]			  ## list.h:124:18
 1e19aa2:    e3 fc 48 00       	r3 = r14 + 72			  ## RF_ble.c:2422:13
 1e19aa6:    00 70             	r0 = 0
 1e19aa8:    11 70             	r1 = 1
 1e19aaa:    32 f2 01 10       	if (r2 != r3) goto 2 <__hw_tx_buf_proess+0x86 : 1e19ab0 >
 1e19aae:    01 70             	r1 = 0			  ## RF_ble.c:2422:13
 1e19ab0:    82 5c             	r2 = h[r6 + 16] (u)			  ## RF_ble.c:2422:13
 1e19ab2:    f2 b4             	r2 &= 4294966783			  ## RF_ble.c:2422:13
 1e19ab4:    c1 fd 48 21       	r2 <= insert(r1, p:9, l:1)			  ## RF_ble.c:2422:13
 1e19ab8:    8a 5c             	h[r6 + 16] = r2			  ## RF_ble.c:2422:13
 1e19aba:    10 f5 48 01       	[sp+328] = r0			  ## RF_ble.c:1880:8
 1e19abe:    10 f5 44 01       	[sp+324] = r0			  ## RF_ble.c:1880:8
 1e19ac2:    10 f5 40 01       	[sp+320] = r0			  ## RF_ble.c:1880:8
 1e19ac6:    10 f5 3c 01       	[sp+316] = r0			  ## RF_ble.c:1880:8
 1e19aca:    c0 a1             	r0 = sp + 28			  ## RF_ble.c:1880:8
 1e19acc:    01 70             	r1 = 0			  ## RF_ble.c:1882:8
 1e19ace:    02 fb 13 01       	r2 = 275 <DRIVER_RAM_TOTAL+0x21 : 113 >			  ## RF_ble.c:1882:8
 1e19ad2:    97 f3 0d 6a       	call 3068954 <memset : 106ef0 >			  ## RF_ble.c:1882:8
 1e19ad6:    80 5c             	r0 = h[r6 + 16] (u)			  ## RF_ble.c:1883:19
 1e19ad8:    82 fd 20 00       	r0 = uextra(r0, p:4, l:2)			  ## RF_ble.c:1883:19
 1e19adc:    d0 f5 1b 00       	b[sp+27] = r0			  ## RF_ble.c:1883:8
 1e19ae0:    00 f9 01 d0       	r0 = b[r13 + 1] (u)			  ## RF_ble.c:1886:19
 1e19ae4:    73 20             	if (r0 == 0) goto 230 <__hw_tx_buf_proess+0x1A2 : 1e19bcc >			  ## RF_ble.c:1886:19
 1e19ae6:    00 f6 54 e0       	r0 = [r14 + 84]			  ## RF_ble.c:1890:25
 1e19aea:    d0 f5 2f 01       	b[sp+303] = r0			  ## RF_ble.c:1890:14
 1e19aee:    01 d2             	r1 = r0 >> 8			  ## RF_ble.c:1891:38
 1e19af0:    d1 f5 30 01       	b[sp+304] = r1			  ## RF_ble.c:1891:14
 1e19af4:    01 d4             	r1 = r0 >> 16			  ## RF_ble.c:1892:38
 1e19af6:    d1 f5 31 01       	b[sp+305] = r1			  ## RF_ble.c:1892:14
 1e19afa:    00 d6             	r0 = r0 >> 24			  ## RF_ble.c:1893:38
 1e19afc:    d0 f5 32 01       	b[sp+306] = r0			  ## RF_ble.c:1893:14
 1e19b00:    00 f9 02 d0       	r0 = b[r13 + 2] (u)			  ## RF_ble.c:1894:25
 1e19b04:    d0 f5 33 01       	b[sp+307] = r0			  ## RF_ble.c:1894:14
 1e19b08:    01 f9 02 e0       	r1 = b[r14 + 2] (u)			  ## RF_ble.c:1895:13
 1e19b0c:    61 e0 03 10       	if (r1 != 6) goto 6 <__hw_tx_buf_proess+0xEC : 1e19b16 >			  ## RF_ble.c:1895:13
 1e19b10:    90 b3             	r0 |= 128			  ## RF_ble.c:1897:18
 1e19b12:    d0 f5 33 01       	b[sp+307] = r0			  ## RF_ble.c:1897:18
 1e19b16:    00 f9 0e d0       	r0 = b[r13 + 14] (u)			  ## RF_ble.c:1899:5
 1e19b1a:    01 f9 12 d0       	r1 = b[r13 + 18] (u)			  ## RF_ble.c:1899:5
 1e19b1e:    02 f9 0c d0       	r2 = b[r13 + 12] (u)			  ## RF_ble.c:1899:5
 1e19b22:    0b f9 0d d0       	r11 = b[r13 + 13] (u)			  ## RF_ble.c:1899:5
 1e19b26:    03 f9 13 d0       	r3 = b[r13 + 19] (u)			  ## RF_ble.c:1899:5
 1e19b2a:    07 f9 11 d0       	r7 = b[r13 + 17] (u)			  ## RF_ble.c:1899:5
 1e19b2e:    04 f9 10 d0       	r4 = b[r13 + 16] (u)			  ## RF_ble.c:1899:5
 1e19b32:    05 f9 0f d0       	r5 = b[r13 + 15] (u)			  ## RF_ble.c:1899:5
 1e19b36:    d3 f5 3b 01       	b[sp+315] = r3			  ## RF_ble.c:1899:5
 1e19b3a:    d7 f5 39 01       	b[sp+313] = r7			  ## RF_ble.c:1899:5
 1e19b3e:    d4 f5 38 01       	b[sp+312] = r4			  ## RF_ble.c:1899:5
 1e19b42:    d5 f5 37 01       	b[sp+311] = r5			  ## RF_ble.c:1899:5
 1e19b46:    db f5 35 01       	b[sp+309] = r11			  ## RF_ble.c:1899:5
 1e19b4a:    d2 f5 34 01       	b[sp+308] = r2			  ## RF_ble.c:1899:5
 1e19b4e:    c8 fd 40 13       	r1 <= insert(r3, p:8, l:8)			  ## RF_ble.c:1899:5
 1e19b52:    d0 fd 80 41       	r4 <= insert(r1, p:16, l:16)			  ## RF_ble.c:1899:5
 1e19b56:    21 d4             	r1 = r4 >> 16			  ## RF_ble.c:1899:5
 1e19b58:    d1 f5 3a 01       	b[sp+314] = r1			  ## RF_ble.c:1899:5
 1e19b5c:    c8 fd 40 05       	r0 <= insert(r5, p:8, l:8)			  ## RF_ble.c:1899:5
 1e19b60:    d0 fd 80 20       	r2 <= insert(r0, p:16, l:16)			  ## RF_ble.c:1899:5
 1e19b64:    10 d4             	r0 = r2 >> 16			  ## RF_ble.c:1899:5
 1e19b66:    d0 f5 36 01       	b[sp+310] = r0			  ## RF_ble.c:1899:5
 1e19b6a:    20 6d             	r0 = b[r6 + 18] (u)			  ## RF_ble.c:1903:60
 1e19b6c:    01 70             	r1 = 0			  ## RF_ble.c:1903:60
 1e19b6e:    59 02             	[sp+20] = r1			  ## RF_ble.c:1903:5
 1e19b70:    41 70             	r1 = 4			  ## RF_ble.c:1903:5
 1e19b72:    49 02             	[sp+16] = r1			  ## RF_ble.c:1903:5
 1e19b74:    e1 fb 3c 01       	r1 = sp + 316			  ## RF_ble.c:1903:5
 1e19b78:    39 02             	[sp+12] = r1			  ## RF_ble.c:1903:5
 1e19b7a:    c1 a1             	r1 = sp + 28			  ## RF_ble.c:1903:5
 1e19b7c:    29 02             	[sp+8] = r1			  ## RF_ble.c:1903:5
 1e19b7e:    18 02             	[sp+4] = r0			  ## RF_ble.c:1903:5
 1e19b80:    4b 9d             	r11 = r6 + 20			  ## RF_ble.c:1903:50
 1e19b82:    e0 fc 64 00       	r0 = r14 + 100			  ## RF_ble.c:1903:19
 1e19b86:    e1 fb 2f 01       	r1 = sp + 303			  ## RF_ble.c:1903:19
 1e19b8a:    b2 a1             	r2 = sp + 27			  ## RF_ble.c:1903:19
 1e19b8c:    13 70             	r3 = 1			  ## RF_ble.c:1903:5
 1e19b8e:    1b f5 00 00       	[sp] = r11			  ## RF_ble.c:1903:5
 1e19b92:    bf f3 2e 6c       	call -75684 <ccm_memory_v2 : 1e073f2 >			  ## RF_ble.c:1903:5
 1e19b96:    00 f6 54 e0       	r0 = [r14 + 84]			  ## RF_ble.c:1906:26
 1e19b9a:    10 80             	r0 += 1			  ## RF_ble.c:1906:26
 1e19b9c:    10 f6 54 e0       	[r14 + 84] = r0			  ## RF_ble.c:1906:26
 1e19ba0:    f0 ef 02 10       	if (r0 != -1) goto 4 <__hw_tx_buf_proess+0x17E : 1e19ba8 >			  ## RF_ble.c:1906:26
 1e19ba4:    8f f3 1c 4c       	call 2005048 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e19ba8:    25 6d             	r5 = b[r6 + 18] (u)			  ## RF_ble.c:1908:30
 1e19baa:    c1 a1             	r1 = sp + 28			  ## RF_ble.c:1908:30
 1e19bac:    b0 08             	r0 = r11			  ## RF_ble.c:1908:5
 1e19bae:    52 08             	r2 = r5			  ## RF_ble.c:1908:5
 1e19bb0:    97 f3 98 69       	call 3068720 <memcpy : 106ee4 >			  ## RF_ble.c:1908:5
 1e19bb4:    00 f5 3c 01       	r0 = [sp+316]			  ## RF_ble.c:1909:5
 1e19bb8:    41 bd             	r1 = r6 + r5			  ## RF_ble.c:1909:21
 1e19bba:    48 63             	b[r1 + 20] = r0			  ## RF_ble.c:1909:5
 1e19bbc:    02 d6             	r2 = r0 >> 24			  ## RF_ble.c:1909:5
 1e19bbe:    7a 63             	b[r1 + 23] = r2			  ## RF_ble.c:1909:5
 1e19bc0:    02 d4             	r2 = r0 >> 16			  ## RF_ble.c:1909:5
 1e19bc2:    6a 63             	b[r1 + 22] = r2			  ## RF_ble.c:1909:5
 1e19bc4:    00 d2             	r0 = r0 >> 8			  ## RF_ble.c:1909:5
 1e19bc6:    58 63             	b[r1 + 21] = r0			  ## RF_ble.c:1909:5
 1e19bc8:    40 9a             	r0 = r5 + 4			  ## RF_ble.c:1910:13
 1e19bca:    28 6d             	b[r6 + 18] = r0			  ## RF_ble.c:1910:13
 1e19bcc:    16 f6 00 a0       	[r10 + 0] = r6			  ## RF_ble.c:2429:23
 1e19bd0:    80 08             	r0 = r8			  ## RF_ble.c:2436:9
 1e19bd2:    61 08             	r1 = r6			  ## RF_ble.c:2436:9
 1e19bd4:    92 08             	r2 = r9			  ## RF_ble.c:2436:9
 1e19bd6:    d2 16             	call -604 <ble_hw_tx : 1e1997c >			  ## RF_ble.c:2436:9
 1e19bd8:    00 f7 02 c0       	r0 = h[r12 + 2] (u)			  ## RF_ble.c:2439:9
 1e19bdc:    81 5c             	r1 = h[r6 + 16] (u)			  ## RF_ble.c:2439:9
 1e19bde:    70 b3             	r0 &= 4294967231			  ## RF_ble.c:2439:9
 1e19be0:    c9 d0             	r1 = r1 >> 3			  ## RF_ble.c:2439:9
 1e19be2:    21 fd 40 19       	r1 = r1 & 64			  ## RF_ble.c:2439:9
 1e19be6:    e0 fd 00 21       	r2 = r1 | r0			  ## RF_ble.c:2439:9
 1e19bea:    c1 fc 04 00       	r1 = r12 + 4			  ## RF_ble.c:2442:62
 1e19bee:    c0 fc 05 00       	r0 = r12 + 5			  ## RF_ble.c:2442:40
 1e19bf2:    12 f7 02 c0       	h[r12 + 2] = r2			  ## RF_ble.c:2439:9
 1e19bf6:    09 e0 01 10       	if (r9 != 0) goto 2 <__hw_tx_buf_proess+0x1D2 : 1e19bfc >			  ## RF_ble.c:2439:9
 1e19bfa:    10 08             	r0 = r1			  ## RF_ble.c:2442:21
 1e19bfc:    01 60             	r1 = b[r0 + 0] (u)			  ## RF_ble.c:2443:9
 1e19bfe:    71 b0             	r1 &= 4294967294			  ## RF_ble.c:2443:9
 1e19c00:    09 60             	b[r0 + 0] = r1			  ## RF_ble.c:2443:9
 1e19c02:    21 4c             	r1 = [r6 + 8]			  ## RF_ble.c:2445:17
 1e19c04:    1f 22             	if (r1 == 0) goto 62 <__hw_tx_buf_proess+0x21A : 1e19c44 >			  ## RF_ble.c:2445:17
 1e19c06:    00 f6 38 d0       	r0 = [r13 + 56]			  ## RF_ble.c:2446:30
 1e19c0a:    81 00             	call r1			  ## RF_ble.c:2446:13
 1e19c0c:    1b 18             	goto 54 <__hw_tx_buf_proess+0x21A : 1e19c44 >			  ## RF_ble.c:2446:13
 1e19c0e:    1a 22             	if (r1 == 0) goto 52 <__hw_tx_buf_proess+0x21A : 1e19c44 >
 1e19c10:    80 52             	r0 = h[r1 + 16] (u)			  ## RF_ble.c:2452:22
 1e19c12:    29 f3 17 00       	if ((r0 & 512) != 0) goto 46 <__hw_tx_buf_proess+0x21A : 1e19c44 >			  ## RF_ble.c:2452:22
 1e19c16:    03 f6 48 e0       	r3 = [r14 + 72]			  ## list.h:124:18
 1e19c1a:    e4 fc 48 00       	r4 = r14 + 72			  ## RF_ble.c:2453:17
 1e19c1e:    12 70             	r2 = 1
 1e19c20:    43 f2 01 10       	if (r3 != r4) goto 2 <__hw_tx_buf_proess+0x1FC : 1e19c26 >
 1e19c24:    02 70             	r2 = 0			  ## RF_ble.c:2453:17
 1e19c26:    f0 b4             	r0 &= 4294966783			  ## RF_ble.c:2453:17
 1e19c28:    c1 fd 48 02       	r0 <= insert(r2, p:9, l:1)			  ## RF_ble.c:2458:21
 1e19c2c:    88 52             	h[r1 + 16] = r0			  ## RF_ble.c:2459:28
 1e19c2e:    80 08             	r0 = r8			  ## RF_ble.c:2462:17
 1e19c30:    92 08             	r2 = r9			  ## RF_ble.c:2462:17
 1e19c32:    a4 16             	call -696 <ble_hw_tx : 1e1997c >			  ## RF_ble.c:2462:17
 1e19c34:    07 18             	goto 14 <__hw_tx_buf_proess+0x21A : 1e19c44 >
 1e19c36:    00 f7 02 c0       	r0 = h[r12 + 2] (u)			  ## RF_ble.c:2408:13
 1e19c3a:    70 b3             	r0 &= 4294967231			  ## RF_ble.c:2408:13
 1e19c3c:    10 f7 02 c0       	h[r12 + 2] = r0			  ## RF_ble.c:2408:13
 1e19c40:    c0 f4 00 a9       	[r10 + 0] = 0			  ## RF_ble.c:2412:27
 1e19c44:    a6 0a             	sp += 332
 1e19c46:    5e 01             	{pc, r14-r4} = [sp++]			  ## RF_ble.c:2468:1


__hw_tx_process:
 1e19c48:    77 01             	[--sp] = {rets, r7-r4}			  ## RF_ble.c:2507:0
 1e19c4a:    fe 0b             	sp += -4			  ## RF_ble.c:2507:0
 1e19c4c:    04 08             	r4 = r0			  ## RF_ble.c:2507:0
 1e19c4e:    07 48             	r7 = [r4 + 0]			  ## RF_ble.c:2508:34
 1e19c50:    61 2e             	if (r7 == 0) goto 194 <__hw_tx_process+0xCC : 1e19d14 >
 1e19c52:    00 f9 52 71       	r0 = b[r7 + 338] (u)			  ## RF_ble.c:2517:13
 1e19c56:    70 b0             	r0 &= 4294967294			  ## RF_ble.c:2517:36
 1e19c58:    60 e0 5c 10       	if (r0 != 6) goto 184 <__hw_tx_process+0xCC : 1e19d14 >			  ## RF_ble.c:2517:36
 1e19c5c:    97 f3 9e 68       	call 3068220 <local_irq_disable : 106d9c >			  ## RF_ble.c:2521:5
 1e19c60:    08 00             	csync			  ## RF_ble.c:2521:5
 1e19c62:    08 00             	csync			  ## RF_ble.c:2522:9
 1e19c64:    76 fc ec 01       	r6 = r7 + 492			  ## RF_ble.c:2522:9
 1e19c68:    00 4c             	r0 = [r6 + 0]			  ## RF_ble.c:2522:9
 1e19c6a:    10 e0 51 00       	if (r0 == 1) goto 162 <__hw_tx_process+0xC8 : 1e19d10 >			  ## RF_ble.c:2522:9
 1e19c6e:    97 f3 95 68       	call 3068202 <local_irq_disable : 106d9c >			  ## atomic.h:47:5
 1e19c72:    08 00             	csync			  ## atomic.h:47:5
 1e19c74:    15 70             	r5 = 1			  ## atomic.h:47:5
 1e19c76:    0d 4c             	[r6 + 0] = r5			  ## atomic.h:49:16
 1e19c78:    97 f3 8e 68       	call 3068188 <local_irq_enable : 106d98 >			  ## atomic.h:51:5
 1e19c7c:    97 f3 8c 68       	call 3068184 <local_irq_enable : 106d98 >			  ## RF_ble.c:2528:5
 1e19c80:    70 5e             	r0 = h[r7 + 14] (u)			  ## RF_ble.c:2540:41
 1e19c82:    71 fc 64 00       	r1 = r7 + 100			  ## RF_ble.c:2540:41
 1e19c86:    02 62             	r2 = b[r1 + 0] (u)			  ## RF_ble.c:2541:42
 1e19c88:    20 fd 01 09       	r0 = r0 & 1			  ## RF_ble.c:2540:31
 1e19c8c:    13 62             	r3 = b[r1 + 1] (u)			  ## RF_ble.c:2542:42
 1e19c8e:    52 c0             	r2 = r2 << 1			  ## RF_ble.c:2541:32
 1e19c90:    22 fd 02 29       	r2 = r2 & 2			  ## RF_ble.c:2541:32
 1e19c94:    50 b4             	r0 |= r2			  ## RF_ble.c:2541:32
 1e19c96:    9a c0             	r2 = r3 << 2			  ## RF_ble.c:2542:32
 1e19c98:    22 fd 04 29       	r2 = r2 & 4			  ## RF_ble.c:2542:32
 1e19c9c:    50 b4             	r0 |= r2			  ## RF_ble.c:2542:32
 1e19c9e:    d0 f5 02 00       	b[sp+2] = r0			  ## RF_ble.c:2542:32
 1e19ca2:    72 5e             	r2 = h[r7 + 14] (u)			  ## RF_ble.c:2545:41
 1e19ca4:    03 62             	r3 = b[r1 + 0] (u)			  ## RF_ble.c:2546:42
 1e19ca6:    22 fd 01 29       	r2 = r2 & 1			  ## RF_ble.c:2545:31
 1e19caa:    11 62             	r1 = b[r1 + 1] (u)			  ## RF_ble.c:2547:42
 1e19cac:    5b c0             	r3 = r3 << 1			  ## RF_ble.c:2546:32
 1e19cae:    23 fd 02 39       	r3 = r3 & 2			  ## RF_ble.c:2546:32
 1e19cb2:    52 b6             	r2 |= r3			  ## RF_ble.c:2546:32
 1e19cb4:    89 c0             	r1 = r1 << 2			  ## RF_ble.c:2547:32
 1e19cb6:    21 fd 04 19       	r1 = r1 & 4			  ## RF_ble.c:2547:32
 1e19cba:    51 b4             	r1 |= r2			  ## RF_ble.c:2547:32
 1e19cbc:    d0 b2             	r0 ^= r1			  ## RF_ble.c:2549:34
 1e19cbe:    d1 f5 03 00       	b[sp+3] = r1			  ## RF_ble.c:2547:32
 1e19cc2:    70 e0 06 80       	if (r0 > 7) goto 12 <__hw_tx_process+0x8A : 1e19cd2 >			  ## RF_ble.c:2547:32
 1e19cc6:    11 70             	r1 = 1
 1e19cc8:    f8 fd 00 01       	r0 = r1 << r0
 1e19ccc:    61 ff 8a 09 01 00 	if ((r0 & 138) != 0) goto 2 <__hw_tx_process+0x8C : 1e19cd4 >
 1e19cd2:    05 70             	r5 = 0
 1e19cd4:    20 a0             	r0 = sp + 2
 1e19cd6:    50 ba             	r0 |= r5			  ## RF_ble.c:2568:46
 1e19cd8:    07 60             	r7 = b[r0 + 0] (u)			  ## RF_ble.c:2568:46
 1e19cda:    25 fd 01 79       	r5 = r7 & 1			  ## RF_ble.c:2568:46
 1e19cde:    10 9a             	r0 = r5 + 1			  ## RF_ble.c:2569:20
 1e19ce0:    fa fd 00 07       	r0 = r7 >> r0			  ## RF_ble.c:2569:20
 1e19ce4:    22 fd 01 09       	r2 = r0 & 1			  ## RF_ble.c:2569:20
 1e19ce8:    40 08             	r0 = r4			  ## RF_ble.c:2573:5
 1e19cea:    51 08             	r1 = r5			  ## RF_ble.c:2573:5
 1e19cec:    9e 16             	call -708 <__hw_tx_buf_proess : 1e19a2a >			  ## RF_ble.c:2573:5
 1e19cee:    20 70             	r0 = 2			  ## RF_ble.c:2577:20
 1e19cf0:    00 f3 01 70       	if ((r7 & 1) == 0) goto 2 <__hw_tx_process+0xAE : 1e19cf6 >			  ## RF_ble.c:2577:20
 1e19cf4:    10 70             	r0 = 1
 1e19cf6:    fa fd 00 07       	r0 = r7 >> r0
 1e19cfa:    22 fd 01 09       	r2 = r0 & 1
 1e19cfe:    11 fd 01 59       	r1 = r5 ^ 1			  ## RF_ble.c:2576:20
 1e19d02:    40 08             	r0 = r4			  ## RF_ble.c:2581:5
 1e19d04:    92 16             	call -732 <__hw_tx_buf_proess : 1e19a2a >			  ## RF_ble.c:2581:5
 1e19d06:    97 f3 49 68       	call 3068050 <local_irq_disable : 106d9c >			  ## atomic.h:47:5
 1e19d0a:    08 00             	csync			  ## atomic.h:47:5
 1e19d0c:    c0 f4 00 69       	[r6 + 0] = 0			  ## atomic.h:49:16
 1e19d10:    97 f3 42 68       	call 3068036 <local_irq_enable : 106d98 >
 1e19d14:    02 0a             	sp += 4
 1e19d16:    57 01             	{pc, r7-r4} = [sp++]			  ## RF_ble.c:2585:1


__set_latency_disable:
 1e19d18:    79 01             	[--sp] = {rets, r9-r4}			  ## RF_ble.c:346:0
 1e19d1a:    04 08             	r4 = r0			  ## RF_ble.c:346:0
 1e19d1c:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:347:31
 1e19d1e:    11 70             	r1 = 1			  ## RF_ble.c:350:27
 1e19d20:    11 f9 57 01       	b[r0 + 343] = r1			  ## RF_ble.c:350:27
 1e19d24:    97 f3 3a 68       	call 3068020 <local_irq_disable : 106d9c >			  ## RF_ble.c:281:5
 1e19d28:    08 00             	csync			  ## RF_ble.c:281:5
 1e19d2a:    c8 ff 84 2d 00 00 	r8 = 11652 <bb_hdl : 2d84 >			  ## RF_ble.c:147:19
 1e19d30:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:147:19
 1e19d34:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e19d36:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e19d38:    c9 71             	r9 = 28			  ## RF_ble.c:147:17
 1e19d3a:    e0 fe 90 00       	r0 = r0 / r9 (s)			  ## RF_ble.c:147:17
 1e19d3e:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:286:50
 1e19d40:    07 fb f0 07       	r7 = 2032 <DRIVER_CODE_TOTAL+0x6A : 7f0 >			  ## RF_ble.c:286:50
 1e19d44:    50 bf             	r0 &= r7			  ## RF_ble.c:286:50
 1e19d46:    21 9f             	r1 = r7 + 18			  ## RF_ble.c:286:56
 1e19d48:    50 b2             	r0 |= r1			  ## RF_ble.c:286:56
 1e19d4a:    45 fb 64 94       	r5 = r9 + 1867776			  ## RF_ble.c:286:56
 1e19d4e:    08 4a             	[r5 + 0] = r0			  ## RF_ble.c:286:21
 1e19d50:    08 00             	csync			  ## RF_ble.c:287:5
 1e19d52:    20 4a             	r0 = [r5 + 8]			  ## RF_ble.c:288:13
 1e19d54:    c1 ff ff f7 00 00 	r1 = 63487 <BD19_SDK_RAM_SIZE+0xB : f7ff >			  ## RF_ble.c:355:31
 1e19d5a:    e2 fd 10 60       	r6 = r0 & r1			  ## RF_ble.c:355:31
 1e19d5e:    97 f3 1b 68       	call 3067958 <local_irq_enable : 106d98 >			  ## RF_ble.c:296:5
 1e19d62:    97 f3 1b 68       	call 3067958 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e19d66:    08 00             	csync			  ## RF_ble.c:304:5
 1e19d68:    1e 4a             	[r5 + 4] = r6			  ## RF_ble.c:306:21
 1e19d6a:    08 00             	csync			  ## RF_ble.c:307:5
 1e19d6c:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:147:19
 1e19d70:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e19d72:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e19d74:    e0 fe 90 00       	r0 = r0 / r9 (s)			  ## RF_ble.c:147:17
 1e19d78:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e19d7a:    50 bf             	r0 &= r7			  ## RF_ble.c:308:50
 1e19d7c:    51 9f             	r1 = r7 + 21			  ## RF_ble.c:308:67
 1e19d7e:    50 b2             	r0 |= r1			  ## RF_ble.c:308:67
 1e19d80:    08 4a             	[r5 + 0] = r0			  ## RF_ble.c:308:21
 1e19d82:    19 01             	{rets, r9-r4} = [sp++]			  ## RF_ble.c:310:5
 1e19d84:    d7 f3 08 68       	goto 3067920 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5


ble_latency_manualhold:
 1e19d88:    75 01             	[--sp] = {rets, r5, r4}			  ## RF_ble.c:460:0
 1e19d8a:    04 08             	r4 = r0			  ## RF_ble.c:460:0
 1e19d8c:    05 48             	r5 = [r4 + 0]			  ## RF_ble.c:461:34
 1e19d8e:    97 f3 05 68       	call 3067914 <local_irq_disable : 106d9c >			  ## RF_ble.c:463:5
 1e19d92:    08 00             	csync			  ## RF_ble.c:463:5
 1e19d94:    00 f9 56 51       	r0 = b[r5 + 342] (u)			  ## RF_ble.c:465:13
 1e19d98:    02 20             	if (r0 == 0) goto 4 <ble_latency_manualhold+0x16 : 1e19d9e >			  ## RF_ble.c:465:13
 1e19d9a:    40 08             	r0 = r4			  ## RF_ble.c:471:5
 1e19d9c:    bd 17             	call -134 <__set_latency_disable : 1e19d18 >			  ## RF_ble.c:471:5
 1e19d9e:    15 01             	{rets, r5, r4} = [sp++]
 1e19da0:    d7 f3 fa 67       	goto 3067892 <local_irq_enable : 106d98 >


le_hw_send_packet_high:
 1e19da4:    7b 01             	[--sp] = {rets, r11-r4}			  ## RF_ble.c:4148:0
 1e19da6:    04 08             	r4 = r0			  ## RF_ble.c:4148:0
 1e19da8:    06 48             	r6 = [r4 + 0]			  ## RF_ble.c:4149:34
 1e19daa:    00 f7 ea 61       	r0 = h[r6 + 490] (u)
 1e19dae:    a5 02             	r5 = [sp+40]
 1e19db0:    38 08             	r8 = r3
 1e19db2:    2a 08             	r10 = r2
 1e19db4:    1b 08             	r11 = r1
 1e19db6:    50 f2 02 a0       	ifs (r0 >= r5) goto 4 <le_hw_send_packet_high+0x1A : 1e19dbe >
 1e19dba:    8f f3 11 4b       	call 2004514 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e19dbe:    09 f5 24 00       	r9 = [sp+36]
 1e19dc2:    b0 71             	r0 = 27			  ## RF_ble.c:4153:14
 1e19dc4:    be 15             	call -1156 <hw_alloc_rx : 1e19942 >			  ## RF_ble.c:4153:14
 1e19dc6:    07 08             	r7 = r0			  ## RF_ble.c:4153:14
 1e19dc8:    03 3e             	if (r7 != 0) goto 6 <le_hw_send_packet_high+0x2C : 1e19dd0 >			  ## RF_ble.c:4153:14
 1e19dca:    8f f3 09 4b       	call 2004498 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e19dce:    07 70             	r7 = 0			  ## cpu.h:148:5
 1e19dd0:    01 70             	r1 = 0			  ## RF_ble.c:4161:5
 1e19dd2:    42 71             	r2 = 20			  ## RF_ble.c:4161:5
 1e19dd4:    70 08             	r0 = r7			  ## RF_ble.c:4161:5
 1e19dd6:    97 f3 8b 68       	call 3068182 <memset : 106ef0 >			  ## RF_ble.c:4161:5
 1e19dda:    1b f6 08 70       	[r7 + 8] = r11			  ## RF_ble.c:4163:25
 1e19dde:    1a f6 0c 70       	[r7 + 12] = r10			  ## RF_ble.c:4164:25
 1e19de2:    f0 fd 20 08       	r0 = r8 << 4			  ## RF_ble.c:4166:5
 1e19de6:    20 fd 30 09       	r0 = r0 & 48			  ## RF_ble.c:4166:5
 1e19dea:    88 5e             	h[r7 + 16] = r0			  ## RF_ble.c:4166:5
 1e19dec:    2d 6f             	b[r7 + 18] = r5			  ## RF_ble.c:4167:5
 1e19dee:    40 9f             	r0 = r7 + 20			  ## RF_ble.c:4172:16
 1e19df0:    91 08             	r1 = r9			  ## RF_ble.c:4172:5
 1e19df2:    52 08             	r2 = r5			  ## RF_ble.c:4172:5
 1e19df4:    97 f3 76 68       	call 3068140 <memcpy : 106ee4 >			  ## RF_ble.c:4172:5
 1e19df8:    65 fc 46 01       	r5 = r6 + 326			  ## RF_ble.c:4172:5
 1e19dfc:    50 fc 4a 00       	r0 = r5 + 74			  ## RF_ble.c:4176:22
 1e19e00:    71 08             	r1 = r7			  ## RF_ble.c:4176:5
 1e19e02:    bf f3 37 6a       	call -76690 <hw_dma_push : 1e07274 >			  ## RF_ble.c:4176:5
 1e19e06:    00 5a             	r0 = h[r5 + 0] (u)
 1e19e08:    31 fd 1f 0a       	r1 = r0 & 4294959359			  ## RF_ble.c:882:23
 1e19e0c:    01 fd 1e 1a       	r1 = r1 | 7680			  ## RF_ble.c:882:23
 1e19e10:    09 5a             	h[r5 + 0] = r1			  ## RF_ble.c:882:23
 1e19e12:    2d f3 05 00       	if ((r0 & 8192) != 0) goto 10 <le_hw_send_packet_high+0x7C : 1e19e20 >			  ## RF_ble.c:882:23
 1e19e16:    e0 71             	r0 = 30			  ## RF_ble.c:886:28
 1e19e18:    10 f7 60 60       	h[r6 + 96] = r0			  ## RF_ble.c:886:28
 1e19e1c:    10 f7 5e 60       	h[r6 + 94] = r0			  ## RF_ble.c:887:28
 1e19e20:    40 08             	r0 = r4			  ## RF_ble.c:4180:5
 1e19e22:    12 17             	call -476 <__hw_tx_process : 1e19c48 >			  ## RF_ble.c:4180:5
 1e19e24:    a0 5a             	r0 = h[r5 + 20] (u)			  ## RF_ble.c:410:17
 1e19e26:    10 e0 02 80       	if (r0 > 1) goto 4 <le_hw_send_packet_high+0x8A : 1e19e2e >			  ## RF_ble.c:410:17
 1e19e2a:    20 70             	r0 = 2
 1e19e2c:    a8 5a             	h[r5 + 20] = r0
 1e19e2e:    40 08             	r0 = r4			  ## RF_ble.c:4183:5
 1e19e30:    1b 01             	{rets, r11-r4} = [sp++]			  ## RF_ble.c:4183:5
 1e19e32:    aa 1f             	goto -172 <ble_latency_manualhold : 1e19d88 >			  ## RF_ble.c:4183:5


__set_local_addr:
 1e19e34:    75 01             	[--sp] = {rets, r5, r4}			  ## RF_ble.c:755:0
 1e19e36:    05 08             	r5 = r0			  ## RF_ble.c:755:0
 1e19e38:    30 5a             	r0 = h[r5 + 6] (u)			  ## RF_ble.c:758:23
 1e19e3a:    24 08             	r4 = r2			  ## RF_ble.c:758:23
 1e19e3c:    90 b1             	r0 |= 8			  ## RF_ble.c:758:23
 1e19e3e:    38 5a             	h[r5 + 6] = r0			  ## RF_ble.c:758:23
 1e19e40:    10 70             	r0 = 1			  ## RF_ble.c:758:23
 1e19e42:    01 32             	if (r1 != 0) goto 2 <__set_local_addr+0x12 : 1e19e46 >			  ## RF_ble.c:758:23
 1e19e44:    00 70             	r0 = 0			  ## RF_ble.c:760:27
 1e19e46:    10 f9 68 51       	b[r5 + 360] = r0			  ## RF_ble.c:760:25
 1e19e4a:    50 fc 69 01       	r0 = r5 + 361			  ## RF_ble.c:762:5
 1e19e4e:    62 70             	r2 = 6			  ## RF_ble.c:762:5
 1e19e50:    41 08             	r1 = r4			  ## RF_ble.c:762:5
 1e19e52:    97 f3 47 68       	call 3068046 <memcpy : 106ee4 >			  ## RF_ble.c:762:5
 1e19e56:    10 68             	r0 = b[r4 + 1] (u)			  ## RF_ble.c:764:29
 1e19e58:    01 68             	r1 = b[r4 + 0] (u)			  ## RF_ble.c:764:45
 1e19e5a:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## RF_ble.c:764:43
 1e19e5e:    50 fc 52 00       	r0 = r5 + 82			  ## RF_ble.c:764:43
 1e19e62:    09 50             	h[r0 + 0] = r1			  ## RF_ble.c:764:26
 1e19e64:    31 68             	r1 = b[r4 + 3] (u)			  ## RF_ble.c:765:29
 1e19e66:    22 68             	r2 = b[r4 + 2] (u)			  ## RF_ble.c:765:45
 1e19e68:    d8 fd 40 21       	r2 <= insert(r1, p:8, l:24)			  ## RF_ble.c:765:43
 1e19e6c:    1a 50             	h[r0 + 2] = r2			  ## RF_ble.c:765:26
 1e19e6e:    51 68             	r1 = b[r4 + 5] (u)			  ## RF_ble.c:766:29
 1e19e70:    42 68             	r2 = b[r4 + 4] (u)			  ## RF_ble.c:766:45
 1e19e72:    d8 fd 40 21       	r2 <= insert(r1, p:8, l:24)			  ## RF_ble.c:766:43
 1e19e76:    2a 50             	h[r0 + 4] = r2			  ## RF_ble.c:766:26
 1e19e78:    55 01             	{pc, r5, r4} = [sp++]			  ## RF_ble.c:767:1


__set_peer_addr:
 1e19e7a:    75 01             	[--sp] = {rets, r5, r4}			  ## RF_ble.c:801:0
 1e19e7c:    24 08             	r4 = r2			  ## RF_ble.c:801:0
 1e19e7e:    05 08             	r5 = r0			  ## RF_ble.c:801:0
 1e19e80:    10 70             	r0 = 1			  ## RF_ble.c:801:0
 1e19e82:    01 32             	if (r1 != 0) goto 2 <__set_peer_addr+0xC : 1e19e86 >			  ## RF_ble.c:801:0
 1e19e84:    00 70             	r0 = 0			  ## RF_ble.c:802:26
 1e19e86:    10 f9 6f 51       	b[r5 + 367] = r0			  ## RF_ble.c:802:24
 1e19e8a:    50 fc 70 01       	r0 = r5 + 368			  ## RF_ble.c:804:5
 1e19e8e:    62 70             	r2 = 6			  ## RF_ble.c:804:5
 1e19e90:    41 08             	r1 = r4			  ## RF_ble.c:804:5
 1e19e92:    97 f3 27 68       	call 3067982 <memcpy : 106ee4 >			  ## RF_ble.c:804:5
 1e19e96:    10 68             	r0 = b[r4 + 1] (u)			  ## RF_ble.c:806:30
 1e19e98:    01 68             	r1 = b[r4 + 0] (u)			  ## RF_ble.c:806:46
 1e19e9a:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## RF_ble.c:806:44
 1e19e9e:    50 fc 4c 00       	r0 = r5 + 76			  ## RF_ble.c:806:44
 1e19ea2:    09 50             	h[r0 + 0] = r1			  ## RF_ble.c:806:27
 1e19ea4:    31 68             	r1 = b[r4 + 3] (u)			  ## RF_ble.c:807:30
 1e19ea6:    22 68             	r2 = b[r4 + 2] (u)			  ## RF_ble.c:807:46
 1e19ea8:    d8 fd 40 21       	r2 <= insert(r1, p:8, l:24)			  ## RF_ble.c:807:44
 1e19eac:    1a 50             	h[r0 + 2] = r2			  ## RF_ble.c:807:27
 1e19eae:    51 68             	r1 = b[r4 + 5] (u)			  ## RF_ble.c:808:30
 1e19eb0:    42 68             	r2 = b[r4 + 4] (u)			  ## RF_ble.c:808:46
 1e19eb2:    d8 fd 40 21       	r2 <= insert(r1, p:8, l:24)			  ## RF_ble.c:808:44
 1e19eb6:    2a 50             	h[r0 + 4] = r2			  ## RF_ble.c:808:27
 1e19eb8:    55 01             	{pc, r5, r4} = [sp++]			  ## RF_ble.c:809:1


__set_channel_map:
 1e19eba:    7a 01             	[--sp] = {rets, r10-r4}			  ## RF_ble.c:813:0
 1e19ebc:    08 70             	r8 = 0			  ## RF_ble.c:813:0
 1e19ebe:    19 70             	r9 = 1			  ## RF_ble.c:813:0
 1e19ec0:    0a 70             	r10 = 0			  ## RF_ble.c:813:0
 1e19ec2:    04 70             	r4 = 0			  ## RF_ble.c:813:0
 1e19ec4:    62 c0             	r2 = r4 << 1			  ## RF_ble.c:814:9
 1e19ec6:    27 94             	r7 = r2 + 2			  ## RF_ble.c:814:9
 1e19ec8:    46 08             	r6 = r4			  ## RF_ble.c:814:9
 1e19eca:    54 e2 23 a0       	ifs (r4 >= 37) goto 70 <__set_channel_map+0x5A : 1e19f14 >
 1e19ece:    04 28             	if (r4 == 0) goto 8 <__set_channel_map+0x1E : 1e19ed8 >
 1e19ed0:    b4 e0 03 10       	if (r4 != 11) goto 6 <__set_channel_map+0x20 : 1e19eda >
 1e19ed4:    2a 70             	r10 = 2
 1e19ed6:    01 18             	goto 2 <__set_channel_map+0x20 : 1e19eda >
 1e19ed8:    0a 70             	r10 = 0
 1e19eda:    03 b1             	r3 = r0 + r4			  ## RF_ble.c:836:29
 1e19edc:    16 f9 68 30       	b[r3 + 104] = r6			  ## RF_ble.c:836:29
 1e19ee0:    80 fb 70 2a       	r2 = r10 + r7			  ## RF_ble.c:837:31
 1e19ee4:    12 f9 b8 30       	b[r3 + 184] = r2			  ## RF_ble.c:837:29
 1e19ee8:    23 fd 07 49       	r3 = r4 & 7			  ## RF_ble.c:838:31
 1e19eec:    e5 d8             	r5 = r4 >>> 3			  ## RF_ble.c:838:23
 1e19eee:    05 fa 00 15       	r5 = b[r1+r5] (u)			  ## RF_ble.c:838:13
 1e19ef2:    f8 fd 30 39       	r3 = r9 << r3			  ## RF_ble.c:838:31
 1e19ef6:    16 80             	r6 += 1			  ## RF_ble.c:838:13
 1e19ef8:    27 80             	r7 += 2			  ## RF_ble.c:838:13
 1e19efa:    14 80             	r4 += 1			  ## RF_ble.c:837:34
 1e19efc:    35 f0 e5 ff       	if ((r5 & r3) == 0) goto -54 <__set_channel_map+0x10 : 1e19eca >
 1e19f00:    80 fb 80 30       	r3 = r0 + r8			  ## RF_ble.c:839:13
 1e19f04:    65 fc ff ff       	r5 = r6 + -1			  ## RF_ble.c:839:35
 1e19f08:    15 f9 90 30       	b[r3 + 144] = r5			  ## RF_ble.c:839:35
 1e19f0c:    12 f9 e0 30       	b[r3 + 224] = r2			  ## RF_ble.c:840:37
 1e19f10:    18 80             	r8 += 1			  ## RF_ble.c:840:33
 1e19f12:    d8 1f             	goto -80 <__set_channel_map+0xA : 1e19ec4 >
 1e19f14:    03 fc 8d 00       	r3 = r0 + 141			  ## RF_ble.c:844:17
 1e19f18:    04 70             	r4 = 0			  ## RF_ble.c:844:17
 1e19f1a:    55 72             	r5 = 37
 1e19f1c:    c2 ff 98 64 e1 01 	r2 = 31548568 <bluetooth_base_uuid+0x10 : 1e16498 >
 1e19f22:    06 fa 00 42       	r6 = b[r4+r2] (u)			  ## RF_ble.c:844:17
 1e19f26:    07 b7             	r7 = r3 + r4			  ## RF_ble.c:848:34
 1e19f28:    0d 6e             	b[r7 + 0] = r5			  ## RF_ble.c:848:34
 1e19f2a:    16 f9 50 70       	b[r7 + 80] = r6			  ## RF_ble.c:849:34
 1e19f2e:    15 f9 28 70       	b[r7 + 40] = r5			  ## RF_ble.c:850:34
 1e19f32:    16 f9 78 70       	b[r7 + 120] = r6			  ## RF_ble.c:851:34
 1e19f36:    14 80             	r4 += 1			  ## RF_ble.c:843:25
 1e19f38:    15 80             	r5 += 1			  ## RF_ble.c:843:19
 1e19f3a:    34 e0 f2 1f       	if (r4 != 3) goto -28 <__set_channel_map+0x68 : 1e19f22 >			  ## RF_ble.c:843:19
 1e19f3e:    12 62             	r2 = b[r1 + 1] (u)			  ## RF_ble.c:854:23
 1e19f40:    03 62             	r3 = b[r1 + 0] (u)			  ## RF_ble.c:854:42
 1e19f42:    d8 fd 40 32       	r3 <= insert(r2, p:8, l:24)			  ## RF_ble.c:854:40
 1e19f46:    7b 51             	h[r0 + 46] = r3			  ## RF_ble.c:854:20
 1e19f48:    32 62             	r2 = b[r1 + 3] (u)			  ## RF_ble.c:855:23
 1e19f4a:    23 62             	r3 = b[r1 + 2] (u)			  ## RF_ble.c:855:42
 1e19f4c:    d8 fd 40 32       	r3 <= insert(r2, p:8, l:24)			  ## RF_ble.c:855:40
 1e19f50:    8b 51             	h[r0 + 48] = r3			  ## RF_ble.c:855:20
 1e19f52:    41 62             	r1 = b[r1 + 4] (u)			  ## RF_ble.c:856:36
 1e19f54:    21 fd 1f 19       	r1 = r1 & 31			  ## RF_ble.c:856:47
 1e19f58:    db fd 28 18       	r1 <= insert(r8, p:5, l:27)			  ## RF_ble.c:856:33
 1e19f5c:    99 51             	h[r0 + 50] = r1			  ## RF_ble.c:856:20
 1e19f5e:    71 51             	r1 = h[r0 + 46] (u)			  ## RF_ble.c:858:28
 1e19f60:    02 fc 50 02       	r2 = r0 + 592			  ## RF_ble.c:858:28
 1e19f64:    09 54             	h[r2 + 0] = r1			  ## RF_ble.c:858:18
 1e19f66:    81 51             	r1 = h[r0 + 48] (u)			  ## RF_ble.c:859:28
 1e19f68:    19 54             	h[r2 + 2] = r1			  ## RF_ble.c:859:18
 1e19f6a:    90 51             	r0 = h[r0 + 50] (u)			  ## RF_ble.c:860:28
 1e19f6c:    28 54             	h[r2 + 4] = r0			  ## RF_ble.c:860:18
 1e19f6e:    5a 01             	{pc, r10-r4} = [sp++]			  ## RF_ble.c:861:1


__set_hw_state:
 1e19f70:    75 01             	[--sp] = {rets, r5, r4}			  ## RF_ble.c:479:0
 1e19f72:    04 08             	r4 = r0			  ## RF_ble.c:479:0
 1e19f74:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:480:31
 1e19f76:    00 fc 52 01       	r0 = r0 + 338
 1e19f7a:    09 60             	b[r0 + 0] = r1			  ## RF_ble.c:482:22
 1e19f7c:    3b 50             	h[r0 + 6] = r3			  ## RF_ble.c:483:22
 1e19f7e:    4a 60             	b[r0 + 4] = r2			  ## RF_ble.c:484:22
 1e19f80:    05 70             	r5 = 0			  ## RF_ble.c:485:27
 1e19f82:    5d 60             	b[r0 + 5] = r5			  ## RF_ble.c:485:27
 1e19f84:    08 c3             	r0 = r1 << 12			  ## RF_ble.c:487:40
 1e19f86:    d1 c2             	r1 = r2 << 11			  ## RF_ble.c:487:63
 1e19f88:    50 b2             	r0 |= r1			  ## RF_ble.c:487:47
 1e19f8a:    e0 fd 30 50       	r5 = r0 | r3			  ## RF_ble.c:487:70
 1e19f8e:    97 f3 05 67       	call 3067402 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e19f92:    08 00             	csync			  ## RF_ble.c:304:5
 1e19f94:    c0 ff 1c 80 1c 00 	r0 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >			  ## RF_ble.c:304:5
 1e19f9a:    1d 40             	[r0 + 4] = r5			  ## RF_ble.c:306:21
 1e19f9c:    08 00             	csync			  ## RF_ble.c:307:5
 1e19f9e:    c1 ff 84 2d 00 00 	r1 = 11652 <bb_hdl : 2d84 >			  ## RF_ble.c:147:19
 1e19fa4:    01 42             	r1 = [r1 + 0]			  ## RF_ble.c:147:19
 1e19fa6:    41 42             	r1 = [r1 + 16]			  ## RF_ble.c:147:35
 1e19fa8:    61 b8             	r1 = r4 - r1			  ## RF_ble.c:147:17
 1e19faa:    c2 71             	r2 = 28			  ## RF_ble.c:147:17
 1e19fac:    e0 fe 20 11       	r1 = r1 / r2 (s)			  ## RF_ble.c:147:17
 1e19fb0:    09 c1             	r1 = r1 << 4			  ## RF_ble.c:308:50
 1e19fb2:    02 fb f0 07       	r2 = 2032 <DRIVER_CODE_TOTAL+0x6A : 7f0 >			  ## RF_ble.c:308:50
 1e19fb6:    51 b5             	r1 &= r2			  ## RF_ble.c:308:50
 1e19fb8:    52 81             	r2 += 21			  ## RF_ble.c:308:67
 1e19fba:    51 b4             	r1 |= r2			  ## RF_ble.c:308:67
 1e19fbc:    09 40             	[r0 + 0] = r1			  ## RF_ble.c:308:21
 1e19fbe:    15 01             	{rets, r5, r4} = [sp++]			  ## RF_ble.c:310:5
 1e19fc0:    d7 f3 ea 66       	goto 3067348 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5


__set_winoffset:
 1e19fc4:    77 01             	[--sp] = {rets, r7-r4}			  ## RF_ble.c:503:0
 1e19fc6:    15 08             	r5 = r1			  ## RF_ble.c:503:0
 1e19fc8:    04 08             	r4 = r0			  ## RF_ble.c:503:0
 1e19fca:    c7 ff 84 2d 00 00 	r7 = 11652 <bb_hdl : 2d84 >			  ## RF_ble.c:503:0
 1e19fd0:    c6 ff 1c 80 1c 00 	r6 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >			  ## RF_ble.c:503:0
 1e19fd6:    08 2a             	if (r5 == 0) goto 16 <__set_winoffset+0x24 : 1e19fe8 >			  ## RF_ble.c:504:9
 1e19fd8:    97 f3 e0 66       	call 3067328 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e19fdc:    08 00             	csync			  ## RF_ble.c:304:5
 1e19fde:    00 fd 80 5a       	r0 = r5 | 32768			  ## RF_ble.c:505:47
 1e19fe2:    18 4c             	[r6 + 4] = r0			  ## RF_ble.c:306:21
 1e19fe4:    08 00             	csync			  ## RF_ble.c:307:5
 1e19fe6:    06 18             	goto 12 <__set_winoffset+0x30 : 1e19ff4 >			  ## RF_ble.c:307:5
 1e19fe8:    97 f3 d8 66       	call 3067312 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e19fec:    08 00             	csync			  ## RF_ble.c:304:5
 1e19fee:    c1 f4 00 69       	[r6 + 4] = 0			  ## RF_ble.c:306:21
 1e19ff2:    08 00             	csync			  ## RF_ble.c:307:5
 1e19ff4:    00 4e             	r0 = [r7 + 0]
 1e19ff6:    40 40             	r0 = [r0 + 16]
 1e19ff8:    20 b8             	r0 = r4 - r0
 1e19ffa:    c1 71             	r1 = 28
 1e19ffc:    e0 fe 10 00       	r0 = r0 / r1 (s)
 1e1a000:    00 c1             	r0 = r0 << 4
 1e1a002:    20 fd 7f 00       	r0 = r0 & 4080
 1e1a006:    01 fb 05 10       	r1 = 4101 <sys_clock_limit+0x49 : 1005 >
 1e1a00a:    50 b2             	r0 |= r1
 1e1a00c:    08 4c             	[r6 + 0] = r0
 1e1a00e:    17 01             	{rets, r7-r4} = [sp++]
 1e1a010:    d7 f3 c2 66       	goto 3067268 <local_irq_enable : 106d98 >


__set_interval:
 1e1a014:    79 01             	[--sp] = {rets, r9-r4}			  ## RF_ble.c:333:0
 1e1a016:    04 08             	r4 = r0			  ## RF_ble.c:333:0
 1e1a018:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:334:31
 1e1a01a:    28 08             	r8 = r2
 1e1a01c:    02 20             	if (r0 == 0) goto 4 <__set_interval+0xE : 1e1a022 >
 1e1a01e:    11 f6 64 01       	[r0 + 356] = r1			  ## RF_ble.c:336:23
 1e1a022:    00 fb 71 02       	r0 = 625 <BTCTLER_CL_RAM_TOTAL+0x8D : 271 >			  ## RF_ble.c:338:43
 1e1a026:    e0 fe 00 71       	r7 = r1 / r0 (s)			  ## RF_ble.c:338:43
 1e1a02a:    e5 05             	r5 = r7.l (u)			  ## RF_ble.c:338:59
 1e1a02c:    97 f3 b6 66       	call 3067244 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e1a030:    08 00             	csync			  ## RF_ble.c:304:5
 1e1a032:    c6 ff 1c 80 1c 00 	r6 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >			  ## RF_ble.c:304:5
 1e1a038:    1d 4c             	[r6 + 4] = r5			  ## RF_ble.c:306:21
 1e1a03a:    08 00             	csync			  ## RF_ble.c:307:5
 1e1a03c:    c9 ff 84 2d 00 00 	r9 = 11652 <bb_hdl : 2d84 >			  ## RF_ble.c:147:19
 1e1a042:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:147:19
 1e1a046:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e1a048:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e1a04a:    c5 71             	r5 = 28			  ## RF_ble.c:147:17
 1e1a04c:    e0 fe 50 00       	r0 = r0 / r5 (s)			  ## RF_ble.c:147:17
 1e1a050:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e1a052:    20 fd 3f 00       	r0 = r0 & 3056			  ## RF_ble.c:308:50
 1e1a056:    01 fb 05 04       	r1 = 1029 <BTCTLER_LE_RAM_TOTAL+0x27 : 405 >			  ## RF_ble.c:308:67
 1e1a05a:    50 b2             	r0 |= r1			  ## RF_ble.c:308:67
 1e1a05c:    08 4c             	[r6 + 0] = r0			  ## RF_ble.c:308:21
 1e1a05e:    38 dc             	r0 = r7 >>> 16			  ## RF_ble.c:341:79
 1e1a060:    f0 fd 78 18       	r1 = r8 << 15			  ## RF_ble.c:341:42
 1e1a064:    e0 fd 00 71       	r7 = r1 | r0			  ## RF_ble.c:341:49
 1e1a068:    97 f3 96 66       	call 3067180 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5
 1e1a06c:    97 f3 96 66       	call 3067180 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e1a070:    08 00             	csync			  ## RF_ble.c:304:5
 1e1a072:    1f 4c             	[r6 + 4] = r7			  ## RF_ble.c:306:21
 1e1a074:    08 00             	csync			  ## RF_ble.c:307:5
 1e1a076:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:147:19
 1e1a07a:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e1a07c:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e1a07e:    e0 fe 50 00       	r0 = r0 / r5 (s)			  ## RF_ble.c:147:17
 1e1a082:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e1a084:    01 fb f0 03       	r1 = 1008 <BTCTLER_LE_RAM_TOTAL+0x12 : 3f0 >			  ## RF_ble.c:308:50
 1e1a088:    50 b3             	r0 &= r1			  ## RF_ble.c:308:50
 1e1a08a:    01 fb 05 3c       	r1 = 15365 <__hw_spi_clk_div+0x11 : 3c05 >			  ## RF_ble.c:308:67
 1e1a08e:    50 b2             	r0 |= r1			  ## RF_ble.c:308:67
 1e1a090:    08 4c             	[r6 + 0] = r0			  ## RF_ble.c:308:21
 1e1a092:    19 01             	{rets, r9-r4} = [sp++]			  ## RF_ble.c:310:5
 1e1a094:    d7 f3 80 66       	goto 3067136 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5


le_hw_ioctrl:
 1e1a098:    62 01             	[--sp] = {r3, r2}			  ## RF_ble.c:4395:0
 1e1a09a:    7e 01             	[--sp] = {rets, r14-r4}			  ## RF_ble.c:4395:0
 1e1a09c:    fe 0b             	sp += -4			  ## RF_ble.c:4395:0
 1e1a09e:    05 08             	r5 = r0			  ## RF_ble.c:4395:0
 1e1a0a0:    40 a3             	r0 = sp + 52			  ## RF_ble.c:4395:0
 1e1a0a2:    08 02             	[sp] = r0			  ## RF_ble.c:4397:5
 1e1a0a4:    71 e1 1f 83       	if (r1 > 23) goto 1598 <.GJTIE858_0_0_+0x5E6 : 1e1a6e6 >			  ## RF_ble.c:4397:5
 1e1a0a8:    04 4a             	r4 = [r5 + 0]			  ## RF_ble.c:4398:31
 1e1a0aa:    4b c0             	r3 = r1 << 1
 1e1a0ac:    c9 ff 84 2d 00 00 	r9 = 11652 <bb_hdl : 2d84 >
 1e1a0b2:    20 fb 64 a4       	r10 = 1867776
 1e1a0b6:    46 fc 40 00       	r6 = r4 + 64
 1e1a0ba:    4d fc 10 01       	r13 = r4 + 272
 1e1a0be:    4b fc 50 01       	r11 = r4 + 336
 1e1a0c2:    40 fc a0 01       	r0 = r4 + 416
 1e1a0c6:    42 fc e8 01       	r2 = r4 + 488
 1e1a0ca:    47 fc 4c 02       	r7 = r4 + 588
 1e1a0ce:    b3 00             	tbh [r3]


.GJTIL858_0_0_:
 1e1a0d0:    18 00     < 24 : 0x18 >
 1e1a0d2:    39 00     < 57 : 0x39 >
 1e1a0d4:    43 00     < 67 : 0x43 >
 1e1a0d6:    20 01     < 288 : 0x120 >
 1e1a0d8:    4e 00     < 78 : 0x4E >
 1e1a0da:    80 00     < 128 : 0x80 >
 1e1a0dc:    2b 01     < 299 : 0x12B >
 1e1a0de:    90 00     < 144 : 0x90 >
 1e1a0e0:    c6 01     < 454 : 0x1C6 >
 1e1a0e2:    b3 00     < 179 : 0xB3 >
 1e1a0e4:    dc 00     < 220 : 0xDC >
 1e1a0e6:    cd 01     < 461 : 0x1CD >
 1e1a0e8:    0b 03     < 779 : 0x30B >
 1e1a0ea:    da 01     < 474 : 0x1DA >
 1e1a0ec:    0b 03     < 779 : 0x30B >
 1e1a0ee:    ff 01     < 511 : 0x1FF >
 1e1a0f0:    0b 03     < 779 : 0x30B >
 1e1a0f2:    05 02     < 517 : 0x205 >
 1e1a0f4:    0b 02     < 523 : 0x20B >
 1e1a0f6:    e9 00     < 233 : 0xE9 >
 1e1a0f8:    f7 00     < 247 : 0xF7 >
 1e1a0fa:    11 02     < 529 : 0x211 >
 1e1a0fc:    06 01     < 262 : 0x106 >
 1e1a0fe:    17 01     < 279 : 0x117 >
 1e1a100:    01 02             	r1 = [sp]			  ## RF_ble.c:4404:39
 1e1a102:    42 92             	r2 = r1 + 4			  ## RF_ble.c:4404:39
 1e1a104:    0a 02             	[sp] = r2			  ## RF_ble.c:4404:39
 1e1a106:    01 42             	r1 = [r1 + 0]			  ## RF_ble.c:4404:39
 1e1a108:    22 62             	r2 = b[r1 + 2] (u)			  ## RF_ble.c:4404:9
 1e1a10a:    63 62             	r3 = b[r1 + 6] (u)			  ## RF_ble.c:4404:9
 1e1a10c:    04 62             	r4 = b[r1 + 0] (u)			  ## RF_ble.c:4404:9
 1e1a10e:    08 f9 01 10       	r8 = b[r1 + 1] (u)			  ## RF_ble.c:4404:9
 1e1a112:    76 62             	r6 = b[r1 + 7] (u)			  ## RF_ble.c:4404:9
 1e1a114:    57 62             	r7 = b[r1 + 5] (u)			  ## RF_ble.c:4404:9
 1e1a116:    45 62             	r5 = b[r1 + 4] (u)			  ## RF_ble.c:4404:9
 1e1a118:    31 62             	r1 = b[r1 + 3] (u)			  ## RF_ble.c:4404:9
 1e1a11a:    3e 61             	b[r0 + 19] = r6			  ## RF_ble.c:4404:9
 1e1a11c:    1f 61             	b[r0 + 17] = r7			  ## RF_ble.c:4404:9
 1e1a11e:    0d 61             	b[r0 + 16] = r5			  ## RF_ble.c:4404:9
 1e1a120:    f9 60             	b[r0 + 15] = r1			  ## RF_ble.c:4404:9
 1e1a122:    18 f9 0d 00       	b[r0 + 13] = r8			  ## RF_ble.c:4404:9
 1e1a126:    cc 60             	b[r0 + 12] = r4			  ## RF_ble.c:4404:9
 1e1a128:    c8 fd 40 36       	r3 <= insert(r6, p:8, l:8)			  ## RF_ble.c:4404:9
 1e1a12c:    d0 fd 80 53       	r5 <= insert(r3, p:16, l:16)			  ## RF_ble.c:4404:9
 1e1a130:    2b d4             	r3 = r5 >> 16			  ## RF_ble.c:4404:9
 1e1a132:    2b 61             	b[r0 + 18] = r3			  ## RF_ble.c:4404:9
 1e1a134:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## RF_ble.c:4404:9
 1e1a138:    d0 fd 80 42       	r4 <= insert(r2, p:16, l:16)			  ## RF_ble.c:4404:9
 1e1a13c:    21 d4             	r1 = r4 >> 16			  ## RF_ble.c:4404:9
 1e1a13e:    e9 60             	b[r0 + 14] = r1			  ## RF_ble.c:4404:9
 1e1a140:    d2 1a             	goto 1444 <.GJTIE858_0_0_+0x5E6 : 1e1a6e6 >			  ## RF_ble.c:4404:9
 1e1a142:    00 02             	r0 = [sp]			  ## RF_ble.c:4409:40
 1e1a144:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4409:40
 1e1a146:    09 02             	[sp] = r1			  ## RF_ble.c:4409:40
 1e1a148:    01 40             	r1 = [r0 + 0]			  ## RF_ble.c:4409:40
 1e1a14a:    b0 fc 64 00       	r0 = r11 + 100			  ## RF_ble.c:4409:9
 1e1a14e:    02 71             	r2 = 16			  ## RF_ble.c:4409:9
 1e1a150:    97 f3 c8 66       	call 3067280 <memcpy : 106ee4 >			  ## RF_ble.c:4409:9
 1e1a154:    c8 1a             	goto 1424 <.GJTIE858_0_0_+0x5E6 : 1e1a6e6 >			  ## RF_ble.c:4409:9
 1e1a156:    00 02             	r0 = [sp]			  ## RF_ble.c:4412:31
 1e1a158:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4412:31
 1e1a15a:    09 02             	[sp] = r1			  ## RF_ble.c:4412:31
 1e1a15c:    02 02             	r2 = [sp]			  ## RF_ble.c:4412:58
 1e1a15e:    01 60             	r1 = b[r0 + 0] (u)			  ## RF_ble.c:4412:31
 1e1a160:    40 94             	r0 = r2 + 4			  ## RF_ble.c:4412:58
 1e1a162:    08 02             	[sp] = r0			  ## RF_ble.c:4412:58
 1e1a164:    02 44             	r2 = [r2 + 0]			  ## RF_ble.c:4412:58
 1e1a166:    40 08             	r0 = r4			  ## RF_ble.c:4412:9
 1e1a168:    65 16             	call -822 <__set_local_addr : 1e19e34 >			  ## RF_ble.c:4412:9
 1e1a16a:    bd 1a             	goto 1402 <.GJTIE858_0_0_+0x5E6 : 1e1a6e6 >			  ## RF_ble.c:4412:9
 1e1a16c:    00 02             	r0 = [sp]			  ## RF_ble.c:4419:33
 1e1a16e:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4419:33
 1e1a170:    09 02             	[sp] = r1			  ## RF_ble.c:4419:33
 1e1a172:    01 02             	r1 = [sp]			  ## RF_ble.c:4419:54
 1e1a174:    04 40             	r4 = [r0 + 0]			  ## RF_ble.c:4419:33
 1e1a176:    40 92             	r0 = r1 + 4			  ## RF_ble.c:4419:54
 1e1a178:    08 02             	[sp] = r0			  ## RF_ble.c:4419:54
 1e1a17a:    07 42             	r7 = [r1 + 0]			  ## RF_ble.c:4419:54
 1e1a17c:    97 f3 0e 66       	call 3066908 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e1a180:    08 00             	csync			  ## RF_ble.c:304:5
 1e1a182:    14 f6 20 a0       	[r10 + 32] = r4			  ## RF_ble.c:306:21
 1e1a186:    08 00             	csync			  ## RF_ble.c:307:5
 1e1a188:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:147:19
 1e1a18c:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e1a18e:    20 ba             	r0 = r5 - r0			  ## RF_ble.c:147:17
 1e1a190:    c1 71             	r1 = 28			  ## RF_ble.c:147:17
 1e1a192:    e0 fe 10 00       	r0 = r0 / r1 (s)			  ## RF_ble.c:147:17
 1e1a196:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e1a198:    20 fd 3f 00       	r0 = r0 & 3056			  ## RF_ble.c:308:50
 1e1a19c:    01 fb 05 14       	r1 = 5125 <_cpu0_sstack_begin+0x3B5 : 1405 >			  ## RF_ble.c:308:67
 1e1a1a0:    50 b2             	r0 |= r1			  ## RF_ble.c:308:67
 1e1a1a2:    10 f6 1c a0       	[r10 + 28] = r0			  ## RF_ble.c:308:21
 1e1a1a6:    97 f3 f7 65       	call 3066862 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5
 1e1a1aa:    14 f7 0e b0       	h[r11 + 14] = r4			  ## RF_ble.c:524:18
 1e1a1ae:    10 9e             	r0 = r7 + 1			  ## RF_ble.c:525:39
 1e1a1b0:    10 f9 0d b0       	b[r11 + 13] = r0			  ## RF_ble.c:525:24
 1e1a1b4:    00 f7 36 d0       	r0 = h[r13 + 54] (u)
 1e1a1b8:    31 fd 1f 0a       	r1 = r0 & 4294959359			  ## RF_ble.c:882:23
 1e1a1bc:    01 fd 1e 1a       	r1 = r1 | 7680			  ## RF_ble.c:882:23
 1e1a1c0:    11 f7 36 d0       	h[r13 + 54] = r1			  ## RF_ble.c:882:23
 1e1a1c4:    2d f3 8f 02       	if ((r0 & 8192) != 0) goto 1310 <.GJTIE858_0_0_+0x5E6 : 1e1a6e6 >			  ## RF_ble.c:882:23
 1e1a1c8:    e0 71             	r0 = 30			  ## RF_ble.c:886:28
 1e1a1ca:    08 5d             	h[r6 + 32] = r0			  ## RF_ble.c:886:28
 1e1a1cc:    f8 5c             	h[r6 + 30] = r0			  ## RF_ble.c:887:28
 1e1a1ce:    8b 1a             	goto 1302 <.GJTIE858_0_0_+0x5E6 : 1e1a6e6 >			  ## RF_ble.c:887:28
 1e1a1d0:    00 02             	r0 = [sp]			  ## RF_ble.c:4423:28
 1e1a1d2:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4423:28
 1e1a1d4:    09 02             	[sp] = r1			  ## RF_ble.c:4423:28
 1e1a1d6:    01 02             	r1 = [sp]			  ## RF_ble.c:4423:49
 1e1a1d8:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:4423:28
 1e1a1da:    42 92             	r2 = r1 + 4			  ## RF_ble.c:4423:49
 1e1a1dc:    0a 02             	[sp] = r2			  ## RF_ble.c:4423:49
 1e1a1de:    01 42             	r1 = [r1 + 0]			  ## RF_ble.c:4423:49
 1e1a1e0:    19 59             	h[r4 + 34] = r1			  ## RF_ble.c:722:25
 1e1a1e2:    0a d4             	r2 = r1 >> 16			  ## RF_ble.c:724:36
 1e1a1e4:    2a 59             	h[r4 + 36] = r2			  ## RF_ble.c:724:25
 1e1a1e6:    10 f7 02 d0       	h[r13 + 2] = r0			  ## RF_ble.c:725:25
 1e1a1ea:    11 f6 3c d0       	[r13 + 60] = r1			  ## RF_ble.c:730:16
 1e1a1ee:    7b 1a             	goto 1270 <.GJTIE858_0_0_+0x5E6 : 1e1a6e6 >			  ## RF_ble.c:730:16
 1e1a1f0:    00 02             	r0 = [sp]			  ## RF_ble.c:4435:62
 1e1a1f2:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4435:62
 1e1a1f4:    09 02             	[sp] = r1			  ## RF_ble.c:4435:62
 1e1a1f6:    08 f6 00 00       	r8 = [r0 + 0]			  ## RF_ble.c:4435:62
 1e1a1fa:    00 f9 07 80       	r0 = b[r8 + 7] (u)			  ## RF_ble.c:1243:25
 1e1a1fe:    01 f9 02 b0       	r1 = b[r11 + 2] (u)			  ## RF_ble.c:1253:14
 1e1a202:    0a f7 08 80       	r10 = h[r8 + 8] (u)			  ## RF_ble.c:1253:14
 1e1a206:    02 fb e2 04       	r2 = 1250 <BTCTLER_CONTROLLER_DATA_SIZE+0x24 : 4e2 >			  ## RF_ble.c:1243:40
 1e1a20a:    80 0e             	r0 = r0 * r2			  ## RF_ble.c:1243:40
 1e1a20c:    00 fc 71 02       	r0 = r0 + 625			  ## RF_ble.c:1243:56
 1e1a210:    61 e0 7f 11       	if (r1 != 6) goto 766 <.GJTIE858_0_0_+0x412 : 1e1a512 >			  ## RF_ble.c:1253:9
 1e1a214:    18 59             	h[r4 + 34] = r0			  ## RF_ble.c:722:25
 1e1a216:    01 d4             	r1 = r0 >> 16			  ## RF_ble.c:724:36
 1e1a218:    29 59             	h[r4 + 36] = r1			  ## RF_ble.c:724:25
 1e1a21a:    21 73             	r1 = 50			  ## RF_ble.c:725:25
 1e1a21c:    11 f7 02 d0       	h[r13 + 2] = r1			  ## RF_ble.c:725:25
 1e1a220:    10 f6 3c d0       	[r13 + 60] = r0			  ## RF_ble.c:730:16
 1e1a224:    03 f7 0c 80       	r3 = h[r8 + 12] (u)			  ## RF_ble.c:1256:47
 1e1a228:    61 70             	r1 = 6			  ## RF_ble.c:1256:9
 1e1a22a:    02 70             	r2 = 0			  ## RF_ble.c:1256:9
 1e1a22c:    50 08             	r0 = r5			  ## RF_ble.c:1256:9
 1e1a22e:    a0 16             	call -704 <__set_hw_state : 1e19f70 >			  ## RF_ble.c:1256:9
 1e1a230:    f0 fd 08 4a       	r4 = r10 << 1			  ## RF_ble.c:1254:38
 1e1a234:    9d 19             	goto 826 <.GJTIE858_0_0_+0x470 : 1e1a570 >
 1e1a236:    01 02             	r1 = [sp]			  ## RF_ble.c:4438:36
 1e1a238:    40 92             	r0 = r1 + 4			  ## RF_ble.c:4438:36
 1e1a23a:    08 02             	[sp] = r0			  ## RF_ble.c:4438:36
 1e1a23c:    00 02             	r0 = [sp]			  ## RF_ble.c:4438:63
 1e1a23e:    02 62             	r2 = b[r1 + 0] (u)			  ## RF_ble.c:4438:36
 1e1a240:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4438:63
 1e1a242:    09 02             	[sp] = r1			  ## RF_ble.c:4438:63
 1e1a244:    11 70             	r1 = 1			  ## RF_ble.c:4438:63
 1e1a246:    01 34             	if (r2 != 0) goto 2 <.GJTIE858_0_0_+0x14A : 1e1a24a >			  ## RF_ble.c:4438:63
 1e1a248:    01 70             	r1 = 0			  ## RF_ble.c:1321:17
 1e1a24a:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:4438:63
 1e1a24c:    e2 59             	r2 = h[r4 + 60] (u)			  ## RF_ble.c:1322:35
 1e1a24e:    22 fd 7e 29       	r2 = r2 & 126			  ## RF_ble.c:1322:46
 1e1a252:    c1 fd 40 21       	r2 <= insert(r1, p:8, l:1)			  ## RF_ble.c:1322:79
 1e1a256:    01 fd 01 29       	r1 = r2 | 1			  ## RF_ble.c:1322:79
 1e1a25a:    e9 59             	h[r4 + 60] = r1			  ## RF_ble.c:1322:24
 1e1a25c:    e1 59             	r1 = h[r4 + 60] (u)			  ## RF_ble.c:1323:24
 1e1a25e:    11 b2             	r1 |= 16			  ## RF_ble.c:1323:24
 1e1a260:    e9 59             	h[r4 + 60] = r1			  ## RF_ble.c:1323:24
 1e1a262:    11 60             	r1 = b[r0 + 1] (u)			  ## RF_ble.c:1325:28
 1e1a264:    02 60             	r2 = b[r0 + 0] (u)			  ## RF_ble.c:1325:44
 1e1a266:    d8 fd 40 21       	r2 <= insert(r1, p:8, l:24)			  ## RF_ble.c:1325:42
 1e1a26a:    fa 59             	h[r4 + 62] = r2			  ## RF_ble.c:1325:25
 1e1a26c:    31 60             	r1 = b[r0 + 3] (u)			  ## RF_ble.c:1326:28
 1e1a26e:    22 60             	r2 = b[r0 + 2] (u)			  ## RF_ble.c:1326:44
 1e1a270:    d8 fd 40 21       	r2 <= insert(r1, p:8, l:24)			  ## RF_ble.c:1326:42
 1e1a274:    0a 5c             	h[r6 + 0] = r2			  ## RF_ble.c:1326:25
 1e1a276:    51 60             	r1 = b[r0 + 5] (u)			  ## RF_ble.c:1327:28
 1e1a278:    40 60             	r0 = b[r0 + 4] (u)			  ## RF_ble.c:1327:44
 1e1a27a:    d8 fd 40 01       	r0 <= insert(r1, p:8, l:24)			  ## RF_ble.c:1327:42
 1e1a27e:    18 5c             	h[r6 + 2] = r0			  ## RF_ble.c:1327:25
 1e1a280:    40 58             	r0 = h[r4 + 8] (u)			  ## RF_ble.c:1305:21
 1e1a282:    f0 b1             	r0 &= 4294967287			  ## RF_ble.c:1305:21
 1e1a284:    48 58             	h[r4 + 8] = r0			  ## RF_ble.c:1305:21
 1e1a286:    2f 1a             	goto 1118 <.GJTIE858_0_0_+0x5E6 : 1e1a6e6 >			  ## RF_ble.c:1305:21
 1e1a288:    01 02             	r1 = [sp]			  ## RF_ble.c:4442:35
 1e1a28a:    42 92             	r2 = r1 + 4			  ## RF_ble.c:4442:35
 1e1a28c:    0a 02             	[sp] = r2			  ## RF_ble.c:4442:35
 1e1a28e:    01 42             	r1 = [r1 + 0]			  ## RF_ble.c:4442:35
 1e1a290:    19 60             	b[r0 + 1] = r1			  ## RF_ble.c:1352:27
 1e1a292:    61 ff ff 19 27 02 	if ((r1 & 255) != 0) goto 1102 <.GJTIE858_0_0_+0x5E6 : 1e1a6e6 >			  ## RF_ble.c:1352:27
 1e1a298:    01 70             	r1 = 0
 1e1a29a:    11 f6 54 b0       	[r11 + 84] = r1			  ## RF_ble.c:1355:34
 1e1a29e:    29 60             	b[r0 + 2] = r1			  ## RF_ble.c:1356:34
 1e1a2a0:    22 1a             	goto 1092 <.GJTIE858_0_0_+0x5E6 : 1e1a6e6 >			  ## RF_ble.c:1356:34
 1e1a2a2:    00 02             	r0 = [sp]			  ## RF_ble.c:4479:17
 1e1a2a4:    02 f6 78 d0       	r2 = [r13 + 120]			  ## list.h:124:18
 1e1a2a8:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4479:17
 1e1a2aa:    09 02             	[sp] = r1			  ## RF_ble.c:4479:17
 1e1a2ac:    d3 fc 78 00       	r3 = r13 + 120			  ## RF_ble.c:4188:39
 1e1a2b0:    11 70             	r1 = 1			  ## list.h:124:23
 1e1a2b2:    32 f2 01 00       	if (r2 == r3) goto 2 <.GJTIE858_0_0_+0x1B8 : 1e1a2b8 >			  ## list.h:124:23
 1e1a2b6:    01 70             	r1 = 0			  ## list.h:124:23
 1e1a2b8:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:4479:17
 1e1a2ba:    09 40             	[r0 + 0] = r1			  ## RF_ble.c:4479:37
 1e1a2bc:    14 1a             	goto 1064 <.GJTIE858_0_0_+0x5E6 : 1e1a6e6 >			  ## RF_ble.c:4479:37
 1e1a2be:    00 02             	r0 = [sp]			  ## RF_ble.c:4482:24
 1e1a2c0:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4482:24
 1e1a2c2:    09 02             	[sp] = r1			  ## RF_ble.c:4482:24
 1e1a2c4:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:4482:24
 1e1a2c6:    01 f6 00 a0       	r1 = [r10 + 0]			  ## RF_ble.c:4194:9
 1e1a2ca:    01 e0 0c 02       	if (r1 == 0) goto 1048 <.GJTIE858_0_0_+0x5E6 : 1e1a6e6 >			  ## RF_ble.c:4194:9
 1e1a2ce:    20 04             	r0 = r0.l (u)
 1e1a2d0:    11 70             	r1 = 1			  ## RF_ble.c:4196:30
 1e1a2d2:    d0 fd 40 10       	r1 <= insert(r0, p:8, l:16)			  ## RF_ble.c:4196:30
 1e1a2d6:    11 f6 34 a0       	[r10 + 52] = r1			  ## RF_ble.c:4196:21
 1e1a2da:    05 1a             	goto 1034 <.GJTIE858_0_0_+0x5E6 : 1e1a6e6 >			  ## RF_ble.c:4196:21
 1e1a2dc:    00 02             	r0 = [sp]			  ## RF_ble.c:4488:44
 1e1a2de:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4488:44
 1e1a2e0:    09 02             	[sp] = r1			  ## RF_ble.c:4488:44
 1e1a2e2:    01 40             	r1 = [r0 + 0]			  ## RF_ble.c:4488:44
 1e1a2e4:    85 f9 01 10       	r5 = b[r1 ++= 1] (u)			  ## RF_ble.c:3374:23
 1e1a2e8:    20 fc 47 00       	r0 = r2 + 71			  ## RF_ble.c:3376:5
 1e1a2ec:    52 08             	r2 = r5			  ## RF_ble.c:3376:5
 1e1a2ee:    97 f3 f9 65       	call 3066866 <memcpy : 106ee4 >			  ## RF_ble.c:3376:5
 1e1a2f2:    15 f9 2e 42       	b[r4 + 558] = r5			  ## RF_ble.c:3378:22
 1e1a2f6:    20 6e             	r0 = b[r7 + 2] (u)			  ## RF_ble.c:3380:20
 1e1a2f8:    90 b0             	r0 |= 2			  ## RF_ble.c:3380:20
 1e1a2fa:    28 6e             	b[r7 + 2] = r0			  ## RF_ble.c:3380:20
 1e1a2fc:    f4 19             	goto 1000 <.GJTIE858_0_0_+0x5E6 : 1e1a6e6 >			  ## RF_ble.c:3380:20
 1e1a2fe:    00 02             	r0 = [sp]			  ## RF_ble.c:4491:40
 1e1a300:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4491:40
 1e1a302:    09 02             	[sp] = r1			  ## RF_ble.c:4491:40
 1e1a304:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:4491:40
 1e1a306:    10 f7 0a b0       	h[r11 + 10] = r0			  ## RF_ble.c:4491:40
 1e1a30a:    50 08             	r0 = r5			  ## RF_ble.c:4492:9
 1e1a30c:    3d 15             	call -1414 <ble_latency_manualhold : 1e19d88 >			  ## RF_ble.c:4492:9
 1e1a30e:    eb 19             	goto 982 <.GJTIE858_0_0_+0x5E6 : 1e1a6e6 >			  ## RF_ble.c:4492:9
 1e1a310:    00 02             	r0 = [sp]			  ## RF_ble.c:4415:30
 1e1a312:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4415:30
 1e1a314:    09 02             	[sp] = r1			  ## RF_ble.c:4415:30
 1e1a316:    02 02             	r2 = [sp]			  ## RF_ble.c:4415:57
 1e1a318:    01 60             	r1 = b[r0 + 0] (u)			  ## RF_ble.c:4415:30
 1e1a31a:    40 94             	r0 = r2 + 4			  ## RF_ble.c:4415:57
 1e1a31c:    08 02             	[sp] = r0			  ## RF_ble.c:4415:57
 1e1a31e:    02 44             	r2 = [r2 + 0]			  ## RF_ble.c:4415:57
 1e1a320:    40 08             	r0 = r4			  ## RF_ble.c:4415:9
 1e1a322:    ab 15             	call -1194 <__set_peer_addr : 1e19e7a >			  ## RF_ble.c:4415:9
 1e1a324:    e0 19             	goto 960 <.GJTIE858_0_0_+0x5E6 : 1e1a6e6 >			  ## RF_ble.c:4415:9
 1e1a326:    00 02             	r0 = [sp]			  ## RF_ble.c:4431:61
 1e1a328:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4431:61
 1e1a32a:    09 02             	[sp] = r1			  ## RF_ble.c:4431:61
 1e1a32c:    08 f6 00 00       	r8 = [r0 + 0]			  ## RF_ble.c:4431:61
 1e1a330:    c0 ff 68 0f 00 00 	r0 = 3944 <g_ble_fp : f68 >			  ## RF_ble.c:1125:14
 1e1a336:    0c 40             	[r0 + 0] = r4			  ## RF_ble.c:1125:14
 1e1a338:    00 f7 36 d0       	r0 = h[r13 + 54] (u)
 1e1a33c:    31 fd 1f 0a       	r1 = r0 & 4294959359			  ## RF_ble.c:882:23
 1e1a340:    01 fd 1c 1a       	r1 = r1 | 7168			  ## RF_ble.c:882:23
 1e1a344:    11 f7 36 d0       	h[r13 + 54] = r1			  ## RF_ble.c:882:23
 1e1a348:    2d f3 03 00       	if ((r0 & 8192) != 0) goto 6 <.GJTIE858_0_0_+0x252 : 1e1a352 >			  ## RF_ble.c:882:23
 1e1a34c:    c0 71             	r0 = 28			  ## RF_ble.c:886:28
 1e1a34e:    08 5d             	h[r6 + 32] = r0			  ## RF_ble.c:886:28
 1e1a350:    f8 5c             	h[r6 + 30] = r0			  ## RF_ble.c:887:28
 1e1a352:    20 fb 80 0a       	r0 = 32768			  ## RF_ble.c:1129:20
 1e1a356:    08 58             	h[r4 + 0] = r0			  ## RF_ble.c:1129:20
 1e1a358:    70 58             	r0 = h[r4 + 14] (u)			  ## RF_ble.c:1130:19
 1e1a35a:    f0 b0             	r0 &= 4294967293			  ## RF_ble.c:1130:19
 1e1a35c:    78 58             	h[r4 + 14] = r0			  ## RF_ble.c:1130:19
 1e1a35e:    0c 70             	r12 = 0			  ## RF_ble.c:1130:19
 1e1a360:    1c f7 10 40       	h[r4 + 16] = r12			  ## RF_ble.c:1132:19
 1e1a364:    01 70             	r1 = 0			  ## RF_ble.c:1134:23
 1e1a366:    80 08             	r0 = r8			  ## RF_ble.c:1134:23
 1e1a368:    bf f3 a3 67       	call -78010 <btctler_little_endian_read_16 : 1e072b2 >			  ## RF_ble.c:1134:23
 1e1a36c:    58 58             	h[r4 + 10] = r0			  ## RF_ble.c:1134:21
 1e1a36e:    21 70             	r1 = 2			  ## RF_ble.c:1135:23
 1e1a370:    80 08             	r0 = r8			  ## RF_ble.c:1135:23
 1e1a372:    bf f3 9e 67       	call -78020 <btctler_little_endian_read_16 : 1e072b2 >			  ## RF_ble.c:1135:23
 1e1a376:    68 58             	h[r4 + 12] = r0			  ## RF_ble.c:1135:21
 1e1a378:    80 fc 04 00       	r0 = r8 + 4			  ## RF_ble.c:1137:54
 1e1a37c:    01 70             	r1 = 0			  ## RF_ble.c:1137:24
 1e1a37e:    bf f3 98 67       	call -78032 <btctler_little_endian_read_16 : 1e072b2 >			  ## RF_ble.c:1137:24
 1e1a382:    28 5c             	h[r6 + 4] = r0			  ## RF_ble.c:1137:22
 1e1a384:    00 f9 06 80       	r0 = b[r8 + 6] (u)			  ## RF_ble.c:1138:24
 1e1a388:    38 5c             	h[r6 + 6] = r0			  ## RF_ble.c:1138:22
 1e1a38a:    40 58             	r0 = h[r4 + 8] (u)			  ## RF_ble.c:1141:21
 1e1a38c:    10 b1             	r0 |= 4			  ## RF_ble.c:1141:21
 1e1a38e:    48 58             	h[r4 + 8] = r0			  ## RF_ble.c:1141:21
 1e1a390:    40 58             	r0 = h[r4 + 8] (u)			  ## RF_ble.c:1143:5
 1e1a392:    f0 b4             	r0 &= 4294966783			  ## RF_ble.c:1143:5
 1e1a394:    48 58             	h[r4 + 8] = r0			  ## RF_ble.c:1143:5
 1e1a396:    40 58             	r0 = h[r4 + 8] (u)			  ## RF_ble.c:1144:5
 1e1a398:    00 fd 0c 0a       	r0 = r0 | 3072			  ## RF_ble.c:1144:5
 1e1a39c:    48 58             	h[r4 + 8] = r0			  ## RF_ble.c:1144:5
 1e1a39e:    40 58             	r0 = h[r4 + 8] (u)			  ## RF_ble.c:1145:5
 1e1a3a0:    10 b6             	r0 |= 4096			  ## RF_ble.c:1145:5
 1e1a3a2:    48 58             	h[r4 + 8] = r0			  ## RF_ble.c:1145:5
 1e1a3a4:    10 5d             	r0 = h[r6 + 34] (u)			  ## RF_ble.c:1146:5
 1e1a3a6:    30 fd 30 09       	r0 = r0 & 4294967247			  ## RF_ble.c:1146:5
 1e1a3aa:    10 b2             	r0 |= 16			  ## RF_ble.c:1146:5
 1e1a3ac:    18 5d             	h[r6 + 34] = r0			  ## RF_ble.c:1146:5
 1e1a3ae:    40 fc 64 00       	r0 = r4 + 100			  ## RF_ble.c:1146:5
 1e1a3b2:    01 60             	r1 = b[r0 + 0] (u)			  ## RF_ble.c:1147:5
 1e1a3b4:    11 b0             	r1 |= 1			  ## RF_ble.c:1147:5
 1e1a3b6:    09 60             	b[r0 + 0] = r1			  ## RF_ble.c:1147:5
 1e1a3b8:    11 60             	r1 = b[r0 + 1] (u)			  ## RF_ble.c:1148:5
 1e1a3ba:    11 b0             	r1 |= 1			  ## RF_ble.c:1148:5
 1e1a3bc:    19 60             	b[r0 + 1] = r1			  ## RF_ble.c:1148:5
 1e1a3be:    e0 6a             	r0 = b[r5 + 14] (u)			  ## RF_ble.c:1104:21
 1e1a3c0:    07 4a             	r7 = [r5 + 0]			  ## RF_ble.c:1104:21
 1e1a3c2:    05 30             	if (r0 != 0) goto 10 <.GJTIE858_0_0_+0x2CE : 1e1a3ce >
 1e1a3c4:    00 5e             	r0 = h[r7 + 0] (u)			  ## RF_ble.c:1107:9
 1e1a3c6:    20 fd 80 0a       	r0 = r0 & 32768			  ## RF_ble.c:1107:9
 1e1a3ca:    10 b1             	r0 |= 4			  ## RF_ble.c:1107:9
 1e1a3cc:    08 5e             	h[r7 + 0] = r0			  ## RF_ble.c:1107:9
 1e1a3ce:    97 f3 e5 64       	call 3066314 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e1a3d2:    08 00             	csync			  ## RF_ble.c:304:5
 1e1a3d4:    1c f6 20 a0       	[r10 + 32] = r12			  ## RF_ble.c:306:21
 1e1a3d8:    08 00             	csync			  ## RF_ble.c:307:5
 1e1a3da:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:147:19
 1e1a3de:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e1a3e0:    20 ba             	r0 = r5 - r0			  ## RF_ble.c:147:17
 1e1a3e2:    ce 71             	r14 = 28			  ## RF_ble.c:147:17
 1e1a3e4:    e0 fe e0 00       	r0 = r0 / r14 (s)			  ## RF_ble.c:147:17
 1e1a3e8:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e1a3ea:    20 fd 3f 00       	r0 = r0 & 3056			  ## RF_ble.c:308:50
 1e1a3ee:    01 fb 05 14       	r1 = 5125 <_cpu0_sstack_begin+0x3B5 : 1405 >			  ## RF_ble.c:308:67
 1e1a3f2:    50 b2             	r0 |= r1			  ## RF_ble.c:308:67
 1e1a3f4:    10 f6 1c a0       	[r10 + 28] = r0			  ## RF_ble.c:308:21
 1e1a3f8:    97 f3 ce 64       	call 3066268 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5
 1e1a3fc:    1c f7 5e 71       	h[r7 + 350] = r12			  ## RF_ble.c:524:18
 1e1a400:    10 70             	r0 = 1			  ## RF_ble.c:524:18
 1e1a402:    10 f9 5d 71       	b[r7 + 349] = r0			  ## RF_ble.c:525:24
 1e1a406:    1c f9 0d b0       	b[r11 + 13] = r12			  ## RF_ble.c:1161:24
 1e1a40a:    00 f9 02 b0       	r0 = b[r11 + 2] (u)			  ## RF_ble.c:1169:14
 1e1a40e:    30 e0 bb 10       	if (r0 != 3) goto 374 <.GJTIE858_0_0_+0x488 : 1e1a588 >			  ## RF_ble.c:1169:9
 1e1a412:    97 f3 c3 64       	call 3066246 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e1a416:    08 00             	csync			  ## RF_ble.c:304:5
 1e1a418:    00 70             	r0 = 0			  ## RF_ble.c:304:5
 1e1a41a:    10 f6 20 a0       	[r10 + 32] = r0			  ## RF_ble.c:306:21
 1e1a41e:    08 00             	csync			  ## RF_ble.c:307:5
 1e1a420:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:147:19
 1e1a424:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e1a426:    20 ba             	r0 = r5 - r0			  ## RF_ble.c:147:17
 1e1a428:    e0 fe e0 00       	r0 = r0 / r14 (s)			  ## RF_ble.c:147:17
 1e1a42c:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e1a42e:    20 fd 7f 00       	r0 = r0 & 4080			  ## RF_ble.c:308:50
 1e1a432:    01 fb 05 10       	r1 = 4101 <sys_clock_limit+0x49 : 1005 >			  ## RF_ble.c:308:67
 1e1a436:    50 b2             	r0 |= r1			  ## RF_ble.c:308:67
 1e1a438:    10 f6 1c a0       	[r10 + 28] = r0			  ## RF_ble.c:308:21
 1e1a43c:    97 f3 ac 64       	call 3066200 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5
 1e1a440:    00 f7 08 80       	r0 = h[r8 + 8] (u)			  ## RF_ble.c:1174:31
 1e1a444:    40 c0             	r0 = r0 << 1			  ## RF_ble.c:1174:53
 1e1a446:    41 90             	r1 = r0 + 4			  ## RF_ble.c:1174:61
 1e1a448:    50 08             	r0 = r5			  ## RF_ble.c:1174:9
 1e1a44a:    bf f3 6f f8       	call -3874 <__set_anchor_cnt : 1e1952c >			  ## RF_ble.c:1174:9
 1e1a44e:    03 f7 0c 80       	r3 = h[r8 + 12] (u)			  ## RF_ble.c:1185:47
 1e1a452:    61 70             	r1 = 6			  ## RF_ble.c:1185:9
 1e1a454:    02 70             	r2 = 0			  ## RF_ble.c:1185:9
 1e1a456:    50 08             	r0 = r5			  ## RF_ble.c:1185:9
 1e1a458:    8b 15             	call -1258 <__set_hw_state : 1e19f70 >			  ## RF_ble.c:1185:9
 1e1a45a:    c2 18             	goto 388 <.GJTIE858_0_0_+0x4E0 : 1e1a5e0 >			  ## RF_ble.c:1185:9
 1e1a45c:    00 02             	r0 = [sp]			  ## RF_ble.c:4427:38
 1e1a45e:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4427:38
 1e1a460:    09 02             	[sp] = r1			  ## RF_ble.c:4427:38
 1e1a462:    01 40             	r1 = [r0 + 0]			  ## RF_ble.c:4427:38
 1e1a464:    40 08             	r0 = r4			  ## RF_ble.c:4427:9
 1e1a466:    29 15             	call -1454 <__set_channel_map : 1e19eba >			  ## RF_ble.c:4427:9
 1e1a468:    3e 19             	goto 636 <.GJTIE858_0_0_+0x5E6 : 1e1a6e6 >			  ## RF_ble.c:4427:9
 1e1a46a:    01 02             	r1 = [sp]			  ## RF_ble.c:4446:38
 1e1a46c:    42 92             	r2 = r1 + 4			  ## RF_ble.c:4446:38
 1e1a46e:    0a 02             	[sp] = r2			  ## RF_ble.c:4446:38
 1e1a470:    01 42             	r1 = [r1 + 0]			  ## RF_ble.c:4446:38
 1e1a472:    09 60             	b[r0 + 0] = r1			  ## RF_ble.c:1341:27
 1e1a474:    61 ff ff 19 36 01 	if ((r1 & 255) != 0) goto 620 <.GJTIE858_0_0_+0x5E6 : 1e1a6e6 >			  ## RF_ble.c:1341:27
 1e1a47a:    01 70             	r1 = 0
 1e1a47c:    11 f6 58 b0       	[r11 + 88] = r1			  ## RF_ble.c:1344:34
 1e1a480:    39 60             	b[r0 + 3] = r1			  ## RF_ble.c:1345:34
 1e1a482:    31 19             	goto 610 <.GJTIE858_0_0_+0x5E6 : 1e1a6e6 >			  ## RF_ble.c:1345:34
 1e1a484:    00 02             	r0 = [sp]			  ## RF_ble.c:4450:35
 1e1a486:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4450:35
 1e1a488:    09 02             	[sp] = r1			  ## RF_ble.c:4450:35
 1e1a48a:    01 02             	r1 = [sp]			  ## RF_ble.c:4450:62
 1e1a48c:    02 60             	r2 = b[r0 + 0] (u)			  ## RF_ble.c:4450:35
 1e1a48e:    40 92             	r0 = r1 + 4			  ## RF_ble.c:4450:62
 1e1a490:    08 02             	[sp] = r0			  ## RF_ble.c:4450:62
 1e1a492:    05 42             	r5 = [r1 + 0]			  ## RF_ble.c:4450:62
 1e1a494:    30 58             	r0 = h[r4 + 6] (u)			  ## RF_ble.c:772:23
 1e1a496:    f0 b1             	r0 &= 4294967287			  ## RF_ble.c:772:23
 1e1a498:    38 58             	h[r4 + 6] = r0			  ## RF_ble.c:772:23
 1e1a49a:    10 70             	r0 = 1			  ## RF_ble.c:773:27
 1e1a49c:    01 34             	if (r2 != 0) goto 2 <.GJTIE858_0_0_+0x3A0 : 1e1a4a0 >			  ## RF_ble.c:773:27
 1e1a49e:    00 70             	r0 = 0			  ## RF_ble.c:773:27
 1e1a4a0:    10 f9 18 b0       	b[r11 + 24] = r0			  ## RF_ble.c:773:25
 1e1a4a4:    d0 fc 59 00       	r0 = r13 + 89			  ## RF_ble.c:775:5
 1e1a4a8:    62 70             	r2 = 6			  ## RF_ble.c:775:5
 1e1a4aa:    51 08             	r1 = r5			  ## RF_ble.c:775:5
 1e1a4ac:    97 f3 1a 65       	call 3066420 <memcpy : 106ee4 >			  ## RF_ble.c:775:5
 1e1a4b0:    90 58             	r0 = h[r4 + 18] (u)			  ## RF_ble.c:782:19
 1e1a4b2:    06 f6 00 90       	r6 = [r9 + 0]			  ## RF_ble.c:782:51
 1e1a4b6:    60 09             	r0 += r6			  ## RF_ble.c:782:42
 1e1a4b8:    62 70             	r2 = 6			  ## RF_ble.c:784:5
 1e1a4ba:    51 08             	r1 = r5			  ## RF_ble.c:784:5
 1e1a4bc:    97 f3 12 65       	call 3066404 <memcpy : 106ee4 >			  ## RF_ble.c:784:5
 1e1a4c0:    a0 58             	r0 = h[r4 + 20] (u)			  ## RF_ble.c:786:19
 1e1a4c2:    60 09             	r0 += r6			  ## RF_ble.c:786:42
 1e1a4c4:    62 70             	r2 = 6			  ## RF_ble.c:788:5
 1e1a4c6:    51 08             	r1 = r5			  ## RF_ble.c:788:5
 1e1a4c8:    97 f3 0c 65       	call 3066392 <memcpy : 106ee4 >			  ## RF_ble.c:788:5
 1e1a4cc:    0c 19             	goto 536 <.GJTIE858_0_0_+0x5E6 : 1e1a6e6 >			  ## RF_ble.c:788:5
 1e1a4ce:    00 02             	r0 = [sp]			  ## RF_ble.c:4468:30
 1e1a4d0:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4468:30
 1e1a4d2:    09 02             	[sp] = r1			  ## RF_ble.c:4468:30
 1e1a4d4:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:4468:30
 1e1a4d6:    18 54             	h[r2 + 2] = r0			  ## RF_ble.c:1602:19
 1e1a4d8:    06 19             	goto 524 <.GJTIE858_0_0_+0x5E6 : 1e1a6e6 >			  ## RF_ble.c:1602:19
 1e1a4da:    00 02             	r0 = [sp]			  ## RF_ble.c:4471:29
 1e1a4dc:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4471:29
 1e1a4de:    09 02             	[sp] = r1			  ## RF_ble.c:4471:29
 1e1a4e0:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:4471:29
 1e1a4e2:    c8 64             	b[r2 + 12] = r0			  ## RF_ble.c:4471:27
 1e1a4e4:    00 19             	goto 512 <.GJTIE858_0_0_+0x5E6 : 1e1a6e6 >			  ## RF_ble.c:4471:27
 1e1a4e6:    00 02             	r0 = [sp]			  ## RF_ble.c:4475:31
 1e1a4e8:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4475:31
 1e1a4ea:    09 02             	[sp] = r1			  ## RF_ble.c:4475:31
 1e1a4ec:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:4475:31
 1e1a4ee:    d8 64             	b[r2 + 13] = r0			  ## RF_ble.c:4475:29
 1e1a4f0:    fa 18             	goto 500 <.GJTIE858_0_0_+0x5E6 : 1e1a6e6 >			  ## RF_ble.c:4475:29
 1e1a4f2:    01 02             	r1 = [sp]			  ## RF_ble.c:4485:39
 1e1a4f4:    42 92             	r2 = r1 + 4			  ## RF_ble.c:4485:39
 1e1a4f6:    0a 02             	[sp] = r2			  ## RF_ble.c:4485:39
 1e1a4f8:    01 42             	r1 = [r1 + 0]			  ## RF_ble.c:4485:39
 1e1a4fa:    85 f9 01 10       	r5 = b[r1 ++= 1] (u)			  ## RF_ble.c:3360:18
 1e1a4fe:    f0 86             	r0 += 111			  ## RF_ble.c:3362:5
 1e1a500:    52 08             	r2 = r5			  ## RF_ble.c:3362:5
 1e1a502:    97 f3 ef 64       	call 3066334 <memcpy : 106ee4 >			  ## RF_ble.c:3362:5
 1e1a506:    15 f9 0e 42       	b[r4 + 526] = r5			  ## RF_ble.c:3364:17
 1e1a50a:    20 6e             	r0 = b[r7 + 2] (u)			  ## RF_ble.c:3366:20
 1e1a50c:    10 b0             	r0 |= 1			  ## RF_ble.c:3366:20
 1e1a50e:    28 6e             	b[r7 + 2] = r0			  ## RF_ble.c:3366:20
 1e1a510:    ea 18             	goto 468 <.GJTIE858_0_0_+0x5E6 : 1e1a6e6 >			  ## RF_ble.c:3366:20
 1e1a512:    01 f7 18 80       	r1 = h[r8 + 24] (u)			  ## RF_ble.c:1274:59
 1e1a516:    10 09             	r0 += r1			  ## RF_ble.c:1274:57
 1e1a518:    18 59             	h[r4 + 34] = r0			  ## RF_ble.c:722:25
 1e1a51a:    01 d4             	r1 = r0 >> 16			  ## RF_ble.c:724:36
 1e1a51c:    29 59             	h[r4 + 36] = r1			  ## RF_ble.c:724:25
 1e1a51e:    21 73             	r1 = 50			  ## RF_ble.c:725:25
 1e1a520:    11 f7 02 d0       	h[r13 + 2] = r1			  ## RF_ble.c:725:25
 1e1a524:    10 f6 3c d0       	[r13 + 60] = r0			  ## RF_ble.c:730:16
 1e1a528:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:1277:13
 1e1a52c:    00 f9 20 00       	r0 = b[r0 + 32] (u)			  ## RF_ble.c:1277:21
 1e1a530:    04 70             	r4 = 0			  ## RF_ble.c:1277:21
 1e1a532:    03 70             	r3 = 0			  ## RF_ble.c:1277:13
 1e1a534:    10 e0 02 80       	if (r0 > 1) goto 4 <.GJTIE858_0_0_+0x43C : 1e1a53c >			  ## RF_ble.c:1277:13
 1e1a538:    03 f7 0c 80       	r3 = h[r8 + 12] (u)			  ## RF_ble.c:1276:27
 1e1a53c:    12 70             	r2 = 1
 1e1a53e:    01 36             	if (r3 != 0) goto 2 <.GJTIE858_0_0_+0x442 : 1e1a542 >
 1e1a540:    02 70             	r2 = 0			  ## RF_ble.c:1280:44
 1e1a542:    71 70             	r1 = 7			  ## RF_ble.c:1280:9
 1e1a544:    50 08             	r0 = r5			  ## RF_ble.c:1280:9
 1e1a546:    14 15             	call -1496 <__set_hw_state : 1e19f70 >			  ## RF_ble.c:1280:9
 1e1a548:    01 f7 16 80       	r1 = h[r8 + 22] (u)			  ## RF_ble.c:1281:33
 1e1a54c:    00 fb 71 02       	r0 = 625 <BTCTLER_CL_RAM_TOTAL+0x8D : 271 >			  ## RF_ble.c:740:19
 1e1a550:    c0 fe 00 21       	r2 = r1 / r0 (u)			  ## RF_ble.c:740:19
 1e1a554:    4a 5c             	h[r6 + 8] = r2			  ## RF_ble.c:744:23
 1e1a556:    d0 fe 00 01       	r0 = r1 % r0 (u)			  ## RF_ble.c:741:17
 1e1a55a:    00 fd 50 0a       	r0 = r0 | 20480			  ## RF_ble.c:747:25
 1e1a55e:    58 5c             	h[r6 + 10] = r0			  ## RF_ble.c:747:23
 1e1a560:    f0 fd 08 0a       	r0 = r10 << 1			  ## RF_ble.c:1266:59
 1e1a564:    f0 8f             	r0 += -1			  ## RF_ble.c:1266:63
 1e1a566:    11 f6 38 d0       	[r13 + 56] = r1			  ## RF_ble.c:750:15
 1e1a56a:    0a e0 01 00       	if (r10 == 0) goto 2 <.GJTIE858_0_0_+0x470 : 1e1a570 >			  ## RF_ble.c:750:15
 1e1a56e:    04 08             	r4 = r0			  ## RF_ble.c:1266:21
 1e1a570:    50 08             	r0 = r5			  ## RF_ble.c:1285:5
 1e1a572:    41 08             	r1 = r4			  ## RF_ble.c:1285:5
 1e1a574:    27 15             	call -1458 <__set_winoffset : 1e19fc4 >			  ## RF_ble.c:1285:5
 1e1a576:    00 f7 0a 80       	r0 = h[r8 + 10] (u)			  ## RF_ble.c:1286:24
 1e1a57a:    01 fb e2 04       	r1 = 1250 <BTCTLER_CONTROLLER_DATA_SIZE+0x24 : 4e2 >			  ## RF_ble.c:1286:40
 1e1a57e:    41 0e             	r1 = r0 * r1			  ## RF_ble.c:1286:40
 1e1a580:    12 70             	r2 = 1			  ## RF_ble.c:1286:5
 1e1a582:    50 08             	r0 = r5			  ## RF_ble.c:1286:5
 1e1a584:    47 15             	call -1394 <__set_interval : 1e1a014 >			  ## RF_ble.c:1286:5
 1e1a586:    af 18             	goto 350 <.GJTIE858_0_0_+0x5E6 : 1e1a6e6 >			  ## RF_ble.c:1286:5
 1e1a588:    00 f7 08 80       	r0 = h[r8 + 8] (u)			  ## RF_ble.c:1195:42
 1e1a58c:    01 70             	r1 = 0			  ## RF_ble.c:1195:29
 1e1a58e:    03 20             	if (r0 == 0) goto 6 <.GJTIE858_0_0_+0x496 : 1e1a596 >			  ## RF_ble.c:1195:29
 1e1a590:    40 c0             	r0 = r0 << 1			  ## RF_ble.c:1195:77
 1e1a592:    01 fc ff ff       	r1 = r0 + -1			  ## RF_ble.c:1195:81
 1e1a596:    50 08             	r0 = r5			  ## RF_ble.c:1195:9
 1e1a598:    15 15             	call -1494 <__set_winoffset : 1e19fc4 >			  ## RF_ble.c:1195:9
 1e1a59a:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:1199:13
 1e1a59e:    00 f9 20 00       	r0 = b[r0 + 32] (u)			  ## RF_ble.c:1199:21
 1e1a5a2:    03 70             	r3 = 0			  ## RF_ble.c:1199:13
 1e1a5a4:    10 e0 02 80       	if (r0 > 1) goto 4 <.GJTIE858_0_0_+0x4AC : 1e1a5ac >			  ## RF_ble.c:1199:13
 1e1a5a8:    03 f7 0c 80       	r3 = h[r8 + 12] (u)			  ## RF_ble.c:1198:27
 1e1a5ac:    12 70             	r2 = 1
 1e1a5ae:    01 36             	if (r3 != 0) goto 2 <.GJTIE858_0_0_+0x4B2 : 1e1a5b2 >
 1e1a5b0:    02 70             	r2 = 0			  ## RF_ble.c:1202:44
 1e1a5b2:    71 70             	r1 = 7			  ## RF_ble.c:1202:9
 1e1a5b4:    50 08             	r0 = r5			  ## RF_ble.c:1202:9
 1e1a5b6:    dc 14             	call -1608 <__set_hw_state : 1e19f70 >			  ## RF_ble.c:1202:9
 1e1a5b8:    00 f7 16 80       	r0 = h[r8 + 22] (u)			  ## RF_ble.c:1204:38
 1e1a5bc:    01 fb 71 02       	r1 = 625 <BTCTLER_CL_RAM_TOTAL+0x8D : 271 >			  ## RF_ble.c:740:19
 1e1a5c0:    c0 fe 10 20       	r2 = r0 / r1 (u)			  ## RF_ble.c:740:19
 1e1a5c4:    4a 5c             	h[r6 + 8] = r2			  ## RF_ble.c:744:23
 1e1a5c6:    d0 fe 10 10       	r1 = r0 % r1 (u)			  ## RF_ble.c:741:17
 1e1a5ca:    01 fd 50 1a       	r1 = r1 | 20480			  ## RF_ble.c:747:25
 1e1a5ce:    59 5c             	h[r6 + 10] = r1			  ## RF_ble.c:747:23
 1e1a5d0:    10 f6 38 d0       	[r13 + 56] = r0			  ## RF_ble.c:750:15
 1e1a5d4:    00 f7 16 80       	r0 = h[r8 + 22] (u)			  ## RF_ble5.c:657:21
 1e1a5d8:    68 5a             	h[r5 + 12] = r0			  ## RF_ble5.c:657:19
 1e1a5da:    60 70             	r0 = 6			  ## RF_ble5.c:657:19
 1e1a5dc:    10 f7 0a b0       	h[r11 + 10] = r0			  ## RF_ble5.c:657:19
 1e1a5e0:    97 f3 dc 63       	call 3065784 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e1a5e4:    08 00             	csync			  ## RF_ble.c:304:5
 1e1a5e6:    06 70             	r6 = 0			  ## RF_ble.c:304:5
 1e1a5e8:    16 f6 20 a0       	[r10 + 32] = r6			  ## RF_ble.c:306:21
 1e1a5ec:    08 00             	csync			  ## RF_ble.c:307:5
 1e1a5ee:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:147:19
 1e1a5f2:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e1a5f4:    20 ba             	r0 = r5 - r0			  ## RF_ble.c:147:17
 1e1a5f6:    cc 71             	r12 = 28			  ## RF_ble.c:147:17
 1e1a5f8:    e0 fe c0 00       	r0 = r0 / r12 (s)			  ## RF_ble.c:147:17
 1e1a5fc:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e1a5fe:    20 fd 7f 00       	r0 = r0 & 4080			  ## RF_ble.c:308:50
 1e1a602:    01 fb 05 20       	r1 = 8197 <btif_cfg+0x9 : 2005 >			  ## RF_ble.c:308:67
 1e1a606:    50 b2             	r0 |= r1			  ## RF_ble.c:308:67
 1e1a608:    10 f6 1c a0       	[r10 + 28] = r0			  ## RF_ble.c:308:21
 1e1a60c:    97 f3 c4 63       	call 3065736 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5
 1e1a610:    07 4a             	r7 = [r5 + 0]			  ## RF_ble.c:493:37
 1e1a612:    97 f3 c3 63       	call 3065734 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e1a616:    08 00             	csync			  ## RF_ble.c:304:5
 1e1a618:    16 f6 20 a0       	[r10 + 32] = r6			  ## RF_ble.c:306:21
 1e1a61c:    08 00             	csync			  ## RF_ble.c:307:5
 1e1a61e:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:147:19
 1e1a622:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e1a624:    20 ba             	r0 = r5 - r0			  ## RF_ble.c:147:17
 1e1a626:    e0 fe c0 00       	r0 = r0 / r12 (s)			  ## RF_ble.c:147:17
 1e1a62a:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e1a62c:    01 fb f0 03       	r1 = 1008 <BTCTLER_LE_RAM_TOTAL+0x12 : 3f0 >			  ## RF_ble.c:308:50
 1e1a630:    50 b3             	r0 &= r1			  ## RF_ble.c:308:50
 1e1a632:    01 fb 05 0c       	r1 = 3077 <BTCTLER_CL_CODE_TOTAL+0xE3 : c05 >			  ## RF_ble.c:308:67
 1e1a636:    50 b2             	r0 |= r1			  ## RF_ble.c:308:67
 1e1a638:    10 f6 1c a0       	[r10 + 28] = r0			  ## RF_ble.c:308:21
 1e1a63c:    97 f3 ac 63       	call 3065688 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5
 1e1a640:    16 f7 58 70       	h[r7 + 88] = r6			  ## RF_ble.c:497:22
 1e1a644:    00 f9 07 80       	r0 = b[r8 + 7] (u)			  ## RF_ble.c:1214:28
 1e1a648:    01 fb e2 04       	r1 = 1250 <BTCTLER_CONTROLLER_DATA_SIZE+0x24 : 4e2 >			  ## RF_ble.c:1214:48
 1e1a64c:    40 0e             	r0 = r0 * r1			  ## RF_ble.c:1214:48
 1e1a64e:    00 fc e2 04       	r0 = r0 + 1250			  ## RF_ble.c:1214:55
 1e1a652:    18 59             	h[r4 + 34] = r0			  ## RF_ble.c:722:25
 1e1a654:    02 d4             	r2 = r0 >> 16			  ## RF_ble.c:724:36
 1e1a656:    2a 59             	h[r4 + 36] = r2			  ## RF_ble.c:724:25
 1e1a658:    22 73             	r2 = 50			  ## RF_ble.c:725:25
 1e1a65a:    12 f7 02 d0       	h[r13 + 2] = r2			  ## RF_ble.c:725:25
 1e1a65e:    10 f6 3c d0       	[r13 + 60] = r0			  ## RF_ble.c:730:16
 1e1a662:    00 f7 0a 80       	r0 = h[r8 + 10] (u)			  ## RF_ble.c:730:16
 1e1a666:    41 0e             	r1 = r0 * r1			  ## RF_ble.c:1222:49
 1e1a668:    12 70             	r2 = 1			  ## RF_ble.c:1222:9
 1e1a66a:    50 08             	r0 = r5			  ## RF_ble.c:1222:9
 1e1a66c:    d3 14             	call -1626 <__set_interval : 1e1a014 >			  ## RF_ble.c:1222:9
 1e1a66e:    81 fc 10 00       	r1 = r8 + 16			  ## RF_ble.c:1226:28
 1e1a672:    40 08             	r0 = r4			  ## RF_ble.c:1226:5
 1e1a674:    22 14             	call -1980 <__set_channel_map : 1e19eba >			  ## RF_ble.c:1226:5
 1e1a676:    07 f9 15 80       	r7 = b[r8 + 21] (u)			  ## RF_ble.c:1228:47
 1e1a67a:    97 f3 8f 63       	call 3065630 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e1a67e:    08 00             	csync			  ## RF_ble.c:304:5
 1e1a680:    20 fd 1f 79       	r0 = r7 & 31			  ## RF_ble.c:1228:35
 1e1a684:    c5 fd 40 00       	r0 <= insert(r0, p:8, l:5)			  ## RF_ble.c:601:43
 1e1a688:    90 b7             	r0 |= 32768			  ## RF_ble.c:601:43
 1e1a68a:    10 f6 20 a0       	[r10 + 32] = r0			  ## RF_ble.c:306:21
 1e1a68e:    08 00             	csync			  ## RF_ble.c:307:5
 1e1a690:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:147:19
 1e1a694:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e1a696:    20 ba             	r0 = r5 - r0			  ## RF_ble.c:147:17
 1e1a698:    e0 fe c0 00       	r0 = r0 / r12 (s)			  ## RF_ble.c:147:17
 1e1a69c:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e1a69e:    01 fb f0 07       	r1 = 2032 <DRIVER_CODE_TOTAL+0x6A : 7f0 >			  ## RF_ble.c:308:50
 1e1a6a2:    50 b3             	r0 &= r1			  ## RF_ble.c:308:50
 1e1a6a4:    01 fb 05 18       	r1 = 6149 <UPDATE_CODE_TOTAL_SIZE+0x1A3 : 1805 >			  ## RF_ble.c:308:67
 1e1a6a8:    50 b2             	r0 |= r1			  ## RF_ble.c:308:67
 1e1a6aa:    10 f6 1c a0       	[r10 + 28] = r0			  ## RF_ble.c:308:21
 1e1a6ae:    97 f3 73 63       	call 3065574 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5
 1e1a6b2:    00 f6 70 d0       	r0 = [r13 + 112]			  ## RF_ble.c:1077:17
 1e1a6b6:    bf f3 2a 3a       	call -101292 <hw_dma_free : 1e01b0e >			  ## RF_ble.c:1077:5
 1e1a6ba:    00 f6 74 d0       	r0 = [r13 + 116]			  ## RF_ble.c:1078:17
 1e1a6be:    bf f3 26 3a       	call -101300 <hw_dma_free : 1e01b0e >			  ## RF_ble.c:1078:5
 1e1a6c2:    16 f6 70 d0       	[r13 + 112] = r6			  ## RF_ble.c:233:15
 1e1a6c6:    16 f6 74 d0       	[r13 + 116] = r6			  ## RF_ble.c:234:15
 1e1a6ca:    16 f9 00 b0       	b[r11 + 0] = r6			  ## RF_ble.c:1081:18
 1e1a6ce:    70 58             	r0 = h[r4 + 14] (u)			  ## RF_ble.c:1083:19
 1e1a6d0:    be 58             	h[r4 + 22] = r6			  ## RF_ble.c:1083:19
 1e1a6d2:    80 c0             	r0 = r0 << 2			  ## RF_ble.c:1083:9
 1e1a6d4:    20 fd 04 09       	r0 = r0 & 4			  ## RF_ble.c:1083:9
 1e1a6d8:    01 fd 01 09       	r1 = r0 | 1			  ## RF_ble.c:1083:9
 1e1a6dc:    d9 58             	h[r4 + 26] = r1			  ## RF_ble.c:1083:9
 1e1a6de:    ce 58             	h[r4 + 24] = r6			  ## RF_ble.c:1083:9
 1e1a6e0:    10 fd 05 09       	r0 = r0 ^ 5			  ## RF_ble.c:1083:9
 1e1a6e4:    e8 58             	h[r4 + 28] = r0			  ## RF_ble.c:1083:9
 1e1a6e6:    02 0a             	sp += 4
 1e1a6e8:    1e 01             	{rets, r14-r4} = [sp++]			  ## RF_ble.c:4500:1
 1e1a6ea:    04 0a             	sp += 8			  ## RF_ble.c:4500:1
 1e1a6ec:    20 00             	rts			  ## RF_ble.c:4500:1


ble_hw_alloc:
 1e1a6ee:    74 01             	[--sp] = {rets, r4}			  ## RF_ble.c:3152:0
 1e1a6f0:    c0 ff 84 2d 00 00 	r0 = 11652 <bb_hdl : 2d84 >			  ## RF_ble.c:3152:0
 1e1a6f6:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:3152:0
 1e1a6f8:    01 50             	r1 = h[r0 + 0] (u)			  ## RF_ble.c:3157:13
 1e1a6fa:    07 32             	if (r1 != 0) goto 14 <ble_hw_alloc+0x1C : 1e1a70a >			  ## RF_ble.c:3157:13
 1e1a6fc:    44 40             	r4 = [r0 + 16]			  ## RF_ble.c:3158:35
 1e1a6fe:    01 70             	r1 = 0			  ## RF_ble.c:3159:13
 1e1a700:    c2 71             	r2 = 28			  ## RF_ble.c:3159:13
 1e1a702:    40 08             	r0 = r4			  ## RF_ble.c:3159:13
 1e1a704:    97 f3 f4 63       	call 3065832 <memset : 106ef0 >			  ## RF_ble.c:3159:13
 1e1a708:    03 38             	if (r4 != 0) goto 6 <ble_hw_alloc+0x22 : 1e1a710 >			  ## RF_ble.c:3159:13
 1e1a70a:    8f f3 69 46       	call 2002130 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1a70e:    04 70             	r4 = 0			  ## cpu.h:148:5
 1e1a710:    40 08             	r0 = r4			  ## RF_ble.c:3165:5
 1e1a712:    bf f3 e0 f6       	call -4672 <clear_all_anchor_cnt : 1e194d6 >			  ## RF_ble.c:3165:5
 1e1a716:    40 08             	r0 = r4			  ## RF_ble.c:3167:5
 1e1a718:    54 01             	{pc, r4} = [sp++]			  ## RF_ble.c:3167:5


hw_entity_alloc:
 1e1a71a:    74 01             	[--sp] = {rets, r4}			  ## RF_ble.c:3105:0
 1e1a71c:    c0 ff 84 2d 00 00 	r0 = 11652 <bb_hdl : 2d84 >			  ## RF_ble.c:3105:0
 1e1a722:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:3105:0
 1e1a724:    54 40             	r4 = [r0 + 20]			  ## RF_ble.c:3105:0
 1e1a726:    00 f9 64 42       	r0 = b[r4 + 612] (u)			  ## RF_ble.c:3110:42
 1e1a72a:    0a 30             	if (r0 != 0) goto 20 <hw_entity_alloc+0x26 : 1e1a740 >
 1e1a72c:    01 70             	r1 = 0			  ## RF_ble.c:3112:13
 1e1a72e:    02 fb 68 02       	r2 = 616 <BTCTLER_CL_RAM_TOTAL+0x84 : 268 >			  ## RF_ble.c:3112:13
 1e1a732:    40 08             	r0 = r4			  ## RF_ble.c:3112:13
 1e1a734:    97 f3 dc 63       	call 3065784 <memset : 106ef0 >			  ## RF_ble.c:3112:13
 1e1a738:    10 70             	r0 = 1			  ## RF_ble.c:3113:22
 1e1a73a:    10 f9 64 42       	b[r4 + 612] = r0			  ## RF_ble.c:3113:22
 1e1a73e:    03 38             	if (r4 != 0) goto 6 <hw_entity_alloc+0x2C : 1e1a746 >			  ## RF_ble.c:3113:22
 1e1a740:    8f f3 4e 46       	call 2002076 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1a744:    04 70             	r4 = 0			  ## cpu.h:148:5
 1e1a746:    40 08             	r0 = r4			  ## RF_ble.c:3122:5
 1e1a748:    54 01             	{pc, r4} = [sp++]			  ## RF_ble.c:3122:5


le_hw_standby:
 1e1a74a:    01 40             	r1 = [r0 + 0]			  ## RF_ble.c:3223:0
 1e1a74c:    02 70             	r2 = 0			  ## RF_ble.c:3225:24
 1e1a74e:    12 f9 52 11       	b[r1 + 338] = r2			  ## RF_ble.c:3225:24
 1e1a752:    ff f3 95 f6       	goto -4822 <ble_hw_disable : 1e19480 >			  ## RF_ble.c:3226:5


le_hw_open:
 1e1a756:    78 01             	[--sp] = {rets, r8-r4}			  ## RF_ble.c:4017:0
 1e1a758:    fc 0b             	sp += -8			  ## RF_ble.c:4017:0
 1e1a75a:    c9 17             	call -110 <ble_hw_alloc : 1e1a6ee >			  ## RF_ble.c:3176:10
 1e1a75c:    04 08             	r4 = r0			  ## RF_ble.c:3176:10
 1e1a75e:    dd 17             	call -70 <hw_entity_alloc : 1e1a71a >			  ## RF_ble.c:3177:37
 1e1a760:    08 48             	[r4 + 0] = r0			  ## RF_ble.c:3177:17
 1e1a762:    c8 ff 84 2d 00 00 	r8 = 11652 <bb_hdl : 2d84 >			  ## RF_ble.c:3177:17
 1e1a768:    03 f6 00 80       	r3 = [r8 + 0]			  ## RF_ble.c:147:19
 1e1a76c:    41 46             	r1 = [r3 + 16]			  ## RF_ble.c:147:35
 1e1a76e:    61 b8             	r1 = r4 - r1			  ## RF_ble.c:147:17
 1e1a770:    c2 71             	r2 = 28			  ## RF_ble.c:147:17
 1e1a772:    e0 fe 20 11       	r1 = r1 / r2 (s)			  ## RF_ble.c:147:17
 1e1a776:    45 04             	r5 = r1.b0 (u)			  ## RF_ble.c:3147:5
 1e1a778:    bf f3 f1 f8       	call -3614 <PHY_TO_BLE : 1e1995e >			  ## RF_ble.c:3147:45
 1e1a77c:    90 b7             	r0 |= 32768			  ## RF_ble.c:3147:35
 1e1a77e:    50 f8 00 35       	h[r3+r5<<1] = r0			  ## RF_ble.c:3147:33
 1e1a782:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:1635:34
 1e1a784:    02 70             	r2 = 0			  ## RF_ble.c:1639:20
 1e1a786:    0a 50             	h[r0 + 0] = r2			  ## RF_ble.c:1639:20
 1e1a788:    1a 50             	h[r0 + 2] = r2			  ## RF_ble.c:1640:20
 1e1a78a:    c1 ff 88 d3 00 00 	r1 = 54152 <_nv_pre_end+0x1888 : d388 >			  ## RF_ble.c:1641:20
 1e1a790:    29 50             	h[r0 + 4] = r1			  ## RF_ble.c:1641:20
 1e1a792:    01 fc 44 00       	r1 = r0 + 68			  ## RF_ble.c:1641:20
 1e1a796:    2a 52             	h[r1 + 4] = r2			  ## RF_ble.c:1642:20
 1e1a798:    02 fb e7 51       	r2 = 20967 <nvbss_begin+0x1E7 : 51e7 >			  ## RF_ble.c:1643:20
 1e1a79c:    3a 52             	h[r1 + 6] = r2			  ## RF_ble.c:1643:20
 1e1a79e:    22 fc ef 6c       	r2 = r2 + 27887			  ## RF_ble.c:1652:25
 1e1a7a2:    5a 50             	h[r0 + 10] = r2			  ## RF_ble.c:1652:25
 1e1a7a4:    22 fc b3 cf       	r2 = r2 + -12365			  ## RF_ble.c:1652:25
 1e1a7a8:    6a 50             	h[r0 + 12] = r2			  ## RF_ble.c:1652:25
 1e1a7aa:    02 fb 55 55       	r2 = 21845 <report_overlay_end+0x20D : 5555 >			  ## RF_ble.c:1658:22
 1e1a7ae:    0a 52             	h[r1 + 0] = r2			  ## RF_ble.c:1658:22
 1e1a7b0:    52 75             	r2 = 85			  ## RF_ble.c:1659:22
 1e1a7b2:    1a 52             	h[r1 + 2] = r2			  ## RF_ble.c:1659:22
 1e1a7b4:    82 72             	r2 = 40			  ## RF_ble.c:1661:21
 1e1a7b6:    4a 50             	h[r0 + 8] = r2			  ## RF_ble.c:1661:21
 1e1a7b8:    12 70             	r2 = 1			  ## RF_ble.c:1661:21
 1e1a7ba:    9a 50             	h[r0 + 18] = r2			  ## RF_ble.c:1662:20
 1e1a7bc:    aa 50             	h[r0 + 20] = r2			  ## RF_ble.c:1663:20
 1e1a7be:    42 50             	r2 = h[r0 + 8] (u)			  ## RF_ble.c:1664:5
 1e1a7c0:    92 b4             	r2 |= 512			  ## RF_ble.c:1664:5
 1e1a7c2:    4a 50             	h[r0 + 8] = r2			  ## RF_ble.c:1664:5
 1e1a7c4:    f2 52             	r2 = h[r1 + 30] (u)			  ## RF_ble.c:1665:5
 1e1a7c6:    92 b0             	r2 |= 2			  ## RF_ble.c:1665:5
 1e1a7c8:    fa 52             	h[r1 + 30] = r2			  ## RF_ble.c:1665:5
 1e1a7ca:    f2 52             	r2 = h[r1 + 30] (u)			  ## RF_ble.c:1666:5
 1e1a7cc:    12 b1             	r2 |= 4			  ## RF_ble.c:1666:5
 1e1a7ce:    fa 52             	h[r1 + 30] = r2			  ## RF_ble.c:1666:5
 1e1a7d0:    02 fc 64 00       	r2 = r0 + 100			  ## RF_ble.c:1666:5
 1e1a7d4:    23 64             	r3 = b[r2 + 2] (u)			  ## RF_ble.c:1667:5
 1e1a7d6:    73 b0             	r3 &= 4294967294			  ## RF_ble.c:1667:5
 1e1a7d8:    2b 64             	b[r2 + 2] = r3			  ## RF_ble.c:1667:5
 1e1a7da:    33 64             	r3 = b[r2 + 3] (u)			  ## RF_ble.c:1668:5
 1e1a7dc:    73 b0             	r3 &= 4294967294			  ## RF_ble.c:1668:5
 1e1a7de:    3b 64             	b[r2 + 3] = r3			  ## RF_ble.c:1668:5
 1e1a7e0:    a6 70             	r6 = 10			  ## RF_ble.c:1668:5
 1e1a7e2:    03 fc cc 01       	r3 = r0 + 460
 1e1a7e6:    3e 66             	b[r3 + 3] = r6			  ## analog_ble.c:225:21
 1e1a7e8:    c2 ff e8 09 00 00 	r2 = 2536 <system_data_end : 9e8 >			  ## analog_ble.c:225:21
 1e1a7ee:    27 f9 03 20       	r7 = b[r2 + 3] (s)			  ## analog_ble.c:248:12
 1e1a7f2:    c5 05             	r5 = r7.b0 (u)			  ## analog_ble.c:248:12
 1e1a7f4:    95 e0 02 80       	if (r5 > 9) goto 4 <le_hw_open+0xA6 : 1e1a7fc >			  ## analog_ble.c:248:12
 1e1a7f8:    3d 66             	b[r3 + 3] = r5			  ## analog_ble.c:250:25
 1e1a7fa:    76 08             	r6 = r7			  ## analog_ble.c:250:25
 1e1a7fc:    05 54             	r5 = h[r2 + 0] (u)			  ## analog_ble.c:254:38
 1e1a7fe:    2d d3             	r5 = r5 >> 12			  ## analog_ble.c:254:38
 1e1a800:    56 f2 01 b0       	ifs (r6 < r5) goto 2 <le_hw_open+0xB0 : 1e1a806 >			  ## analog_ble.c:254:38
 1e1a804:    56 08             	r6 = r5			  ## analog_ble.c:254:19
 1e1a806:    3e 66             	b[r3 + 3] = r6			  ## analog_ble.c:254:17
 1e1a808:    16 f6 20 01       	[r0 + 288] = r6			  ## analog_ble.c:261:27
 1e1a80c:    53 54             	r3 = h[r2 + 10] (u)			  ## RF_ble.c:1681:5
 1e1a80e:    63 fb 00 39       	r3 = 0 - r3			  ## RF_ble.c:1684:26
 1e1a812:    1b c5             	r3 = r3 << 20			  ## RF_ble.c:1684:52
 1e1a814:    c5 64             	r5 = b[r2 + 12] (u)			  ## RF_ble.c:1679:12
 1e1a816:    02 fb c0 5d       	r2 = 24000 <report_overlay_end+0xA78 : 5dc0 >			  ## RF_ble.c:1684:65
 1e1a81a:    e0 fe 20 33       	r3 = r3 / r2 (s)			  ## RF_ble.c:1684:65
 1e1a81e:    06 70             	r6 = 0			  ## RF_ble.c:1684:65
 1e1a820:    02 70             	r2 = 0			  ## RF_ble.c:1684:65
 1e1a822:    01 2a             	if (r5 == 0) goto 2 <le_hw_open+0xD0 : 1e1a826 >			  ## RF_ble.c:1684:65
 1e1a824:    32 08             	r2 = r3			  ## RF_ble.c:1684:65
 1e1a826:    12 f6 24 01       	[r0 + 292] = r2			  ## RF_ble.c:1684:21
 1e1a82a:    02 fb 01 01       	r2 = 257 <DRIVER_RAM_TOTAL+0xF : 101 >			  ## RF_ble.c:1687:24
 1e1a82e:    ea 52             	h[r1 + 28] = r2			  ## RF_ble.c:1687:24
 1e1a830:    12 70             	r2 = 1			  ## RF_ble.c:1688:24
 1e1a832:    da 52             	h[r1 + 26] = r2			  ## RF_ble.c:1688:24
 1e1a834:    7e 50             	h[r0 + 14] = r6			  ## RF_ble.c:1690:19
 1e1a836:    8e 50             	h[r0 + 16] = r6			  ## RF_ble.c:1691:19
 1e1a838:    be 50             	h[r0 + 22] = r6			  ## RF_ble.c:1693:21
 1e1a83a:    da 50             	h[r0 + 26] = r2			  ## RF_ble.c:1694:21
 1e1a83c:    ce 50             	h[r0 + 24] = r6			  ## RF_ble.c:1695:21
 1e1a83e:    ea 50             	h[r0 + 28] = r2			  ## RF_ble.c:1696:21
 1e1a840:    f2 7f             	r2 = 255			  ## RF_ble.c:1696:21
 1e1a842:    ba 51             	h[r0 + 54] = r2			  ## RF_ble.c:1698:22
 1e1a844:    c3 ff 95 82 00 00 	r3 = 33429 <nvbss_size+0x1795 : 8295 >			  ## RF_ble.c:1699:20
 1e1a84a:    cb 52             	h[r1 + 24] = r3			  ## RF_ble.c:1699:20
 1e1a84c:    ee 51             	h[r0 + 60] = r6			  ## RF_ble.c:1700:24
 1e1a84e:    4e 52             	h[r1 + 8] = r6			  ## RF_ble.c:1702:24
 1e1a850:    5e 52             	h[r1 + 10] = r6			  ## RF_ble.c:1703:24
 1e1a852:    6e 52             	h[r1 + 12] = r6			  ## RF_ble.c:1704:24
 1e1a854:    d2 f5 04 00       	b[sp+4] = r2			  ## RF_ble.c:1706:5
 1e1a858:    f1 07             	r1 = -1			  ## RF_ble.c:1706:5
 1e1a85a:    09 02             	[sp] = r1			  ## RF_ble.c:1706:5
 1e1a85c:    01 a0             	r1 = sp + 0			  ## RF_ble.c:1706:5
 1e1a85e:    bf f3 2c fb       	call -2472 <__set_channel_map : 1e19eba >			  ## RF_ble.c:1707:5
 1e1a862:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:3181:13
 1e1a864:    0d 20             	if (r0 == 0) goto 26 <le_hw_open+0x12A : 1e1a880 >			  ## RF_ble.c:3181:13
 1e1a866:    80 72             	r0 = 40			  ## RF_ble.c:3182:29
 1e1a868:    bf f3 53 65       	call -79194 <btctler_nv_memory_malloc : 1e07312 >			  ## RF_ble.c:3182:29
 1e1a86c:    06 48             	r6 = [r4 + 0]			  ## RF_ble.c:3182:13
 1e1a86e:    10 f6 e4 61       	[r6 + 484] = r0			  ## RF_ble.c:3182:27
 1e1a872:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:3183:9
 1e1a876:    01 f9 20 00       	r1 = b[r0 + 32] (u)			  ## RF_ble.c:3183:23
 1e1a87a:    11 80             	r1 += 1			  ## RF_ble.c:3183:23
 1e1a87c:    11 f9 20 00       	b[r0 + 32] = r1			  ## RF_ble.c:3183:23
 1e1a880:    60 fc 78 01       	r0 = r6 + 376
 1e1a884:    01 91             	r1 = r0 + 16			  ## RF_ble.c:4029:20
 1e1a886:    49 40             	[r0 + 16] = r1			  ## list.h:188:16
 1e1a888:    59 40             	[r0 + 20] = r1			  ## list.h:189:16
 1e1a88a:    01 fc 20 00       	r1 = r0 + 32			  ## RF_ble.c:4030:20
 1e1a88e:    89 40             	[r0 + 32] = r1			  ## list.h:188:16
 1e1a890:    99 40             	[r0 + 36] = r1			  ## list.h:189:16
 1e1a892:    81 91             	r1 = r0 + 24			  ## RF_ble.c:4031:20
 1e1a894:    69 40             	[r0 + 24] = r1			  ## list.h:188:16
 1e1a896:    79 40             	[r0 + 28] = r1			  ## list.h:189:16
 1e1a898:    01 70             	r1 = 0			  ## list.h:189:16
 1e1a89a:    39 40             	[r0 + 12] = r1			  ## RF_ble.c:216:15
 1e1a89c:    29 40             	[r0 + 8] = r1			  ## RF_ble.c:216:15
 1e1a89e:    19 40             	[r0 + 4] = r1			  ## RF_ble.c:216:15
 1e1a8a0:    09 40             	[r0 + 0] = r1			  ## RF_ble.c:216:15
 1e1a8a2:    40 08             	r0 = r4			  ## RF_ble.c:4036:5
 1e1a8a4:    52 17             	call -348 <le_hw_standby : 1e1a74a >			  ## RF_ble.c:4036:5
 1e1a8a6:    40 08             	r0 = r4			  ## RF_ble.c:4039:1
 1e1a8a8:    04 0a             	sp += 8			  ## RF_ble.c:4039:1
 1e1a8aa:    58 01             	{pc, r8-r4} = [sp++]			  ## RF_ble.c:4039:1


le_hw_handler_register:
 1e1a8ac:    11 f6 d8 01       	[r0 + 472] = r1			  ## RF_ble.c:4505:0
 1e1a8b0:    12 f6 dc 01       	[r0 + 476] = r2			  ## RF_ble.c:4507:26
 1e1a8b4:    20 00             	rts			  ## RF_ble.c:4508:1


__set_adv_channel_index:
 1e1a8b6:    77 01             	[--sp] = {rets, r7-r4}			  ## RF_ble.c:551:0
 1e1a8b8:    04 08             	r4 = r0			  ## RF_ble.c:551:0
 1e1a8ba:    02 70             	r2 = 0			  ## RF_ble.c:551:0
 1e1a8bc:    00 fb 00 25       	r0 = 9472 <pmu_voltage+0x60 : 2500 >			  ## RF_ble.c:551:0
 1e1a8c0:    55 72             	r5 = 37			  ## RF_ble.c:551:0
 1e1a8c2:    16 70             	r6 = 1			  ## RF_ble.c:551:0
 1e1a8c4:    03 70             	r3 = 0			  ## RF_ble.c:551:0
 1e1a8c6:    f8 fd 20 76       	r7 = r6 << r2			  ## RF_ble.c:558:27
 1e1a8ca:    17 f0 05 00       	if ((r7 & r1) == 0) goto 10 <__set_adv_channel_index+0x22 : 1e1a8d8 >			  ## RF_ble.c:558:27
 1e1a8ce:    57 08             	r7 = r5
 1e1a8d0:    60 ff ff 39 02 00 	if ((r3 & 255) == 0) goto 4 <__set_adv_channel_index+0x24 : 1e1a8da >
 1e1a8d6:    0a 18             	goto 20 <__set_adv_channel_index+0x36 : 1e1a8ec >
 1e1a8d8:    37 08             	r7 = r3
 1e1a8da:    15 80             	r5 += 1			  ## RF_ble.c:557:19
 1e1a8dc:    12 80             	r2 += 1			  ## RF_ble.c:557:25
 1e1a8de:    00 fc 00 01       	r0 = r0 + 256			  ## RF_ble.c:557:19
 1e1a8e2:    73 08             	r3 = r7			  ## RF_ble.c:557:19
 1e1a8e4:    32 e0 ef 3f       	if (r2 < 3) goto -34 <__set_adv_channel_index+0x10 : 1e1a8c6 >			  ## RF_ble.c:557:19
 1e1a8e8:    00 70             	r0 = 0
 1e1a8ea:    04 18             	goto 8 <__set_adv_channel_index+0x3E : 1e1a8f4 >
 1e1a8ec:    1a c2             	r2 = r3 << 8			  ## RF_ble.c:564:17
 1e1a8ee:    a0 b0             	r0 = r0 - r2			  ## RF_ble.c:564:17
 1e1a8f0:    20 fd ff 0a       	r0 = r0 & 65280			  ## RF_ble.c:564:17
 1e1a8f4:    4a c1             	r2 = r1 << 5			  ## RF_ble.c:587:38
 1e1a8f6:    22 fd 80 29       	r2 = r2 & 128			  ## RF_ble.c:569:14
 1e1a8fa:    89 c1             	r1 = r1 << 6			  ## RF_ble.c:586:38
 1e1a8fc:    21 fd 40 19       	r1 = r1 & 64			  ## RF_ble.c:586:38
 1e1a900:    51 b4             	r1 |= r2			  ## RF_ble.c:585:62
 1e1a902:    31 b3             	r1 ^= 64			  ## RF_ble.c:585:62
 1e1a904:    51 b6             	r1 |= r3			  ## RF_ble.c:586:56
 1e1a906:    41 04             	r1 = r1.b0 (u)			  ## RF_ble.c:586:56
 1e1a908:    50 b2             	r0 |= r1			  ## RF_ble.c:586:56
 1e1a90a:    05 fd 40 0a       	r5 = r0 | 16384			  ## RF_ble.c:586:56
 1e1a90e:    97 f3 45 62       	call 3064970 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e1a912:    08 00             	csync			  ## RF_ble.c:304:5
 1e1a914:    c0 ff 1c 80 1c 00 	r0 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >			  ## RF_ble.c:304:5
 1e1a91a:    1d 40             	[r0 + 4] = r5			  ## RF_ble.c:306:21
 1e1a91c:    08 00             	csync			  ## RF_ble.c:307:5
 1e1a91e:    c1 ff 84 2d 00 00 	r1 = 11652 <bb_hdl : 2d84 >			  ## RF_ble.c:147:19
 1e1a924:    01 42             	r1 = [r1 + 0]			  ## RF_ble.c:147:19
 1e1a926:    41 42             	r1 = [r1 + 16]			  ## RF_ble.c:147:35
 1e1a928:    61 b8             	r1 = r4 - r1			  ## RF_ble.c:147:17
 1e1a92a:    c2 71             	r2 = 28			  ## RF_ble.c:147:17
 1e1a92c:    e0 fe 20 11       	r1 = r1 / r2 (s)			  ## RF_ble.c:147:17
 1e1a930:    09 c1             	r1 = r1 << 4			  ## RF_ble.c:308:50
 1e1a932:    02 fb f0 07       	r2 = 2032 <DRIVER_CODE_TOTAL+0x6A : 7f0 >			  ## RF_ble.c:308:50
 1e1a936:    51 b5             	r1 &= r2			  ## RF_ble.c:308:50
 1e1a938:    02 fb 05 18       	r2 = 6149 <UPDATE_CODE_TOTAL_SIZE+0x1A3 : 1805 >			  ## RF_ble.c:308:67
 1e1a93c:    51 b4             	r1 |= r2			  ## RF_ble.c:308:67
 1e1a93e:    09 40             	[r0 + 0] = r1			  ## RF_ble.c:308:21
 1e1a940:    17 01             	{rets, r7-r4} = [sp++]			  ## RF_ble.c:310:5
 1e1a942:    d7 f3 29 62       	goto 3064914 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5


hw_alloc_tx:
 1e1a946:    74 01             	[--sp] = {rets, r4}			  ## RF_ble.c:199:0
 1e1a948:    81 91             	r1 = r0 + 24			  ## RF_ble.c:203:53
 1e1a94a:    10 70             	r0 = 1			  ## RF_ble.c:203:27
 1e1a94c:    bf f3 7b 64       	call -79626 <hw_dma_alloc : 1e07246 >			  ## RF_ble.c:203:27
 1e1a950:    04 08             	r4 = r0			  ## RF_ble.c:203:27
 1e1a952:    04 28             	if (r4 == 0) goto 8 <hw_alloc_tx+0x16 : 1e1a95c >			  ## RF_ble.c:203:27
 1e1a954:    01 70             	r1 = 0			  ## RF_ble.c:206:9
 1e1a956:    42 71             	r2 = 20			  ## RF_ble.c:206:9
 1e1a958:    97 f3 ca 62       	call 3065236 <memset : 106ef0 >			  ## RF_ble.c:206:9
 1e1a95c:    40 08             	r0 = r4			  ## RF_ble.c:208:5
 1e1a95e:    54 01             	{pc, r4} = [sp++]			  ## RF_ble.c:208:5


__adv_pdu:
 1e1a960:    77 01             	[--sp] = {rets, r7-r4}			  ## RF_ble.c:3234:0
 1e1a962:    36 08             	r6 = r3			  ## RF_ble.c:3234:0
 1e1a964:    14 08             	r4 = r1			  ## RF_ble.c:3234:0
 1e1a966:    62 e0 48 80       	if (r2 > 6) goto 144 <.GJTIE897_0_0_+0x82 : 1e1a9fa >			  ## RF_ble.c:3234:0
 1e1a96a:    05 fc 68 01       	r5 = r0 + 360			  ## RF_ble.c:3234:0
 1e1a96e:    a2 00             	tbb [r2]			  ## RF_ble.c:3234:0


.GJTIS897_0_0_:
 1e1a970:    04     < 4 : 0x4 >
 1e1a971:    22     < 34 : 0x22 >
 1e1a972:    04     < 4 : 0x4 >
 1e1a973:    45     < 69 : 0x45 >
 1e1a974:    45     < 69 : 0x45 >
 1e1a975:    45     < 69 : 0x45 >
 1e1a976:    04     < 4 : 0x4 >
 1e1a977:    00     < 0 : 0x0 >
 1e1a978:    80 58             	r0 = h[r4 + 16] (u)			  ## RF_ble.c:3243:9
 1e1a97a:    21 fd 0f 29       	r1 = r2 & 15			  ## RF_ble.c:3244:9
 1e1a97e:    30 fd 3f 09       	r0 = r0 & 4294967232			  ## RF_ble.c:3243:9
 1e1a982:    50 b2             	r0 |= r1			  ## RF_ble.c:3244:9
 1e1a984:    88 58             	h[r4 + 16] = r0			  ## RF_ble.c:3244:9
 1e1a986:    61 9c             	r1 = r6 + 6			  ## RF_ble.c:3245:9
 1e1a988:    29 69             	b[r4 + 18] = r1			  ## RF_ble.c:3245:9
 1e1a98a:    81 f9 01 50       	r1 = b[r5 ++= 1] (u)			  ## RF_ble.c:3247:9
 1e1a98e:    c2 ff 8f ff 00 00 	r2 = 65423 <_IRQ_MEM_ADDR+0x8F : ff8f >			  ## RF_ble.c:3247:9
 1e1a994:    50 b5             	r0 &= r2			  ## RF_ble.c:3247:9
 1e1a996:    57 02             	r7 = [sp+20]			  ## RF_ble.c:3247:9
 1e1a998:    89 c1             	r1 = r1 << 6			  ## RF_ble.c:3247:9
 1e1a99a:    21 fd 40 19       	r1 = r1 & 64			  ## RF_ble.c:3247:9
 1e1a99e:    50 b2             	r0 |= r1			  ## RF_ble.c:3247:9
 1e1a9a0:    88 58             	h[r4 + 16] = r0			  ## RF_ble.c:3247:9
 1e1a9a2:    40 99             	r0 = r4 + 20			  ## RF_ble.c:3248:9
 1e1a9a4:    62 70             	r2 = 6			  ## RF_ble.c:3248:9
 1e1a9a6:    51 08             	r1 = r5			  ## RF_ble.c:3248:9
 1e1a9a8:    97 f3 9c 62       	call 3065144 <memcpy : 106ee4 >			  ## RF_ble.c:3248:9
 1e1a9ac:    a0 99             	r0 = r4 + 26			  ## RF_ble.c:3250:25
 1e1a9ae:    71 08             	r1 = r7			  ## RF_ble.c:3250:9
 1e1a9b0:    62 08             	r2 = r6			  ## RF_ble.c:3250:9
 1e1a9b2:    21 18             	goto 66 <.GJTIE897_0_0_+0x7E : 1e1a9f6 >			  ## RF_ble.c:3250:9
 1e1a9b4:    80 58             	r0 = h[r4 + 16] (u)			  ## RF_ble.c:3257:9
 1e1a9b6:    30 fd 3f 09       	r0 = r0 & 4294967232			  ## RF_ble.c:3257:9
 1e1a9ba:    10 b0             	r0 |= 1			  ## RF_ble.c:3257:9
 1e1a9bc:    88 58             	h[r4 + 16] = r0			  ## RF_ble.c:3258:9
 1e1a9be:    c1 70             	r1 = 12			  ## RF_ble.c:3259:9
 1e1a9c0:    29 69             	b[r4 + 18] = r1			  ## RF_ble.c:3259:9
 1e1a9c2:    01 6a             	r1 = b[r5 + 0] (u)			  ## RF_ble.c:3261:9
 1e1a9c4:    30 fd 7e 09       	r0 = r0 & 4294967169			  ## RF_ble.c:3261:9
 1e1a9c8:    89 c1             	r1 = r1 << 6			  ## RF_ble.c:3261:9
 1e1a9ca:    21 fd 40 19       	r1 = r1 & 64			  ## RF_ble.c:3261:9
 1e1a9ce:    e0 fd 00 61       	r6 = r1 | r0			  ## RF_ble.c:3261:9
 1e1a9d2:    8e 58             	h[r4 + 16] = r6			  ## RF_ble.c:3261:9
 1e1a9d4:    40 99             	r0 = r4 + 20			  ## RF_ble.c:3262:9
 1e1a9d6:    11 9a             	r1 = r5 + 1			  ## RF_ble.c:3262:9
 1e1a9d8:    62 70             	r2 = 6			  ## RF_ble.c:3262:9
 1e1a9da:    97 f3 83 62       	call 3065094 <memcpy : 106ee4 >			  ## RF_ble.c:3262:9
 1e1a9de:    70 6a             	r0 = b[r5 + 7] (u)			  ## RF_ble.c:3264:9
 1e1a9e0:    c1 ff 41 ff 00 00 	r1 = 65345 <_IRQ_MEM_ADDR+0x41 : ff41 >			  ## RF_ble.c:3264:9
 1e1a9e6:    51 bd             	r1 &= r6			  ## RF_ble.c:3264:9
 1e1a9e8:    c0 c1             	r0 = r0 << 7			  ## RF_ble.c:3264:9
 1e1a9ea:    00 04             	r0 = r0.b0 (u)			  ## RF_ble.c:3264:9
 1e1a9ec:    50 b2             	r0 |= r1			  ## RF_ble.c:3264:9
 1e1a9ee:    88 58             	h[r4 + 16] = r0			  ## RF_ble.c:3264:9
 1e1a9f0:    a0 99             	r0 = r4 + 26			  ## RF_ble.c:3265:25
 1e1a9f2:    81 9a             	r1 = r5 + 8			  ## RF_ble.c:3265:9
 1e1a9f4:    62 70             	r2 = 6			  ## RF_ble.c:3265:9
 1e1a9f6:    97 f3 75 62       	call 3065066 <memcpy : 106ee4 >
 1e1a9fa:    57 01             	{pc, r7-r4} = [sp++]			  ## RF_ble.c:3268:1


ble_power_get:
 1e1a9fc:    74 01             	[--sp] = {rets, r4}			  ## le_low_power.c:670:0
 1e1a9fe:    04 08             	r4 = r0			  ## le_low_power.c:670:0
 1e1aa00:    00 71             	r0 = 16			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:716:13
 1e1aa02:    bf f3 d8 a7       	call -45136 <malloc : 1e0f9b6 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:716:13
 1e1aa06:    0f 20             	if (r0 == 0) goto 30 <ble_power_get+0x2A : 1e1aa26 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:717:9
 1e1aa08:    c1 ff d0 93 e1 01 	r1 = 31560656 <ble_power_ops : 1e193d0 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:722:16
 1e1aa0e:    39 40             	[r0 + 12] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:722:16
 1e1aa10:    2c 40             	[r0 + 8] = r4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:723:17
 1e1aa12:    c1 ff 00 50 00 00 	r1 = 20480 <nvbss_begin : 5000 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/system/generic/list.h:154:28
 1e1aa18:    12 42             	r2 = [r1 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/system/generic/list.h:154:28
 1e1aa1a:    18 42             	[r1 + 4] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/system/generic/list.h:137:16
 1e1aa1c:    09 40             	[r0 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/system/generic/list.h:138:16
 1e1aa1e:    1a 40             	[r0 + 4] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/system/generic/list.h:139:16
 1e1aa20:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/system/generic/list.h:140:16
 1e1aa22:    58 48             	[r4 + 20] = r0			  ## le_low_power.c:672:20
 1e1aa24:    54 01             	{pc, r4} = [sp++]			  ## le_low_power.c:675:1
 1e1aa26:    8f f3 db 44       	call 2001334 <p33_soft_reset : 33e0 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/driver/cpu/bd19/asm/cpu.h:148:5
 1e1aa2a:    c5 f4 00 49       	[r4 + 20] = 0			  ## le_low_power.c:672:20
 1e1aa2e:    14 01             	{rets, r4} = [sp++]			  ## cpu.h:148:5
 1e1aa30:    cf f3 d6 44       	goto 2001324 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5


check_event_pending:
 1e1aa34:    75 01             	[--sp] = {rets, r5, r4}			  ## RF_ble.c:4636:0
 1e1aa36:    01 70             	r1 = 0			  ## RF_ble.c:4636:0
 1e1aa38:    c2 ff 28 80 1c 00 	r2 = 1867816 <uECC_vli_cmp_unsafe+0xC102C : 1c8028 >			  ## RF_ble.c:4636:0
 1e1aa3e:    10 70             	r0 = 1			  ## RF_ble.c:4636:0
 1e1aa40:    04 44             	r4 = [r2 + 0]			  ## RF_ble.c:4639:13
 1e1aa42:    25 44             	r5 = [r2 + 8]			  ## RF_ble.c:4639:29
 1e1aa44:    f8 fd 10 30       	r3 = r0 << r1			  ## RF_ble.c:4639:44
 1e1aa48:    54 b7             	r4 &= r3			  ## RF_ble.c:4639:42
 1e1aa4a:    54 f1 09 00       	if ((r4 & r5) != 0) goto 18 <check_event_pending+0x2C : 1e1aa60 >			  ## RF_ble.c:4639:42
 1e1aa4e:    94 44             	r4 = [r2 + 36]			  ## RF_ble.c:4642:13
 1e1aa50:    a5 44             	r5 = [r2 + 40]			  ## RF_ble.c:4642:29
 1e1aa52:    53 b9             	r3 &= r4			  ## RF_ble.c:4642:42
 1e1aa54:    53 f1 04 00       	if ((r3 & r5) != 0) goto 8 <check_event_pending+0x2C : 1e1aa60 >			  ## RF_ble.c:4642:42
 1e1aa58:    11 80             	r1 += 1			  ## RF_ble.c:4638:39
 1e1aa5a:    71 e0 f1 9f       	if (r1 <= 7) goto -30 <check_event_pending+0xC : 1e1aa40 >			  ## RF_ble.c:4638:39
 1e1aa5e:    00 70             	r0 = 0
 1e1aa60:    55 01             	{pc, r5, r4} = [sp++]			  ## RF_ble.c:4647:1


le_hw_suspend:
 1e1aa62:    34 00             	[--sp] = rets			  ## RF_ble.c:3982:0
 1e1aa64:    01 40             	r1 = [r0 + 0]			  ## RF_ble.c:3983:13
 1e1aa66:    02 f9 53 11       	r2 = b[r1 + 339] (u)			  ## RF_ble.c:3983:13
 1e1aa6a:    92 b0             	r2 |= 2			  ## RF_ble.c:3983:9
 1e1aa6c:    32 e0 05 00       	if (r2 == 3) goto 10 <le_hw_suspend+0x18 : 1e1aa7a >			  ## RF_ble.c:3983:9
 1e1aa70:    12 70             	r2 = 1			  ## RF_ble.c:3994:28
 1e1aa72:    12 f9 53 11       	b[r1 + 339] = r2			  ## RF_ble.c:3994:28
 1e1aa76:    bf f3 03 f5       	call -5626 <ble_hw_disable : 1e19480 >			  ## RF_ble.c:3995:5
 1e1aa7a:    30 00             	pc = [sp++]			  ## RF_ble.c:3996:1


ble_slot_schedule:
 1e1aa7c:    7f 01             	[--sp] = {rets, r15-r4}			  ## RF_ble.c:4672:0
 1e1aa7e:    97 f3 8d 61       	call 3064602 <local_irq_disable : 106d9c >			  ## RF_ble.c:4673:5
 1e1aa82:    08 00             	csync			  ## RF_ble.c:4673:5
 1e1aa84:    c8 ff 88 2d 00 00 	r8 = 11656 <sche_lock : 2d88 >			  ## RF_ble.c:4673:5
 1e1aa8a:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:4675:9
 1e1aa8e:    03 20             	if (r0 == 0) goto 6 <ble_slot_schedule+0x1A : 1e1aa96 >			  ## RF_ble.c:4675:9
 1e1aa90:    1f 01             	{rets, r15-r4} = [sp++]			  ## RF_ble.c:4676:9
 1e1aa92:    d7 f3 81 61       	goto 3064578 <local_irq_enable : 106d98 >			  ## RF_ble.c:4676:9
 1e1aa96:    19 70             	r9 = 1
 1e1aa98:    19 f6 00 80       	[r8 + 0] = r9			  ## RF_ble.c:4680:15
 1e1aa9c:    97 f3 7c 61       	call 3064568 <local_irq_enable : 106d98 >			  ## RF_ble.c:4682:5
 1e1aaa0:    ce ff 84 2d 00 00 	r14 = 11652 <bb_hdl : 2d84 >
 1e1aaa6:    00 f6 00 e0       	r0 = [r14 + 0]			  ## RF_ble.c:4695:9
 1e1aaaa:    01 f9 20 00       	r1 = b[r0 + 32] (u)			  ## RF_ble.c:4695:17
 1e1aaae:    21 e0 ac 30       	if (r1 < 2) goto 344 <.GJTIE901_0_0_+0x10A : 1e1ac0a >			  ## RF_ble.c:4695:17
 1e1aab2:    f6 07             	r6 = -1
 1e1aab4:    05 70             	r5 = 0
 1e1aab6:    ca ff 1c 80 1c 00 	r10 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >
 1e1aabc:    cb 71             	r11 = 28
 1e1aabe:    07 70             	r7 = 0			  ## RF_ble.c:4703:13
 1e1aac0:    0f 70             	r15 = 0			  ## RF_ble.c:4703:13
 1e1aac2:    fc 07             	r12 = -1			  ## RF_ble.c:4703:13
 1e1aac4:    04 18             	goto 8 <ble_slot_schedule+0x52 : 1e1aace >			  ## RF_ble.c:4703:13
 1e1aac6:    00 f6 00 e0       	r0 = [r14 + 0]
 1e1aaca:    c5 81             	r5 += 28			  ## RF_ble.c:4702:5
 1e1aacc:    27 80             	r7 += 2			  ## RF_ble.c:4702:5
 1e1aace:    01 f8 00 07       	r1 = h[r0+r7] (u)			  ## RF_ble.c:4703:13
 1e1aad2:    5b 22             	if (r1 == 0) goto 182 <.GJTIE901_0_0_+0x8A : 1e1ab8a >			  ## RF_ble.c:4703:13
 1e1aad4:    0d f6 10 00       	r13 = [r0 + 16]			  ## RF_ble.c:4704:35
 1e1aad8:    80 fb 50 4d       	r4 = r13 + r5			  ## RF_ble.c:4709:29
 1e1aadc:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:4709:29
 1e1aade:    58 20             	if (r0 == 0) goto 176 <.GJTIE901_0_0_+0x90 : 1e1ab90 >			  ## RF_ble.c:4709:29
 1e1aae0:    00 f9 52 01       	r0 = b[r0 + 338] (u)			  ## RF_ble.c:4712:23
 1e1aae4:    f8 fd 00 19       	r1 = r9 << r0			  ## RF_ble.c:4712:23
 1e1aae8:    e4 fd 00 2f       	r2 = r15.b0 (u)			  ## RF_ble.c:4712:20
 1e1aaec:    f0 8f             	r0 += -1			  ## RF_ble.c:4713:13
 1e1aaee:    e0 fd 20 f1       	r15 = r1 | r2			  ## RF_ble.c:4712:20
 1e1aaf2:    60 e0 4a 80       	if (r0 > 6) goto 148 <.GJTIE901_0_0_+0x8A : 1e1ab8a >			  ## RF_ble.c:4712:20
 1e1aaf6:    a0 00             	tbb [r0]


.GJTIS901_0_0_:
 1e1aaf8:    43     < 67 : 0x43 >
 1e1aaf9:    04     < 4 : 0x4 >
 1e1aafa:    43     < 67 : 0x43 >
 1e1aafb:    49     < 73 : 0x49 >
 1e1aafc:    49     < 73 : 0x49 >
 1e1aafd:    04     < 4 : 0x4 >
 1e1aafe:    04     < 4 : 0x4 >
 1e1aaff:    00     < 0 : 0x0 >
 1e1ab00:    00 f6 1c a0       	r0 = [r10 + 28]			  ## RF_ble.c:4654:10
 1e1ab04:    06 70             	r6 = 0			  ## RF_ble.c:4654:10
 1e1ab06:    21 f3 40 00       	if ((r0 & 2) != 0) goto 128 <.GJTIE901_0_0_+0x8A : 1e1ab8a >			  ## RF_ble.c:4654:10
 1e1ab0a:    94 17             	call -216 <check_event_pending : 1e1aa34 >			  ## RF_ble.c:4654:39
 1e1ab0c:    3e 30             	if (r0 != 0) goto 124 <.GJTIE901_0_0_+0x8A : 1e1ab8a >			  ## RF_ble.c:4654:39
 1e1ab0e:    97 f3 45 61       	call 3064458 <local_irq_disable : 106d9c >			  ## RF_ble.c:281:5
 1e1ab12:    08 00             	csync			  ## RF_ble.c:281:5
 1e1ab14:    00 f6 00 e0       	r0 = [r14 + 0]			  ## RF_ble.c:147:19
 1e1ab18:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e1ab1a:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e1ab1c:    e0 fe b0 00       	r0 = r0 / r11 (s)			  ## RF_ble.c:147:17
 1e1ab20:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:286:50
 1e1ab22:    20 fd 7f 00       	r0 = r0 & 4080			  ## RF_ble.c:286:50
 1e1ab26:    90 b0             	r0 |= 2			  ## RF_ble.c:286:56
 1e1ab28:    10 f6 00 a0       	[r10 + 0] = r0			  ## RF_ble.c:286:21
 1e1ab2c:    08 00             	csync			  ## RF_ble.c:287:5
 1e1ab2e:    06 f6 08 a0       	r6 = [r10 + 8]			  ## RF_ble.c:288:13
 1e1ab32:    97 f3 31 61       	call 3064418 <local_irq_enable : 106d98 >			  ## RF_ble.c:296:5
 1e1ab36:    97 f3 31 61       	call 3064418 <local_irq_disable : 106d9c >			  ## RF_ble.c:281:5
 1e1ab3a:    08 00             	csync			  ## RF_ble.c:281:5
 1e1ab3c:    00 f6 00 e0       	r0 = [r14 + 0]			  ## RF_ble.c:147:19
 1e1ab40:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e1ab42:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e1ab44:    e0 fe b0 00       	r0 = r0 / r11 (s)			  ## RF_ble.c:147:17
 1e1ab48:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:286:50
 1e1ab4a:    01 fb f0 07       	r1 = 2032 <DRIVER_CODE_TOTAL+0x6A : 7f0 >			  ## RF_ble.c:286:50
 1e1ab4e:    50 b3             	r0 &= r1			  ## RF_ble.c:286:50
 1e1ab50:    01 fb 02 38       	r1 = 14338 <_norflash_read+0x6 : 3802 >			  ## RF_ble.c:286:56
 1e1ab54:    50 b2             	r0 |= r1			  ## RF_ble.c:286:56
 1e1ab56:    10 f6 00 a0       	[r10 + 0] = r0			  ## RF_ble.c:286:21
 1e1ab5a:    08 00             	csync			  ## RF_ble.c:287:5
 1e1ab5c:    00 f6 08 a0       	r0 = [r10 + 8]			  ## RF_ble.c:288:13
 1e1ab60:    a1 05             	r1 = r6.l (u)			  ## RF_ble.c:4658:40
 1e1ab62:    00 c4             	r0 = r0 << 16			  ## RF_ble.c:4659:51
 1e1ab64:    20 fd ff 0b       	r0 = r0 & 16711680			  ## RF_ble.c:4659:51
 1e1ab68:    51 b0             	r1 |= r0			  ## RF_ble.c:4659:10
 1e1ab6a:    10 fc fd ff       	r0 = r1 + -3			  ## RF_ble.c:4666:44
 1e1ab6e:    11 80             	r1 += 1			  ## RF_ble.c:4660:9
 1e1ab70:    06 70             	r6 = 0			  ## RF_ble.c:4660:9
 1e1ab72:    41 e0 01 30       	if (r1 < 4) goto 2 <.GJTIE901_0_0_+0x78 : 1e1ab78 >
 1e1ab76:    06 08             	r6 = r0			  ## RF_ble.c:4666:12
 1e1ab78:    97 f3 0e 61       	call 3064348 <local_irq_enable : 106d98 >			  ## RF_ble.c:296:5
 1e1ab7c:    06 18             	goto 12 <.GJTIE901_0_0_+0x8A : 1e1ab8a >			  ## RF_ble.c:296:5
 1e1ab7e:    40 08             	r0 = r4
 1e1ab80:    70 17             	call -288 <le_hw_suspend : 1e1aa62 >
 1e1ab82:    80 f6 00 d5       	r0 = [r13+r5]
 1e1ab86:    06 f7 58 02       	r6 = h[r0 + 600] (u)
 1e1ab8a:    6c f2 01 30       	if (r12 < r6) goto 2 <.GJTIE901_0_0_+0x90 : 1e1ab90 >
 1e1ab8e:    6c 08             	r12 = r6			  ## RF_ble.c:4730:21
 1e1ab90:    e7 e0 99 1f       	if (r7 != 14) goto -206 <ble_slot_schedule+0x4A : 1e1aac6 >
 1e1ab94:    20 fd 0a f9       	r0 = r15 & 10			  ## RF_ble.c:4739:5
 1e1ab98:    c1 ff 6c 0f 00 00 	r1 = 3948 <ble_slot_schedule.credits : f6c >			  ## RF_ble.c:4739:5
 1e1ab9e:    20 e0 08 00       	if (r0 == 2) goto 16 <.GJTIE901_0_0_+0xB2 : 1e1abb2 >			  ## RF_ble.c:4739:5
 1e1aba2:    80 e0 08 00       	if (r0 == 8) goto 16 <.GJTIE901_0_0_+0xB6 : 1e1abb6 >
 1e1aba6:    a0 e0 0a 10       	if (r0 != 10) goto 20 <.GJTIE901_0_0_+0xBE : 1e1abbe >
 1e1abaa:    02 62             	r2 = b[r1 + 0] (u)			  ## RF_ble.c:4747:20
 1e1abac:    39 70             	r9 = 3			  ## RF_ble.c:4747:19
 1e1abae:    12 e0 03 00       	if (r2 == 1) goto 6 <.GJTIE901_0_0_+0xB8 : 1e1abb8 >			  ## RF_ble.c:4747:19
 1e1abb2:    19 70             	r9 = 1
 1e1abb4:    01 18             	goto 2 <.GJTIE901_0_0_+0xB8 : 1e1abb8 >
 1e1abb6:    39 70             	r9 = 3
 1e1abb8:    19 f9 00 10       	b[r1 + 0] = r9
 1e1abbc:    02 18             	goto 4 <.GJTIE901_0_0_+0xC2 : 1e1abc2 >
 1e1abbe:    09 f9 00 10       	r9 = b[r1 + 0] (u)
 1e1abc2:    01 f6 00 e0       	r1 = [r14 + 0]
 1e1abc6:    02 70             	r2 = 0
 1e1abc8:    13 08             	r3 = r1
 1e1abca:    04 70             	r4 = 0
 1e1abcc:    85 f7 02 30       	r5 = h[r3 ++= 2] (u)			  ## RF_ble.c:4753:13
 1e1abd0:    13 2a             	if (r5 == 0) goto 38 <.GJTIE901_0_0_+0xF8 : 1e1abf8 >			  ## RF_ble.c:4753:13
 1e1abd2:    45 42             	r5 = [r1 + 16]			  ## RF_ble.c:4754:35
 1e1abd4:    87 f6 00 52       	r7 = [r5+r2]			  ## RF_ble.c:4755:29
 1e1abd8:    0f 2e             	if (r7 == 0) goto 30 <.GJTIE901_0_0_+0xF8 : 1e1abf8 >			  ## RF_ble.c:4755:29
 1e1abda:    76 fc 58 02       	r6 = r7 + 600
 1e1abde:    00 5c             	r0 = h[r6 + 0] (u)			  ## RF_ble.c:4765:30
 1e1abe0:    0c f2 0a 30       	if (r12 < r0) goto 20 <.GJTIE901_0_0_+0xF8 : 1e1abf8 >			  ## RF_ble.c:4765:30
 1e1abe4:    07 f9 52 71       	r7 = b[r7 + 338] (u)			  ## RF_ble.c:4766:35
 1e1abe8:    17 e0 02 10       	if (r7 != 1) goto 4 <.GJTIE901_0_0_+0xF0 : 1e1abf0 >			  ## RF_ble.c:4766:35
 1e1abec:    19 e0 09 00       	if (r9 == 1) goto 18 <.GJTIE901_0_0_+0x102 : 1e1ac02 >
 1e1abf0:    37 e0 02 10       	if (r7 != 3) goto 4 <.GJTIE901_0_0_+0xF8 : 1e1abf8 >
 1e1abf4:    39 e0 05 00       	if (r9 == 3) goto 10 <.GJTIE901_0_0_+0x102 : 1e1ac02 >
 1e1abf8:    14 80             	r4 += 1			  ## RF_ble.c:4752:39
 1e1abfa:    c2 81             	r2 += 28			  ## RF_ble.c:4752:19
 1e1abfc:    84 e0 e6 3f       	if (r4 < 8) goto -52 <.GJTIE901_0_0_+0xCC : 1e1abcc >			  ## RF_ble.c:4752:19
 1e1ac00:    04 18             	goto 8 <.GJTIE901_0_0_+0x10A : 1e1ac0a >			  ## RF_ble.c:4752:19
 1e1ac02:    11 5c             	r1 = h[r6 + 2] (u)
 1e1ac04:    80 ba             	r0 = r5 + r2
 1e1ac06:    bf f3 1d f5       	call -5574 <le_hw_resume : 1e19644 >
 1e1ac0a:    c0 f4 00 89       	[r8 + 0] = 0			  ## RF_ble.c:4782:15
 1e1ac0e:    5f 01             	{pc, r15-r4} = [sp++]			  ## RF_ble.c:4783:1


le_hw_advertising:
 1e1ac10:    7a 01             	[--sp] = {rets, r10-r4}			  ## RF_ble.c:3388:0
 1e1ac12:    fe 0b             	sp += -4			  ## RF_ble.c:3388:0
 1e1ac14:    05 08             	r5 = r0			  ## RF_ble.c:3388:0
 1e1ac16:    0a f6 00 50       	r10 = [r5 + 0]			  ## RF_ble.c:3389:31
 1e1ac1a:    a7 fc 10 01       	r7 = r10 + 272
 1e1ac1e:    b2 5f             	r2 = h[r7 + 54] (u)
 1e1ac20:    16 08             	r6 = r1
 1e1ac22:    30 fd 1f 2a       	r0 = r2 & 4294959359			  ## RF_ble.c:882:23
 1e1ac26:    00 fd 1a 0a       	r0 = r0 | 6656			  ## RF_ble.c:882:23
 1e1ac2a:    b8 5f             	h[r7 + 54] = r0			  ## RF_ble.c:882:23
 1e1ac2c:    a0 fc 44 00       	r0 = r10 + 68			  ## RF_ble.c:882:23
 1e1ac30:    2d f3 03 20       	if ((r2 & 8192) != 0) goto 6 <le_hw_advertising+0x2A : 1e1ac3a >			  ## RF_ble.c:882:23
 1e1ac34:    a1 71             	r1 = 26			  ## RF_ble.c:886:28
 1e1ac36:    e9 50             	h[r0 + 28] = r1			  ## RF_ble.c:886:28
 1e1ac38:    d9 50             	h[r0 + 26] = r1			  ## RF_ble.c:887:28
 1e1ac3a:    01 fb 55 55       	r1 = 21845 <report_overlay_end+0x20D : 5555 >			  ## RF_ble.c:3410:22
 1e1ac3e:    09 50             	h[r0 + 0] = r1			  ## RF_ble.c:3410:22
 1e1ac40:    51 75             	r1 = 85			  ## RF_ble.c:3411:22
 1e1ac42:    19 50             	h[r0 + 2] = r1			  ## RF_ble.c:3411:22
 1e1ac44:    20 73             	r0 = 50			  ## RF_ble.c:3411:22
 1e1ac46:    10 f7 22 a0       	h[r10 + 34] = r0			  ## RF_ble.c:722:25
 1e1ac4a:    04 70             	r4 = 0			  ## RF_ble.c:722:25
 1e1ac4c:    14 f7 24 a0       	h[r10 + 36] = r4			  ## RF_ble.c:724:25
 1e1ac50:    18 5e             	h[r7 + 2] = r0			  ## RF_ble.c:725:25
 1e1ac52:    f8 4e             	[r7 + 60] = r0			  ## RF_ble.c:730:16
 1e1ac54:    00 5c             	r0 = h[r6 + 0] (u)			  ## RF_ble.c:3414:24
 1e1ac56:    01 fb 71 02       	r1 = 625 <BTCTLER_CL_RAM_TOTAL+0x8D : 271 >			  ## RF_ble.c:3414:38
 1e1ac5a:    41 0e             	r1 = r0 * r1			  ## RF_ble.c:3414:38
 1e1ac5c:    12 70             	r2 = 1			  ## RF_ble.c:3414:5
 1e1ac5e:    50 08             	r0 = r5			  ## RF_ble.c:3414:5
 1e1ac60:    bf f3 d8 f9       	call -3152 <__set_interval : 1e1a014 >			  ## RF_ble.c:3414:5
 1e1ac64:    00 4a             	r0 = [r5 + 0]			  ## RF_ble.c:480:31
 1e1ac66:    21 70             	r1 = 2
 1e1ac68:    00 fc 52 01       	r0 = r0 + 338
 1e1ac6c:    09 60             	b[r0 + 0] = r1			  ## RF_ble.c:482:22
 1e1ac6e:    3c 50             	h[r0 + 6] = r4			  ## RF_ble.c:484:22
 1e1ac70:    2c 50             	h[r0 + 4] = r4			  ## RF_ble.c:484:22
 1e1ac72:    97 f3 93 60       	call 3064102 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e1ac76:    08 00             	csync			  ## RF_ble.c:304:5
 1e1ac78:    c8 ff 1c 80 1c 00 	r8 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >			  ## RF_ble.c:304:5
 1e1ac7e:    c1 f4 20 8a       	[r8 + 4] = 8192			  ## RF_ble.c:306:21
 1e1ac82:    08 00             	csync			  ## RF_ble.c:307:5
 1e1ac84:    c9 ff 84 2d 00 00 	r9 = 11652 <bb_hdl : 2d84 >
 1e1ac8a:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:147:19
 1e1ac8e:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e1ac90:    20 ba             	r0 = r5 - r0			  ## RF_ble.c:147:17
 1e1ac92:    c1 71             	r1 = 28			  ## RF_ble.c:147:17
 1e1ac94:    e0 fe 10 00       	r0 = r0 / r1 (s)			  ## RF_ble.c:147:17
 1e1ac98:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e1ac9a:    01 fb f0 07       	r1 = 2032 <DRIVER_CODE_TOTAL+0x6A : 7f0 >			  ## RF_ble.c:308:50
 1e1ac9e:    50 b3             	r0 &= r1			  ## RF_ble.c:308:50
 1e1aca0:    51 81             	r1 += 21			  ## RF_ble.c:308:67
 1e1aca2:    50 b2             	r0 |= r1			  ## RF_ble.c:308:67
 1e1aca4:    10 f6 00 80       	[r8 + 0] = r0			  ## RF_ble.c:308:21
 1e1aca8:    97 f3 76 60       	call 3064044 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5
 1e1acac:    61 6c             	r1 = b[r6 + 6] (u)			  ## RF_ble.c:3417:44
 1e1acae:    00 4a             	r0 = [r5 + 0]			  ## RF_ble.c:1784:37
 1e1acb0:    31 e0 05 00       	if (r1 == 3) goto 10 <le_hw_advertising+0xAE : 1e1acbe >			  ## RF_ble.c:1788:5
 1e1acb4:    21 e0 06 00       	if (r1 == 2) goto 12 <le_hw_advertising+0xB4 : 1e1acc4 >
 1e1acb8:    11 e0 02 00       	if (r1 == 1) goto 4 <le_hw_advertising+0xB0 : 1e1acc0 >
 1e1acbc:    04 18             	goto 8 <le_hw_advertising+0xB6 : 1e1acc6 >
 1e1acbe:    04 71             	r4 = 16
 1e1acc0:    81 70             	r1 = 8
 1e1acc2:    02 18             	goto 4 <le_hw_advertising+0xB8 : 1e1acc8 >
 1e1acc4:    04 71             	r4 = 16
 1e1acc6:    01 70             	r1 = 0
 1e1acc8:    e2 51             	r2 = h[r0 + 60] (u)			  ## RF_ble.c:1811:35
 1e1acca:    22 fd f7 29       	r2 = r2 & 247			  ## RF_ble.c:1811:46
 1e1acce:    51 b4             	r1 |= r2			  ## RF_ble.c:1811:54
 1e1acd0:    e9 51             	h[r0 + 60] = r1			  ## RF_ble.c:1811:24
 1e1acd2:    e1 51             	r1 = h[r0 + 60] (u)			  ## RF_ble.c:1814:35
 1e1acd4:    21 fd ef 19       	r1 = r1 & 239			  ## RF_ble.c:1814:46
 1e1acd8:    51 b8             	r1 |= r4			  ## RF_ble.c:1814:54
 1e1acda:    e9 51             	h[r0 + 60] = r1			  ## RF_ble.c:1814:24
 1e1acdc:    10 5c             	r0 = h[r6 + 2] (u)			  ## RF_ble.c:3419:54
 1e1acde:    41 6c             	r1 = b[r6 + 4] (u)			  ## RF_ble.c:3419:27
 1e1ace0:    02 fb 71 02       	r2 = 625 <BTCTLER_CL_RAM_TOTAL+0x8D : 271 >			  ## RF_ble.c:3419:67
 1e1ace4:    80 0e             	r0 = r0 * r2			  ## RF_ble.c:3419:67
 1e1ace6:    89 c3             	r1 = r1 << 14			  ## RF_ble.c:3419:40
 1e1ace8:    50 b2             	r0 |= r1			  ## RF_ble.c:3419:47
 1e1acea:    10 f7 04 a0       	h[r10 + 4] = r0			  ## RF_ble.c:3419:24
 1e1acee:    70 6c             	r0 = b[r6 + 7] (u)			  ## RF_ble.c:3426:18
 1e1acf0:    20 e0 1a 00       	if (r0 == 2) goto 52 <le_hw_advertising+0x118 : 1e1ad28 >			  ## RF_ble.c:3426:18
 1e1acf4:    00 5c             	r0 = h[r6 + 0] (u)			  ## RF_ble.c:3427:22
 1e1acf6:    b0 e0 17 30       	if (r0 < 11) goto 46 <le_hw_advertising+0x118 : 1e1ad28 >			  ## RF_ble.c:3427:22
 1e1acfa:    97 f3 4f 60       	call 3063966 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e1acfe:    08 00             	csync			  ## RF_ble.c:304:5
 1e1ad00:    c1 f4 c0 8a       	[r8 + 4] = 49152			  ## RF_ble.c:306:21
 1e1ad04:    08 00             	csync			  ## RF_ble.c:307:5
 1e1ad06:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:147:19
 1e1ad0a:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e1ad0c:    20 ba             	r0 = r5 - r0			  ## RF_ble.c:147:17
 1e1ad0e:    c1 71             	r1 = 28			  ## RF_ble.c:147:17
 1e1ad10:    e0 fe 10 00       	r0 = r0 / r1 (s)			  ## RF_ble.c:147:17
 1e1ad14:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e1ad16:    20 fd 7f 00       	r0 = r0 & 4080			  ## RF_ble.c:308:50
 1e1ad1a:    01 fb 05 20       	r1 = 8197 <btif_cfg+0x9 : 2005 >			  ## RF_ble.c:308:67
 1e1ad1e:    50 b2             	r0 |= r1			  ## RF_ble.c:308:67
 1e1ad20:    10 f6 00 80       	[r8 + 0] = r0			  ## RF_ble.c:308:21
 1e1ad24:    97 f3 38 60       	call 3063920 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5
 1e1ad28:    51 6c             	r1 = b[r6 + 5] (u)			  ## RF_ble.c:3432:5
 1e1ad2a:    50 08             	r0 = r5			  ## RF_ble.c:3432:5
 1e1ad2c:    c4 15             	call -1144 <__set_adv_channel_index : 1e1a8b6 >			  ## RF_ble.c:3432:5
 1e1ad2e:    f0 7f             	r0 = 255			  ## RF_ble.c:3434:18
 1e1ad30:    bf f3 07 f6       	call -5106 <hw_alloc_rx : 1e19942 >			  ## RF_ble.c:3434:18
 1e1ad34:    a8 4f             	[r7 + 104] = r0			  ## RF_ble.c:3434:16
 1e1ad36:    f0 7f             	r0 = 255			  ## RF_ble.c:3435:18
 1e1ad38:    bf f3 03 f6       	call -5114 <hw_alloc_rx : 1e19942 >			  ## RF_ble.c:3435:18
 1e1ad3c:    b8 4f             	[r7 + 108] = r0			  ## RF_ble.c:3435:16
 1e1ad3e:    e8 07             	r8 = -2			  ## RF_ble.c:3435:16
 1e1ad40:    70 20             	if (r0 == 0) goto 224 <le_hw_advertising+0x212 : 1e1ae22 >			  ## RF_ble.c:3435:16
 1e1ad42:    a0 4f             	r0 = [r7 + 104]			  ## RF_ble.c:3436:10
 1e1ad44:    6e 20             	if (r0 == 0) goto 220 <le_hw_advertising+0x212 : 1e1ae22 >
 1e1ad46:    03 4a             	r3 = [r5 + 0]			  ## RF_ble.c:221:34
 1e1ad48:    40 81             	r0 += 20
 1e1ad4a:    bf f3 08 f6       	call -5104 <PHY_TO_BLE : 1e1995e >			  ## RF_ble.c:224:29
 1e1ad4e:    f8 56             	h[r3 + 30] = r0			  ## RF_ble.c:224:27
 1e1ad50:    03 4a             	r3 = [r5 + 0]			  ## RF_ble.c:221:34
 1e1ad52:    b0 4f             	r0 = [r7 + 108]			  ## RF_ble.c:3445:19
 1e1ad54:    40 81             	r0 += 20
 1e1ad56:    bf f3 02 f6       	call -5116 <PHY_TO_BLE : 1e1995e >			  ## RF_ble.c:224:29
 1e1ad5a:    08 57             	h[r3 + 32] = r0			  ## RF_ble.c:226:27
 1e1ad5c:    50 72             	r0 = 37			  ## RF_ble.c:3448:18
 1e1ad5e:    f3 15             	call -1050 <hw_alloc_tx : 1e1a946 >			  ## RF_ble.c:3448:18
 1e1ad60:    c8 4f             	[r7 + 112] = r0			  ## RF_ble.c:3448:16
 1e1ad62:    50 72             	r0 = 37			  ## RF_ble.c:3449:18
 1e1ad64:    f0 15             	call -1056 <hw_alloc_tx : 1e1a946 >			  ## RF_ble.c:3449:18
 1e1ad66:    d8 4f             	[r7 + 116] = r0			  ## RF_ble.c:3449:16
 1e1ad68:    5c 20             	if (r0 == 0) goto 184 <le_hw_advertising+0x212 : 1e1ae22 >			  ## RF_ble.c:3449:16
 1e1ad6a:    c1 4f             	r1 = [r7 + 112]			  ## RF_ble.c:3450:10
 1e1ad6c:    5a 22             	if (r1 == 0) goto 180 <le_hw_advertising+0x212 : 1e1ae22 >			  ## RF_ble.c:3450:10
 1e1ad6e:    a4 fc 0c 02       	r4 = r10 + 524
 1e1ad72:    23 68             	r3 = b[r4 + 2] (u)			  ## RF_ble.c:3455:5
 1e1ad74:    72 6c             	r2 = b[r6 + 7] (u)			  ## RF_ble.c:3455:5
 1e1ad76:    38 98             	r8 = r4 + 3			  ## RF_ble.c:3455:61
 1e1ad78:    18 f5 00 00       	[sp] = r8			  ## RF_ble.c:3455:5
 1e1ad7c:    a0 08             	r0 = r10			  ## RF_ble.c:3455:5
 1e1ad7e:    f0 15             	call -1056 <__adv_pdu : 1e1a960 >			  ## RF_ble.c:3455:5
 1e1ad80:    70 6c             	r0 = b[r6 + 7] (u)			  ## RF_ble.c:3456:14
 1e1ad82:    d6 4f             	r6 = [r7 + 116]			  ## RF_ble.c:3456:14
 1e1ad84:    10 e0 08 10       	if (r0 != 1) goto 16 <le_hw_advertising+0x188 : 1e1ad98 >			  ## RF_ble.c:3456:9
 1e1ad88:    23 68             	r3 = b[r4 + 2] (u)			  ## RF_ble.c:3457:9
 1e1ad8a:    12 70             	r2 = 1			  ## RF_ble.c:3457:9
 1e1ad8c:    18 f5 00 00       	[sp] = r8			  ## RF_ble.c:3457:9
 1e1ad90:    a0 08             	r0 = r10			  ## RF_ble.c:3457:9
 1e1ad92:    61 08             	r1 = r6			  ## RF_ble.c:3457:9
 1e1ad94:    e5 15             	call -1078 <__adv_pdu : 1e1a960 >			  ## RF_ble.c:3457:9
 1e1ad96:    21 18             	goto 66 <le_hw_advertising+0x1CA : 1e1adda >			  ## RF_ble.c:3457:9
 1e1ad98:    80 5c             	r0 = h[r6 + 16] (u)			  ## RF_ble.c:3309:5
 1e1ad9a:    08 f9 2e a2       	r8 = b[r10 + 558] (u)			  ## RF_ble.c:3459:46
 1e1ad9e:    30 fd 3f 09       	r0 = r0 & 4294967232			  ## RF_ble.c:3309:5
 1e1ada2:    10 b1             	r0 |= 4			  ## RF_ble.c:3309:5
 1e1ada4:    88 5c             	h[r6 + 16] = r0			  ## RF_ble.c:3310:5
 1e1ada6:    81 fc 06 00       	r1 = r8 + 6			  ## RF_ble.c:3311:5
 1e1adaa:    29 6d             	b[r6 + 18] = r1			  ## RF_ble.c:3311:5
 1e1adac:    01 f9 68 a1       	r1 = b[r10 + 360] (u)			  ## RF_ble.c:3314:5
 1e1adb0:    c2 ff 84 ff 00 00 	r2 = 65412 <_IRQ_MEM_ADDR+0x84 : ff84 >			  ## RF_ble.c:3314:5
 1e1adb6:    50 b5             	r0 &= r2			  ## RF_ble.c:3314:5
 1e1adb8:    89 c1             	r1 = r1 << 6			  ## RF_ble.c:3314:5
 1e1adba:    21 fd 40 19       	r1 = r1 & 64			  ## RF_ble.c:3314:5
 1e1adbe:    50 b2             	r0 |= r1			  ## RF_ble.c:3314:5
 1e1adc0:    88 5c             	h[r6 + 16] = r0			  ## RF_ble.c:3314:5
 1e1adc2:    40 9d             	r0 = r6 + 20			  ## RF_ble.c:3315:5
 1e1adc4:    71 fc 59 00       	r1 = r7 + 89			  ## RF_ble.c:3315:5
 1e1adc8:    62 70             	r2 = 6			  ## RF_ble.c:3315:5
 1e1adca:    97 f3 8b 60       	call 3064086 <memcpy : 106ee4 >			  ## RF_ble.c:3315:5
 1e1adce:    a0 9d             	r0 = r6 + 26			  ## RF_ble.c:3316:21
 1e1add0:    41 fc 23 00       	r1 = r4 + 35			  ## RF_ble.c:3459:60
 1e1add4:    82 08             	r2 = r8			  ## RF_ble.c:3316:5
 1e1add6:    97 f3 85 60       	call 3064074 <memcpy : 106ee4 >			  ## RF_ble.c:3316:5
 1e1adda:    c1 4f             	r1 = [r7 + 112]			  ## RF_ble.c:3465:19
 1e1addc:    02 70             	r2 = 0			  ## RF_ble.c:3465:5
 1e1adde:    08 70             	r8 = 0			  ## RF_ble.c:3465:5
 1e1ade0:    50 08             	r0 = r5			  ## RF_ble.c:3465:5
 1e1ade2:    bf f3 cb f5       	call -5226 <ble_hw_tx : 1e1997c >			  ## RF_ble.c:3465:5
 1e1ade6:    d1 4f             	r1 = [r7 + 116]			  ## RF_ble.c:3466:19
 1e1ade8:    12 70             	r2 = 1			  ## RF_ble.c:3466:5
 1e1adea:    50 08             	r0 = r5			  ## RF_ble.c:3466:5
 1e1adec:    bf f3 c6 f5       	call -5236 <ble_hw_tx : 1e1997c >			  ## RF_ble.c:3466:5
 1e1adf0:    18 f9 4e a2       	b[r10 + 590] = r8			  ## RF_ble.c:3468:21
 1e1adf4:    00 f7 08 a0       	r0 = h[r10 + 8] (u)			  ## RF_ble.c:1293:21
 1e1adf8:    70 b2             	r0 &= 4294967279			  ## RF_ble.c:1293:21
 1e1adfa:    10 f7 08 a0       	h[r10 + 8] = r0			  ## RF_ble.c:1293:21
 1e1adfe:    50 08             	r0 = r5			  ## RF_ble.c:3483:5
 1e1ae00:    fd 15             	call -1030 <ble_power_get : 1e1a9fc >			  ## RF_ble.c:3483:5
 1e1ae02:    11 70             	r1 = 1			  ## RF_ble.c:3485:5
 1e1ae04:    50 08             	r0 = r5			  ## RF_ble.c:3485:5
 1e1ae06:    bf f3 0a f4       	call -6124 <ble_hw_enable : 1e1961e >			  ## RF_ble.c:3485:5
 1e1ae0a:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:3487:9
 1e1ae0e:    00 f9 20 00       	r0 = b[r0 + 32] (u)			  ## RF_ble.c:3487:17
 1e1ae12:    20 e0 01 30       	if (r0 < 2) goto 2 <le_hw_advertising+0x208 : 1e1ae18 >			  ## RF_ble.c:3487:17
 1e1ae16:    32 16             	call -924 <ble_slot_schedule : 1e1aa7c >			  ## RF_ble.c:3488:9
 1e1ae18:    00 f7 06 a0       	r0 = h[r10 + 6] (u)			  ## RF_ble.c:3491:24
 1e1ae1c:    10 b1             	r0 |= 4			  ## RF_ble.c:3491:24
 1e1ae1e:    10 f7 06 a0       	h[r10 + 6] = r0			  ## RF_ble.c:3491:24
 1e1ae22:    80 08             	r0 = r8			  ## RF_ble.c:3495:1
 1e1ae24:    02 0a             	sp += 4			  ## RF_ble.c:3495:1
 1e1ae26:    5a 01             	{pc, r10-r4} = [sp++]			  ## RF_ble.c:3495:1


le_hw_send_packet:
 1e1ae28:    79 01             	[--sp] = {rets, r9-r4}			  ## RF_ble.c:4111:0
 1e1ae2a:    04 08             	r4 = r0			  ## RF_ble.c:4111:0
 1e1ae2c:    06 48             	r6 = [r4 + 0]			  ## RF_ble.c:4112:34
 1e1ae2e:    00 f7 ea 61       	r0 = h[r6 + 490] (u)
 1e1ae32:    77 02             	r7 = [sp+28]
 1e1ae34:    35 08             	r5 = r3
 1e1ae36:    28 08             	r8 = r2
 1e1ae38:    19 08             	r9 = r1
 1e1ae3a:    50 f2 02 a0       	ifs (r0 >= r5) goto 4 <le_hw_send_packet+0x1A : 1e1ae42 >
 1e1ae3e:    8f f3 cf 42       	call 2000286 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1ae42:    70 08             	r0 = r7			  ## RF_ble.c:4115:27
 1e1ae44:    80 15             	call -1280 <hw_alloc_tx : 1e1a946 >			  ## RF_ble.c:4115:27
 1e1ae46:    07 08             	r7 = r0			  ## RF_ble.c:4115:27
 1e1ae48:    03 3e             	if (r7 != 0) goto 6 <le_hw_send_packet+0x28 : 1e1ae50 >
 1e1ae4a:    8f f3 c9 42       	call 2000274 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1ae4e:    07 70             	r7 = 0			  ## cpu.h:148:5
 1e1ae50:    01 70             	r1 = 0			  ## RF_ble.c:4120:25
 1e1ae52:    42 71             	r2 = 20			  ## RF_ble.c:4120:25
 1e1ae54:    70 08             	r0 = r7			  ## RF_ble.c:4120:25
 1e1ae56:    97 f3 4b 60       	call 3063958 <memset : 106ef0 >			  ## RF_ble.c:4120:25
 1e1ae5a:    f0 fd 20 09       	r0 = r9 << 4			  ## RF_ble.c:4123:5
 1e1ae5e:    20 fd 30 09       	r0 = r0 & 48			  ## RF_ble.c:4123:5
 1e1ae62:    88 5e             	h[r7 + 16] = r0			  ## RF_ble.c:4123:5
 1e1ae64:    2d 6f             	b[r7 + 18] = r5			  ## RF_ble.c:4124:5
 1e1ae66:    0b ff 00 51 02 00 	ifs (r5 < 256) goto 4 <le_hw_send_packet+0x48 : 1e1ae70 >			  ## RF_ble.c:4124:5
 1e1ae6c:    8f f3 b8 42       	call 2000240 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1ae70:    40 9f             	r0 = r7 + 20			  ## RF_ble.c:4130:5
 1e1ae72:    81 08             	r1 = r8			  ## RF_ble.c:4130:5
 1e1ae74:    52 08             	r2 = r5			  ## RF_ble.c:4130:5
 1e1ae76:    97 f3 35 60       	call 3063914 <memcpy : 106ee4 >			  ## RF_ble.c:4130:5
 1e1ae7a:    65 fc 46 01       	r5 = r6 + 326			  ## RF_ble.c:4130:5
 1e1ae7e:    50 fc 52 00       	r0 = r5 + 82			  ## RF_ble.c:4134:22
 1e1ae82:    71 08             	r1 = r7			  ## RF_ble.c:4134:5
 1e1ae84:    bf f3 f6 61       	call -80916 <hw_dma_push : 1e07274 >			  ## RF_ble.c:4134:5
 1e1ae88:    00 5a             	r0 = h[r5 + 0] (u)
 1e1ae8a:    31 fd 1f 0a       	r1 = r0 & 4294959359			  ## RF_ble.c:882:23
 1e1ae8e:    01 fd 1c 1a       	r1 = r1 | 7168			  ## RF_ble.c:882:23
 1e1ae92:    09 5a             	h[r5 + 0] = r1			  ## RF_ble.c:882:23
 1e1ae94:    2d f3 05 00       	if ((r0 & 8192) != 0) goto 10 <le_hw_send_packet+0x7A : 1e1aea2 >			  ## RF_ble.c:882:23
 1e1ae98:    c0 71             	r0 = 28			  ## RF_ble.c:886:28
 1e1ae9a:    10 f7 60 60       	h[r6 + 96] = r0			  ## RF_ble.c:886:28
 1e1ae9e:    10 f7 5e 60       	h[r6 + 94] = r0			  ## RF_ble.c:887:28
 1e1aea2:    40 08             	r0 = r4			  ## RF_ble.c:4138:5
 1e1aea4:    bf f3 d0 f6       	call -4704 <__hw_tx_process : 1e19c48 >			  ## RF_ble.c:4138:5
 1e1aea8:    a0 5a             	r0 = h[r5 + 20] (u)			  ## RF_ble.c:410:17
 1e1aeaa:    10 e0 02 80       	if (r0 > 1) goto 4 <le_hw_send_packet+0x8A : 1e1aeb2 >			  ## RF_ble.c:410:17
 1e1aeae:    20 70             	r0 = 2
 1e1aeb0:    a8 5a             	h[r5 + 20] = r0
 1e1aeb2:    40 08             	r0 = r4			  ## RF_ble.c:4143:5
 1e1aeb4:    19 01             	{rets, r9-r4} = [sp++]			  ## RF_ble.c:4143:5
 1e1aeb6:    ff f3 67 f7       	goto -4402 <ble_latency_manualhold : 1e19d88 >			  ## RF_ble.c:4143:5


le_hw_upload_data:
 1e1aeba:    7c 01             	[--sp] = {rets, r12-r4}			  ## RF_ble.c:2335:0
 1e1aebc:    5a 0b             	sp += -332			  ## RF_ble.c:2335:0
 1e1aebe:    18 08             	r8 = r1			  ## RF_ble.c:2335:0
 1e1aec0:    06 08             	r6 = r0			  ## RF_ble.c:2335:0
 1e1aec2:    67 fc 50 01       	r7 = r6 + 336			  ## RF_ble.c:2335:0
 1e1aec6:    70 fc 38 00       	r0 = r7 + 56			  ## RF_ble.c:2340:26
 1e1aeca:    bf f3 e0 61       	call -80960 <hw_dma_pop : 1e0728e >			  ## RF_ble.c:2340:10
 1e1aece:    04 08             	r4 = r0			  ## RF_ble.c:2340:10
 1e1aed0:    86 28             	if (r4 == 0) goto 268 <le_hw_upload_data+0x124 : 1e1afde >			  ## RF_ble.c:2340:10
 1e1aed2:    65 fc a0 01       	r5 = r6 + 416
 1e1aed6:    00 6a             	r0 = b[r5 + 0] (u)			  ## RF_ble.c:1920:18
 1e1aed8:    75 20             	if (r0 == 0) goto 234 <le_hw_upload_data+0x10A : 1e1afc4 >			  ## RF_ble.c:1920:18
 1e1aeda:    a0 68             	r0 = b[r4 + 10] (u)			  ## RF_ble.c:1920:35
 1e1aedc:    73 20             	if (r0 == 0) goto 230 <le_hw_upload_data+0x10A : 1e1afc4 >			  ## RF_ble.c:1920:35
 1e1aede:    00 70             	r0 = 0
 1e1aee0:    10 f5 48 01       	[sp+328] = r0			  ## RF_ble.c:1921:12
 1e1aee4:    10 f5 44 01       	[sp+324] = r0			  ## RF_ble.c:1921:12
 1e1aee8:    10 f5 40 01       	[sp+320] = r0			  ## RF_ble.c:1921:12
 1e1aeec:    10 f5 3c 01       	[sp+316] = r0			  ## RF_ble.c:1921:12
 1e1aef0:    c0 a1             	r0 = sp + 28			  ## RF_ble.c:1921:12
 1e1aef2:    01 70             	r1 = 0			  ## RF_ble.c:1923:12
 1e1aef4:    02 fb 13 01       	r2 = 275 <DRIVER_RAM_TOTAL+0x21 : 113 >			  ## RF_ble.c:1923:12
 1e1aef8:    97 f3 fa 5f       	call 3063796 <memset : 106ef0 >			  ## RF_ble.c:1923:12
 1e1aefc:    40 58             	r0 = h[r4 + 8] (u)			  ## RF_ble.c:1924:23
 1e1aefe:    82 fd 20 00       	r0 = uextra(r0, p:4, l:2)			  ## RF_ble.c:1924:23
 1e1af02:    d0 f5 1b 00       	b[sp+27] = r0			  ## RF_ble.c:1924:12
 1e1af06:    60 4f             	r0 = [r7 + 88]			  ## RF_ble.c:1927:29
 1e1af08:    d0 f5 2f 01       	b[sp+303] = r0			  ## RF_ble.c:1927:18
 1e1af0c:    01 d2             	r1 = r0 >> 8			  ## RF_ble.c:1928:42
 1e1af0e:    d1 f5 30 01       	b[sp+304] = r1			  ## RF_ble.c:1928:18
 1e1af12:    01 d4             	r1 = r0 >> 16			  ## RF_ble.c:1929:42
 1e1af14:    d1 f5 31 01       	b[sp+305] = r1			  ## RF_ble.c:1929:18
 1e1af18:    01 d6             	r1 = r0 >> 24			  ## RF_ble.c:1930:42
 1e1af1a:    d1 f5 32 01       	b[sp+306] = r1			  ## RF_ble.c:1930:18
 1e1af1e:    31 6a             	r1 = b[r5 + 3] (u)			  ## RF_ble.c:1931:29
 1e1af20:    d1 f5 33 01       	b[sp+307] = r1			  ## RF_ble.c:1931:18
 1e1af24:    22 6e             	r2 = b[r7 + 2] (u)			  ## RF_ble.c:1932:17
 1e1af26:    72 e0 03 10       	if (r2 != 7) goto 6 <le_hw_upload_data+0x76 : 1e1af30 >			  ## RF_ble.c:1932:17
 1e1af2a:    91 b3             	r1 |= 128			  ## RF_ble.c:1933:22
 1e1af2c:    d1 f5 33 01       	b[sp+307] = r1			  ## RF_ble.c:1933:22
 1e1af30:    0b f9 0e 50       	r11 = b[r5 + 14] (u)			  ## RF_ble.c:1935:9
 1e1af34:    22 6b             	r2 = b[r5 + 18] (u)			  ## RF_ble.c:1935:9
 1e1af36:    c3 6a             	r3 = b[r5 + 12] (u)			  ## RF_ble.c:1935:9
 1e1af38:    09 f9 0d 50       	r9 = b[r5 + 13] (u)			  ## RF_ble.c:1935:9
 1e1af3c:    36 6b             	r6 = b[r5 + 19] (u)			  ## RF_ble.c:1935:9
 1e1af3e:    0a f9 11 50       	r10 = b[r5 + 17] (u)			  ## RF_ble.c:1935:9
 1e1af42:    01 6b             	r1 = b[r5 + 16] (u)			  ## RF_ble.c:1935:9
 1e1af44:    0c f9 0f 50       	r12 = b[r5 + 15] (u)			  ## RF_ble.c:1935:9
 1e1af48:    d6 f5 3b 01       	b[sp+315] = r6			  ## RF_ble.c:1935:9
 1e1af4c:    da f5 39 01       	b[sp+313] = r10			  ## RF_ble.c:1935:9
 1e1af50:    d1 f5 38 01       	b[sp+312] = r1			  ## RF_ble.c:1935:9
 1e1af54:    dc f5 37 01       	b[sp+311] = r12			  ## RF_ble.c:1935:9
 1e1af58:    d9 f5 35 01       	b[sp+309] = r9			  ## RF_ble.c:1935:9
 1e1af5c:    d3 f5 34 01       	b[sp+308] = r3			  ## RF_ble.c:1935:9
 1e1af60:    c8 fd 40 26       	r2 <= insert(r6, p:8, l:8)			  ## RF_ble.c:1935:9
 1e1af64:    d0 fd 80 12       	r1 <= insert(r2, p:16, l:16)			  ## RF_ble.c:1935:9
 1e1af68:    09 d4             	r1 = r1 >> 16			  ## RF_ble.c:1935:9
 1e1af6a:    d1 f5 3a 01       	b[sp+314] = r1			  ## RF_ble.c:1935:9
 1e1af6e:    c8 fd 40 bc       	r11 <= insert(r12, p:8, l:8)			  ## RF_ble.c:1935:9
 1e1af72:    d0 fd 80 3b       	r3 <= insert(r11, p:16, l:16)			  ## RF_ble.c:1935:9
 1e1af76:    19 d4             	r1 = r3 >> 16			  ## RF_ble.c:1935:9
 1e1af78:    d1 f5 36 01       	b[sp+310] = r1			  ## RF_ble.c:1935:9
 1e1af7c:    10 80             	r0 += 1			  ## RF_ble.c:1939:30
 1e1af7e:    68 4f             	[r7 + 88] = r0			  ## RF_ble.c:1939:30
 1e1af80:    f0 ef 02 10       	if (r0 != -1) goto 4 <le_hw_upload_data+0xCE : 1e1af88 >			  ## RF_ble.c:1939:30
 1e1af84:    8f f3 2c 42       	call 1999960 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1af88:    a0 68             	r0 = b[r4 + 10] (u)			  ## RF_ble.c:1946:17
 1e1af8a:    c0 8f             	r0 += -4			  ## RF_ble.c:1946:17
 1e1af8c:    a8 68             	b[r4 + 10] = r0			  ## RF_ble.c:1946:17
 1e1af8e:    11 70             	r1 = 1			  ## RF_ble.c:1947:9
 1e1af90:    59 02             	[sp+20] = r1			  ## RF_ble.c:1947:9
 1e1af92:    41 70             	r1 = 4			  ## RF_ble.c:1947:9
 1e1af94:    49 02             	[sp+16] = r1			  ## RF_ble.c:1947:9
 1e1af96:    e1 fb 3c 01       	r1 = sp + 316			  ## RF_ble.c:1947:9
 1e1af9a:    39 02             	[sp+12] = r1			  ## RF_ble.c:1947:9
 1e1af9c:    49 99             	r9 = r4 + 20			  ## RF_ble.c:1947:67
 1e1af9e:    19 f5 08 00       	[sp+8] = r9			  ## RF_ble.c:1947:9
 1e1afa2:    00 04             	r0 = r0.b0 (u)			  ## RF_ble.c:1947:58
 1e1afa4:    18 02             	[sp+4] = r0			  ## RF_ble.c:1947:9
 1e1afa6:    c6 a1             	r6 = sp + 28			  ## RF_ble.c:1947:9
 1e1afa8:    70 fc 64 00       	r0 = r7 + 100			  ## RF_ble.c:1947:23
 1e1afac:    e1 fb 2f 01       	r1 = sp + 303			  ## RF_ble.c:1947:23
 1e1afb0:    b2 a1             	r2 = sp + 27			  ## RF_ble.c:1947:23
 1e1afb2:    13 70             	r3 = 1			  ## RF_ble.c:1947:9
 1e1afb4:    0e 02             	[sp] = r6			  ## RF_ble.c:1947:9
 1e1afb6:    bf f3 1c 62       	call -80840 <ccm_memory_v2 : 1e073f2 >			  ## RF_ble.c:1947:9
 1e1afba:    a2 68             	r2 = b[r4 + 10] (u)			  ## RF_ble.c:1948:30
 1e1afbc:    90 08             	r0 = r9			  ## RF_ble.c:1948:9
 1e1afbe:    61 08             	r1 = r6			  ## RF_ble.c:1948:9
 1e1afc0:    97 f3 90 5f       	call 3063584 <memcpy : 106ee4 >			  ## RF_ble.c:1948:9
 1e1afc4:    e0 4a             	r0 = [r5 + 56]			  ## RF_ble.c:2345:24
 1e1afc6:    41 08             	r1 = r4			  ## RF_ble.c:2345:9
 1e1afc8:    88 00             	call r8			  ## RF_ble.c:2345:9
 1e1afca:    40 58             	r0 = h[r4 + 8] (u)			  ## RF_ble.c:2347:19
 1e1afcc:    82 fd 20 00       	r0 = uextra(r0, p:4, l:2)			  ## RF_ble.c:2347:19
 1e1afd0:    f0 8f             	r0 += -1			  ## RF_ble.c:2347:46
 1e1afd2:    20 04             	r0 = r0.l (u)			  ## RF_ble.c:2347:46
 1e1afd4:    20 e0 03 30       	if (r0 < 2) goto 6 <le_hw_upload_data+0x124 : 1e1afde >			  ## RF_ble.c:2347:46
 1e1afd8:    40 08             	r0 = r4			  ## RF_ble.c:2348:13
 1e1afda:    bf f3 98 35       	call -103632 <hw_dma_free : 1e01b0e >			  ## RF_ble.c:2348:13
 1e1afde:    a6 0a             	sp += 332
 1e1afe0:    5c 01             	{pc, r12-r4} = [sp++]			  ## RF_ble.c:2352:1


ble_pll_comp_reset:
 1e1afe2:    c1 ff e8 09 00 00 	r1 = 2536 <system_data_end : 9e8 >			  ## RF_ble.c:1619:0
 1e1afe8:    21 f7 0a 10       	r1 = h[r1 + 10] (s)			  ## RF_ble.c:1625:24
 1e1afec:    61 fb 00 19       	r1 = 0 - r1			  ## RF_ble.c:1625:23
 1e1aff0:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:1620:53
 1e1aff2:    0a c5             	r2 = r1 << 20			  ## RF_ble.c:1625:52
 1e1aff4:    03 fb c0 5d       	r3 = 24000 <report_overlay_end+0xA78 : 5dc0 >			  ## RF_ble.c:1625:65
 1e1aff8:    e0 fe 30 22       	r2 = r2 / r3 (s)			  ## RF_ble.c:1625:65
 1e1affc:    12 f6 24 01       	[r0 + 292] = r2			  ## RF_ble.c:1627:21
 1e1b000:    c0 ff 6a 59 e1 01 	r0 = 31545706 <update_target_end+0x2AE2 : 1e1596a >			  ## RF_ble.c:1629:5
 1e1b006:    ff f3 60 a0       	goto -48960 <printf : 1e0f0ca >			  ## RF_ble.c:1629:5


__get_ble_anchor_con:
 1e1b00a:    75 01             	[--sp] = {rets, r5, r4}			  ## RF_ble.c:274:0
 1e1b00c:    14 08             	r4 = r1			  ## RF_ble.c:274:0
 1e1b00e:    05 08             	r5 = r0			  ## RF_ble.c:274:0
 1e1b010:    97 f3 c4 5e       	call 3063176 <local_irq_disable : 106d9c >			  ## RF_ble.c:281:5
 1e1b014:    08 00             	csync			  ## RF_ble.c:281:5
 1e1b016:    c0 ff 84 2d 00 00 	r0 = 11652 <bb_hdl : 2d84 >			  ## RF_ble.c:147:19
 1e1b01c:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:147:19
 1e1b01e:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e1b020:    20 ba             	r0 = r5 - r0			  ## RF_ble.c:147:17
 1e1b022:    c1 71             	r1 = 28			  ## RF_ble.c:147:17
 1e1b024:    e0 fe 10 00       	r0 = r0 / r1 (s)			  ## RF_ble.c:147:17
 1e1b028:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:286:50
 1e1b02a:    20 fd 7f 00       	r0 = r0 & 4080			  ## RF_ble.c:286:50
 1e1b02e:    a1 c2             	r1 = r4 << 10			  ## RF_ble.c:286:30
 1e1b030:    50 b2             	r0 |= r1			  ## RF_ble.c:286:56
 1e1b032:    90 b0             	r0 |= 2			  ## RF_ble.c:286:56
 1e1b034:    c1 ff 1c 80 1c 00 	r1 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >			  ## RF_ble.c:286:56
 1e1b03a:    08 42             	[r1 + 0] = r0			  ## RF_ble.c:286:21
 1e1b03c:    08 00             	csync			  ## RF_ble.c:287:5
 1e1b03e:    24 42             	r4 = [r1 + 8]			  ## RF_ble.c:288:13
 1e1b040:    97 f3 aa 5e       	call 3063124 <local_irq_enable : 106d98 >			  ## RF_ble.c:296:5
 1e1b044:    40 08             	r0 = r4			  ## RF_ble.c:299:5
 1e1b046:    55 01             	{pc, r5, r4} = [sp++]			  ## RF_ble.c:299:5


__get_clkn:
 1e1b048:    75 01             	[--sp] = {rets, r5, r4}			  ## le_low_power.c:49:0
 1e1b04a:    04 08             	r4 = r0			  ## le_low_power.c:49:0
 1e1b04c:    01 70             	r1 = 0			  ## le_low_power.c:50:13
 1e1b04e:    dd 17             	call -70 <__get_ble_anchor_con : 1e1b00a >			  ## le_low_power.c:50:13
 1e1b050:    25 04             	r5 = r0.l (u)			  ## le_low_power.c:50:41
 1e1b052:    e1 70             	r1 = 14			  ## le_low_power.c:50:54
 1e1b054:    40 08             	r0 = r4			  ## le_low_power.c:50:54
 1e1b056:    d9 17             	call -78 <__get_ble_anchor_con : 1e1b00a >			  ## le_low_power.c:50:54
 1e1b058:    00 c4             	r0 = r0 << 16			  ## le_low_power.c:50:91
 1e1b05a:    20 fd ff 0b       	r0 = r0 & 16711680			  ## le_low_power.c:50:91
 1e1b05e:    50 ba             	r0 |= r5			  ## le_low_power.c:50:51
 1e1b060:    55 01             	{pc, r5, r4} = [sp++]			  ## le_low_power.c:50:5


ble_event_irq_handler:
 1e1b062:    e9 01             	[--sp] = {psr, rets, reti}			  ## RF_ble.c:3005:0
 1e1b064:    78 f3 ff ff       	[--sp] = {r15-r0}			  ## RF_ble.c:3006:9
 1e1b068:    fa 0b             	sp += -12			  ## RF_ble.c:3006:9
 1e1b06a:    c9 ff 84 2d 00 00 	r9 = 11652 <bb_hdl : 2d84 >
 1e1b070:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:3012:15
 1e1b074:    44 40             	r4 = [r0 + 16]			  ## RF_ble.c:3012:31
 1e1b076:    cd ff 0c 80 1c 00 	r13 = 1867788 <uECC_vli_cmp_unsafe+0xC1010 : 1c800c >
 1e1b07c:    00 f6 1c d0       	r0 = [r13 + 28]			  ## RF_ble.c:3013:13
 1e1b080:    01 f6 24 d0       	r1 = [r13 + 36]			  ## RF_ble.c:3013:28
 1e1b084:    50 b3             	r0 &= r1			  ## RF_ble.c:3013:26
 1e1b086:    00 f3 8f 02       	if ((r0 & 1) == 0) goto 1310 <ble_event_irq_handler+0x546 : 1e1b5a8 >			  ## RF_ble.c:3013:26
 1e1b08a:    08 f4 01 d9       	[r13 + 32] |= 1			  ## RF_ble.c:3014:26
 1e1b08e:    10 48             	r0 = [r4 + 4]			  ## RF_ble5.c:185:18
 1e1b090:    9c 30             	if (r0 != 0) goto 312 <ble_event_irq_handler+0x168 : 1e1b1ca >			  ## RF_ble5.c:185:18
 1e1b092:    06 48             	r6 = [r4 + 0]			  ## RF_ble.c:2869:34
 1e1b094:    9a 2c             	if (r6 == 0) goto 308 <ble_event_irq_handler+0x168 : 1e1b1ca >
 1e1b096:    65 fc d8 01       	r5 = r6 + 472
 1e1b09a:    e0 6b             	r0 = b[r5 + 30] (u)			  ## RF_ble.c:2881:13
 1e1b09c:    02 20             	if (r0 == 0) goto 4 <ble_event_irq_handler+0x40 : 1e1b0a2 >			  ## RF_ble.c:2881:13
 1e1b09e:    f0 8f             	r0 += -1			  ## RF_ble.c:2882:24
 1e1b0a0:    e8 6b             	b[r5 + 30] = r0			  ## RF_ble.c:2882:24
 1e1b0a2:    67 fc 44 01       	r7 = r6 + 324
 1e1b0a6:    e0 6e             	r0 = b[r7 + 14] (u)			  ## RF_ble.c:2887:14
 1e1b0a8:    68 fc 58 00       	r8 = r6 + 88			  ## RF_ble.c:2887:14
 1e1b0ac:    70 e0 65 00       	if (r0 == 7) goto 202 <ble_event_irq_handler+0x118 : 1e1b17a >			  ## RF_ble.c:2887:14
 1e1b0b0:    60 e0 5b 00       	if (r0 == 6) goto 182 <ble_event_irq_handler+0x108 : 1e1b16a >
 1e1b0b4:    20 e0 89 10       	if (r0 != 2) goto 274 <ble_event_irq_handler+0x168 : 1e1b1ca >
 1e1b0b8:    0a f7 0e 60       	r10 = h[r6 + 14] (u)			  ## RF_ble.c:2894:21
 1e1b0bc:    6b fc 4c 02       	r11 = r6 + 588
 1e1b0c0:    00 f9 02 b0       	r0 = b[r11 + 2] (u)			  ## RF_ble.c:3291:13
 1e1b0c4:    00 f3 1a 00       	if ((r0 & 1) == 0) goto 52 <ble_event_irq_handler+0x9A : 1e1b0fc >			  ## RF_ble.c:3291:13
 1e1b0c8:    f1 4e             	r1 = [r7 + 60]			  ## RF_ble.c:3293:31
 1e1b0ca:    82 52             	r2 = h[r1 + 16] (u)			  ## RF_ble.c:3273:13
 1e1b0cc:    22 fd 0f 29       	r2 = r2 & 15			  ## RF_ble.c:3273:5
 1e1b0d0:    62 e0 11 80       	if (r2 > 6) goto 34 <ble_event_irq_handler+0x94 : 1e1b0f6 >			  ## RF_ble.c:3273:5
 1e1b0d4:    13 70             	r3 = 1
 1e1b0d6:    f8 fd 20 23       	r2 = r3 << r2
 1e1b0da:    60 ff 45 29 0b 00 	if ((r2 & 69) == 0) goto 22 <ble_event_irq_handler+0x94 : 1e1b0f6 >
 1e1b0e0:    02 f9 0e 62       	r2 = b[r6 + 526] (u)			  ## RF_ble.c:3293:60
 1e1b0e4:    60 94             	r0 = r2 + 6			  ## RF_ble.c:3277:9
 1e1b0e6:    28 63             	b[r1 + 18] = r0			  ## RF_ble.c:3277:9
 1e1b0e8:    a0 93             	r0 = r1 + 26			  ## RF_ble.c:3279:25
 1e1b0ea:    51 fc 37 00       	r1 = r5 + 55			  ## RF_ble.c:3293:42
 1e1b0ee:    97 f3 f9 5e       	call 3063282 <memcpy : 106ee4 >			  ## RF_ble.c:3279:9
 1e1b0f2:    00 f9 02 b0       	r0 = b[r11 + 2] (u)			  ## RF_ble.c:3279:9
 1e1b0f6:    70 b0             	r0 &= 4294967294			  ## RF_ble.c:3295:24
 1e1b0f8:    10 f9 02 b0       	b[r11 + 2] = r0			  ## RF_ble.c:3295:24
 1e1b0fc:    2a fd 01 a9       	r10 = r10 & 1			  ## RF_ble.c:2894:27
 1e1b100:    01 f3 1a 00       	if ((r0 & 2) == 0) goto 52 <ble_event_irq_handler+0xD6 : 1e1b138 >			  ## RF_ble.c:2894:27
 1e1b104:    01 4f             	r1 = [r7 + 64]			  ## RF_ble.c:3300:31
 1e1b106:    82 52             	r2 = h[r1 + 16] (u)			  ## RF_ble.c:3273:13
 1e1b108:    22 fd 0f 29       	r2 = r2 & 15			  ## RF_ble.c:3273:5
 1e1b10c:    62 e0 11 80       	if (r2 > 6) goto 34 <ble_event_irq_handler+0xD0 : 1e1b132 >			  ## RF_ble.c:3273:5
 1e1b110:    13 70             	r3 = 1
 1e1b112:    f8 fd 20 23       	r2 = r3 << r2
 1e1b116:    60 ff 45 29 0b 00 	if ((r2 & 69) == 0) goto 22 <ble_event_irq_handler+0xD0 : 1e1b132 >
 1e1b11c:    02 f9 2e 62       	r2 = b[r6 + 558] (u)			  ## RF_ble.c:3300:65
 1e1b120:    60 94             	r0 = r2 + 6			  ## RF_ble.c:3277:9
 1e1b122:    28 63             	b[r1 + 18] = r0			  ## RF_ble.c:3277:9
 1e1b124:    a0 93             	r0 = r1 + 26			  ## RF_ble.c:3279:25
 1e1b126:    51 fc 57 00       	r1 = r5 + 87			  ## RF_ble.c:3300:42
 1e1b12a:    97 f3 db 5e       	call 3063222 <memcpy : 106ee4 >			  ## RF_ble.c:3279:9
 1e1b12e:    00 f9 02 b0       	r0 = b[r11 + 2] (u)			  ## RF_ble.c:3279:9
 1e1b132:    f0 b0             	r0 &= 4294967293			  ## RF_ble.c:3302:24
 1e1b134:    10 f9 02 b0       	b[r11 + 2] = r0			  ## RF_ble.c:3302:24
 1e1b138:    f1 4e             	r1 = [r7 + 60]			  ## RF_ble.c:2902:27
 1e1b13a:    40 08             	r0 = r4			  ## RF_ble.c:2902:9
 1e1b13c:    a2 08             	r2 = r10			  ## RF_ble.c:2902:9
 1e1b13e:    bf f3 1d f4       	call -6086 <ble_hw_tx : 1e1997c >			  ## RF_ble.c:2902:9
 1e1b142:    01 4f             	r1 = [r7 + 64]			  ## RF_ble.c:2903:27
 1e1b144:    12 fd 01 a9       	r2 = r10 ^ 1			  ## RF_ble.c:2903:38
 1e1b148:    40 08             	r0 = r4			  ## RF_ble.c:2903:9
 1e1b14a:    bf f3 17 f4       	call -6098 <ble_hw_tx : 1e1997c >			  ## RF_ble.c:2903:9
 1e1b14e:    10 5e             	r0 = h[r7 + 2] (u)
 1e1b150:    31 fd 1f 0a       	r1 = r0 & 4294959359			  ## RF_ble.c:882:23
 1e1b154:    01 fd 1a 1a       	r1 = r1 | 6656			  ## RF_ble.c:882:23
 1e1b158:    19 5e             	h[r7 + 2] = r1			  ## RF_ble.c:882:23
 1e1b15a:    2d f3 36 00       	if ((r0 & 8192) != 0) goto 108 <ble_event_irq_handler+0x168 : 1e1b1ca >			  ## RF_ble.c:882:23
 1e1b15e:    a0 71             	r0 = 26			  ## RF_ble.c:886:28
 1e1b160:    10 f7 08 80       	h[r8 + 8] = r0			  ## RF_ble.c:886:28
 1e1b164:    10 f7 06 80       	h[r8 + 6] = r0			  ## RF_ble.c:887:28
 1e1b168:    30 18             	goto 96 <ble_event_irq_handler+0x168 : 1e1b1ca >			  ## RF_ble.c:887:28
 1e1b16a:    10 4a             	r0 = [r5 + 4]			  ## RF_ble.c:2927:17
 1e1b16c:    06 20             	if (r0 == 0) goto 12 <ble_event_irq_handler+0x118 : 1e1b17a >			  ## RF_ble.c:2927:17
 1e1b16e:    33 40             	r3 = [r0 + 12]			  ## RF_ble.c:2927:41
 1e1b170:    04 26             	if (r3 == 0) goto 8 <ble_event_irq_handler+0x118 : 1e1b17a >			  ## RF_ble.c:2927:41
 1e1b172:    00 4a             	r0 = [r5 + 0]			  ## RF_ble.c:2928:50
 1e1b174:    a2 5d             	r2 = h[r6 + 52] (u)			  ## RF_ble.c:2928:76
 1e1b176:    11 70             	r1 = 1			  ## RF_ble.c:2928:13
 1e1b178:    83 00             	call r3			  ## RF_ble.c:2928:13
 1e1b17a:    90 6f             	r0 = b[r7 + 25] (u)			  ## RF_ble.c:2933:21
 1e1b17c:    1d 20             	if (r0 == 0) goto 58 <ble_event_irq_handler+0x156 : 1e1b1b8 >			  ## RF_ble.c:2933:21
 1e1b17e:    00 f7 00 80       	r0 = h[r8 + 0] (u)			  ## RF_ble.c:2934:43
 1e1b182:    d1 5e             	r1 = h[r7 + 26] (u)			  ## RF_ble.c:2935:31
 1e1b184:    d0 b1             	r0 = ~r0			  ## RF_ble.c:2935:39
 1e1b186:    10 09             	r0 += r1			  ## RF_ble.c:2936:32
 1e1b188:    20 04             	r0 = r0.l (u)			  ## RF_ble.c:2936:32
 1e1b18a:    01 fb fe 7f       	r1 = 32766 <nvbss_size+0x14FE : 7ffe >			  ## RF_ble.c:2936:32
 1e1b18e:    10 f2 13 30       	if (r0 < r1) goto 38 <ble_event_irq_handler+0x156 : 1e1b1b8 >			  ## RF_ble.c:2936:32
 1e1b192:    30 72             	r0 = 35			  ## RF_ble.c:2937:21
 1e1b194:    bf f3 1e a1       	call -48580 <putchar : 1e0f3d4 >			  ## RF_ble.c:2937:21
 1e1b198:    00 70             	r0 = 0			  ## RF_ble.c:2937:21
 1e1b19a:    98 6f             	b[r7 + 25] = r0			  ## RF_ble.c:2938:39
 1e1b19c:    d8 5e             	h[r7 + 26] = r0			  ## RF_ble.c:2939:33
 1e1b19e:    10 5e             	r0 = h[r7 + 2] (u)
 1e1b1a0:    31 fd 1f 0a       	r1 = r0 & 4294959359			  ## RF_ble.c:882:23
 1e1b1a4:    01 fd 1c 1a       	r1 = r1 | 7168			  ## RF_ble.c:882:23
 1e1b1a8:    19 5e             	h[r7 + 2] = r1			  ## RF_ble.c:882:23
 1e1b1aa:    2d f3 05 00       	if ((r0 & 8192) != 0) goto 10 <ble_event_irq_handler+0x156 : 1e1b1b8 >			  ## RF_ble.c:882:23
 1e1b1ae:    c0 71             	r0 = 28			  ## RF_ble.c:886:28
 1e1b1b0:    10 f7 08 80       	h[r8 + 8] = r0			  ## RF_ble.c:886:28
 1e1b1b4:    10 f7 06 80       	h[r8 + 6] = r0			  ## RF_ble.c:887:28
 1e1b1b8:    10 4a             	r0 = [r5 + 4]			  ## RF_ble.c:2943:21
 1e1b1ba:    07 20             	if (r0 == 0) goto 14 <ble_event_irq_handler+0x168 : 1e1b1ca >			  ## RF_ble.c:2943:21
 1e1b1bc:    33 40             	r3 = [r0 + 12]			  ## RF_ble.c:2943:45
 1e1b1be:    05 26             	if (r3 == 0) goto 10 <ble_event_irq_handler+0x168 : 1e1b1ca >			  ## RF_ble.c:2943:45
 1e1b1c0:    00 4a             	r0 = [r5 + 0]			  ## RF_ble.c:2944:54
 1e1b1c2:    02 f7 00 80       	r2 = h[r8 + 0] (u)			  ## RF_ble.c:2944:78
 1e1b1c6:    01 70             	r1 = 0			  ## RF_ble.c:2944:17
 1e1b1c8:    83 00             	call r3			  ## RF_ble.c:2944:17
 1e1b1ca:    58 14             	call -1872 <ble_slot_schedule : 1e1aa7c >			  ## RF_ble.c:3029:13
 1e1b1cc:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:937:34
 1e1b1ce:    00 e0 e7 01       	if (r0 == 0) goto 974 <ble_event_irq_handler+0x53E : 1e1b5a0 >
 1e1b1d2:    02 f9 5c 02       	r2 = b[r0 + 604] (u)			  ## RF_ble.c:944:23
 1e1b1d6:    01 fc 44 01       	r1 = r0 + 324			  ## RF_ble.c:944:23
 1e1b1da:    e3 62             	r3 = b[r1 + 14] (u)			  ## RF_ble.c:943:20
 1e1b1dc:    15 94             	r5 = r2 + 1			  ## RF_ble.c:944:23
 1e1b1de:    15 f9 5c 02       	b[r0 + 604] = r5			  ## RF_ble.c:944:23
 1e1b1e2:    32 fd 01 39       	r2 = r3 & 4294967294			  ## RF_ble.c:948:32
 1e1b1e6:    c0 85             	r0 += 92			  ## RF_ble.c:948:32
 1e1b1e8:    62 e0 0f 10       	if (r2 != 6) goto 30 <ble_event_irq_handler+0x1A8 : 1e1b20a >			  ## RF_ble.c:948:32
 1e1b1ec:    12 52             	r2 = h[r1 + 2] (u)
 1e1b1ee:    85 fd 40 32       	r3 = uextra(r2, p:8, l:5)			  ## RF_ble.c:955:23
 1e1b1f2:    21 f3 1f 20       	if ((r2 & 2) != 0) goto 62 <ble_event_irq_handler+0x1D2 : 1e1b234 >			  ## RF_ble.c:955:23
 1e1b1f6:    35 fd fc 29       	r5 = r2 & 4294967043			  ## RF_ble.c:962:34
 1e1b1fa:    42 80             	r2 += 4			  ## RF_ble.c:962:34
 1e1b1fc:    22 fd fc 29       	r2 = r2 & 252			  ## RF_ble.c:962:34
 1e1b200:    52 ba             	r2 |= r5			  ## RF_ble.c:962:34
 1e1b202:    1a 52             	h[r1 + 2] = r2			  ## RF_ble.c:962:34
 1e1b204:    e3 e1 19 10       	if (r3 != 30) goto 50 <ble_event_irq_handler+0x1D8 : 1e1b23a >			  ## RF_ble.c:962:34
 1e1b208:    56 18             	goto 172 <ble_event_irq_handler+0x254 : 1e1b2b6 >			  ## RF_ble.c:962:34
 1e1b20a:    02 fd 02 39       	r2 = r3 | 2			  ## RF_ble.c:1043:33
 1e1b20e:    32 e0 52 10       	if (r2 != 3) goto 164 <ble_event_irq_handler+0x254 : 1e1b2b6 >			  ## RF_ble.c:1043:33
 1e1b212:    12 52             	r2 = h[r1 + 2] (u)
 1e1b214:    45 05             	r5 = r5.b0 (u)			  ## RF_ble.c:1044:32
 1e1b216:    66 70             	r6 = 6			  ## RF_ble.c:1044:32
 1e1b218:    d0 fe 60 65       	r6 = r5 % r6 (u)			  ## RF_ble.c:1044:32
 1e1b21c:    35 fd 1f 2a       	r5 = r2 & 4294959359			  ## RF_ble.c:882:23
 1e1b220:    31 2c             	if (r6 == 0) goto 98 <ble_event_irq_handler+0x222 : 1e1b284 >			  ## RF_ble.c:1044:13
 1e1b222:    33 e0 34 00       	if (r3 == 3) goto 104 <ble_event_irq_handler+0x22C : 1e1b28e >
 1e1b226:    03 fd 11 5a       	r3 = r5 | 4352			  ## RF_ble.c:882:23
 1e1b22a:    1b 52             	h[r1 + 2] = r3			  ## RF_ble.c:882:23
 1e1b22c:    2d f3 43 20       	if ((r2 & 8192) != 0) goto 134 <ble_event_irq_handler+0x254 : 1e1b2b6 >			  ## RF_ble.c:882:23
 1e1b230:    11 71             	r1 = 17			  ## RF_ble.c:886:28
 1e1b232:    3f 18             	goto 126 <ble_event_irq_handler+0x250 : 1e1b2b2 >			  ## RF_ble.c:886:28
 1e1b234:    32 fd fc 29       	r2 = r2 & 4294967043			  ## RF_ble.c:959:35
 1e1b238:    1a 52             	h[r1 + 2] = r2			  ## RF_ble.c:959:35
 1e1b23a:    25 63             	r5 = b[r1 + 18] (u)			  ## RF_ble.c:970:17
 1e1b23c:    02 2a             	if (r5 == 0) goto 4 <ble_event_irq_handler+0x1E0 : 1e1b242 >			  ## RF_ble.c:970:17
 1e1b23e:    35 63             	r5 = b[r1 + 19] (u)			  ## RF_ble.c:970:35
 1e1b240:    2d 2a             	if (r5 == 0) goto 90 <ble_event_irq_handler+0x23A : 1e1b29c >			  ## RF_ble.c:970:35
 1e1b242:    35 43             	r5 = [r1 + 76]			  ## list.h:124:18
 1e1b244:    16 fc 4c 00       	r6 = r1 + 76			  ## RF_ble.c:980:31
 1e1b248:    65 f2 2b 10       	if (r5 != r6) goto 86 <ble_event_irq_handler+0x240 : 1e1b2a2 >
 1e1b24c:    61 ff f0 29 28 00 	if ((r2 & 240) != 0) goto 80 <ble_event_irq_handler+0x240 : 1e1b2a2 >
 1e1b252:    55 43             	r5 = [r1 + 84]			  ## list.h:124:18
 1e1b254:    16 fc 54 00       	r6 = r1 + 84			  ## RF_ble.c:1007:31
 1e1b258:    65 f2 bb 01       	if (r5 == r6) goto 886 <ble_event_irq_handler+0x570 : 1e1b5d2 >			  ## RF_ble.c:1007:13
 1e1b25c:    33 fd 1f 2a       	r3 = r2 & 4294959359			  ## RF_ble.c:882:23
 1e1b260:    03 fd 1c 3a       	r3 = r3 | 7168			  ## RF_ble.c:882:23
 1e1b264:    1b 52             	h[r1 + 2] = r3			  ## RF_ble.c:882:23
 1e1b266:    2d f3 03 20       	if ((r2 & 8192) != 0) goto 6 <ble_event_irq_handler+0x20E : 1e1b270 >			  ## RF_ble.c:882:23
 1e1b26a:    c5 71             	r5 = 28			  ## RF_ble.c:886:28
 1e1b26c:    2d 50             	h[r0 + 4] = r5			  ## RF_ble.c:886:28
 1e1b26e:    1d 50             	h[r0 + 2] = r5			  ## RF_ble.c:887:28
 1e1b270:    c0 ff 03 fc 00 00 	r0 = 64515 <boot_arg_list+0x3 : fc03 >			  ## RF_ble.c:1009:34
 1e1b276:    50 b7             	r0 &= r3			  ## RF_ble.c:1009:34
 1e1b278:    42 80             	r2 += 4			  ## RF_ble.c:1009:34
 1e1b27a:    22 fd fc 29       	r2 = r2 & 252			  ## RF_ble.c:1009:34
 1e1b27e:    50 b4             	r0 |= r2			  ## RF_ble.c:1009:34
 1e1b280:    18 52             	h[r1 + 2] = r0			  ## RF_ble.c:1009:34
 1e1b282:    19 18             	goto 50 <ble_event_irq_handler+0x254 : 1e1b2b6 >			  ## RF_ble.c:1009:34
 1e1b284:    33 e0 03 10       	if (r3 != 3) goto 6 <ble_event_irq_handler+0x22C : 1e1b28e >
 1e1b288:    03 fd 1e 5a       	r3 = r5 | 7680			  ## RF_ble.c:882:23
 1e1b28c:    0e 18             	goto 28 <ble_event_irq_handler+0x248 : 1e1b2aa >			  ## RF_ble.c:882:23
 1e1b28e:    03 fd 1a 5a       	r3 = r5 | 6656
 1e1b292:    1b 52             	h[r1 + 2] = r3
 1e1b294:    2d f3 0f 20       	if ((r2 & 8192) != 0) goto 30 <ble_event_irq_handler+0x254 : 1e1b2b6 >
 1e1b298:    a1 71             	r1 = 26
 1e1b29a:    0b 18             	goto 22 <ble_event_irq_handler+0x250 : 1e1b2b2 >
 1e1b29c:    60 ff fc 29 0a 00 	if ((r2 & 252) == 0) goto 20 <ble_event_irq_handler+0x254 : 1e1b2b6 >
 1e1b2a2:    33 fd 1f 2a       	r3 = r2 & 4294959359
 1e1b2a6:    03 fd 1e 3a       	r3 = r3 | 7680
 1e1b2aa:    1b 52             	h[r1 + 2] = r3
 1e1b2ac:    2d f3 03 20       	if ((r2 & 8192) != 0) goto 6 <ble_event_irq_handler+0x254 : 1e1b2b6 >
 1e1b2b0:    e1 71             	r1 = 30
 1e1b2b2:    29 50             	h[r0 + 4] = r1
 1e1b2b4:    19 50             	h[r0 + 2] = r1
 1e1b2b6:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:421:34
 1e1b2b8:    00 e0 72 01       	if (r0 == 0) goto 740 <ble_event_irq_handler+0x53E : 1e1b5a0 >
 1e1b2bc:    00 fc 44 01       	r0 = r0 + 324
 1e1b2c0:    e1 60             	r1 = b[r0 + 14] (u)			  ## RF_ble.c:426:20
 1e1b2c2:    71 b0             	r1 &= 4294967294			  ## RF_ble.c:428:32
 1e1b2c4:    61 e0 89 10       	if (r1 != 6) goto 274 <ble_event_irq_handler+0x378 : 1e1b3da >			  ## RF_ble.c:428:32
 1e1b2c8:    21 61             	r1 = b[r0 + 18] (u)			  ## RF_ble.c:429:17
 1e1b2ca:    87 22             	if (r1 == 0) goto 270 <ble_event_irq_handler+0x378 : 1e1b3da >			  ## RF_ble.c:429:17
 1e1b2cc:    f1 40             	r1 = [r0 + 60]			  ## RF_ble.c:433:14
 1e1b2ce:    03 32             	if (r1 != 0) goto 6 <ble_event_irq_handler+0x274 : 1e1b2d6 >			  ## RF_ble.c:433:14
 1e1b2d0:    01 41             	r1 = [r0 + 64]			  ## RF_ble.c:433:37
 1e1b2d2:    01 e0 4c 01       	if (r1 == 0) goto 664 <ble_event_irq_handler+0x50C : 1e1b56e >			  ## RF_ble.c:433:37
 1e1b2d6:    b1 50             	r1 = h[r0 + 22] (u)			  ## RF_ble.c:410:17
 1e1b2d8:    65 91             	r5 = r0 + 22			  ## RF_ble.c:410:17
 1e1b2da:    02 32             	if (r1 != 0) goto 4 <ble_event_irq_handler+0x27E : 1e1b2e0 >			  ## RF_ble.c:410:17
 1e1b2dc:    11 70             	r1 = 1
 1e1b2de:    b9 50             	h[r0 + 22] = r1
 1e1b2e0:    00 5a             	r0 = h[r5 + 0] (u)			  ## RF_ble.c:445:17
 1e1b2e2:    06 20             	if (r0 == 0) goto 12 <ble_event_irq_handler+0x28E : 1e1b2f0 >			  ## RF_ble.c:445:13
 1e1b2e4:    f0 8f             	r0 += -1			  ## RF_ble.c:446:25
 1e1b2e6:    08 5a             	h[r5 + 0] = r0			  ## RF_ble.c:446:25
 1e1b2e8:    40 08             	r0 = r4			  ## RF_ble.c:448:13
 1e1b2ea:    bf f3 15 f5       	call -5590 <__set_latency_disable : 1e19d18 >			  ## RF_ble.c:448:13
 1e1b2ee:    75 18             	goto 234 <ble_event_irq_handler+0x378 : 1e1b3da >			  ## RF_ble.c:448:13
 1e1b2f0:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:362:31
 1e1b2f2:    01 70             	r1 = 0
 1e1b2f4:    02 fc 46 01       	r2 = r0 + 326
 1e1b2f8:    19 65             	b[r2 + 17] = r1			  ## RF_ble.c:367:27
 1e1b2fa:    01 54             	r1 = h[r2 + 0] (u)
 1e1b2fc:    33 fd 1f 1a       	r3 = r1 & 4294959359			  ## RF_ble.c:882:23
 1e1b300:    03 fd 1e 3a       	r3 = r3 | 7680			  ## RF_ble.c:882:23
 1e1b304:    0b 54             	h[r2 + 0] = r3			  ## RF_ble.c:882:23
 1e1b306:    2d f3 05 10       	if ((r1 & 8192) != 0) goto 10 <ble_event_irq_handler+0x2B2 : 1e1b314 >			  ## RF_ble.c:882:23
 1e1b30a:    e1 71             	r1 = 30			  ## RF_ble.c:886:28
 1e1b30c:    11 f7 60 00       	h[r0 + 96] = r1			  ## RF_ble.c:886:28
 1e1b310:    11 f7 5e 00       	h[r0 + 94] = r1			  ## RF_ble.c:887:28
 1e1b314:    97 f3 42 5d       	call 3062404 <local_irq_disable : 106d9c >			  ## RF_ble.c:281:5
 1e1b318:    08 00             	csync			  ## RF_ble.c:281:5
 1e1b31a:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:147:19
 1e1b31e:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e1b320:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e1b322:    c5 71             	r5 = 28			  ## RF_ble.c:147:17
 1e1b324:    e0 fe 50 00       	r0 = r0 / r5 (s)			  ## RF_ble.c:147:17
 1e1b328:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:286:50
 1e1b32a:    06 fb f0 07       	r6 = 2032 <DRIVER_CODE_TOTAL+0x6A : 7f0 >			  ## RF_ble.c:286:50
 1e1b32e:    50 bd             	r0 &= r6			  ## RF_ble.c:286:50
 1e1b330:    21 9d             	r1 = r6 + 18			  ## RF_ble.c:286:56
 1e1b332:    50 b2             	r0 |= r1			  ## RF_ble.c:286:56
 1e1b334:    10 f6 10 d0       	[r13 + 16] = r0			  ## RF_ble.c:286:21
 1e1b338:    08 00             	csync			  ## RF_ble.c:287:5
 1e1b33a:    00 f6 18 d0       	r0 = [r13 + 24]			  ## RF_ble.c:288:13
 1e1b33e:    c1 ff ff f7 00 00 	r1 = 63487 <BD19_SDK_RAM_SIZE+0xB : f7ff >			  ## RF_ble.c:381:33
 1e1b344:    50 b3             	r0 &= r1			  ## RF_ble.c:381:33
 1e1b346:    07 fd 08 0a       	r7 = r0 | 2048			  ## RF_ble.c:381:33
 1e1b34a:    97 f3 25 5d       	call 3062346 <local_irq_enable : 106d98 >			  ## RF_ble.c:296:5
 1e1b34e:    97 f3 25 5d       	call 3062346 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e1b352:    08 00             	csync			  ## RF_ble.c:304:5
 1e1b354:    17 f6 14 d0       	[r13 + 20] = r7			  ## RF_ble.c:306:21
 1e1b358:    08 00             	csync			  ## RF_ble.c:307:5
 1e1b35a:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:147:19
 1e1b35e:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e1b360:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e1b362:    e0 fe 50 00       	r0 = r0 / r5 (s)			  ## RF_ble.c:147:17
 1e1b366:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e1b368:    50 bd             	r0 &= r6			  ## RF_ble.c:308:50
 1e1b36a:    51 9d             	r1 = r6 + 21			  ## RF_ble.c:308:67
 1e1b36c:    50 b2             	r0 |= r1			  ## RF_ble.c:308:67
 1e1b36e:    10 f6 10 d0       	[r13 + 16] = r0			  ## RF_ble.c:308:21
 1e1b372:    97 f3 11 5d       	call 3062306 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5
 1e1b376:    97 f3 11 5d       	call 3062306 <local_irq_disable : 106d9c >			  ## RF_ble.c:281:5
 1e1b37a:    08 00             	csync			  ## RF_ble.c:281:5
 1e1b37c:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:147:19
 1e1b380:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e1b382:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e1b384:    e0 fe 50 00       	r0 = r0 / r5 (s)			  ## RF_ble.c:147:17
 1e1b388:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:286:50
 1e1b38a:    20 fd 3f 00       	r0 = r0 & 3056			  ## RF_ble.c:286:50
 1e1b38e:    01 fb 02 24       	r1 = 9218 <log_mutex+0xA : 2402 >			  ## RF_ble.c:286:56
 1e1b392:    50 b2             	r0 |= r1			  ## RF_ble.c:286:56
 1e1b394:    10 f6 10 d0       	[r13 + 16] = r0			  ## RF_ble.c:286:21
 1e1b398:    08 00             	csync			  ## RF_ble.c:287:5
 1e1b39a:    00 f6 18 d0       	r0 = [r13 + 24]			  ## RF_ble.c:288:13
 1e1b39e:    c1 ff bf ff 00 00 	r1 = 65471 <_IRQ_MEM_ADDR+0xBF : ffbf >			  ## RF_ble.c:388:33
 1e1b3a4:    50 b3             	r0 &= r1			  ## RF_ble.c:388:33
 1e1b3a6:    06 fd 40 09       	r6 = r0 | 64			  ## RF_ble.c:388:33
 1e1b3aa:    97 f3 f5 5c       	call 3062250 <local_irq_enable : 106d98 >			  ## RF_ble.c:296:5
 1e1b3ae:    97 f3 f5 5c       	call 3062250 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e1b3b2:    08 00             	csync			  ## RF_ble.c:304:5
 1e1b3b4:    16 f6 14 d0       	[r13 + 20] = r6			  ## RF_ble.c:306:21
 1e1b3b8:    08 00             	csync			  ## RF_ble.c:307:5
 1e1b3ba:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:147:19
 1e1b3be:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e1b3c0:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e1b3c2:    e0 fe 50 00       	r0 = r0 / r5 (s)			  ## RF_ble.c:147:17
 1e1b3c6:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e1b3c8:    20 fd 3f 00       	r0 = r0 & 3056			  ## RF_ble.c:308:50
 1e1b3cc:    01 fb 05 24       	r1 = 9221 <log_mutex+0xD : 2405 >			  ## RF_ble.c:308:67
 1e1b3d0:    50 b2             	r0 |= r1			  ## RF_ble.c:308:67
 1e1b3d2:    10 f6 10 d0       	[r13 + 16] = r0			  ## RF_ble.c:308:21
 1e1b3d6:    97 f3 df 5c       	call 3062206 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5
 1e1b3da:    07 48             	r7 = [r4 + 0]			  ## RF_ble.c:4876:31
 1e1b3dc:    e1 2e             	if (r7 == 0) goto 450 <ble_event_irq_handler+0x53E : 1e1b5a0 >
 1e1b3de:    75 fc 44 01       	r5 = r7 + 324
 1e1b3e2:    10 6a             	r0 = b[r5 + 1] (u)			  ## RF_ble.c:4884:14
 1e1b3e4:    b4 20             	if (r0 == 0) goto 360 <ble_event_irq_handler+0x4EC : 1e1b54e >			  ## RF_ble.c:4884:14
 1e1b3e6:    e0 6a             	r0 = b[r5 + 14] (u)			  ## RF_ble.c:4892:21
 1e1b3e8:    70 e0 d6 10       	if (r0 != 7) goto 428 <ble_event_irq_handler+0x536 : 1e1b598 >
 1e1b3ec:    20 6a             	r0 = b[r5 + 2] (u)			  ## RF_ble.c:4905:13
 1e1b3ee:    c1 ff 70 0f 00 00 	r1 = 3952 <ble_window_autozoom.widen : f70 >			  ## RF_ble.c:4905:13
 1e1b3f4:    20 f3 b1 00       	if ((r0 & 1) != 0) goto 354 <ble_event_irq_handler+0x4F8 : 1e1b55a >			  ## RF_ble.c:4905:13
 1e1b3f8:    0b f6 00 10       	r11 = [r1 + 0]			  ## RF_ble.c:4915:31
 1e1b3fc:    10 4a             	r0 = [r5 + 4]			  ## RF_ble.c:4915:23
 1e1b3fe:    b0 09             	r0 += r11			  ## RF_ble.c:4915:29
 1e1b400:    40 86             	r0 += 100			  ## RF_ble.c:4915:37
 1e1b402:    08 ff cf 07 c8 00 	if (r0 > 1999) goto 400 <ble_event_irq_handler+0x536 : 1e1b598 >			  ## RF_ble.c:4915:37
 1e1b408:    20 4a             	r0 = [r5 + 8]			  ## RF_ble.c:4918:71
 1e1b40a:    18 02             	[sp+4] = r0			  ## RF_ble.c:4822:16
 1e1b40c:    40 08             	r0 = r4			  ## RF_ble.c:4822:16
 1e1b40e:    1c 16             	call -968 <__get_clkn : 1e1b048 >			  ## RF_ble.c:4822:16
 1e1b410:    06 f6 00 d0       	r6 = [r13 + 0]			  ## RF_ble.c:4824:22
 1e1b414:    0c f6 08 d0       	r12 = [r13 + 8]			  ## RF_ble.c:4824:49
 1e1b418:    28 02             	[sp+8] = r0			  ## RF_ble.c:4822:16
 1e1b41a:    97 f3 bf 5c       	call 3062142 <local_irq_disable : 106d9c >			  ## RF_ble.c:281:5
 1e1b41e:    08 00             	csync			  ## RF_ble.c:281:5
 1e1b420:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:147:19
 1e1b424:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e1b426:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e1b428:    c1 71             	r1 = 28			  ## RF_ble.c:147:17
 1e1b42a:    e0 fe 10 00       	r0 = r0 / r1 (s)			  ## RF_ble.c:147:17
 1e1b42e:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:286:50
 1e1b430:    01 fb f0 03       	r1 = 1008 <BTCTLER_LE_RAM_TOTAL+0x12 : 3f0 >			  ## RF_ble.c:286:50
 1e1b434:    50 b3             	r0 &= r1			  ## RF_ble.c:286:50
 1e1b436:    01 fb 02 1c       	r1 = 7170 <profile_l2cap_hdl+0x1E : 1c02 >			  ## RF_ble.c:286:56
 1e1b43a:    50 b2             	r0 |= r1			  ## RF_ble.c:286:56
 1e1b43c:    10 f6 10 d0       	[r13 + 16] = r0			  ## RF_ble.c:286:21
 1e1b440:    08 00             	csync			  ## RF_ble.c:287:5
 1e1b442:    00 f6 18 d0       	r0 = [r13 + 24]			  ## RF_ble.c:288:13
 1e1b446:    32 04             	r2 = r0.l (s)			  ## RF_ble.c:4828:9
 1e1b448:    01 fd f8 2a       	r1 = r2 | 63488			  ## RF_ble.c:4829:21
 1e1b44c:    0b f3 01 20       	if ((r2 & 2048) == 0) goto 2 <ble_event_irq_handler+0x3F0 : 1e1b452 >			  ## RF_ble.c:4829:21
 1e1b450:    10 08             	r0 = r1			  ## RF_ble.c:4828:9
 1e1b452:    32 04             	r2 = r0.l (s)			  ## RF_ble.c:4832:21
 1e1b454:    00 fb ff 03       	r0 = 1023 <BTCTLER_LE_RAM_TOTAL+0x21 : 3ff >			  ## RF_ble.c:4824:37
 1e1b458:    50 bd             	r0 &= r6			  ## RF_ble.c:4824:37
 1e1b45a:    01 fb 71 02       	r1 = 625 <BTCTLER_CL_RAM_TOTAL+0x8D : 271 >			  ## RF_ble.c:4824:19
 1e1b45e:    20 b2             	r0 = r1 - r0			  ## RF_ble.c:4824:19
 1e1b460:    e4 fd 00 1c       	r1 = r12.b0 (u)			  ## RF_ble.c:4824:64
 1e1b464:    60 b0             	r0 = r0 - r1			  ## RF_ble.c:4824:46
 1e1b466:    20 04             	r0 = r0.l (u)			  ## RF_ble.c:4832:11
 1e1b468:    0a 02             	[sp] = r2			  ## RF_ble.c:4832:11
 1e1b46a:    0c b4             	r12 = r2 + r0			  ## RF_ble.c:4832:19
 1e1b46c:    16 70             	r6 = 1			  ## RF_ble.c:4832:19
 1e1b46e:    1e 70             	r14 = 1			  ## RF_ble.c:4832:34
 1e1b470:    0c ff 70 c2 01 00 	ifs (r12 > 624) goto 2 <ble_event_irq_handler+0x416 : 1e1b478 >			  ## RF_ble.c:4832:34
 1e1b476:    0e 70             	r14 = 0			  ## RF_ble.c:4832:34
 1e1b478:    c8 fc 9c ff       	r8 = r12 + -100			  ## RF_ble.c:4832:69
 1e1b47c:    1a 70             	r10 = 1			  ## RF_ble.c:4832:85
 1e1b47e:    0b ff 71 82 01 00 	ifs (r8 < 625) goto 2 <ble_event_irq_handler+0x424 : 1e1b486 >			  ## RF_ble.c:4832:85
 1e1b484:    0a 70             	r10 = 0			  ## RF_ble.c:4832:85
 1e1b486:    97 f3 87 5c       	call 3062030 <local_irq_enable : 106d98 >			  ## RF_ble.c:296:5
 1e1b48a:    0f fb 9c ff       	r15 = -100 <bank_code_load_addr+0x1DC9A4 : 1ffff9c >			  ## RF_ble.c:296:5
 1e1b48e:    ae f1 11 00       	if ((r14 & r10) != 0) goto 34 <ble_event_irq_handler+0x452 : 1e1b4b4 >			  ## RF_ble.c:296:5
 1e1b492:    4c e6 0f 30       	if (r12 < 100) goto 30 <ble_event_irq_handler+0x452 : 1e1b4b4 >
 1e1b496:    10 70             	r0 = 1
 1e1b498:    0b ff 8f 8d 01 00 	ifs (r8 < -625) goto 2 <ble_event_irq_handler+0x43E : 1e1b4a0 >
 1e1b49e:    00 70             	r0 = 0
 1e1b4a0:    f2 fd f8 1c       	r1 = r12 >> 31			  ## RF_ble.c:4838:41
 1e1b4a4:    0f fb 0d 02       	r15 = 525 <BTCTLER_CL_RAM_TOTAL+0x29 : 20d >			  ## RF_ble.c:4841:5
 1e1b4a8:    01 f1 02 00       	if ((r1 & r0) != 0) goto 4 <ble_event_irq_handler+0x44E : 1e1b4b0 >			  ## RF_ble.c:4841:5
 1e1b4ac:    0f fb 9c ff       	r15 = -100 <bank_code_load_addr+0x1DC9A4 : 1ffff9c >			  ## RF_ble.c:4841:5
 1e1b4b0:    e2 fd 00 61       	r6 = r1 & r0			  ## RF_ble.c:4838:46
 1e1b4b4:    20 02             	r0 = [sp+8]			  ## RF_ble.c:4845:9
 1e1b4b6:    06 f2 66 20       	if (r6 >= r0) goto 204 <ble_event_irq_handler+0x524 : 1e1b586 >			  ## RF_ble.c:4845:9
 1e1b4ba:    f0 fd 08 0b       	r0 = r11 << 1			  ## RF_ble.c:4918:106
 1e1b4be:    11 02             	r1 = [sp+4]			  ## RF_ble.c:4918:71
 1e1b4c0:    10 09             	r0 += r1			  ## RF_ble.c:4918:71
 1e1b4c2:    08 fc c8 00       	r8 = r0 + 200			  ## RF_ble.c:4918:78
 1e1b4c6:    97 f3 69 5c       	call 3061970 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e1b4ca:    08 00             	csync			  ## RF_ble.c:304:5
 1e1b4cc:    16 f6 14 d0       	[r13 + 20] = r6			  ## RF_ble.c:306:21
 1e1b4d0:    08 00             	csync			  ## RF_ble.c:307:5
 1e1b4d2:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:147:19
 1e1b4d6:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e1b4d8:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e1b4da:    ca 71             	r10 = 28			  ## RF_ble.c:147:17
 1e1b4dc:    e0 fe a0 00       	r0 = r0 / r10 (s)			  ## RF_ble.c:147:17
 1e1b4e0:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e1b4e2:    20 fd 7f 00       	r0 = r0 & 4080			  ## RF_ble.c:308:50
 1e1b4e6:    01 fb 05 40       	r1 = 16389 <ze_entry_tm+0xB3 : 4005 >			  ## RF_ble.c:308:67
 1e1b4ea:    50 b2             	r0 |= r1			  ## RF_ble.c:308:67
 1e1b4ec:    10 f6 10 d0       	[r13 + 16] = r0			  ## RF_ble.c:308:21
 1e1b4f0:    00 02             	r0 = [sp]			  ## RF_ble.c:308:21
 1e1b4f2:    f0 09             	r0 += r15			  ## RF_ble.c:308:21
 1e1b4f4:    30 04             	r0 = r0.l (s)			  ## RF_ble.c:4852:44
 1e1b4f6:    06 fd 80 0a       	r6 = r0 | 32768			  ## RF_ble.c:4852:42
 1e1b4fa:    97 f3 4d 5c       	call 3061914 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5
 1e1b4fe:    97 f3 4d 5c       	call 3061914 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e1b502:    08 00             	csync			  ## RF_ble.c:304:5
 1e1b504:    16 f6 14 d0       	[r13 + 20] = r6			  ## RF_ble.c:306:21
 1e1b508:    08 00             	csync			  ## RF_ble.c:307:5
 1e1b50a:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:147:19
 1e1b50e:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e1b510:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e1b512:    e0 fe a0 00       	r0 = r0 / r10 (s)			  ## RF_ble.c:147:17
 1e1b516:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e1b518:    01 fb f0 03       	r1 = 1008 <BTCTLER_LE_RAM_TOTAL+0x12 : 3f0 >			  ## RF_ble.c:308:50
 1e1b51c:    50 b3             	r0 &= r1			  ## RF_ble.c:308:50
 1e1b51e:    01 fb 05 1c       	r1 = 7173 <profile_l2cap_hdl+0x21 : 1c05 >			  ## RF_ble.c:308:67
 1e1b522:    50 b2             	r0 |= r1			  ## RF_ble.c:308:67
 1e1b524:    10 f6 10 d0       	[r13 + 16] = r0			  ## RF_ble.c:308:21
 1e1b528:    97 f3 36 5c       	call 3061868 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5
 1e1b52c:    18 f7 22 70       	h[r7 + 34] = r8			  ## RF_ble.c:4854:26
 1e1b530:    f2 fd 80 08       	r0 = r8 >> 16			  ## RF_ble.c:4856:35
 1e1b534:    28 5f             	h[r7 + 36] = r0			  ## RF_ble.c:4856:26
 1e1b536:    c0 ff 70 0f 00 00 	r0 = 3952 <ble_window_autozoom.widen : f70 >			  ## RF_ble.c:4856:26
 1e1b53c:    01 08             	r1 = r0			  ## RF_ble.c:4856:26
 1e1b53e:    00 42             	r0 = [r1 + 0]			  ## RF_ble.c:4920:27
 1e1b540:    40 86             	r0 += 100			  ## RF_ble.c:4920:27
 1e1b542:    08 42             	[r1 + 0] = r0			  ## RF_ble.c:4920:27
 1e1b544:    71 fc 24 00       	r1 = r7 + 36			  ## RF_ble.c:4856:17
 1e1b548:    70 fc 22 00       	r0 = r7 + 34			  ## RF_ble.c:4854:17
 1e1b54c:    23 18             	goto 70 <ble_event_irq_handler+0x532 : 1e1b594 >			  ## RF_ble.c:4854:17
 1e1b54e:    00 f7 58 70       	r0 = h[r7 + 88] (u)			  ## RF_ble.c:4885:35
 1e1b552:    49 21             	if (r0 == 0) goto -366 <ble_event_irq_handler+0x384 : 1e1b3e6 >			  ## RF_ble.c:4885:35
 1e1b554:    10 70             	r0 = 1			  ## RF_ble.c:4887:23
 1e1b556:    18 6a             	b[r5 + 1] = r0			  ## RF_ble.c:4887:23
 1e1b558:    23 18             	goto 70 <ble_event_irq_handler+0x53E : 1e1b5a0 >			  ## RF_ble.c:4887:23
 1e1b55a:    00 42             	r0 = [r1 + 0]			  ## RF_ble.c:4907:17
 1e1b55c:    40 e6 1c 30       	if (r0 < 100) goto 56 <ble_event_irq_handler+0x536 : 1e1b598 >			  ## RF_ble.c:4907:17
 1e1b560:    c0 f4 00 19       	[r1 + 0] = 0			  ## RF_ble.c:4908:23
 1e1b564:    20 4a             	r0 = [r5 + 8]			  ## RF_ble.c:4910:42
 1e1b566:    18 5f             	h[r7 + 34] = r0			  ## RF_ble.c:4865:26
 1e1b568:    00 d4             	r0 = r0 >> 16			  ## RF_ble.c:4867:35
 1e1b56a:    28 5f             	h[r7 + 36] = r0			  ## RF_ble.c:4867:26
 1e1b56c:    15 18             	goto 42 <ble_event_irq_handler+0x536 : 1e1b598 >			  ## RF_ble.c:4867:26
 1e1b56e:    21 60             	r1 = b[r0 + 2] (u)			  ## RF_ble.c:436:20
 1e1b570:    65 91             	r5 = r0 + 22			  ## RF_ble.c:436:20
 1e1b572:    21 f3 b5 1e       	if ((r1 & 2) != 0) goto -662 <ble_event_irq_handler+0x27E : 1e1b2e0 >			  ## RF_ble.c:436:20
 1e1b576:    b1 50             	r1 = h[r0 + 22] (u)			  ## RF_ble.c:410:17
 1e1b578:    02 32             	if (r1 != 0) goto 4 <ble_event_irq_handler+0x51C : 1e1b57e >			  ## RF_ble.c:410:17
 1e1b57a:    11 70             	r1 = 1
 1e1b57c:    b9 50             	h[r0 + 22] = r1
 1e1b57e:    40 72             	r0 = 36			  ## RF_ble.c:439:13
 1e1b580:    bf f3 28 9f       	call -49584 <putchar : 1e0f3d4 >			  ## RF_ble.c:439:13
 1e1b584:    ad 1e             	goto -678 <ble_event_irq_handler+0x27E : 1e1b2e0 >			  ## RF_ble.c:439:13
 1e1b586:    80 75             	r0 = 88			  ## RF_ble.c:4846:9
 1e1b588:    bf f3 24 9f       	call -49592 <putchar : 1e0f3d4 >			  ## RF_ble.c:4846:9
 1e1b58c:    70 fc 22 00       	r0 = r7 + 34			  ## RF_ble.c:4922:74
 1e1b590:    71 fc 24 00       	r1 = r7 + 36			  ## RF_ble.c:4922:43
 1e1b594:    01 52             	r1 = h[r1 + 0] (u)			  ## RF_ble.c:4922:43
 1e1b596:    00 50             	r0 = h[r0 + 0] (u)			  ## RF_ble.c:4922:74
 1e1b598:    10 5a             	r0 = h[r5 + 2] (u)			  ## RF_ble.c:4934:19
 1e1b59a:    30 fd 03 09       	r0 = r0 & 4294967292			  ## RF_ble.c:4935:26
 1e1b59e:    18 5a             	h[r5 + 2] = r0			  ## RF_ble.c:4935:26
 1e1b5a0:    50 48             	r0 = [r4 + 20]			  ## le_low_power.c:688:13
 1e1b5a2:    02 20             	if (r0 == 0) goto 4 <ble_event_irq_handler+0x546 : 1e1b5a8 >			  ## le_low_power.c:688:13
 1e1b5a4:    bf f3 1b 5f       	call -82378 <low_power_request : 1e073de >			  ## le_low_power.c:689:9
 1e1b5a8:    00 f6 44 d0       	r0 = [r13 + 68]			  ## RF_ble.c:3048:13
 1e1b5ac:    01 f6 40 d0       	r1 = [r13 + 64]			  ## RF_ble.c:3048:28
 1e1b5b0:    50 b3             	r0 &= r1			  ## RF_ble.c:3048:26
 1e1b5b2:    00 f3 02 00       	if ((r0 & 1) == 0) goto 4 <ble_event_irq_handler+0x558 : 1e1b5ba >			  ## RF_ble.c:3048:26
 1e1b5b6:    10 f4 01 da       	[r13 + 64] |= 256			  ## RF_ble.c:3049:26
 1e1b5ba:    00 f6 2c d0       	r0 = [r13 + 44]			  ## RF_ble.c:3057:9
 1e1b5be:    10 04             	r0 = r0.b0 (s)			  ## RF_ble.c:3057:24
 1e1b5c0:    f0 ef 02 c0       	ifs (r0 > -1) goto 4 <ble_event_irq_handler+0x566 : 1e1b5c8 >			  ## RF_ble.c:3057:24
 1e1b5c4:    0b f4 40 d9       	[r13 + 44] |= 64			  ## RF_ble.c:3058:25
 1e1b5c8:    06 0a             	sp += 12
 1e1b5ca:    70 f3 ff ff       	{r15-r0} = [sp++]			  ## RF_ble.c:3067:1
 1e1b5ce:    a9 01             	{psr, rets, reti} = [sp++]			  ## RF_ble.c:3067:1
 1e1b5d0:    22 00             	rti			  ## RF_ble.c:3067:1
 1e1b5d2:    35 fc ff ff       	r5 = r3 + -1			  ## RF_ble.c:1022:9
 1e1b5d6:    46 05             	r6 = r5.b0 (u)			  ## RF_ble.c:1022:9
 1e1b5d8:    b3 71             	r3 = 27			  ## RF_ble.c:1022:9
 1e1b5da:    b6 e1 0b 80       	if (r6 > 27) goto 22 <ble_event_irq_handler+0x592 : 1e1b5f4 >			  ## RF_ble.c:1022:9
 1e1b5de:    33 71             	r3 = 19
 1e1b5e0:    96 e1 08 00       	if (r6 == 25) goto 16 <ble_event_irq_handler+0x592 : 1e1b5f4 >
 1e1b5e4:    53 08             	r3 = r5
 1e1b5e6:    36 e1 05 80       	if (r6 > 19) goto 10 <ble_event_irq_handler+0x592 : 1e1b5f4 >
 1e1b5ea:    33 71             	r3 = 19			  ## RF_ble.c:1034:13
 1e1b5ec:    60 ff fc 29 01 00 	if ((r2 & 252) == 0) goto 2 <ble_event_irq_handler+0x592 : 1e1b5f4 >			  ## RF_ble.c:1034:13
 1e1b5f2:    c3 71             	r3 = 28			  ## RF_ble.c:1034:13
 1e1b5f4:    25 fd 1f 39       	r5 = r3 & 31			  ## RF_ble.c:882:23
 1e1b5f8:    36 fd 1f 2a       	r6 = r2 & 4294959359			  ## RF_ble.c:882:23
 1e1b5fc:    c5 fd 40 65       	r6 <= insert(r5, p:8, l:5)			  ## RF_ble.c:882:23
 1e1b600:    1e 52             	h[r1 + 2] = r6			  ## RF_ble.c:882:23
 1e1b602:    2d f3 58 2e       	if ((r2 & 8192) != 0) goto -848 <ble_event_irq_handler+0x254 : 1e1b2b6 >			  ## RF_ble.c:882:23
 1e1b606:    c1 04             	r1 = r3.b0 (u)			  ## RF_ble.c:886:30
 1e1b608:    54 1e             	goto -856 <ble_event_irq_handler+0x250 : 1e1b2b2 >			  ## RF_ble.c:886:30


__ble_rx_buf_process_conn:
 1e1b60a:    77 01             	[--sp] = {rets, r7-r4}			  ## RF_ble.c:2294:0
 1e1b60c:    24 08             	r4 = r2			  ## RF_ble.c:2294:0
 1e1b60e:    15 08             	r5 = r1			  ## RF_ble.c:2294:0
 1e1b610:    06 08             	r6 = r0			  ## RF_ble.c:2294:0
 1e1b612:    1a 28             	if (r4 == 0) goto 52 <__ble_rx_buf_process_conn+0x3E : 1e1b648 >			  ## RF_ble.c:2294:0
 1e1b614:    a8 c0             	r0 = r5 << 2			  ## RF_ble.c:2308:9
 1e1b616:    07 bc             	r7 = r6 + r0			  ## RF_ble.c:2308:9
 1e1b618:    f0 7f             	r0 = 255			  ## RF_ble.c:2308:23
 1e1b61a:    bf f3 92 f1       	call -7388 <hw_alloc_rx : 1e19942 >			  ## RF_ble.c:2308:23
 1e1b61e:    10 f6 78 71       	[r7 + 376] = r0			  ## RF_ble.c:2308:21
 1e1b622:    16 20             	if (r0 == 0) goto 44 <__ble_rx_buf_process_conn+0x46 : 1e1b650 >			  ## RF_ble.c:2308:21
 1e1b624:    e1 9d             	r1 = r6 + 30			  ## RF_ble.c:2307:67
 1e1b626:    63 fc 20 00       	r3 = r6 + 32			  ## RF_ble.c:2307:42
 1e1b62a:    01 3a             	if (r5 != 0) goto 2 <__ble_rx_buf_process_conn+0x24 : 1e1b62e >			  ## RF_ble.c:2307:42
 1e1b62c:    13 08             	r3 = r1			  ## RF_ble.c:2307:18
 1e1b62e:    40 81             	r0 += 20			  ## RF_ble.c:2316:33
 1e1b630:    bf f3 95 f1       	call -7382 <PHY_TO_BLE : 1e1995e >			  ## RF_ble.c:2316:22
 1e1b634:    62 fc 66 00       	r2 = r6 + 102			  ## RF_ble.c:2321:60
 1e1b638:    61 fc 67 00       	r1 = r6 + 103			  ## RF_ble.c:2321:38
 1e1b63c:    08 56             	h[r3 + 0] = r0			  ## RF_ble.c:2316:20
 1e1b63e:    01 3a             	if (r5 != 0) goto 2 <__ble_rx_buf_process_conn+0x38 : 1e1b642 >			  ## RF_ble.c:2316:20
 1e1b640:    21 08             	r1 = r2			  ## RF_ble.c:2321:21
 1e1b642:    00 62             	r0 = b[r1 + 0] (u)			  ## RF_ble.c:2322:9
 1e1b644:    70 b0             	r0 &= 4294967294			  ## RF_ble.c:2322:9
 1e1b646:    08 62             	b[r1 + 0] = r0			  ## RF_ble.c:2322:9
 1e1b648:    10 70             	r0 = 1			  ## RF_ble.c:2304:9
 1e1b64a:    01 38             	if (r4 != 0) goto 2 <__ble_rx_buf_process_conn+0x44 : 1e1b64e >			  ## RF_ble.c:2304:9
 1e1b64c:    00 70             	r0 = 0
 1e1b64e:    57 01             	{pc, r7-r4} = [sp++]			  ## RF_ble.c:2328:1
 1e1b650:    10 70             	r0 = 1
 1e1b652:    57 01             	{pc, r7-r4} = [sp++]			  ## RF_ble.c:2328:1


__hw_rx_buf_process:
 1e1b654:    7b 01             	[--sp] = {rets, r11-r4}			  ## RF_ble.c:2601:0
 1e1b656:    0a 08             	r10 = r0			  ## RF_ble.c:2601:0
 1e1b658:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:2602:31
 1e1b65a:    04 fc 38 00       	r4 = r0 + 56			  ## RF_ble.c:2609:69
 1e1b65e:    03 fc 3a 00       	r3 = r0 + 58			  ## RF_ble.c:2609:40
 1e1b662:    18 08             	r8 = r1			  ## RF_ble.c:2609:40
 1e1b664:    01 34             	if (r2 != 0) goto 2 <__hw_rx_buf_process+0x14 : 1e1b668 >
 1e1b666:    43 08             	r3 = r4			  ## RF_ble.c:2609:14
 1e1b668:    0b f7 00 30       	r11 = h[r3 + 0] (u)
 1e1b66c:    04 fc 26 00       	r4 = r0 + 38			  ## RF_ble.c:2607:69
 1e1b670:    03 fc 28 00       	r3 = r0 + 40			  ## RF_ble.c:2607:40
 1e1b674:    01 34             	if (r2 != 0) goto 2 <__hw_rx_buf_process+0x24 : 1e1b678 >			  ## RF_ble.c:2607:40
 1e1b676:    43 08             	r3 = r4			  ## RF_ble.c:2607:14
 1e1b678:    03 56             	r3 = h[r3 + 0] (u)
 1e1b67a:    06 fc 2a 00       	r6 = r0 + 42			  ## RF_ble.c:2608:69
 1e1b67e:    04 fc 2c 00       	r4 = r0 + 44			  ## RF_ble.c:2608:40
 1e1b682:    01 34             	if (r2 != 0) goto 2 <__hw_rx_buf_process+0x32 : 1e1b686 >			  ## RF_ble.c:2608:40
 1e1b684:    64 08             	r4 = r6			  ## RF_ble.c:2608:14
 1e1b686:    02 58             	r2 = h[r4 + 0] (u)
 1e1b688:    16 d2             	r6 = r2 >> 8			  ## RF_ble.c:2621:5
 1e1b68a:    14 fc f8 ff       	r4 = r1 + -8			  ## RF_ble.c:2621:5
 1e1b68e:    87 58             	r7 = h[r4 + 16] (u)			  ## RF_ble.c:2612:5
 1e1b690:    2e 69             	b[r4 + 18] = r6			  ## RF_ble.c:2621:5
 1e1b692:    16 c1             	r6 = r2 << 4			  ## RF_ble.c:2622:5
 1e1b694:    26 fd 30 69       	r6 = r6 & 48			  ## RF_ble.c:2622:5
 1e1b698:    92 c1             	r2 = r2 << 6			  ## RF_ble.c:2615:5
 1e1b69a:    25 fd 02 2a       	r5 = r2 & 512			  ## RF_ble.c:2623:5
 1e1b69e:    55 bc             	r5 |= r6			  ## RF_ble.c:2622:5
 1e1b6a0:    26 fd 01 2a       	r6 = r2 & 256			  ## RF_ble.c:2624:5
 1e1b6a4:    55 bc             	r5 |= r6			  ## RF_ble.c:2623:5
 1e1b6a6:    26 fd 0f 39       	r6 = r3 & 15			  ## RF_ble.c:2612:5
 1e1b6aa:    59 d0             	r1 = r3 >> 1			  ## RF_ble.c:2613:5
 1e1b6ac:    21 fd 40 19       	r1 = r1 & 64			  ## RF_ble.c:2613:5
 1e1b6b0:    51 bc             	r1 |= r6			  ## RF_ble.c:2612:5
 1e1b6b2:    5b c0             	r3 = r3 << 1			  ## RF_ble.c:2614:5
 1e1b6b4:    23 fd 80 39       	r3 = r3 & 128			  ## RF_ble.c:2614:5
 1e1b6b8:    51 b6             	r1 |= r3			  ## RF_ble.c:2613:5
 1e1b6ba:    22 fd 04 2a       	r2 = r2 & 1024			  ## RF_ble.c:2615:5
 1e1b6be:    51 b4             	r1 |= r2			  ## RF_ble.c:2614:5
 1e1b6c0:    22 fd f8 7a       	r2 = r7 & 63488			  ## RF_ble.c:2622:5
 1e1b6c4:    51 b4             	r1 |= r2			  ## RF_ble.c:2622:5
 1e1b6c6:    51 ba             	r1 |= r5			  ## RF_ble.c:2624:5
 1e1b6c8:    89 58             	h[r4 + 16] = r1			  ## RF_ble.c:2624:5
 1e1b6ca:    f2 fd 40 1b       	r1 = r11 >> 8			  ## RF_ble.c:2629:20
 1e1b6ce:    22 fd 01 19       	r2 = r1 & 1			  ## RF_ble.c:2629:20
 1e1b6d2:    06 fc 2c 01       	r6 = r0 + 300			  ## RF_ble.c:2629:20
 1e1b6d6:    8a 6d             	b[r6 + 24] = r2			  ## RF_ble.c:2629:18
 1e1b6d8:    00 f3 03 10       	if ((r1 & 1) == 0) goto 6 <__hw_rx_buf_process+0x8E : 1e1b6e2 >
 1e1b6dc:    d1 5c             	r1 = h[r6 + 26] (u)			  ## RF_ble.c:2632:30
 1e1b6de:    91 b0             	r1 |= 2			  ## RF_ble.c:2632:30
 1e1b6e0:    d9 5c             	h[r6 + 26] = r1			  ## RF_ble.c:2632:30
 1e1b6e2:    01 f7 58 00       	r1 = h[r0 + 88] (u)			  ## RF_ble.c:2635:31
 1e1b6e6:    b9 58             	h[r4 + 22] = r1			  ## RF_ble.c:2635:21
 1e1b6e8:    a1 51             	r1 = h[r0 + 52] (u)			  ## RF_ble.c:2636:31
 1e1b6ea:    39 69             	b[r4 + 19] = r1			  ## RF_ble.c:2636:21
 1e1b6ec:    01 4c             	r1 = [r6 + 0]			  ## analog_ble.c:168:40
 1e1b6ee:    0a d4             	r2 = r1 >> 16			  ## analog_ble.c:169:88
 1e1b6f0:    09 d2             	r1 = r1 >> 8			  ## analog_ble.c:169:54
 1e1b6f2:    01 fd c0 19       	r1 = r1 | 192			  ## analog_ble.c:169:34
 1e1b6f6:    11 fd 3f 19       	r1 = r1 ^ 63			  ## analog_ble.c:169:34
 1e1b6fa:    a1 b2             	r1 = r1 - r2			  ## analog_ble.c:169:68
 1e1b6fc:    49 69             	b[r4 + 20] = r1			  ## RF_ble.c:2637:21
 1e1b6fe:    81 58             	r1 = h[r4 + 16] (u)			  ## RF_ble.c:2638:21
 1e1b700:    f1 b5             	r1 &= 4294965247			  ## RF_ble.c:2638:21
 1e1b702:    89 58             	h[r4 + 16] = r1			  ## RF_ble.c:2638:21
 1e1b704:    02 fc 50 01       	r2 = r0 + 336			  ## RF_ble.c:2638:21
 1e1b708:    23 64             	r3 = b[r2 + 2] (u)			  ## RF_ble.c:2644:17
 1e1b70a:    27 fd 0f b9       	r7 = r11 & 15			  ## RF_ble.c:2610:24
 1e1b70e:    09 fc c4 01       	r9 = r0 + 452
 1e1b712:    13 e0 0b 10       	if (r3 != 1) goto 22 <__hw_rx_buf_process+0xD8 : 1e1b72c >
 1e1b716:    01 f9 00 90       	r1 = b[r9 + 0] (u)			  ## RF_ble.c:2645:25
 1e1b71a:    08 32             	if (r1 != 0) goto 16 <__hw_rx_buf_process+0xD8 : 1e1b72c >			  ## RF_ble.c:2645:25
 1e1b71c:    01 f7 58 02       	r1 = h[r0 + 600] (u)			  ## RF_ble.c:2646:17
 1e1b720:    21 e0 04 10       	if (r1 != 2) goto 8 <__hw_rx_buf_process+0xD8 : 1e1b72c >			  ## RF_ble.c:2646:17
 1e1b724:    20 fb 64 14       	r1 = 1867776			  ## RF_ble.c:154:14
 1e1b728:    00 f4 40 19       	[r1 + 0] |= 64			  ## RF_ble.c:154:14
 1e1b72c:    17 e0 1c 10       	if (r7 != 1) goto 56 <__hw_rx_buf_process+0x114 : 1e1b768 >
 1e1b730:    13 e0 33 00       	if (r3 == 1) goto 102 <__hw_rx_buf_process+0x146 : 1e1b79a >			  ## RF_ble.c:2067:5
 1e1b734:    33 e0 39 00       	if (r3 == 3) goto 114 <__hw_rx_buf_process+0x156 : 1e1b7aa >
 1e1b738:    23 e0 5a 10       	if (r3 != 2) goto 180 <__hw_rx_buf_process+0x19C : 1e1b7f0 >
 1e1b73c:    81 58             	r1 = h[r4 + 16] (u)			  ## RF_ble.c:1968:17
 1e1b73e:    23 fd 0f 19       	r3 = r1 & 15			  ## RF_ble.c:1968:5
 1e1b742:    63 e0 55 80       	if (r3 > 6) goto 170 <__hw_rx_buf_process+0x19C : 1e1b7f0 >			  ## RF_ble.c:1968:5
 1e1b746:    15 70             	r5 = 1
 1e1b748:    c5 0c             	r5 <<= r3
 1e1b74a:    61 ff 57 59 48 00 	if ((r5 & 87) != 0) goto 144 <__hw_rx_buf_process+0x18C : 1e1b7e0 >
 1e1b750:    53 e0 4e 10       	if (r3 != 5) goto 156 <__hw_rx_buf_process+0x19C : 1e1b7f0 >
 1e1b754:    00 f9 e8 01       	r0 = b[r0 + 488] (u)			  ## RF_ble.c:1978:18
 1e1b758:    4b 30             	if (r0 != 0) goto 150 <__hw_rx_buf_process+0x19C : 1e1b7f0 >
 1e1b75a:    50 4d             	r0 = [r6 + 84]			  ## RF_ble.c:1979:17
 1e1b75c:    80 50             	r0 = h[r0 + 16] (u)			  ## RF_ble.c:1979:28
 1e1b75e:    20 fd 0f 09       	r0 = r0 & 15			  ## RF_ble.c:1979:28
 1e1b762:    10 e0 2d 00       	if (r0 == 1) goto 90 <__hw_rx_buf_process+0x16C : 1e1b7c0 >			  ## RF_ble.c:1979:28
 1e1b766:    44 18             	goto 136 <__hw_rx_buf_process+0x19C : 1e1b7f0 >			  ## RF_ble.c:1979:28
 1e1b768:    22 f3 0b b0       	if ((r11 & 4) != 0) goto 22 <__hw_rx_buf_process+0x12E : 1e1b782 >
 1e1b76c:    03 f3 3b b0       	if ((r11 & 8) == 0) goto 118 <__hw_rx_buf_process+0x192 : 1e1b7e6 >
 1e1b770:    00 70             	r0 = 0			  ## RF_ble.c:2663:13
 1e1b772:    28 69             	b[r4 + 18] = r0			  ## RF_ble.c:2663:13
 1e1b774:    80 58             	r0 = h[r4 + 16] (u)			  ## RF_ble.c:2663:13
 1e1b776:    30 fd 03 00       	r0 = r0 & 4294965199			  ## RF_ble.c:2663:13
 1e1b77a:    00 fd 01 00       	r0 = r0 | 2064			  ## RF_ble.c:2663:13
 1e1b77e:    88 58             	h[r4 + 16] = r0			  ## RF_ble.c:2663:13
 1e1b780:    6b 18             	goto 214 <__hw_rx_buf_process+0x204 : 1e1b858 >			  ## RF_ble.c:2663:13
 1e1b782:    00 70             	r0 = 0			  ## RF_ble.c:2654:13
 1e1b784:    28 69             	b[r4 + 18] = r0			  ## RF_ble.c:2654:13
 1e1b786:    80 58             	r0 = h[r4 + 16] (u)			  ## RF_ble.c:2654:13
 1e1b788:    30 fd 03 00       	r0 = r0 & 4294965199			  ## RF_ble.c:2654:13
 1e1b78c:    00 fd 01 00       	r0 = r0 | 2064			  ## RF_ble.c:2654:13
 1e1b790:    88 58             	h[r4 + 16] = r0			  ## RF_ble.c:2654:13
 1e1b792:    d0 5c             	r0 = h[r6 + 26] (u)			  ## RF_ble.c:2655:34
 1e1b794:    f0 b0             	r0 &= 4294967293			  ## RF_ble.c:2655:34
 1e1b796:    d8 5c             	h[r6 + 26] = r0			  ## RF_ble.c:2655:34
 1e1b798:    5f 18             	goto 190 <__hw_rx_buf_process+0x204 : 1e1b858 >			  ## RF_ble.c:2655:34
 1e1b79a:    80 58             	r0 = h[r4 + 16] (u)			  ## RF_ble.c:2000:17
 1e1b79c:    20 fd 0f 09       	r0 = r0 & 15			  ## RF_ble.c:2000:5
 1e1b7a0:    30 e0 1e 00       	if (r0 == 3) goto 60 <__hw_rx_buf_process+0x18C : 1e1b7e0 >			  ## RF_ble.c:2000:5
 1e1b7a4:    50 e0 1c 00       	if (r0 == 5) goto 56 <__hw_rx_buf_process+0x18C : 1e1b7e0 >
 1e1b7a8:    23 18             	goto 70 <__hw_rx_buf_process+0x19C : 1e1b7f0 >
 1e1b7aa:    81 58             	r1 = h[r4 + 16] (u)			  ## RF_ble.c:2018:17
 1e1b7ac:    23 fd 0f 19       	r3 = r1 & 15			  ## RF_ble.c:2018:5
 1e1b7b0:    63 e0 1e 80       	if (r3 > 6) goto 60 <__hw_rx_buf_process+0x19C : 1e1b7f0 >			  ## RF_ble.c:2018:5
 1e1b7b4:    15 70             	r5 = 1
 1e1b7b6:    f8 fd 30 35       	r3 = r5 << r3
 1e1b7ba:    60 ff 55 39 0d 00 	if ((r3 & 85) == 0) goto 26 <__hw_rx_buf_process+0x186 : 1e1b7da >
 1e1b7c0:    f0 65             	r0 = b[r2 + 31] (u)
 1e1b7c2:    81 fd 38 11       	r1 = uextra(r1, p:7, l:1)
 1e1b7c6:    10 f2 0b 10       	if (r0 != r1) goto 22 <__hw_rx_buf_process+0x18C : 1e1b7e0 >
 1e1b7ca:    60 fc 44 00       	r0 = r6 + 68
 1e1b7ce:    c1 99             	r1 = r4 + 28
 1e1b7d0:    62 70             	r2 = 6
 1e1b7d2:    97 f3 8b 5b       	call 3061526 <memcmp : 106eec >
 1e1b7d6:    04 30             	if (r0 != 0) goto 8 <__hw_rx_buf_process+0x18C : 1e1b7e0 >
 1e1b7d8:    0b 18             	goto 22 <__hw_rx_buf_process+0x19C : 1e1b7f0 >
 1e1b7da:    60 ff 28 39 05 00 	if ((r3 & 40) == 0) goto 10 <__hw_rx_buf_process+0x196 : 1e1b7ea >
 1e1b7e0:    e0 77             	r0 = 126			  ## RF_ble.c:2683:13
 1e1b7e2:    bf f3 f7 9d       	call -50194 <putchar : 1e0f3d4 >			  ## RF_ble.c:2683:13
 1e1b7e6:    80 08             	r0 = r8
 1e1b7e8:    a4 18             	goto 328 <__hw_rx_buf_process+0x2DE : 1e1b932 >
 1e1b7ea:    00 f9 e8 01       	r0 = b[r0 + 488] (u)			  ## RF_ble.c:2021:17
 1e1b7ee:    a4 20             	if (r0 == 0) goto 328 <__hw_rx_buf_process+0x2E4 : 1e1b938 >
 1e1b7f0:    00 f6 00 a0       	r0 = [r10 + 0]			  ## RF_ble.c:2242:31
 1e1b7f4:    05 fc 50 01       	r5 = r0 + 336
 1e1b7f8:    21 6a             	r1 = b[r5 + 2] (u)			  ## RF_ble.c:2243:18
 1e1b7fa:    21 e0 2d 10       	if (r1 != 2) goto 90 <__hw_rx_buf_process+0x204 : 1e1b858 >			  ## RF_ble.c:2243:18
 1e1b7fe:    81 58             	r1 = h[r4 + 16] (u)			  ## RF_ble.c:2094:13
 1e1b800:    22 fd 0f 19       	r2 = r1 & 15			  ## RF_ble.c:2094:9
 1e1b804:    52 e0 08 00       	if (r2 == 5) goto 16 <__hw_rx_buf_process+0x1C4 : 1e1b818 >			  ## RF_ble.c:2094:9
 1e1b808:    32 e0 24 10       	if (r2 != 3) goto 72 <__hw_rx_buf_process+0x200 : 1e1b854 >
 1e1b80c:    81 fd 38 11       	r1 = uextra(r1, p:7, l:1)			  ## RF_ble.c:2095:9
 1e1b810:    c2 99             	r2 = r4 + 28			  ## RF_ble.c:2095:41
 1e1b812:    bf f3 32 f3       	call -6556 <__set_peer_addr : 1e19e7a >			  ## RF_ble.c:2095:9
 1e1b816:    20 18             	goto 64 <__hw_rx_buf_process+0x204 : 1e1b858 >			  ## RF_ble.c:2095:9
 1e1b818:    72 50             	r2 = h[r0 + 14] (u)			  ## RF_ble.c:2098:27
 1e1b81a:    89 d0             	r1 = r1 >> 2			  ## RF_ble.c:2101:37
 1e1b81c:    21 fd 10 19       	r1 = r1 & 16			  ## RF_ble.c:2101:37
 1e1b820:    b9 50             	h[r0 + 22] = r1			  ## RF_ble.c:2101:25
 1e1b822:    91 c0             	r1 = r2 << 2			  ## RF_ble.c:2102:42
 1e1b824:    21 fd 04 19       	r1 = r1 & 4			  ## RF_ble.c:2102:42
 1e1b828:    02 fd 01 19       	r2 = r1 | 1			  ## RF_ble.c:2102:48
 1e1b82c:    da 50             	h[r0 + 26] = r2			  ## RF_ble.c:2102:25
 1e1b82e:    82 58             	r2 = h[r4 + 16] (u)			  ## RF_ble.c:2103:31
 1e1b830:    92 d0             	r2 = r2 >> 2			  ## RF_ble.c:2103:37
 1e1b832:    22 fd 10 29       	r2 = r2 & 16			  ## RF_ble.c:2103:37
 1e1b836:    ca 50             	h[r0 + 24] = r2			  ## RF_ble.c:2103:25
 1e1b838:    11 fd 05 19       	r1 = r1 ^ 5			  ## RF_ble.c:2104:49
 1e1b83c:    e9 50             	h[r0 + 28] = r1			  ## RF_ble.c:2104:25
 1e1b83e:    07 70             	r7 = 0			  ## RF_ble.c:2104:25
 1e1b840:    0f 6a             	b[r5 + 0] = r7			  ## RF_ble.c:2106:22
 1e1b842:    c0 4a             	r0 = [r5 + 48]			  ## RF_ble.c:2108:21
 1e1b844:    bf f3 63 31       	call -105786 <hw_dma_free : 1e01b0e >			  ## RF_ble.c:2108:9
 1e1b848:    d0 4a             	r0 = [r5 + 52]			  ## RF_ble.c:2109:21
 1e1b84a:    bf f3 60 31       	call -105792 <hw_dma_free : 1e01b0e >			  ## RF_ble.c:2109:9
 1e1b84e:    cf 4a             	[r5 + 48] = r7			  ## RF_ble.c:233:15
 1e1b850:    df 4a             	[r5 + 52] = r7			  ## RF_ble.c:234:15
 1e1b852:    02 18             	goto 4 <__hw_rx_buf_process+0x204 : 1e1b858 >			  ## RF_ble.c:234:15
 1e1b854:    8f f3 c4 3d       	call 1997704 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1b858:    00 f6 18 90       	r0 = [r9 + 24]			  ## RF_ble.c:2692:14
 1e1b85c:    06 20             	if (r0 == 0) goto 12 <__hw_rx_buf_process+0x216 : 1e1b86a >			  ## RF_ble.c:2692:14
 1e1b85e:    12 40             	r2 = [r0 + 4]			  ## RF_ble.c:2692:39
 1e1b860:    04 24             	if (r2 == 0) goto 8 <__hw_rx_buf_process+0x216 : 1e1b86a >			  ## RF_ble.c:2692:39
 1e1b862:    00 f6 14 90       	r0 = [r9 + 20]			  ## RF_ble.c:2693:49
 1e1b866:    81 08             	r1 = r8			  ## RF_ble.c:2693:9
 1e1b868:    82 00             	call r2			  ## RF_ble.c:2693:9
 1e1b86a:    81 58             	r1 = h[r4 + 16] (u)			  ## RF_ble.c:2696:9
 1e1b86c:    20 69             	r0 = b[r4 + 18] (u)			  ## RF_ble.c:2696:9
 1e1b86e:    21 fd 30 19       	r1 = r1 & 48			  ## RF_ble.c:2696:9
 1e1b872:    01 e1 03 10       	if (r1 != 16) goto 6 <__hw_rx_buf_process+0x228 : 1e1b87c >			  ## RF_ble.c:2696:9
 1e1b876:    02 30             	if (r0 != 0) goto 4 <__hw_rx_buf_process+0x228 : 1e1b87c >
 1e1b878:    85 08             	r5 = r8
 1e1b87a:    4a 18             	goto 148 <__hw_rx_buf_process+0x2BC : 1e1b910 >
 1e1b87c:    40 81             	r0 += 20			  ## RF_ble.c:189:46
 1e1b87e:    21 fd 03 09       	r1 = r0 & 3			  ## lbuf.c:125:14
 1e1b882:    61 fb 04 19       	r1 = 4 - r1			  ## lbuf.c:126:19
 1e1b886:    02 70             	r2 = 0			  ## lbuf.c:126:19
 1e1b888:    60 ff 03 09 01 00 	if ((r0 & 3) == 0) goto 2 <__hw_rx_buf_process+0x23C : 1e1b890 >			  ## lbuf.c:126:19
 1e1b88e:    12 08             	r2 = r1			  ## lbuf.c:125:9
 1e1b890:    21 58             	r1 = h[r4 + 4] (u)
 1e1b892:    07 b4             	r7 = r2 + r0			  ## lbuf.c:125:9
 1e1b894:    17 f2 03 30       	if (r7 < r1) goto 6 <__hw_rx_buf_process+0x24A : 1e1b89e >
 1e1b898:    8f f3 a2 3d       	call 1997636 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1b89c:    21 58             	r1 = h[r4 + 4] (u)
 1e1b89e:    10 fc f0 ff       	r0 = r1 + -16			  ## lbuf.c:131:28
 1e1b8a2:    05 70             	r5 = 0			  ## lbuf.c:131:28
 1e1b8a4:    07 f2 1d 80       	if (r7 > r0) goto 58 <__hw_rx_buf_process+0x28E : 1e1b8e2 >			  ## lbuf.c:131:28
 1e1b8a8:    97 f3 78 5a       	call 3060976 <local_irq_disable : 106d9c >			  ## lbuf.c:140:5
 1e1b8ac:    20 58             	r0 = h[r4 + 4] (u)			  ## lbuf.c:143:48
 1e1b8ae:    71 fc 20 00       	r1 = r7 + 32			  ## lbuf.c:143:29
 1e1b8b2:    01 f2 13 20       	if (r1 >= r0) goto 38 <__hw_rx_buf_process+0x288 : 1e1b8dc >			  ## lbuf.c:143:29
 1e1b8b6:    01 48             	r1 = [r4 + 0]			  ## lbuf.c:145:28
 1e1b8b8:    80 fb 70 28       	r2 = r8 + r7			  ## lbuf.c:144:44
 1e1b8bc:    29 44             	[r2 + 8] = r1			  ## lbuf.c:145:19
 1e1b8be:    c1 ff f0 ff 00 00 	r1 = 65520 <_IRQ_MEM_ADDR+0xF0 : fff0 >			  ## lbuf.c:146:31
 1e1b8c4:    e1 b3             	r1 = r1 - r7			  ## lbuf.c:146:31
 1e1b8c6:    10 09             	r0 += r1			  ## lbuf.c:146:48
 1e1b8c8:    68 54             	h[r2 + 12] = r0			  ## lbuf.c:146:18
 1e1b8ca:    00 70             	r0 = 0			  ## lbuf.c:147:18
 1e1b8cc:    f8 64             	b[r2 + 15] = r0			  ## lbuf.c:147:18
 1e1b8ce:    0a 44             	[r2 + 0] = r2			  ## list.h:188:16
 1e1b8d0:    1a 44             	[r2 + 4] = r2			  ## list.h:189:16
 1e1b8d2:    00 9f             	r0 = r7 + 16			  ## lbuf.c:143:14
 1e1b8d4:    28 58             	h[r4 + 4] = r0			  ## lbuf.c:149:20
 1e1b8d6:    00 95             	r0 = r2 + 16			  ## lbuf.c:157:32
 1e1b8d8:    bf f3 d4 30       	call -106072 <lbuf_free_btctrler : 1e01a84 >			  ## lbuf.c:157:9
 1e1b8dc:    97 f3 5c 5a       	call 3060920 <local_irq_enable : 106d98 >			  ## lbuf.c:159:5
 1e1b8e0:    85 08             	r5 = r8			  ## lbuf.c:159:5
 1e1b8e2:    60 ff 03 59 02 00 	if ((r5 & 3) == 0) goto 4 <__hw_rx_buf_process+0x298 : 1e1b8ec >
 1e1b8e8:    8f f3 7a 3d       	call 1997556 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1b8ec:    02 3a             	if (r5 != 0) goto 4 <__hw_rx_buf_process+0x29E : 1e1b8f2 >
 1e1b8ee:    8f f3 77 3d       	call 1997550 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1b8f2:    60 fc 5c 00       	r0 = r6 + 92			  ## RF_ble.c:2706:31
 1e1b8f6:    51 08             	r1 = r5			  ## RF_ble.c:2706:13
 1e1b8f8:    bf f3 bc 5c       	call -83592 <hw_dma_push : 1e07274 >			  ## RF_ble.c:2706:13
 1e1b8fc:    40 5a             	r0 = h[r5 + 8] (u)			  ## RF_ble.c:2710:17
 1e1b8fe:    20 fd 30 09       	r0 = r0 & 48			  ## RF_ble.c:2710:17
 1e1b902:    00 e3 05 00       	if (r0 == 48) goto 10 <__hw_rx_buf_process+0x2BC : 1e1b910 >			  ## RF_ble.c:2710:17
 1e1b906:    70 5d             	r0 = h[r6 + 46] (u)			  ## RF_ble.c:410:17
 1e1b908:    20 e0 02 80       	if (r0 > 2) goto 4 <__hw_rx_buf_process+0x2BC : 1e1b910 >			  ## RF_ble.c:410:17
 1e1b90c:    30 70             	r0 = 3
 1e1b90e:    78 5d             	h[r6 + 46] = r0
 1e1b910:    00 f6 18 90       	r0 = [r9 + 24]			  ## RF_ble.c:2717:14
 1e1b914:    06 20             	if (r0 == 0) goto 12 <__hw_rx_buf_process+0x2CE : 1e1b922 >			  ## RF_ble.c:2717:14
 1e1b916:    02 40             	r2 = [r0 + 0]			  ## RF_ble.c:2717:39
 1e1b918:    04 24             	if (r2 == 0) goto 8 <__hw_rx_buf_process+0x2CE : 1e1b922 >			  ## RF_ble.c:2717:39
 1e1b91a:    00 f6 14 90       	r0 = [r9 + 20]			  ## RF_ble.c:2718:45
 1e1b91e:    51 08             	r1 = r5			  ## RF_ble.c:2718:9
 1e1b920:    82 00             	call r2			  ## RF_ble.c:2718:9
 1e1b922:    40 5a             	r0 = h[r5 + 8] (u)			  ## RF_ble.c:2721:10
 1e1b924:    20 fd 30 09       	r0 = r0 & 48			  ## RF_ble.c:2721:10
 1e1b928:    00 e1 05 10       	if (r0 != 16) goto 10 <__hw_rx_buf_process+0x2E2 : 1e1b936 >			  ## RF_ble.c:2721:10
 1e1b92c:    a0 6a             	r0 = b[r5 + 10] (u)			  ## RF_ble.c:2721:10
 1e1b92e:    03 30             	if (r0 != 0) goto 6 <__hw_rx_buf_process+0x2E2 : 1e1b936 >			  ## RF_ble.c:2721:10
 1e1b930:    50 08             	r0 = r5			  ## RF_ble.c:2723:9
 1e1b932:    bf f3 ec 30       	call -106024 <hw_dma_free : 1e01b0e >
 1e1b936:    5b 01             	{pc, r11-r4} = [sp++]			  ## RF_ble.c:2725:1
 1e1b938:    80 65             	r0 = b[r2 + 24] (u)			  ## RF_ble.c:2022:18
 1e1b93a:    81 fd 30 11       	r1 = uextra(r1, p:6, l:1)			  ## RF_ble.c:2022:45
 1e1b93e:    10 f2 4f 1f       	if (r0 != r1) goto -354 <__hw_rx_buf_process+0x18C : 1e1b7e0 >			  ## RF_ble.c:2022:45
 1e1b942:    60 fc 3d 00       	r0 = r6 + 61			  ## RF_ble.c:2023:28
 1e1b946:    41 fc 22 00       	r1 = r4 + 34			  ## RF_ble.c:2023:53
 1e1b94a:    42 1f             	goto -380 <__hw_rx_buf_process+0x17C : 1e1b7d0 >			  ## RF_ble.c:2023:53


ble_rx_irq_handler:
 1e1b94c:    e9 01             	[--sp] = {psr, rets, reti}			  ## RF_ble.c:3071:0
 1e1b94e:    78 f3 ff 07       	[--sp] = {r10-r0}			  ## RF_ble.c:3072:9
 1e1b952:    fc 0b             	sp += -8			  ## RF_ble.c:3072:9
 1e1b954:    c0 ff 84 2d 00 00 	r0 = 11652 <bb_hdl : 2d84 >			  ## RF_ble.c:3079:15
 1e1b95a:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:3079:15
 1e1b95c:    0a f6 10 00       	r10 = [r0 + 16]			  ## RF_ble.c:3079:31
 1e1b960:    c0 ff 28 80 1c 00 	r0 = 1867816 <uECC_vli_cmp_unsafe+0xC102C : 1c8028 >
 1e1b966:    01 40             	r1 = [r0 + 0]			  ## RF_ble.c:3081:13
 1e1b968:    22 40             	r2 = [r0 + 8]			  ## RF_ble.c:3081:28
 1e1b96a:    51 b5             	r1 &= r2			  ## RF_ble.c:3081:26
 1e1b96c:    08 f3 75 10       	if ((r1 & 256) == 0) goto 234 <ble_rx_irq_handler+0x10E : 1e1ba5a >			  ## RF_ble.c:3081:26
 1e1b970:    01 f4 01 0a       	[r0 + 4] |= 256			  ## RF_ble.c:3082:26
 1e1b974:    00 f6 04 a0       	r0 = [r10 + 4]			  ## RF_ble5.c:185:18
 1e1b978:    70 30             	if (r0 != 0) goto 224 <ble_rx_irq_handler+0x10E : 1e1ba5a >			  ## RF_ble5.c:185:18
 1e1b97a:    05 f6 00 a0       	r5 = [r10 + 0]			  ## RF_ble.c:2797:34
 1e1b97e:    58 fc 44 01       	r8 = r5 + 324
 1e1b982:    00 f6 34 80       	r0 = [r8 + 52]			  ## RF_ble.c:2817:13
 1e1b986:    08 02             	[sp] = r0			  ## RF_ble.c:2817:11
 1e1b988:    00 f6 38 80       	r0 = [r8 + 56]			  ## RF_ble.c:2818:13
 1e1b98c:    18 02             	[sp+4] = r0			  ## RF_ble.c:2818:11
 1e1b98e:    00 f9 0e 80       	r0 = b[r8 + 14] (u)			  ## RF_ble.c:2821:20
 1e1b992:    39 fd 01 09       	r9 = r0 & 4294967294			  ## RF_ble.c:2823:32
 1e1b996:    69 e0 27 10       	if (r9 != 6) goto 78 <ble_rx_irq_handler+0x9C : 1e1b9e8 >			  ## RF_ble.c:2823:32
 1e1b99a:    50 fc 67 00       	r0 = r5 + 103
 1e1b99e:    51 fc 66 00       	r1 = r5 + 102
 1e1b9a2:    82 5a             	r2 = h[r5 + 16] (u)			  ## RF_ble.c:2827:28
 1e1b9a4:    03 08             	r3 = r0			  ## RF_ble.c:2828:19
 1e1b9a6:    20 f3 01 20       	if ((r2 & 1) != 0) goto 2 <ble_rx_irq_handler+0x60 : 1e1b9ac >			  ## RF_ble.c:2828:19
 1e1b9aa:    13 08             	r3 = r1			  ## RF_ble.c:2828:19
 1e1b9ac:    03 66             	r3 = b[r3 + 0] (u)
 1e1b9ae:    14 08             	r4 = r1			  ## RF_ble.c:2830:19
 1e1b9b0:    20 f3 01 20       	if ((r2 & 1) != 0) goto 2 <ble_rx_irq_handler+0x6A : 1e1b9b6 >			  ## RF_ble.c:2830:19
 1e1b9b4:    04 08             	r4 = r0			  ## RF_ble.c:2830:19
 1e1b9b6:    04 68             	r4 = b[r4 + 0] (u)
 1e1b9b8:    87 5a             	r7 = h[r5 + 16] (u)			  ## RF_ble.c:2832:32
 1e1b9ba:    26 fd 01 29       	r6 = r2 & 1			  ## RF_ble.c:2827:34
 1e1b9be:    22 fd 01 79       	r2 = r7 & 1			  ## RF_ble.c:2832:38
 1e1b9c2:    62 f2 ee 1f       	if (r2 != r6) goto -36 <ble_rx_irq_handler+0x56 : 1e1b9a2 >			  ## RF_ble.c:2832:38
 1e1b9c6:    22 fd 01 39       	r2 = r3 & 1			  ## RF_ble.c:2829:17
 1e1b9ca:    50 08             	r0 = r5			  ## RF_ble.c:2835:15
 1e1b9cc:    61 08             	r1 = r6			  ## RF_ble.c:2835:15
 1e1b9ce:    1d 16             	call -966 <__ble_rx_buf_process_conn : 1e1b60a >			  ## RF_ble.c:2835:15
 1e1b9d0:    01 f7 02 80       	r1 = h[r8 + 2] (u)			  ## RF_ble.c:2836:22
 1e1b9d4:    11 b0             	r1 |= 1			  ## RF_ble.c:2836:22
 1e1b9d6:    11 f7 02 80       	h[r8 + 2] = r1			  ## RF_ble.c:2836:22
 1e1b9da:    11 70             	r1 = 1			  ## RF_ble.c:2836:22
 1e1b9dc:    10 e0 01 00       	if (r0 == 1) goto 2 <ble_rx_irq_handler+0x96 : 1e1b9e2 >			  ## RF_ble.c:2836:22
 1e1b9e0:    01 70             	r1 = 0			  ## RF_ble.c:2839:5
 1e1b9e2:    28 fd 01 49       	r8 = r4 & 1			  ## RF_ble.c:2831:17
 1e1b9e6:    1a 18             	goto 52 <ble_rx_irq_handler+0xD0 : 1e1ba1c >			  ## RF_ble.c:2831:17
 1e1b9e8:    84 5a             	r4 = h[r5 + 16] (u)			  ## RF_ble.c:2840:25
 1e1b9ea:    20 fd 01 49       	r0 = r4 & 1			  ## RF_ble.c:2840:31
 1e1b9ee:    16 fd 01 09       	r6 = r0 ^ 1			  ## RF_ble.c:2840:15
 1e1b9f2:    b0 c0             	r0 = r6 << 2			  ## RF_ble.c:2278:5
 1e1b9f4:    07 ba             	r7 = r5 + r0			  ## RF_ble.c:2278:5
 1e1b9f6:    f0 7f             	r0 = 255			  ## RF_ble.c:2278:19
 1e1b9f8:    bf f3 a3 ef       	call -8378 <hw_alloc_rx : 1e19942 >			  ## RF_ble.c:2278:19
 1e1b9fc:    e1 9b             	r1 = r5 + 30			  ## RF_ble.c:2277:63
 1e1b9fe:    53 fc 20 00       	r3 = r5 + 32			  ## RF_ble.c:2277:38
 1e1ba02:    10 f6 78 71       	[r7 + 376] = r0			  ## RF_ble.c:2278:17
 1e1ba06:    00 f3 01 40       	if ((r4 & 1) == 0) goto 2 <ble_rx_irq_handler+0xC0 : 1e1ba0c >			  ## RF_ble.c:2278:17
 1e1ba0a:    13 08             	r3 = r1			  ## RF_ble.c:2277:14
 1e1ba0c:    04 20             	if (r0 == 0) goto 8 <ble_rx_irq_handler+0xCA : 1e1ba16 >
 1e1ba0e:    40 81             	r0 += 20			  ## RF_ble.c:2286:25
 1e1ba10:    bf f3 a5 ef       	call -8374 <PHY_TO_BLE : 1e1995e >			  ## RF_ble.c:2286:14
 1e1ba14:    01 18             	goto 2 <ble_rx_irq_handler+0xCC : 1e1ba18 >			  ## RF_ble.c:2286:14
 1e1ba16:    00 70             	r0 = 0
 1e1ba18:    08 56             	h[r3 + 0] = r0			  ## RF_ble.c:2282:16
 1e1ba1a:    11 70             	r1 = 1
 1e1ba1c:    00 a0             	r0 = sp + 0
 1e1ba1e:    06 22             	if (r1 == 0) goto 12 <ble_rx_irq_handler+0xE0 : 1e1ba2c >
 1e1ba20:    a1 f6 00 06       	r1 = [r0+r6<<2]			  ## RF_ble.c:2844:11
 1e1ba24:    03 22             	if (r1 == 0) goto 6 <ble_rx_irq_handler+0xE0 : 1e1ba2c >
 1e1ba26:    a0 08             	r0 = r10			  ## RF_ble.c:2846:9
 1e1ba28:    62 08             	r2 = r6			  ## RF_ble.c:2846:9
 1e1ba2a:    14 16             	call -984 <__hw_rx_buf_process : 1e1b654 >			  ## RF_ble.c:2846:9
 1e1ba2c:    69 e0 12 10       	if (r9 != 6) goto 36 <ble_rx_irq_handler+0x108 : 1e1ba54 >
 1e1ba30:    11 70             	r1 = 1			  ## RF_ble.c:2851:18
 1e1ba32:    01 2c             	if (r6 == 0) goto 2 <ble_rx_irq_handler+0xEA : 1e1ba36 >			  ## RF_ble.c:2851:18
 1e1ba34:    01 70             	r1 = 0
 1e1ba36:    00 a0             	r0 = sp + 0
 1e1ba38:    a7 f6 00 01       	r7 = [r0+r1<<2]			  ## RF_ble.c:2851:15
 1e1ba3c:    50 08             	r0 = r5			  ## RF_ble.c:2852:15
 1e1ba3e:    82 08             	r2 = r8			  ## RF_ble.c:2852:15
 1e1ba40:    e4 15             	call -1080 <__ble_rx_buf_process_conn : 1e1b60a >			  ## RF_ble.c:2852:15
 1e1ba42:    08 2e             	if (r7 == 0) goto 16 <ble_rx_irq_handler+0x108 : 1e1ba54 >			  ## RF_ble.c:2852:15
 1e1ba44:    10 e0 06 10       	if (r0 != 1) goto 12 <ble_rx_irq_handler+0x108 : 1e1ba54 >
 1e1ba48:    12 70             	r2 = 1			  ## RF_ble.c:2851:18
 1e1ba4a:    01 2c             	if (r6 == 0) goto 2 <ble_rx_irq_handler+0x102 : 1e1ba4e >			  ## RF_ble.c:2851:18
 1e1ba4c:    02 70             	r2 = 0
 1e1ba4e:    a0 08             	r0 = r10			  ## RF_ble.c:2854:13
 1e1ba50:    71 08             	r1 = r7			  ## RF_ble.c:2854:13
 1e1ba52:    00 16             	call -1024 <__hw_rx_buf_process : 1e1b654 >			  ## RF_ble.c:2854:13
 1e1ba54:    a0 08             	r0 = r10			  ## RF_ble.c:2859:5
 1e1ba56:    bf f3 f7 f0       	call -7698 <__hw_tx_process : 1e19c48 >			  ## RF_ble.c:2859:5
 1e1ba5a:    04 0a             	sp += 8
 1e1ba5c:    70 f3 ff 07       	{r10-r0} = [sp++]			  ## RF_ble.c:3097:1
 1e1ba60:    a9 01             	{psr, rets, reti} = [sp++]			  ## RF_ble.c:3097:1
 1e1ba62:    22 00             	rti			  ## RF_ble.c:3097:1


__get_latency_valid:
 1e1ba64:    34 00             	[--sp] = rets			  ## le_low_power.c:230:0
 1e1ba66:    02 08             	r2 = r0			  ## le_low_power.c:230:0
 1e1ba68:    01 44             	r1 = [r2 + 0]			  ## le_low_power.c:231:31
 1e1ba6a:    03 f9 56 11       	r3 = b[r1 + 342] (u)			  ## le_low_power.c:233:14
 1e1ba6e:    00 70             	r0 = 0			  ## le_low_power.c:233:14
 1e1ba70:    10 26             	if (r3 == 0) goto 32 <__get_latency_valid+0x2E : 1e1ba92 >			  ## le_low_power.c:233:14
 1e1ba72:    01 f9 57 11       	r1 = b[r1 + 343] (u)			  ## le_low_power.c:237:14
 1e1ba76:    11 e0 0c 00       	if (r1 == 1) goto 24 <__get_latency_valid+0x2E : 1e1ba92 >
 1e1ba7a:    91 70             	r1 = 9			  ## le_low_power.c:72:18
 1e1ba7c:    20 08             	r0 = r2			  ## le_low_power.c:72:18
 1e1ba7e:    bf f3 c4 fa       	call -2680 <__get_ble_anchor_con : 1e1b00a >			  ## le_low_power.c:72:18
 1e1ba82:    01 08             	r1 = r0			  ## le_low_power.c:72:18
 1e1ba84:    c2 ff 80 ff 00 00 	r2 = 65408 <_IRQ_MEM_ADDR+0x80 : ff80 >			  ## le_low_power.c:241:31
 1e1ba8a:    10 70             	r0 = 1			  ## le_low_power.c:242:9
 1e1ba8c:    21 f1 01 00       	if ((r1 & r2) != 0) goto 2 <__get_latency_valid+0x2E : 1e1ba92 >			  ## le_low_power.c:242:9
 1e1ba90:    00 70             	r0 = 0			  ## le_low_power.c:242:9
 1e1ba92:    30 00             	pc = [sp++]			  ## le_low_power.c:246:1


__get_interval:
 1e1ba94:    75 01             	[--sp] = {rets, r5, r4}			  ## le_low_power.c:55:0
 1e1ba96:    04 08             	r4 = r0			  ## le_low_power.c:55:0
 1e1ba98:    11 70             	r1 = 1			  ## le_low_power.c:56:13
 1e1ba9a:    bf f3 b6 fa       	call -2708 <__get_ble_anchor_con : 1e1b00a >			  ## le_low_power.c:56:13
 1e1ba9e:    01 fb ff 7f       	r1 = 32767 <nvbss_size+0x14FF : 7fff >			  ## le_low_power.c:56:41
 1e1baa2:    e2 fd 10 50       	r5 = r0 & r1			  ## le_low_power.c:56:41
 1e1baa6:    f1 70             	r1 = 15			  ## le_low_power.c:56:54
 1e1baa8:    40 08             	r0 = r4			  ## le_low_power.c:56:54
 1e1baaa:    bf f3 ae fa       	call -2724 <__get_ble_anchor_con : 1e1b00a >			  ## le_low_power.c:56:54
 1e1baae:    00 c4             	r0 = r0 << 16			  ## le_low_power.c:56:91
 1e1bab0:    20 fd ff 0b       	r0 = r0 & 16711680			  ## le_low_power.c:56:91
 1e1bab4:    50 ba             	r0 |= r5			  ## le_low_power.c:56:51
 1e1bab6:    55 01             	{pc, r5, r4} = [sp++]			  ## le_low_power.c:56:5


__power_get_timeout.5276:
 1e1bab8:    7c 01             	[--sp] = {rets, r12-r4}			  ## le_low_power.c:254:0
 1e1baba:    05 08             	r5 = r0			  ## le_low_power.c:254:0
 1e1babc:    0b f6 00 50       	r11 = [r5 + 0]			  ## le_low_power.c:257:31
 1e1bac0:    ca ff 38 80 1c 00 	r10 = 1867832 <uECC_vli_cmp_unsafe+0xC103C : 1c8038 >
 1e1bac6:    cc ff ff ff 00 00 	r12 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >
 1e1bacc:    08 70             	r8 = 0
 1e1bace:    00 f6 00 a0       	r0 = [r10 + 0]			  ## le_low_power.c:262:9
 1e1bad2:    21 f3 59 00       	if ((r0 & 2) != 0) goto 178 <__power_get_timeout.5276+0xD0 : 1e1bb88 >			  ## le_low_power.c:262:9
 1e1bad6:    bf f3 ad f7       	call -4262 <check_event_pending : 1e1aa34 >			  ## le_low_power.c:262:32
 1e1bada:    56 30             	if (r0 != 0) goto 172 <__power_get_timeout.5276+0xD0 : 1e1bb88 >			  ## le_low_power.c:262:32
 1e1badc:    00 f9 5d b1       	r0 = b[r11 + 349] (u)			  ## le_low_power.c:269:14
 1e1bae0:    10 e0 0e 10       	if (r0 != 1) goto 28 <__power_get_timeout.5276+0x48 : 1e1bb00 >			  ## le_low_power.c:269:14
 1e1bae4:    31 70             	r1 = 3			  ## le_low_power.c:63:12
 1e1bae6:    50 08             	r0 = r5			  ## le_low_power.c:63:12
 1e1bae8:    bf f3 8f fa       	call -2786 <__get_ble_anchor_con : 1e1b00a >			  ## le_low_power.c:63:12
 1e1baec:    c0 09             	r0 += r12			  ## le_low_power.c:63:40
 1e1baee:    24 04             	r4 = r0.l (u)			  ## le_low_power.c:270:13
 1e1baf0:    51 70             	r1 = 5			  ## le_low_power.c:81:13
 1e1baf2:    50 08             	r0 = r5			  ## le_low_power.c:81:13
 1e1baf4:    bf f3 89 fa       	call -2798 <__get_ble_anchor_con : 1e1b00a >			  ## le_low_power.c:81:13
 1e1baf8:    20 04             	r0 = r0.l (u)			  ## le_low_power.c:270:44
 1e1bafa:    f0 8f             	r0 += -1			  ## le_low_power.c:270:68
 1e1bafc:    04 f2 44 00       	if (r4 == r0) goto 136 <__power_get_timeout.5276+0xD0 : 1e1bb88 >			  ## le_low_power.c:270:68
 1e1bb00:    50 08             	r0 = r5			  ## le_low_power.c:275:16
 1e1bb02:    bf f3 a1 fa       	call -2750 <__get_clkn : 1e1b048 >			  ## le_low_power.c:275:16
 1e1bb06:    06 08             	r6 = r0			  ## le_low_power.c:275:16
 1e1bb08:    50 08             	r0 = r5			  ## le_low_power.c:279:9
 1e1bb0a:    ac 17             	call -168 <__get_latency_valid : 1e1ba64 >			  ## le_low_power.c:279:9
 1e1bb0c:    67 08             	r7 = r6			  ## le_low_power.c:279:9
 1e1bb0e:    25 20             	if (r0 == 0) goto 74 <__power_get_timeout.5276+0xA2 : 1e1bb5a >			  ## le_low_power.c:279:9
 1e1bb10:    91 70             	r1 = 9			  ## le_low_power.c:72:18
 1e1bb12:    50 08             	r0 = r5			  ## le_low_power.c:72:18
 1e1bb14:    bf f3 79 fa       	call -2830 <__get_ble_anchor_con : 1e1b00a >			  ## le_low_power.c:72:18
 1e1bb18:    07 08             	r7 = r0			  ## le_low_power.c:72:18
 1e1bb1a:    50 08             	r0 = r5			  ## le_low_power.c:284:27
 1e1bb1c:    bb 17             	call -138 <__get_interval : 1e1ba94 >			  ## le_low_power.c:284:27
 1e1bb1e:    09 08             	r9 = r0			  ## le_low_power.c:284:27
 1e1bb20:    51 70             	r1 = 5			  ## le_low_power.c:81:13
 1e1bb22:    50 08             	r0 = r5			  ## le_low_power.c:81:13
 1e1bb24:    bf f3 71 fa       	call -2846 <__get_ble_anchor_con : 1e1b00a >			  ## le_low_power.c:81:13
 1e1bb28:    04 08             	r4 = r0			  ## le_low_power.c:81:13
 1e1bb2a:    31 70             	r1 = 3			  ## le_low_power.c:63:12
 1e1bb2c:    50 08             	r0 = r5			  ## le_low_power.c:63:12
 1e1bb2e:    bf f3 6c fa       	call -2856 <__get_ble_anchor_con : 1e1b00a >			  ## le_low_power.c:63:12
 1e1bb32:    02 f9 5d b1       	r2 = b[r11 + 349] (u)			  ## le_low_power.c:292:18
 1e1bb36:    89 fd 38 17       	r1 = uextra(r7, p:7, l:9)			  ## le_low_power.c:289:32
 1e1bb3a:    67 08             	r7 = r6			  ## le_low_power.c:289:30
 1e1bb3c:    80 fe 90 71       	r7 += r1 * r9			  ## le_low_power.c:289:30
 1e1bb40:    0c 24             	if (r2 == 0) goto 24 <__power_get_timeout.5276+0xA2 : 1e1bb5a >
 1e1bb42:    c0 09             	r0 += r12			  ## le_low_power.c:63:40
 1e1bb44:    20 b8             	r0 = r4 - r0			  ## le_low_power.c:293:50
 1e1bb46:    20 04             	r0 = r0.l (u)			  ## le_low_power.c:293:50
 1e1bb48:    20 e0 07 30       	if (r0 < 2) goto 14 <__power_get_timeout.5276+0xA2 : 1e1bb5a >			  ## le_low_power.c:293:50
 1e1bb4c:    11 80             	r1 += 1			  ## le_low_power.c:294:30
 1e1bb4e:    01 f2 04 30       	if (r1 < r0) goto 8 <__power_get_timeout.5276+0xA2 : 1e1bb5a >			  ## le_low_power.c:294:30
 1e1bb52:    e0 8f             	r0 += -2			  ## le_low_power.c:297:68
 1e1bb54:    67 08             	r7 = r6			  ## le_low_power.c:297:42
 1e1bb56:    80 fe 90 70       	r7 += r0 * r9			  ## le_low_power.c:297:42
 1e1bb5a:    50 08             	r0 = r5			  ## le_low_power.c:304:20
 1e1bb5c:    bf f3 74 fa       	call -2840 <__get_clkn : 1e1b048 >			  ## le_low_power.c:304:20
 1e1bb60:    02 3c             	if (r6 != 0) goto 4 <__power_get_timeout.5276+0xAE : 1e1bb66 >
 1e1bb62:    60 f2 b4 8f       	if (r0 > r6) goto -152 <__power_get_timeout.5276+0x16 : 1e1bace >
 1e1bb66:    50 e0 0f 30       	if (r0 < 5) goto 30 <__power_get_timeout.5276+0xD0 : 1e1bb88 >
 1e1bb6a:    00 f6 00 a0       	r0 = [r10 + 0]			  ## le_low_power.c:316:9
 1e1bb6e:    21 f3 0b 00       	if ((r0 & 2) != 0) goto 22 <__power_get_timeout.5276+0xD0 : 1e1bb88 >
 1e1bb72:    bf f3 5f f7       	call -4418 <check_event_pending : 1e1aa34 >			  ## le_low_power.c:316:32
 1e1bb76:    08 30             	if (r0 != 0) goto 16 <__power_get_timeout.5276+0xD0 : 1e1bb88 >			  ## le_low_power.c:316:32
 1e1bb78:    00 fb 71 02       	r0 = 625 <BTCTLER_CL_RAM_TOTAL+0x8D : 271 >			  ## le_low_power.c:323:46
 1e1bb7c:    38 0e             	r0 = r7 * r0			  ## le_low_power.c:323:46
 1e1bb7e:    00 fc 3c f6       	r0 = r0 + -2500			  ## le_low_power.c:323:46
 1e1bb82:    47 e0 01 30       	if (r7 < 4) goto 2 <__power_get_timeout.5276+0xD0 : 1e1bb88 >			  ## le_low_power.c:323:46
 1e1bb86:    08 08             	r8 = r0			  ## le_low_power.c:323:12
 1e1bb88:    80 08             	r0 = r8			  ## le_low_power.c:324:1
 1e1bb8a:    5c 01             	{pc, r12-r4} = [sp++]			  ## le_low_power.c:324:1


__power_suspend_probe.5277:
 1e1bb8c:    34 00             	[--sp] = rets			  ## le_low_power.c:366:0
 1e1bb8e:    c0 ff 38 80 1c 00 	r0 = 1867832 <uECC_vli_cmp_unsafe+0xC103C : 1c8038 >			  ## le_low_power.c:366:0
 1e1bb94:    01 40             	r1 = [r0 + 0]			  ## le_low_power.c:367:5
 1e1bb96:    71 b1             	r1 &= 4294967291			  ## le_low_power.c:367:5
 1e1bb98:    09 40             	[r0 + 0] = r1			  ## le_low_power.c:367:5
 1e1bb9a:    00 f4 20 09       	[r0 + 0] |= 32			  ## le_low_power.c:368:5
 1e1bb9e:    00 f4 01 09       	[r0 + 0] |= 1			  ## le_low_power.c:369:5
 1e1bba2:    01 40             	r1 = [r0 + 0]			  ## le_low_power.c:374:9
 1e1bba4:    08 f3 09 10       	if ((r1 & 256) == 0) goto 18 <__power_suspend_probe.5277+0x2E : 1e1bbba >			  ## le_low_power.c:374:9
 1e1bba8:    00 40             	r0 = [r0 + 0]
 1e1bbaa:    01 fb 00 fc       	r1 = -1024 <bank_code_load_addr+0x1DC608 : 1fffc00 >
 1e1bbae:    50 b3             	r0 &= r1
 1e1bbb0:    20 ff 18 0a 02 00 	if (r0 == 6144) goto 4 <__power_suspend_probe.5277+0x2E : 1e1bbba >
 1e1bbb6:    8f f3 13 3c       	call 1996838 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1bbba:    30 00             	pc = [sp++]			  ## le_low_power.c:377:1


__power_suspend_post.5278:
 1e1bbbc:    7a 01             	[--sp] = {rets, r10-r4}			  ## le_low_power.c:381:0
 1e1bbbe:    04 08             	r4 = r0			  ## le_low_power.c:381:0
 1e1bbc0:    0a f6 00 40       	r10 = [r4 + 0]			  ## le_low_power.c:384:31
 1e1bbc4:    c0 ff 38 80 1c 00 	r0 = 1867832 <uECC_vli_cmp_unsafe+0xC103C : 1c8038 >
 1e1bbca:    02 40             	r2 = [r0 + 0]			  ## le_low_power.c:387:12
 1e1bbcc:    03 f3 fd 2f       	if ((r2 & 8) == 0) goto -6 <__power_suspend_post.5278+0xE : 1e1bbca >			  ## le_low_power.c:387:5
 1e1bbd0:    00 fc 34 7c       	r0 = r0 + 31796
 1e1bbd4:    02 40             	r2 = [r0 + 0]			  ## le_low_power.c:389:12
 1e1bbd6:    2b f3 fd 2f       	if ((r2 & 2048) != 0) goto -6 <__power_suspend_post.5278+0x18 : 1e1bbd4 >			  ## le_low_power.c:389:5
 1e1bbda:    00 40             	r0 = [r0 + 0]			  ## le_low_power.c:391:24
 1e1bbdc:    02 fb ff 07       	r2 = 2047 <DRIVER_CODE_TOTAL+0x79 : 7ff >			  ## le_low_power.c:391:37
 1e1bbe0:    50 b5             	r0 &= r2			  ## le_low_power.c:391:37
 1e1bbe2:    c2 70             	r2 = 12			  ## le_low_power.c:391:46
 1e1bbe4:    c0 fe 20 00       	r0 = r0 / r2 (u)			  ## le_low_power.c:391:46
 1e1bbe8:    10 09             	r0 += r1			  ## le_low_power.c:391:21
 1e1bbea:    01 fb 71 02       	r1 = 625 <BTCTLER_CL_RAM_TOTAL+0x8D : 271 >			  ## le_low_power.c:392:25
 1e1bbee:    c0 fe 10 00       	r0 = r0 / r1 (u)			  ## le_low_power.c:392:25
 1e1bbf2:    19 90             	r9 = r0 + 1			  ## le_low_power.c:392:40
 1e1bbf4:    40 08             	r0 = r4			  ## le_low_power.c:396:16
 1e1bbf6:    bf f3 27 fa       	call -2994 <__get_clkn : 1e1b048 >			  ## le_low_power.c:396:16
 1e1bbfa:    05 08             	r5 = r0			  ## le_low_power.c:396:16
 1e1bbfc:    40 08             	r0 = r4			  ## le_low_power.c:400:9
 1e1bbfe:    32 17             	call -412 <__get_latency_valid : 1e1ba64 >			  ## le_low_power.c:400:9
 1e1bc00:    27 20             	if (r0 == 0) goto 78 <__power_suspend_post.5278+0x94 : 1e1bc50 >			  ## le_low_power.c:400:9
 1e1bc02:    91 70             	r1 = 9			  ## le_low_power.c:72:18
 1e1bc04:    40 08             	r0 = r4			  ## le_low_power.c:72:18
 1e1bc06:    bf f3 00 fa       	call -3072 <__get_ble_anchor_con : 1e1b00a >			  ## le_low_power.c:72:18
 1e1bc0a:    06 08             	r6 = r0			  ## le_low_power.c:72:18
 1e1bc0c:    40 08             	r0 = r4			  ## le_low_power.c:402:27
 1e1bc0e:    42 17             	call -380 <__get_interval : 1e1ba94 >			  ## le_low_power.c:402:27
 1e1bc10:    08 08             	r8 = r0			  ## le_low_power.c:402:27
 1e1bc12:    51 70             	r1 = 5			  ## le_low_power.c:81:13
 1e1bc14:    40 08             	r0 = r4			  ## le_low_power.c:81:13
 1e1bc16:    bf f3 f8 f9       	call -3088 <__get_ble_anchor_con : 1e1b00a >			  ## le_low_power.c:81:13
 1e1bc1a:    07 08             	r7 = r0			  ## le_low_power.c:81:13
 1e1bc1c:    31 70             	r1 = 3			  ## le_low_power.c:63:12
 1e1bc1e:    40 08             	r0 = r4			  ## le_low_power.c:63:12
 1e1bc20:    bf f3 f3 f9       	call -3098 <__get_ble_anchor_con : 1e1b00a >			  ## le_low_power.c:63:12
 1e1bc24:    03 f9 5d a1       	r3 = b[r10 + 349] (u)			  ## le_low_power.c:410:18
 1e1bc28:    89 fd 38 26       	r2 = uextra(r6, p:7, l:9)			  ## le_low_power.c:407:32
 1e1bc2c:    51 08             	r1 = r5			  ## le_low_power.c:407:30
 1e1bc2e:    80 fe 80 12       	r1 += r2 * r8			  ## le_low_power.c:407:30
 1e1bc32:    0f 26             	if (r3 == 0) goto 30 <__power_suspend_post.5278+0x96 : 1e1bc52 >
 1e1bc34:    c3 ff ff ff 00 00 	r3 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >
 1e1bc3a:    30 09             	r0 += r3			  ## le_low_power.c:63:40
 1e1bc3c:    20 be             	r0 = r7 - r0			  ## le_low_power.c:411:50
 1e1bc3e:    20 04             	r0 = r0.l (u)			  ## le_low_power.c:411:50
 1e1bc40:    20 e0 07 30       	if (r0 < 2) goto 14 <__power_suspend_post.5278+0x96 : 1e1bc52 >			  ## le_low_power.c:411:50
 1e1bc44:    12 80             	r2 += 1			  ## le_low_power.c:412:30
 1e1bc46:    02 f2 04 30       	if (r2 < r0) goto 8 <__power_suspend_post.5278+0x96 : 1e1bc52 >			  ## le_low_power.c:412:30
 1e1bc4a:    e0 8f             	r0 += -2			  ## le_low_power.c:415:68
 1e1bc4c:    80 fe 80 50       	r5 += r0 * r8			  ## le_low_power.c:415:42
 1e1bc50:    51 08             	r1 = r5
 1e1bc52:    91 f2 02 80       	if (r1 > r9) goto 4 <__power_suspend_post.5278+0x9E : 1e1bc5a >
 1e1bc56:    8f f3 c3 3b       	call 1996678 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1bc5a:    5a 01             	{pc, r10-r4} = [sp++]			  ## le_low_power.c:428:1


__set_ble_anchor_con:
 1e1bc5c:    76 01             	[--sp] = {rets, r6-r4}			  ## RF_ble.c:303:0
 1e1bc5e:    24 08             	r4 = r2			  ## RF_ble.c:303:0
 1e1bc60:    15 08             	r5 = r1			  ## RF_ble.c:303:0
 1e1bc62:    06 08             	r6 = r0			  ## RF_ble.c:303:0
 1e1bc64:    97 f3 9a 58       	call 3060020 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e1bc68:    08 00             	csync			  ## RF_ble.c:304:5
 1e1bc6a:    c0 ff 1c 80 1c 00 	r0 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >			  ## RF_ble.c:304:5
 1e1bc70:    1c 40             	[r0 + 4] = r4			  ## RF_ble.c:306:21
 1e1bc72:    08 00             	csync			  ## RF_ble.c:307:5
 1e1bc74:    c1 ff 84 2d 00 00 	r1 = 11652 <bb_hdl : 2d84 >			  ## RF_ble.c:147:19
 1e1bc7a:    01 42             	r1 = [r1 + 0]			  ## RF_ble.c:147:19
 1e1bc7c:    41 42             	r1 = [r1 + 16]			  ## RF_ble.c:147:35
 1e1bc7e:    61 bc             	r1 = r6 - r1			  ## RF_ble.c:147:17
 1e1bc80:    c2 71             	r2 = 28			  ## RF_ble.c:147:17
 1e1bc82:    e0 fe 20 11       	r1 = r1 / r2 (s)			  ## RF_ble.c:147:17
 1e1bc86:    09 c1             	r1 = r1 << 4			  ## RF_ble.c:308:50
 1e1bc88:    21 fd 7f 10       	r1 = r1 & 4080			  ## RF_ble.c:308:50
 1e1bc8c:    aa c2             	r2 = r5 << 10			  ## RF_ble.c:308:30
 1e1bc8e:    51 b4             	r1 |= r2			  ## RF_ble.c:308:67
 1e1bc90:    01 fd 05 19       	r1 = r1 | 5			  ## RF_ble.c:308:67
 1e1bc94:    09 40             	[r0 + 0] = r1			  ## RF_ble.c:308:21
 1e1bc96:    16 01             	{rets, r6-r4} = [sp++]			  ## RF_ble.c:310:5
 1e1bc98:    d7 f3 7e 58       	goto 3059964 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5


__power_resume.5279:
 1e1bc9c:    7a 01             	[--sp] = {rets, r10-r4}			  ## le_low_power.c:439:0
 1e1bc9e:    04 08             	r4 = r0			  ## le_low_power.c:439:0
 1e1bca0:    07 48             	r7 = [r4 + 0]			  ## le_low_power.c:442:31
 1e1bca2:    10 08             	r0 = r1			  ## le_low_power.c:446:16
 1e1bca4:    bf f3 0e e9       	call -11748 <bt_get_fine_cnt : 1e18ec4 >			  ## le_low_power.c:446:16
 1e1bca8:    c1 ff 74 0f 00 00 	r1 = 3956 <ble_finetimecnt_poweroff_sfr : f74 >			  ## le_low_power.c:434:12
 1e1bcae:    01 42             	r1 = [r1 + 0]			  ## le_low_power.c:434:12
 1e1bcb0:    09 b2             	r9 = r1 + r0			  ## le_low_power.c:448:14
 1e1bcb2:    40 08             	r0 = r4			  ## le_low_power.c:450:16
 1e1bcb4:    bf f3 c8 f9       	call -3184 <__get_clkn : 1e1b048 >			  ## le_low_power.c:450:16
 1e1bcb8:    05 08             	r5 = r0			  ## le_low_power.c:450:16
 1e1bcba:    02 3a             	if (r5 != 0) goto 4 <__power_resume.5279+0x24 : 1e1bcc0 >
 1e1bcbc:    8f f3 90 3b       	call 1996576 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1bcc0:    00 fb 71 02       	r0 = 625 <BTCTLER_CL_RAM_TOTAL+0x8D : 271 >
 1e1bcc4:    c0 fe 00 69       	r6 = r9 / r0 (u)
 1e1bcc8:    40 08             	r0 = r4			  ## le_low_power.c:454:23
 1e1bcca:    e4 16             	call -568 <__get_interval : 1e1ba94 >			  ## le_low_power.c:454:23
 1e1bccc:    01 f9 52 71       	r1 = b[r7 + 338] (u)			  ## le_low_power.c:474:31
 1e1bcd0:    71 e0 02 10       	if (r1 != 7) goto 4 <__power_resume.5279+0x3C : 1e1bcd8 >
 1e1bcd4:    d0 fe 00 66       	r6 = r6 % r0 (u)			  ## le_low_power.c:475:47
 1e1bcd8:    12 9c             	r2 = r6 + 1
 1e1bcda:    25 f2 01 30       	if (r5 < r2) goto 2 <__power_resume.5279+0x44 : 1e1bce0 >
 1e1bcde:    00 70             	r0 = 0
 1e1bce0:    27 b4             	r7 = r2 - r0			  ## le_low_power.c:479:9
 1e1bce2:    c8 ff 38 80 1c 00 	r8 = 1867832 <uECC_vli_cmp_unsafe+0xC103C : 1c8038 >
 1e1bce8:    17 f6 08 80       	[r8 + 8] = r7			  ## le_low_power.c:483:22
 1e1bcec:    38 dc             	r0 = r7 >>> 16			  ## le_low_power.c:484:34
 1e1bcee:    10 f6 0c 80       	[r8 + 12] = r0			  ## le_low_power.c:484:22
 1e1bcf2:    06 fb 71 02       	r6 = 625 <BTCTLER_CL_RAM_TOTAL+0x8D : 271 >			  ## le_low_power.c:485:32
 1e1bcf6:    d0 fe 60 09       	r0 = r9 % r6 (u)			  ## le_low_power.c:485:32
 1e1bcfa:    71 b0             	r1 &= 4294967294			  ## le_low_power.c:487:39
 1e1bcfc:    10 f6 04 80       	[r8 + 4] = r0			  ## le_low_power.c:485:21
 1e1bd00:    61 e0 7b 10       	if (r1 != 6) goto 246 <__power_resume.5279+0x15E : 1e1bdfa >			  ## le_low_power.c:485:21
 1e1bd04:    40 08             	r0 = r4			  ## le_low_power.c:130:23
 1e1bd06:    c6 16             	call -628 <__get_interval : 1e1ba94 >			  ## le_low_power.c:130:23
 1e1bd08:    01 f6 10 80       	r1 = [r8 + 16]			  ## le_low_power.c:131:55
 1e1bd0c:    61 bc             	r1 = r6 - r1			  ## le_low_power.c:131:53
 1e1bd0e:    62 05             	r2 = r5.l (u)			  ## le_low_power.c:131:13
 1e1bd10:    80 fe 60 12       	r1 += r2 * r6			  ## le_low_power.c:131:37
 1e1bd14:    e2 bb             	r2 = r5 - r7			  ## le_low_power.c:133:25
 1e1bd16:    a2 04             	r2 = r2.l (u)			  ## le_low_power.c:133:10
 1e1bd18:    03 fc ff ff       	r3 = r0 + -1			  ## le_low_power.c:133:54
 1e1bd1c:    05 70             	r5 = 0			  ## le_low_power.c:133:54
 1e1bd1e:    32 f2 0a 10       	if (r2 != r3) goto 20 <__power_resume.5279+0x9A : 1e1bd36 >
 1e1bd22:    02 f6 10 80       	r2 = [r8 + 16]			  ## le_low_power.c:133:80
 1e1bd26:    03 f6 04 80       	r3 = [r8 + 4]			  ## le_low_power.c:133:98
 1e1bd2a:    32 09             	r2 += r3			  ## le_low_power.c:133:96
 1e1bd2c:    15 70             	r5 = 1			  ## le_low_power.c:133:77
 1e1bd2e:    03 ff 71 22 01 00 	if (r2 < 625) goto 2 <__power_resume.5279+0x9A : 1e1bd36 >
 1e1bd34:    05 70             	r5 = 0			  ## le_low_power.c:133:77
 1e1bd36:    19 f2 09 30       	if (r9 < r1) goto 18 <__power_resume.5279+0xB0 : 1e1bd4c >
 1e1bd3a:    90 fb 10 19       	r1 = r9 - r1			  ## le_low_power.c:144:25
 1e1bd3e:    62 08             	r2 = r6			  ## le_low_power.c:145:57
 1e1bd40:    c0 fe 20 11       	r1 = r1 / r2 (u)			  ## le_low_power.c:145:57
 1e1bd44:    c0 fe 00 01       	r0 = r1 / r0 (u)			  ## le_low_power.c:145:73
 1e1bd48:    50 09             	r0 += r5			  ## le_low_power.c:145:73
 1e1bd4a:    15 90             	r5 = r0 + 1			  ## le_low_power.c:145:87
 1e1bd4c:    40 08             	r0 = r4			  ## le_low_power.c:496:13
 1e1bd4e:    8a 16             	call -748 <__get_latency_valid : 1e1ba64 >			  ## le_low_power.c:496:13
 1e1bd50:    18 20             	if (r0 == 0) goto 48 <__power_resume.5279+0xE6 : 1e1bd82 >			  ## le_low_power.c:496:13
 1e1bd52:    61 70             	r1 = 6			  ## le_low_power.c:157:18
 1e1bd54:    40 08             	r0 = r4			  ## le_low_power.c:157:18
 1e1bd56:    bf f3 58 f9       	call -3408 <__get_ble_anchor_con : 1e1b00a >			  ## le_low_power.c:157:18
 1e1bd5a:    85 fd 40 10       	r1 = uextra(r0, p:8, l:5)			  ## le_low_power.c:162:87
 1e1bd5e:    22 fd 3f 09       	r2 = r0 & 63			  ## le_low_power.c:162:40
 1e1bd62:    6a 05             	r10 = r5.l (u)			  ## le_low_power.c:162:57
 1e1bd64:    80 fe a0 21       	r2 += r1 * r10			  ## le_low_power.c:162:54
 1e1bd68:    51 72             	r1 = 37			  ## le_low_power.c:162:97
 1e1bd6a:    d0 fe 10 12       	r1 = r2 % r1 (u)			  ## le_low_power.c:162:97
 1e1bd6e:    c2 ff c0 ff 00 00 	r2 = 65472 <_IRQ_MEM_ADDR+0xC0 : ffc0 >			  ## le_low_power.c:162:28
 1e1bd74:    50 b5             	r0 &= r2			  ## le_low_power.c:162:28
 1e1bd76:    e0 fd 00 21       	r2 = r1 | r0			  ## le_low_power.c:162:28
 1e1bd7a:    61 70             	r1 = 6			  ## le_low_power.c:164:5
 1e1bd7c:    40 08             	r0 = r4			  ## le_low_power.c:164:5
 1e1bd7e:    6e 17             	call -292 <__set_ble_anchor_con : 1e1bc5c >			  ## le_low_power.c:164:5
 1e1bd80:    01 18             	goto 2 <__power_resume.5279+0xE8 : 1e1bd84 >			  ## le_low_power.c:164:5
 1e1bd82:    6a 05             	r10 = r5.l (u)			  ## le_low_power.c:178:33
 1e1bd84:    09 f6 00 40       	r9 = [r4 + 0]			  ## le_low_power.c:171:31
 1e1bd88:    91 70             	r1 = 9			  ## le_low_power.c:177:18
 1e1bd8a:    40 08             	r0 = r4			  ## le_low_power.c:177:18
 1e1bd8c:    bf f3 3d f9       	call -3462 <__get_ble_anchor_con : 1e1b00a >			  ## le_low_power.c:177:18
 1e1bd90:    05 08             	r5 = r0			  ## le_low_power.c:177:18
 1e1bd92:    89 fd 38 05       	r0 = uextra(r5, p:7, l:9)			  ## le_low_power.c:178:9
 1e1bd96:    a0 f2 03 20       	if (r0 >= r10) goto 6 <__power_resume.5279+0x104 : 1e1bda0 >			  ## le_low_power.c:178:9
 1e1bd9a:    01 f7 58 91       	r1 = h[r9 + 344] (u)			  ## le_low_power.c:181:32
 1e1bd9e:    10 09             	r0 += r1			  ## le_low_power.c:181:45
 1e1bda0:    90 fb a0 70       	r7 = r0 - r10
 1e1bda4:    21 70             	r1 = 2			  ## le_low_power.c:185:18
 1e1bda6:    40 08             	r0 = r4			  ## le_low_power.c:185:18
 1e1bda8:    bf f3 2f f9       	call -3490 <__get_ble_anchor_con : 1e1b00a >			  ## le_low_power.c:185:18
 1e1bdac:    06 08             	r6 = r0			  ## le_low_power.c:185:18
 1e1bdae:    00 fb ff 01       	r0 = 511 <BTCTLER_CL_RAM_TOTAL+0x1B : 1ff >			  ## le_low_power.c:187:31
 1e1bdb2:    50 bf             	r0 &= r7			  ## le_low_power.c:187:31
 1e1bdb4:    21 fd fe 6a       	r1 = r6 & 65024			  ## le_low_power.c:187:31
 1e1bdb8:    e0 fd 00 21       	r2 = r1 | r0			  ## le_low_power.c:187:31
 1e1bdbc:    21 70             	r1 = 2			  ## le_low_power.c:189:5
 1e1bdbe:    40 08             	r0 = r4			  ## le_low_power.c:189:5
 1e1bdc0:    4d 17             	call -358 <__set_ble_anchor_con : 1e1bc5c >			  ## le_low_power.c:189:5
 1e1bdc2:    f8 c1             	r0 = r7 << 7			  ## le_low_power.c:189:5
 1e1bdc4:    20 04             	r0 = r0.l (u)			  ## le_low_power.c:197:33
 1e1bdc6:    21 fd 3f 59       	r1 = r5 & 63			  ## le_low_power.c:197:33
 1e1bdca:    50 b2             	r0 |= r1			  ## le_low_power.c:197:33
 1e1bdcc:    02 fd 40 09       	r2 = r0 | 64			  ## le_low_power.c:197:33
 1e1bdd0:    91 70             	r1 = 9			  ## le_low_power.c:197:5
 1e1bdd2:    40 08             	r0 = r4			  ## le_low_power.c:197:5
 1e1bdd4:    43 17             	call -378 <__set_ble_anchor_con : 1e1bc5c >			  ## le_low_power.c:197:5
 1e1bdd6:    00 f7 58 91       	r0 = h[r9 + 344] (u)			  ## le_low_power.c:202:38
 1e1bdda:    c9 fd 00 60       	r6 <= insert(r0, p:0, l:9)			  ## le_low_power.c:202:31
 1e1bdde:    a2 05             	r2 = r6.l (u)			  ## le_low_power.c:206:33
 1e1bde0:    21 70             	r1 = 2			  ## le_low_power.c:206:5
 1e1bde2:    40 08             	r0 = r4			  ## le_low_power.c:206:5
 1e1bde4:    3b 17             	call -394 <__set_ble_anchor_con : 1e1bc5c >			  ## le_low_power.c:206:5
 1e1bde6:    31 70             	r1 = 3			  ## le_low_power.c:221:24
 1e1bde8:    40 08             	r0 = r4			  ## le_low_power.c:221:24
 1e1bdea:    bf f3 0e f9       	call -3556 <__get_ble_anchor_con : 1e1b00a >			  ## le_low_power.c:221:24
 1e1bdee:    20 04             	r0 = r0.l (u)			  ## le_low_power.c:226:33
 1e1bdf0:    80 fb a0 20       	r2 = r0 + r10			  ## le_low_power.c:226:50
 1e1bdf4:    31 70             	r1 = 3			  ## le_low_power.c:226:5
 1e1bdf6:    40 08             	r0 = r4			  ## le_low_power.c:226:5
 1e1bdf8:    31 17             	call -414 <__set_ble_anchor_con : 1e1bc5c >			  ## le_low_power.c:226:5
 1e1bdfa:    00 f4 04 89       	[r8 + 0] |= 4			  ## le_low_power.c:507:5
 1e1bdfe:    5a 01             	{pc, r10-r4} = [sp++]			  ## le_low_power.c:508:1


__power_resume_post.5280:
 1e1be00:    74 01             	[--sp] = {rets, r4}			  ## le_low_power.c:511:0
 1e1be02:    c4 ff 38 80 1c 00 	r4 = 1867832 <uECC_vli_cmp_unsafe+0xC103C : 1c8038 >			  ## le_low_power.c:511:0
 1e1be08:    01 48             	r1 = [r4 + 0]			  ## le_low_power.c:519:12
 1e1be0a:    23 f3 fd 1f       	if ((r1 & 8) != 0) goto -6 <__power_resume_post.5280+0x8 : 1e1be08 >			  ## le_low_power.c:519:5
 1e1be0e:    bf f3 1b f9       	call -3530 <__get_clkn : 1e1b048 >			  ## le_low_power.c:521:16
 1e1be12:    00 48             	r0 = [r4 + 0]			  ## le_low_power.c:524:9
 1e1be14:    10 04             	r0 = r0.b0 (s)			  ## le_low_power.c:524:9
 1e1be16:    f0 ef 04 c0       	ifs (r0 > -1) goto 8 <__power_resume_post.5280+0x22 : 1e1be22 >			  ## le_low_power.c:524:9
 1e1be1a:    40 fc 38 7c       	r0 = r4 + 31800			  ## le_low_power.c:525:19
 1e1be1e:    00 f4 02 09       	[r0 + 0] |= 2			  ## le_low_power.c:525:19
 1e1be22:    54 01             	{pc, r4} = [sp++]			  ## le_low_power.c:529:1


master_sca:
 1e1be24:    f4 01             	[--sp] = {psr, sr4, retx}
 1e1be26:    fa 00             	flushinv [r10]
 1e1be28:    96 00             	goto r6
 1e1be2a:    64 00             	cli r4
 1e1be2c:    4b 00             	testset b[r11]
 1e1be2e:    32 00             	pc = [sp++]
 1e1be30:    1e 00             	sti
 1e1be32:    14 00             	lockset


conn_handler:
 1e1be34:    2c d0             	r4 = r5 >> 32
 1e1be36:    e1 01             	[--sp] = {psr, reti}
 1e1be38:    00 00             	nop
 1e1be3a:    00 00             	nop
 1e1be3c:    ec d0             	r4 = r5 >> 3
 1e1be3e:    e1 01             	[--sp] = {psr, reti}
 1e1be40:    2e d1             	r6 = r5 >> 4
 1e1be42:    e1 01             	[--sp] = {psr, reti}
 1e1be44:    00 00             	nop
 1e1be46:    00 00             	nop
 1e1be48:    d2 d1             	r2 = r2 >> 7
 1e1be4a:    e1 01             	[--sp] = {psr, reti}


master_features_exchange_steps:
 1e1be4c:    08 00             	csync
 1e1be4e:    09 40             	[r0 + 0] = r1
 1e1be50:    ff 06             	r15 = -17


disconnect_steps:
 1e1be52:    02 00             	idle
 1e1be54:    00 80             	r0 += 0
 1e1be56:    ff 0e             	r7 = r7 * r3


master_connection_update_steps:
 1e1be58:    00 00             	nop
 1e1be5a:    00 80             	r0 += 0
 1e1be5c:    ff 02             	[sp+60] = r7


version_ind_steps:
 1e1be5e:    0c 00             	syscall
 1e1be60:    0c 40             	[r0 + 0] = r4
 1e1be62:    ff 08             	r15 = r15


restart_encryption_steps:
 1e1be64:    0a 00             	ssync
 1e1be66:    0b 40             	[r0 + 0] = r3
 1e1be68:    0b 00             	ssync
 1e1be6a:    00 80             	r0 += 0
 1e1be6c:    03 00             	idle
 1e1be6e:    04 40             	r4 = [r0 + 0]
 1e1be70:    05 40             	r5 = [r0 + 0]
 1e1be72:    06 00             	hbkpt
 1e1be74:    06 40             	r6 = [r0 + 0]
 1e1be76:    ff 0a             	sp += 508


start_encryption_steps:
 1e1be78:    03 00             	idle
 1e1be7a:    04 40             	r4 = [r0 + 0]
 1e1be7c:    05 40             	r5 = [r0 + 0]
 1e1be7e:    06 00             	hbkpt
 1e1be80:    06 40             	r6 = [r0 + 0]
 1e1be82:    ff 09             	r15 += r15


restart_encryption_req_steps:
 1e1be84:    05 00             	bkpt
 1e1be86:    06 40             	r6 = [r0 + 0]
 1e1be88:    06 00             	hbkpt
 1e1be8a:    ff 0c             	r15 >>>= r3


start_encryption_req_steps:
 1e1be8c:    05 00             	bkpt
 1e1be8e:    06 40             	r6 = [r0 + 0]
 1e1be90:    06 00             	hbkpt
 1e1be92:    ff 0b             	sp += -4


adv_handler:
 1e1be94:    ca dc             	r2 = r1 >>> 19
 1e1be96:    e1 01             	[--sp] = {psr, reti}
 1e1be98:    00 00             	nop
 1e1be9a:    00 00             	nop
 1e1be9c:    00 00             	nop
 1e1be9e:    00 00             	nop
 1e1bea0:    00 00             	nop
 1e1bea2:    00 00             	nop
 1e1bea4:    00 00             	nop
 1e1bea6:    00 00             	nop
 1e1bea8:    00 00             	nop
 1e1beaa:    00 00             	nop


ll_link_for_handle:
 1e1beac:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:800:0
 1e1beae:    c3 ff 00 2b 00 00 	r3 = 11008 <ll_hdl : 2b00 >			  ## link_layer.c:800:0
 1e1beb4:    02 f9 22 30       	r2 = b[r3 + 34] (u)			  ## link_layer.c:801:17
 1e1beb8:    01 08             	r1 = r0			  ## link_layer.c:801:17
 1e1beba:    00 70             	r0 = 0
 1e1bebc:    0e 24             	if (r2 == 0) goto 28 <ll_link_for_handle+0x2E : 1e1beda >
 1e1bebe:    92 46             	r2 = [r3 + 36]
 1e1bec0:    43 82             	r3 += 36
 1e1bec2:    32 f2 0a 00       	if (r2 == r3) goto 20 <ll_link_for_handle+0x2E : 1e1beda >
 1e1bec6:    04 f7 c4 20       	r4 = h[r2 + 196] (u)			  ## link_layer.c:810:13
 1e1beca:    14 f2 04 00       	if (r4 == r1) goto 8 <ll_link_for_handle+0x2A : 1e1bed6 >			  ## link_layer.c:810:13
 1e1bece:    02 44             	r2 = [r2 + 0]
 1e1bed0:    32 f2 f9 1f       	if (r2 != r3) goto -14 <ll_link_for_handle+0x1A : 1e1bec6 >
 1e1bed4:    54 01             	{pc, r4} = [sp++]			  ## link_layer.c:816:1
 1e1bed6:    20 fc cc ff       	r0 = r2 + -52
 1e1beda:    54 01             	{pc, r4} = [sp++]			  ## link_layer.c:816:1


ll_adv_close:
 1e1bedc:    75 01             	[--sp] = {rets, r5, r4}			  ## ll_adv.c:846:0
 1e1bede:    c5 ff ac 0e 00 00 	r5 = 3756 <adv_hdl : eac >			  ## ll_adv.c:846:0
 1e1bee4:    00 4a             	r0 = [r5 + 0]			  ## ll_adv.c:852:9
 1e1bee6:    17 20             	if (r0 == 0) goto 46 <ll_adv_close+0x3A : 1e1bf16 >			  ## ll_adv.c:852:9
 1e1bee8:    14 40             	r4 = [r0 + 4]			  ## ll_adv.c:858:44
 1e1beea:    15 28             	if (r4 == 0) goto 42 <ll_adv_close+0x3A : 1e1bf16 >
 1e1beec:    00 48             	r0 = [r4 + 0]			  ## ll_adv.c:868:19
 1e1beee:    02 20             	if (r0 == 0) goto 4 <ll_adv_close+0x18 : 1e1bef4 >			  ## ll_adv.c:868:19
 1e1bef0:    bf f3 b4 eb       	call -10392 <le_hw_close : 1e1965c >			  ## ll_adv.c:869:9
 1e1bef4:    50 48             	r0 = [r4 + 20]			  ## ll_adv.c:92:19
 1e1bef6:    04 20             	if (r0 == 0) goto 8 <ll_adv_close+0x24 : 1e1bf00 >			  ## ll_adv.c:92:19
 1e1bef8:    bf f3 1f 2e       	call -107458 <sys_timer_remove : 1e01b3a >			  ## ll_adv.c:93:9
 1e1befc:    c5 f4 00 49       	[r4 + 20] = 0			  ## ll_adv.c:94:27
 1e1bf00:    40 08             	r0 = r4			  ## ll_adv.c:874:5
 1e1bf02:    bf f3 1d 2e       	call -107462 <__bt_free : 1e01b40 >			  ## ll_adv.c:874:5
 1e1bf06:    00 4a             	r0 = [r5 + 0]			  ## ll_adv.c:876:5
 1e1bf08:    04 70             	r4 = 0			  ## ll_adv.c:876:5
 1e1bf0a:    1c 40             	[r0 + 4] = r4			  ## ll_adv.c:876:22
 1e1bf0c:    0c 60             	b[r0 + 0] = r4			  ## ll_adv.c:878:20
 1e1bf0e:    03 20             	if (r0 == 0) goto 6 <ll_adv_close+0x3A : 1e1bf16 >			  ## ll_adv.c:878:20
 1e1bf10:    bf f3 16 2e       	call -107476 <__bt_free : 1e01b40 >			  ## ll_adv.c:70:9
 1e1bf14:    0c 4a             	[r5 + 0] = r4			  ## ll_adv.c:71:16
 1e1bf16:    55 01             	{pc, r5, r4} = [sp++]


ll_response_timeout_stop:
 1e1bf18:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:1457:0
 1e1bf1a:    04 08             	r4 = r0			  ## link_layer.c:1457:0
 1e1bf1c:    00 f6 4c 41       	r0 = [r4 + 332]			  ## link_layer.c:1458:15
 1e1bf20:    05 20             	if (r0 == 0) goto 10 <ll_response_timeout_stop+0x14 : 1e1bf2c >			  ## link_layer.c:1458:15
 1e1bf22:    bf f3 0a 2e       	call -107500 <sys_timer_remove : 1e01b3a >			  ## link_layer.c:1459:9
 1e1bf26:    00 70             	r0 = 0			  ## link_layer.c:1460:32
 1e1bf28:    10 f6 4c 41       	[r4 + 332] = r0			  ## link_layer.c:1460:32
 1e1bf2c:    54 01             	{pc, r4} = [sp++]			  ## link_layer.c:1462:1


ll_supervision_timeout_stop:
 1e1bf2e:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:1274:0
 1e1bf30:    04 08             	r4 = r0			  ## link_layer.c:1274:0
 1e1bf32:    00 f6 50 41       	r0 = [r4 + 336]			  ## link_layer.c:1275:15
 1e1bf36:    05 20             	if (r0 == 0) goto 10 <ll_supervision_timeout_stop+0x14 : 1e1bf42 >			  ## link_layer.c:1275:15
 1e1bf38:    bf f3 ff 2d       	call -107522 <sys_timer_remove : 1e01b3a >			  ## link_layer.c:1276:9
 1e1bf3c:    00 70             	r0 = 0			  ## link_layer.c:1277:35
 1e1bf3e:    10 f6 50 41       	[r4 + 336] = r0			  ## link_layer.c:1277:35
 1e1bf42:    54 01             	{pc, r4} = [sp++]			  ## link_layer.c:1279:1


ll_close_conn_link:
 1e1bf44:    77 01             	[--sp] = {rets, r7-r4}			  ## link_layer.c:941:0
 1e1bf46:    04 08             	r4 = r0			  ## link_layer.c:941:0
 1e1bf48:    97 f3 28 57       	call 3059280 <local_irq_disable : 106d9c >			  ## link_layer.c:243:5
 1e1bf4c:    45 fc f8 00       	r5 = r4 + 248			  ## link_layer.c:243:5
 1e1bf50:    f0 4a             	r0 = [r5 + 60]			  ## link_layer.c:244:5
 1e1bf52:    56 fc 3c 00       	r6 = r5 + 60			  ## link_layer.c:244:5
 1e1bf56:    60 f2 0c 00       	if (r0 == r6) goto 24 <ll_close_conn_link+0x2E : 1e1bf72 >			  ## link_layer.c:244:5
 1e1bf5a:    01 40             	r1 = [r0 + 0]			  ## list.h:171:36
 1e1bf5c:    12 40             	r2 = [r0 + 4]			  ## list.h:171:23
 1e1bf5e:    07 40             	r7 = [r0 + 0]
 1e1bf60:    1a 42             	[r1 + 4] = r2			  ## list.h:159:16
 1e1bf62:    09 44             	[r2 + 0] = r1			  ## list.h:160:16
 1e1bf64:    08 40             	[r0 + 0] = r0			  ## list.h:172:17
 1e1bf66:    18 40             	[r0 + 4] = r0			  ## list.h:173:17
 1e1bf68:    bf f3 ea 2d       	call -107564 <__bt_free : 1e01b40 >			  ## link_layer.c:246:9
 1e1bf6c:    70 08             	r0 = r7
 1e1bf6e:    67 f2 f4 1f       	if (r7 != r6) goto -24 <ll_close_conn_link+0x16 : 1e1bf5a >
 1e1bf72:    97 f3 11 57       	call 3059234 <local_irq_enable : 106d98 >			  ## link_layer.c:248:5
 1e1bf76:    97 f3 11 57       	call 3059234 <local_irq_disable : 106d9c >			  ## link_layer.c:202:5
 1e1bf7a:    10 4b             	r0 = [r5 + 68]			  ## link_layer.c:203:5
 1e1bf7c:    56 fc 44 00       	r6 = r5 + 68			  ## link_layer.c:203:5
 1e1bf80:    60 f2 0c 00       	if (r0 == r6) goto 24 <ll_close_conn_link+0x58 : 1e1bf9c >			  ## link_layer.c:203:5
 1e1bf84:    01 40             	r1 = [r0 + 0]			  ## list.h:171:36
 1e1bf86:    12 40             	r2 = [r0 + 4]			  ## list.h:171:23
 1e1bf88:    07 40             	r7 = [r0 + 0]
 1e1bf8a:    1a 42             	[r1 + 4] = r2			  ## list.h:159:16
 1e1bf8c:    09 44             	[r2 + 0] = r1			  ## list.h:160:16
 1e1bf8e:    08 40             	[r0 + 0] = r0			  ## list.h:172:17
 1e1bf90:    18 40             	[r0 + 4] = r0			  ## list.h:173:17
 1e1bf92:    bf f3 d5 2d       	call -107606 <__bt_free : 1e01b40 >			  ## link_layer.c:205:9
 1e1bf96:    70 08             	r0 = r7
 1e1bf98:    67 f2 f4 1f       	if (r7 != r6) goto -24 <ll_close_conn_link+0x40 : 1e1bf84 >
 1e1bf9c:    97 f3 fc 56       	call 3059192 <local_irq_enable : 106d98 >			  ## link_layer.c:207:5
 1e1bfa0:    97 f3 fc 56       	call 3059192 <local_irq_disable : 106d9c >			  ## link_layer.c:340:5
 1e1bfa4:    30 4b             	r0 = [r5 + 76]			  ## link_layer.c:341:5
 1e1bfa6:    56 fc 4c 00       	r6 = r5 + 76			  ## link_layer.c:341:5
 1e1bfaa:    60 f2 0c 00       	if (r0 == r6) goto 24 <ll_close_conn_link+0x82 : 1e1bfc6 >			  ## link_layer.c:341:5
 1e1bfae:    01 40             	r1 = [r0 + 0]			  ## list.h:171:36
 1e1bfb0:    12 40             	r2 = [r0 + 4]			  ## list.h:171:23
 1e1bfb2:    07 40             	r7 = [r0 + 0]
 1e1bfb4:    1a 42             	[r1 + 4] = r2			  ## list.h:159:16
 1e1bfb6:    09 44             	[r2 + 0] = r1			  ## list.h:160:16
 1e1bfb8:    08 40             	[r0 + 0] = r0			  ## list.h:172:17
 1e1bfba:    18 40             	[r0 + 4] = r0			  ## list.h:173:17
 1e1bfbc:    bf f3 c0 2d       	call -107648 <__bt_free : 1e01b40 >			  ## link_layer.c:343:9
 1e1bfc0:    70 08             	r0 = r7
 1e1bfc2:    67 f2 f4 1f       	if (r7 != r6) goto -24 <ll_close_conn_link+0x6A : 1e1bfae >
 1e1bfc6:    97 f3 e7 56       	call 3059150 <local_irq_enable : 106d98 >			  ## link_layer.c:345:5
 1e1bfca:    30 4a             	r0 = [r5 + 12]			  ## link_layer.c:1184:5
 1e1bfcc:    c6 9a             	r6 = r5 + 12			  ## link_layer.c:1184:5
 1e1bfce:    60 f2 0c 00       	if (r0 == r6) goto 24 <ll_close_conn_link+0xA6 : 1e1bfea >			  ## link_layer.c:1184:5
 1e1bfd2:    01 40             	r1 = [r0 + 0]			  ## list.h:171:36
 1e1bfd4:    12 40             	r2 = [r0 + 4]			  ## list.h:171:23
 1e1bfd6:    07 40             	r7 = [r0 + 0]
 1e1bfd8:    1a 42             	[r1 + 4] = r2			  ## list.h:159:16
 1e1bfda:    09 44             	[r2 + 0] = r1			  ## list.h:160:16
 1e1bfdc:    08 40             	[r0 + 0] = r0			  ## list.h:172:17
 1e1bfde:    18 40             	[r0 + 4] = r0			  ## list.h:173:17
 1e1bfe0:    bf f3 ae 2d       	call -107684 <__bt_free : 1e01b40 >			  ## link_layer.c:1186:9
 1e1bfe4:    70 08             	r0 = r7
 1e1bfe6:    67 f2 f4 1f       	if (r7 != r6) goto -24 <ll_close_conn_link+0x8E : 1e1bfd2 >
 1e1bfea:    00 48             	r0 = [r4 + 0]			  ## link_layer.c:964:15
 1e1bfec:    02 20             	if (r0 == 0) goto 4 <ll_close_conn_link+0xAE : 1e1bff2 >			  ## link_layer.c:964:15
 1e1bfee:    bf f3 35 eb       	call -10646 <le_hw_close : 1e1965c >			  ## link_layer.c:965:9
 1e1bff2:    d0 48             	r0 = [r4 + 52]			  ## list.h:171:36
 1e1bff4:    e1 48             	r1 = [r4 + 56]			  ## list.h:171:23
 1e1bff6:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e1bff8:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e1bffa:    40 fc 34 00       	r0 = r4 + 52			  ## link_layer.c:972:21
 1e1bffe:    d8 48             	[r4 + 52] = r0			  ## list.h:172:17
 1e1c000:    e8 48             	[r4 + 56] = r0			  ## list.h:173:17
 1e1c002:    00 5a             	r0 = h[r5 + 0] (u)			  ## link_layer.c:974:28
 1e1c004:    c1 ff 00 2b 00 00 	r1 = 11008 <ll_hdl : 2b00 >			  ## link_layer.c:976:19
 1e1c00a:    02 53             	r2 = h[r1 + 32] (u)			  ## link_layer.c:829:20
 1e1c00c:    20 fd 0f 09       	r0 = r0 & 15			  ## link_layer.c:829:24
 1e1c010:    13 70             	r3 = 1			  ## link_layer.c:829:24
 1e1c012:    f8 fd 00 03       	r0 = r3 << r0			  ## link_layer.c:829:24
 1e1c016:    e3 fd 00 02       	r0 = r2 & ~r0			  ## link_layer.c:829:20
 1e1c01a:    08 53             	h[r1 + 32] = r0			  ## link_layer.c:829:20
 1e1c01c:    00 f9 22 10       	r0 = b[r1 + 34] (u)			  ## link_layer.c:976:19
 1e1c020:    f0 8f             	r0 += -1			  ## link_layer.c:976:19
 1e1c022:    10 f9 22 10       	b[r1 + 34] = r0			  ## link_layer.c:976:19
 1e1c026:    40 fc 40 00       	r0 = r4 + 64			  ## link_layer.c:978:25
 1e1c02a:    01 70             	r1 = 0			  ## link_layer.c:978:5
 1e1c02c:    97 f3 f8 56       	call 3059184 <os_mutex_del : 106e20 >			  ## link_layer.c:978:5
 1e1c030:    40 08             	r0 = r4			  ## link_layer.c:980:5
 1e1c032:    17 01             	{rets, r7-r4} = [sp++]			  ## link_layer.c:980:5
 1e1c034:    ff f3 84 2d       	goto -107768 <__bt_free : 1e01b40 >			  ## link_layer.c:980:5


ll_delete_link:
 1e1c038:    75 01             	[--sp] = {rets, r5, r4}			  ## link_layer.c:984:0
 1e1c03a:    04 08             	r4 = r0			  ## link_layer.c:984:0
 1e1c03c:    05 f7 f8 40       	r5 = h[r4 + 248] (u)			  ## link_layer.c:987:15
 1e1c040:    80 f3 37 0a       	call 5230 <ll_get_update_handle : 1e1d4b2 >			  ## link_layer.c:987:25
 1e1c044:    05 f2 0c 10       	if (r5 != r0) goto 24 <ll_delete_link+0x28 : 1e1c060 >			  ## link_layer.c:987:25
 1e1c048:    c0 ff a8 0e 00 00 	r0 = 3752 <ll_update_handle : ea8 >			  ## ll_slave.c:423:22
 1e1c04e:    01 70             	r1 = 0			  ## ll_slave.c:423:22
 1e1c050:    09 50             	h[r0 + 0] = r1			  ## ll_slave.c:423:22
 1e1c052:    11 f6 98 41       	[r4 + 408] = r1			  ## link_layer.c:989:32
 1e1c056:    01 f6 9c 41       	r1 = [r4 + 412]			  ## link_layer.c:990:19
 1e1c05a:    02 22             	if (r1 == 0) goto 4 <ll_delete_link+0x28 : 1e1c060 >			  ## link_layer.c:990:19
 1e1c05c:    00 70             	r0 = 0			  ## link_layer.c:991:13
 1e1c05e:    81 00             	call r1			  ## link_layer.c:991:13
 1e1c060:    40 fc 40 00       	r0 = r4 + 64			  ## link_layer.c:994:26
 1e1c064:    01 70             	r1 = 0			  ## link_layer.c:994:5
 1e1c066:    05 70             	r5 = 0			  ## link_layer.c:994:5
 1e1c068:    97 f3 dc 56       	call 3059128 <os_mutex_pend : 106e24 >			  ## link_layer.c:994:5
 1e1c06c:    40 08             	r0 = r4			  ## link_layer.c:996:5
 1e1c06e:    54 17             	call -344 <ll_response_timeout_stop : 1e1bf18 >			  ## link_layer.c:996:5
 1e1c070:    40 08             	r0 = r4			  ## link_layer.c:998:5
 1e1c072:    5d 17             	call -326 <ll_supervision_timeout_stop : 1e1bf2e >			  ## link_layer.c:998:5
 1e1c074:    40 fc 98 00       	r0 = r4 + 152
 1e1c078:    4d 51             	h[r0 + 40] = r5			  ## link_layer.c:737:19
 1e1c07a:    4d 60             	b[r0 + 4] = r5			  ## link_layer.c:739:5
 1e1c07c:    0d 40             	[r0 + 0] = r5			  ## link_layer.c:739:5
 1e1c07e:    40 08             	r0 = r4			  ## link_layer.c:1004:5
 1e1c080:    15 01             	{rets, r5, r4} = [sp++]			  ## link_layer.c:1004:5
 1e1c082:    60 1f             	goto -320 <ll_close_conn_link : 1e1bf44 >			  ## link_layer.c:1004:5


ll_destroy:
 1e1c084:    76 01             	[--sp] = {rets, r6-r4}			  ## link_layer.c:3399:0
 1e1c086:    2a 17             	call -428 <ll_adv_close : 1e1bedc >			  ## link_layer.c:3410:5
 1e1c088:    c4 ff 00 2b 00 00 	r4 = 11008 <ll_hdl : 2b00 >			  ## link_layer.c:3410:5
 1e1c08e:    00 f9 22 40       	r0 = b[r4 + 34] (u)			  ## link_layer.c:3419:17
 1e1c092:    0b 20             	if (r0 == 0) goto 22 <ll_destroy+0x26 : 1e1c0aa >			  ## link_layer.c:3419:17
 1e1c094:    90 48             	r0 = [r4 + 36]			  ## link_layer.c:3421:9
 1e1c096:    45 fc 24 00       	r5 = r4 + 36			  ## link_layer.c:3421:9
 1e1c09a:    50 f2 06 00       	if (r0 == r5) goto 12 <ll_destroy+0x26 : 1e1c0aa >			  ## link_layer.c:3421:9
 1e1c09e:    46 f6 cc 0f       	r6 = [r0 ++= -52]
 1e1c0a2:    ca 17             	call -108 <ll_delete_link : 1e1c038 >			  ## link_layer.c:3423:13
 1e1c0a4:    60 08             	r0 = r6			  ## link_layer.c:3423:13
 1e1c0a6:    56 f2 fa 1f       	if (r6 != r5) goto -12 <ll_destroy+0x1A : 1e1c09e >			  ## link_layer.c:3423:13
 1e1c0aa:    60 48             	r0 = [r4 + 24]			  ## link_layer.c:3428:24
 1e1c0ac:    03 20             	if (r0 == 0) goto 6 <ll_destroy+0x30 : 1e1c0b4 >			  ## link_layer.c:3428:24
 1e1c0ae:    80 98             	r0 = r4 + 8			  ## link_layer.c:3429:9
 1e1c0b0:    bf f3 4b 2d       	call -107882 <thread_delete : 1e01b4a >			  ## link_layer.c:3429:9
 1e1c0b4:    bf f3 36 eb       	call -10644 <le_hw_destroy : 1e19724 >			  ## link_layer.c:3433:5
 1e1c0b8:    10 48             	r0 = [r4 + 4]			  ## link_layer.c:3436:17
 1e1c0ba:    02 20             	if (r0 == 0) goto 4 <ll_destroy+0x3C : 1e1c0c0 >			  ## link_layer.c:3436:17
 1e1c0bc:    bf f3 57 2d       	call -107858 <lbuf_clear_btctrler : 1e01b6e >			  ## link_layer.c:3437:9
 1e1c0c0:    56 01             	{pc, r6-r4} = [sp++]			  ## link_layer.c:3446:1


irk_enc:
 1e1c0c2:    77 01             	[--sp] = {rets, r7-r4}			  ## ll_resolve_list.c:64:0
 1e1c0c4:    f0 0b             	sp += -32			  ## ll_resolve_list.c:64:0
 1e1c0c6:    24 08             	r4 = r2			  ## ll_resolve_list.c:64:0
 1e1c0c8:    15 08             	r5 = r1			  ## ll_resolve_list.c:64:0
 1e1c0ca:    06 08             	r6 = r0			  ## ll_resolve_list.c:64:0
 1e1c0cc:    07 a1             	r7 = sp + 16			  ## ll_resolve_list.c:64:0
 1e1c0ce:    30 9e             	r0 = r7 + 3			  ## ll_resolve_list.c:70:5
 1e1c0d0:    01 70             	r1 = 0			  ## ll_resolve_list.c:70:5
 1e1c0d2:    d2 70             	r2 = 13			  ## ll_resolve_list.c:70:5
 1e1c0d4:    97 f3 0c 57       	call 3059224 <memset : 106ef0 >			  ## ll_resolve_list.c:70:5
 1e1c0d8:    20 6a             	r0 = b[r5 + 2] (u)			  ## ll_resolve_list.c:70:5
 1e1c0da:    d0 f5 12 00       	b[sp+18] = r0			  ## ll_resolve_list.c:70:5
 1e1c0de:    10 6a             	r0 = b[r5 + 1] (u)			  ## ll_resolve_list.c:70:5
 1e1c0e0:    01 6a             	r1 = b[r5 + 0] (u)			  ## ll_resolve_list.c:70:5
 1e1c0e2:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## ll_resolve_list.c:70:5
 1e1c0e6:    91 f5 10 00       	h[sp+16] = r1			  ## ll_resolve_list.c:70:5
 1e1c0ea:    05 a0             	r5 = sp + 0			  ## ll_resolve_list.c:70:5
 1e1c0ec:    60 08             	r0 = r6			  ## ll_resolve_list.c:72:5
 1e1c0ee:    71 08             	r1 = r7			  ## ll_resolve_list.c:72:5
 1e1c0f0:    52 08             	r2 = r5			  ## ll_resolve_list.c:72:5
 1e1c0f2:    bf f3 a2 37       	call -102588 <aes128_start : 1e0303a >			  ## ll_resolve_list.c:72:5
 1e1c0f6:    32 70             	r2 = 3			  ## ll_resolve_list.c:74:5
 1e1c0f8:    40 08             	r0 = r4			  ## ll_resolve_list.c:74:5
 1e1c0fa:    51 08             	r1 = r5			  ## ll_resolve_list.c:74:5
 1e1c0fc:    97 f3 f2 56       	call 3059172 <memcpy : 106ee4 >			  ## ll_resolve_list.c:74:5
 1e1c100:    10 0a             	sp += 32
 1e1c102:    57 01             	{pc, r7-r4} = [sp++]			  ## ll_resolve_list.c:75:1


ll_vendor_device_address_generate:
 1e1c104:    77 01             	[--sp] = {rets, r7-r4}			  ## ll_resolve_list.c:494:0
 1e1c106:    ec 0b             	sp += -40			  ## ll_resolve_list.c:494:0
 1e1c108:    15 08             	r5 = r1			  ## ll_resolve_list.c:494:0
 1e1c10a:    04 08             	r4 = r0			  ## ll_resolve_list.c:494:0
 1e1c10c:    00 70             	r0 = 0			  ## ll_resolve_list.c:494:0
 1e1c10e:    c1 ff 00 3b 1e 00 	r1 = 1981184 <uECC_vli_cmp_unsafe+0xDCB04 : 1e3b00 >			  ## ll_resolve_list.c:494:0
 1e1c114:    02 42             	r2 = [r1 + 0]			  ## ll_resolve_list.c:499:34
 1e1c116:    23 a0             	r3 = sp + 2			  ## ll_resolve_list.c:499:34
 1e1c118:    03 09             	r3 += r0			  ## ll_resolve_list.c:499:23
 1e1c11a:    0a 66             	b[r3 + 0] = r2			  ## ll_resolve_list.c:499:23
 1e1c11c:    12 42             	r2 = [r1 + 4]			  ## ll_resolve_list.c:500:34
 1e1c11e:    20 80             	r0 += 2			  ## ll_resolve_list.c:500:19
 1e1c120:    1a 66             	b[r3 + 1] = r2			  ## ll_resolve_list.c:500:23
 1e1c122:    60 e0 f7 3f       	if (r0 < 6) goto -18 <ll_vendor_device_address_generate+0x10 : 1e1c114 >			  ## ll_resolve_list.c:498:5
 1e1c126:    c0 f5 04 00       	r0 = b[sp+4] (u)			  ## ll_resolve_list.c:524:21
 1e1c12a:    20 fd 3f 09       	r0 = r0 & 63			  ## ll_resolve_list.c:524:21
 1e1c12e:    10 b3             	r0 |= 64			  ## ll_resolve_list.c:525:21
 1e1c130:    d0 f5 04 00       	b[sp+4] = r0			  ## ll_resolve_list.c:525:21
 1e1c134:    86 a1             	r6 = sp + 24			  ## ll_resolve_list.c:525:21
 1e1c136:    30 9c             	r0 = r6 + 3			  ## ll_resolve_list.c:70:5
 1e1c138:    01 70             	r1 = 0			  ## ll_resolve_list.c:70:5
 1e1c13a:    d2 70             	r2 = 13			  ## ll_resolve_list.c:70:5
 1e1c13c:    97 f3 d8 56       	call 3059120 <memset : 106ef0 >			  ## ll_resolve_list.c:70:5
 1e1c140:    c0 f5 04 00       	r0 = b[sp+4] (u)			  ## ll_resolve_list.c:70:5
 1e1c144:    c1 f5 03 00       	r1 = b[sp+3] (u)			  ## ll_resolve_list.c:70:5
 1e1c148:    c2 f5 02 00       	r2 = b[sp+2] (u)			  ## ll_resolve_list.c:70:5
 1e1c14c:    d0 f5 1a 00       	b[sp+26] = r0			  ## ll_resolve_list.c:70:5
 1e1c150:    d8 fd 40 21       	r2 <= insert(r1, p:8, l:24)			  ## ll_resolve_list.c:70:5
 1e1c154:    92 f5 18 00       	h[sp+24] = r2			  ## ll_resolve_list.c:70:5
 1e1c158:    87 a0             	r7 = sp + 8			  ## ll_resolve_list.c:70:5
 1e1c15a:    50 08             	r0 = r5			  ## ll_resolve_list.c:72:5
 1e1c15c:    61 08             	r1 = r6			  ## ll_resolve_list.c:72:5
 1e1c15e:    72 08             	r2 = r7			  ## ll_resolve_list.c:72:5
 1e1c160:    bf f3 6b 37       	call -102698 <aes128_start : 1e0303a >			  ## ll_resolve_list.c:72:5
 1e1c164:    32 70             	r2 = 3			  ## ll_resolve_list.c:74:5
 1e1c166:    40 08             	r0 = r4			  ## ll_resolve_list.c:74:5
 1e1c168:    71 08             	r1 = r7			  ## ll_resolve_list.c:74:5
 1e1c16a:    97 f3 bb 56       	call 3059062 <memcpy : 106ee4 >			  ## ll_resolve_list.c:74:5
 1e1c16e:    30 98             	r0 = r4 + 3			  ## ll_resolve_list.c:529:21
 1e1c170:    21 a0             	r1 = sp + 2			  ## ll_resolve_list.c:529:21
 1e1c172:    32 70             	r2 = 3			  ## ll_resolve_list.c:529:9
 1e1c174:    97 f3 b6 56       	call 3059052 <memcpy : 106ee4 >			  ## ll_resolve_list.c:529:9
 1e1c178:    14 0a             	sp += 40			  ## ll_resolve_list.c:529:9
 1e1c17a:    57 01             	{pc, r7-r4} = [sp++]			  ## ll_resolve_list.c:533:1


ll_init:
 1e1c17c:    76 01             	[--sp] = {rets, r6-r4}			  ## link_layer.c:3328:0
 1e1c17e:    c6 ff 00 2b 00 00 	r6 = 11008 <ll_hdl : 2b00 >			  ## link_layer.c:3328:0
 1e1c184:    c0 ff 30 2b 00 00 	r0 = 11056 <pEvent_buf_static : 2b30 >			  ## link_layer.c:3350:28
 1e1c18a:    08 4c             	[r6 + 0] = r0			  ## link_layer.c:3350:28
 1e1c18c:    61 fc 24 00       	r1 = r6 + 36			  ## list.h:188:16
 1e1c190:    99 4c             	[r6 + 36] = r1			  ## list.h:188:16
 1e1c192:    a9 4c             	[r6 + 40] = r1			  ## list.h:189:16
 1e1c194:    c4 ff da 0e 00 00 	r4 = 3802 <le_param+0x22 : eda >			  ## list.h:189:16
 1e1c19a:    41 fc 76 00       	r1 = r4 + 118			  ## list.h:189:16
 1e1c19e:    09 42             	[r1 + 0] = r1			  ## list.h:188:16
 1e1c1a0:    19 42             	[r1 + 4] = r1			  ## list.h:189:16
 1e1c1a2:    c2 92             	r2 = r1 + 12			  ## list.h:188:16
 1e1c1a4:    3a 42             	[r1 + 12] = r2			  ## list.h:188:16
 1e1c1a6:    4a 42             	[r1 + 16] = r2			  ## list.h:189:16
 1e1c1a8:    c1 ff b0 0e 00 00 	r1 = 3760 <le_data_length.6 : eb0 >			  ## list.h:189:16
 1e1c1ae:    15 70             	r5 = 1
 1e1c1b0:    0d 62             	b[r1 + 0] = r5
 1e1c1b2:    c1 ff b4 0e 00 00 	r1 = 3764 <le_data_length.7 : eb4 >
 1e1c1b8:    0d 62             	b[r1 + 0] = r5
 1e1c1ba:    01 fb 00 02       	r1 = 512 <BTCTLER_CL_RAM_TOTAL+0x1C : 200 >			  ## link_layer.c:3370:24
 1e1c1be:    bf f3 1f 57       	call -86466 <lbuf_init_btctrler : 1e07000 >			  ## link_layer.c:3370:24
 1e1c1c2:    18 4c             	[r6 + 4] = r0			  ## link_layer.c:3370:22
 1e1c1c4:    02 30             	if (r0 != 0) goto 4 <ll_init+0x4E : 1e1c1ca >			  ## link_layer.c:3370:22
 1e1c1c6:    8f f3 0b 39       	call 1995286 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1c1ca:    bf f3 35 eb       	call -10646 <le_hw_init : 1e19838 >			  ## link_layer.c:3373:9
 1e1c1ce:    80 9c             	r0 = r6 + 8			  ## link_layer.c:3375:9
 1e1c1d0:    c1 ff 13 59 e1 01 	r1 = 31545619 <update_target_end+0x2A8B : 1e15913 >			  ## link_layer.c:3375:9
 1e1c1d6:    c2 ff 14 d2 e1 01 	r2 = 31576596 <ll_thread_process : 1e1d214 >			  ## link_layer.c:3375:9
 1e1c1dc:    c3 ff ec 0d 00 00 	r3 = 3564 <bt_task_thread : dec >			  ## link_layer.c:3375:9
 1e1c1e2:    bf f3 53 57       	call -86362 <thread_create : 1e0708c >			  ## link_layer.c:3375:9
 1e1c1e6:    00 70             	r0 = 0			  ## link_layer.c:3378:9
 1e1c1e8:    38 58             	h[r4 + 6] = r0			  ## link_layer.c:3378:9
 1e1c1ea:    28 58             	h[r4 + 4] = r0			  ## link_layer.c:3378:9
 1e1c1ec:    c1 ff 04 0e 00 00 	r1 = 3588 <hci_param : e04 >			  ## link_layer.c:3378:9
 1e1c1f2:    82 52             	r2 = h[r1 + 16] (u)			  ## link_layer.c:3379:41
 1e1c1f4:    81 62             	r1 = b[r1 + 8] (u)			  ## link_layer.c:3380:41
 1e1c1f6:    18 58             	h[r4 + 2] = r0			  ## link_layer.c:3378:9
 1e1c1f8:    0d 58             	h[r4 + 0] = r5			  ## link_layer.c:3378:9
 1e1c1fa:    9a 58             	h[r4 + 18] = r2			  ## link_layer.c:3379:29
 1e1c1fc:    09 69             	b[r4 + 16] = r1			  ## link_layer.c:3380:29
 1e1c1fe:    30 70             	r0 = 3			  ## link_layer.c:3316:37
 1e1c200:    e8 69             	b[r4 + 30] = r0			  ## link_layer.c:3316:37
 1e1c202:    b0 71             	r0 = 27			  ## link_layer.c:3318:37
 1e1c204:    08 59             	h[r4 + 32] = r0			  ## link_layer.c:3318:37
 1e1c206:    56 01             	{pc, r6-r4} = [sp++]			  ## link_layer.c:3393:1


ll_send_control_data:
 1e1c208:    63 01             	[--sp] = {r3}			  ## link_layer.c:1013:0
 1e1c20a:    77 01             	[--sp] = {rets, r7-r4}			  ## link_layer.c:1013:0
 1e1c20c:    fa 0b             	sp += -12			  ## link_layer.c:1013:0
 1e1c20e:    25 08             	r5 = r2			  ## link_layer.c:1013:0
 1e1c210:    16 08             	r6 = r1			  ## link_layer.c:1013:0
 1e1c212:    04 08             	r4 = r0			  ## link_layer.c:1013:0
 1e1c214:    01 a2             	r1 = sp + 32			  ## link_layer.c:1013:0
 1e1c216:    29 02             	[sp+8] = r1			  ## link_layer.c:1017:5
 1e1c218:    50 08             	r0 = r5			  ## link_layer.c:1018:5
 1e1c21a:    bf f3 64 57       	call -86328 <__vsprintf_len : 1e070e6 >			  ## link_layer.c:1018:5
 1e1c21e:    00 e3 02 30       	if (r0 < 48) goto 4 <ll_send_control_data+0x1E : 1e1c226 >
 1e1c222:    8f f3 dd 38       	call 1995194 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1c226:    47 fc c8 00       	r7 = r4 + 200
 1e1c22a:    0e 6e             	b[r7 + 0] = r6			  ## link_layer.c:1020:23
 1e1c22c:    08 2a             	if (r5 == 0) goto 16 <ll_send_control_data+0x36 : 1e1c23e >			  ## link_layer.c:1020:23
 1e1c22e:    02 a2             	r2 = sp + 32
 1e1c230:    2a 02             	[sp+8] = r2			  ## link_layer.c:1023:9
 1e1c232:    10 9e             	r0 = r7 + 1			  ## link_layer.c:1024:42
 1e1c234:    51 08             	r1 = r5			  ## link_layer.c:1024:16
 1e1c236:    bf f3 cb 4e       	call -90730 <__vsprintf : 1e05fd0 >			  ## link_layer.c:1024:16
 1e1c23a:    11 90             	r1 = r0 + 1			  ## link_layer.c:1024:13
 1e1c23c:    01 18             	goto 2 <ll_send_control_data+0x38 : 1e1c240 >
 1e1c23e:    11 70             	r1 = 1
 1e1c240:    00 48             	r0 = [r4 + 0]			  ## link_layer.c:1030:39
 1e1c242:    19 02             	[sp+4] = r1			  ## link_layer.c:1030:5
 1e1c244:    01 70             	r1 = 0			  ## link_layer.c:1030:5
 1e1c246:    02 70             	r2 = 0			  ## link_layer.c:1030:5
 1e1c248:    33 70             	r3 = 3			  ## link_layer.c:1030:5
 1e1c24a:    0f 02             	[sp] = r7			  ## link_layer.c:1030:5
 1e1c24c:    bf f3 aa ed       	call -9388 <le_hw_send_packet_high : 1e19da4 >			  ## link_layer.c:1030:5
 1e1c250:    06 0a             	sp += 12			  ## link_layer.c:1030:5
 1e1c252:    17 01             	{rets, r7-r4} = [sp++]			  ## link_layer.c:1031:1
 1e1c254:    02 0a             	sp += 4			  ## link_layer.c:1031:1
 1e1c256:    20 00             	rts			  ## link_layer.c:1031:1


ll_send_control_data_callback_extend:
 1e1c258:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:1057:0
 1e1c25a:    fa 0b             	sp += -12			  ## link_layer.c:1057:0
 1e1c25c:    81 a1             	r1 = sp + 24			  ## link_layer.c:1057:0
 1e1c25e:    29 02             	[sp+8] = r1			  ## link_layer.c:1061:5
 1e1c260:    51 70             	r1 = 5			  ## link_layer.c:1064:23
 1e1c262:    11 f9 c8 00       	b[r0 + 200] = r1			  ## link_layer.c:1064:23
 1e1c266:    44 f6 c8 00       	r4 = [r0 ++= 200]			  ## link_layer.c:1074:39
 1e1c26a:    11 70             	r1 = 1			  ## link_layer.c:1074:5
 1e1c26c:    19 02             	[sp+4] = r1			  ## link_layer.c:1074:5
 1e1c26e:    c2 ff 1c d0 e1 01 	r2 = 31576092 <__slave_ll_send_start_enc_req_callback : 1e1d01c >			  ## link_layer.c:1074:5
 1e1c274:    01 70             	r1 = 0			  ## link_layer.c:1074:5
 1e1c276:    33 70             	r3 = 3			  ## link_layer.c:1074:5
 1e1c278:    08 02             	[sp] = r0			  ## link_layer.c:1074:5
 1e1c27a:    40 08             	r0 = r4			  ## link_layer.c:1074:5
 1e1c27c:    bf f3 92 ed       	call -9436 <le_hw_send_packet_high : 1e19da4 >			  ## link_layer.c:1074:5
 1e1c280:    06 0a             	sp += 12
 1e1c282:    54 01             	{pc, r4} = [sp++]			  ## link_layer.c:1075:1


ll_send_control_data_callback:
 1e1c284:    78 01             	[--sp] = {rets, r8-r4}			  ## link_layer.c:1035:0
 1e1c286:    fa 0b             	sp += -12			  ## link_layer.c:1035:0
 1e1c288:    36 08             	r6 = r3			  ## link_layer.c:1035:0
 1e1c28a:    27 08             	r7 = r2			  ## link_layer.c:1035:0
 1e1c28c:    18 08             	r8 = r1			  ## link_layer.c:1035:0
 1e1c28e:    05 08             	r5 = r0			  ## link_layer.c:1035:0
 1e1c290:    41 a2             	r1 = sp + 36			  ## link_layer.c:1035:0
 1e1c292:    29 02             	[sp+8] = r1			  ## link_layer.c:1039:5
 1e1c294:    60 08             	r0 = r6			  ## link_layer.c:1040:5
 1e1c296:    bf f3 26 57       	call -86452 <__vsprintf_len : 1e070e6 >			  ## link_layer.c:1040:5
 1e1c29a:    00 e3 02 30       	if (r0 < 48) goto 4 <ll_send_control_data_callback+0x1E : 1e1c2a2 >
 1e1c29e:    8f f3 9f 38       	call 1995070 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1c2a2:    54 fc c8 00       	r4 = r5 + 200
 1e1c2a6:    0f 68             	b[r4 + 0] = r7			  ## link_layer.c:1042:23
 1e1c2a8:    08 2c             	if (r6 == 0) goto 16 <ll_send_control_data_callback+0x36 : 1e1c2ba >			  ## link_layer.c:1042:23
 1e1c2aa:    42 a2             	r2 = sp + 36
 1e1c2ac:    2a 02             	[sp+8] = r2			  ## link_layer.c:1045:9
 1e1c2ae:    10 98             	r0 = r4 + 1			  ## link_layer.c:1046:42
 1e1c2b0:    61 08             	r1 = r6			  ## link_layer.c:1046:16
 1e1c2b2:    bf f3 8d 4e       	call -90854 <__vsprintf : 1e05fd0 >			  ## link_layer.c:1046:16
 1e1c2b6:    11 90             	r1 = r0 + 1			  ## link_layer.c:1046:13
 1e1c2b8:    01 18             	goto 2 <ll_send_control_data_callback+0x38 : 1e1c2bc >
 1e1c2ba:    11 70             	r1 = 1
 1e1c2bc:    00 4a             	r0 = [r5 + 0]			  ## link_layer.c:1052:39
 1e1c2be:    19 02             	[sp+4] = r1			  ## link_layer.c:1052:5
 1e1c2c0:    02 70             	r2 = 0			  ## link_layer.c:1052:5
 1e1c2c2:    33 70             	r3 = 3			  ## link_layer.c:1052:5
 1e1c2c4:    0c 02             	[sp] = r4			  ## link_layer.c:1052:5
 1e1c2c6:    81 08             	r1 = r8			  ## link_layer.c:1052:5
 1e1c2c8:    bf f3 6c ed       	call -9512 <le_hw_send_packet_high : 1e19da4 >			  ## link_layer.c:1052:5
 1e1c2cc:    06 0a             	sp += 12			  ## link_layer.c:1052:5
 1e1c2ce:    58 01             	{pc, r8-r4} = [sp++]			  ## link_layer.c:1053:1


__hci_emit_le_meta_event:
 1e1c2d0:    62 01             	[--sp] = {r3, r2}			  ## link_layer.c:387:0
 1e1c2d2:    78 01             	[--sp] = {rets, r8-r4}			  ## link_layer.c:387:0
 1e1c2d4:    fe 0b             	sp += -4			  ## link_layer.c:387:0
 1e1c2d6:    14 08             	r4 = r1			  ## link_layer.c:387:0
 1e1c2d8:    05 08             	r5 = r0			  ## link_layer.c:387:0
 1e1c2da:    f5 ee 18 80       	if (r5 > 239) goto 48 <__hci_emit_le_meta_event+0x3E : 1e1c30e >			  ## link_layer.c:387:0
 1e1c2de:    c0 ff 04 0e 00 00 	r0 = 3588 <hci_param : e04 >			  ## link_layer.c:374:9
 1e1c2e4:    71 60             	r1 = b[r0 + 7] (u)			  ## link_layer.c:374:9
 1e1c2e6:    00 70             	r0 = 0			  ## link_layer.c:374:9
 1e1c2e8:    05 f3 3b 10       	if ((r1 & 32) == 0) goto 118 <__hci_emit_le_meta_event+0x92 : 1e1c362 >			  ## link_layer.c:374:9
 1e1c2ec:    51 fc ff ff       	r1 = r5 + -1			  ## link_layer.c:375:23
 1e1c2f0:    82 70             	r2 = 8			  ## link_layer.c:376:47
 1e1c2f2:    e0 fe 20 21       	r2 = r1 / r2 (s)			  ## link_layer.c:376:47
 1e1c2f6:    c3 ff b8 0e 00 00 	r3 = 3768 <le_param : eb8 >			  ## link_layer.c:376:13
 1e1c2fc:    02 fa 00 23       	r2 = b[r2+r3] (u)			  ## link_layer.c:376:13
 1e1c300:    21 fd 07 19       	r1 = r1 & 7			  ## link_layer.c:376:54
 1e1c304:    13 70             	r3 = 1			  ## link_layer.c:376:54
 1e1c306:    f8 fd 10 13       	r1 = r3 << r1			  ## link_layer.c:376:54
 1e1c30a:    12 f0 2a 00       	if ((r2 & r1) == 0) goto 84 <__hci_emit_le_meta_event+0x92 : 1e1c362 >			  ## link_layer.c:376:54
 1e1c30e:    c1 a1             	r1 = sp + 28
 1e1c310:    09 02             	[sp] = r1			  ## link_layer.c:395:5
 1e1c312:    40 08             	r0 = r4			  ## link_layer.c:360:12
 1e1c314:    bf f3 e7 56       	call -86578 <__vsprintf_len : 1e070e6 >			  ## link_layer.c:360:12
 1e1c318:    c8 ff 00 2b 00 00 	r8 = 11008 <ll_hdl : 2b00 >
 1e1c31e:    02 f6 04 80       	r2 = [r8 + 4]			  ## link_layer.c:361:41
 1e1c322:    07 08             	r7 = r0			  ## link_layer.c:360:12
 1e1c324:    31 9e             	r1 = r7 + 3			  ## link_layer.c:361:62
 1e1c326:    20 08             	r0 = r2			  ## link_layer.c:361:13
 1e1c328:    bf f3 57 57       	call -86354 <lbuf_alloc_btctrler : 1e071da >			  ## link_layer.c:361:13
 1e1c32c:    06 08             	r6 = r0			  ## link_layer.c:361:13
 1e1c32e:    03 2c             	if (r6 == 0) goto 6 <__hci_emit_le_meta_event+0x66 : 1e1c336 >			  ## link_layer.c:362:9
 1e1c330:    10 9e             	r0 = r7 + 1			  ## link_layer.c:360:9
 1e1c332:    18 6c             	b[r6 + 1] = r0			  ## link_layer.c:366:16
 1e1c334:    05 18             	goto 10 <__hci_emit_le_meta_event+0x70 : 1e1c340 >			  ## link_layer.c:366:16
 1e1c336:    8f f3 53 38       	call 1994918 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1c33a:    8f f3 51 38       	call 1994914 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1c33e:    06 70             	r6 = 0			  ## cpu.h:148:5
 1e1c340:    e0 73             	r0 = 62			  ## link_layer.c:400:18
 1e1c342:    08 6c             	b[r6 + 0] = r0			  ## link_layer.c:400:18
 1e1c344:    2d 6c             	b[r6 + 2] = r5			  ## link_layer.c:401:20
 1e1c346:    c2 a1             	r2 = sp + 28			  ## link_layer.c:401:20
 1e1c348:    0a 02             	[sp] = r2			  ## link_layer.c:403:5
 1e1c34a:    30 9c             	r0 = r6 + 3			  ## link_layer.c:404:28
 1e1c34c:    41 08             	r1 = r4			  ## link_layer.c:404:5
 1e1c34e:    bf f3 3f 4e       	call -91010 <__vsprintf : 1e05fd0 >			  ## link_layer.c:404:5
 1e1c352:    60 08             	r0 = r6			  ## link_layer.c:411:5
 1e1c354:    bf f3 b4 57       	call -86168 <lbuf_push_btctrler : 1e072c0 >			  ## link_layer.c:411:5
 1e1c358:    80 fc 08 00       	r0 = r8 + 8			  ## link_layer.c:414:5
 1e1c35c:    bf f3 c5 57       	call -86134 <thread_resume : 1e072ea >			  ## link_layer.c:414:5
 1e1c360:    10 70             	r0 = 1			  ## link_layer.c:414:5
 1e1c362:    02 0a             	sp += 4
 1e1c364:    18 01             	{rets, r8-r4} = [sp++]			  ## link_layer.c:419:1
 1e1c366:    04 0a             	sp += 8			  ## link_layer.c:419:1
 1e1c368:    20 00             	rts			  ## link_layer.c:419:1


le_connection_update_complete_event:
 1e1c36a:    75 01             	[--sp] = {rets, r5, r4}			  ## ll_events.c:40:0
 1e1c36c:    fa 0b             	sp += -12			  ## ll_events.c:40:0
 1e1c36e:    14 08             	r4 = r1			  ## ll_events.c:40:0
 1e1c370:    05 08             	r5 = r0			  ## ll_events.c:40:0
 1e1c372:    32 e0 0a 80       	if (r2 > 3) goto 20 <.GJTIE864_0_0_+0xA : 1e1c38a >			  ## ll_events.c:41:5
 1e1c376:    20 08             	r0 = r2			  ## ll_events.c:41:5
 1e1c378:    02 70             	r2 = 0			  ## ll_events.c:41:5
 1e1c37a:    a0 00             	tbb [r0]


.GJTIS864_0_0_:
 1e1c37c:    10     < 16 : 0x10 >
 1e1c37d:    02     < 2 : 0x2 >
 1e1c37e:    0a     < 10 : 0xA >
 1e1c37f:    0f     < 15 : 0xF >
 1e1c380:    02 38             	if (r4 != 0) goto 4 <.GJTIE864_0_0_+0x6 : 1e1c386 >
 1e1c382:    8f f3 2d 38       	call 1994842 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1c386:    52 69             	r2 = b[r4 + 21] (u)			  ## ll_events.c:50:18
 1e1c388:    09 18             	goto 18 <.GJTIE864_0_0_+0x1C : 1e1c39c >
 1e1c38a:    8f f3 29 38       	call 1994834 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1c38e:    06 18             	goto 12 <.GJTIE864_0_0_+0x1C : 1e1c39c >			  ## cpu.h:148:5
 1e1c390:    02 38             	if (r4 != 0) goto 4 <.GJTIE864_0_0_+0x16 : 1e1c396 >
 1e1c392:    8f f3 25 38       	call 1994826 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1c396:    62 69             	r2 = b[r4 + 22] (u)			  ## ll_events.c:54:18
 1e1c398:    01 18             	goto 2 <.GJTIE864_0_0_+0x1C : 1e1c39c >
 1e1c39a:    a2 71             	r2 = 26
 1e1c39c:    03 f7 f8 50       	r3 = h[r5 + 248] (u)			  ## ll_events.c:65:30
 1e1c3a0:    f4 5a             	r4 = h[r5 + 30] (u)			  ## ll_events.c:66:30
 1e1c3a2:    00 5b             	r0 = h[r5 + 32] (u)			  ## ll_events.c:67:30
 1e1c3a4:    11 5b             	r1 = h[r5 + 34] (u)			  ## ll_events.c:68:30
 1e1c3a6:    29 02             	[sp+8] = r1			  ## ll_events.c:62:5
 1e1c3a8:    18 02             	[sp+4] = r0			  ## ll_events.c:62:5
 1e1c3aa:    c1 ff 1e 59 e1 01 	r1 = 31545630 <update_target_end+0x2A96 : 1e1591e >			  ## ll_events.c:62:5
 1e1c3b0:    30 70             	r0 = 3			  ## ll_events.c:62:5
 1e1c3b2:    0c 02             	[sp] = r4			  ## ll_events.c:62:5
 1e1c3b4:    8d 17             	call -230 <__hci_emit_le_meta_event : 1e1c2d0 >			  ## ll_events.c:62:5
 1e1c3b6:    06 0a             	sp += 12
 1e1c3b8:    55 01             	{pc, r5, r4} = [sp++]			  ## ll_events.c:75:1


__event_oneshot_add:
 1e1c3ba:    77 01             	[--sp] = {rets, r7-r4}			  ## link_layer.c:136:0
 1e1c3bc:    24 08             	r4 = r2			  ## link_layer.c:136:0
 1e1c3be:    17 08             	r7 = r1			  ## link_layer.c:136:0
 1e1c3c0:    05 08             	r5 = r0			  ## link_layer.c:136:0
 1e1c3c2:    00 71             	r0 = 16			  ## link_layer.c:137:25
 1e1c3c4:    bf f3 bb 57       	call -86154 <__bt_malloc : 1e0733e >			  ## link_layer.c:137:25
 1e1c3c8:    06 08             	r6 = r0			  ## link_layer.c:137:25
 1e1c3ca:    0c 2c             	if (r6 == 0) goto 24 <__event_oneshot_add+0x2A : 1e1c3e4 >			  ## link_layer.c:137:25
 1e1c3cc:    97 f3 e6 54       	call 3058124 <local_irq_disable : 106d9c >			  ## link_layer.c:141:5
 1e1c3d0:    2f 4c             	[r6 + 8] = r7			  ## link_layer.c:143:17
 1e1c3d2:    3c 4c             	[r6 + 12] = r4			  ## link_layer.c:144:20
 1e1c3d4:    50 fc 3c 01       	r0 = r5 + 316			  ## link_layer.c:144:20
 1e1c3d8:    11 40             	r1 = [r0 + 4]			  ## list.h:154:28
 1e1c3da:    1e 40             	[r0 + 4] = r6			  ## list.h:137:16
 1e1c3dc:    08 4c             	[r6 + 0] = r0			  ## list.h:138:16
 1e1c3de:    19 4c             	[r6 + 4] = r1			  ## list.h:139:16
 1e1c3e0:    0e 42             	[r1 + 0] = r6			  ## list.h:140:16
 1e1c3e2:    04 18             	goto 8 <__event_oneshot_add+0x32 : 1e1c3ec >			  ## list.h:140:16
 1e1c3e4:    8f f3 fc 37       	call 1994744 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1c3e8:    97 f3 d8 54       	call 3058096 <local_irq_disable : 106d9c >			  ## link_layer.c:141:5
 1e1c3ec:    17 01             	{rets, r7-r4} = [sp++]			  ## link_layer.c:147:5
 1e1c3ee:    d7 f3 d3 54       	goto 3058086 <local_irq_enable : 106d98 >			  ## link_layer.c:147:5


__event_oneshot_post_add:
 1e1c3f2:    77 01             	[--sp] = {rets, r7-r4}			  ## link_layer.c:255:0
 1e1c3f4:    24 08             	r4 = r2			  ## link_layer.c:255:0
 1e1c3f6:    17 08             	r7 = r1			  ## link_layer.c:255:0
 1e1c3f8:    05 08             	r5 = r0			  ## link_layer.c:255:0
 1e1c3fa:    00 71             	r0 = 16			  ## link_layer.c:256:25
 1e1c3fc:    bf f3 9f 57       	call -86210 <__bt_malloc : 1e0733e >			  ## link_layer.c:256:25
 1e1c400:    06 08             	r6 = r0			  ## link_layer.c:256:25
 1e1c402:    0c 2c             	if (r6 == 0) goto 24 <__event_oneshot_post_add+0x2A : 1e1c41c >			  ## link_layer.c:256:25
 1e1c404:    97 f3 ca 54       	call 3058068 <local_irq_disable : 106d9c >			  ## link_layer.c:260:5
 1e1c408:    2f 4c             	[r6 + 8] = r7			  ## link_layer.c:262:17
 1e1c40a:    3c 4c             	[r6 + 12] = r4			  ## link_layer.c:263:20
 1e1c40c:    50 fc 44 01       	r0 = r5 + 324			  ## link_layer.c:263:20
 1e1c410:    11 40             	r1 = [r0 + 4]			  ## list.h:154:28
 1e1c412:    1e 40             	[r0 + 4] = r6			  ## list.h:137:16
 1e1c414:    08 4c             	[r6 + 0] = r0			  ## list.h:138:16
 1e1c416:    19 4c             	[r6 + 4] = r1			  ## list.h:139:16
 1e1c418:    0e 42             	[r1 + 0] = r6			  ## list.h:140:16
 1e1c41a:    04 18             	goto 8 <__event_oneshot_post_add+0x32 : 1e1c424 >			  ## list.h:140:16
 1e1c41c:    8f f3 e0 37       	call 1994688 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1c420:    97 f3 bc 54       	call 3058040 <local_irq_disable : 106d9c >			  ## link_layer.c:260:5
 1e1c424:    17 01             	{rets, r7-r4} = [sp++]			  ## link_layer.c:266:5
 1e1c426:    d7 f3 b7 54       	goto 3058030 <local_irq_enable : 106d98 >			  ## link_layer.c:266:5


le_read_remote_used_features_complete_event:
 1e1c42a:    74 01             	[--sp] = {rets, r4}			  ## ll_events.c:78:0
 1e1c42c:    fe 0b             	sp += -4			  ## ll_events.c:78:0
 1e1c42e:    14 08             	r4 = r1			  ## ll_events.c:78:0
 1e1c430:    03 08             	r3 = r0			  ## ll_events.c:78:0
 1e1c432:    04 24             	if (r2 == 0) goto 8 <le_read_remote_used_features_complete_event+0x12 : 1e1c43c >			  ## ll_events.c:78:0
 1e1c434:    32 e0 04 10       	if (r2 != 3) goto 8 <le_read_remote_used_features_complete_event+0x16 : 1e1c440 >			  ## ll_events.c:78:0
 1e1c438:    a2 71             	r2 = 26			  ## ll_events.c:78:0
 1e1c43a:    04 18             	goto 8 <le_read_remote_used_features_complete_event+0x1A : 1e1c444 >			  ## ll_events.c:78:0
 1e1c43c:    02 70             	r2 = 0			  ## ll_events.c:78:0
 1e1c43e:    02 18             	goto 4 <le_read_remote_used_features_complete_event+0x1A : 1e1c444 >			  ## ll_events.c:78:0
 1e1c440:    8f f3 ce 37       	call 1994652 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1c444:    03 f7 f8 30       	r3 = h[r3 + 248] (u)
 1e1c448:    c1 ff 24 59 e1 01 	r1 = 31545636 <update_target_end+0x2A9C : 1e15924 >
 1e1c44e:    02 28             	if (r4 == 0) goto 4 <le_read_remote_used_features_complete_event+0x2A : 1e1c454 >
 1e1c450:    54 81             	r4 += 21			  ## ll_events.c:99:43
 1e1c452:    01 18             	goto 2 <le_read_remote_used_features_complete_event+0x2C : 1e1c456 >
 1e1c454:    04 70             	r4 = 0			  ## ll_events.c:93:9
 1e1c456:    40 70             	r0 = 4
 1e1c458:    0c 02             	[sp] = r4
 1e1c45a:    3a 17             	call -396 <__hci_emit_le_meta_event : 1e1c2d0 >
 1e1c45c:    02 0a             	sp += 4
 1e1c45e:    54 01             	{pc, r4} = [sp++]			  ## ll_events.c:104:1


hci_event_encryption_change:
 1e1c460:    75 01             	[--sp] = {rets, r5, r4}			  ## ll_events.c:312:0
 1e1c462:    fe 0b             	sp += -4			  ## ll_events.c:312:0
 1e1c464:    c3 ff 04 0e 00 00 	r3 = 3588 <hci_param : e04 >			  ## ll_events.c:313:19
 1e1c46a:    05 f9 91 30       	r5 = b[r3 + 145] (u)			  ## ll_events.c:313:19
 1e1c46e:    14 08             	r4 = r1			  ## ll_events.c:313:19
 1e1c470:    03 08             	r3 = r0
 1e1c472:    26 3a             	if (r5 != 0) goto 76 <.GJTIE871_0_0_+0x3C : 1e1c4c0 >
 1e1c474:    42 e0 0b 80       	if (r2 > 4) goto 22 <.GJTIE871_0_0_+0xA : 1e1c48e >			  ## ll_events.c:316:5
 1e1c478:    20 08             	r0 = r2			  ## ll_events.c:316:5
 1e1c47a:    02 70             	r2 = 0			  ## ll_events.c:316:5
 1e1c47c:    a0 00             	tbb [r0]


.GJTIS871_0_0_:
 1e1c47e:    13     < 19 : 0x13 >
 1e1c47f:    03     < 3 : 0x3 >
 1e1c480:    0b     < 11 : 0xB >
 1e1c481:    10     < 16 : 0x10 >
 1e1c482:    12     < 18 : 0x12 >
 1e1c483:    00     < 0 : 0x0 >
 1e1c484:    02 38             	if (r4 != 0) goto 4 <.GJTIE871_0_0_+0x6 : 1e1c48a >
 1e1c486:    8f f3 ab 37       	call 1994582 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1c48a:    52 69             	r2 = b[r4 + 21] (u)			  ## ll_events.c:327:18
 1e1c48c:    0b 18             	goto 22 <.GJTIE871_0_0_+0x20 : 1e1c4a4 >			  ## ll_events.c:327:18
 1e1c48e:    8f f3 a7 37       	call 1994574 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1c492:    08 18             	goto 16 <.GJTIE871_0_0_+0x20 : 1e1c4a4 >			  ## cpu.h:148:5
 1e1c494:    02 38             	if (r4 != 0) goto 4 <.GJTIE871_0_0_+0x16 : 1e1c49a >
 1e1c496:    8f f3 a3 37       	call 1994566 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1c49a:    62 69             	r2 = b[r4 + 22] (u)			  ## ll_events.c:331:18
 1e1c49c:    03 18             	goto 6 <.GJTIE871_0_0_+0x20 : 1e1c4a4 >			  ## ll_events.c:331:18
 1e1c49e:    a2 71             	r2 = 26
 1e1c4a0:    01 18             	goto 2 <.GJTIE871_0_0_+0x20 : 1e1c4a4 >
 1e1c4a2:    22 72             	r2 = 34
 1e1c4a4:    00 f9 93 30       	r0 = b[r3 + 147] (u)			  ## ll_events.c:340:5
 1e1c4a8:    14 70             	r4 = 1			  ## ll_events.c:340:5
 1e1c4aa:    01 30             	if (r0 != 0) goto 2 <.GJTIE871_0_0_+0x2A : 1e1c4ae >
 1e1c4ac:    04 70             	r4 = 0			  ## ll_events.c:340:5
 1e1c4ae:    03 f7 f8 30       	r3 = h[r3 + 248] (u)			  ## ll_events.c:340:5
 1e1c4b2:    c1 ff 3c 59 e1 01 	r1 = 31545660 <update_target_end+0x2AB4 : 1e1593c >			  ## ll_events.c:340:5
 1e1c4b8:    80 70             	r0 = 8			  ## ll_events.c:340:5
 1e1c4ba:    0c 02             	[sp] = r4			  ## ll_events.c:340:5
 1e1c4bc:    bf f3 9d e6       	call -12998 <hci_send_event : 1e191fa >			  ## ll_events.c:340:5
 1e1c4c0:    02 0a             	sp += 4
 1e1c4c2:    55 01             	{pc, r5, r4} = [sp++]			  ## ll_events.c:349:1


hci_event_encryption_refresh_complete:
 1e1c4c4:    75 01             	[--sp] = {rets, r5, r4}			  ## ll_events.c:352:0
 1e1c4c6:    25 08             	r5 = r2			  ## ll_events.c:352:0
 1e1c4c8:    13 08             	r3 = r1			  ## ll_events.c:352:0
 1e1c4ca:    04 08             	r4 = r0			  ## ll_events.c:352:0
 1e1c4cc:    45 e0 0a 80       	if (r5 > 4) goto 20 <.GJTIE872_0_0_+0xA : 1e1c4e4 >			  ## ll_events.c:353:5
 1e1c4d0:    02 70             	r2 = 0
 1e1c4d2:    a5 00             	tbb [r5]


.GJTIS872_0_0_:
 1e1c4d4:    13     < 19 : 0x13 >
 1e1c4d5:    03     < 3 : 0x3 >
 1e1c4d6:    0b     < 11 : 0xB >
 1e1c4d7:    10     < 16 : 0x10 >
 1e1c4d8:    12     < 18 : 0x12 >
 1e1c4d9:    00     < 0 : 0x0 >
 1e1c4da:    02 36             	if (r3 != 0) goto 4 <.GJTIE872_0_0_+0x6 : 1e1c4e0 >
 1e1c4dc:    8f f3 80 37       	call 1994496 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1c4e0:    52 67             	r2 = b[r3 + 21] (u)			  ## ll_events.c:364:18
 1e1c4e2:    0b 18             	goto 22 <.GJTIE872_0_0_+0x20 : 1e1c4fa >			  ## ll_events.c:364:18
 1e1c4e4:    8f f3 7c 37       	call 1994488 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1c4e8:    08 18             	goto 16 <.GJTIE872_0_0_+0x20 : 1e1c4fa >			  ## cpu.h:148:5
 1e1c4ea:    02 36             	if (r3 != 0) goto 4 <.GJTIE872_0_0_+0x16 : 1e1c4f0 >
 1e1c4ec:    8f f3 78 37       	call 1994480 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1c4f0:    62 67             	r2 = b[r3 + 22] (u)			  ## ll_events.c:368:18
 1e1c4f2:    03 18             	goto 6 <.GJTIE872_0_0_+0x20 : 1e1c4fa >			  ## ll_events.c:368:18
 1e1c4f4:    a2 71             	r2 = 26
 1e1c4f6:    01 18             	goto 2 <.GJTIE872_0_0_+0x20 : 1e1c4fa >
 1e1c4f8:    22 72             	r2 = 34
 1e1c4fa:    03 f7 f8 40       	r3 = h[r4 + 248] (u)			  ## ll_events.c:375:5
 1e1c4fe:    c1 ff 40 59 e1 01 	r1 = 31545664 <update_target_end+0x2AB8 : 1e15940 >			  ## ll_events.c:375:5
 1e1c504:    00 73             	r0 = 48			  ## ll_events.c:375:5
 1e1c506:    15 01             	{rets, r5, r4} = [sp++]			  ## ll_events.c:375:5
 1e1c508:    ff f3 77 e6       	goto -13074 <hci_send_event : 1e191fa >			  ## ll_events.c:375:5


ll_disconnect_process:
 1e1c50c:    75 01             	[--sp] = {rets, r5, r4}			  ## link_layer.c:1248:0
 1e1c50e:    fe 0b             	sp += -4			  ## link_layer.c:1248:0
 1e1c510:    02 f9 3c 00       	r2 = b[r0 + 60] (u)			  ## link_layer.c:1251:9
 1e1c514:    14 08             	r4 = r1			  ## link_layer.c:1251:9
 1e1c516:    82 e0 13 00       	if (r2 == 8) goto 38 <ll_disconnect_process+0x34 : 1e1c540 >
 1e1c51a:    05 f9 f8 00       	r5 = b[r0 + 248] (u)			  ## link_layer.c:1249:24
 1e1c51e:    81 70             	r1 = 8			  ## link_layer.c:1249:24
 1e1c520:    11 f9 3c 00       	b[r0 + 60] = r1			  ## link_layer.c:1256:17
 1e1c524:    c0 ff 08 2b 00 00 	r0 = 11016 <ll_hdl+0x8 : 2b08 >			  ## link_layer.c:1259:5
 1e1c52a:    bf f3 de 56       	call -86596 <thread_resume : 1e072ea >			  ## link_layer.c:1259:5
 1e1c52e:    c1 ff 3c 59 e1 01 	r1 = 31545660 <update_target_end+0x2AB4 : 1e1593c >			  ## ll_events.c:382:5
 1e1c534:    50 70             	r0 = 5			  ## ll_events.c:382:5
 1e1c536:    02 70             	r2 = 0			  ## ll_events.c:382:5
 1e1c538:    0c 02             	[sp] = r4			  ## ll_events.c:382:5
 1e1c53a:    53 08             	r3 = r5			  ## ll_events.c:382:5
 1e1c53c:    bf f3 5d e6       	call -13126 <hci_send_event : 1e191fa >			  ## ll_events.c:382:5
 1e1c540:    02 0a             	sp += 4
 1e1c542:    55 01             	{pc, r5, r4} = [sp++]			  ## link_layer.c:1263:1


ll_control_procedure_finish:
 1e1c544:    7a 01             	[--sp] = {rets, r10-r4}			  ## link_layer.c:523:0
 1e1c546:    fa 0b             	sp += -12			  ## link_layer.c:523:0
 1e1c548:    04 08             	r4 = r0			  ## link_layer.c:523:0
 1e1c54a:    47 fc c0 00       	r7 = r4 + 192			  ## link_layer.c:523:0
 1e1c54e:    00 6e             	r0 = b[r7 + 0] (u)			  ## link_layer.c:524:39
 1e1c550:    c0 c0             	r0 = r0 << 3			  ## link_layer.c:527:25
 1e1c552:    40 09             	r0 += r4			  ## link_layer.c:527:25
 1e1c554:    0a fc 98 00       	r10 = r0 + 152			  ## link_layer.c:527:25
 1e1c558:    03 f9 04 a0       	r3 = b[r10 + 4] (u)			  ## link_layer.c:527:25
 1e1c55c:    00 f6 00 a0       	r0 = [r10 + 0]			  ## link_layer.c:527:25
 1e1c560:    46 f8 00 03       	r6 = h[r0+r3<<1] (u)			  ## link_layer.c:527:25
 1e1c564:    85 05             	r5 = r6.b0 (u)			  ## link_layer.c:529:10
 1e1c566:    28 08             	r8 = r2			  ## link_layer.c:529:10
 1e1c568:    19 08             	r9 = r1
 1e1c56a:    00 ff ff 50 13 00 	if (r5 == 255) goto 38 <ll_control_procedure_finish+0x52 : 1e1c596 >
 1e1c570:    11 96             	r1 = r3 + 1			  ## link_layer.c:512:33
 1e1c572:    42 04             	r2 = r1.b0 (u)
 1e1c574:    46 f8 00 02       	r6 = h[r0+r2<<1] (u)
 1e1c578:    82 05             	r2 = r6.b0 (u)			  ## link_layer.c:513:32
 1e1c57a:    11 80             	r1 += 1			  ## link_layer.c:513:13
 1e1c57c:    01 ff ff 20 f8 ff 	if (r2 != 255) goto -16 <ll_control_procedure_finish+0x2E : 1e1c572 >			  ## link_layer.c:513:13
 1e1c582:    00 48             	r0 = [r4 + 0]			  ## link_layer.c:532:33
 1e1c584:    11 71             	r1 = 17			  ## link_layer.c:532:9
 1e1c586:    02 70             	r2 = 0			  ## link_layer.c:532:9
 1e1c588:    bf f3 86 ed       	call -9460 <le_hw_ioctrl : 1e1a098 >			  ## link_layer.c:532:9
 1e1c58c:    00 48             	r0 = [r4 + 0]			  ## link_layer.c:533:33
 1e1c58e:    21 71             	r1 = 18			  ## link_layer.c:533:9
 1e1c590:    02 70             	r2 = 0			  ## link_layer.c:533:9
 1e1c592:    bf f3 81 ed       	call -9470 <le_hw_ioctrl : 1e1a098 >			  ## link_layer.c:533:9
 1e1c596:    30 d2             	r0 = r6 >> 8
 1e1c598:    e0 e0 7e 80       	if (r0 > 14) goto 252 <.GJTIE874_0_0_+0xEA : 1e1c698 >
 1e1c59c:    a0 00             	tbb [r0]


.GJTIS874_0_0_:
 1e1c59e:    08     < 8 : 0x8 >
 1e1c59f:    08     < 8 : 0x8 >
 1e1c5a0:    28     < 40 : 0x28 >
 1e1c5a1:    7d     < 125 : 0x7D >
 1e1c5a2:    7d     < 125 : 0x7D >
 1e1c5a3:    3d     < 61 : 0x3D >
 1e1c5a4:    0d     < 13 : 0xD >
 1e1c5a5:    0d     < 13 : 0xD >
 1e1c5a6:    4c     < 76 : 0x4C >
 1e1c5a7:    12     < 18 : 0x12 >
 1e1c5a8:    1d     < 29 : 0x1D >
 1e1c5a9:    12     < 18 : 0x12 >
 1e1c5aa:    1d     < 29 : 0x1D >
 1e1c5ab:    7d     < 125 : 0x7D >
 1e1c5ac:    52     < 82 : 0x52 >
 1e1c5ad:    00     < 0 : 0x0 >
 1e1c5ae:    40 08             	r0 = r4
 1e1c5b0:    91 08             	r1 = r9
 1e1c5b2:    82 08             	r2 = r8
 1e1c5b4:    da 16             	call -588 <le_connection_update_complete_event : 1e1c36a >
 1e1c5b6:    70 18             	goto 224 <.GJTIE874_0_0_+0xEA : 1e1c698 >
 1e1c5b8:    40 08             	r0 = r4
 1e1c5ba:    91 08             	r1 = r9
 1e1c5bc:    82 08             	r2 = r8
 1e1c5be:    35 17             	call -406 <le_read_remote_used_features_complete_event : 1e1c42a >
 1e1c5c0:    6b 18             	goto 214 <.GJTIE874_0_0_+0xEA : 1e1c698 >
 1e1c5c2:    00 48             	r0 = [r4 + 0]
 1e1c5c4:    11 71             	r1 = 17
 1e1c5c6:    02 70             	r2 = 0
 1e1c5c8:    bf f3 66 ed       	call -9524 <le_hw_ioctrl : 1e1a098 >
 1e1c5cc:    e4 fd 00 28       	r2 = r8.b0 (u)
 1e1c5d0:    40 08             	r0 = r4
 1e1c5d2:    91 08             	r1 = r9
 1e1c5d4:    45 17             	call -374 <hci_event_encryption_change : 1e1c460 >
 1e1c5d6:    60 18             	goto 192 <.GJTIE874_0_0_+0xEA : 1e1c698 >
 1e1c5d8:    00 48             	r0 = [r4 + 0]
 1e1c5da:    11 71             	r1 = 17
 1e1c5dc:    02 70             	r2 = 0
 1e1c5de:    bf f3 5b ed       	call -9546 <le_hw_ioctrl : 1e1a098 >
 1e1c5e2:    e4 fd 00 28       	r2 = r8.b0 (u)
 1e1c5e6:    40 08             	r0 = r4
 1e1c5e8:    91 08             	r1 = r9
 1e1c5ea:    6c 17             	call -296 <hci_event_encryption_refresh_complete : 1e1c4c4 >
 1e1c5ec:    55 18             	goto 170 <.GJTIE874_0_0_+0xEA : 1e1c698 >
 1e1c5ee:    d6 5f             	r6 = h[r7 + 58] (u)			  ## link_layer.c:1669:50
 1e1c5f0:    00 48             	r0 = [r4 + 0]			  ## link_layer.c:1669:29
 1e1c5f2:    41 70             	r1 = 4			  ## link_layer.c:1669:5
 1e1c5f4:    03 70             	r3 = 0			  ## link_layer.c:1669:5
 1e1c5f6:    62 08             	r2 = r6			  ## link_layer.c:1669:5
 1e1c5f8:    bf f3 4e ed       	call -9572 <le_hw_ioctrl : 1e1a098 >			  ## link_layer.c:1669:5
 1e1c5fc:    62 fc ff ff       	r2 = r6 + -1			  ## link_layer.c:1673:60
 1e1c600:    c1 ff 8e cf e1 01 	r1 = 31575950 <__connection_upadte : 1e1cf8e >			  ## link_layer.c:1673:5
 1e1c606:    40 08             	r0 = r4			  ## link_layer.c:1673:5
 1e1c608:    d8 16             	call -592 <__event_oneshot_add : 1e1c3ba >			  ## link_layer.c:1673:5
 1e1c60a:    c1 ff cc cf e1 01 	r1 = 31576012 <__master_ll_send_conn_update_done : 1e1cfcc >			  ## link_layer.c:1675:5
 1e1c610:    40 08             	r0 = r4			  ## link_layer.c:1675:5
 1e1c612:    62 08             	r2 = r6			  ## link_layer.c:1675:5
 1e1c614:    ee 16             	call -548 <__event_oneshot_post_add : 1e1c3f2 >			  ## link_layer.c:1675:5
 1e1c616:    40 18             	goto 128 <.GJTIE874_0_0_+0xEA : 1e1c698 >			  ## link_layer.c:1675:5
 1e1c618:    d6 5f             	r6 = h[r7 + 58] (u)			  ## link_layer.c:2008:50
 1e1c61a:    00 48             	r0 = [r4 + 0]			  ## link_layer.c:2008:29
 1e1c61c:    41 70             	r1 = 4			  ## link_layer.c:2008:5
 1e1c61e:    13 70             	r3 = 1			  ## link_layer.c:2008:5
 1e1c620:    62 08             	r2 = r6			  ## link_layer.c:2008:5
 1e1c622:    bf f3 39 ed       	call -9614 <le_hw_ioctrl : 1e1a098 >			  ## link_layer.c:2008:5
 1e1c626:    62 fc ff ff       	r2 = r6 + -1			  ## link_layer.c:2010:61
 1e1c62a:    c1 ff d4 cf e1 01 	r1 = 31576020 <__channel_map_upadte : 1e1cfd4 >			  ## link_layer.c:2010:5
 1e1c630:    40 08             	r0 = r4			  ## link_layer.c:2010:5
 1e1c632:    c3 16             	call -634 <__event_oneshot_add : 1e1c3ba >			  ## link_layer.c:2010:5
 1e1c634:    31 18             	goto 98 <.GJTIE874_0_0_+0xEA : 1e1c698 >			  ## link_layer.c:2010:5
 1e1c636:    08 e0 0a 00       	if (r8 == 0) goto 20 <.GJTIE874_0_0_+0xA0 : 1e1c64e >
 1e1c63a:    48 e0 0a 10       	if (r8 != 4) goto 20 <.GJTIE874_0_0_+0xA4 : 1e1c652 >
 1e1c63e:    28 72             	r8 = 34
 1e1c640:    0a 18             	goto 20 <.GJTIE874_0_0_+0xA8 : 1e1c656 >
 1e1c642:    08 e0 21 00       	if (r8 == 0) goto 66 <.GJTIE874_0_0_+0xDA : 1e1c688 >
 1e1c646:    48 e0 21 10       	if (r8 != 4) goto 66 <.GJTIE874_0_0_+0xDE : 1e1c68c >
 1e1c64a:    28 72             	r8 = 34
 1e1c64c:    21 18             	goto 66 <.GJTIE874_0_0_+0xE2 : 1e1c690 >
 1e1c64e:    08 70             	r8 = 0
 1e1c650:    02 18             	goto 4 <.GJTIE874_0_0_+0xA8 : 1e1c656 >
 1e1c652:    8f f3 c5 36       	call 1994122 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1c656:    c3 5f             	r3 = h[r7 + 56] (u)			  ## ll_events.c:431:5
 1e1c658:    05 f9 15 90       	r5 = b[r9 + 21] (u)			  ## ll_events.c:431:5
 1e1c65c:    92 fc 15 00       	r2 = r9 + 21			  ## ll_events.c:430:17
 1e1c660:    11 70             	r1 = 1			  ## ll_events.c:431:5
 1e1c662:    20 08             	r0 = r2			  ## ll_events.c:431:5
 1e1c664:    bf f3 25 56       	call -86966 <btctler_little_endian_read_16 : 1e072b2 >			  ## ll_events.c:431:5
 1e1c668:    04 08             	r4 = r0			  ## ll_events.c:431:5
 1e1c66a:    31 70             	r1 = 3			  ## ll_events.c:431:5
 1e1c66c:    20 08             	r0 = r2			  ## ll_events.c:431:5
 1e1c66e:    bf f3 20 56       	call -86976 <btctler_little_endian_read_16 : 1e072b2 >			  ## ll_events.c:431:5
 1e1c672:    28 02             	[sp+8] = r0			  ## ll_events.c:431:5
 1e1c674:    1c 02             	[sp+4] = r4			  ## ll_events.c:431:5
 1e1c676:    c1 ff 47 59 e1 01 	r1 = 31545671 <update_target_end+0x2ABF : 1e15947 >			  ## ll_events.c:431:5
 1e1c67c:    c0 70             	r0 = 12			  ## ll_events.c:431:5
 1e1c67e:    0d 02             	[sp] = r5			  ## ll_events.c:431:5
 1e1c680:    82 08             	r2 = r8			  ## ll_events.c:431:5
 1e1c682:    bf f3 ba e5       	call -13452 <hci_send_event : 1e191fa >			  ## ll_events.c:431:5
 1e1c686:    08 18             	goto 16 <.GJTIE874_0_0_+0xEA : 1e1c698 >
 1e1c688:    68 71             	r8 = 22
 1e1c68a:    02 18             	goto 4 <.GJTIE874_0_0_+0xE2 : 1e1c690 >
 1e1c68c:    8f f3 a8 36       	call 1994064 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1c690:    e4 fd 00 18       	r1 = r8.b0 (u)			  ## ll_events.c:301:5
 1e1c694:    40 08             	r0 = r4			  ## ll_events.c:301:5
 1e1c696:    3a 17             	call -396 <ll_disconnect_process : 1e1c50c >			  ## ll_events.c:301:5
 1e1c698:    00 70             	r0 = 0
 1e1c69a:    10 f6 00 a0       	[r10 + 0] = r0			  ## link_layer.c:606:18
 1e1c69e:    02 6e             	r2 = b[r7 + 0] (u)			  ## link_layer.c:608:28
 1e1c6a0:    11 94             	r1 = r2 + 1			  ## link_layer.c:608:91
 1e1c6a2:    42 e0 01 00       	if (r2 == 4) goto 2 <.GJTIE874_0_0_+0xFA : 1e1c6a8 >			  ## link_layer.c:608:91
 1e1c6a6:    10 08             	r0 = r1			  ## link_layer.c:608:21
 1e1c6a8:    08 6e             	b[r7 + 0] = r0			  ## link_layer.c:608:19
 1e1c6aa:    06 0a             	sp += 12			  ## link_layer.c:608:19
 1e1c6ac:    5a 01             	{pc, r10-r4} = [sp++]			  ## link_layer.c:611:1


ll_control_step_verify:
 1e1c6ae:    78 01             	[--sp] = {rets, r8-r4}			  ## link_layer.c:616:0
 1e1c6b0:    14 08             	r4 = r1			  ## link_layer.c:616:0
 1e1c6b2:    01 f9 c0 40       	r1 = b[r4 + 192] (u)			  ## link_layer.c:617:39
 1e1c6b6:    c9 c0             	r1 = r1 << 3			  ## link_layer.c:622:12
 1e1c6b8:    43 b8             	r3 = r4 + r1			  ## link_layer.c:622:12
 1e1c6ba:    01 f6 98 30       	r1 = [r3 + 152]			  ## link_layer.c:622:12
 1e1c6be:    28 08             	r8 = r2			  ## link_layer.c:622:12
 1e1c6c0:    06 08             	r6 = r0
 1e1c6c2:    41 22             	if (r1 == 0) goto 130 <ll_control_step_verify+0x98 : 1e1c746 >
 1e1c6c4:    00 fb 07 40       	r0 = 16391 <ze_entry_tm+0xB5 : 4007 >			  ## link_layer.c:628:9
 1e1c6c8:    06 f2 06 00       	if (r6 == r0) goto 12 <ll_control_step_verify+0x2A : 1e1c6d8 >			  ## link_layer.c:628:9
 1e1c6cc:    60 80             	r0 += 6
 1e1c6ce:    06 f2 1e 00       	if (r6 == r0) goto 60 <ll_control_step_verify+0x60 : 1e1c70e >
 1e1c6d2:    40 80             	r0 += 4
 1e1c6d4:    06 f2 1f 10       	if (r6 != r0) goto 62 <ll_control_step_verify+0x68 : 1e1c716 >
 1e1c6d8:    30 fc 9c 00       	r0 = r3 + 156
 1e1c6dc:    02 60             	r2 = b[r0 + 0] (u)			  ## link_layer.c:638:19
 1e1c6de:    f2 8f             	r2 += -1			  ## link_layer.c:638:19
 1e1c6e0:    03 f9 15 80       	r3 = b[r8 + 21] (u)			  ## link_layer.c:641:13
 1e1c6e4:    0a 60             	b[r0 + 0] = r2			  ## link_layer.c:638:19
 1e1c6e6:    87 04             	r7 = r2.b0 (u)			  ## link_layer.c:639:23
 1e1c6e8:    47 f8 00 17       	r7 = h[r1+r7<<1] (u)			  ## link_layer.c:639:23
 1e1c6ec:    c5 05             	r5 = r7.b0 (u)			  ## link_layer.c:641:23
 1e1c6ee:    53 f2 18 10       	if (r3 != r5) goto 48 <ll_control_step_verify+0x74 : 1e1c722 >			  ## link_layer.c:641:23
 1e1c6f2:    40 08             	r0 = r4			  ## link_layer.c:642:13
 1e1c6f4:    11 14             	call -2014 <ll_response_timeout_stop : 1e1bf18 >			  ## link_layer.c:642:13
 1e1c6f6:    01 fb 07 40       	r1 = 16391 <ze_entry_tm+0xB5 : 4007 >			  ## link_layer.c:484:9
 1e1c6fa:    30 70             	r0 = 3			  ## link_layer.c:484:9
 1e1c6fc:    16 f2 01 00       	if (r6 == r1) goto 2 <ll_control_step_verify+0x54 : 1e1c702 >			  ## link_layer.c:484:9
 1e1c700:    10 70             	r0 = 1			  ## link_layer.c:484:9
 1e1c702:    a1 80             	r1 += 10			  ## link_layer.c:484:9
 1e1c704:    22 70             	r2 = 2			  ## link_layer.c:484:9
 1e1c706:    16 f2 1b 00       	if (r6 == r1) goto 54 <ll_control_step_verify+0x92 : 1e1c740 >			  ## link_layer.c:484:9
 1e1c70a:    02 08             	r2 = r0			  ## link_layer.c:484:9
 1e1c70c:    19 18             	goto 50 <ll_control_step_verify+0x92 : 1e1c740 >			  ## link_layer.c:484:9
 1e1c70e:    40 08             	r0 = r4			  ## link_layer.c:629:9
 1e1c710:    03 14             	call -2042 <ll_response_timeout_stop : 1e1bf18 >			  ## link_layer.c:629:9
 1e1c712:    12 70             	r2 = 1			  ## link_layer.c:630:9
 1e1c714:    15 18             	goto 42 <ll_control_step_verify+0x92 : 1e1c740 >			  ## link_layer.c:630:9
 1e1c716:    02 f9 9c 30       	r2 = b[r3 + 156] (u)
 1e1c71a:    47 f8 00 12       	r7 = h[r1+r2<<1] (u)
 1e1c71e:    30 fc 9c 00       	r0 = r3 + 156
 1e1c722:    67 f2 10 10       	if (r7 != r6) goto 32 <ll_control_step_verify+0x98 : 1e1c746 >
 1e1c726:    12 80             	r2 += 1			  ## link_layer.c:652:19
 1e1c728:    0a 60             	b[r0 + 0] = r2			  ## link_layer.c:652:19
 1e1c72a:    80 04             	r0 = r2.b0 (u)			  ## link_layer.c:656:13
 1e1c72c:    40 c0             	r0 = r0 << 1			  ## link_layer.c:656:13
 1e1c72e:    00 fa 00 10       	r0 = b[r1+r0] (u)			  ## link_layer.c:656:13
 1e1c732:    01 ff ff 00 07 00 	if (r0 != 255) goto 14 <ll_control_step_verify+0x98 : 1e1c746 >			  ## link_layer.c:656:13
 1e1c738:    40 08             	r0 = r4			  ## link_layer.c:658:13
 1e1c73a:    bf f3 ed fb       	call -2086 <ll_response_timeout_stop : 1e1bf18 >			  ## link_layer.c:658:13
 1e1c73e:    02 70             	r2 = 0			  ## link_layer.c:659:13
 1e1c740:    40 08             	r0 = r4
 1e1c742:    81 08             	r1 = r8
 1e1c744:    ff 16             	call -514 <ll_control_procedure_finish : 1e1c544 >
 1e1c746:    58 01             	{pc, r8-r4} = [sp++]			  ## link_layer.c:666:1


ll_send_control_data_state_machine:
 1e1c748:    7b 01             	[--sp] = {rets, r11-r4}			  ## link_layer.c:684:0
 1e1c74a:    e6 0b             	sp += -52			  ## link_layer.c:684:0
 1e1c74c:    04 08             	r4 = r0			  ## link_layer.c:684:0
 1e1c74e:    00 f9 c0 40       	r0 = b[r4 + 192] (u)			  ## link_layer.c:685:39
 1e1c752:    c0 c0             	r0 = r0 << 3			  ## link_layer.c:689:12
 1e1c754:    02 b8             	r2 = r4 + r0			  ## link_layer.c:689:12
 1e1c756:    00 f6 98 20       	r0 = [r2 + 152]			  ## link_layer.c:689:12
 1e1c75a:    19 08             	r9 = r1			  ## link_layer.c:689:12
 1e1c75c:    00 e0 01 01       	if (r0 == 0) goto 514 <ll_send_control_data_state_machine+0x21A : 1e1c962 >
 1e1c760:    01 f9 9c 20       	r1 = b[r2 + 156] (u)			  ## link_layer.c:693:15
 1e1c764:    40 f8 00 01       	r0 = h[r0+r1<<1] (u)			  ## link_layer.c:693:15
 1e1c768:    81 d3             	r1 = r0 >> 14			  ## link_layer.c:696:9
 1e1c76a:    fb 32             	if (r1 != 0) goto 502 <ll_send_control_data_state_machine+0x21A : 1e1c962 >			  ## link_layer.c:696:9
 1e1c76c:    06 04             	r6 = r0.b0 (u)			  ## link_layer.c:2872:13
 1e1c76e:    c7 ff 04 0e 00 00 	r7 = 3588 <hci_param : e04 >			  ## link_layer.c:2872:13
 1e1c774:    cb ff b8 0e 00 00 	r11 = 3768 <le_param : eb8 >			  ## link_layer.c:2872:13
 1e1c77a:    b6 e0 16 c0       	ifs (r6 > 11) goto 44 <ll_send_control_data_state_machine+0x62 : 1e1c7aa >			  ## link_layer.c:2872:5
 1e1c77e:    26 e0 27 00       	if (r6 == 2) goto 78 <ll_send_control_data_state_machine+0x88 : 1e1c7d0 >
 1e1c782:    56 e0 31 00       	if (r6 == 5) goto 98 <ll_send_control_data_state_machine+0xA0 : 1e1c7e8 >
 1e1c786:    86 e0 e8 10       	if (r6 != 8) goto 464 <ll_send_control_data_state_machine+0x212 : 1e1c95a >
 1e1c78a:    00 f7 5c b0       	r0 = h[r11 + 92] (u)			  ## link_layer.c:2093:47
 1e1c78e:    bf f3 8d fb       	call -2278 <ll_link_for_handle : 1e1beac >			  ## link_layer.c:2093:28
 1e1c792:    e3 20             	if (r0 == 0) goto 454 <ll_send_control_data_state_machine+0x212 : 1e1c95a >
 1e1c794:    01 f9 3d 00       	r1 = b[r0 + 61] (u)			  ## link_layer.c:2102:9
 1e1c798:    c2 ff 66 59 e1 01 	r2 = 31545702 <update_target_end+0x2ADE : 1e15966 >			  ## link_layer.c:2102:9
 1e1c79e:    b3 fc 22 00       	r3 = r11 + 34			  ## link_layer.c:2106:9
 1e1c7a2:    11 e0 d8 10       	if (r1 != 1) goto 432 <ll_send_control_data_state_machine+0x20E : 1e1c956 >			  ## link_layer.c:2106:9
 1e1c7a6:    e1 70             	r1 = 14			  ## link_layer.c:2103:9
 1e1c7a8:    d7 18             	goto 430 <ll_send_control_data_state_machine+0x210 : 1e1c958 >			  ## link_layer.c:2103:9
 1e1c7aa:    c6 e0 8f 00       	if (r6 == 12) goto 286 <ll_send_control_data_state_machine+0x184 : 1e1c8cc >
 1e1c7ae:    86 e1 9f 00       	if (r6 == 24) goto 318 <ll_send_control_data_state_machine+0x1A8 : 1e1c8f0 >
 1e1c7b2:    86 e4 d2 10       	if (r6 != 72) goto 420 <ll_send_control_data_state_machine+0x212 : 1e1c95a >
 1e1c7b6:    10 70             	r0 = 1			  ## link_layer.c:2861:12
 1e1c7b8:    15 70             	r5 = 1			  ## link_layer.c:2861:12
 1e1c7ba:    bf f3 77 fb       	call -2322 <ll_link_for_handle : 1e1beac >			  ## link_layer.c:2861:12
 1e1c7be:    9f 20             	if (r0 == 0) goto 318 <ll_send_control_data_state_machine+0x1B6 : 1e1c8fe >
 1e1c7c0:    01 70             	r1 = 0			  ## link_layer.c:2866:5
 1e1c7c2:    19 02             	[sp+4] = r1			  ## link_layer.c:2866:5
 1e1c7c4:    c2 ff 51 59 e1 01 	r2 = 31545681 <update_target_end+0x2AC9 : 1e15951 >			  ## link_layer.c:2866:5
 1e1c7ca:    81 74             	r1 = 72			  ## link_layer.c:2866:5
 1e1c7cc:    f3 70             	r3 = 15			  ## link_layer.c:2866:5
 1e1c7ce:    8e 18             	goto 284 <ll_send_control_data_state_machine+0x1A4 : 1e1c8ec >			  ## link_layer.c:2866:5
 1e1c7d0:    00 f7 9e 70       	r0 = h[r7 + 158] (u)			  ## link_layer.c:2529:47
 1e1c7d4:    bf f3 6a fb       	call -2348 <ll_link_for_handle : 1e1beac >			  ## link_layer.c:2529:28
 1e1c7d8:    c0 20             	if (r0 == 0) goto 384 <ll_send_control_data_state_machine+0x212 : 1e1c95a >
 1e1c7da:    03 f9 a0 70       	r3 = b[r7 + 160] (u)			  ## link_layer.c:2538:55
 1e1c7de:    c2 ff 53 59 e1 01 	r2 = 31545683 <update_target_end+0x2ACB : 1e15953 >			  ## link_layer.c:2538:5
 1e1c7e4:    21 70             	r1 = 2			  ## link_layer.c:2538:5
 1e1c7e6:    b8 18             	goto 368 <ll_send_control_data_state_machine+0x210 : 1e1c958 >			  ## link_layer.c:2538:5
 1e1c7e8:    00 f7 7a b0       	r0 = h[r11 + 122] (u)			  ## link_layer.c:2381:47
 1e1c7ec:    bf f3 5e fb       	call -2372 <ll_link_for_handle : 1e1beac >			  ## link_layer.c:2381:28
 1e1c7f0:    08 08             	r8 = r0			  ## link_layer.c:2381:28
 1e1c7f2:    b3 20             	if (r0 == 0) goto 358 <ll_send_control_data_state_machine+0x212 : 1e1c95a >
 1e1c7f4:    00 fc 2c 01       	r0 = r0 + 300
 1e1c7f8:    31 60             	r1 = b[r0 + 3] (u)			  ## link_layer.c:2393:5
 1e1c7fa:    22 60             	r2 = b[r0 + 2] (u)			  ## link_layer.c:2393:5
 1e1c7fc:    13 60             	r3 = b[r0 + 1] (u)			  ## link_layer.c:2393:5
 1e1c7fe:    07 60             	r7 = b[r0 + 0] (u)			  ## link_layer.c:2393:5
 1e1c800:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## link_layer.c:2393:5
 1e1c804:    c8 fd 40 73       	r7 <= insert(r3, p:8, l:8)			  ## link_layer.c:2393:5
 1e1c808:    d0 fd 80 72       	r7 <= insert(r2, p:16, l:16)			  ## link_layer.c:2393:5
 1e1c80c:    bf 02             	[sp+44] = r7			  ## link_layer.c:2393:5
 1e1c80e:    71 60             	r1 = b[r0 + 7] (u)			  ## link_layer.c:2395:5
 1e1c810:    62 60             	r2 = b[r0 + 6] (u)			  ## link_layer.c:2395:5
 1e1c812:    53 60             	r3 = b[r0 + 5] (u)			  ## link_layer.c:2395:5
 1e1c814:    40 60             	r0 = b[r0 + 4] (u)			  ## link_layer.c:2395:5
 1e1c816:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## link_layer.c:2395:5
 1e1c81a:    c8 fd 40 03       	r0 <= insert(r3, p:8, l:8)			  ## link_layer.c:2395:5
 1e1c81e:    d0 fd 80 02       	r0 <= insert(r2, p:16, l:16)			  ## link_layer.c:2395:5
 1e1c822:    c8 02             	[sp+48] = r0			  ## link_layer.c:2395:5
 1e1c824:    00 f6 00 80       	r0 = [r8 + 0]			  ## link_layer.c:2398:29
 1e1c828:    c2 a2             	r2 = sp + 44			  ## link_layer.c:2398:29
 1e1c82a:    01 70             	r1 = 0			  ## link_layer.c:2398:5
 1e1c82c:    bf f3 34 ec       	call -10136 <le_hw_ioctrl : 1e1a098 >			  ## link_layer.c:2398:5
 1e1c830:    87 fc 0c 01       	r7 = r8 + 268			  ## link_layer.c:2398:5
 1e1c834:    70 6f             	r0 = b[r7 + 23] (u)			  ## link_layer.c:2404:5
 1e1c836:    61 6f             	r1 = b[r7 + 22] (u)			  ## link_layer.c:2404:5
 1e1c838:    52 6f             	r2 = b[r7 + 21] (u)			  ## link_layer.c:2404:5
 1e1c83a:    43 6f             	r3 = b[r7 + 20] (u)			  ## link_layer.c:2404:5
 1e1c83c:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## link_layer.c:2404:5
 1e1c840:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## link_layer.c:2404:5
 1e1c844:    0a f9 11 70       	r10 = b[r7 + 17] (u)			  ## link_layer.c:2404:5
 1e1c848:    32 6f             	r2 = b[r7 + 19] (u)			  ## link_layer.c:2404:5
 1e1c84a:    20 6f             	r0 = b[r7 + 18] (u)			  ## link_layer.c:2404:5
 1e1c84c:    05 6f             	r5 = b[r7 + 16] (u)			  ## link_layer.c:2404:5
 1e1c84e:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## link_layer.c:2404:5
 1e1c852:    4b 02             	[sp+16] = r3			  ## link_layer.c:2404:5
 1e1c854:    c8 fd 40 02       	r0 <= insert(r2, p:8, l:8)			  ## link_layer.c:2404:5
 1e1c858:    c8 fd 40 5a       	r5 <= insert(r10, p:8, l:8)			  ## link_layer.c:2404:5
 1e1c85c:    d0 fd 80 50       	r5 <= insert(r0, p:16, l:16)			  ## link_layer.c:2404:5
 1e1c860:    3d 02             	[sp+12] = r5			  ## link_layer.c:2404:5
 1e1c862:    f0 6f             	r0 = b[r7 + 31] (u)			  ## link_layer.c:2406:5
 1e1c864:    e1 6f             	r1 = b[r7 + 30] (u)			  ## link_layer.c:2406:5
 1e1c866:    d2 6f             	r2 = b[r7 + 29] (u)			  ## link_layer.c:2406:5
 1e1c868:    c3 6f             	r3 = b[r7 + 28] (u)			  ## link_layer.c:2406:5
 1e1c86a:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## link_layer.c:2406:5
 1e1c86e:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## link_layer.c:2406:5
 1e1c872:    0a f9 19 70       	r10 = b[r7 + 25] (u)			  ## link_layer.c:2406:5
 1e1c876:    b2 6f             	r2 = b[r7 + 27] (u)			  ## link_layer.c:2406:5
 1e1c878:    a5 6f             	r5 = b[r7 + 26] (u)			  ## link_layer.c:2406:5
 1e1c87a:    80 6f             	r0 = b[r7 + 24] (u)			  ## link_layer.c:2406:5
 1e1c87c:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## link_layer.c:2406:5
 1e1c880:    6b 02             	[sp+24] = r3			  ## link_layer.c:2406:5
 1e1c882:    c8 fd 40 52       	r5 <= insert(r2, p:8, l:8)			  ## link_layer.c:2406:5
 1e1c886:    c8 fd 40 0a       	r0 <= insert(r10, p:8, l:8)			  ## link_layer.c:2406:5
 1e1c88a:    d0 fd 80 05       	r0 <= insert(r5, p:16, l:16)			  ## link_layer.c:2406:5
 1e1c88e:    58 02             	[sp+20] = r0			  ## link_layer.c:2406:5
 1e1c890:    b1 fc 7c 00       	r1 = r11 + 124			  ## link_layer.c:2407:5
 1e1c894:    02 71             	r2 = 16			  ## link_layer.c:2407:5
 1e1c896:    70 08             	r0 = r7			  ## link_layer.c:2407:5
 1e1c898:    97 f3 24 53       	call 3057224 <memcpy : 106ee4 >			  ## link_layer.c:2407:5
 1e1c89c:    c1 a0             	r1 = sp + 12			  ## link_layer.c:2407:5
 1e1c89e:    c5 a1             	r5 = sp + 28
 1e1c8a0:    70 08             	r0 = r7			  ## link_layer.c:2410:5
 1e1c8a2:    52 08             	r2 = r5			  ## link_layer.c:2410:5
 1e1c8a4:    bf f3 c9 33       	call -104558 <aes128_start : 1e0303a >			  ## link_layer.c:2410:5
 1e1c8a8:    f0 70             	r0 = 15
 1e1c8aa:    81 f9 01 50       	r1 = b[r5 ++= 1] (u)			  ## btcontroller_util.c:117:28
 1e1c8ae:    c2 a0             	r2 = sp + 12
 1e1c8b0:    11 fa 00 20       	b[r2+r0] = r1			  ## btcontroller_util.c:117:26
 1e1c8b4:    f0 8f             	r0 += -1			  ## btcontroller_util.c:116:19
 1e1c8b6:    f0 ef f8 1f       	if (r0 != -1) goto -16 <ll_send_control_data_state_machine+0x162 : 1e1c8aa >			  ## btcontroller_util.c:116:5
 1e1c8ba:    00 f6 00 80       	r0 = [r8 + 0]			  ## link_layer.c:2416:29
 1e1c8be:    c2 a0             	r2 = sp + 12			  ## link_layer.c:2416:29
 1e1c8c0:    11 70             	r1 = 1			  ## link_layer.c:2416:5
 1e1c8c2:    bf f3 e9 eb       	call -10286 <le_hw_ioctrl : 1e1a098 >			  ## link_layer.c:2416:5
 1e1c8c6:    80 08             	r0 = r8			  ## link_layer.c:2424:5
 1e1c8c8:    c7 14             	call -1650 <ll_send_control_data_callback_extend : 1e1c258 >			  ## link_layer.c:2424:5
 1e1c8ca:    47 18             	goto 142 <ll_send_control_data_state_machine+0x212 : 1e1c95a >			  ## link_layer.c:2424:5
 1e1c8cc:    00 f7 9c 70       	r0 = h[r7 + 156] (u)			  ## link_layer.c:2171:47
 1e1c8d0:    bf f3 ec fa       	call -2600 <ll_link_for_handle : 1e1beac >			  ## link_layer.c:2171:28
 1e1c8d4:    42 20             	if (r0 == 0) goto 132 <ll_send_control_data_state_machine+0x212 : 1e1c95a >
 1e1c8d6:    03 f9 32 b0       	r3 = b[r11 + 50] (u)			  ## link_layer.c:2182:26
 1e1c8da:    05 f7 34 b0       	r5 = h[r11 + 52] (u)			  ## link_layer.c:2183:26
 1e1c8de:    01 f7 36 b0       	r1 = h[r11 + 54] (u)			  ## link_layer.c:2184:26
 1e1c8e2:    19 02             	[sp+4] = r1			  ## link_layer.c:2180:5
 1e1c8e4:    c2 ff 49 59 e1 01 	r2 = 31545673 <update_target_end+0x2AC1 : 1e15949 >			  ## link_layer.c:2180:5
 1e1c8ea:    c1 70             	r1 = 12			  ## link_layer.c:2180:5
 1e1c8ec:    0d 02             	[sp] = r5
 1e1c8ee:    34 18             	goto 104 <ll_send_control_data_state_machine+0x210 : 1e1c958 >
 1e1c8f0:    00 59             	r0 = h[r4 + 32] (u)			  ## ll_multiple_phys.c:249:34
 1e1c8f2:    01 f7 90 40       	r1 = h[r4 + 144] (u)			  ## ll_multiple_phys.c:249:34
 1e1c8f6:    09 20             	if (r0 == 0) goto 18 <ll_send_control_data_state_machine+0x1C2 : 1e1c90a >			  ## ll_multiple_phys.c:249:19
 1e1c8f8:    05 fe 06 09       	r5 = r0 * 6			  ## ll_multiple_phys.c:249:65
 1e1c8fc:    0c 18             	goto 24 <ll_send_control_data_state_machine+0x1CE : 1e1c916 >			  ## ll_multiple_phys.c:249:65
 1e1c8fe:    c0 ff 06 59 e1 01 	r0 = 31545606 <update_target_end+0x2A7E : 1e15906 >			  ## link_layer.c:2863:9
 1e1c904:    bf f3 37 95       	call -54674 <puts : 1e0f376 >			  ## link_layer.c:2863:9
 1e1c908:    28 18             	goto 80 <ll_send_control_data_state_machine+0x212 : 1e1c95a >			  ## link_layer.c:2863:9
 1e1c90a:    c0 ff 00 3b 1e 00 	r0 = 1981184 <uECC_vli_cmp_unsafe+0xDCB04 : 1e3b00 >			  ## ll_multiple_phys.c:249:129
 1e1c910:    00 40             	r0 = [r0 + 0]			  ## ll_multiple_phys.c:249:129
 1e1c912:    25 fd 03 09       	r5 = r0 & 3			  ## ll_multiple_phys.c:249:134
 1e1c916:    03 f9 87 41       	r3 = b[r4 + 391] (u)
 1e1c91a:    02 f9 86 41       	r2 = b[r4 + 390] (u)			  ## ll_multiple_phys.c:121:31
 1e1c91e:    e0 fd 30 02       	r0 = r2 | r3			  ## ll_multiple_phys.c:121:43
 1e1c922:    51 09             	r1 += r5			  ## ll_multiple_phys.c:121:43
 1e1c924:    67 92             	r7 = r1 + 6			  ## ll_multiple_phys.c:121:43
 1e1c926:    01 70             	r1 = 0			  ## ll_multiple_phys.c:121:43
 1e1c928:    05 70             	r5 = 0			  ## ll_multiple_phys.c:257:9
 1e1c92a:    01 20             	if (r0 == 0) goto 2 <ll_send_control_data_state_machine+0x1E6 : 1e1c92e >			  ## ll_multiple_phys.c:257:9
 1e1c92c:    75 08             	r5 = r7			  ## ll_multiple_phys.c:257:9
 1e1c92e:    67 05             	r7 = r5.l (u)			  ## ll_multiple_phys.c:271:35
 1e1c930:    15 f7 fa 40       	h[r4 + 250] = r5			  ## ll_multiple_phys.c:265:19
 1e1c934:    2f 02             	[sp+8] = r7			  ## ll_multiple_phys.c:267:5
 1e1c936:    05 70             	r5 = 0			  ## ll_multiple_phys.c:270:35
 1e1c938:    01 20             	if (r0 == 0) goto 2 <ll_send_control_data_state_machine+0x1F4 : 1e1c93c >			  ## ll_multiple_phys.c:270:35
 1e1c93a:    35 08             	r5 = r3			  ## ll_multiple_phys.c:270:35
 1e1c93c:    1d 02             	[sp+4] = r5			  ## ll_multiple_phys.c:267:5
 1e1c93e:    0a 02             	[sp] = r2			  ## ll_multiple_phys.c:267:5
 1e1c940:    03 20             	if (r0 == 0) goto 6 <ll_send_control_data_state_machine+0x200 : 1e1c948 >			  ## ll_multiple_phys.c:267:5
 1e1c942:    c1 ff a8 d4 e1 01 	r1 = 31577256 <__master_ll_send_phy_update_ind_callback : 1e1d4a8 >			  ## ll_multiple_phys.c:257:9
 1e1c948:    c3 ff 5c 59 e1 01 	r3 = 31545692 <update_target_end+0x2AD4 : 1e1595c >			  ## ll_multiple_phys.c:267:5
 1e1c94e:    82 71             	r2 = 24			  ## ll_multiple_phys.c:267:5
 1e1c950:    40 08             	r0 = r4			  ## ll_multiple_phys.c:267:5
 1e1c952:    98 14             	call -1744 <ll_send_control_data_callback : 1e1c284 >			  ## ll_multiple_phys.c:267:5
 1e1c954:    02 18             	goto 4 <ll_send_control_data_state_machine+0x212 : 1e1c95a >
 1e1c956:    81 70             	r1 = 8			  ## link_layer.c:2106:9
 1e1c958:    57 14             	call -1874 <ll_send_control_data : 1e1c208 >
 1e1c95a:    60 08             	r0 = r6			  ## link_layer.c:709:5
 1e1c95c:    41 08             	r1 = r4			  ## link_layer.c:709:5
 1e1c95e:    92 08             	r2 = r9			  ## link_layer.c:709:5
 1e1c960:    a6 16             	call -692 <ll_control_step_verify : 1e1c6ae >			  ## link_layer.c:709:5
 1e1c962:    1a 0a             	sp += 52
 1e1c964:    5b 01             	{pc, r11-r4} = [sp++]			  ## link_layer.c:710:1


ll_control_data_step_start:
 1e1c966:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:714:0
 1e1c968:    02 fc c1 00       	r2 = r0 + 193			  ## link_layer.c:714:0
 1e1c96c:    03 64             	r3 = b[r2 + 0] (u)			  ## link_layer.c:715:39
 1e1c96e:    db c0             	r3 = r3 << 3			  ## link_layer.c:717:8
 1e1c970:    03 09             	r3 += r0			  ## link_layer.c:717:8
 1e1c972:    11 f6 98 30       	[r3 + 152] = r1			  ## link_layer.c:717:18
 1e1c976:    01 70             	r1 = 0			  ## link_layer.c:717:18
 1e1c978:    11 f9 9c 30       	b[r3 + 156] = r1			  ## link_layer.c:718:16
 1e1c97c:    04 64             	r4 = b[r2 + 0] (u)			  ## link_layer.c:720:28
 1e1c97e:    13 98             	r3 = r4 + 1			  ## link_layer.c:720:91
 1e1c980:    44 e0 01 00       	if (r4 == 4) goto 2 <ll_control_data_step_start+0x20 : 1e1c986 >			  ## link_layer.c:720:91
 1e1c984:    31 08             	r1 = r3			  ## link_layer.c:720:21
 1e1c986:    09 64             	b[r2 + 0] = r1			  ## link_layer.c:720:19
 1e1c988:    01 70             	r1 = 0			  ## link_layer.c:731:5
 1e1c98a:    14 01             	{rets, r4} = [sp++]			  ## link_layer.c:731:5
 1e1c98c:    dd 1e             	goto -582 <ll_send_control_data_state_machine : 1e1c748 >			  ## link_layer.c:731:5


ll_response_timeout_start:
 1e1c98e:    75 01             	[--sp] = {rets, r5, r4}			  ## link_layer.c:1466:0
 1e1c990:    04 08             	r4 = r0			  ## link_layer.c:1466:0
 1e1c992:    45 fc 4c 01       	r5 = r4 + 332			  ## link_layer.c:1466:0
 1e1c996:    00 4a             	r0 = [r5 + 0]			  ## link_layer.c:1468:15
 1e1c998:    03 20             	if (r0 == 0) goto 6 <ll_response_timeout_start+0x12 : 1e1c9a0 >			  ## link_layer.c:1468:15
 1e1c99a:    40 08             	r0 = r4			  ## link_layer.c:1470:9
 1e1c99c:    bf f3 bc fa       	call -2696 <ll_response_timeout_stop : 1e1bf18 >			  ## link_layer.c:1470:9
 1e1c9a0:    c0 ff 40 9c 00 00 	r0 = 40000 <BTCTLER_CODE_TOTAL+0xF24 : 9c40 >			  ## link_layer.c:1472:30
 1e1c9a6:    c1 ff f6 d1 e1 01 	r1 = 31576566 <ll_response_timeout_handler : 1e1d1f6 >			  ## link_layer.c:1472:30
 1e1c9ac:    bf f3 cf 54       	call -87650 <sys_timer_register : 1e0734e >			  ## link_layer.c:1472:30
 1e1c9b0:    08 4a             	[r5 + 0] = r0			  ## link_layer.c:1472:28
 1e1c9b2:    03 30             	if (r0 != 0) goto 6 <ll_response_timeout_start+0x2C : 1e1c9ba >			  ## link_layer.c:1472:28
 1e1c9b4:    8f f3 14 35       	call 1993256 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1c9b8:    00 4a             	r0 = [r5 + 0]			  ## cpu.h:148:5
 1e1c9ba:    41 08             	r1 = r4			  ## link_layer.c:1476:5
 1e1c9bc:    15 01             	{rets, r5, r4} = [sp++]			  ## link_layer.c:1476:5
 1e1c9be:    ff f3 ca 54       	goto -87660 <sys_timer_set_context : 1e07356 >			  ## link_layer.c:1476:5


ll_push_control_data:
 1e1c9c2:    77 01             	[--sp] = {rets, r7-r4}			  ## link_layer.c:2762:0
 1e1c9c4:    32 fd fc 0a       	r2 = r0 & 4294902783			  ## link_layer.c:2766:16
 1e1c9c8:    23 fd fc 0a       	r3 = r0 & 64512			  ## link_layer.c:2765:24
 1e1c9cc:    14 08             	r4 = r1			  ## link_layer.c:2765:24
 1e1c9ce:    21 08             	r1 = r2			  ## link_layer.c:2765:9
 1e1c9d0:    20 ff 20 3a 01 00 	if (r3 == 8192) goto 2 <ll_push_control_data+0x16 : 1e1c9d8 >			  ## link_layer.c:2765:9
 1e1c9d6:    01 08             	r1 = r0			  ## link_layer.c:2765:9
 1e1c9d8:    20 fd fc 1a       	r0 = r1 & 64512			  ## link_layer.c:2769:24
 1e1c9dc:    20 ff f8 0a 01 00 	if (r0 == 63488) goto 2 <ll_push_control_data+0x22 : 1e1c9e4 >
 1e1c9e2:    12 08             	r2 = r1			  ## link_layer.c:2769:9
 1e1c9e4:    15 70             	r5 = 1
 1e1c9e6:    c6 ff 53 59 e1 01 	r6 = 31545683 <update_target_end+0x2ACB : 1e15953 >
 1e1c9ec:    0c ff 82 20 20 00 	ifs (r2 > 130) goto 64 <.GJTIE882_0_0_+0x22 : 1e1ca32 >			  ## link_layer.c:2773:5
 1e1c9f2:    20 fc ea ff       	r0 = r2 + -22
 1e1c9f6:    50 e0 d1 80       	if (r0 > 5) goto 418 <.GJTIE882_0_0_+0x18C : 1e1cb9c >
 1e1c9fa:    41 c0             	r1 = r0 << 1
 1e1c9fc:    c7 ff b8 0e 00 00 	r7 = 3768 <le_param : eb8 >
 1e1ca02:    b1 00             	tbh [r1]


.GJTIL882_0_0_:
 1e1ca04:    06 00     < 6 : 0x6 >
 1e1ca06:    cc 00     < 204 : 0xCC >
 1e1ca08:    cc 00     < 204 : 0xCC >
 1e1ca0a:    46 00     < 70 : 0x46 >
 1e1ca0c:    63 00     < 99 : 0x63 >
 1e1ca0e:    7e 00     < 126 : 0x7E >
 1e1ca10:    10 68             	r0 = b[r4 + 1] (u)			  ## link_layer.c:2134:54
 1e1ca12:    04 68             	r4 = b[r4 + 0] (u)			  ## link_layer.c:2134:54
 1e1ca14:    c8 fd 40 40       	r4 <= insert(r0, p:8, l:8)			  ## link_layer.c:2134:54
 1e1ca18:    40 08             	r0 = r4			  ## link_layer.c:2134:28
 1e1ca1a:    bf f3 47 fa       	call -2930 <ll_link_for_handle : 1e1beac >			  ## link_layer.c:2134:28
 1e1ca1e:    ae 20             	if (r0 == 0) goto 348 <.GJTIE882_0_0_+0x16C : 1e1cb7c >
 1e1ca20:    14 f7 5c 70       	h[r7 + 92] = r4			  ## link_layer.c:2143:5
 1e1ca24:    01 f9 3d 00       	r1 = b[r0 + 61] (u)			  ## link_layer.c:2145:9
 1e1ca28:    11 e0 aa 10       	if (r1 != 1) goto 340 <.GJTIE882_0_0_+0x170 : 1e1cb80 >			  ## link_layer.c:2145:9
 1e1ca2c:    8f f3 d8 34       	call 1993136 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1ca30:    b4 18             	goto 360 <.GJTIE882_0_0_+0x18A : 1e1cb9a >
 1e1ca32:    0c ff 05 24 10 00 	ifs (r2 > 1029) goto 32 <.GJTIE882_0_0_+0x48 : 1e1ca58 >
 1e1ca38:    00 ff 83 20 73 00 	if (r2 == 131) goto 230 <.GJTIE882_0_0_+0x114 : 1e1cb24 >
 1e1ca3e:    01 ff 84 20 ac 00 	if (r2 != 132) goto 344 <.GJTIE882_0_0_+0x18C : 1e1cb9c >
 1e1ca44:    00 58             	r0 = h[r4 + 0] (u)			  ## link_layer.c:2750:31
 1e1ca46:    bf f3 31 fa       	call -2974 <ll_link_for_handle : 1e1beac >			  ## link_layer.c:2750:12
 1e1ca4a:    98 20             	if (r0 == 0) goto 304 <.GJTIE882_0_0_+0x16C : 1e1cb7c >
 1e1ca4c:    12 58             	r2 = h[r4 + 2] (u)			  ## link_layer.c:2755:55
 1e1ca4e:    00 40             	r0 = [r0 + 0]			  ## link_layer.c:2755:29
 1e1ca50:    71 71             	r1 = 23			  ## link_layer.c:2755:5
 1e1ca52:    bf f3 21 eb       	call -10686 <le_hw_ioctrl : 1e1a098 >			  ## link_layer.c:2755:5
 1e1ca56:    a1 18             	goto 322 <.GJTIE882_0_0_+0x18A : 1e1cb9a >			  ## link_layer.c:2755:5
 1e1ca58:    c7 ff 04 0e 00 00 	r7 = 3588 <hci_param : e04 >
 1e1ca5e:    00 ff 06 24 70 00 	if (r2 == 1030) goto 224 <.GJTIE882_0_0_+0x134 : 1e1cb44 >
 1e1ca64:    01 ff 1d 24 99 00 	if (r2 != 1053) goto 306 <.GJTIE882_0_0_+0x18C : 1e1cb9c >
 1e1ca6a:    11 68             	r1 = b[r4 + 1] (u)			  ## link_layer.c:2198:47
 1e1ca6c:    00 68             	r0 = b[r4 + 0] (u)			  ## link_layer.c:2198:47
 1e1ca6e:    c8 fd 40 01       	r0 <= insert(r1, p:8, l:8)			  ## link_layer.c:2198:47
 1e1ca72:    bf f3 1b fa       	call -3018 <ll_link_for_handle : 1e1beac >			  ## link_layer.c:2198:28
 1e1ca76:    05 08             	r5 = r0			  ## link_layer.c:2198:28
 1e1ca78:    81 2a             	if (r5 == 0) goto 258 <.GJTIE882_0_0_+0x16C : 1e1cb7c >
 1e1ca7a:    89 17             	call -238 <ll_response_timeout_start : 1e1c98e >			  ## link_layer.c:2207:5
 1e1ca7c:    10 68             	r0 = b[r4 + 1] (u)			  ## link_layer.c:2209:5
 1e1ca7e:    01 68             	r1 = b[r4 + 0] (u)			  ## link_layer.c:2209:5
 1e1ca80:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## link_layer.c:2209:5
 1e1ca84:    11 f7 9c 70       	h[r7 + 156] = r1			  ## link_layer.c:2209:5
 1e1ca88:    c1 ff 5e be e1 01 	r1 = 31571550 <version_ind_steps : 1e1be5e >			  ## link_layer.c:2211:5
 1e1ca8e:    83 18             	goto 262 <.GJTIE882_0_0_+0x186 : 1e1cb96 >			  ## link_layer.c:2211:5
 1e1ca90:    11 68             	r1 = b[r4 + 1] (u)			  ## link_layer.c:2340:47
 1e1ca92:    00 68             	r0 = b[r4 + 0] (u)			  ## link_layer.c:2340:47
 1e1ca94:    c8 fd 40 01       	r0 <= insert(r1, p:8, l:8)			  ## link_layer.c:2340:47
 1e1ca98:    bf f3 08 fa       	call -3056 <ll_link_for_handle : 1e1beac >			  ## link_layer.c:2340:28
 1e1ca9c:    05 08             	r5 = r0			  ## link_layer.c:2340:28
 1e1ca9e:    6e 2a             	if (r5 == 0) goto 220 <.GJTIE882_0_0_+0x16C : 1e1cb7c >
 1e1caa0:    00 f9 3d 50       	r0 = b[r5 + 61] (u)
 1e1caa4:    10 e0 02 10       	if (r0 != 1) goto 4 <.GJTIE882_0_0_+0x9C : 1e1caac >
 1e1caa8:    8f f3 9a 34       	call 1993012 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1caac:    70 fc 5e 00       	r0 = r7 + 94			  ## link_layer.c:2351:5
 1e1cab0:    c2 71             	r2 = 28			  ## link_layer.c:2351:5
 1e1cab2:    41 08             	r1 = r4			  ## link_layer.c:2351:5
 1e1cab4:    97 f3 16 52       	call 3056684 <memcpy : 106ee4 >			  ## link_layer.c:2351:5
 1e1cab8:    50 08             	r0 = r5			  ## link_layer.c:2353:5
 1e1caba:    69 17             	call -302 <ll_response_timeout_start : 1e1c98e >			  ## link_layer.c:2353:5
 1e1cabc:    00 f9 93 50       	r0 = b[r5 + 147] (u)			  ## link_layer.c:2355:9
 1e1cac0:    63 20             	if (r0 == 0) goto 198 <.GJTIE882_0_0_+0x178 : 1e1cb88 >			  ## link_layer.c:2355:9
 1e1cac2:    c1 ff 64 be e1 01 	r1 = 31571556 <restart_encryption_steps : 1e1be64 >			  ## link_layer.c:2356:9
 1e1cac8:    66 18             	goto 204 <.GJTIE882_0_0_+0x186 : 1e1cb96 >			  ## link_layer.c:2356:9
 1e1caca:    11 68             	r1 = b[r4 + 1] (u)			  ## link_layer.c:2454:47
 1e1cacc:    00 68             	r0 = b[r4 + 0] (u)			  ## link_layer.c:2454:47
 1e1cace:    c8 fd 40 01       	r0 <= insert(r1, p:8, l:8)			  ## link_layer.c:2454:47
 1e1cad2:    bf f3 eb f9       	call -3114 <ll_link_for_handle : 1e1beac >			  ## link_layer.c:2454:28
 1e1cad6:    05 08             	r5 = r0			  ## link_layer.c:2454:28
 1e1cad8:    51 2a             	if (r5 == 0) goto 162 <.GJTIE882_0_0_+0x16C : 1e1cb7c >
 1e1cada:    00 f9 3d 50       	r0 = b[r5 + 61] (u)
 1e1cade:    10 e0 02 00       	if (r0 == 1) goto 4 <.GJTIE882_0_0_+0xD6 : 1e1cae6 >
 1e1cae2:    8f f3 7d 34       	call 1992954 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1cae6:    70 fc 7a 00       	r0 = r7 + 122			  ## link_layer.c:2467:5
 1e1caea:    22 71             	r2 = 18			  ## link_layer.c:2467:5
 1e1caec:    41 08             	r1 = r4			  ## link_layer.c:2467:5
 1e1caee:    97 f3 f9 51       	call 3056626 <memcpy : 106ee4 >			  ## link_layer.c:2467:5
 1e1caf2:    00 f9 93 50       	r0 = b[r5 + 147] (u)			  ## link_layer.c:2469:9
 1e1caf6:    4c 20             	if (r0 == 0) goto 152 <.GJTIE882_0_0_+0x180 : 1e1cb90 >			  ## link_layer.c:2469:9
 1e1caf8:    c1 ff 84 be e1 01 	r1 = 31571588 <restart_encryption_req_steps : 1e1be84 >			  ## link_layer.c:2470:9
 1e1cafe:    4b 18             	goto 150 <.GJTIE882_0_0_+0x186 : 1e1cb96 >			  ## link_layer.c:2470:9
 1e1cb00:    11 68             	r1 = b[r4 + 1] (u)			  ## link_layer.c:2493:47
 1e1cb02:    00 68             	r0 = b[r4 + 0] (u)			  ## link_layer.c:2493:47
 1e1cb04:    c8 fd 40 01       	r0 <= insert(r1, p:8, l:8)			  ## link_layer.c:2493:47
 1e1cb08:    bf f3 d0 f9       	call -3168 <ll_link_for_handle : 1e1beac >			  ## link_layer.c:2493:28
 1e1cb0c:    02 08             	r2 = r0			  ## link_layer.c:2493:28
 1e1cb0e:    36 24             	if (r2 == 0) goto 108 <.GJTIE882_0_0_+0x16C : 1e1cb7c >
 1e1cb10:    00 f9 3d 20       	r0 = b[r2 + 61] (u)
 1e1cb14:    10 e0 02 00       	if (r0 == 1) goto 4 <.GJTIE882_0_0_+0x10C : 1e1cb1c >
 1e1cb18:    8f f3 62 34       	call 1992900 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1cb1c:    d1 70             	r1 = 13			  ## link_layer.c:2504:5
 1e1cb1e:    63 70             	r3 = 6			  ## link_layer.c:2504:5
 1e1cb20:    20 08             	r0 = r2			  ## link_layer.c:2504:5
 1e1cb22:    0c 18             	goto 24 <.GJTIE882_0_0_+0x12C : 1e1cb3c >			  ## link_layer.c:2504:5
 1e1cb24:    02 38             	if (r4 != 0) goto 4 <.GJTIE882_0_0_+0x11A : 1e1cb2a >
 1e1cb26:    8f f3 5b 34       	call 1992886 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1cb2a:    11 68             	r1 = b[r4 + 1] (u)			  ## link_layer.c:2724:31
 1e1cb2c:    00 68             	r0 = b[r4 + 0] (u)			  ## link_layer.c:2724:31
 1e1cb2e:    c8 fd 40 01       	r0 <= insert(r1, p:8, l:8)			  ## link_layer.c:2724:31
 1e1cb32:    bf f3 bb f9       	call -3210 <ll_link_for_handle : 1e1beac >			  ## link_layer.c:2724:12
 1e1cb36:    22 20             	if (r0 == 0) goto 68 <.GJTIE882_0_0_+0x16C : 1e1cb7c >
 1e1cb38:    23 68             	r3 = b[r4 + 2] (u)			  ## link_layer.c:2731:61
 1e1cb3a:    41 74             	r1 = 68			  ## link_layer.c:2731:5
 1e1cb3c:    62 08             	r2 = r6
 1e1cb3e:    bf f3 63 fb       	call -2362 <ll_send_control_data : 1e1c208 >
 1e1cb42:    2b 18             	goto 86 <.GJTIE882_0_0_+0x18A : 1e1cb9a >
 1e1cb44:    11 68             	r1 = b[r4 + 1] (u)			  ## link_layer.c:2557:47
 1e1cb46:    00 68             	r0 = b[r4 + 0] (u)			  ## link_layer.c:2557:47
 1e1cb48:    c8 fd 40 01       	r0 <= insert(r1, p:8, l:8)			  ## link_layer.c:2557:47
 1e1cb4c:    bf f3 ae f9       	call -3236 <ll_link_for_handle : 1e1beac >			  ## link_layer.c:2557:28
 1e1cb50:    06 08             	r6 = r0			  ## link_layer.c:2557:28
 1e1cb52:    14 2c             	if (r6 == 0) goto 40 <.GJTIE882_0_0_+0x16C : 1e1cb7c >
 1e1cb54:    00 f9 3c 60       	r0 = b[r6 + 60] (u)			  ## link_layer.c:2566:9
 1e1cb58:    70 b0             	r0 &= 4294967294			  ## link_layer.c:2566:9
 1e1cb5a:    05 70             	r5 = 0			  ## link_layer.c:2566:9
 1e1cb5c:    60 e0 1e 10       	if (r0 != 6) goto 60 <.GJTIE882_0_0_+0x18C : 1e1cb9c >			  ## link_layer.c:2566:9
 1e1cb60:    60 08             	r0 = r6			  ## link_layer.c:2567:9
 1e1cb62:    15 17             	call -470 <ll_response_timeout_start : 1e1c98e >			  ## link_layer.c:2567:9
 1e1cb64:    70 fc 9e 00       	r0 = r7 + 158			  ## link_layer.c:2569:9
 1e1cb68:    32 70             	r2 = 3			  ## link_layer.c:2569:9
 1e1cb6a:    41 08             	r1 = r4			  ## link_layer.c:2569:9
 1e1cb6c:    97 f3 ba 51       	call 3056500 <memcpy : 106ee4 >			  ## link_layer.c:2569:9
 1e1cb70:    c1 ff 52 be e1 01 	r1 = 31571538 <disconnect_steps : 1e1be52 >			  ## link_layer.c:2571:9
 1e1cb76:    60 08             	r0 = r6			  ## link_layer.c:2571:9
 1e1cb78:    f6 16             	call -532 <ll_control_data_step_start : 1e1c966 >			  ## link_layer.c:2571:9
 1e1cb7a:    10 18             	goto 32 <.GJTIE882_0_0_+0x18C : 1e1cb9c >			  ## link_layer.c:2571:9
 1e1cb7c:    25 70             	r5 = 2
 1e1cb7e:    0e 18             	goto 28 <.GJTIE882_0_0_+0x18C : 1e1cb9c >
 1e1cb80:    c1 ff 4c be e1 01 	r1 = 31571532 <master_features_exchange_steps : 1e1be4c >			  ## link_layer.c:2152:9
 1e1cb86:    08 18             	goto 16 <.GJTIE882_0_0_+0x188 : 1e1cb98 >			  ## link_layer.c:2152:9
 1e1cb88:    c1 ff 78 be e1 01 	r1 = 31571576 <start_encryption_steps : 1e1be78 >			  ## link_layer.c:2358:9
 1e1cb8e:    03 18             	goto 6 <.GJTIE882_0_0_+0x186 : 1e1cb96 >			  ## link_layer.c:2358:9
 1e1cb90:    c1 ff 8c be e1 01 	r1 = 31571596 <start_encryption_req_steps : 1e1be8c >			  ## link_layer.c:2472:9
 1e1cb96:    50 08             	r0 = r5
 1e1cb98:    e6 16             	call -564 <ll_control_data_step_start : 1e1c966 >
 1e1cb9a:    05 70             	r5 = 0
 1e1cb9c:    50 08             	r0 = r5			  ## link_layer.c:2846:1
 1e1cb9e:    57 01             	{pc, r7-r4} = [sp++]			  ## link_layer.c:2846:1


ll_adv_init:
 1e1cba0:    74 01             	[--sp] = {rets, r4}			  ## ll_adv.c:53:0
 1e1cba2:    c4 ff ac 0e 00 00 	r4 = 3756 <adv_hdl : eac >			  ## ll_adv.c:53:0
 1e1cba8:    00 48             	r0 = [r4 + 0]			  ## ll_adv.c:54:9
 1e1cbaa:    07 30             	if (r0 != 0) goto 14 <ll_adv_init+0x1A : 1e1cbba >			  ## ll_adv.c:54:9
 1e1cbac:    80 72             	r0 = 40			  ## ll_adv.c:61:14
 1e1cbae:    bf f3 c6 53       	call -88180 <__bt_malloc : 1e0733e >			  ## ll_adv.c:61:14
 1e1cbb2:    08 48             	[r4 + 0] = r0			  ## ll_adv.c:61:12
 1e1cbb4:    02 30             	if (r0 != 0) goto 4 <ll_adv_init+0x1A : 1e1cbba >			  ## ll_adv.c:61:12
 1e1cbb6:    8f f3 13 34       	call 1992742 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1cbba:    54 01             	{pc, r4} = [sp++]			  ## ll_adv.c:64:1


ll_adv_set_params:
 1e1cbbc:    75 01             	[--sp] = {rets, r5, r4}			  ## ll_adv.c:592:0
 1e1cbbe:    c5 ff ac 0e 00 00 	r5 = 3756 <adv_hdl : eac >			  ## ll_adv.c:592:0
 1e1cbc4:    01 4a             	r1 = [r5 + 0]			  ## ll_adv.c:597:9
 1e1cbc6:    04 08             	r4 = r0			  ## ll_adv.c:597:9
 1e1cbc8:    02 32             	if (r1 != 0) goto 4 <ll_adv_set_params+0x12 : 1e1cbce >			  ## ll_adv.c:597:9
 1e1cbca:    ea 17             	call -44 <ll_adv_init : 1e1cba0 >			  ## ll_adv.c:598:9
 1e1cbcc:    01 4a             	r1 = [r5 + 0]			  ## ll_adv.c:598:9
 1e1cbce:    00 62             	r0 = b[r1 + 0] (u)			  ## ll_adv.c:604:17
 1e1cbd0:    07 30             	if (r0 != 0) goto 14 <ll_adv_set_params+0x24 : 1e1cbe0 >			  ## ll_adv.c:604:17
 1e1cbd2:    c0 ff 34 2d 00 00 	r0 = 11572 <adv_param : 2d34 >			  ## ll_adv.c:609:5
 1e1cbd8:    f2 70             	r2 = 15			  ## ll_adv.c:609:5
 1e1cbda:    41 08             	r1 = r4			  ## ll_adv.c:609:5
 1e1cbdc:    97 f3 82 51       	call 3056388 <memcpy : 106ee4 >			  ## ll_adv.c:609:5
 1e1cbe0:    55 01             	{pc, r5, r4} = [sp++]


ll_adv_set_adv_data:
 1e1cbe2:    76 01             	[--sp] = {rets, r6-r4}			  ## ll_adv.c:617:0
 1e1cbe4:    c5 ff ac 0e 00 00 	r5 = 3756 <adv_hdl : eac >			  ## ll_adv.c:617:0
 1e1cbea:    01 4a             	r1 = [r5 + 0]			  ## ll_adv.c:622:9
 1e1cbec:    04 08             	r4 = r0			  ## ll_adv.c:622:9
 1e1cbee:    02 32             	if (r1 != 0) goto 4 <ll_adv_set_adv_data+0x12 : 1e1cbf4 >			  ## ll_adv.c:622:9
 1e1cbf0:    d7 17             	call -82 <ll_adv_init : 1e1cba0 >			  ## ll_adv.c:623:9
 1e1cbf2:    01 4a             	r1 = [r5 + 0]			  ## ll_adv.c:623:9
 1e1cbf4:    16 42             	r6 = [r1 + 4]			  ## ll_adv.c:626:44
 1e1cbf6:    c5 ff 43 2d 00 00 	r5 = 11587 <adv_data : 2d43 >
 1e1cbfc:    01 70             	r1 = 0			  ## ll_adv.c:628:5
 1e1cbfe:    02 72             	r2 = 32			  ## ll_adv.c:628:5
 1e1cc00:    50 08             	r0 = r5			  ## ll_adv.c:628:5
 1e1cc02:    97 f3 75 51       	call 3056362 <memset : 106ef0 >			  ## ll_adv.c:628:5
 1e1cc06:    00 68             	r0 = b[r4 + 0] (u)			  ## ll_adv.c:629:23
 1e1cc08:    90 f9 01 50       	b[r5 ++= 1] = r0			  ## ll_adv.c:629:21
 1e1cc0c:    02 68             	r2 = b[r4 + 0] (u)			  ## ll_adv.c:630:44
 1e1cc0e:    11 98             	r1 = r4 + 1			  ## ll_adv.c:630:35
 1e1cc10:    50 08             	r0 = r5			  ## ll_adv.c:630:5
 1e1cc12:    97 f3 67 51       	call 3056334 <memcpy : 106ee4 >			  ## ll_adv.c:630:5
 1e1cc16:    06 2c             	if (r6 == 0) goto 12 <ll_adv_set_adv_data+0x42 : 1e1cc24 >			  ## ll_adv.c:630:5
 1e1cc18:    00 4c             	r0 = [r6 + 0]			  ## ll_adv.c:636:31
 1e1cc1a:    04 20             	if (r0 == 0) goto 8 <ll_adv_set_adv_data+0x42 : 1e1cc24 >			  ## ll_adv.c:636:31
 1e1cc1c:    51 71             	r1 = 21			  ## ll_adv.c:637:9
 1e1cc1e:    42 08             	r2 = r4			  ## ll_adv.c:637:9
 1e1cc20:    bf f3 3a ea       	call -11148 <le_hw_ioctrl : 1e1a098 >			  ## ll_adv.c:637:9
 1e1cc24:    56 01             	{pc, r6-r4} = [sp++]


ll_adv_set_scan_rsp_data:
 1e1cc26:    76 01             	[--sp] = {rets, r6-r4}			  ## ll_adv.c:643:0
 1e1cc28:    c5 ff ac 0e 00 00 	r5 = 3756 <adv_hdl : eac >			  ## ll_adv.c:643:0
 1e1cc2e:    01 4a             	r1 = [r5 + 0]			  ## ll_adv.c:648:9
 1e1cc30:    04 08             	r4 = r0			  ## ll_adv.c:648:9
 1e1cc32:    02 32             	if (r1 != 0) goto 4 <ll_adv_set_scan_rsp_data+0x12 : 1e1cc38 >			  ## ll_adv.c:648:9
 1e1cc34:    b5 17             	call -150 <ll_adv_init : 1e1cba0 >			  ## ll_adv.c:649:9
 1e1cc36:    01 4a             	r1 = [r5 + 0]			  ## ll_adv.c:649:9
 1e1cc38:    16 42             	r6 = [r1 + 4]			  ## ll_adv.c:652:44
 1e1cc3a:    c5 ff 63 2d 00 00 	r5 = 11619 <scan_resp_data : 2d63 >
 1e1cc40:    01 70             	r1 = 0			  ## ll_adv.c:654:5
 1e1cc42:    02 72             	r2 = 32			  ## ll_adv.c:654:5
 1e1cc44:    50 08             	r0 = r5			  ## ll_adv.c:654:5
 1e1cc46:    97 f3 53 51       	call 3056294 <memset : 106ef0 >			  ## ll_adv.c:654:5
 1e1cc4a:    00 68             	r0 = b[r4 + 0] (u)			  ## ll_adv.c:655:29
 1e1cc4c:    90 f9 01 50       	b[r5 ++= 1] = r0			  ## ll_adv.c:655:27
 1e1cc50:    02 68             	r2 = b[r4 + 0] (u)			  ## ll_adv.c:656:50
 1e1cc52:    11 98             	r1 = r4 + 1			  ## ll_adv.c:656:41
 1e1cc54:    50 08             	r0 = r5			  ## ll_adv.c:656:5
 1e1cc56:    97 f3 45 51       	call 3056266 <memcpy : 106ee4 >			  ## ll_adv.c:656:5
 1e1cc5a:    06 2c             	if (r6 == 0) goto 12 <ll_adv_set_scan_rsp_data+0x42 : 1e1cc68 >			  ## ll_adv.c:656:5
 1e1cc5c:    00 4c             	r0 = [r6 + 0]			  ## ll_adv.c:662:31
 1e1cc5e:    04 20             	if (r0 == 0) goto 8 <ll_adv_set_scan_rsp_data+0x42 : 1e1cc68 >			  ## ll_adv.c:662:31
 1e1cc60:    61 71             	r1 = 22			  ## ll_adv.c:663:9
 1e1cc62:    42 08             	r2 = r4			  ## ll_adv.c:663:9
 1e1cc64:    bf f3 18 ea       	call -11216 <le_hw_ioctrl : 1e1a098 >			  ## ll_adv.c:663:9
 1e1cc68:    56 01             	{pc, r6-r4} = [sp++]


__set_ll_adv_peer_addr:
 1e1cc6a:    77 01             	[--sp] = {rets, r7-r4}			  ## ll_adv.c:231:0
 1e1cc6c:    c1 ff ac 0e 00 00 	r1 = 3756 <adv_hdl : eac >			  ## ll_adv.c:231:0
 1e1cc72:    06 42             	r6 = [r1 + 0]			  ## ll_adv.c:231:0
 1e1cc74:    04 08             	r4 = r0			  ## ll_adv.c:231:0
 1e1cc76:    02 3c             	if (r6 != 0) goto 4 <__set_ll_adv_peer_addr+0x12 : 1e1cc7c >			  ## ll_adv.c:231:0
 1e1cc78:    8f f3 b2 33       	call 1992548 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1cc7c:    c7 ff 34 2d 00 00 	r7 = 11572 <adv_param : 2d34 >
 1e1cc82:    40 6e             	r0 = b[r7 + 4] (u)			  ## ll_adv.c:234:20
 1e1cc84:    40 e0 02 00       	if (r0 == 4) goto 4 <__set_ll_adv_peer_addr+0x22 : 1e1cc8c >			  ## ll_adv.c:234:20
 1e1cc88:    10 e0 1e 10       	if (r0 != 1) goto 60 <__set_ll_adv_peer_addr+0x5E : 1e1ccc8 >
 1e1cc8c:    60 6e             	r0 = b[r7 + 6] (u)			  ## ll_adv.c:236:46
 1e1cc8e:    b8 68             	b[r4 + 11] = r0			  ## ll_adv.c:236:34
 1e1cc90:    c5 98             	r5 = r4 + 12			  ## ll_adv.c:238:9
 1e1cc92:    71 9e             	r1 = r7 + 7			  ## ll_adv.c:238:9
 1e1cc94:    62 70             	r2 = 6			  ## ll_adv.c:238:9
 1e1cc96:    50 08             	r0 = r5			  ## ll_adv.c:238:9
 1e1cc98:    97 f3 24 51       	call 3056200 <memcpy : 106ee4 >			  ## ll_adv.c:238:9
 1e1cc9c:    02 3c             	if (r6 != 0) goto 4 <__set_ll_adv_peer_addr+0x38 : 1e1cca2 >			  ## ll_adv.c:238:9
 1e1cc9e:    8f f3 9f 33       	call 1992510 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1cca2:    52 6e             	r2 = b[r7 + 5] (u)			  ## ll_adv.c:195:23
 1e1cca4:    30 fd 01 29       	r0 = r2 & 4294967294			  ## ll_adv.c:195:5
 1e1cca8:    20 e0 02 10       	if (r0 != 2) goto 4 <__set_ll_adv_peer_addr+0x46 : 1e1ccb0 >			  ## ll_adv.c:195:5
 1e1ccac:    ba 68             	b[r4 + 11] = r2			  ## ll_adv.c:205:34
 1e1ccae:    01 18             	goto 2 <__set_ll_adv_peer_addr+0x48 : 1e1ccb2 >			  ## ll_adv.c:205:34
 1e1ccb0:    b2 68             	r2 = b[r4 + 11] (u)
 1e1ccb2:    00 48             	r0 = [r4 + 0]			  ## ll_adv.c:209:33
 1e1ccb4:    31 70             	r1 = 3			  ## ll_adv.c:209:5
 1e1ccb6:    53 08             	r3 = r5			  ## ll_adv.c:209:5
 1e1ccb8:    bf f3 ee e9       	call -11300 <le_hw_ioctrl : 1e1a098 >			  ## ll_adv.c:209:5
 1e1ccbc:    b2 68             	r2 = b[r4 + 11] (u)			  ## ll_adv.c:215:23
 1e1ccbe:    00 48             	r0 = [r4 + 0]			  ## ll_adv.c:214:33
 1e1ccc0:    91 70             	r1 = 9			  ## ll_adv.c:214:5
 1e1ccc2:    53 08             	r3 = r5			  ## ll_adv.c:214:5
 1e1ccc4:    bf f3 e8 e9       	call -11312 <le_hw_ioctrl : 1e1a098 >			  ## ll_adv.c:214:5
 1e1ccc8:    57 01             	{pc, r7-r4} = [sp++]			  ## ll_adv.c:243:1


__set_ll_local_addr_common:
 1e1ccca:    34 00             	[--sp] = rets			  ## link_layer.c:3463:0
 1e1cccc:    12 08             	r2 = r1			  ## link_layer.c:3463:0
 1e1ccce:    0a 60             	b[r0 + 0] = r2			  ## link_layer.c:3464:21
 1e1ccd0:    32 e0 0d 80       	if (r2 > 3) goto 26 <.GJTIE893_0_0_+0xE : 1e1ccee >			  ## link_layer.c:3464:21
 1e1ccd4:    c1 ff c0 0e 00 00 	r1 = 3776 <le_param+0x8 : ec0 >
 1e1ccda:    a2 00             	tbb [r2]


.GJTIS893_0_0_:
 1e1ccdc:    02     < 2 : 0x2 >
 1e1ccdd:    04     < 4 : 0x4 >
 1e1ccde:    02     < 2 : 0x2 >
 1e1ccdf:    04     < 4 : 0x4 >
 1e1cce0:    10 80             	r0 += 1			  ## link_layer.c:3469:9
 1e1cce2:    02 18             	goto 4 <.GJTIE893_0_0_+0x8 : 1e1cce8 >
 1e1cce4:    10 80             	r0 += 1			  ## link_layer.c:3475:9
 1e1cce6:    61 80             	r1 += 6			  ## link_layer.c:3475:9
 1e1cce8:    62 70             	r2 = 6
 1e1ccea:    97 f3 fb 50       	call 3056118 <memcpy : 106ee4 >
 1e1ccee:    30 00             	pc = [sp++]			  ## link_layer.c:3480:1


__set_ll_local_addr:
 1e1ccf0:    75 01             	[--sp] = {rets, r5, r4}			  ## link_layer.c:3483:0
 1e1ccf2:    14 08             	r4 = r1			  ## link_layer.c:3483:0
 1e1ccf4:    05 08             	r5 = r0			  ## link_layer.c:3483:0
 1e1ccf6:    40 08             	r0 = r4			  ## link_layer.c:3484:5
 1e1ccf8:    21 08             	r1 = r2			  ## link_layer.c:3484:5
 1e1ccfa:    e7 17             	call -50 <__set_ll_local_addr_common : 1e1ccca >			  ## link_layer.c:3484:5
 1e1ccfc:    82 f9 01 40       	r2 = b[r4 ++= 1] (u)			  ## link_layer.c:3488:23
 1e1cd00:    21 70             	r1 = 2			  ## link_layer.c:3486:5
 1e1cd02:    50 08             	r0 = r5			  ## link_layer.c:3486:5
 1e1cd04:    43 08             	r3 = r4			  ## link_layer.c:3486:5
 1e1cd06:    15 01             	{rets, r5, r4} = [sp++]			  ## link_layer.c:3486:5
 1e1cd08:    ff f3 c6 e9       	goto -11380 <le_hw_ioctrl : 1e1a098 >			  ## link_layer.c:3486:5


__set_ll_adv_state:
 1e1cd0c:    78 01             	[--sp] = {rets, r8-r4}			  ## ll_adv.c:345:0
 1e1cd0e:    fc 0b             	sp += -8			  ## ll_adv.c:345:0
 1e1cd10:    c8 ff 34 2d 00 00 	r8 = 11572 <adv_param : 2d34 >			  ## ll_adv.c:345:0
 1e1cd16:    01 f9 0d 80       	r1 = b[r8 + 13] (u)			  ## ll_adv.c:351:33
 1e1cd1a:    04 08             	r4 = r0			  ## ll_adv.c:351:33
 1e1cd1c:    d1 f5 05 00       	b[sp+5] = r1			  ## ll_adv.c:351:21
 1e1cd20:    00 70             	r0 = 0			  ## ll_adv.c:351:21
 1e1cd22:    d0 f5 04 00       	b[sp+4] = r0			  ## ll_adv.c:352:29
 1e1cd26:    12 70             	r2 = 1			  ## ll_adv.c:352:29
 1e1cd28:    06 70             	r6 = 0			  ## ll_adv.c:354:24
 1e1cd2a:    03 70             	r3 = 0			  ## ll_adv.c:354:24
 1e1cd2c:    f8 fd 30 52       	r5 = r2 << r3			  ## ll_adv.c:353:31
 1e1cd30:    17 9c             	r7 = r6 + 1			  ## ll_adv.c:354:24
 1e1cd32:    51 f0 01 00       	if ((r1 & r5) == 0) goto 2 <__set_ll_adv_state+0x2C : 1e1cd38 >			  ## ll_adv.c:354:24
 1e1cd36:    76 08             	r6 = r7			  ## ll_adv.c:353:13
 1e1cd38:    51 f0 01 00       	if ((r1 & r5) == 0) goto 2 <__set_ll_adv_state+0x32 : 1e1cd3e >
 1e1cd3c:    70 08             	r0 = r7			  ## ll_adv.c:353:13
 1e1cd3e:    13 80             	r3 += 1			  ## ll_adv.c:352:42
 1e1cd40:    33 e0 f4 1f       	if (r3 != 3) goto -24 <__set_ll_adv_state+0x20 : 1e1cd2c >			  ## ll_adv.c:352:42
 1e1cd44:    03 f9 03 80       	r3 = b[r8 + 3] (u)			  ## ll_adv.c:365:21
 1e1cd48:    01 f9 02 80       	r1 = b[r8 + 2] (u)			  ## ll_adv.c:365:21
 1e1cd4c:    02 f9 01 80       	r2 = b[r8 + 1] (u)			  ## ll_adv.c:366:21
 1e1cd50:    07 f9 0e 80       	r7 = b[r8 + 14] (u)			  ## ll_adv.c:368:35
 1e1cd54:    05 f9 04 80       	r5 = b[r8 + 4] (u)			  ## ll_adv.c:370:23
 1e1cd58:    06 f9 00 80       	r6 = b[r8 + 0] (u)			  ## ll_adv.c:366:21
 1e1cd5c:    d0 f5 04 00       	b[sp+4] = r0			  ## ll_adv.c:354:24
 1e1cd60:    d7 f5 06 00       	b[sp+6] = r7			  ## ll_adv.c:368:23
 1e1cd64:    45 e0 4c 80       	if (r5 > 4) goto 152 <.GJTIE903_0_0_+0x8C : 1e1ce00 >			  ## ll_adv.c:368:23
 1e1cd68:    c8 fd 40 13       	r1 <= insert(r3, p:8, l:8)			  ## ll_adv.c:365:21
 1e1cd6c:    a5 00             	tbb [r5]			  ## ll_adv.c:365:21


.GJTIS903_0_0_:
 1e1cd6e:    03     < 3 : 0x3 >
 1e1cd6f:    0c     < 12 : 0xC >
 1e1cd70:    28     < 40 : 0x28 >
 1e1cd71:    31     < 49 : 0x31 >
 1e1cd72:    3a     < 58 : 0x3A >
 1e1cd73:    00     < 0 : 0x0 >
 1e1cd74:    91 f5 00 00       	h[sp] = r1			  ## ll_adv.c:372:28
 1e1cd78:    20 70             	r0 = 2			  ## ll_adv.c:372:28
 1e1cd7a:    90 f5 02 00       	h[sp+2] = r0			  ## ll_adv.c:373:28
 1e1cd7e:    00 70             	r0 = 0			  ## ll_adv.c:374:28
 1e1cd80:    d0 f5 07 00       	b[sp+7] = r0			  ## ll_adv.c:374:28
 1e1cd84:    3d 18             	goto 122 <.GJTIE903_0_0_+0x8C : 1e1ce00 >			  ## ll_adv.c:374:28
 1e1cd86:    60 70             	r0 = 6
 1e1cd88:    90 f5 00 00       	h[sp] = r0			  ## ll_adv.c:377:28
 1e1cd8c:    20 70             	r0 = 2			  ## ll_adv.c:377:28
 1e1cd8e:    90 f5 02 00       	h[sp+2] = r0			  ## ll_adv.c:378:28
 1e1cd92:    10 70             	r0 = 1			  ## ll_adv.c:379:28
 1e1cd94:    d0 f5 07 00       	b[sp+7] = r0			  ## ll_adv.c:379:28
 1e1cd98:    00 70             	r0 = 0			  ## ll_adv.c:379:28
 1e1cd9a:    d0 f5 06 00       	b[sp+6] = r0			  ## ll_adv.c:382:28
 1e1cd9e:    c1 ff 0e dc e1 01 	r1 = 31579150 <ll_adv_timeout_handler : 1e1dc0e >			  ## ll_adv.c:119:25
 1e1cda4:    00 fb 00 05       	r0 = 1280 <BTCTLER_CONTROLLER_DATA_SIZE+0x42 : 500 >			  ## ll_adv.c:119:25
 1e1cda8:    bf f3 d1 52       	call -88670 <sys_timer_register : 1e0734e >			  ## ll_adv.c:119:25
 1e1cdac:    58 48             	[r4 + 20] = r0			  ## ll_adv.c:119:23
 1e1cdae:    03 30             	if (r0 != 0) goto 6 <.GJTIE903_0_0_+0x42 : 1e1cdb6 >			  ## ll_adv.c:119:23
 1e1cdb0:    8f f3 16 33       	call 1992236 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1cdb4:    50 48             	r0 = [r4 + 20]			  ## cpu.h:148:5
 1e1cdb6:    41 08             	r1 = r4			  ## ll_adv.c:123:5
 1e1cdb8:    bf f3 cd 52       	call -88678 <sys_timer_set_context : 1e07356 >			  ## ll_adv.c:123:5
 1e1cdbc:    1f 18             	goto 62 <.GJTIE903_0_0_+0x88 : 1e1cdfc >			  ## ll_adv.c:123:5
 1e1cdbe:    91 f5 00 00       	h[sp] = r1			  ## ll_adv.c:393:28
 1e1cdc2:    20 70             	r0 = 2			  ## ll_adv.c:393:28
 1e1cdc4:    90 f5 02 00       	h[sp+2] = r0			  ## ll_adv.c:394:28
 1e1cdc8:    60 70             	r0 = 6			  ## ll_adv.c:395:28
 1e1cdca:    d0 f5 07 00       	b[sp+7] = r0			  ## ll_adv.c:395:28
 1e1cdce:    18 18             	goto 48 <.GJTIE903_0_0_+0x8C : 1e1ce00 >			  ## ll_adv.c:395:28
 1e1cdd0:    91 f5 00 00       	h[sp] = r1			  ## ll_adv.c:400:28
 1e1cdd4:    10 70             	r0 = 1			  ## ll_adv.c:401:28
 1e1cdd6:    90 f5 02 00       	h[sp+2] = r0			  ## ll_adv.c:401:28
 1e1cdda:    20 70             	r0 = 2			  ## ll_adv.c:401:28
 1e1cddc:    d0 f5 07 00       	b[sp+7] = r0			  ## ll_adv.c:402:28
 1e1cde0:    0f 18             	goto 30 <.GJTIE903_0_0_+0x8C : 1e1ce00 >			  ## ll_adv.c:402:28
 1e1cde2:    c8 fd 40 62       	r6 <= insert(r2, p:8, l:8)			  ## ll_adv.c:366:21
 1e1cde6:    96 f5 00 00       	h[sp] = r6			  ## ll_adv.c:405:28
 1e1cdea:    30 70             	r0 = 3			  ## ll_adv.c:406:28
 1e1cdec:    90 f5 02 00       	h[sp+2] = r0			  ## ll_adv.c:406:28
 1e1cdf0:    10 70             	r0 = 1			  ## ll_adv.c:407:28
 1e1cdf2:    d0 f5 07 00       	b[sp+7] = r0			  ## ll_adv.c:407:28
 1e1cdf6:    00 70             	r0 = 0			  ## ll_adv.c:410:28
 1e1cdf8:    d0 f5 06 00       	b[sp+6] = r0			  ## ll_adv.c:410:28
 1e1cdfc:    40 08             	r0 = r4
 1e1cdfe:    35 17             	call -406 <__set_ll_adv_peer_addr : 1e1cc6a >
 1e1ce00:    c0 ff ac 0e 00 00 	r0 = 3756 <adv_hdl : eac >
 1e1ce06:    00 40             	r0 = [r0 + 0]
 1e1ce08:    02 30             	if (r0 != 0) goto 4 <.GJTIE903_0_0_+0x9A : 1e1ce0e >
 1e1ce0a:    8f f3 e9 32       	call 1992146 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1ce0e:    02 f9 05 80       	r2 = b[r8 + 5] (u)			  ## ll_adv.c:223:5
 1e1ce12:    00 48             	r0 = [r4 + 0]			  ## ll_adv.c:223:35
 1e1ce14:    41 98             	r1 = r4 + 4			  ## ll_adv.c:224:36
 1e1ce16:    6c 17             	call -296 <__set_ll_local_addr : 1e1ccf0 >			  ## ll_adv.c:223:5
 1e1ce18:    c2 ff 43 2d 00 00 	r2 = 11587 <adv_data : 2d43 >			  ## ll_adv.c:223:5
 1e1ce1e:    00 64             	r0 = b[r2 + 0] (u)			  ## ll_adv.c:431:18
 1e1ce20:    04 20             	if (r0 == 0) goto 8 <.GJTIE903_0_0_+0xB6 : 1e1ce2a >			  ## ll_adv.c:431:18
 1e1ce22:    00 48             	r0 = [r4 + 0]			  ## ll_adv.c:436:37
 1e1ce24:    51 71             	r1 = 21			  ## ll_adv.c:436:9
 1e1ce26:    bf f3 37 e9       	call -11666 <le_hw_ioctrl : 1e1a098 >			  ## ll_adv.c:436:9
 1e1ce2a:    c2 ff 63 2d 00 00 	r2 = 11619 <scan_resp_data : 2d63 >
 1e1ce30:    00 64             	r0 = b[r2 + 0] (u)			  ## ll_adv.c:440:24
 1e1ce32:    04 20             	if (r0 == 0) goto 8 <.GJTIE903_0_0_+0xC8 : 1e1ce3c >			  ## ll_adv.c:440:24
 1e1ce34:    00 48             	r0 = [r4 + 0]			  ## ll_adv.c:445:37
 1e1ce36:    61 71             	r1 = 22			  ## ll_adv.c:445:9
 1e1ce38:    bf f3 2e e9       	call -11684 <le_hw_ioctrl : 1e1a098 >			  ## ll_adv.c:445:9
 1e1ce3c:    00 48             	r0 = [r4 + 0]			  ## ll_adv.c:450:51
 1e1ce3e:    01 a0             	r1 = sp + 0			  ## ll_adv.c:450:51
 1e1ce40:    bf f3 e6 ee       	call -8756 <le_hw_advertising : 1e1ac10 >			  ## ll_adv.c:450:18
 1e1ce44:    01 08             	r1 = r0			  ## ll_adv.c:450:18
 1e1ce46:    30 70             	r0 = 3			  ## ll_adv.c:455:12
 1e1ce48:    01 32             	if (r1 != 0) goto 2 <.GJTIE903_0_0_+0xD8 : 1e1ce4c >			  ## ll_adv.c:455:12
 1e1ce4a:    00 70             	r0 = 0
 1e1ce4c:    04 0a             	sp += 8
 1e1ce4e:    58 01             	{pc, r8-r4} = [sp++]			  ## ll_adv.c:455:5


ll_adv_open:
 1e1ce50:    75 01             	[--sp] = {rets, r5, r4}			  ## ll_adv.c:787:0
 1e1ce52:    c5 ff ac 0e 00 00 	r5 = 3756 <adv_hdl : eac >			  ## ll_adv.c:787:0
 1e1ce58:    00 4a             	r0 = [r5 + 0]			  ## ll_adv.c:793:9
 1e1ce5a:    02 30             	if (r0 != 0) goto 4 <ll_adv_open+0x10 : 1e1ce60 >			  ## ll_adv.c:793:9
 1e1ce5c:    a1 16             	call -702 <ll_adv_init : 1e1cba0 >			  ## ll_adv.c:794:9
 1e1ce5e:    00 4a             	r0 = [r5 + 0]			  ## ll_adv.c:794:9
 1e1ce60:    10 40             	r0 = [r0 + 4]			  ## ll_adv.c:799:44
 1e1ce62:    01 20             	if (r0 == 0) goto 2 <ll_adv_open+0x16 : 1e1ce66 >
 1e1ce64:    55 01             	{pc, r5, r4} = [sp++]
 1e1ce66:    80 71             	r0 = 24			  ## ll_adv.c:806:16
 1e1ce68:    bf f3 69 52       	call -88878 <__bt_malloc : 1e0733e >			  ## ll_adv.c:806:16
 1e1ce6c:    04 08             	r4 = r0			  ## ll_adv.c:806:16
 1e1ce6e:    fa 29             	if (r4 == 0) goto -12 <ll_adv_open+0x14 : 1e1ce64 >			  ## ll_adv.c:806:16
 1e1ce70:    00 4a             	r0 = [r5 + 0]			  ## ll_adv.c:813:5
 1e1ce72:    1c 40             	[r0 + 4] = r4			  ## ll_adv.c:813:22
 1e1ce74:    bf f3 6f ec       	call -10018 <le_hw_open : 1e1a756 >			  ## ll_adv.c:815:20
 1e1ce78:    08 48             	[r4 + 0] = r0			  ## ll_adv.c:815:18
 1e1ce7a:    f4 21             	if (r0 == 0) goto -24 <ll_adv_open+0x14 : 1e1ce64 >			  ## ll_adv.c:815:18
 1e1ce7c:    00 40             	r0 = [r0 + 0]
 1e1ce7e:    c2 ff 94 be e1 01 	r2 = 31571604 <adv_handler : 1e1be94 >			  ## ll_adv.c:823:5
 1e1ce84:    41 08             	r1 = r4			  ## ll_adv.c:823:5
 1e1ce86:    bf f3 11 ed       	call -9694 <le_hw_handler_register : 1e1a8ac >			  ## ll_adv.c:823:5
 1e1ce8a:    40 08             	r0 = r4			  ## ll_adv.c:829:18
 1e1ce8c:    3f 17             	call -386 <__set_ll_adv_state : 1e1cd0c >			  ## ll_adv.c:829:18
 1e1ce8e:    ea 31             	if (r0 != 0) goto -44 <ll_adv_open+0x14 : 1e1ce64 >
 1e1ce90:    00 4a             	r0 = [r5 + 0]			  ## ll_adv.c:840:5
 1e1ce92:    11 70             	r1 = 1			  ## ll_adv.c:840:20
 1e1ce94:    09 60             	b[r0 + 0] = r1			  ## ll_adv.c:840:20
 1e1ce96:    55 01             	{pc, r5, r4} = [sp++]			  ## ll_adv.c:840:20


ll_send_acl_packet:
 1e1ce98:    7c 01             	[--sp] = {rets, r12-r4}			  ## link_layer.c:1085:0
 1e1ce9a:    fe 0b             	sp += -4			  ## link_layer.c:1085:0
 1e1ce9c:    25 08             	r5 = r2			  ## link_layer.c:1085:0
 1e1ce9e:    14 08             	r4 = r1			  ## link_layer.c:1085:0
 1e1cea0:    bf f3 04 f8       	call -4088 <ll_link_for_handle : 1e1beac >			  ## link_layer.c:1088:12
 1e1cea4:    09 08             	r9 = r0			  ## link_layer.c:1088:12
 1e1cea6:    55 20             	if (r0 == 0) goto 170 <ll_send_acl_packet+0xBA : 1e1cf52 >
 1e1cea8:    08 fc 40 00       	r8 = r0 + 64			  ## link_layer.c:1096:26
 1e1ceac:    01 70             	r1 = 0			  ## link_layer.c:1096:5
 1e1ceae:    06 70             	r6 = 0			  ## link_layer.c:1096:5
 1e1ceb0:    80 08             	r0 = r8			  ## link_layer.c:1096:5
 1e1ceb2:    97 f3 b7 4f       	call 3055470 <os_mutex_pend : 106e24 >			  ## link_layer.c:1096:5
 1e1ceb6:    0a f9 01 40       	r10 = b[r4 + 1] (u)			  ## link_layer.c:1100:15
 1e1ceba:    c0 70             	r0 = 12			  ## link_layer.c:1117:19
 1e1cebc:    bf f3 3f 52       	call -88962 <__bt_malloc : 1e0733e >			  ## link_layer.c:1117:19
 1e1cec0:    0c 08             	r12 = r0			  ## link_layer.c:1117:19
 1e1cec2:    02 30             	if (r0 != 0) goto 4 <ll_send_acl_packet+0x30 : 1e1cec8 >			  ## link_layer.c:1117:19
 1e1cec4:    8f f3 8c 32       	call 1991960 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1cec8:    16 f9 08 c0       	b[r12 + 8] = r6			  ## link_layer.c:1119:38
 1e1cecc:    96 fc 74 01       	r6 = r9 + 372			  ## link_layer.c:1119:38
 1e1ced0:    07 5c             	r7 = h[r6 + 0] (u)			  ## link_layer.c:1121:47
 1e1ced2:    80 5c             	r0 = h[r6 + 16] (u)			  ## link_layer.c:1122:48
 1e1ced4:    9b fc 04 01       	r11 = r9 + 260			  ## link_layer.c:1122:48
 1e1ced8:    07 f2 04 10       	if (r7 != r0) goto 8 <ll_send_acl_packet+0x4C : 1e1cee4 >			  ## link_layer.c:1122:48
 1e1cedc:    08 18             	goto 16 <ll_send_acl_packet+0x56 : 1e1ceee >			  ## link_layer.c:1122:48
 1e1cede:    10 70             	r0 = 1			  ## link_layer.c:1125:13
 1e1cee0:    97 f3 6a 4f       	call 3055316 <os_time_dly : 106db8 >			  ## link_layer.c:1125:13
 1e1cee4:    00 f6 00 b0       	r0 = [r11 + 0]
 1e1cee8:    b0 f2 f9 1f       	if (r0 != r11) goto -14 <ll_send_acl_packet+0x46 : 1e1cede >
 1e1ceec:    8f 5c             	h[r6 + 16] = r7			  ## link_layer.c:1127:48
 1e1ceee:    44 80             	r4 += 4			  ## link_layer.c:1110:36
 1e1cef0:    05 18             	goto 10 <ll_send_acl_packet+0x64 : 1e1cefc >
 1e1cef2:    00 f6 00 90       	r0 = [r9 + 0]			  ## link_layer.c:1138:42
 1e1cef6:    46 04             	r6 = r1.b0 (u)			  ## link_layer.c:1139:59
 1e1cef8:    21 70             	r1 = 2			  ## link_layer.c:1138:13
 1e1cefa:    0d 18             	goto 26 <ll_send_acl_packet+0x7E : 1e1cf16 >			  ## link_layer.c:1138:13
 1e1cefc:    71 08             	r1 = r7			  ## link_layer.c:1132:30
 1e1cefe:    75 f2 01 c0       	ifs (r5 > r7) goto 2 <ll_send_acl_packet+0x6C : 1e1cf04 >			  ## link_layer.c:1132:30
 1e1cf02:    51 08             	r1 = r5			  ## link_layer.c:1132:30
 1e1cf04:    24 f3 03 a0       	if ((r10 & 16) != 0) goto 6 <ll_send_acl_packet+0x76 : 1e1cf0e >
 1e1cf08:    00 f9 08 c0       	r0 = b[r12 + 8] (u)			  ## link_layer.c:1136:52
 1e1cf0c:    f2 21             	if (r0 == 0) goto -28 <ll_send_acl_packet+0x5A : 1e1cef2 >			  ## link_layer.c:1136:52
 1e1cf0e:    00 f6 00 90       	r0 = [r9 + 0]			  ## link_layer.c:1142:42
 1e1cf12:    46 04             	r6 = r1.b0 (u)			  ## link_layer.c:1143:59
 1e1cf14:    11 70             	r1 = 1			  ## link_layer.c:1142:13
 1e1cf16:    0f 02             	[sp] = r7
 1e1cf18:    42 08             	r2 = r4
 1e1cf1a:    63 08             	r3 = r6
 1e1cf1c:    bf f3 84 ef       	call -8440 <le_hw_send_packet : 1e1ae28 >
 1e1cf20:    00 f9 08 c0       	r0 = b[r12 + 8] (u)			  ## link_layer.c:1148:41
 1e1cf24:    10 80             	r0 += 1			  ## link_layer.c:1148:41
 1e1cf26:    10 f9 08 c0       	b[r12 + 8] = r0			  ## link_layer.c:1148:41
 1e1cf2a:    a5 bb             	r5 = r5 - r6			  ## link_layer.c:1147:38
 1e1cf2c:    64 09             	r4 += r6			  ## link_layer.c:1146:31
 1e1cf2e:    e6 3b             	if (r5 != 0) goto -52 <ll_send_acl_packet+0x64 : 1e1cefc >
 1e1cf30:    97 f3 34 4f       	call 3055208 <local_irq_disable : 106d9c >			  ## link_layer.c:1153:5
 1e1cf34:    00 f6 04 b0       	r0 = [r11 + 4]			  ## list.h:154:28
 1e1cf38:    1c f6 04 b0       	[r11 + 4] = r12			  ## list.h:137:16
 1e1cf3c:    1b f6 00 c0       	[r12 + 0] = r11			  ## list.h:138:16
 1e1cf40:    10 f6 04 c0       	[r12 + 4] = r0			  ## list.h:139:16
 1e1cf44:    1c f6 00 00       	[r0 + 0] = r12			  ## list.h:140:16
 1e1cf48:    97 f3 26 4f       	call 3055180 <local_irq_enable : 106d98 >			  ## link_layer.c:1155:5
 1e1cf4c:    80 08             	r0 = r8			  ## link_layer.c:1158:5
 1e1cf4e:    97 f3 6b 4f       	call 3055318 <os_mutex_post : 106e28 >			  ## link_layer.c:1158:5
 1e1cf52:    02 0a             	sp += 4
 1e1cf54:    5c 01             	{pc, r12-r4} = [sp++]			  ## link_layer.c:1159:1


__rx_oneshot_add:
 1e1cf56:    75 01             	[--sp] = {rets, r5, r4}			  ## link_layer.c:212:0
 1e1cf58:    04 08             	r4 = r0			  ## link_layer.c:212:0
 1e1cf5a:    c0 70             	r0 = 12			  ## link_layer.c:213:25
 1e1cf5c:    bf f3 ef 51       	call -89122 <__bt_malloc : 1e0733e >			  ## link_layer.c:213:25
 1e1cf60:    05 08             	r5 = r0			  ## link_layer.c:213:25
 1e1cf62:    0e 2a             	if (r5 == 0) goto 28 <__rx_oneshot_add+0x2A : 1e1cf80 >			  ## link_layer.c:213:25
 1e1cf64:    97 f3 1a 4f       	call 3055156 <local_irq_disable : 106d9c >			  ## link_layer.c:217:5
 1e1cf68:    c0 ff f8 cf e1 01 	r0 = 31576056 <__set_conn_winsize : 1e1cff8 >			  ## link_layer.c:219:17
 1e1cf6e:    28 4a             	[r5 + 8] = r0			  ## link_layer.c:219:17
 1e1cf70:    40 fc 34 01       	r0 = r4 + 308			  ## link_layer.c:219:17
 1e1cf74:    11 40             	r1 = [r0 + 4]			  ## list.h:154:28
 1e1cf76:    1d 40             	[r0 + 4] = r5			  ## list.h:137:16
 1e1cf78:    08 4a             	[r5 + 0] = r0			  ## list.h:138:16
 1e1cf7a:    19 4a             	[r5 + 4] = r1			  ## list.h:139:16
 1e1cf7c:    0d 42             	[r1 + 0] = r5			  ## list.h:140:16
 1e1cf7e:    04 18             	goto 8 <__rx_oneshot_add+0x32 : 1e1cf88 >			  ## list.h:140:16
 1e1cf80:    8f f3 2e 32       	call 1991772 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1cf84:    97 f3 0a 4f       	call 3055124 <local_irq_disable : 106d9c >			  ## link_layer.c:217:5
 1e1cf88:    15 01             	{rets, r5, r4} = [sp++]			  ## link_layer.c:222:5
 1e1cf8a:    d7 f3 05 4f       	goto 3055114 <local_irq_enable : 106d98 >			  ## link_layer.c:222:5


__connection_upadte:
 1e1cf8e:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:1644:0
 1e1cf90:    04 08             	r4 = r0			  ## link_layer.c:1644:0
 1e1cf92:    00 48             	r0 = [r4 + 0]			  ## link_layer.c:1645:29
 1e1cf94:    42 99             	r2 = r4 + 20			  ## link_layer.c:1645:57
 1e1cf96:    71 70             	r1 = 7			  ## link_layer.c:1645:5
 1e1cf98:    bf f3 7e e8       	call -12036 <le_hw_ioctrl : 1e1a098 >			  ## link_layer.c:1645:5
 1e1cf9c:    00 48             	r0 = [r4 + 0]			  ## link_layer.c:1621:29
 1e1cf9e:    21 71             	r1 = 18			  ## link_layer.c:1621:5
 1e1cfa0:    02 70             	r2 = 0			  ## link_layer.c:1621:5
 1e1cfa2:    bf f3 79 e8       	call -12046 <le_hw_ioctrl : 1e1a098 >			  ## link_layer.c:1621:5
 1e1cfa6:    00 f6 c4 40       	r0 = [r4 + 196]			  ## link_layer.c:469:15
 1e1cfaa:    00 f3 03 00       	if ((r0 & 1) == 0) goto 6 <__connection_upadte+0x26 : 1e1cfb4 >			  ## link_layer.c:469:15
 1e1cfae:    70 b0             	r0 &= 4294967294			  ## link_layer.c:472:33
 1e1cfb0:    10 f6 c4 40       	[r4 + 196] = r0			  ## link_layer.c:472:33
 1e1cfb4:    40 08             	r0 = r4			  ## link_layer.c:1649:5
 1e1cfb6:    cf 17             	call -98 <__rx_oneshot_add : 1e1cf56 >			  ## link_layer.c:1649:5
 1e1cfb8:    00 f6 50 41       	r0 = [r4 + 336]			  ## link_layer.c:1328:15
 1e1cfbc:    06 20             	if (r0 == 0) goto 12 <__connection_upadte+0x3C : 1e1cfca >
 1e1cfbe:    11 59             	r1 = h[r4 + 34] (u)			  ## link_layer.c:1654:47
 1e1cfc0:    20 04             	r0 = r0.l (u)			  ## sys_timer.c:53:5
 1e1cfc2:    01 fe 0a 19       	r1 = r1 * 10			  ## link_layer.c:1654:69
 1e1cfc6:    bf f3 d5 a0       	call -48726 <sys_timer_modify : 1e11174 >			  ## sys_timer.c:53:5
 1e1cfca:    54 01             	{pc, r4} = [sp++]			  ## link_layer.c:1658:1


__master_ll_send_conn_update_done:
 1e1cfcc:    01 70             	r1 = 0			  ## link_layer.c:1661:0
 1e1cfce:    02 70             	r2 = 0			  ## link_layer.c:1662:5
 1e1cfd0:    ff f3 cb f9       	goto -3178 <le_connection_update_complete_event : 1e1c36a >			  ## link_layer.c:1662:5


__channel_map_upadte:
 1e1cfd4:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:1993:0
 1e1cfd6:    04 08             	r4 = r0			  ## link_layer.c:1993:0
 1e1cfd8:    00 48             	r0 = [r4 + 0]			  ## link_layer.c:1994:29
 1e1cfda:    42 fc 24 00       	r2 = r4 + 36			  ## link_layer.c:1994:50
 1e1cfde:    81 70             	r1 = 8			  ## link_layer.c:1994:5
 1e1cfe0:    bf f3 5a e8       	call -12108 <le_hw_ioctrl : 1e1a098 >			  ## link_layer.c:1994:5
 1e1cfe4:    00 f9 3d 40       	r0 = b[r4 + 61] (u)			  ## link_layer.c:1996:9
 1e1cfe8:    10 e0 05 00       	if (r0 == 1) goto 10 <__channel_map_upadte+0x22 : 1e1cff6 >			  ## link_layer.c:1996:9
 1e1cfec:    00 48             	r0 = [r4 + 0]			  ## link_layer.c:1983:29
 1e1cfee:    21 71             	r1 = 18			  ## link_layer.c:1983:5
 1e1cff0:    02 70             	r2 = 0			  ## link_layer.c:1983:5
 1e1cff2:    bf f3 51 e8       	call -12126 <le_hw_ioctrl : 1e1a098 >			  ## link_layer.c:1983:5
 1e1cff6:    54 01             	{pc, r4} = [sp++]			  ## link_layer.c:2001:1


__set_conn_winsize:
 1e1cff8:    01 08             	r1 = r0			  ## link_layer.c:1336:0
 1e1cffa:    02 f9 3d 10       	r2 = b[r1 + 61] (u)			  ## link_layer.c:1337:9
 1e1cffe:    00 42             	r0 = [r1 + 0]			  ## link_layer.c:1337:9
 1e1d000:    12 e0 07 10       	if (r2 != 1) goto 14 <__set_conn_winsize+0x1A : 1e1d012 >			  ## link_layer.c:1337:9
 1e1d004:    51 53             	r1 = h[r1 + 42] (u)			  ## link_layer.c:1338:58
 1e1d006:    49 c0             	r1 = r1 << 1			  ## link_layer.c:1338:81
 1e1d008:    13 fc 32 00       	r3 = r1 + 50			  ## link_layer.c:1338:85
 1e1d00c:    51 70             	r1 = 5			  ## link_layer.c:1338:9
 1e1d00e:    22 73             	r2 = 50			  ## link_layer.c:1338:9
 1e1d010:    03 18             	goto 6 <__set_conn_winsize+0x20 : 1e1d018 >			  ## link_layer.c:1338:9
 1e1d012:    51 70             	r1 = 5			  ## link_layer.c:1340:9
 1e1d014:    e2 71             	r2 = 30			  ## link_layer.c:1340:9
 1e1d016:    03 70             	r3 = 0			  ## link_layer.c:1340:9
 1e1d018:    ff f3 3e e8       	goto -12164 <le_hw_ioctrl : 1e1a098 >


__slave_ll_send_start_enc_req_callback:
 1e1d01c:    00 40             	r0 = [r0 + 0]			  ## link_layer.c:2367:0
 1e1d01e:    b1 70             	r1 = 11			  ## link_layer.c:2369:5
 1e1d020:    12 70             	r2 = 1			  ## link_layer.c:2369:5
 1e1d022:    ff f3 39 e8       	goto -12174 <le_hw_ioctrl : 1e1a098 >			  ## link_layer.c:2369:5


ll_conn_fast_supervision_timer_handler:
 1e1d026:    e1 73             	r1 = 62			  ## link_layer.c:1268:0
 1e1d028:    ff f3 70 fa       	goto -2848 <ll_disconnect_process : 1e1c50c >			  ## link_layer.c:1269:5


conn_rx_probe_handler:
 1e1d02c:    79 01             	[--sp] = {rets, r9-r4}			  ## link_layer.c:3087:0
 1e1d02e:    05 08             	r5 = r0			  ## link_layer.c:3087:0
 1e1d030:    00 f9 3c 50       	r0 = b[r5 + 60] (u)			  ## link_layer.c:3090:15
 1e1d034:    18 08             	r8 = r1			  ## link_layer.c:3090:15
 1e1d036:    57 fc 34 01       	r7 = r5 + 308
 1e1d03a:    60 e0 24 10       	if (r0 != 6) goto 72 <conn_rx_probe_handler+0x5A : 1e1d086 >
 1e1d03e:    70 70             	r0 = 7			  ## link_layer.c:3094:21
 1e1d040:    10 f9 3c 50       	b[r5 + 60] = r0			  ## link_layer.c:3094:21
 1e1d044:    97 f3 aa 4e       	call 3054932 <local_irq_disable : 106d9c >			  ## link_layer.c:324:5
 1e1d048:    44 4e             	r4 = [r7 + 16]			  ## link_layer.c:325:5
 1e1d04a:    06 9f             	r6 = r7 + 16			  ## link_layer.c:325:5
 1e1d04c:    64 f2 17 00       	if (r4 == r6) goto 46 <conn_rx_probe_handler+0x52 : 1e1d07e >			  ## link_layer.c:325:5
 1e1d050:    c9 ff 26 d0 e1 01 	r9 = 31576102 <ll_conn_fast_supervision_timer_handler : 1e1d026 >
 1e1d056:    41 08             	r1 = r4
 1e1d058:    40 08             	r0 = r4
 1e1d05a:    22 40             	r2 = [r0 + 8]			  ## link_layer.c:326:25
 1e1d05c:    04 40             	r4 = [r0 + 0]			  ## link_layer.c:326:25
 1e1d05e:    92 f2 0b 10       	if (r2 != r9) goto 22 <conn_rx_probe_handler+0x4C : 1e1d078 >
 1e1d062:    32 40             	r2 = [r0 + 12]			  ## link_layer.c:326:46
 1e1d064:    62 e0 08 10       	if (r2 != 6) goto 16 <conn_rx_probe_handler+0x4C : 1e1d078 >			  ## link_layer.c:326:46
 1e1d068:    02 42             	r2 = [r1 + 0]			  ## list.h:171:36
 1e1d06a:    13 42             	r3 = [r1 + 4]			  ## list.h:171:23
 1e1d06c:    1b 44             	[r2 + 4] = r3			  ## list.h:159:16
 1e1d06e:    0a 46             	[r3 + 0] = r2			  ## list.h:160:16
 1e1d070:    09 42             	[r1 + 0] = r1			  ## list.h:172:17
 1e1d072:    19 42             	[r1 + 4] = r1			  ## list.h:173:17
 1e1d074:    bf f3 64 25       	call -111928 <__bt_free : 1e01b40 >			  ## link_layer.c:328:13
 1e1d078:    41 08             	r1 = r4
 1e1d07a:    64 f2 ed 1f       	if (r4 != r6) goto -38 <conn_rx_probe_handler+0x2C : 1e1d058 >
 1e1d07e:    97 f3 8b 4e       	call 3054870 <local_irq_enable : 106d98 >			  ## link_layer.c:331:5
 1e1d082:    50 08             	r0 = r5			  ## link_layer.c:3099:13
 1e1d084:    68 17             	call -304 <__rx_oneshot_add : 1e1cf56 >			  ## link_layer.c:3099:13
 1e1d086:    70 4e             	r0 = [r7 + 28]			  ## link_layer.c:1321:15
 1e1d088:    03 20             	if (r0 == 0) goto 6 <conn_rx_probe_handler+0x64 : 1e1d090 >
 1e1d08a:    20 04             	r0 = r0.l (u)			  ## sys_timer.c:48:5
 1e1d08c:    bf f3 3b a2       	call -48010 <sys_timer_re_run : 1e11506 >			  ## sys_timer.c:48:5
 1e1d090:    97 f3 84 4e       	call 3054856 <local_irq_disable : 106d9c >			  ## link_layer.c:230:5
 1e1d094:    06 4e             	r6 = [r7 + 0]			  ## link_layer.c:231:5
 1e1d096:    76 f2 10 00       	if (r6 == r7) goto 32 <conn_rx_probe_handler+0x8E : 1e1d0ba >
 1e1d09a:    00 4c             	r0 = [r6 + 0]			  ## list.h:171:36
 1e1d09c:    11 4c             	r1 = [r6 + 4]			  ## list.h:171:23
 1e1d09e:    04 4c             	r4 = [r6 + 0]
 1e1d0a0:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e1d0a2:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e1d0a4:    0e 4c             	[r6 + 0] = r6			  ## list.h:172:17
 1e1d0a6:    1e 4c             	[r6 + 4] = r6			  ## list.h:173:17
 1e1d0a8:    21 4c             	r1 = [r6 + 8]			  ## link_layer.c:233:12
 1e1d0aa:    50 08             	r0 = r5			  ## link_layer.c:233:9
 1e1d0ac:    81 00             	call r1			  ## link_layer.c:233:9
 1e1d0ae:    60 08             	r0 = r6			  ## link_layer.c:234:9
 1e1d0b0:    bf f3 46 25       	call -111988 <__bt_free : 1e01b40 >			  ## link_layer.c:234:9
 1e1d0b4:    46 08             	r6 = r4
 1e1d0b6:    74 f2 f0 1f       	if (r4 != r7) goto -32 <conn_rx_probe_handler+0x6E : 1e1d09a >
 1e1d0ba:    97 f3 6d 4e       	call 3054810 <local_irq_enable : 106d98 >			  ## link_layer.c:236:5
 1e1d0be:    00 f7 08 80       	r0 = h[r8 + 8] (u)			  ## link_layer.c:3107:9
 1e1d0c2:    2b f3 06 00       	if ((r0 & 2048) != 0) goto 12 <conn_rx_probe_handler+0xA6 : 1e1d0d2 >			  ## link_layer.c:3107:9
 1e1d0c6:    00 f9 0c 80       	r0 = b[r8 + 12] (u)			  ## link_layer.c:3108:26
 1e1d0ca:    10 f9 88 51       	b[r5 + 392] = r0			  ## link_layer.c:3108:20
 1e1d0ce:    00 f7 08 80       	r0 = h[r8 + 8] (u)			  ## link_layer.c:3108:20
 1e1d0d2:    20 fd 30 09       	r0 = r0 & 48			  ## link_layer.c:3113:9
 1e1d0d6:    00 e1 03 10       	if (r0 != 16) goto 6 <conn_rx_probe_handler+0xB4 : 1e1d0e0 >			  ## link_layer.c:3113:9
 1e1d0da:    00 f9 0a 80       	r0 = b[r8 + 10] (u)			  ## link_layer.c:3113:9
 1e1d0de:    05 20             	if (r0 == 0) goto 10 <conn_rx_probe_handler+0xBE : 1e1d0ea >			  ## link_layer.c:3113:9
 1e1d0e0:    c0 ff 08 2b 00 00 	r0 = 11016 <ll_hdl+0x8 : 2b08 >			  ## link_layer.c:3118:9
 1e1d0e6:    bf f3 00 51       	call -89600 <thread_resume : 1e072ea >			  ## link_layer.c:3118:9
 1e1d0ea:    59 01             	{pc, r9-r4} = [sp++]			  ## link_layer.c:3120:1


conn_tx_probe_handler:
 1e1d0ec:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:3123:0
 1e1d0ee:    81 52             	r1 = h[r1 + 16] (u)			  ## link_layer.c:3126:17
 1e1d0f0:    82 fd 20 11       	r1 = uextra(r1, p:4, l:2)
 1e1d0f4:    12 fc ff ff       	r2 = r1 + -1			  ## link_layer.c:3126:5
 1e1d0f8:    04 fc fc 00       	r4 = r0 + 252			  ## link_layer.c:3126:5
 1e1d0fc:    22 e0 07 20       	if (r2 >= 2) goto 14 <conn_tx_probe_handler+0x22 : 1e1d10e >			  ## link_layer.c:3126:5
 1e1d100:    97 f3 4c 4e       	call 3054744 <local_irq_disable : 106d9c >			  ## atomic.h:16:5
 1e1d104:    08 00             	csync			  ## atomic.h:16:5
 1e1d106:    00 48             	r0 = [r4 + 0]			  ## atomic.h:18:14
 1e1d108:    10 80             	r0 += 1			  ## atomic.h:19:22
 1e1d10a:    08 48             	[r4 + 0] = r0			  ## atomic.h:19:16
 1e1d10c:    08 18             	goto 16 <conn_tx_probe_handler+0x32 : 1e1d11e >			  ## atomic.h:19:16
 1e1d10e:    31 e0 08 10       	if (r1 != 3) goto 16 <conn_tx_probe_handler+0x36 : 1e1d122 >
 1e1d112:    97 f3 43 4e       	call 3054726 <local_irq_disable : 106d9c >			  ## atomic.h:16:5
 1e1d116:    08 00             	csync			  ## atomic.h:16:5
 1e1d118:    10 48             	r0 = [r4 + 4]			  ## atomic.h:18:14
 1e1d11a:    10 80             	r0 += 1			  ## atomic.h:19:22
 1e1d11c:    18 48             	[r4 + 4] = r0			  ## atomic.h:19:16
 1e1d11e:    97 f3 3b 4e       	call 3054710 <local_irq_enable : 106d98 >
 1e1d122:    c0 ff 08 2b 00 00 	r0 = 11016 <ll_hdl+0x8 : 2b08 >			  ## link_layer.c:3141:5
 1e1d128:    14 01             	{rets, r4} = [sp++]			  ## link_layer.c:3141:5
 1e1d12a:    ff f3 de 50       	goto -89668 <thread_resume : 1e072ea >			  ## link_layer.c:3141:5


conn_evt_probe_handler:
 1e1d12e:    79 01             	[--sp] = {rets, r9-r4}			  ## link_layer.c:3164:0
 1e1d130:    24 08             	r4 = r2			  ## link_layer.c:3164:0
 1e1d132:    09 08             	r9 = r0			  ## link_layer.c:3164:0
 1e1d134:    36 32             	if (r1 != 0) goto 108 <conn_evt_probe_handler+0x74 : 1e1d1a2 >			  ## link_layer.c:3164:0
 1e1d136:    02 30             	if (r0 != 0) goto 4 <conn_evt_probe_handler+0xE : 1e1d13c >			  ## link_layer.c:3164:0
 1e1d138:    8f f3 52 31       	call 1991332 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1d13c:    97 f3 2e 4e       	call 3054684 <local_irq_disable : 106d9c >			  ## link_layer.c:160:5
 1e1d140:    14 f7 90 90       	h[r9 + 144] = r4			  ## link_layer.c:161:21
 1e1d144:    97 fc 3c 01       	r7 = r9 + 316			  ## link_layer.c:161:21
 1e1d148:    06 4e             	r6 = [r7 + 0]			  ## link_layer.c:163:5
 1e1d14a:    76 f2 18 00       	if (r6 == r7) goto 48 <conn_evt_probe_handler+0x50 : 1e1d17e >
 1e1d14e:    08 fb fd 7f       	r8 = 32765 <nvbss_size+0x14FD : 7ffd >
 1e1d152:    30 4c             	r0 = [r6 + 12]			  ## link_layer.c:164:15
 1e1d154:    20 b1             	r0 = r0 - r4			  ## link_layer.c:164:26
 1e1d156:    05 4c             	r5 = [r6 + 0]			  ## link_layer.c:164:26
 1e1d158:    20 04             	r0 = r0.l (u)			  ## link_layer.c:167:14
 1e1d15a:    f0 8f             	r0 += -1			  ## link_layer.c:167:28
 1e1d15c:    80 f2 0c 90       	if (r0 <= r8) goto 24 <conn_evt_probe_handler+0x4A : 1e1d178 >			  ## link_layer.c:167:28
 1e1d160:    00 4c             	r0 = [r6 + 0]			  ## list.h:171:36
 1e1d162:    11 4c             	r1 = [r6 + 4]			  ## list.h:171:23
 1e1d164:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e1d166:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e1d168:    0e 4c             	[r6 + 0] = r6			  ## list.h:172:17
 1e1d16a:    1e 4c             	[r6 + 4] = r6			  ## list.h:173:17
 1e1d16c:    21 4c             	r1 = [r6 + 8]			  ## link_layer.c:169:16
 1e1d16e:    90 08             	r0 = r9			  ## link_layer.c:169:13
 1e1d170:    81 00             	call r1			  ## link_layer.c:169:13
 1e1d172:    60 08             	r0 = r6			  ## link_layer.c:170:13
 1e1d174:    bf f3 e4 24       	call -112184 <__bt_free : 1e01b40 >			  ## link_layer.c:170:13
 1e1d178:    56 08             	r6 = r5
 1e1d17a:    75 f2 ea 1f       	if (r5 != r7) goto -44 <conn_evt_probe_handler+0x24 : 1e1d152 >
 1e1d17e:    97 f3 0b 4e       	call 3054614 <local_irq_enable : 106d98 >			  ## link_layer.c:173:5
 1e1d182:    00 f9 8c 91       	r0 = b[r9 + 396] (u)			  ## link_layer.c:3150:15
 1e1d186:    c6 ff 08 2b 00 00 	r6 = 11016 <ll_hdl+0x8 : 2b08 >			  ## link_layer.c:3150:15
 1e1d18c:    60 ff 0f 09 09 00 	if ((r0 & 15) == 0) goto 18 <conn_evt_probe_handler+0x76 : 1e1d1a4 >			  ## link_layer.c:3150:9
 1e1d192:    20 fd 0f 09       	r0 = r0 & 15			  ## link_layer.c:3150:15
 1e1d196:    10 b2             	r0 |= 16			  ## link_layer.c:3151:35
 1e1d198:    10 f9 8c 91       	b[r9 + 396] = r0			  ## link_layer.c:3151:35
 1e1d19c:    60 08             	r0 = r6
 1e1d19e:    bf f3 a4 50       	call -89784 <thread_resume : 1e072ea >
 1e1d1a2:    59 01             	{pc, r9-r4} = [sp++]			  ## link_layer.c:3172:1
 1e1d1a4:    97 f3 fa 4d       	call 3054580 <local_irq_disable : 106d9c >			  ## link_layer.c:280:5
 1e1d1a8:    20 4e             	r0 = [r7 + 8]			  ## link_layer.c:280:5
 1e1d1aa:    81 9e             	r1 = r7 + 8			  ## link_layer.c:281:5
 1e1d1ac:    10 f2 0b 00       	if (r0 == r1) goto 22 <conn_evt_probe_handler+0x98 : 1e1d1c6 >			  ## link_layer.c:281:5
 1e1d1b0:    02 fb fd 7f       	r2 = 32765 <nvbss_size+0x14FD : 7ffd >
 1e1d1b4:    33 40             	r3 = [r0 + 12]			  ## link_layer.c:282:15
 1e1d1b6:    23 b7             	r3 = r3 - r4			  ## link_layer.c:282:26
 1e1d1b8:    e3 04             	r3 = r3.l (u)			  ## link_layer.c:283:14
 1e1d1ba:    f3 8f             	r3 += -1			  ## link_layer.c:283:28
 1e1d1bc:    23 f2 06 80       	if (r3 > r2) goto 12 <conn_evt_probe_handler+0x9E : 1e1d1cc >			  ## link_layer.c:283:28
 1e1d1c0:    00 40             	r0 = [r0 + 0]
 1e1d1c2:    10 f2 f7 1f       	if (r0 != r1) goto -18 <conn_evt_probe_handler+0x86 : 1e1d1b4 >
 1e1d1c6:    19 01             	{rets, r9-r4} = [sp++]			  ## link_layer.c:288:5
 1e1d1c8:    d7 f3 e6 4d       	goto 3054540 <local_irq_enable : 106d98 >			  ## link_layer.c:288:5
 1e1d1cc:    97 f3 e4 4d       	call 3054536 <local_irq_enable : 106d98 >			  ## link_layer.c:288:5
 1e1d1d0:    e5 1f             	goto -54 <conn_evt_probe_handler+0x6E : 1e1d19c >			  ## link_layer.c:288:5


conn_echo_req_handler:
 1e1d1d2:    20 00             	rts			  ## link_layer.c:3175:0


ll_conn_supervision_timer_handler:
 1e1d1d4:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:1283:0
 1e1d1d6:    04 08             	r4 = r0			  ## link_layer.c:1283:0
 1e1d1d8:    0d 28             	if (r4 == 0) goto 26 <ll_conn_supervision_timer_handler+0x20 : 1e1d1f4 >			  ## link_layer.c:1283:0
 1e1d1da:    bf f3 a8 f6       	call -4784 <ll_supervision_timeout_stop : 1e1bf2e >			  ## link_layer.c:1295:5
 1e1d1de:    00 f9 3c 40       	r0 = b[r4 + 60] (u)			  ## link_layer.c:1301:14
 1e1d1e2:    10 b0             	r0 |= 1			  ## link_layer.c:1301:14
 1e1d1e4:    00 04             	r0 = r0.b0 (u)			  ## link_layer.c:1301:14
 1e1d1e6:    81 70             	r1 = 8			  ## link_layer.c:1301:14
 1e1d1e8:    70 e0 01 00       	if (r0 == 7) goto 2 <ll_conn_supervision_timer_handler+0x1A : 1e1d1ee >			  ## link_layer.c:1301:14
 1e1d1ec:    e1 73             	r1 = 62
 1e1d1ee:    40 08             	r0 = r4			  ## link_layer.c:1304:5
 1e1d1f0:    bf f3 8c f9       	call -3304 <ll_disconnect_process : 1e1c50c >			  ## link_layer.c:1304:5
 1e1d1f4:    54 01             	{pc, r4} = [sp++]			  ## link_layer.c:1306:1


ll_response_timeout_handler:
 1e1d1f6:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:1437:0
 1e1d1f8:    04 08             	r4 = r0			  ## link_layer.c:1437:0
 1e1d1fa:    0b 28             	if (r4 == 0) goto 22 <ll_response_timeout_handler+0x1C : 1e1d212 >			  ## link_layer.c:1437:0
 1e1d1fc:    bf f3 8c f6       	call -4840 <ll_response_timeout_stop : 1e1bf18 >			  ## link_layer.c:1447:5
 1e1d200:    01 70             	r1 = 0			  ## link_layer.c:1450:5
 1e1d202:    42 70             	r2 = 4			  ## link_layer.c:1450:5
 1e1d204:    40 08             	r0 = r4			  ## link_layer.c:1450:5
 1e1d206:    bf f3 9d f9       	call -3270 <ll_control_procedure_finish : 1e1c544 >			  ## link_layer.c:1450:5
 1e1d20a:    21 72             	r1 = 34			  ## link_layer.c:1452:5
 1e1d20c:    40 08             	r0 = r4			  ## link_layer.c:1452:5
 1e1d20e:    bf f3 7d f9       	call -3334 <ll_disconnect_process : 1e1c50c >			  ## link_layer.c:1452:5
 1e1d212:    54 01             	{pc, r4} = [sp++]			  ## link_layer.c:1454:1


ll_thread_process:
 1e1d214:    7f 01             	[--sp] = {rets, r15-r4}			  ## link_layer.c:3211:0
 1e1d216:    f6 0b             	sp += -20			  ## link_layer.c:3211:0
 1e1d218:    c6 ff 00 2b 00 00 	r6 = 11008 <ll_hdl : 2b00 >			  ## link_layer.c:3211:0
 1e1d21e:    15 4c             	r5 = [r6 + 4]			  ## link_layer.c:431:39
 1e1d220:    18 02             	[sp+4] = r0
 1e1d222:    97 f3 bb 4d       	call 3054454 <local_irq_disable : 106d9c >			  ## lbuf.c:236:5
 1e1d226:    04 4a             	r4 = [r5 + 0]
 1e1d228:    54 f2 05 00       	if (r4 == r5) goto 10 <ll_thread_process+0x22 : 1e1d236 >
 1e1d22c:    e0 68             	r0 = b[r4 + 14] (u)			  ## lbuf.c:242:16
 1e1d22e:    06 20             	if (r0 == 0) goto 12 <ll_thread_process+0x28 : 1e1d23c >			  ## lbuf.c:242:13
 1e1d230:    04 48             	r4 = [r4 + 0]
 1e1d232:    54 f2 fb 1f       	if (r4 != r5) goto -10 <ll_thread_process+0x18 : 1e1d22c >
 1e1d236:    97 f3 af 4d       	call 3054430 <local_irq_enable : 106d98 >			  ## lbuf.c:249:5
 1e1d23a:    12 18             	goto 36 <ll_thread_process+0x4C : 1e1d260 >			  ## lbuf.c:249:5
 1e1d23c:    10 70             	r0 = 1			  ## lbuf.c:243:22
 1e1d23e:    e8 68             	b[r4 + 14] = r0			  ## lbuf.c:243:22
 1e1d240:    97 f3 aa 4d       	call 3054420 <local_irq_enable : 106d98 >			  ## lbuf.c:244:13
 1e1d244:    c0 ff 48 2a 00 00 	r0 = 10824 <h4_transport : 2a48 >			  ## link_layer.c:435:9
 1e1d24a:    00 40             	r0 = [r0 + 0]			  ## link_layer.c:435:9
 1e1d24c:    63 40             	r3 = [r0 + 24]			  ## link_layer.c:435:24
 1e1d24e:    10 69             	r0 = b[r4 + 17] (u)			  ## link_layer.c:435:84
 1e1d250:    04 81             	r4 += 16			  ## lbuf.c:245:22
 1e1d252:    22 90             	r2 = r0 + 2			  ## link_layer.c:435:82
 1e1d254:    40 70             	r0 = 4			  ## link_layer.c:435:9
 1e1d256:    41 08             	r1 = r4			  ## link_layer.c:435:9
 1e1d258:    83 00             	call r3			  ## link_layer.c:435:9
 1e1d25a:    40 08             	r0 = r4			  ## link_layer.c:436:9
 1e1d25c:    bf f3 12 24       	call -112604 <lbuf_free_btctrler : 1e01a84 >			  ## link_layer.c:436:9
 1e1d260:    c0 ff ac 0e 00 00 	r0 = 3756 <adv_hdl : eac >			  ## ll_adv.c:560:9
 1e1d266:    01 40             	r1 = [r0 + 0]			  ## ll_adv.c:560:9
 1e1d268:    10 70             	r0 = 1			  ## ll_adv.c:560:9
 1e1d26a:    10 22             	if (r1 == 0) goto 32 <ll_thread_process+0x78 : 1e1d28c >			  ## ll_adv.c:560:9
 1e1d26c:    11 42             	r1 = [r1 + 4]			  ## ll_adv.c:564:44
 1e1d26e:    0e 22             	if (r1 == 0) goto 28 <ll_thread_process+0x78 : 1e1d28c >
 1e1d270:    04 42             	r4 = [r1 + 0]			  ## ll_adv.c:570:19
 1e1d272:    0c 28             	if (r4 == 0) goto 24 <ll_thread_process+0x78 : 1e1d28c >
 1e1d274:    00 48             	r0 = [r4 + 0]
 1e1d276:    c1 ff e8 da e1 01 	r1 = 31578856 <__adv_rx_post_handler : 1e1dae8 >			  ## ll_adv.c:576:5
 1e1d27c:    bf f3 1d ee       	call -9158 <le_hw_upload_data : 1e1aeba >			  ## ll_adv.c:576:5
 1e1d280:    02 a1             	r2 = sp + 16			  ## ll_adv.c:576:5
 1e1d282:    31 71             	r1 = 19			  ## ll_adv.c:580:5
 1e1d284:    40 08             	r0 = r4			  ## ll_adv.c:580:5
 1e1d286:    bf f3 07 e7       	call -12786 <le_hw_ioctrl : 1e1a098 >			  ## ll_adv.c:580:5
 1e1d28a:    40 02             	r0 = [sp+16]			  ## ll_adv.c:582:12
 1e1d28c:    0b f6 24 60       	r11 = [r6 + 36]			  ## link_layer.c:3235:5
 1e1d290:    6f fc 24 00       	r15 = r6 + 36			  ## link_layer.c:3235:5
 1e1d294:    20 fd 01 09       	r0 = r0 & 1			  ## link_layer.c:3232:11
 1e1d298:    fb f2 f4 00       	if (r11 == r15) goto 488 <ll_thread_process+0x270 : 1e1d484 >
 1e1d29c:    09 fb fd 7f       	r9 = 32765 <nvbss_size+0x14FD : 7ffd >
 1e1d2a0:    28 02             	[sp+8] = r0
 1e1d2a2:    b8 08             	r8 = r11
 1e1d2a4:    8e fc cc ff       	r14 = r8 + -52
 1e1d2a8:    0b f6 34 e0       	r11 = [r14 + 52]
 1e1d2ac:    08 00             	csync			  ## link_layer.c:3044:12
 1e1d2ae:    8a fc 5c 00       	r10 = r8 + 92			  ## link_layer.c:3044:12
 1e1d2b2:    00 f6 6c a0       	r0 = [r10 + 108]			  ## link_layer.c:3044:12
 1e1d2b6:    8d fc c4 00       	r13 = r8 + 196
 1e1d2ba:    38 20             	if (r0 == 0) goto 112 <ll_thread_process+0x118 : 1e1d32c >
 1e1d2bc:    ac fc 74 00       	r12 = r10 + 116
 1e1d2c0:    05 70             	r5 = 0
 1e1d2c2:    00 f6 74 a0       	r0 = [r10 + 116]			  ## list.h:124:18
 1e1d2c6:    c0 f2 4b 00       	if (r0 == r12) goto 150 <ll_thread_process+0x14C : 1e1d360 >			  ## list.h:124:18
 1e1d2ca:    97 f3 67 4d       	call 3054286 <local_irq_disable : 106d9c >			  ## atomic.h:32:5
 1e1d2ce:    08 00             	csync			  ## atomic.h:32:5
 1e1d2d0:    00 f6 6c a0       	r0 = [r10 + 108]			  ## atomic.h:34:14
 1e1d2d4:    f0 8f             	r0 += -1			  ## atomic.h:35:22
 1e1d2d6:    10 f6 6c a0       	[r10 + 108] = r0			  ## atomic.h:35:16
 1e1d2da:    97 f3 5d 4d       	call 3054266 <local_irq_enable : 106d98 >			  ## atomic.h:37:5
 1e1d2de:    00 f6 74 a0       	r0 = [r10 + 116]			  ## link_layer.c:1166:5
 1e1d2e2:    01 70             	r1 = 0			  ## link_layer.c:1166:5
 1e1d2e4:    c0 f2 0f 00       	if (r0 == r12) goto 30 <ll_thread_process+0xF2 : 1e1d306 >			  ## link_layer.c:1166:5
 1e1d2e8:    82 60             	r2 = b[r0 + 8] (u)			  ## link_layer.c:1169:32
 1e1d2ea:    f2 8f             	r2 += -1			  ## link_layer.c:1169:32
 1e1d2ec:    8a 60             	b[r0 + 8] = r2			  ## link_layer.c:1169:32
 1e1d2ee:    61 ff ff 29 09 00 	if ((r2 & 255) != 0) goto 18 <ll_thread_process+0xF2 : 1e1d306 >			  ## link_layer.c:1169:32
 1e1d2f4:    01 40             	r1 = [r0 + 0]			  ## list.h:171:36
 1e1d2f6:    12 40             	r2 = [r0 + 4]			  ## list.h:171:23
 1e1d2f8:    1a 42             	[r1 + 4] = r2			  ## list.h:159:16
 1e1d2fa:    09 44             	[r2 + 0] = r1			  ## list.h:160:16
 1e1d2fc:    08 40             	[r0 + 0] = r0			  ## list.h:172:17
 1e1d2fe:    18 40             	[r0 + 4] = r0			  ## list.h:173:17
 1e1d300:    bf f3 1e 24       	call -112580 <__bt_free : 1e01b40 >			  ## link_layer.c:1172:13
 1e1d304:    11 70             	r1 = 1
 1e1d306:    08 00             	csync			  ## link_layer.c:3044:12
 1e1d308:    00 f6 6c a0       	r0 = [r10 + 108]			  ## link_layer.c:3044:12
 1e1d30c:    15 09             	r5 += r1			  ## link_layer.c:3051:22
 1e1d30e:    d9 31             	if (r0 != 0) goto -78 <ll_thread_process+0xAE : 1e1d2c2 >			  ## link_layer.c:3051:22
 1e1d310:    60 ff ff 59 0b 00 	if ((r5 & 255) == 0) goto 22 <ll_thread_process+0x118 : 1e1d32c >
 1e1d316:    03 f7 00 d0       	r3 = h[r13 + 0] (u)			  ## ll_events.c:408:5
 1e1d31a:    41 05             	r1 = r5.b0 (u)			  ## ll_events.c:408:5
 1e1d31c:    30 71             	r0 = 19			  ## ll_events.c:408:5
 1e1d31e:    12 70             	r2 = 1			  ## ll_events.c:408:5
 1e1d320:    09 02             	[sp] = r1			  ## ll_events.c:408:5
 1e1d322:    c1 ff 43 59 e1 01 	r1 = 31545667 <update_target_end+0x2ABB : 1e15943 >			  ## ll_events.c:408:5
 1e1d328:    bf f3 67 df       	call -16690 <hci_send_event : 1e191fa >			  ## ll_events.c:408:5
 1e1d32c:    08 00             	csync			  ## link_layer.c:3057:12
 1e1d32e:    15 18             	goto 42 <ll_thread_process+0x146 : 1e1d35a >			  ## link_layer.c:3057:12
 1e1d330:    97 f3 34 4d       	call 3054184 <local_irq_disable : 106d9c >			  ## atomic.h:32:5
 1e1d334:    08 00             	csync			  ## atomic.h:32:5
 1e1d336:    00 f6 70 a0       	r0 = [r10 + 112]			  ## atomic.h:34:14
 1e1d33a:    f0 8f             	r0 += -1			  ## atomic.h:35:22
 1e1d33c:    10 f6 70 a0       	[r10 + 112] = r0			  ## atomic.h:35:16
 1e1d340:    97 f3 2a 4d       	call 3054164 <local_irq_enable : 106d98 >			  ## atomic.h:37:5
 1e1d344:    20 fb 80 0a       	r0 = 32768			  ## link_layer.c:3030:5
 1e1d348:    02 70             	r2 = 0			  ## link_layer.c:3030:5
 1e1d34a:    e1 08             	r1 = r14			  ## link_layer.c:3030:5
 1e1d34c:    bf f3 af f9       	call -3234 <ll_control_step_verify : 1e1c6ae >			  ## link_layer.c:3030:5
 1e1d350:    01 70             	r1 = 0			  ## link_layer.c:3033:5
 1e1d352:    e0 08             	r0 = r14			  ## link_layer.c:3033:5
 1e1d354:    bf f3 f8 f9       	call -3088 <ll_send_control_data_state_machine : 1e1c748 >			  ## link_layer.c:3033:5
 1e1d358:    08 00             	csync			  ## link_layer.c:3057:12
 1e1d35a:    00 f6 70 a0       	r0 = [r10 + 112]
 1e1d35e:    e8 31             	if (r0 != 0) goto -48 <ll_thread_process+0x11C : 1e1d330 >
 1e1d360:    00 f6 00 e0       	r0 = [r14 + 0]
 1e1d364:    01 f9 09 80       	r1 = b[r8 + 9] (u)			  ## link_layer.c:3008:9
 1e1d368:    00 40             	r0 = [r0 + 0]			  ## link_layer.c:3008:9
 1e1d36a:    11 e0 04 10       	if (r1 != 1) goto 8 <ll_thread_process+0x162 : 1e1d376 >			  ## link_layer.c:3008:9
 1e1d36e:    c1 ff 56 d5 e1 01 	r1 = 31577430 <__conn_slave_rx_post_handler : 1e1d556 >			  ## ll_slave.c:781:5
 1e1d374:    03 18             	goto 6 <ll_thread_process+0x168 : 1e1d37c >			  ## ll_slave.c:781:5
 1e1d376:    c1 ff e4 dd e1 01 	r1 = 31579620 <__conn_master_rx_post_handler : 1e1dde4 >			  ## ll_master.c:588:5
 1e1d37c:    bf f3 9d ed       	call -9414 <le_hw_upload_data : 1e1aeba >
 1e1d380:    06 f7 00 a0       	r6 = h[r10 + 0] (u)			  ## link_layer.c:3020:36
 1e1d384:    97 f3 0a 4d       	call 3054100 <local_irq_disable : 106d9c >			  ## link_layer.c:302:5
 1e1d388:    05 f6 4c d0       	r5 = [r13 + 76]			  ## link_layer.c:303:5
 1e1d38c:    d7 fc 4c 00       	r7 = r13 + 76			  ## link_layer.c:303:5
 1e1d390:    75 f2 16 00       	if (r5 == r7) goto 44 <ll_thread_process+0x1AC : 1e1d3c0 >			  ## link_layer.c:303:5
 1e1d394:    30 4a             	r0 = [r5 + 12]			  ## link_layer.c:304:15
 1e1d396:    a0 b1             	r0 = r0 - r6			  ## link_layer.c:304:26
 1e1d398:    04 4a             	r4 = [r5 + 0]			  ## link_layer.c:304:26
 1e1d39a:    20 04             	r0 = r0.l (u)			  ## link_layer.c:305:14
 1e1d39c:    f0 8f             	r0 += -1			  ## link_layer.c:305:28
 1e1d39e:    90 f2 0c 90       	if (r0 <= r9) goto 24 <ll_thread_process+0x1A6 : 1e1d3ba >			  ## link_layer.c:305:28
 1e1d3a2:    00 4a             	r0 = [r5 + 0]			  ## list.h:171:36
 1e1d3a4:    11 4a             	r1 = [r5 + 4]			  ## list.h:171:23
 1e1d3a6:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e1d3a8:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e1d3aa:    0d 4a             	[r5 + 0] = r5			  ## list.h:172:17
 1e1d3ac:    1d 4a             	[r5 + 4] = r5			  ## list.h:173:17
 1e1d3ae:    21 4a             	r1 = [r5 + 8]			  ## link_layer.c:307:16
 1e1d3b0:    e0 08             	r0 = r14			  ## link_layer.c:307:13
 1e1d3b2:    81 00             	call r1			  ## link_layer.c:307:13
 1e1d3b4:    50 08             	r0 = r5			  ## link_layer.c:308:13
 1e1d3b6:    bf f3 c3 23       	call -112762 <__bt_free : 1e01b40 >			  ## link_layer.c:308:13
 1e1d3ba:    45 08             	r5 = r4
 1e1d3bc:    74 f2 ea 1f       	if (r4 != r7) goto -44 <ll_thread_process+0x180 : 1e1d394 >
 1e1d3c0:    97 f3 ea 4c       	call 3054036 <local_irq_enable : 106d98 >			  ## link_layer.c:311:5
 1e1d3c4:    00 f9 08 80       	r0 = b[r8 + 8] (u)			  ## link_layer.c:3247:19
 1e1d3c8:    80 e0 0f 10       	if (r0 != 8) goto 30 <ll_thread_process+0x1D6 : 1e1d3ea >			  ## link_layer.c:3247:13
 1e1d3cc:    e0 08             	r0 = r14			  ## link_layer.c:3249:13
 1e1d3ce:    bf f3 33 f6       	call -5018 <ll_delete_link : 1e1c038 >			  ## link_layer.c:3249:13
 1e1d3d2:    e0 7f             	r0 = 254			  ## link_layer.c:3250:13
 1e1d3d4:    02 70             	r2 = 0			  ## link_layer.c:3250:13
 1e1d3d6:    03 70             	r3 = 0			  ## link_layer.c:3250:13
 1e1d3d8:    c1 ff 52 59 e1 01 	r1 = 31545682 <update_target_end+0x2ACA : 1e15952 >			  ## link_layer.c:3250:13
 1e1d3de:    bf f3 0c df       	call -16872 <hci_send_event : 1e191fa >			  ## link_layer.c:3250:13
 1e1d3e2:    b8 08             	r8 = r11			  ## link_layer.c:3250:13
 1e1d3e4:    f8 f2 5e 1f       	if (r8 != r15) goto -324 <ll_thread_process+0x90 : 1e1d2a4 >			  ## link_layer.c:3250:13
 1e1d3e8:    4c 18             	goto 152 <ll_thread_process+0x26E : 1e1d482 >			  ## link_layer.c:3250:13
 1e1d3ea:    85 fc 58 01       	r5 = r8 + 344
 1e1d3ee:    10 6a             	r0 = b[r5 + 1] (u)			  ## link_layer.c:3193:15
 1e1d3f0:    10 e0 28 10       	if (r0 != 1) goto 80 <ll_thread_process+0x230 : 1e1d444 >			  ## link_layer.c:3193:15
 1e1d3f4:    00 f6 34 a0       	r0 = [r10 + 52]			  ## link_layer.c:457:15
 1e1d3f8:    20 f3 24 00       	if ((r0 & 1) != 0) goto 72 <ll_thread_process+0x230 : 1e1d444 >			  ## link_layer.c:457:15
 1e1d3fc:    10 b0             	r0 |= 1			  ## link_layer.c:462:29
 1e1d3fe:    10 f6 34 a0       	[r10 + 52] = r0			  ## link_layer.c:462:29
 1e1d402:    00 f7 00 d0       	r0 = h[r13 + 0] (u)			  ## link_layer.c:3196:66
 1e1d406:    c1 ff 01 0f 00 00 	r1 = 3841 <le_param+0x49 : f01 >			  ## link_layer.c:3196:66
 1e1d40c:    08 62             	b[r1 + 0] = r0			  ## link_layer.c:3196:58
 1e1d40e:    00 d2             	r0 = r0 >> 8			  ## link_layer.c:3196:58
 1e1d410:    18 62             	b[r1 + 1] = r0			  ## link_layer.c:3196:58
 1e1d412:    00 f7 1e e0       	r0 = h[r14 + 30] (u)			  ## link_layer.c:3197:74
 1e1d416:    28 62             	b[r1 + 2] = r0			  ## link_layer.c:3197:58
 1e1d418:    02 d2             	r2 = r0 >> 8			  ## link_layer.c:3197:58
 1e1d41a:    3a 62             	b[r1 + 3] = r2			  ## link_layer.c:3197:58
 1e1d41c:    5a 62             	b[r1 + 5] = r2			  ## link_layer.c:3198:58
 1e1d41e:    48 62             	b[r1 + 4] = r0			  ## link_layer.c:3198:58
 1e1d420:    00 f7 20 e0       	r0 = h[r14 + 32] (u)			  ## link_layer.c:3199:69
 1e1d424:    68 62             	b[r1 + 6] = r0			  ## link_layer.c:3199:53
 1e1d426:    00 d2             	r0 = r0 >> 8			  ## link_layer.c:3199:53
 1e1d428:    78 62             	b[r1 + 7] = r0			  ## link_layer.c:3199:53
 1e1d42a:    00 f7 22 e0       	r0 = h[r14 + 34] (u)			  ## link_layer.c:3200:76
 1e1d42e:    88 62             	b[r1 + 8] = r0			  ## link_layer.c:3200:60
 1e1d430:    00 d2             	r0 = r0 >> 8			  ## link_layer.c:3200:60
 1e1d432:    98 62             	b[r1 + 9] = r0			  ## link_layer.c:3200:60
 1e1d434:    20 70             	r0 = 2			  ## link_layer.c:3201:33
 1e1d436:    18 6a             	b[r5 + 1] = r0			  ## link_layer.c:3201:33
 1e1d438:    e0 08             	r0 = r14			  ## link_layer.c:3202:13
 1e1d43a:    c1 ff 58 be e1 01 	r1 = 31571544 <master_connection_update_steps : 1e1be58 >			  ## link_layer.c:3202:13
 1e1d440:    bf f3 91 fa       	call -2782 <ll_control_data_step_start : 1e1c966 >			  ## link_layer.c:3202:13
 1e1d444:    00 f6 00 e0       	r0 = [r14 + 0]			  ## link_layer.c:3262:33
 1e1d448:    c2 a0             	r2 = sp + 12			  ## link_layer.c:3262:33
 1e1d44a:    31 71             	r1 = 19			  ## link_layer.c:3262:9
 1e1d44c:    bf f3 24 e6       	call -13240 <le_hw_ioctrl : 1e1a098 >			  ## link_layer.c:3262:9
 1e1d450:    00 6a             	r0 = b[r5 + 0] (u)			  ## link_layer.c:3267:19
 1e1d452:    34 02             	r4 = [sp+12]			  ## link_layer.c:3265:18
 1e1d454:    00 e1 10 30       	if (r0 < 16) goto 32 <ll_thread_process+0x264 : 1e1d478 >
 1e1d458:    20 fd 0f 09       	r0 = r0 & 15			  ## link_layer.c:3267:19
 1e1d45c:    0d 20             	if (r0 == 0) goto 26 <ll_thread_process+0x264 : 1e1d478 >			  ## link_layer.c:3267:19
 1e1d45e:    08 6a             	b[r5 + 0] = r0			  ## link_layer.c:3268:39
 1e1d460:    03 f7 00 d0       	r3 = h[r13 + 0] (u)			  ## ll_events.c:693:34
 1e1d464:    01 f7 00 a0       	r1 = h[r10 + 0] (u)			  ## ll_events.c:694:34
 1e1d468:    00 7f             	r0 = 240			  ## ll_events.c:690:9
 1e1d46a:    02 70             	r2 = 0			  ## ll_events.c:690:9
 1e1d46c:    09 02             	[sp] = r1			  ## ll_events.c:690:9
 1e1d46e:    c1 ff 4d 59 e1 01 	r1 = 31545677 <update_target_end+0x2AC5 : 1e1594d >			  ## ll_events.c:690:9
 1e1d474:    bf f3 2c f7       	call -4520 <__hci_emit_le_meta_event : 1e1c2d0 >			  ## ll_events.c:690:9
 1e1d478:    20 02             	r0 = [sp+8]
 1e1d47a:    50 b9             	r0 &= r4			  ## link_layer.c:3265:15
 1e1d47c:    fb f2 10 1f       	if (r11 != r15) goto -480 <ll_thread_process+0x8C : 1e1d2a0 >
 1e1d480:    01 18             	goto 2 <ll_thread_process+0x270 : 1e1d484 >
 1e1d482:    20 02             	r0 = [sp+8]
 1e1d484:    0f 20             	if (r0 == 0) goto 30 <ll_thread_process+0x290 : 1e1d4a4 >
 1e1d486:    c0 ff 00 2b 00 00 	r0 = 11008 <ll_hdl : 2b00 >			  ## link_layer.c:3292:47
 1e1d48c:    14 40             	r4 = [r0 + 4]			  ## link_layer.c:3292:47
 1e1d48e:    97 f3 85 4c       	call 3053834 <local_irq_disable : 106d9c >			  ## lbuf.c:169:5
 1e1d492:    05 48             	r5 = [r4 + 0]			  ## list.h:124:18
 1e1d494:    97 f3 80 4c       	call 3053824 <local_irq_enable : 106d98 >			  ## lbuf.c:171:9
 1e1d498:    45 f2 04 10       	if (r5 != r4) goto 8 <ll_thread_process+0x290 : 1e1d4a4 >			  ## lbuf.c:171:9
 1e1d49c:    01 70             	r1 = 0			  ## link_layer.c:3294:9
 1e1d49e:    10 02             	r0 = [sp+4]			  ## link_layer.c:3294:9
 1e1d4a0:    bf f3 8c 4f       	call -90344 <thread_suspend : 1e073bc >			  ## link_layer.c:3294:9
 1e1d4a4:    0a 0a             	sp += 20
 1e1d4a6:    5f 01             	{pc, r15-r4} = [sp++]			  ## link_layer.c:3296:1


__master_ll_send_phy_update_ind_callback:
 1e1d4a8:    00 40             	r0 = [r0 + 0]			  ## ll_multiple_phys.c:240:0
 1e1d4aa:    21 71             	r1 = 18			  ## ll_multiple_phys.c:243:5
 1e1d4ac:    12 70             	r2 = 1			  ## ll_multiple_phys.c:243:5
 1e1d4ae:    ff f3 f3 e5       	goto -13338 <le_hw_ioctrl : 1e1a098 >			  ## ll_multiple_phys.c:243:5


ll_get_update_handle:
 1e1d4b2:    c0 ff a8 0e 00 00 	r0 = 3752 <ll_update_handle : ea8 >			  ## ll_slave.c:417:0
 1e1d4b8:    00 50             	r0 = h[r0 + 0] (u)			  ## ll_slave.c:418:12
 1e1d4ba:    20 00             	rts			  ## ll_slave.c:418:5


conn_rx_acl_u_post_handler:
 1e1d4bc:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:1404:0
 1e1d4be:    a2 62             	r2 = b[r1 + 10] (u)			  ## link_layer.c:1405:13
 1e1d4c0:    1e 24             	if (r2 == 0) goto 60 <conn_rx_acl_u_post_handler+0x42 : 1e1d4fe >			  ## link_layer.c:1405:13
 1e1d4c2:    03 f9 f8 00       	r3 = b[r0 + 248] (u)			  ## link_layer.c:1409:25
 1e1d4c6:    0b 63             	b[r1 + 16] = r3			  ## link_layer.c:1409:17
 1e1d4c8:    43 52             	r3 = h[r1 + 8] (u)			  ## link_layer.c:1412:13
 1e1d4ca:    82 fd 20 43       	r4 = uextra(r3, p:4, l:2)			  ## link_layer.c:1412:9
 1e1d4ce:    03 93             	r3 = r1 + 16			  ## link_layer.c:1409:5
 1e1d4d0:    24 e0 04 00       	if (r4 == 2) goto 8 <conn_rx_acl_u_post_handler+0x20 : 1e1d4dc >			  ## link_layer.c:1409:5
 1e1d4d4:    14 e0 07 10       	if (r4 != 1) goto 14 <conn_rx_acl_u_post_handler+0x2A : 1e1d4e6 >
 1e1d4d8:    04 71             	r4 = 16
 1e1d4da:    01 18             	goto 2 <conn_rx_acl_u_post_handler+0x22 : 1e1d4de >
 1e1d4dc:    04 72             	r4 = 32
 1e1d4de:    00 f9 f9 00       	r0 = b[r0 + 249] (u)
 1e1d4e2:    50 b8             	r0 |= r4
 1e1d4e4:    18 63             	b[r1 + 17] = r0
 1e1d4e6:    2a 63             	b[r1 + 18] = r2			  ## link_layer.c:1418:17
 1e1d4e8:    00 70             	r0 = 0			  ## link_layer.c:1419:17
 1e1d4ea:    38 63             	b[r1 + 19] = r0			  ## link_layer.c:1419:17
 1e1d4ec:    c0 ff 48 2a 00 00 	r0 = 10824 <h4_transport : 2a48 >			  ## link_layer.c:1423:5
 1e1d4f2:    00 40             	r0 = [r0 + 0]			  ## link_layer.c:1423:5
 1e1d4f4:    64 40             	r4 = [r0 + 24]			  ## link_layer.c:1423:20
 1e1d4f6:    42 80             	r2 += 4			  ## link_layer.c:1423:71
 1e1d4f8:    20 70             	r0 = 2			  ## link_layer.c:1423:5
 1e1d4fa:    31 08             	r1 = r3			  ## link_layer.c:1423:5
 1e1d4fc:    84 00             	call r4			  ## link_layer.c:1423:5
 1e1d4fe:    54 01             	{pc, r4} = [sp++]			  ## link_layer.c:1428:1


__instant_link_lost:
 1e1d500:    12 70             	r2 = 1			  ## link_layer.c:1350:0
 1e1d502:    13 70             	r3 = 1			  ## link_layer.c:1357:35
 1e1d504:    10 f2 01 00       	if (r0 == r1) goto 2 <__instant_link_lost+0xA : 1e1d50a >			  ## link_layer.c:1357:35
 1e1d508:    03 70             	r3 = 0			  ## link_layer.c:1357:35
 1e1d50a:    60 b0             	r0 = r0 - r1			  ## link_layer.c:1355:19
 1e1d50c:    20 04             	r0 = r0.l (u)			  ## link_layer.c:1355:19
 1e1d50e:    01 fb fe 7f       	r1 = 32766 <nvbss_size+0x14FE : 7ffe >			  ## link_layer.c:1357:14
 1e1d512:    10 f2 01 80       	if (r0 > r1) goto 2 <__instant_link_lost+0x18 : 1e1d518 >
 1e1d516:    02 70             	r2 = 0			  ## link_layer.c:1357:14
 1e1d518:    e0 fd 20 03       	r0 = r3 | r2			  ## link_layer.c:1357:23
 1e1d51c:    20 00             	rts			  ## link_layer.c:1362:1


ll_slave_cal_widening:
 1e1d51e:    51 61             	r1 = b[r0 + 21] (u)			  ## link_layer.c:3788:0
 1e1d520:    09 d1             	r1 = r1 >> 4			  ## link_layer.c:3795:26
 1e1d522:    21 fd 0e 19       	r1 = r1 & 14			  ## link_layer.c:3795:44
 1e1d526:    c2 ff 24 be e1 01 	r2 = 31571492 <master_sca : 1e1be24 >			  ## link_layer.c:3795:26
 1e1d52c:    01 f8 00 12       	r1 = h[r1+r2] (u)			  ## link_layer.c:3795:26
 1e1d530:    52 50             	r2 = h[r0 + 10] (u)			  ## link_layer.c:3795:58
 1e1d532:    63 50             	r3 = h[r0 + 12] (u)			  ## link_layer.c:3795:77
 1e1d534:    11 fc f4 01       	r1 = r1 + 500			  ## link_layer.c:3795:49
 1e1d538:    51 0e             	r1 = r2 * r1			  ## link_layer.c:3795:56
 1e1d53a:    12 96             	r2 = r3 + 1			  ## link_layer.c:3795:92
 1e1d53c:    89 0e             	r1 = r1 * r2			  ## link_layer.c:3795:74
 1e1d53e:    02 fb e2 04       	r2 = 1250 <BTCTLER_CONTROLLER_DATA_SIZE+0x24 : 4e2 >			  ## link_layer.c:3795:56
 1e1d542:    89 0e             	r1 = r1 * r2			  ## link_layer.c:3795:97
 1e1d544:    c2 ff 40 42 0f 00 	r2 = 1000000 <text_size+0xD3390 : f4240 >			  ## link_layer.c:3795:114
 1e1d54a:    c0 fe 20 11       	r1 = r1 / r2 (u)			  ## link_layer.c:3795:114
 1e1d54e:    49 c0             	r1 = r1 << 1			  ## link_layer.c:3797:21
 1e1d550:    21 80             	r1 += 2			  ## link_layer.c:3797:21
 1e1d552:    b9 50             	h[r0 + 22] = r1			  ## link_layer.c:3797:21
 1e1d554:    20 00             	rts			  ## link_layer.c:3798:1


__conn_slave_rx_post_handler:
 1e1d556:    7f 01             	[--sp] = {rets, r15-r4}			  ## ll_slave.c:751:0
 1e1d558:    f6 0b             	sp += -20			  ## ll_slave.c:751:0
 1e1d55a:    05 08             	r5 = r0			  ## ll_slave.c:751:0
 1e1d55c:    56 fc 1c 01       	r6 = r5 + 284			  ## ll_slave.c:751:0
 1e1d560:    f3 4d             	r3 = [r6 + 124]			  ## ll_slave.c:755:15
 1e1d562:    14 08             	r4 = r1			  ## ll_slave.c:755:15
 1e1d564:    87 98             	r7 = r4 + 8
 1e1d566:    0e 26             	if (r3 == 0) goto 28 <__conn_slave_rx_post_handler+0x2E : 1e1d584 >
 1e1d568:    22 6e             	r2 = b[r7 + 2] (u)			  ## ll_slave.c:756:48
 1e1d56a:    c1 9e             	r1 = r7 + 12			  ## ll_slave.c:756:38
 1e1d56c:    83 00             	call r3			  ## ll_slave.c:756:9
 1e1d56e:    00 5e             	r0 = h[r7 + 0] (u)			  ## ll_slave.c:757:18
 1e1d570:    82 fd 20 10       	r1 = uextra(r0, p:4, l:2)			  ## ll_slave.c:757:18
 1e1d574:    f1 8f             	r1 += -1			  ## ll_slave.c:757:45
 1e1d576:    61 04             	r1 = r1.l (u)			  ## ll_slave.c:757:45
 1e1d578:    11 e0 05 80       	if (r1 > 1) goto 10 <__conn_slave_rx_post_handler+0x30 : 1e1d586 >			  ## ll_slave.c:757:45
 1e1d57c:    40 08             	r0 = r4			  ## ll_slave.c:758:13
 1e1d57e:    bf f3 c6 22       	call -113268 <hw_dma_free : 1e01b0e >			  ## ll_slave.c:758:13
 1e1d582:    74 1a             	goto 1256 <.GJTIE954_0_0_+0x418 : 1e1da6c >			  ## ll_slave.c:758:13
 1e1d584:    00 5e             	r0 = h[r7 + 0] (u)
 1e1d586:    00 d1             	r0 = r0 >> 4			  ## ll_slave.c:763:17
 1e1d588:    60 ff 03 09 6f 02 	if ((r0 & 3) == 0) goto 1246 <.GJTIE954_0_0_+0x418 : 1e1da6c >			  ## ll_slave.c:763:17
 1e1d58e:    20 fd 03 09       	r0 = r0 & 3			  ## ll_slave.c:763:5
 1e1d592:    30 e0 04 00       	if (r0 == 3) goto 8 <__conn_slave_rx_post_handler+0x48 : 1e1d59e >			  ## ll_slave.c:763:5
 1e1d596:    50 08             	r0 = r5			  ## ll_slave.c:769:9
 1e1d598:    41 08             	r1 = r4			  ## ll_slave.c:769:9
 1e1d59a:    90 17             	call -224 <conn_rx_acl_u_post_handler : 1e1d4bc >			  ## ll_slave.c:769:9
 1e1d59c:    67 1a             	goto 1230 <.GJTIE954_0_0_+0x418 : 1e1da6c >			  ## ll_slave.c:769:9
 1e1d59e:    c3 6e             	r3 = b[r7 + 12] (u)			  ## ll_slave.c:547:17
 1e1d5a0:    c8 ff 53 59 e1 01 	r8 = 31545683 <update_target_end+0x2ACB : 1e15953 >			  ## ll_slave.c:547:17
 1e1d5a6:    53 e4 5e 80       	if (r3 > 69) goto 188 <.GJTIE954_0_0_+0x12 : 1e1d666 >			  ## ll_slave.c:547:17
 1e1d5aa:    da 9e             	r10 = r7 + 13			  ## ll_slave.c:548:23
 1e1d5ac:    58 c0             	r0 = r3 << 1
 1e1d5ae:    c2 ff b8 0e 00 00 	r2 = 3768 <le_param : eb8 >
 1e1d5b4:    c9 ff 51 59 e1 01 	r9 = 31545681 <update_target_end+0x2AC9 : 1e15951 >
 1e1d5ba:    5c fc 28 00       	r12 = r5 + 40
 1e1d5be:    5d fc 90 00       	r13 = r5 + 144
 1e1d5c2:    5b fc c0 00       	r11 = r5 + 192
 1e1d5c6:    b0 00             	tbh [r0]


.GJTIL954_0_0_:
 1e1d5c8:    73 00     < 115 : 0x73 >
 1e1d5ca:    81 00     < 129 : 0x81 >
 1e1d5cc:    93 00     < 147 : 0x93 >
 1e1d5ce:    9c 00     < 156 : 0x9C >
 1e1d5d0:    4c 00     < 76 : 0x4C >
 1e1d5d2:    4c 00     < 76 : 0x4C >
 1e1d5d4:    1c 01     < 284 : 0x11C >
 1e1d5d6:    48 02     < 584 : 0x248 >
 1e1d5d8:    26 01     < 294 : 0x126 >
 1e1d5da:    51 01     < 337 : 0x151 >
 1e1d5dc:    76 01     < 374 : 0x176 >
 1e1d5de:    81 01     < 385 : 0x181 >
 1e1d5e0:    8a 01     < 394 : 0x18A >
 1e1d5e2:    4c 00     < 76 : 0x4C >
 1e1d5e4:    4c 00     < 76 : 0x4C >
 1e1d5e6:    46 00     < 70 : 0x46 >
 1e1d5e8:    4c 00     < 76 : 0x4C >
 1e1d5ea:    48 02     < 584 : 0x248 >
 1e1d5ec:    46 00     < 70 : 0x46 >
 1e1d5ee:    48 02     < 584 : 0x248 >
 1e1d5f0:    46 00     < 70 : 0x46 >
 1e1d5f2:    46 00     < 70 : 0x46 >
 1e1d5f4:    46 00     < 70 : 0x46 >
 1e1d5f6:    46 00     < 70 : 0x46 >
 1e1d5f8:    48 02     < 584 : 0x248 >
 1e1d5fa:    46 00     < 70 : 0x46 >
 1e1d5fc:    46 00     < 70 : 0x46 >
 1e1d5fe:    46 00     < 70 : 0x46 >
 1e1d600:    46 00     < 70 : 0x46 >
 1e1d602:    46 00     < 70 : 0x46 >
 1e1d604:    46 00     < 70 : 0x46 >
 1e1d606:    48 02     < 584 : 0x248 >
 1e1d608:    46 00     < 70 : 0x46 >
 1e1d60a:    48 02     < 584 : 0x248 >
 1e1d60c:    46 00     < 70 : 0x46 >
 1e1d60e:    46 00     < 70 : 0x46 >
 1e1d610:    46 00     < 70 : 0x46 >
 1e1d612:    46 00     < 70 : 0x46 >
 1e1d614:    46 00     < 70 : 0x46 >
 1e1d616:    46 00     < 70 : 0x46 >
 1e1d618:    46 00     < 70 : 0x46 >
 1e1d61a:    46 00     < 70 : 0x46 >
 1e1d61c:    46 00     < 70 : 0x46 >
 1e1d61e:    46 00     < 70 : 0x46 >
 1e1d620:    46 00     < 70 : 0x46 >
 1e1d622:    46 00     < 70 : 0x46 >
 1e1d624:    46 00     < 70 : 0x46 >
 1e1d626:    46 00     < 70 : 0x46 >
 1e1d628:    46 00     < 70 : 0x46 >
 1e1d62a:    46 00     < 70 : 0x46 >
 1e1d62c:    46 00     < 70 : 0x46 >
 1e1d62e:    46 00     < 70 : 0x46 >
 1e1d630:    46 00     < 70 : 0x46 >
 1e1d632:    46 00     < 70 : 0x46 >
 1e1d634:    46 00     < 70 : 0x46 >
 1e1d636:    46 00     < 70 : 0x46 >
 1e1d638:    46 00     < 70 : 0x46 >
 1e1d63a:    46 00     < 70 : 0x46 >
 1e1d63c:    46 00     < 70 : 0x46 >
 1e1d63e:    46 00     < 70 : 0x46 >
 1e1d640:    46 00     < 70 : 0x46 >
 1e1d642:    46 00     < 70 : 0x46 >
 1e1d644:    46 00     < 70 : 0x46 >
 1e1d646:    46 00     < 70 : 0x46 >
 1e1d648:    a9 01     < 425 : 0x1A9 >
 1e1d64a:    46 00     < 70 : 0x46 >
 1e1d64c:    46 00     < 70 : 0x46 >
 1e1d64e:    46 00     < 70 : 0x46 >
 1e1d650:    46 00     < 70 : 0x46 >
 1e1d652:    c3 01     < 451 : 0x1C3 >
 1e1d654:    71 70             	r1 = 7
 1e1d656:    50 08             	r0 = r5
 1e1d658:    82 08             	r2 = r8
 1e1d65a:    bf f3 d5 f5       	call -5206 <ll_send_control_data : 1e1c208 >
 1e1d65e:    fc 19             	goto 1016 <.GJTIE954_0_0_+0x404 : 1e1da58 >
 1e1d660:    8f f3 be 2e       	call 1990012 <p33_soft_reset : 33e0 >
 1e1d664:    f9 19             	goto 1010 <.GJTIE954_0_0_+0x404 : 1e1da58 >
 1e1d666:    93 e4 f5 1f       	if (r3 != 73) goto -22 <.GJTIE954_0_0_ : 1e1d654 >
 1e1d66a:    bf f3 f4 db       	call -18456 <get_bt_osc_offset_flag : 1e18e56 >			  ## ll_slave.c:523:9
 1e1d66e:    00 e0 f3 11       	if (r0 != 0) goto 998 <.GJTIE954_0_0_+0x404 : 1e1da58 >			  ## ll_slave.c:523:9
 1e1d672:    00 6f             	r0 = b[r7 + 16] (u)			  ## ll_slave.c:522:24
 1e1d674:    f1 6e             	r1 = b[r7 + 15] (u)			  ## ll_slave.c:522:46
 1e1d676:    e2 6e             	r2 = b[r7 + 14] (u)			  ## ll_slave.c:522:68
 1e1d678:    d3 6e             	r3 = b[r7 + 13] (u)			  ## ll_slave.c:522:88
 1e1d67a:    00 c6             	r0 = r0 << 24			  ## ll_slave.c:522:36
 1e1d67c:    c8 fd 80 01       	r0 <= insert(r1, p:16, l:8)			  ## ll_slave.c:522:43
 1e1d680:    c8 fd 40 02       	r0 <= insert(r2, p:8, l:8)			  ## ll_slave.c:522:65
 1e1d684:    50 b6             	r0 |= r3			  ## ll_slave.c:522:86
 1e1d686:    bf f3 f2 db       	call -18460 <bt_osc_offset_set : 1e18e6e >			  ## ll_slave.c:529:5
 1e1d68a:    10 6f             	r0 = b[r7 + 17] (u)			  ## ll_slave.c:531:9
 1e1d68c:    0b 20             	if (r0 == 0) goto 22 <.GJTIE954_0_0_+0x50 : 1e1d6a4 >			  ## ll_slave.c:531:9
 1e1d68e:    bf f3 f7 db       	call -18450 <bt_osc_offset_save : 1e18e80 >			  ## ll_slave.c:533:9
 1e1d692:    bf f3 11 dc       	call -18398 <bt_fre_offset_get : 1e18eb8 >			  ## ll_slave.c:534:63
 1e1d696:    02 08             	r2 = r0			  ## ll_slave.c:534:63
 1e1d698:    c1 ff 30 59 e1 01 	r1 = 31545648 <update_target_end+0x2AA8 : 1e15930 >			  ## ll_slave.c:534:9
 1e1d69e:    60 7f             	r0 = 246			  ## ll_slave.c:534:9
 1e1d6a0:    bf f3 ab dd       	call -17578 <hci_send_event : 1e191fa >			  ## ll_slave.c:534:9
 1e1d6a4:    00 4a             	r0 = [r5 + 0]			  ## ll_slave.c:538:30
 1e1d6a6:    bf f3 9c ec       	call -9928 <ble_pll_comp_reset : 1e1afe2 >			  ## ll_slave.c:538:5
 1e1d6aa:    01 75             	r1 = 80			  ## ll_slave.c:539:5
 1e1d6ac:    09 19             	goto 530 <.GJTIE954_0_0_+0x26C : 1e1d8c0 >			  ## ll_slave.c:539:5
 1e1d6ae:    91 70             	r1 = 9			  ## ll_slave.c:51:19
 1e1d6b0:    a0 08             	r0 = r10			  ## ll_slave.c:51:19
 1e1d6b2:    bf f3 fe 4d       	call -91140 <btctler_little_endian_read_16 : 1e072b2 >			  ## ll_slave.c:51:19
 1e1d6b6:    31 5e             	r1 = h[r7 + 6] (u)			  ## ll_slave.c:54:9
 1e1d6b8:    09 08             	r9 = r0			  ## ll_slave.c:51:19
 1e1d6ba:    22 17             	call -444 <__instant_link_lost : 1e1d500 >			  ## ll_slave.c:54:9
 1e1d6bc:    10 e0 5e 11       	if (r0 != 1) goto 700 <.GJTIE954_0_0_+0x328 : 1e1d97c >			  ## ll_slave.c:54:9
 1e1d6c0:    81 72             	r1 = 40			  ## ll_slave.c:56:9
 1e1d6c2:    50 08             	r0 = r5			  ## ll_slave.c:56:9
 1e1d6c4:    bf f3 22 f7       	call -4540 <ll_disconnect_process : 1e1c50c >			  ## ll_slave.c:56:9
 1e1d6c8:    c7 19             	goto 910 <.GJTIE954_0_0_+0x404 : 1e1da58 >			  ## ll_slave.c:56:9
 1e1d6ca:    50 fc 24 00       	r0 = r5 + 36			  ## ll_slave.c:114:5
 1e1d6ce:    52 70             	r2 = 5			  ## ll_slave.c:114:5
 1e1d6d0:    a1 08             	r1 = r10			  ## ll_slave.c:114:5
 1e1d6d2:    97 f3 07 4c       	call 3053582 <memcpy : 106ee4 >			  ## ll_slave.c:114:5
 1e1d6d6:    51 70             	r1 = 5			  ## ll_slave.c:116:19
 1e1d6d8:    a0 08             	r0 = r10			  ## ll_slave.c:116:19
 1e1d6da:    bf f3 ea 4d       	call -91180 <btctler_little_endian_read_16 : 1e072b2 >			  ## ll_slave.c:116:19
 1e1d6de:    31 5e             	r1 = h[r7 + 6] (u)			  ## ll_slave.c:118:9
 1e1d6e0:    06 08             	r6 = r0			  ## ll_slave.c:116:19
 1e1d6e2:    0e 17             	call -484 <__instant_link_lost : 1e1d500 >			  ## ll_slave.c:118:9
 1e1d6e4:    10 e0 aa 11       	if (r0 != 1) goto 852 <.GJTIE954_0_0_+0x3E8 : 1e1da3c >			  ## ll_slave.c:118:9
 1e1d6e8:    50 08             	r0 = r5			  ## ll_slave.c:122:9
 1e1d6ea:    74 14             	call -1816 <__channel_map_upadte : 1e1cfd4 >			  ## ll_slave.c:122:9
 1e1d6ec:    b5 19             	goto 874 <.GJTIE954_0_0_+0x404 : 1e1da58 >			  ## ll_slave.c:122:9
 1e1d6ee:    02 f7 00 d0       	r2 = h[r13 + 0] (u)			  ## ll_slave.c:143:66
 1e1d6f2:    d0 6e             	r0 = b[r7 + 13] (u)			  ## ll_slave.c:142:20
 1e1d6f4:    10 f9 89 51       	b[r5 + 393] = r0			  ## ll_slave.c:142:18
 1e1d6f8:    c1 ff 78 da e1 01 	r1 = 31578744 <__slave_receive_terminte_ind_done : 1e1da78 >			  ## ll_slave.c:143:5
 1e1d6fe:    a9 19             	goto 850 <.GJTIE954_0_0_+0x3FE : 1e1da52 >			  ## ll_slave.c:143:5
 1e1d700:    01 f9 15 c0       	r1 = b[r12 + 21] (u)
 1e1d704:    19 70             	r9 = 1
 1e1d706:    11 e0 07 00       	if (r1 == 1) goto 14 <.GJTIE954_0_0_+0xC4 : 1e1d718 >
 1e1d70a:    8f f3 69 2e       	call 1989842 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1d70e:    01 f9 15 c0       	r1 = b[r12 + 21] (u)			  ## cpu.h:148:5
 1e1d712:    11 e0 01 00       	if (r1 == 1) goto 2 <.GJTIE954_0_0_+0xC4 : 1e1d718 >			  ## cpu.h:148:5
 1e1d716:    09 70             	r9 = 0			  ## ll_slave.c:189:5
 1e1d718:    0e f9 19 70       	r14 = b[r7 + 25] (u)			  ## ll_slave.c:193:5
 1e1d71c:    d2 6f             	r2 = b[r7 + 29] (u)			  ## ll_slave.c:193:5
 1e1d71e:    73 6f             	r3 = b[r7 + 23] (u)			  ## ll_slave.c:193:5
 1e1d720:    0c f9 18 70       	r12 = b[r7 + 24] (u)			  ## ll_slave.c:193:5
 1e1d724:    e0 6f             	r0 = b[r7 + 30] (u)			  ## ll_slave.c:193:5
 1e1d726:    0d f9 1c 70       	r13 = b[r7 + 28] (u)			  ## ll_slave.c:193:5
 1e1d72a:    b1 6f             	r1 = b[r7 + 27] (u)			  ## ll_slave.c:193:5
 1e1d72c:    0f f9 1a 70       	r15 = b[r7 + 26] (u)			  ## ll_slave.c:193:5
 1e1d730:    78 6c             	b[r6 + 7] = r0			  ## ll_slave.c:193:5
 1e1d732:    1d f9 05 60       	b[r6 + 5] = r13			  ## ll_slave.c:193:5
 1e1d736:    49 6c             	b[r6 + 4] = r1			  ## ll_slave.c:193:5
 1e1d738:    1f f9 03 60       	b[r6 + 3] = r15			  ## ll_slave.c:193:5
 1e1d73c:    1c f9 01 60       	b[r6 + 1] = r12			  ## ll_slave.c:193:5
 1e1d740:    0b 6c             	b[r6 + 0] = r3			  ## ll_slave.c:193:5
 1e1d742:    c8 fd 40 20       	r2 <= insert(r0, p:8, l:8)			  ## ll_slave.c:193:5
 1e1d746:    d0 fd 80 12       	r1 <= insert(r2, p:16, l:16)			  ## ll_slave.c:193:5
 1e1d74a:    08 d4             	r0 = r1 >> 16			  ## ll_slave.c:193:5
 1e1d74c:    68 6c             	b[r6 + 6] = r0			  ## ll_slave.c:193:5
 1e1d74e:    c8 fd 40 ef       	r14 <= insert(r15, p:8, l:8)			  ## ll_slave.c:193:5
 1e1d752:    d0 fd 80 3e       	r3 <= insert(r14, p:16, l:16)			  ## ll_slave.c:193:5
 1e1d756:    18 d4             	r0 = r3 >> 16			  ## ll_slave.c:193:5
 1e1d758:    28 6c             	b[r6 + 2] = r0			  ## ll_slave.c:193:5
 1e1d75a:    40 fc 28 00       	r0 = r4 + 40			  ## ll_slave.c:193:5
 1e1d75e:    21 60             	r1 = b[r0 + 2] (u)			  ## ll_slave.c:195:5
 1e1d760:    02 60             	r2 = b[r0 + 0] (u)			  ## ll_slave.c:195:5
 1e1d762:    f3 6f             	r3 = b[r7 + 31] (u)			  ## ll_slave.c:195:5
 1e1d764:    10 60             	r0 = b[r0 + 1] (u)			  ## ll_slave.c:195:5
 1e1d766:    39 6d             	b[r6 + 19] = r1			  ## ll_slave.c:195:5
 1e1d768:    1a 6d             	b[r6 + 17] = r2			  ## ll_slave.c:195:5
 1e1d76a:    0b 6d             	b[r6 + 16] = r3			  ## ll_slave.c:195:5
 1e1d76c:    c8 fd 40 01       	r0 <= insert(r1, p:8, l:8)			  ## ll_slave.c:195:5
 1e1d770:    d0 fd 80 30       	r3 <= insert(r0, p:16, l:16)			  ## ll_slave.c:195:5
 1e1d774:    18 d4             	r0 = r3 >> 16			  ## ll_slave.c:195:5
 1e1d776:    28 6d             	b[r6 + 18] = r0			  ## ll_slave.c:195:5
 1e1d778:    09 e0 02 10       	if (r9 != 0) goto 4 <.GJTIE954_0_0_+0x12C : 1e1d780 >			  ## ll_slave.c:195:5
 1e1d77c:    8f f3 30 2e       	call 1989728 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1d780:    00 a1             	r0 = sp + 16
 1e1d782:    41 70             	r1 = 4			  ## ll_slave.c:220:5
 1e1d784:    bf f3 ea 4d       	call -91180 <pseudo_random_genrate : 1e0735c >			  ## ll_slave.c:220:5
 1e1d788:    40 02             	r0 = [sp+16]			  ## ll_slave.c:222:5
 1e1d78a:    48 6d             	b[r6 + 20] = r0			  ## ll_slave.c:222:5
 1e1d78c:    01 d6             	r1 = r0 >> 24			  ## ll_slave.c:222:5
 1e1d78e:    79 6d             	b[r6 + 23] = r1			  ## ll_slave.c:222:5
 1e1d790:    01 d4             	r1 = r0 >> 16			  ## ll_slave.c:222:5
 1e1d792:    69 6d             	b[r6 + 22] = r1			  ## ll_slave.c:222:5
 1e1d794:    00 d2             	r0 = r0 >> 8			  ## ll_slave.c:222:5
 1e1d796:    58 6d             	b[r6 + 21] = r0			  ## ll_slave.c:222:5
 1e1d798:    80 a0             	r0 = sp + 8			  ## ll_slave.c:222:5
 1e1d79a:    81 70             	r1 = 8			  ## ll_slave.c:225:5
 1e1d79c:    bf f3 de 4d       	call -91204 <pseudo_random_genrate : 1e0735c >			  ## ll_slave.c:225:5
 1e1d7a0:    30 02             	r0 = [sp+12]			  ## ll_slave.c:227:5
 1e1d7a2:    21 02             	r1 = [sp+8]			  ## ll_slave.c:227:5
 1e1d7a4:    c8 6c             	b[r6 + 12] = r0			  ## ll_slave.c:227:5
 1e1d7a6:    89 6c             	b[r6 + 8] = r1			  ## ll_slave.c:227:5
 1e1d7a8:    02 d6             	r2 = r0 >> 24			  ## ll_slave.c:227:5
 1e1d7aa:    fa 6c             	b[r6 + 15] = r2			  ## ll_slave.c:227:5
 1e1d7ac:    02 d4             	r2 = r0 >> 16			  ## ll_slave.c:227:5
 1e1d7ae:    ea 6c             	b[r6 + 14] = r2			  ## ll_slave.c:227:5
 1e1d7b0:    00 d2             	r0 = r0 >> 8			  ## ll_slave.c:227:5
 1e1d7b2:    d8 6c             	b[r6 + 13] = r0			  ## ll_slave.c:227:5
 1e1d7b4:    08 d6             	r0 = r1 >> 24			  ## ll_slave.c:227:5
 1e1d7b6:    b8 6c             	b[r6 + 11] = r0			  ## ll_slave.c:227:5
 1e1d7b8:    08 d4             	r0 = r1 >> 16			  ## ll_slave.c:227:5
 1e1d7ba:    a8 6c             	b[r6 + 10] = r0			  ## ll_slave.c:227:5
 1e1d7bc:    08 d2             	r0 = r1 >> 8			  ## ll_slave.c:227:5
 1e1d7be:    98 6c             	b[r6 + 9] = r0			  ## ll_slave.c:227:5
 1e1d7c0:    b0 fc 70 00       	r0 = r11 + 112			  ## ll_slave.c:222:5
 1e1d7c4:    18 02             	[sp+4] = r0			  ## ll_slave.c:231:5
 1e1d7c6:    b0 fc 64 00       	r0 = r11 + 100			  ## ll_slave.c:227:5
 1e1d7ca:    c1 ff 80 da e1 01 	r1 = 31578752 <__slave_ll_send_enc_rsp_callback : 1e1da80 >			  ## ll_slave.c:231:5
 1e1d7d0:    c3 ff 55 59 e1 01 	r3 = 31545685 <update_target_end+0x2ACD : 1e15955 >			  ## ll_slave.c:231:5
 1e1d7d6:    42 70             	r2 = 4			  ## ll_slave.c:231:5
 1e1d7d8:    08 02             	[sp] = r0			  ## ll_slave.c:231:5
 1e1d7da:    50 08             	r0 = r5			  ## ll_slave.c:231:5
 1e1d7dc:    bf f3 52 f5       	call -5468 <ll_send_control_data_callback : 1e1c284 >			  ## ll_slave.c:231:5
 1e1d7e0:    02 f7 38 b0       	r2 = h[r11 + 56] (u)			  ## ll_events.c:113:37
 1e1d7e4:    53 9f             	r3 = r7 + 21			  ## ll_events.c:115:50
 1e1d7e6:    c1 ff 2a 59 e1 01 	r1 = 31545642 <update_target_end+0x2AA2 : 1e1592a >			  ## ll_events.c:111:12
 1e1d7ec:    50 70             	r0 = 5			  ## ll_events.c:111:12
 1e1d7ee:    0b 02             	[sp] = r3			  ## ll_events.c:111:12
 1e1d7f0:    a3 08             	r3 = r10			  ## ll_events.c:111:12
 1e1d7f2:    bf f3 6d f5       	call -5414 <__hci_emit_le_meta_event : 1e1c2d0 >			  ## ll_events.c:111:12
 1e1d7f6:    00 e0 2f 11       	if (r0 != 0) goto 606 <.GJTIE954_0_0_+0x404 : 1e1da58 >			  ## ll_events.c:111:12
 1e1d7fa:    d1 70             	r1 = 13			  ## ll_slave.c:240:5
 1e1d7fc:    63 70             	r3 = 6			  ## ll_slave.c:240:5
 1e1d7fe:    2b 1f             	goto -426 <.GJTIE954_0_0_+0x2 : 1e1d656 >			  ## ll_slave.c:240:5
 1e1d800:    00 4a             	r0 = [r5 + 0]			  ## ll_slave.c:150:31
 1e1d802:    a1 70             	r1 = 10			  ## ll_slave.c:152:5
 1e1d804:    12 70             	r2 = 1			  ## ll_slave.c:152:5
 1e1d806:    16 70             	r6 = 1			  ## ll_slave.c:152:5
 1e1d808:    bf f3 46 e4       	call -14196 <le_hw_ioctrl : 1e1a098 >			  ## ll_slave.c:152:5
 1e1d80c:    16 f9 03 d0       	b[r13 + 3] = r6			  ## ll_slave.c:153:26
 1e1d810:    61 70             	r1 = 6			  ## ll_slave.c:162:9
 1e1d812:    56 18             	goto 172 <.GJTIE954_0_0_+0x26C : 1e1d8c0 >			  ## ll_slave.c:162:9
 1e1d814:    0b f9 02 a0       	r11 = b[r10 + 2] (u)			  ## ll_slave.c:170:5
 1e1d818:    01 f9 06 a0       	r1 = b[r10 + 6] (u)			  ## ll_slave.c:170:5
 1e1d81c:    d3 6e             	r3 = b[r7 + 13] (u)			  ## ll_slave.c:170:5
 1e1d81e:    08 f9 01 a0       	r8 = b[r10 + 1] (u)			  ## ll_slave.c:170:5
 1e1d822:    06 f9 07 a0       	r6 = b[r10 + 7] (u)			  ## ll_slave.c:170:5
 1e1d826:    09 f9 05 a0       	r9 = b[r10 + 5] (u)			  ## ll_slave.c:170:5
 1e1d82a:    00 f9 04 a0       	r0 = b[r10 + 4] (u)			  ## ll_slave.c:170:5
 1e1d82e:    0a f9 03 a0       	r10 = b[r10 + 3] (u)			  ## ll_slave.c:170:5
 1e1d832:    ce 65             	b[r2 + 28] = r6			  ## ll_slave.c:170:5
 1e1d834:    19 f9 1a 20       	b[r2 + 26] = r9			  ## ll_slave.c:170:5
 1e1d838:    98 65             	b[r2 + 25] = r0			  ## ll_slave.c:170:5
 1e1d83a:    1a f9 18 20       	b[r2 + 24] = r10			  ## ll_slave.c:170:5
 1e1d83e:    18 f9 16 20       	b[r2 + 22] = r8			  ## ll_slave.c:170:5
 1e1d842:    5b 65             	b[r2 + 21] = r3			  ## ll_slave.c:170:5
 1e1d844:    c8 fd 40 16       	r1 <= insert(r6, p:8, l:8)			  ## ll_slave.c:170:5
 1e1d848:    d0 fd 80 01       	r0 <= insert(r1, p:16, l:16)			  ## ll_slave.c:170:5
 1e1d84c:    00 d4             	r0 = r0 >> 16			  ## ll_slave.c:170:5
 1e1d84e:    b8 65             	b[r2 + 27] = r0			  ## ll_slave.c:170:5
 1e1d850:    c8 fd 40 ba       	r11 <= insert(r10, p:8, l:8)			  ## ll_slave.c:170:5
 1e1d854:    d0 fd 80 3b       	r3 <= insert(r11, p:16, l:16)			  ## ll_slave.c:170:5
 1e1d858:    18 d4             	r0 = r3 >> 16			  ## ll_slave.c:170:5
 1e1d85a:    78 65             	b[r2 + 23] = r0			  ## ll_slave.c:170:5
 1e1d85c:    23 fc 22 00       	r3 = r2 + 34			  ## ll_slave.c:175:5
 1e1d860:    c2 ff 66 59 e1 01 	r2 = 31545702 <update_target_end+0x2ADE : 1e15966 >			  ## ll_slave.c:175:5
 1e1d866:    91 70             	r1 = 9			  ## ll_slave.c:175:5
 1e1d868:    56 18             	goto 172 <.GJTIE954_0_0_+0x2C2 : 1e1d916 >			  ## ll_slave.c:175:5
 1e1d86a:    0b f9 02 a0       	r11 = b[r10 + 2] (u)			  ## ll_slave.c:180:5
 1e1d86e:    01 f9 06 a0       	r1 = b[r10 + 6] (u)			  ## ll_slave.c:180:5
 1e1d872:    d3 6e             	r3 = b[r7 + 13] (u)			  ## ll_slave.c:180:5
 1e1d874:    08 f9 01 a0       	r8 = b[r10 + 1] (u)			  ## ll_slave.c:180:5
 1e1d878:    06 f9 07 a0       	r6 = b[r10 + 7] (u)			  ## ll_slave.c:180:5
 1e1d87c:    09 f9 05 a0       	r9 = b[r10 + 5] (u)			  ## ll_slave.c:180:5
 1e1d880:    00 f9 04 a0       	r0 = b[r10 + 4] (u)			  ## ll_slave.c:180:5
 1e1d884:    0a f9 03 a0       	r10 = b[r10 + 3] (u)			  ## ll_slave.c:180:5
 1e1d888:    ce 65             	b[r2 + 28] = r6			  ## ll_slave.c:180:5
 1e1d88a:    19 f9 1a 20       	b[r2 + 26] = r9			  ## ll_slave.c:180:5
 1e1d88e:    98 65             	b[r2 + 25] = r0			  ## ll_slave.c:180:5
 1e1d890:    1a f9 18 20       	b[r2 + 24] = r10			  ## ll_slave.c:180:5
 1e1d894:    18 f9 16 20       	b[r2 + 22] = r8			  ## ll_slave.c:180:5
 1e1d898:    5b 65             	b[r2 + 21] = r3			  ## ll_slave.c:180:5
 1e1d89a:    c8 fd 40 16       	r1 <= insert(r6, p:8, l:8)			  ## ll_slave.c:180:5
 1e1d89e:    d0 fd 80 01       	r0 <= insert(r1, p:16, l:16)			  ## ll_slave.c:180:5
 1e1d8a2:    00 d4             	r0 = r0 >> 16			  ## ll_slave.c:180:5
 1e1d8a4:    b8 65             	b[r2 + 27] = r0			  ## ll_slave.c:180:5
 1e1d8a6:    c8 fd 40 ba       	r11 <= insert(r10, p:8, l:8)			  ## ll_slave.c:180:5
 1e1d8aa:    d0 fd 80 3b       	r3 <= insert(r11, p:16, l:16)			  ## ll_slave.c:180:5
 1e1d8ae:    18 d4             	r0 = r3 >> 16			  ## ll_slave.c:180:5
 1e1d8b0:    78 65             	b[r2 + 23] = r0			  ## ll_slave.c:180:5
 1e1d8b2:    d2 18             	goto 420 <.GJTIE954_0_0_+0x404 : 1e1da58 >			  ## ll_slave.c:180:5
 1e1d8b4:    00 4a             	r0 = [r5 + 0]			  ## ll_slave.c:268:31
 1e1d8b6:    b1 70             	r1 = 11			  ## ll_slave.c:270:5
 1e1d8b8:    02 70             	r2 = 0			  ## ll_slave.c:270:5
 1e1d8ba:    bf f3 ed e3       	call -14374 <le_hw_ioctrl : 1e1a098 >			  ## ll_slave.c:270:5
 1e1d8be:    b1 70             	r1 = 11			  ## ll_slave.c:280:9
 1e1d8c0:    02 70             	r2 = 0
 1e1d8c2:    50 08             	r0 = r5
 1e1d8c4:    bf f3 a0 f4       	call -5824 <ll_send_control_data : 1e1c208 >
 1e1d8c8:    c7 18             	goto 398 <.GJTIE954_0_0_+0x404 : 1e1da58 >
 1e1d8ca:    00 4a             	r0 = [r5 + 0]			  ## ll_slave.c:288:31
 1e1d8cc:    a1 70             	r1 = 10			  ## ll_slave.c:290:5
 1e1d8ce:    02 70             	r2 = 0			  ## ll_slave.c:290:5
 1e1d8d0:    06 70             	r6 = 0			  ## ll_slave.c:290:5
 1e1d8d2:    bf f3 e1 e3       	call -14398 <le_hw_ioctrl : 1e1a098 >			  ## ll_slave.c:290:5
 1e1d8d6:    16 f9 03 d0       	b[r13 + 3] = r6			  ## ll_slave.c:291:26
 1e1d8da:    be 18             	goto 380 <.GJTIE954_0_0_+0x404 : 1e1da58 >			  ## ll_slave.c:291:26
 1e1d8dc:    d0 6e             	r0 = b[r7 + 13] (u)			  ## ll_slave.c:308:30
 1e1d8de:    d8 65             	b[r2 + 29] = r0			  ## ll_slave.c:308:28
 1e1d8e0:    11 70             	r1 = 1			  ## ll_slave.c:309:30
 1e1d8e2:    a0 08             	r0 = r10			  ## ll_slave.c:309:30
 1e1d8e4:    bf f3 e5 4c       	call -91702 <btctler_little_endian_read_16 : 1e072b2 >			  ## ll_slave.c:309:30
 1e1d8e8:    f8 54             	h[r2 + 30] = r0			  ## ll_slave.c:309:28
 1e1d8ea:    31 70             	r1 = 3			  ## ll_slave.c:310:33
 1e1d8ec:    a0 08             	r0 = r10			  ## ll_slave.c:310:33
 1e1d8ee:    bf f3 e0 4c       	call -91712 <btctler_little_endian_read_16 : 1e072b2 >			  ## ll_slave.c:310:33
 1e1d8f2:    08 55             	h[r2 + 32] = r0			  ## ll_slave.c:310:31
 1e1d8f4:    00 f9 00 b0       	r0 = b[r11 + 0] (u)			  ## link_layer.c:677:39
 1e1d8f8:    c0 c0             	r0 = r0 << 3			  ## link_layer.c:679:12
 1e1d8fa:    50 09             	r0 += r5			  ## link_layer.c:679:12
 1e1d8fc:    00 f6 98 00       	r0 = [r0 + 152]			  ## link_layer.c:679:12
 1e1d900:    ab 30             	if (r0 != 0) goto 342 <.GJTIE954_0_0_+0x404 : 1e1da58 >			  ## link_layer.c:679:12
 1e1d902:    03 f9 32 20       	r3 = b[r2 + 50] (u)			  ## ll_slave.c:314:37
 1e1d906:    a0 55             	r0 = h[r2 + 52] (u)			  ## ll_slave.c:314:54
 1e1d908:    b1 55             	r1 = h[r2 + 54] (u)			  ## ll_slave.c:314:71
 1e1d90a:    19 02             	[sp+4] = r1			  ## ll_slave.c:313:9
 1e1d90c:    c2 ff 49 59 e1 01 	r2 = 31545673 <update_target_end+0x2AC1 : 1e15949 >			  ## ll_slave.c:313:9
 1e1d912:    c1 70             	r1 = 12			  ## ll_slave.c:313:9
 1e1d914:    08 02             	[sp] = r0			  ## ll_slave.c:313:9
 1e1d916:    50 08             	r0 = r5
 1e1d918:    a0 1e             	goto -704 <.GJTIE954_0_0_+0x6 : 1e1d65a >
 1e1d91a:    bf f3 9c da       	call -19144 <get_bt_osc_offset_flag : 1e18e56 >			  ## ll_slave.c:500:9
 1e1d91e:    06 08             	r6 = r0			  ## ll_slave.c:500:9
 1e1d920:    bf f3 0a cc       	call -26604 <bt_fre_offset_value_init : 1e17138 >			  ## ll_slave.c:505:5
 1e1d924:    00 4a             	r0 = [r5 + 0]			  ## ll_slave.c:506:30
 1e1d926:    bf f3 5c eb       	call -10568 <ble_pll_comp_reset : 1e1afe2 >			  ## ll_slave.c:506:5
 1e1d92a:    c1 ff 52 59 e1 01 	r1 = 31545682 <update_target_end+0x2ACA : 1e15952 >			  ## ll_slave.c:508:5
 1e1d930:    e0 7f             	r0 = 254			  ## ll_slave.c:508:5
 1e1d932:    22 70             	r2 = 2			  ## ll_slave.c:508:5
 1e1d934:    13 70             	r3 = 1			  ## ll_slave.c:508:5
 1e1d936:    bf f3 60 dc       	call -18240 <hci_send_event : 1e191fa >			  ## ll_slave.c:508:5
 1e1d93a:    f0 70             	r0 = 15			  ## ll_slave.c:510:5
 1e1d93c:    18 02             	[sp+4] = r0			  ## ll_slave.c:510:5
 1e1d93e:    03 70             	r3 = 0			  ## ll_slave.c:510:5
 1e1d940:    01 2c             	if (r6 == 0) goto 2 <.GJTIE954_0_0_+0x2F0 : 1e1d944 >
 1e1d942:    f3 7f             	r3 = 255
 1e1d944:    11 74             	r1 = 65			  ## ll_slave.c:510:5
 1e1d946:    0b 02             	[sp] = r3			  ## ll_slave.c:510:5
 1e1d948:    50 08             	r0 = r5			  ## ll_slave.c:510:5
 1e1d94a:    92 08             	r2 = r9			  ## ll_slave.c:510:5
 1e1d94c:    86 1e             	goto -756 <.GJTIE954_0_0_+0x6 : 1e1d65a >			  ## ll_slave.c:510:5
 1e1d94e:    00 f7 38 b0       	r0 = h[r11 + 56] (u)			  ## ll_slave.c:482:32
 1e1d952:    c1 ff a8 0e 00 00 	r1 = 3752 <ll_update_handle : ea8 >			  ## ll_slave.c:423:22
 1e1d958:    08 52             	h[r1 + 0] = r0			  ## ll_slave.c:423:22
 1e1d95a:    00 70             	r0 = 0			  ## ll_slave.c:423:22
 1e1d95c:    18 02             	[sp+4] = r0			  ## ll_slave.c:483:5
 1e1d95e:    10 70             	r0 = 1			  ## ll_slave.c:483:5
 1e1d960:    81 74             	r1 = 72			  ## ll_slave.c:483:5
 1e1d962:    f3 70             	r3 = 15			  ## ll_slave.c:483:5
 1e1d964:    08 02             	[sp] = r0			  ## ll_slave.c:483:5
 1e1d966:    50 08             	r0 = r5			  ## ll_slave.c:483:5
 1e1d968:    92 08             	r2 = r9			  ## ll_slave.c:483:5
 1e1d96a:    bf f3 4d f4       	call -5990 <ll_send_control_data : 1e1c208 >			  ## ll_slave.c:483:5
 1e1d96e:    c0 ff 0b 00 40 00 	r0 = 4194315 <uECC_vli_cmp_unsafe+0x2F900F : 40000b >			  ## ll_slave.c:484:5
 1e1d974:    01 70             	r1 = 0			  ## ll_slave.c:484:5
 1e1d976:    bf f3 0f db       	call -18914 <btctrler_hci_cmd_to_task : 1e18f98 >			  ## ll_slave.c:484:5
 1e1d97a:    6e 18             	goto 220 <.GJTIE954_0_0_+0x404 : 1e1da58 >			  ## ll_slave.c:484:5
 1e1d97c:    d0 6e             	r0 = b[r7 + 13] (u)			  ## ll_slave.c:63:29
 1e1d97e:    0b f7 1e 50       	r11 = h[r5 + 30] (u)			  ## ll_slave.c:76:69
 1e1d982:    b8 6b             	b[r5 + 27] = r0			  ## ll_slave.c:63:27
 1e1d984:    11 70             	r1 = 1			  ## ll_slave.c:64:29
 1e1d986:    a0 08             	r0 = r10			  ## ll_slave.c:64:29
 1e1d988:    bf f3 93 4c       	call -91866 <btctler_little_endian_read_16 : 1e072b2 >			  ## ll_slave.c:64:29
 1e1d98c:    08 08             	r8 = r0			  ## ll_slave.c:64:29
 1e1d98e:    e8 5a             	h[r5 + 28] = r0			  ## ll_slave.c:64:27
 1e1d990:    31 70             	r1 = 3			  ## ll_slave.c:65:29
 1e1d992:    a0 08             	r0 = r10			  ## ll_slave.c:65:29
 1e1d994:    bf f3 8d 4c       	call -91878 <btctler_little_endian_read_16 : 1e072b2 >			  ## ll_slave.c:65:29
 1e1d998:    f8 5a             	h[r5 + 30] = r0			  ## ll_slave.c:65:27
 1e1d99a:    51 70             	r1 = 5			  ## ll_slave.c:66:29
 1e1d99c:    a0 08             	r0 = r10			  ## ll_slave.c:66:29
 1e1d99e:    bf f3 88 4c       	call -91888 <btctler_little_endian_read_16 : 1e072b2 >			  ## ll_slave.c:66:29
 1e1d9a2:    08 5b             	h[r5 + 32] = r0			  ## ll_slave.c:66:27
 1e1d9a4:    71 70             	r1 = 7			  ## ll_slave.c:67:29
 1e1d9a6:    a0 08             	r0 = r10			  ## ll_slave.c:67:29
 1e1d9a8:    bf f3 83 4c       	call -91898 <btctler_little_endian_read_16 : 1e072b2 >			  ## ll_slave.c:67:29
 1e1d9ac:    18 5b             	h[r5 + 34] = r0			  ## ll_slave.c:67:27
 1e1d9ae:    0a f7 2a 50       	r10 = h[r5 + 42] (u)			  ## ll_slave.c:75:36
 1e1d9b2:    06 f9 01 c0       	r6 = b[r12 + 1] (u)			  ## ll_slave.c:76:54
 1e1d9b6:    40 9b             	r0 = r5 + 20			  ## ll_slave.c:60:48
 1e1d9b8:    b2 15             	call -1180 <ll_slave_cal_widening : 1e1d51e >			  ## ll_slave.c:79:5
 1e1d9ba:    30 d1             	r0 = r6 >> 4			  ## ll_slave.c:76:31
 1e1d9bc:    20 fd 0e 09       	r0 = r0 & 14			  ## ll_slave.c:76:54
 1e1d9c0:    c1 ff 24 be e1 01 	r1 = 31571492 <master_sca : 1e1be24 >			  ## ll_slave.c:76:31
 1e1d9c6:    00 f8 00 01       	r0 = h[r0+r1] (u)			  ## ll_slave.c:76:31
 1e1d9ca:    01 fb e2 04       	r1 = 1250 <BTCTLER_CONTROLLER_DATA_SIZE+0x24 : 4e2 >			  ## ll_slave.c:76:66
 1e1d9ce:    c2 ff 68 89 09 00 	r2 = 625000 <text_size+0x77AB8 : 98968 >			  ## ll_slave.c:76:66
 1e1d9d4:    80 fe 10 20       	r2 += r0 * r1			  ## ll_slave.c:76:66
 1e1d9d8:    80 fb b0 08       	r0 = r8 + r11			  ## ll_slave.c:76:82
 1e1d9dc:    10 0e             	r0 = r2 * r0			  ## ll_slave.c:76:107
 1e1d9de:    52 5b             	r2 = h[r5 + 42] (u)			  ## ll_slave.c:82:66
 1e1d9e0:    c1 ff 40 42 0f 00 	r1 = 1000000 <text_size+0xD3390 : f4240 >			  ## ll_slave.c:76:124
 1e1d9e6:    c0 fe 10 00       	r0 = r0 / r1 (u)			  ## ll_slave.c:76:124
 1e1d9ea:    41 c0             	r1 = r0 << 1			  ## ll_slave.c:77:22
 1e1d9ec:    20 92             	r0 = r1 + 2			  ## ll_slave.c:77:22
 1e1d9ee:    03 ff f5 21 03 00 	if (r2 < 501) goto 6 <.GJTIE954_0_0_+0x3A6 : 1e1d9fa >			  ## ll_slave.c:77:22
 1e1d9f4:    02 fb f4 01       	r2 = 500 <BTCTLER_CL_RAM_TOTAL+0x10 : 1f4 >			  ## ll_slave.c:83:30
 1e1d9f8:    5a 5b             	h[r5 + 42] = r2			  ## ll_slave.c:83:30
 1e1d9fa:    02 70             	r2 = 0
 1e1d9fc:    0a f2 07 90       	if (r10 <= r0) goto 14 <.GJTIE954_0_0_+0x3BA : 1e1da0e >
 1e1da00:    c2 ff fe ff 00 00 	r2 = 65534 <_IRQ_MEM_ADDR+0xFE : fffe >
 1e1da06:    a2 09             	r2 += r10
 1e1da08:    61 b4             	r1 = r2 - r1			  ## ll_slave.c:87:52
 1e1da0a:    40 c0             	r0 = r0 << 1			  ## ll_slave.c:88:42
 1e1da0c:    02 b2             	r2 = r1 + r0			  ## ll_slave.c:88:37
 1e1da0e:    6a 5b             	h[r5 + 44] = r2			  ## ll_slave.c:90:37
 1e1da10:    00 4a             	r0 = [r5 + 0]			  ## ll_slave.c:92:29
 1e1da12:    41 70             	r1 = 4			  ## ll_slave.c:92:5
 1e1da14:    03 70             	r3 = 0			  ## ll_slave.c:92:5
 1e1da16:    92 08             	r2 = r9			  ## ll_slave.c:92:5
 1e1da18:    bf f3 3e e3       	call -14724 <le_hw_ioctrl : 1e1a098 >			  ## ll_slave.c:92:5
 1e1da1c:    92 fc ff ff       	r2 = r9 + -1			  ## ll_slave.c:94:60
 1e1da20:    c1 ff 8e cf e1 01 	r1 = 31575950 <__connection_upadte : 1e1cf8e >			  ## ll_slave.c:94:5
 1e1da26:    50 08             	r0 = r5			  ## ll_slave.c:94:5
 1e1da28:    bf f3 c7 f4       	call -5746 <__event_oneshot_add : 1e1c3ba >			  ## ll_slave.c:94:5
 1e1da2c:    c1 ff 70 da e1 01 	r1 = 31578736 <__slave_ll_receive_conn_update_req_done : 1e1da70 >			  ## ll_slave.c:96:5
 1e1da32:    50 08             	r0 = r5			  ## ll_slave.c:96:5
 1e1da34:    92 08             	r2 = r9			  ## ll_slave.c:96:5
 1e1da36:    bf f3 dc f4       	call -5704 <__event_oneshot_post_add : 1e1c3f2 >			  ## ll_slave.c:96:5
 1e1da3a:    0e 18             	goto 28 <.GJTIE954_0_0_+0x404 : 1e1da58 >			  ## ll_slave.c:96:5
 1e1da3c:    00 4a             	r0 = [r5 + 0]			  ## ll_slave.c:128:29
 1e1da3e:    41 70             	r1 = 4			  ## ll_slave.c:128:5
 1e1da40:    13 70             	r3 = 1			  ## ll_slave.c:128:5
 1e1da42:    62 08             	r2 = r6			  ## ll_slave.c:128:5
 1e1da44:    bf f3 28 e3       	call -14768 <le_hw_ioctrl : 1e1a098 >			  ## ll_slave.c:128:5
 1e1da48:    62 fc ff ff       	r2 = r6 + -1			  ## ll_slave.c:130:61
 1e1da4c:    c1 ff d4 cf e1 01 	r1 = 31576020 <__channel_map_upadte : 1e1cfd4 >			  ## ll_slave.c:130:5
 1e1da52:    50 08             	r0 = r5
 1e1da54:    bf f3 b1 f4       	call -5790 <__event_oneshot_add : 1e1c3ba >
 1e1da58:    c0 6e             	r0 = b[r7 + 12] (u)			  ## ll_slave.c:739:29
 1e1da5a:    10 b7             	r0 |= 16384			  ## ll_slave.c:739:41
 1e1da5c:    51 08             	r1 = r5			  ## ll_slave.c:739:5
 1e1da5e:    42 08             	r2 = r4			  ## ll_slave.c:739:5
 1e1da60:    bf f3 25 f6       	call -5046 <ll_control_step_verify : 1e1c6ae >			  ## ll_slave.c:739:5
 1e1da64:    50 08             	r0 = r5			  ## ll_slave.c:742:5
 1e1da66:    41 08             	r1 = r4			  ## ll_slave.c:742:5
 1e1da68:    bf f3 6e f6       	call -4900 <ll_send_control_data_state_machine : 1e1c748 >			  ## ll_slave.c:742:5
 1e1da6c:    0a 0a             	sp += 20
 1e1da6e:    5f 01             	{pc, r15-r4} = [sp++]			  ## ll_slave.c:777:1


__slave_ll_receive_conn_update_req_done:
 1e1da70:    01 70             	r1 = 0			  ## ll_slave.c:41:0
 1e1da72:    02 70             	r2 = 0			  ## ll_slave.c:42:5
 1e1da74:    ff f3 79 f4       	goto -5902 <le_connection_update_complete_event : 1e1c36a >			  ## ll_slave.c:42:5


__slave_receive_terminte_ind_done:
 1e1da78:    01 f9 89 01       	r1 = b[r0 + 393] (u)			  ## ll_slave.c:134:0
 1e1da7c:    ff f3 46 f5       	goto -5492 <ll_disconnect_process : 1e1c50c >			  ## ll_slave.c:135:5


__slave_ll_send_enc_rsp_callback:
 1e1da80:    00 40             	r0 = [r0 + 0]			  ## ll_slave.c:206:0
 1e1da82:    11 71             	r1 = 17			  ## ll_slave.c:209:5
 1e1da84:    12 70             	r2 = 1			  ## ll_slave.c:209:5
 1e1da86:    ff f3 07 e3       	goto -14834 <le_hw_ioctrl : 1e1a098 >			  ## ll_slave.c:209:5


le_connection_complete_event:
 1e1da8a:    79 01             	[--sp] = {rets, r9-r4}			  ## ll_events.c:166:0
 1e1da8c:    e0 0b             	sp += -64			  ## ll_events.c:166:0
 1e1da8e:    18 08             	r8 = r1			  ## ll_events.c:166:0
 1e1da90:    c1 ff 32 59 e1 01 	r1 = 31545650 <update_target_end+0x2AAA : 1e15932 >			  ## ll_events.c:166:0
 1e1da96:    15 20             	if (r0 == 0) goto 42 <le_connection_complete_event+0x38 : 1e1dac2 >			  ## ll_events.c:167:9
 1e1da98:    03 f7 f8 00       	r3 = h[r0 + 248] (u)			  ## ll_events.c:172:34
 1e1da9c:    09 f9 3d 00       	r9 = b[r0 + 61] (u)			  ## ll_events.c:173:34
 1e1daa0:    b5 60             	r5 = b[r0 + 11] (u)			  ## ll_events.c:174:34
 1e1daa2:    f6 50             	r6 = h[r0 + 30] (u)			  ## ll_events.c:176:34
 1e1daa4:    07 51             	r7 = h[r0 + 32] (u)			  ## ll_events.c:177:34
 1e1daa6:    12 51             	r2 = h[r0 + 34] (u)			  ## ll_events.c:178:34
 1e1daa8:    04 f9 3e 00       	r4 = b[r0 + 62] (u)			  ## ll_events.c:179:34
 1e1daac:    6c 02             	[sp+24] = r4			  ## ll_events.c:169:9
 1e1daae:    5a 02             	[sp+20] = r2			  ## ll_events.c:169:9
 1e1dab0:    4f 02             	[sp+16] = r7			  ## ll_events.c:169:9
 1e1dab2:    3e 02             	[sp+12] = r6			  ## ll_events.c:169:9
 1e1dab4:    c0 80             	r0 += 12			  ## ll_events.c:175:34
 1e1dab6:    28 02             	[sp+8] = r0			  ## ll_events.c:169:9
 1e1dab8:    1d 02             	[sp+4] = r5			  ## ll_events.c:169:9
 1e1daba:    10 70             	r0 = 1			  ## ll_events.c:169:9
 1e1dabc:    19 f5 00 00       	[sp] = r9			  ## ll_events.c:169:9
 1e1dac0:    0e 18             	goto 28 <le_connection_complete_event+0x54 : 1e1dade >			  ## ll_events.c:169:9
 1e1dac2:    02 70             	r2 = 0
 1e1dac4:    92 f5 20 00       	h[sp+32] = r2			  ## ll_events.c:182:9
 1e1dac8:    7a 02             	[sp+28] = r2			  ## ll_events.c:182:9
 1e1daca:    6a 02             	[sp+24] = r2			  ## ll_events.c:183:9
 1e1dacc:    5a 02             	[sp+20] = r2			  ## ll_events.c:183:9
 1e1dace:    4a 02             	[sp+16] = r2			  ## ll_events.c:183:9
 1e1dad0:    3a 02             	[sp+12] = r2			  ## ll_events.c:183:9
 1e1dad2:    c0 a1             	r0 = sp + 28			  ## ll_events.c:183:9
 1e1dad4:    28 02             	[sp+8] = r0			  ## ll_events.c:183:9
 1e1dad6:    1a 02             	[sp+4] = r2			  ## ll_events.c:183:9
 1e1dad8:    10 70             	r0 = 1			  ## ll_events.c:183:9
 1e1dada:    03 70             	r3 = 0			  ## ll_events.c:183:9
 1e1dadc:    0a 02             	[sp] = r2			  ## ll_events.c:183:9
 1e1dade:    82 08             	r2 = r8
 1e1dae0:    bf f3 f6 f3       	call -6164 <__hci_emit_le_meta_event : 1e1c2d0 >
 1e1dae4:    20 0a             	sp += 64
 1e1dae6:    59 01             	{pc, r9-r4} = [sp++]			  ## ll_events.c:197:1


__adv_rx_post_handler:
 1e1dae8:    78 01             	[--sp] = {rets, r8-r4}			  ## ll_adv.c:539:0
 1e1daea:    14 08             	r4 = r1			  ## ll_adv.c:539:0
 1e1daec:    41 58             	r1 = h[r4 + 8] (u)			  ## ll_adv.c:540:17
 1e1daee:    21 fd 0f 19       	r1 = r1 & 15			  ## ll_adv.c:540:5
 1e1daf2:    05 08             	r5 = r0			  ## ll_adv.c:540:5
 1e1daf4:    51 e0 8a 10       	if (r1 != 5) goto 276 <__adv_rx_post_handler+0x124 : 1e1dc0c >
 1e1daf8:    c0 ff ac 0e 00 00 	r0 = 3756 <adv_hdl : eac >			  ## ll_adv.c:522:36
 1e1dafe:    00 40             	r0 = [r0 + 0]			  ## ll_adv.c:522:36
 1e1db00:    10 40             	r0 = [r0 + 4]			  ## ll_adv.c:522:44
 1e1db02:    06 70             	r6 = 0
 1e1db04:    0e 40             	[r0 + 0] = r6			  ## ll_adv.c:525:18
 1e1db06:    bf f3 e9 f1       	call -7214 <ll_adv_close : 1e1bedc >			  ## ll_adv.c:527:5
 1e1db0a:    50 fc 40 00       	r0 = r5 + 64			  ## link_layer.c:923:45
 1e1db0e:    97 f3 85 49       	call 3052298 <os_mutex_create : 106e1c >			  ## link_layer.c:923:22
 1e1db12:    c7 ff 00 2b 00 00 	r7 = 11008 <ll_hdl : 2b00 >			  ## link_layer.c:923:22
 1e1db18:    00 5f             	r0 = h[r7 + 32] (u)
 1e1db1a:    11 70             	r1 = 1
 1e1db1c:    f8 fd 60 21       	r2 = r1 << r6			  ## link_layer.c:845:31
 1e1db20:    20 f0 06 00       	if ((r0 & r2) == 0) goto 12 <__adv_rx_post_handler+0x48 : 1e1db30 >			  ## link_layer.c:845:31
 1e1db24:    16 80             	r6 += 1			  ## link_layer.c:844:26
 1e1db26:    06 e1 f9 3f       	if (r6 < 16) goto -14 <__adv_rx_post_handler+0x34 : 1e1db1c >			  ## link_layer.c:844:26
 1e1db2a:    8f f3 59 2c       	call 1988786 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1db2e:    02 18             	goto 4 <__adv_rx_post_handler+0x4C : 1e1db34 >			  ## cpu.h:148:5
 1e1db30:    50 b4             	r0 |= r2			  ## link_layer.c:846:28
 1e1db32:    08 5f             	h[r7 + 32] = r0			  ## link_layer.c:846:28
 1e1db34:    00 fd 50 69       	r0 = r6 | 80			  ## link_layer.c:852:15
 1e1db38:    58 fc f8 00       	r8 = r5 + 248			  ## link_layer.c:852:15
 1e1db3c:    10 f7 00 80       	h[r8 + 0] = r0			  ## link_layer.c:927:18
 1e1db40:    c0 ff b0 0e 00 00 	r0 = 3760 <le_data_length.6 : eb0 >			  ## link_layer.c:927:18
 1e1db46:    01 60             	r1 = b[r0 + 0] (u)			  ## link_layer.c:927:18
 1e1db48:    b0 7f             	r0 = 251			  ## link_layer.c:927:18
 1e1db4a:    b2 7f             	r2 = 251			  ## link_layer.c:927:18
 1e1db4c:    01 32             	if (r1 != 0) goto 2 <__adv_rx_post_handler+0x68 : 1e1db50 >			  ## link_layer.c:927:18
 1e1db4e:    02 70             	r2 = 0
 1e1db50:    56 fc 6c 01       	r6 = r5 + 364
 1e1db54:    0a 5c             	h[r6 + 0] = r2			  ## ll_data_extension.c:146:35
 1e1db56:    18 5c             	h[r6 + 2] = r0			  ## ll_data_extension.c:148:35
 1e1db58:    c0 ff b4 0e 00 00 	r0 = 3764 <le_data_length.7 : eb4 >			  ## ll_data_extension.c:148:35
 1e1db5e:    03 60             	r3 = b[r0 + 0] (u)			  ## ll_data_extension.c:148:35
 1e1db60:    00 fb 48 08       	r0 = 2120 <port1+0x1 : 848 >			  ## ll_data_extension.c:148:35
 1e1db64:    01 08             	r1 = r0			  ## ll_data_extension.c:148:35
 1e1db66:    01 36             	if (r3 != 0) goto 2 <__adv_rx_post_handler+0x82 : 1e1db6a >			  ## ll_data_extension.c:148:35
 1e1db68:    01 70             	r1 = 0
 1e1db6a:    69 5c             	h[r6 + 12] = r1			  ## ll_data_extension.c:150:33
 1e1db6c:    78 5c             	h[r6 + 14] = r0			  ## ll_data_extension.c:152:33
 1e1db6e:    b0 71             	r0 = 27			  ## ll_data_extension.c:155:41
 1e1db70:    28 5c             	h[r6 + 4] = r0			  ## ll_data_extension.c:155:41
 1e1db72:    38 5c             	h[r6 + 6] = r0			  ## ll_data_extension.c:156:41
 1e1db74:    00 fb 48 01       	r0 = 328 <DRIVER_RAM_TOTAL+0x56 : 148 >			  ## ll_data_extension.c:159:39
 1e1db78:    88 5c             	h[r6 + 16] = r0			  ## ll_data_extension.c:159:39
 1e1db7a:    98 5c             	h[r6 + 18] = r0			  ## ll_data_extension.c:160:39
 1e1db7c:    b2 e1 01 30       	if (r2 < 27) goto 2 <__adv_rx_post_handler+0x9A : 1e1db82 >			  ## ll_data_extension.c:160:39
 1e1db80:    b2 71             	r2 = 27			  ## ll_data_extension.c:72:46
 1e1db82:    4a 5c             	h[r6 + 8] = r2			  ## ll_data_extension.c:72:44
 1e1db84:    00 4a             	r0 = [r5 + 0]			  ## ll_data_extension.c:73:29
 1e1db86:    f1 70             	r1 = 15			  ## ll_data_extension.c:73:5
 1e1db88:    bf f3 86 e2       	call -15092 <le_hw_ioctrl : 1e1a098 >			  ## ll_data_extension.c:73:5
 1e1db8c:    20 5c             	r0 = h[r6 + 4] (u)			  ## ll_data_extension.c:75:46
 1e1db8e:    12 5c             	r2 = h[r6 + 2] (u)			  ## ll_data_extension.c:75:46
 1e1db90:    02 f2 01 30       	if (r2 < r0) goto 2 <__adv_rx_post_handler+0xAE : 1e1db96 >			  ## ll_data_extension.c:75:46
 1e1db94:    02 08             	r2 = r0			  ## ll_data_extension.c:75:46
 1e1db96:    5a 5c             	h[r6 + 10] = r2			  ## ll_data_extension.c:75:44
 1e1db98:    00 4a             	r0 = [r5 + 0]			  ## ll_data_extension.c:76:29
 1e1db9a:    01 71             	r1 = 16			  ## ll_data_extension.c:76:5
 1e1db9c:    bf f3 7c e2       	call -15112 <le_hw_ioctrl : 1e1a098 >			  ## ll_data_extension.c:76:5
 1e1dba0:    91 5c             	r1 = h[r6 + 18] (u)			  ## ll_data_extension.c:78:44
 1e1dba2:    60 5c             	r0 = h[r6 + 12] (u)			  ## ll_data_extension.c:78:44
 1e1dba4:    10 f2 01 30       	if (r0 < r1) goto 2 <__adv_rx_post_handler+0xC2 : 1e1dbaa >			  ## ll_data_extension.c:78:44
 1e1dba8:    10 08             	r0 = r1			  ## ll_data_extension.c:78:44
 1e1dbaa:    a8 5c             	h[r6 + 20] = r0			  ## ll_data_extension.c:78:42
 1e1dbac:    81 5c             	r1 = h[r6 + 16] (u)			  ## ll_data_extension.c:80:44
 1e1dbae:    70 5c             	r0 = h[r6 + 14] (u)			  ## ll_data_extension.c:80:44
 1e1dbb0:    10 f2 01 30       	if (r0 < r1) goto 2 <__adv_rx_post_handler+0xCE : 1e1dbb6 >			  ## ll_data_extension.c:80:44
 1e1dbb4:    10 08             	r0 = r1			  ## ll_data_extension.c:80:44
 1e1dbb6:    b8 5c             	h[r6 + 22] = r0			  ## ll_data_extension.c:80:42
 1e1dbb8:    00 f9 22 70       	r0 = b[r7 + 34] (u)			  ## link_layer.c:931:19
 1e1dbbc:    10 80             	r0 += 1			  ## link_layer.c:931:19
 1e1dbbe:    10 f9 22 70       	b[r7 + 34] = r0			  ## link_layer.c:931:19
 1e1dbc2:    a0 4e             	r0 = [r7 + 40]			  ## list.h:154:28
 1e1dbc4:    51 fc 34 00       	r1 = r5 + 52			  ## link_layer.c:935:26
 1e1dbc8:    a9 4e             	[r7 + 40] = r1			  ## list.h:137:16
 1e1dbca:    72 fc 24 00       	r2 = r7 + 36			  ## list.h:154:28
 1e1dbce:    da 4a             	[r5 + 52] = r2			  ## list.h:138:16
 1e1dbd0:    e8 4a             	[r5 + 56] = r0			  ## list.h:139:16
 1e1dbd2:    09 40             	[r0 + 0] = r1			  ## list.h:140:16
 1e1dbd4:    40 58             	r0 = h[r4 + 8] (u)			  ## ll_slave.c:711:17
 1e1dbd6:    20 fd 0f 09       	r0 = r0 & 15			  ## ll_slave.c:711:5
 1e1dbda:    30 e0 15 00       	if (r0 == 3) goto 42 <__adv_rx_post_handler+0x120 : 1e1dc08 >			  ## ll_slave.c:711:5
 1e1dbde:    10 5b             	r0 = h[r5 + 34] (u)			  ## ll_slave.c:723:40
 1e1dbe0:    00 fe 0a 09       	r0 = r0 * 10			  ## ll_slave.c:723:62
 1e1dbe4:    c1 ff d4 d1 e1 01 	r1 = 31576532 <ll_conn_supervision_timer_handler : 1e1d1d4 >			  ## link_layer.c:1312:33
 1e1dbea:    bf f3 b0 4b       	call -92320 <sys_timer_register : 1e0734e >			  ## link_layer.c:1312:33
 1e1dbee:    10 f6 58 80       	[r8 + 88] = r0			  ## link_layer.c:1312:31
 1e1dbf2:    04 30             	if (r0 != 0) goto 8 <__adv_rx_post_handler+0x114 : 1e1dbfc >			  ## link_layer.c:1312:31
 1e1dbf4:    8f f3 f4 2b       	call 1988584 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1dbf8:    00 f6 58 80       	r0 = [r8 + 88]			  ## cpu.h:148:5
 1e1dbfc:    51 08             	r1 = r5			  ## link_layer.c:1316:5
 1e1dbfe:    bf f3 aa 4b       	call -92332 <sys_timer_set_context : 1e07356 >			  ## link_layer.c:1316:5
 1e1dc02:    01 70             	r1 = 0			  ## ll_events.c:208:9
 1e1dc04:    50 08             	r0 = r5			  ## ll_events.c:208:9
 1e1dc06:    41 17             	call -382 <le_connection_complete_event : 1e1da8a >			  ## ll_events.c:208:9
 1e1dc08:    c0 68             	r0 = b[r4 + 12] (u)			  ## ll_adv.c:534:22
 1e1dc0a:    c8 6d             	b[r6 + 28] = r0			  ## ll_adv.c:534:16
 1e1dc0c:    58 01             	{pc, r8-r4} = [sp++]			  ## ll_adv.c:552:1


ll_adv_timeout_handler:
 1e1dc0e:    34 00             	[--sp] = rets			  ## ll_adv.c:99:0
 1e1dc10:    05 20             	if (r0 == 0) goto 10 <ll_adv_timeout_handler+0xE : 1e1dc1c >			  ## ll_adv.c:99:0
 1e1dc12:    bf f3 63 f1       	call -7482 <ll_adv_close : 1e1bedc >			  ## ll_adv.c:109:5
 1e1dc16:    00 70             	r0 = 0			  ## ll_adv.c:111:5
 1e1dc18:    c1 73             	r1 = 60			  ## ll_adv.c:111:5
 1e1dc1a:    37 17             	call -402 <le_connection_complete_event : 1e1da8a >			  ## ll_adv.c:111:5
 1e1dc1c:    30 00             	pc = [sp++]			  ## ll_adv.c:114:1


ll_white_list_match:
 1e1dc1e:    78 01             	[--sp] = {rets, r8-r4}			  ## ll_white_list.c:66:0
 1e1dc20:    c2 ff b8 0e 00 00 	r2 = 3768 <le_param : eb8 >			  ## ll_white_list.c:66:0
 1e1dc26:    07 f6 98 20       	r7 = [r2 + 152]			  ## ll_white_list.c:66:0
 1e1dc2a:    15 08             	r5 = r1			  ## ll_white_list.c:66:0
 1e1dc2c:    06 08             	r6 = r0			  ## ll_white_list.c:66:0
 1e1dc2e:    24 fc 98 00       	r4 = r2 + 152			  ## ll_white_list.c:66:0
 1e1dc32:    08 70             	r8 = 0			  ## ll_white_list.c:66:0
 1e1dc34:    47 f2 11 00       	if (r7 == r4) goto 34 <ll_white_list_match+0x3C : 1e1dc5a >			  ## ll_white_list.c:66:0
 1e1dc38:    71 fc f9 ff       	r1 = r7 + -7			  ## ll_white_list.c:76:48
 1e1dc3c:    62 70             	r2 = 6			  ## ll_white_list.c:76:15
 1e1dc3e:    50 08             	r0 = r5			  ## ll_white_list.c:76:15
 1e1dc40:    97 f3 54 49       	call 3052200 <memcmp : 106eec >			  ## ll_white_list.c:76:15
 1e1dc44:    05 30             	if (r0 != 0) goto 10 <ll_white_list_match+0x32 : 1e1dc50 >			  ## ll_white_list.c:76:15
 1e1dc46:    70 fc f8 ff       	r0 = r7 + -8
 1e1dc4a:    01 60             	r1 = b[r0 + 0] (u)			  ## ll_white_list.c:77:37
 1e1dc4c:    61 f2 04 00       	if (r1 == r6) goto 8 <ll_white_list_match+0x3A : 1e1dc58 >			  ## ll_white_list.c:77:37
 1e1dc50:    07 4e             	r7 = [r7 + 0]
 1e1dc52:    47 f2 f1 1f       	if (r7 != r4) goto -30 <ll_white_list_match+0x1A : 1e1dc38 >
 1e1dc56:    01 18             	goto 2 <ll_white_list_match+0x3C : 1e1dc5a >
 1e1dc58:    08 08             	r8 = r0
 1e1dc5a:    80 08             	r0 = r8			  ## ll_white_list.c:85:1
 1e1dc5c:    58 01             	{pc, r8-r4} = [sp++]			  ## ll_white_list.c:85:1


le_ll_adv_addr_process:
 1e1dc5e:    76 01             	[--sp] = {rets, r6-r4}			  ## ll_adv.c:333:0
 1e1dc60:    04 08             	r4 = r0			  ## ll_adv.c:333:0
 1e1dc62:    40 58             	r0 = h[r4 + 8] (u)			  ## ll_adv.c:333:0
 1e1dc64:    20 fd 0f 09       	r0 = r0 & 15			  ## ll_adv.c:333:0
 1e1dc68:    30 e0 04 00       	if (r0 == 3) goto 8 <le_ll_adv_addr_process+0x16 : 1e1dc74 >			  ## ll_adv.c:333:0
 1e1dc6c:    50 e0 02 00       	if (r0 == 5) goto 4 <le_ll_adv_addr_process+0x16 : 1e1dc74 >			  ## ll_adv.c:333:0
 1e1dc70:    8f f3 b6 2b       	call 1988460 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1dc74:    c0 ff 34 2d 00 00 	r0 = 11572 <adv_param : 2d34 >			  ## ll_adv.c:252:19
 1e1dc7a:    e6 60             	r6 = b[r0 + 14] (u)			  ## ll_adv.c:252:19
 1e1dc7c:    c5 ff 30 2d 00 00 	r5 = 11568 <ll_error_code : 2d30 >			  ## ll_adv.c:252:19
 1e1dc82:    00 70             	r0 = 0			  ## ll_adv.c:252:19
 1e1dc84:    08 6a             	b[r5 + 0] = r0			  ## ll_adv.c:252:19
 1e1dc86:    00 f3 0c 60       	if ((r6 & 1) == 0) goto 24 <le_ll_adv_addr_process+0x44 : 1e1dca2 >			  ## ll_adv.c:252:19
 1e1dc8a:    40 58             	r0 = h[r4 + 8] (u)			  ## ll_adv.c:253:17
 1e1dc8c:    21 fd 0f 09       	r1 = r0 & 15			  ## ll_adv.c:253:17
 1e1dc90:    31 e0 07 10       	if (r1 != 3) goto 14 <le_ll_adv_addr_process+0x44 : 1e1dca2 >			  ## ll_adv.c:253:17
 1e1dc94:    81 fd 38 00       	r0 = uextra(r0, p:7, l:1)			  ## ll_adv.c:267:32
 1e1dc98:    41 99             	r1 = r4 + 20			  ## ll_adv.c:268:63
 1e1dc9a:    c1 17             	call -126 <ll_white_list_match : 1e1dc1e >			  ## ll_adv.c:267:32
 1e1dc9c:    02 30             	if (r0 != 0) goto 4 <le_ll_adv_addr_process+0x44 : 1e1dca2 >
 1e1dc9e:    10 70             	r0 = 1
 1e1dca0:    08 6a             	b[r5 + 0] = r0
 1e1dca2:    01 f3 0c 60       	if ((r6 & 2) == 0) goto 24 <le_ll_adv_addr_process+0x60 : 1e1dcbe >
 1e1dca6:    40 58             	r0 = h[r4 + 8] (u)			  ## ll_adv.c:279:17
 1e1dca8:    21 fd 0f 09       	r1 = r0 & 15			  ## ll_adv.c:279:17
 1e1dcac:    51 e0 07 10       	if (r1 != 5) goto 14 <le_ll_adv_addr_process+0x60 : 1e1dcbe >			  ## ll_adv.c:279:17
 1e1dcb0:    81 fd 38 00       	r0 = uextra(r0, p:7, l:1)			  ## ll_adv.c:293:32
 1e1dcb4:    41 99             	r1 = r4 + 20			  ## ll_adv.c:294:63
 1e1dcb6:    b3 17             	call -154 <ll_white_list_match : 1e1dc1e >			  ## ll_adv.c:293:32
 1e1dcb8:    02 30             	if (r0 != 0) goto 4 <le_ll_adv_addr_process+0x60 : 1e1dcbe >
 1e1dcba:    10 70             	r0 = 1
 1e1dcbc:    08 6a             	b[r5 + 0] = r0
 1e1dcbe:    56 01             	{pc, r6-r4} = [sp++]			  ## ll_adv.c:342:1


ll_thread_resume:
 1e1dcc0:    c0 ff 08 2b 00 00 	r0 = 11016 <ll_hdl+0x8 : 2b08 >			  ## link_layer.c:3080:0
 1e1dcc6:    ff f3 10 4b       	goto -92640 <thread_resume : 1e072ea >			  ## link_layer.c:3081:5


adv_rx_probe_handler:
 1e1dcca:    7a 01             	[--sp] = {rets, r10-r4}			  ## ll_adv.c:496:0
 1e1dccc:    14 08             	r4 = r1			  ## ll_adv.c:496:0
 1e1dcce:    47 58             	r7 = h[r4 + 8] (u)			  ## ll_adv.c:501:17
 1e1dcd0:    0a 08             	r10 = r0			  ## ll_adv.c:501:17
 1e1dcd2:    20 fd 0f 79       	r0 = r7 & 15			  ## ll_adv.c:501:5
 1e1dcd6:    c8 ff 30 2d 00 00 	r8 = 11568 <ll_error_code : 2d30 >			  ## ll_adv.c:501:5
 1e1dcdc:    50 e0 08 00       	if (r0 == 5) goto 16 <adv_rx_probe_handler+0x26 : 1e1dcf0 >			  ## ll_adv.c:501:5
 1e1dce0:    30 e0 77 10       	if (r0 != 3) goto 238 <adv_rx_probe_handler+0x108 : 1e1ddd2 >
 1e1dce4:    40 08             	r0 = r4			  ## ll_adv.c:461:5
 1e1dce6:    bb 17             	call -138 <le_ll_adv_addr_process : 1e1dc5e >			  ## ll_adv.c:461:5
 1e1dce8:    00 f9 00 80       	r0 = b[r8 + 0] (u)			  ## ll_adv.c:461:5
 1e1dcec:    6b 20             	if (r0 == 0) goto 214 <adv_rx_probe_handler+0xFA : 1e1ddc4 >			  ## ll_adv.c:461:5
 1e1dcee:    71 18             	goto 226 <adv_rx_probe_handler+0x108 : 1e1ddd2 >			  ## ll_adv.c:461:5
 1e1dcf0:    05 f6 00 a0       	r5 = [r10 + 0]			  ## ll_adv.c:478:45
 1e1dcf4:    00 fb a0 01       	r0 = 416 <DRIVER_RAM_TOTAL+0xAE : 1a0 >			  ## link_layer.c:876:12
 1e1dcf8:    bf f3 21 4b       	call -92606 <__bt_malloc : 1e0733e >			  ## link_layer.c:876:12
 1e1dcfc:    06 08             	r6 = r0			  ## link_layer.c:876:12
 1e1dcfe:    0d 4c             	[r6 + 0] = r5			  ## link_layer.c:883:14
 1e1dd00:    a1 fc 04 00       	r1 = r10 + 4			  ## ll_adv.c:478:60
 1e1dd04:    40 9c             	r0 = r6 + 4			  ## link_layer.c:884:19
 1e1dd06:    72 70             	r2 = 7			  ## link_layer.c:884:5
 1e1dd08:    97 f3 ec 48       	call 3051992 <memcpy : 106ee4 >			  ## link_layer.c:884:5
 1e1dd0c:    81 fd 38 07       	r0 = uextra(r7, p:7, l:1)			  ## ll_adv.c:478:82
 1e1dd10:    b8 6c             	b[r6 + 11] = r0			  ## link_layer.c:886:26
 1e1dd12:    41 99             	r1 = r4 + 20			  ## ll_adv.c:478:89
 1e1dd14:    c0 9c             	r0 = r6 + 12			  ## link_layer.c:887:23
 1e1dd16:    62 70             	r2 = 6			  ## link_layer.c:887:5
 1e1dd18:    69 70             	r9 = 6			  ## link_layer.c:887:5
 1e1dd1a:    97 f3 e3 48       	call 3051974 <memcpy : 106ee4 >			  ## link_layer.c:887:5
 1e1dd1e:    10 70             	r0 = 1			  ## link_layer.c:887:5
 1e1dd20:    10 f9 3d 60       	b[r6 + 61] = r0			  ## link_layer.c:889:20
 1e1dd24:    41 fc 20 00       	r1 = r4 + 32			  ## ll_adv.c:478:108
 1e1dd28:    47 9d             	r7 = r6 + 20			  ## ll_adv.c:478:108
 1e1dd2a:    62 71             	r2 = 22			  ## link_layer.c:3818:5
 1e1dd2c:    70 08             	r0 = r7			  ## link_layer.c:3818:5
 1e1dd2e:    97 f3 d9 48       	call 3051954 <memcpy : 106ee4 >			  ## link_layer.c:3818:5
 1e1dd32:    70 08             	r0 = r7			  ## link_layer.c:3822:5
 1e1dd34:    bf f3 f3 fb       	call -2074 <ll_slave_cal_widening : 1e1d51e >			  ## link_layer.c:3822:5
 1e1dd38:    00 4c             	r0 = [r6 + 0]			  ## link_layer.c:3822:5
 1e1dd3a:    61 70             	r1 = 6			  ## link_layer.c:899:5
 1e1dd3c:    72 08             	r2 = r7			  ## link_layer.c:899:5
 1e1dd3e:    bf f3 ab e1       	call -15530 <le_hw_ioctrl : 1e1a098 >			  ## link_layer.c:899:5
 1e1dd42:    60 fc 04 01       	r0 = r6 + 260			  ## link_layer.c:899:5
 1e1dd46:    01 fc 30 00       	r1 = r0 + 48			  ## link_layer.c:904:27
 1e1dd4a:    c9 40             	[r0 + 48] = r1			  ## list.h:188:16
 1e1dd4c:    d9 40             	[r0 + 52] = r1			  ## list.h:189:16
 1e1dd4e:    01 fc 38 00       	r1 = r0 + 56			  ## link_layer.c:905:27
 1e1dd52:    e9 40             	[r0 + 56] = r1			  ## list.h:188:16
 1e1dd54:    f9 40             	[r0 + 60] = r1			  ## list.h:189:16
 1e1dd56:    08 40             	[r0 + 0] = r0			  ## list.h:188:16
 1e1dd58:    18 40             	[r0 + 4] = r0			  ## list.h:189:16
 1e1dd5a:    01 fc 40 00       	r1 = r0 + 64			  ## link_layer.c:907:27
 1e1dd5e:    09 41             	[r0 + 64] = r1			  ## list.h:188:16
 1e1dd60:    19 41             	[r0 + 68] = r1			  ## list.h:189:16
 1e1dd62:    19 f9 3c 60       	b[r6 + 60] = r9			  ## link_layer.c:909:20
 1e1dd66:    00 4c             	r0 = [r6 + 0]			  ## link_layer.c:911:39
 1e1dd68:    00 40             	r0 = [r0 + 0]			  ## link_layer.c:911:39
 1e1dd6a:    c2 ff 34 be e1 01 	r2 = 31571508 <conn_handler : 1e1be34 >			  ## link_layer.c:911:5
 1e1dd70:    61 08             	r1 = r6			  ## link_layer.c:911:5
 1e1dd72:    bf f3 9b e5       	call -13514 <le_hw_handler_register : 1e1a8ac >			  ## link_layer.c:911:5
 1e1dd76:    c1 ff 26 d0 e1 01 	r1 = 31576102 <ll_conn_fast_supervision_timer_handler : 1e1d026 >			  ## link_layer.c:916:5
 1e1dd7c:    62 70             	r2 = 6			  ## link_layer.c:916:5
 1e1dd7e:    60 08             	r0 = r6			  ## link_layer.c:916:5
 1e1dd80:    bf f3 37 f3       	call -6546 <__event_oneshot_post_add : 1e1c3f2 >			  ## link_layer.c:916:5
 1e1dd84:    40 08             	r0 = r4			  ## ll_adv.c:482:5
 1e1dd86:    6b 17             	call -298 <le_ll_adv_addr_process : 1e1dc5e >			  ## ll_adv.c:482:5
 1e1dd88:    00 f9 00 80       	r0 = b[r8 + 0] (u)			  ## ll_adv.c:482:5
 1e1dd8c:    1b 20             	if (r0 == 0) goto 54 <adv_rx_probe_handler+0xFA : 1e1ddc4 >			  ## ll_adv.c:482:5
 1e1dd8e:    60 08             	r0 = r6			  ## ll_adv.c:486:9
 1e1dd90:    bf f3 d8 f0       	call -7760 <ll_close_conn_link : 1e1bf44 >			  ## ll_adv.c:486:9
 1e1dd94:    c6 ff ac 0e 00 00 	r6 = 3756 <adv_hdl : eac >			  ## ll_adv.c:486:9
 1e1dd9a:    00 4c             	r0 = [r6 + 0]			  ## ll_adv.c:674:36
 1e1dd9c:    15 40             	r5 = [r0 + 4]			  ## ll_adv.c:674:44
 1e1dd9e:    bf f3 da e4       	call -13900 <le_hw_open : 1e1a756 >			  ## ll_adv.c:676:20
 1e1dda2:    08 4a             	[r5 + 0] = r0			  ## ll_adv.c:676:18
 1e1dda4:    16 20             	if (r0 == 0) goto 44 <adv_rx_probe_handler+0x108 : 1e1ddd2 >			  ## ll_adv.c:676:18
 1e1dda6:    00 40             	r0 = [r0 + 0]
 1e1dda8:    c2 ff 94 be e1 01 	r2 = 31571604 <adv_handler : 1e1be94 >			  ## ll_adv.c:683:5
 1e1ddae:    51 08             	r1 = r5			  ## ll_adv.c:683:5
 1e1ddb0:    bf f3 7c e5       	call -13576 <le_hw_handler_register : 1e1a8ac >			  ## ll_adv.c:683:5
 1e1ddb4:    50 08             	r0 = r5			  ## ll_adv.c:689:18
 1e1ddb6:    bf f3 a9 f7       	call -4270 <__set_ll_adv_state : 1e1cd0c >			  ## ll_adv.c:689:18
 1e1ddba:    0b 30             	if (r0 != 0) goto 22 <adv_rx_probe_handler+0x108 : 1e1ddd2 >
 1e1ddbc:    00 4c             	r0 = [r6 + 0]			  ## ll_adv.c:696:5
 1e1ddbe:    11 70             	r1 = 1			  ## ll_adv.c:696:20
 1e1ddc0:    09 60             	b[r0 + 0] = r1			  ## ll_adv.c:696:20
 1e1ddc2:    07 18             	goto 14 <adv_rx_probe_handler+0x108 : 1e1ddd2 >			  ## ll_adv.c:696:20
 1e1ddc4:    00 f6 00 a0       	r0 = [r10 + 0]
 1e1ddc8:    e1 70             	r1 = 14
 1e1ddca:    03 70             	r3 = 0
 1e1ddcc:    42 08             	r2 = r4
 1e1ddce:    bf f3 63 e1       	call -15674 <le_hw_ioctrl : 1e1a098 >
 1e1ddd2:    40 58             	r0 = h[r4 + 8] (u)			  ## ll_adv.c:513:9
 1e1ddd4:    20 fd 30 09       	r0 = r0 & 48			  ## ll_adv.c:513:9
 1e1ddd8:    00 e1 02 10       	if (r0 != 16) goto 4 <adv_rx_probe_handler+0x116 : 1e1dde0 >			  ## ll_adv.c:513:9
 1e1dddc:    a0 68             	r0 = b[r4 + 10] (u)			  ## ll_adv.c:513:9
 1e1ddde:    01 20             	if (r0 == 0) goto 2 <adv_rx_probe_handler+0x118 : 1e1dde2 >			  ## ll_adv.c:513:9
 1e1dde0:    6f 17             	call -290 <ll_thread_resume : 1e1dcc0 >			  ## ll_adv.c:516:9
 1e1dde2:    5a 01             	{pc, r10-r4} = [sp++]			  ## ll_adv.c:518:1


__conn_master_rx_post_handler:
 1e1dde4:    34 00             	[--sp] = rets			  ## ll_master.c:567:0
 1e1dde6:    42 52             	r2 = h[r1 + 8] (u)			  ## ll_master.c:570:17
 1e1dde8:    92 c6             	r2 = r2 << 26			  ## ll_master.c:570:5
 1e1ddea:    22 fd c0 2c       	r2 = r2 & 3221225472			  ## ll_master.c:570:17
 1e1ddee:    42 fb c0 2c       	r2 = r2 + 3221225472			  ## ll_master.c:570:5
 1e1ddf2:    92 df             	r2 = r2 >>> 30			  ## ll_master.c:570:5
 1e1ddf4:    02 e0 02 b0       	ifs (r2 < 0) goto 4 <__conn_master_rx_post_handler+0x18 : 1e1ddfc >			  ## ll_master.c:570:5
 1e1ddf8:    bf f3 60 fb       	call -2368 <conn_rx_acl_u_post_handler : 1e1d4bc >			  ## ll_master.c:576:9
 1e1ddfc:    30 00             	pc = [sp++]			  ## ll_master.c:584:1


ll_update_send_data_handle:
 1e1ddfe:    78 01             	[--sp] = {rets, r8-r4}			  ## ll_slave.c:427:0
 1e1de00:    fa 0b             	sp += -12			  ## ll_slave.c:427:0
 1e1de02:    c4 ff a8 0e 00 00 	r4 = 3752 <ll_update_handle : ea8 >			  ## ll_slave.c:418:12
 1e1de08:    04 58             	r4 = h[r4 + 0] (u)			  ## ll_slave.c:418:12
 1e1de0a:    37 08             	r7 = r3
 1e1de0c:    26 08             	r6 = r2
 1e1de0e:    15 08             	r5 = r1
 1e1de10:    08 08             	r8 = r0
 1e1de12:    40 08             	r0 = r4			  ## ll_slave.c:431:28
 1e1de14:    bf f3 4a f0       	call -8044 <ll_link_for_handle : 1e1beac >			  ## ll_slave.c:431:28
 1e1de18:    0c 20             	if (r0 == 0) goto 24 <ll_update_send_data_handle+0x34 : 1e1de32 >
 1e1de1a:    2f 02             	[sp+8] = r7			  ## ll_slave.c:412:5
 1e1de1c:    1e 02             	[sp+4] = r6			  ## ll_slave.c:412:5
 1e1de1e:    c2 ff 11 58 e1 01 	r2 = 31545361 <update_target_end+0x2989 : 1e15811 >			  ## ll_slave.c:412:5
 1e1de24:    61 74             	r1 = 70			  ## ll_slave.c:412:5
 1e1de26:    0d 02             	[sp] = r5			  ## ll_slave.c:412:5
 1e1de28:    83 08             	r3 = r8			  ## ll_slave.c:412:5
 1e1de2a:    bf f3 ed f1       	call -7206 <ll_send_control_data : 1e1c208 >			  ## ll_slave.c:412:5
 1e1de2e:    00 70             	r0 = 0
 1e1de30:    01 18             	goto 2 <ll_update_send_data_handle+0x36 : 1e1de34 >
 1e1de32:    f0 07             	r0 = -1
 1e1de34:    06 0a             	sp += 12
 1e1de36:    58 01             	{pc, r8-r4} = [sp++]			  ## ll_slave.c:439:1


unregister_ll_update_handle:
 1e1de38:    34 00             	[--sp] = rets			  ## ll_slave.c:451:0
 1e1de3a:    c0 ff a8 0e 00 00 	r0 = 3752 <ll_update_handle : ea8 >			  ## ll_slave.c:452:47
 1e1de40:    00 50             	r0 = h[r0 + 0] (u)			  ## ll_slave.c:452:47
 1e1de42:    bf f3 33 f0       	call -8090 <ll_link_for_handle : 1e1beac >			  ## ll_slave.c:452:28
 1e1de46:    05 20             	if (r0 == 0) goto 10 <unregister_ll_update_handle+0x1A : 1e1de52 >
 1e1de48:    01 70             	r1 = 0
 1e1de4a:    11 f6 98 01       	[r0 + 408] = r1			  ## ll_slave.c:454:32
 1e1de4e:    11 f6 9c 01       	[r0 + 412] = r1			  ## ll_slave.c:455:32
 1e1de52:    30 00             	pc = [sp++]			  ## ll_slave.c:457:1


register_ll_update_handle:
 1e1de54:    74 01             	[--sp] = {rets, r4}			  ## ll_slave.c:460:0
 1e1de56:    c1 ff a8 0e 00 00 	r1 = 3752 <ll_update_handle : ea8 >			  ## ll_slave.c:461:47
 1e1de5c:    01 52             	r1 = h[r1 + 0] (u)			  ## ll_slave.c:461:47
 1e1de5e:    04 08             	r4 = r0			  ## ll_slave.c:461:47
 1e1de60:    10 08             	r0 = r1			  ## ll_slave.c:461:28
 1e1de62:    bf f3 23 f0       	call -8122 <ll_link_for_handle : 1e1beac >			  ## ll_slave.c:461:28
 1e1de66:    07 20             	if (r0 == 0) goto 14 <register_ll_update_handle+0x22 : 1e1de76 >
 1e1de68:    c1 ff fc 06 e2 01 	r1 = 31590140 <ble_updata_handle : 1e206fc >			  ## ll_slave.c:463:32
 1e1de6e:    11 f6 98 01       	[r0 + 408] = r1			  ## ll_slave.c:463:32
 1e1de72:    14 f6 9c 01       	[r0 + 412] = r4			  ## ll_slave.c:464:32
 1e1de76:    54 01             	{pc, r4} = [sp++]			  ## ll_slave.c:466:1


create_param_default:
 1e1de78:    0b 00             	ssync
 1e1de7a:    0b 00             	ssync
 1e1de7c:    00 00             	nop
 1e1de7e:    00 00             	nop
 1e1de80:    00 00             	nop
 1e1de82:    00 00             	nop
 1e1de84:    00 06             	r0 = -32
 1e1de86:    00 20             	if (r0 == 0) goto 0 <create_param_default+0x10 : 1e1de88 >
 1e1de88:    00 00             	nop
 1e1de8a:    00 80             	r0 += 0
 1e1de8c:    01 01             	{r3-r1} = [sp++]
 1e1de8e:    00 01             	{r3-r0} = [sp++]
 1e1de90:    00 00             	nop


le_controller_set_mac:
 1e1de92:    01 08             	r1 = r0			  ## hci_ll_cmds.c:602:0
 1e1de94:    c0 ff c0 0e 00 00 	r0 = 3776 <le_param+0x8 : ec0 >			  ## hci_ll_cmds.c:606:5
 1e1de9a:    62 70             	r2 = 6			  ## hci_ll_cmds.c:606:5
 1e1de9c:    d7 f3 22 48       	goto 3051588 <memcpy : 106ee4 >			  ## hci_ll_cmds.c:606:5


le_controller_get_mac:
 1e1dea0:    c1 ff c0 0e 00 00 	r1 = 3776 <le_param+0x8 : ec0 >			  ## hci_ll_cmds.c:611:0
 1e1dea6:    62 70             	r2 = 6			  ## hci_ll_cmds.c:612:5
 1e1dea8:    d7 f3 1c 48       	goto 3051576 <memcpy : 106ee4 >			  ## hci_ll_cmds.c:612:5


ll_hci_destory:
 1e1deac:    ff f3 ea f0       	goto -7724 <ll_destroy : 1e1c084 >			  ## hci_ll.c:64:0


ll_hci_set_event_mask:
 1e1deb0:    c0 ff b8 0e 00 00 	r0 = 3768 <le_param : eb8 >			  ## hci_ll.c:78:0
 1e1deb6:    c1 ff 07 f8 bf 3d 	r1 = 1035991047 <uECC_vli_cmp_unsafe+0x1AF880B : 1bff807 >			  ## hci_ll.c:79:5
 1e1debc:    19 40             	[r0 + 4] = r1			  ## hci_ll.c:79:5
 1e1debe:    c1 ff ff ff fb ff 	r1 = 4294705151 <bank_code_load_addr+0x19CA07 : 1fbffff >			  ## hci_ll.c:79:5
 1e1dec4:    09 40             	[r0 + 0] = r1			  ## hci_ll.c:79:5
 1e1dec6:    20 00             	rts			  ## hci_ll.c:80:1


ll_hci_get_acl_data_len:
 1e1dec8:    c0 ff b8 0e 00 00 	r0 = 3768 <le_param : eb8 >			  ## hci_ll.c:152:0
 1e1dece:    00 f7 42 00       	r0 = h[r0 + 66] (u)			  ## hci_ll.c:153:5
 1e1ded2:    20 00             	rts			  ## hci_ll.c:153:5


ll_hci_get_acl_total_num:
 1e1ded4:    c0 ff b8 0e 00 00 	r0 = 3768 <le_param : eb8 >			  ## hci_ll.c:157:0
 1e1deda:    00 f9 40 00       	r0 = b[r0 + 64] (u)			  ## hci_ll.c:158:21
 1e1dede:    20 00             	rts			  ## hci_ll.c:158:5


hci_ll_get_device_address:
 1e1dee0:    74 01             	[--sp] = {rets, r4}			  ## hci_ll.c:753:0
 1e1dee2:    c2 ff 64 0f 00 00 	r2 = 3940 <config_hci_ll_param.0 : f64 >			  ## hci_ll.c:756:29
 1e1dee8:    02 64             	r2 = b[r2 + 0] (u)			  ## hci_ll.c:756:29
 1e1deea:    04 08             	r4 = r0			  ## hci_ll.c:756:29
 1e1deec:    20 fd 01 29       	r0 = r2 & 1
 1e1def0:    90 b0             	r0 |= 2			  ## hci_ll.c:756:51
 1e1def2:    c3 ff c0 0e 00 00 	r3 = 3776 <le_param+0x8 : ec0 >			  ## hci_ll.c:756:51
 1e1def8:    20 e0 07 10       	if (r0 != 2) goto 14 <hci_ll_get_device_address+0x2A : 1e1df0a >			  ## hci_ll.c:756:51
 1e1defc:    62 70             	r2 = 6			  ## hci_ll_cmds.c:612:5
 1e1defe:    10 08             	r0 = r1			  ## hci_ll_cmds.c:612:5
 1e1df00:    31 08             	r1 = r3			  ## hci_ll_cmds.c:612:5
 1e1df02:    97 f3 ef 47       	call 3051486 <memcpy : 106ee4 >			  ## hci_ll_cmds.c:612:5
 1e1df06:    00 70             	r0 = 0			  ## hci_ll_cmds.c:612:5
 1e1df08:    07 18             	goto 14 <hci_ll_get_device_address+0x38 : 1e1df18 >			  ## hci_ll_cmds.c:612:5
 1e1df0a:    63 80             	r3 += 6			  ## hci_ll_cmds.c:627:5
 1e1df0c:    62 70             	r2 = 6			  ## hci_ll_cmds.c:627:5
 1e1df0e:    10 08             	r0 = r1			  ## hci_ll_cmds.c:627:5
 1e1df10:    31 08             	r1 = r3			  ## hci_ll_cmds.c:627:5
 1e1df12:    97 f3 e7 47       	call 3051470 <memcpy : 106ee4 >			  ## hci_ll_cmds.c:627:5
 1e1df16:    10 70             	r0 = 1			  ## hci_ll_cmds.c:627:5
 1e1df18:    08 68             	b[r4 + 0] = r0			  ## hci_ll.c:758:20
 1e1df1a:    54 01             	{pc, r4} = [sp++]			  ## hci_ll.c:763:1


ll_hci_connection_update:
 1e1df1c:    76 01             	[--sp] = {rets, r6-r4}			  ## hci_ll.c:327:0
 1e1df1e:    f4 0b             	sp += -24			  ## hci_ll.c:327:0
 1e1df20:    14 08             	r4 = r1			  ## hci_ll.c:327:0
 1e1df22:    05 08             	r5 = r0			  ## hci_ll.c:327:0
 1e1df24:    c0 02             	r0 = [sp+48]			  ## hci_ll.c:327:0
 1e1df26:    b1 02             	r1 = [sp+44]			  ## hci_ll.c:327:0
 1e1df28:    a6 02             	r6 = [sp+40]			  ## hci_ll.c:327:0
 1e1df2a:    58 02             	[sp+20] = r0			  ## hci_ll.c:329:5
 1e1df2c:    49 02             	[sp+16] = r1			  ## hci_ll.c:329:5
 1e1df2e:    3e 02             	[sp+12] = r6			  ## hci_ll.c:329:5
 1e1df30:    2b 02             	[sp+8] = r3			  ## hci_ll.c:329:5
 1e1df32:    1a 02             	[sp+4] = r2			  ## hci_ll.c:329:5
 1e1df34:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:329:5
 1e1df3a:    81 70             	r1 = 8			  ## hci_ll.c:329:5
 1e1df3c:    02 fb 13 20       	r2 = 8211 <btif_cfg+0x17 : 2013 >			  ## hci_ll.c:329:5
 1e1df40:    0c 02             	[sp] = r4			  ## hci_ll.c:329:5
 1e1df42:    53 08             	r3 = r5			  ## hci_ll.c:329:5
 1e1df44:    bf f3 28 d8       	call -20400 <btctrler_hci_cmd_to_task : 1e18f98 >			  ## hci_ll.c:329:5
 1e1df48:    0c 0a             	sp += 24			  ## hci_ll.c:329:5
 1e1df4a:    56 01             	{pc, r6-r4} = [sp++]			  ## hci_ll.c:329:5


ll_hci_private_free_dma_rx:
 1e1df4c:    00 8f             	r0 += -16			  ## hci_ll.c:738:0
 1e1df4e:    ff f3 de 1d       	goto -115780 <hw_dma_free : 1e01b0e >			  ## hci_ll.c:741:5


ll_hci_adv_enable:
 1e1df52:    03 08             	r3 = r0			  ## hci_ll.c:188:0
 1e1df54:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:189:5
 1e1df5a:    21 70             	r1 = 2			  ## hci_ll.c:189:5
 1e1df5c:    02 fb 0a 20       	r2 = 8202 <btif_cfg+0xE : 200a >			  ## hci_ll.c:189:5
 1e1df60:    ff f3 1a d8       	goto -20428 <btctrler_hci_cmd_to_task : 1e18f98 >			  ## hci_ll.c:189:5


ll_hci_adv_set_params:
 1e1df64:    7c 01             	[--sp] = {rets, r12-r4}			  ## hci_ll.c:85:0
 1e1df66:    fa 0b             	sp += -12			  ## hci_ll.c:85:0
 1e1df68:    d6 02             	r6 = [sp+52]			  ## hci_ll.c:85:0
 1e1df6a:    25 08             	r5 = r2			  ## hci_ll.c:85:0
 1e1df6c:    0b 08             	r11 = r0			  ## hci_ll.c:85:0
 1e1df6e:    50 6c             	r0 = b[r6 + 5] (u)			  ## hci_ll.c:93:5
 1e1df70:    09 f5 38 00       	r9 = [sp+56]			  ## hci_ll.c:93:5
 1e1df74:    c7 ff 64 0f 00 00 	r7 = 3940 <config_hci_ll_param.0 : f64 >			  ## hci_ll.c:96:63
 1e1df7a:    0c f9 00 70       	r12 = b[r7 + 0] (u)			  ## hci_ll.c:96:63
 1e1df7e:    08 f9 00 60       	r8 = b[r6 + 0] (u)			  ## hci_ll.c:103:5
 1e1df82:    0a f9 02 60       	r10 = b[r6 + 2] (u)			  ## hci_ll.c:93:5
 1e1df86:    12 6c             	r2 = b[r6 + 1] (u)			  ## hci_ll.c:93:5
 1e1df88:    44 6c             	r4 = b[r6 + 4] (u)			  ## hci_ll.c:93:5
 1e1df8a:    36 6c             	r6 = b[r6 + 3] (u)			  ## hci_ll.c:93:5
 1e1df8c:    c8 fd 40 09       	r0 <= insert(r9, p:8, l:8)			  ## hci_ll.c:95:41
 1e1df90:    82 fd 10 7c       	r7 = uextra(r12, p:2, l:2)			  ## hci_ll.c:96:63
 1e1df94:    c2 fd 80 07       	r0 <= insert(r7, p:16, l:2)			  ## hci_ll.c:96:41
 1e1df98:    28 02             	[sp+8] = r0			  ## hci_ll.c:105:5
 1e1df9a:    c8 fd 40 64       	r6 <= insert(r4, p:8, l:8)			  ## hci_ll.c:93:5
 1e1df9e:    c8 fd 40 2a       	r2 <= insert(r10, p:8, l:8)			  ## hci_ll.c:93:5
 1e1dfa2:    d0 fd 80 26       	r2 <= insert(r6, p:16, l:16)			  ## hci_ll.c:93:5
 1e1dfa6:    1a 02             	[sp+4] = r2			  ## hci_ll.c:105:5
 1e1dfa8:    c8 fd 80 53       	r5 <= insert(r3, p:16, l:8)			  ## hci_ll.c:103:5
 1e1dfac:    c8 fd c0 58       	r5 <= insert(r8, p:24, l:8)			  ## hci_ll.c:103:5
 1e1dfb0:    20 fd 03 c9       	r0 = r12 & 3			  ## hci_ll.c:103:5
 1e1dfb4:    c2 fd 40 50       	r5 <= insert(r0, p:8, l:2)			  ## hci_ll.c:103:5
 1e1dfb8:    d0 fd 80 b1       	r11 <= insert(r1, p:16, l:16)			  ## hci_ll.c:103:5
 1e1dfbc:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:105:5
 1e1dfc2:    61 70             	r1 = 6			  ## hci_ll.c:105:5
 1e1dfc4:    02 fb 06 20       	r2 = 8198 <btif_cfg+0xA : 2006 >			  ## hci_ll.c:105:5
 1e1dfc8:    0d 02             	[sp] = r5			  ## hci_ll.c:105:5
 1e1dfca:    b3 08             	r3 = r11			  ## hci_ll.c:105:5
 1e1dfcc:    bf f3 e4 d7       	call -20536 <btctrler_hci_cmd_to_task : 1e18f98 >			  ## hci_ll.c:105:5
 1e1dfd0:    06 0a             	sp += 12			  ## hci_ll.c:105:5
 1e1dfd2:    5c 01             	{pc, r12-r4} = [sp++]			  ## hci_ll.c:107:1


ll_hci_adv_set_data:
 1e1dfd4:    77 01             	[--sp] = {rets, r7-r4}			  ## hci_ll.c:116:0
 1e1dfd6:    e2 0b             	sp += -60			  ## hci_ll.c:116:0
 1e1dfd8:    14 08             	r4 = r1			  ## hci_ll.c:116:0
 1e1dfda:    05 08             	r5 = r0			  ## hci_ll.c:116:0
 1e1dfdc:    c6 a1             	r6 = sp + 28			  ## hci_ll.c:116:0
 1e1dfde:    01 70             	r1 = 0			  ## hci_ll.c:117:21
 1e1dfe0:    02 72             	r2 = 32			  ## hci_ll.c:117:21
 1e1dfe2:    60 08             	r0 = r6			  ## hci_ll.c:117:21
 1e1dfe4:    97 f3 84 47       	call 3051272 <memset : 106ef0 >			  ## hci_ll.c:117:21
 1e1dfe8:    d5 f5 1c 00       	b[sp+28] = r5			  ## hci_ll.c:118:18
 1e1dfec:    00 fd 01 69       	r0 = r6 | 1			  ## hci_ll.c:121:5
 1e1dff0:    41 08             	r1 = r4			  ## hci_ll.c:121:5
 1e1dff2:    52 08             	r2 = r5			  ## hci_ll.c:121:5
 1e1dff4:    97 f3 76 47       	call 3051244 <memcpy : 106ee4 >			  ## hci_ll.c:121:5
 1e1dff8:    73 02             	r3 = [sp+28]			  ## hci_ll.c:123:5
 1e1dffa:    84 02             	r4 = [sp+32]			  ## hci_ll.c:123:5
 1e1dffc:    90 02             	r0 = [sp+36]			  ## hci_ll.c:123:5
 1e1dffe:    a1 02             	r1 = [sp+40]			  ## hci_ll.c:123:5
 1e1e000:    b2 02             	r2 = [sp+44]			  ## hci_ll.c:123:5
 1e1e002:    c5 02             	r5 = [sp+48]			  ## hci_ll.c:123:5
 1e1e004:    d6 02             	r6 = [sp+52]			  ## hci_ll.c:123:5
 1e1e006:    e7 02             	r7 = [sp+56]			  ## hci_ll.c:123:5
 1e1e008:    6f 02             	[sp+24] = r7			  ## hci_ll.c:123:5
 1e1e00a:    5e 02             	[sp+20] = r6			  ## hci_ll.c:123:5
 1e1e00c:    4d 02             	[sp+16] = r5			  ## hci_ll.c:123:5
 1e1e00e:    3a 02             	[sp+12] = r2			  ## hci_ll.c:123:5
 1e1e010:    29 02             	[sp+8] = r1			  ## hci_ll.c:123:5
 1e1e012:    18 02             	[sp+4] = r0			  ## hci_ll.c:123:5
 1e1e014:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:123:5
 1e1e01a:    a1 70             	r1 = 10			  ## hci_ll.c:123:5
 1e1e01c:    02 fb 08 20       	r2 = 8200 <btif_cfg+0xC : 2008 >			  ## hci_ll.c:123:5
 1e1e020:    0c 02             	[sp] = r4			  ## hci_ll.c:123:5
 1e1e022:    bf f3 b9 d7       	call -20622 <btctrler_hci_cmd_to_task : 1e18f98 >			  ## hci_ll.c:123:5
 1e1e026:    1e 0a             	sp += 60			  ## hci_ll.c:123:5
 1e1e028:    57 01             	{pc, r7-r4} = [sp++]			  ## hci_ll.c:125:1


ll_hci_adv_scan_response_set_data:
 1e1e02a:    7f 01             	[--sp] = {rets, r15-r4}			  ## hci_ll.c:129:0
 1e1e02c:    c0 0b             	sp += -128			  ## hci_ll.c:129:0
 1e1e02e:    02 08             	r2 = r0			  ## hci_ll.c:129:0
 1e1e030:    7a 03             	[sp+92] = r2			  ## hci_ll.c:133:5
 1e1e032:    00 a6             	r0 = sp + 96			  ## hci_ll.c:133:5
 1e1e034:    97 f3 56 47       	call 3051180 <memcpy : 106ee4 >			  ## hci_ll.c:133:5
 1e1e038:    c0 f5 7e 00       	r0 = b[sp+126] (u)			  ## hci_ll.c:139:5
 1e1e03c:    d8 02             	[sp+52] = r0			  ## hci_ll.c:139:5
 1e1e03e:    cb f5 7d 00       	r11 = b[sp+125] (u)			  ## hci_ll.c:139:5
 1e1e042:    c0 f5 7c 00       	r0 = b[sp+124] (u)			  ## hci_ll.c:139:5
 1e1e046:    c8 02             	[sp+48] = r0			  ## hci_ll.c:139:5
 1e1e048:    c3 f5 7b 00       	r3 = b[sp+123] (u)			  ## hci_ll.c:139:5
 1e1e04c:    c0 f5 62 00       	r0 = b[sp+98] (u)			  ## hci_ll.c:139:5
 1e1e050:    68 03             	[sp+88] = r0			  ## hci_ll.c:139:5
 1e1e052:    80 f5 60 00       	r0 = h[sp+96] (u)			  ## hci_ll.c:139:5
 1e1e056:    58 03             	[sp+84] = r0			  ## hci_ll.c:139:5
 1e1e058:    c0 f5 64 00       	r0 = b[sp+100] (u)			  ## hci_ll.c:139:5
 1e1e05c:    48 03             	[sp+80] = r0			  ## hci_ll.c:139:5
 1e1e05e:    cd f5 63 00       	r13 = b[sp+99] (u)			  ## hci_ll.c:139:5
 1e1e062:    c0 f5 66 00       	r0 = b[sp+102] (u)			  ## hci_ll.c:139:5
 1e1e066:    38 03             	[sp+76] = r0			  ## hci_ll.c:139:5
 1e1e068:    c0 f5 65 00       	r0 = b[sp+101] (u)			  ## hci_ll.c:139:5
 1e1e06c:    28 03             	[sp+72] = r0			  ## hci_ll.c:139:5
 1e1e06e:    c0 f5 68 00       	r0 = b[sp+104] (u)			  ## hci_ll.c:139:5
 1e1e072:    18 03             	[sp+68] = r0			  ## hci_ll.c:139:5
 1e1e074:    c8 f5 67 00       	r8 = b[sp+103] (u)			  ## hci_ll.c:139:5
 1e1e078:    c0 f5 6a 00       	r0 = b[sp+106] (u)			  ## hci_ll.c:139:5
 1e1e07c:    08 03             	[sp+64] = r0			  ## hci_ll.c:139:5
 1e1e07e:    c0 f5 69 00       	r0 = b[sp+105] (u)			  ## hci_ll.c:139:5
 1e1e082:    b8 02             	[sp+44] = r0			  ## hci_ll.c:139:5
 1e1e084:    c0 f5 6c 00       	r0 = b[sp+108] (u)			  ## hci_ll.c:139:5
 1e1e088:    f8 02             	[sp+60] = r0			  ## hci_ll.c:139:5
 1e1e08a:    c6 f5 6b 00       	r6 = b[sp+107] (u)			  ## hci_ll.c:139:5
 1e1e08e:    c0 f5 6e 00       	r0 = b[sp+110] (u)			  ## hci_ll.c:139:5
 1e1e092:    e8 02             	[sp+56] = r0			  ## hci_ll.c:139:5
 1e1e094:    cc f5 6d 00       	r12 = b[sp+109] (u)			  ## hci_ll.c:139:5
 1e1e098:    c0 f5 70 00       	r0 = b[sp+112] (u)			  ## hci_ll.c:139:5
 1e1e09c:    a8 02             	[sp+40] = r0			  ## hci_ll.c:139:5
 1e1e09e:    c4 f5 6f 00       	r4 = b[sp+111] (u)			  ## hci_ll.c:139:5
 1e1e0a2:    c0 f5 72 00       	r0 = b[sp+114] (u)			  ## hci_ll.c:139:5
 1e1e0a6:    98 02             	[sp+36] = r0			  ## hci_ll.c:139:5
 1e1e0a8:    c9 f5 71 00       	r9 = b[sp+113] (u)			  ## hci_ll.c:139:5
 1e1e0ac:    c0 f5 74 00       	r0 = b[sp+116] (u)			  ## hci_ll.c:139:5
 1e1e0b0:    88 02             	[sp+32] = r0			  ## hci_ll.c:139:5
 1e1e0b2:    c1 f5 73 00       	r1 = b[sp+115] (u)			  ## hci_ll.c:139:5
 1e1e0b6:    c0 f5 76 00       	r0 = b[sp+118] (u)			  ## hci_ll.c:139:5
 1e1e0ba:    78 02             	[sp+28] = r0			  ## hci_ll.c:139:5
 1e1e0bc:    c5 f5 75 00       	r5 = b[sp+117] (u)			  ## hci_ll.c:139:5
 1e1e0c0:    ce f5 78 00       	r14 = b[sp+120] (u)			  ## hci_ll.c:139:5
 1e1e0c4:    c0 f5 77 00       	r0 = b[sp+119] (u)			  ## hci_ll.c:139:5
 1e1e0c8:    ca f5 7a 00       	r10 = b[sp+122] (u)			  ## hci_ll.c:139:5
 1e1e0cc:    c2 f5 79 00       	r2 = b[sp+121] (u)			  ## hci_ll.c:139:5
 1e1e0d0:    0f f5 34 00       	r15 = [sp+52]			  ## hci_ll.c:139:5
 1e1e0d4:    c8 fd 40 bf       	r11 <= insert(r15, p:8, l:8)			  ## hci_ll.c:139:5
 1e1e0d8:    c7 02             	r7 = [sp+48]			  ## hci_ll.c:139:5
 1e1e0da:    c8 fd 40 37       	r3 <= insert(r7, p:8, l:8)			  ## hci_ll.c:139:5
 1e1e0de:    d0 fd 80 3b       	r3 <= insert(r11, p:16, l:16)			  ## hci_ll.c:139:5
 1e1e0e2:    6b 02             	[sp+24] = r3			  ## hci_ll.c:141:5
 1e1e0e4:    c8 fd 40 2a       	r2 <= insert(r10, p:8, l:8)			  ## hci_ll.c:139:5
 1e1e0e8:    c8 fd 40 0e       	r0 <= insert(r14, p:8, l:8)			  ## hci_ll.c:139:5
 1e1e0ec:    d0 fd 80 02       	r0 <= insert(r2, p:16, l:16)			  ## hci_ll.c:139:5
 1e1e0f0:    58 02             	[sp+20] = r0			  ## hci_ll.c:141:5
 1e1e0f2:    70 02             	r0 = [sp+28]			  ## hci_ll.c:139:5
 1e1e0f4:    c8 fd 40 50       	r5 <= insert(r0, p:8, l:8)			  ## hci_ll.c:139:5
 1e1e0f8:    80 02             	r0 = [sp+32]			  ## hci_ll.c:139:5
 1e1e0fa:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_ll.c:139:5
 1e1e0fe:    d0 fd 80 15       	r1 <= insert(r5, p:16, l:16)			  ## hci_ll.c:139:5
 1e1e102:    49 02             	[sp+16] = r1			  ## hci_ll.c:141:5
 1e1e104:    90 02             	r0 = [sp+36]			  ## hci_ll.c:139:5
 1e1e106:    c8 fd 40 90       	r9 <= insert(r0, p:8, l:8)			  ## hci_ll.c:139:5
 1e1e10a:    a0 02             	r0 = [sp+40]			  ## hci_ll.c:139:5
 1e1e10c:    c8 fd 40 40       	r4 <= insert(r0, p:8, l:8)			  ## hci_ll.c:139:5
 1e1e110:    d0 fd 80 49       	r4 <= insert(r9, p:16, l:16)			  ## hci_ll.c:139:5
 1e1e114:    3c 02             	[sp+12] = r4			  ## hci_ll.c:141:5
 1e1e116:    e0 02             	r0 = [sp+56]			  ## hci_ll.c:139:5
 1e1e118:    c8 fd 40 c0       	r12 <= insert(r0, p:8, l:8)			  ## hci_ll.c:139:5
 1e1e11c:    f0 02             	r0 = [sp+60]			  ## hci_ll.c:139:5
 1e1e11e:    c8 fd 40 60       	r6 <= insert(r0, p:8, l:8)			  ## hci_ll.c:139:5
 1e1e122:    d0 fd 80 6c       	r6 <= insert(r12, p:16, l:16)			  ## hci_ll.c:139:5
 1e1e126:    2e 02             	[sp+8] = r6			  ## hci_ll.c:141:5
 1e1e128:    00 03             	r0 = [sp+64]			  ## hci_ll.c:139:5
 1e1e12a:    b1 02             	r1 = [sp+44]			  ## hci_ll.c:139:5
 1e1e12c:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_ll.c:139:5
 1e1e130:    10 03             	r0 = [sp+68]			  ## hci_ll.c:139:5
 1e1e132:    c8 fd 40 80       	r8 <= insert(r0, p:8, l:8)			  ## hci_ll.c:139:5
 1e1e136:    d0 fd 80 81       	r8 <= insert(r1, p:16, l:16)			  ## hci_ll.c:139:5
 1e1e13a:    18 f5 04 00       	[sp+4] = r8			  ## hci_ll.c:141:5
 1e1e13e:    21 03             	r1 = [sp+72]			  ## hci_ll.c:141:5
 1e1e140:    30 03             	r0 = [sp+76]			  ## hci_ll.c:139:5
 1e1e142:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_ll.c:139:5
 1e1e146:    40 03             	r0 = [sp+80]			  ## hci_ll.c:139:5
 1e1e148:    c8 fd 40 d0       	r13 <= insert(r0, p:8, l:8)			  ## hci_ll.c:139:5
 1e1e14c:    d0 fd 80 d1       	r13 <= insert(r1, p:16, l:16)			  ## hci_ll.c:139:5
 1e1e150:    50 03             	r0 = [sp+84]
 1e1e152:    61 03             	r1 = [sp+88]			  ## hci_ll.c:139:5
 1e1e154:    d0 fd 80 01       	r0 <= insert(r1, p:16, l:16)			  ## hci_ll.c:139:5
 1e1e158:    73 03             	r3 = [sp+92]			  ## hci_ll.c:139:5
 1e1e15a:    d8 fd 40 30       	r3 <= insert(r0, p:8, l:24)			  ## hci_ll.c:141:5
 1e1e15e:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:141:5
 1e1e164:    a1 70             	r1 = 10			  ## hci_ll.c:141:5
 1e1e166:    02 fb 09 20       	r2 = 8201 <btif_cfg+0xD : 2009 >			  ## hci_ll.c:141:5
 1e1e16a:    1d f5 00 00       	[sp] = r13			  ## hci_ll.c:141:5
 1e1e16e:    bf f3 13 d7       	call -20954 <btctrler_hci_cmd_to_task : 1e18f98 >			  ## hci_ll.c:141:5
 1e1e172:    40 0a             	sp += 128			  ## hci_ll.c:141:5
 1e1e174:    5f 01             	{pc, r15-r4} = [sp++]			  ## hci_ll.c:143:1


ll_hci_scan_enable:
 1e1e176:    74 01             	[--sp] = {rets, r4}			  ## hci_ll.c:194:0
 1e1e178:    fe 0b             	sp += -4			  ## hci_ll.c:194:0
 1e1e17a:    13 08             	r3 = r1			  ## hci_ll.c:194:0
 1e1e17c:    04 08             	r4 = r0			  ## hci_ll.c:194:0
 1e1e17e:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:195:5
 1e1e184:    31 70             	r1 = 3			  ## hci_ll.c:195:5
 1e1e186:    02 fb 0c 20       	r2 = 8204 <btif_cfg+0x10 : 200c >			  ## hci_ll.c:195:5
 1e1e18a:    0b 02             	[sp] = r3			  ## hci_ll.c:195:5
 1e1e18c:    43 08             	r3 = r4			  ## hci_ll.c:195:5
 1e1e18e:    bf f3 03 d7       	call -20986 <btctrler_hci_cmd_to_task : 1e18f98 >			  ## hci_ll.c:195:5
 1e1e192:    02 0a             	sp += 4			  ## hci_ll.c:195:5
 1e1e194:    54 01             	{pc, r4} = [sp++]			  ## hci_ll.c:195:5


ll_hci_disconnect:
 1e1e196:    74 01             	[--sp] = {rets, r4}			  ## hci_ll.c:337:0
 1e1e198:    fe 0b             	sp += -4			  ## hci_ll.c:337:0
 1e1e19a:    13 08             	r3 = r1			  ## hci_ll.c:337:0
 1e1e19c:    04 08             	r4 = r0			  ## hci_ll.c:337:0
 1e1e19e:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:338:5
 1e1e1a4:    31 70             	r1 = 3			  ## hci_ll.c:338:5
 1e1e1a6:    02 fb 06 04       	r2 = 1030 <BTCTLER_LE_RAM_TOTAL+0x28 : 406 >			  ## hci_ll.c:338:5
 1e1e1aa:    0b 02             	[sp] = r3			  ## hci_ll.c:338:5
 1e1e1ac:    43 08             	r3 = r4			  ## hci_ll.c:338:5
 1e1e1ae:    bf f3 f3 d6       	call -21018 <btctrler_hci_cmd_to_task : 1e18f98 >			  ## hci_ll.c:338:5
 1e1e1b2:    02 0a             	sp += 4			  ## hci_ll.c:338:5
 1e1e1b4:    54 01             	{pc, r4} = [sp++]			  ## hci_ll.c:338:5


ll_hci_create_conn:
 1e1e1b6:    7c 01             	[--sp] = {rets, r12-r4}			  ## hci_ll.c:215:0
 1e1e1b8:    fc 0b             	sp += -8			  ## hci_ll.c:215:0
 1e1e1ba:    14 08             	r4 = r1			  ## hci_ll.c:215:0
 1e1e1bc:    05 08             	r5 = r0			  ## hci_ll.c:215:0
 1e1e1be:    c1 ff 7d de e1 01 	r1 = 31579773 <create_param_default+0x5 : 1e1de7d >			  ## hci_ll.c:218:5
 1e1e1c4:    06 a0             	r6 = sp + 0			  ## hci_ll.c:218:5
 1e1e1c6:    72 70             	r2 = 7			  ## hci_ll.c:218:5
 1e1e1c8:    60 08             	r0 = r6			  ## hci_ll.c:218:5
 1e1e1ca:    97 f3 8b 46       	call 3050774 <memcpy : 106ee4 >			  ## hci_ll.c:218:5
 1e1e1ce:    09 f9 05 50       	r9 = b[r5 + 5] (u)			  ## hci_ll.c:228:5
 1e1e1d2:    08 f9 04 50       	r8 = b[r5 + 4] (u)			  ## hci_ll.c:228:5
 1e1e1d6:    0a f9 01 50       	r10 = b[r5 + 1] (u)			  ## hci_ll.c:228:5
 1e1e1da:    07 6a             	r7 = b[r5 + 0] (u)			  ## hci_ll.c:228:5
 1e1e1dc:    0b f9 03 50       	r11 = b[r5 + 3] (u)			  ## hci_ll.c:228:5
 1e1e1e0:    25 6a             	r5 = b[r5 + 2] (u)			  ## hci_ll.c:228:5
 1e1e1e2:    c0 ff 64 0f 00 00 	r0 = 3940 <config_hci_ll_param.0 : f64 >			  ## hci_ll.c:226:64
 1e1e1e8:    0c f9 00 00       	r12 = b[r0 + 0] (u)			  ## hci_ll.c:226:64
 1e1e1ec:    72 70             	r2 = 7			  ## hci_ll.c:229:5
 1e1e1ee:    60 08             	r0 = r6			  ## hci_ll.c:229:5
 1e1e1f0:    41 08             	r1 = r4			  ## hci_ll.c:229:5
 1e1e1f2:    97 f3 77 46       	call 3050734 <memcpy : 106ee4 >			  ## hci_ll.c:229:5
 1e1e1f6:    c4 ff 80 2a 00 00 	r4 = 10880 <hci_cmd_tmp_buff : 2a80 >			  ## hci_ll.c:229:5
 1e1e1fc:    b0 70             	r0 = 11			  ## hci_ll.c:232:5
 1e1e1fe:    08 58             	h[r4 + 0] = r0			  ## hci_ll.c:232:5
 1e1e200:    18 58             	h[r4 + 2] = r0			  ## hci_ll.c:232:5
 1e1e202:    f2 fd 30 0c       	r0 = r12 >> 6			  ## hci_ll.c:226:64
 1e1e206:    48 68             	b[r4 + 4] = r0			  ## hci_ll.c:232:5
 1e1e208:    50 98             	r0 = r4 + 5			  ## hci_ll.c:232:5
 1e1e20a:    72 70             	r2 = 7			  ## hci_ll.c:232:5
 1e1e20c:    61 08             	r1 = r6			  ## hci_ll.c:232:5
 1e1e20e:    97 f3 69 46       	call 3050706 <memcpy : 106ee4 >			  ## hci_ll.c:232:5
 1e1e212:    20 fd 03 c9       	r0 = r12 & 3			  ## hci_ll.c:227:57
 1e1e216:    c8 68             	b[r4 + 12] = r0			  ## hci_ll.c:232:5
 1e1e218:    c8 fd 40 5b       	r5 <= insert(r11, p:8, l:8)			  ## hci_ll.c:228:5
 1e1e21c:    c8 fd 40 7a       	r7 <= insert(r10, p:8, l:8)			  ## hci_ll.c:228:5
 1e1e220:    d0 fd 80 75       	r7 <= insert(r5, p:16, l:16)			  ## hci_ll.c:228:5
 1e1e224:    38 d4             	r0 = r7 >> 16			  ## hci_ll.c:228:5
 1e1e226:    d8 fd 40 89       	r8 <= insert(r9, p:8, l:24)			  ## hci_ll.c:228:5
 1e1e22a:    d0 fd 80 08       	r0 <= insert(r8, p:16, l:16)			  ## hci_ll.c:228:5
 1e1e22e:    01 d6             	r1 = r0 >> 24			  ## hci_ll.c:232:5
 1e1e230:    49 69             	b[r4 + 20] = r1			  ## hci_ll.c:232:5
 1e1e232:    01 d4             	r1 = r0 >> 16			  ## hci_ll.c:232:5
 1e1e234:    39 69             	b[r4 + 19] = r1			  ## hci_ll.c:232:5
 1e1e236:    01 d2             	r1 = r0 >> 8			  ## hci_ll.c:232:5
 1e1e238:    29 69             	b[r4 + 18] = r1			  ## hci_ll.c:232:5
 1e1e23a:    18 69             	b[r4 + 17] = r0			  ## hci_ll.c:232:5
 1e1e23c:    60 70             	r0 = 6			  ## hci_ll.c:232:5
 1e1e23e:    d0 fd 80 07       	r0 <= insert(r7, p:16, l:16)			  ## hci_ll.c:228:5
 1e1e242:    01 d6             	r1 = r0 >> 24			  ## hci_ll.c:232:5
 1e1e244:    09 69             	b[r4 + 16] = r1			  ## hci_ll.c:232:5
 1e1e246:    01 d4             	r1 = r0 >> 16			  ## hci_ll.c:232:5
 1e1e248:    f9 68             	b[r4 + 15] = r1			  ## hci_ll.c:232:5
 1e1e24a:    01 70             	r1 = 0			  ## hci_ll.c:232:5
 1e1e24c:    e9 68             	b[r4 + 14] = r1			  ## hci_ll.c:232:5
 1e1e24e:    d8 68             	b[r4 + 13] = r0			  ## hci_ll.c:232:5
 1e1e250:    89 69             	b[r4 + 24] = r1			  ## hci_ll.c:232:5
 1e1e252:    10 70             	r0 = 1			  ## hci_ll.c:232:5
 1e1e254:    78 69             	b[r4 + 23] = r0			  ## hci_ll.c:232:5
 1e1e256:    69 69             	b[r4 + 22] = r1			  ## hci_ll.c:232:5
 1e1e258:    58 69             	b[r4 + 21] = r0			  ## hci_ll.c:232:5
 1e1e25a:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:233:5
 1e1e260:    21 70             	r1 = 2			  ## hci_ll.c:233:5
 1e1e262:    02 fb 0d 20       	r2 = 8205 <btif_cfg+0x11 : 200d >			  ## hci_ll.c:233:5
 1e1e266:    43 08             	r3 = r4			  ## hci_ll.c:233:5
 1e1e268:    bf f3 96 d6       	call -21204 <btctrler_hci_cmd_to_task : 1e18f98 >			  ## hci_ll.c:233:5
 1e1e26c:    04 0a             	sp += 8			  ## hci_ll.c:233:5
 1e1e26e:    5c 01             	{pc, r12-r4} = [sp++]			  ## hci_ll.c:233:5


ll_hci_create_conn_ext:
 1e1e270:    74 01             	[--sp] = {rets, r4}			  ## hci_ll.c:241:0
 1e1e272:    01 08             	r1 = r0			  ## hci_ll.c:241:0
 1e1e274:    c4 ff 80 2a 00 00 	r4 = 10880 <hci_cmd_tmp_buff : 2a80 >			  ## hci_ll.c:244:5
 1e1e27a:    92 71             	r2 = 25			  ## hci_ll.c:244:5
 1e1e27c:    40 08             	r0 = r4			  ## hci_ll.c:244:5
 1e1e27e:    97 f3 31 46       	call 3050594 <memcpy : 106ee4 >			  ## hci_ll.c:244:5
 1e1e282:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:245:5
 1e1e288:    21 70             	r1 = 2			  ## hci_ll.c:245:5
 1e1e28a:    02 fb 0d 20       	r2 = 8205 <btif_cfg+0x11 : 200d >			  ## hci_ll.c:245:5
 1e1e28e:    43 08             	r3 = r4			  ## hci_ll.c:245:5
 1e1e290:    14 01             	{rets, r4} = [sp++]			  ## hci_ll.c:245:5
 1e1e292:    ff f3 81 d6       	goto -21246 <btctrler_hci_cmd_to_task : 1e18f98 >			  ## hci_ll.c:245:5


ll_hci_create_conn_cancel:
 1e1e296:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:254:0
 1e1e29c:    11 70             	r1 = 1			  ## hci_ll.c:255:5
 1e1e29e:    02 fb 0e 20       	r2 = 8206 <btif_cfg+0x12 : 200e >			  ## hci_ll.c:255:5
 1e1e2a2:    ff f3 79 d6       	goto -21262 <btctrler_hci_cmd_to_task : 1e18f98 >			  ## hci_ll.c:255:5


ll_hci_vendor_send_key_num:
 1e1e2a6:    74 01             	[--sp] = {rets, r4}			  ## hci_ll.c:260:0
 1e1e2a8:    fe 0b             	sp += -4			  ## hci_ll.c:260:0
 1e1e2aa:    14 08             	r4 = r1			  ## hci_ll.c:260:0
 1e1e2ac:    03 08             	r3 = r0			  ## hci_ll.c:260:0
 1e1e2ae:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:261:5
 1e1e2b4:    c2 ff 83 f8 00 00 	r2 = 63619 <BD19_SDK_RAM_SIZE+0x8F : f883 >			  ## hci_ll.c:261:5
 1e1e2ba:    31 70             	r1 = 3			  ## hci_ll.c:261:5
 1e1e2bc:    0c 02             	[sp] = r4			  ## hci_ll.c:261:5
 1e1e2be:    bf f3 6b d6       	call -21290 <btctrler_hci_cmd_to_task : 1e18f98 >			  ## hci_ll.c:261:5
 1e1e2c2:    02 0a             	sp += 4			  ## hci_ll.c:261:5
 1e1e2c4:    54 01             	{pc, r4} = [sp++]			  ## hci_ll.c:261:5


ll_vendor_latency_hold_cnt:
 1e1e2c6:    74 01             	[--sp] = {rets, r4}			  ## hci_ll.c:266:0
 1e1e2c8:    fe 0b             	sp += -4			  ## hci_ll.c:266:0
 1e1e2ca:    14 08             	r4 = r1			  ## hci_ll.c:266:0
 1e1e2cc:    03 08             	r3 = r0			  ## hci_ll.c:266:0
 1e1e2ce:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:267:5
 1e1e2d4:    c2 ff 84 f8 00 00 	r2 = 63620 <BD19_SDK_RAM_SIZE+0x90 : f884 >			  ## hci_ll.c:267:5
 1e1e2da:    31 70             	r1 = 3			  ## hci_ll.c:267:5
 1e1e2dc:    0c 02             	[sp] = r4			  ## hci_ll.c:267:5
 1e1e2de:    bf f3 5b d6       	call -21322 <btctrler_hci_cmd_to_task : 1e18f98 >			  ## hci_ll.c:267:5
 1e1e2e2:    02 0a             	sp += 4			  ## hci_ll.c:267:5
 1e1e2e4:    54 01             	{pc, r4} = [sp++]			  ## hci_ll.c:267:5


ll_hci_encryption:
 1e1e2e6:    7f 01             	[--sp] = {rets, r15-r4}			  ## hci_ll.c:272:0
 1e1e2e8:    ce 0b             	sp += -100			  ## hci_ll.c:272:0
 1e1e2ea:    12 60             	r2 = b[r0 + 1] (u)			  ## hci_ll.c:276:5
 1e1e2ec:    8a 03             	[sp+96] = r2			  ## hci_ll.c:276:5
 1e1e2ee:    02 60             	r2 = b[r0 + 0] (u)			  ## hci_ll.c:276:5
 1e1e2f0:    7a 02             	[sp+28] = r2			  ## hci_ll.c:276:5
 1e1e2f2:    32 60             	r2 = b[r0 + 3] (u)			  ## hci_ll.c:276:5
 1e1e2f4:    7a 03             	[sp+92] = r2			  ## hci_ll.c:276:5
 1e1e2f6:    22 60             	r2 = b[r0 + 2] (u)			  ## hci_ll.c:276:5
 1e1e2f8:    6a 03             	[sp+88] = r2			  ## hci_ll.c:276:5
 1e1e2fa:    52 60             	r2 = b[r0 + 5] (u)			  ## hci_ll.c:276:5
 1e1e2fc:    5a 03             	[sp+84] = r2			  ## hci_ll.c:276:5
 1e1e2fe:    0e f9 04 00       	r14 = b[r0 + 4] (u)			  ## hci_ll.c:276:5
 1e1e302:    72 60             	r2 = b[r0 + 7] (u)			  ## hci_ll.c:276:5
 1e1e304:    4a 03             	[sp+80] = r2			  ## hci_ll.c:276:5
 1e1e306:    62 60             	r2 = b[r0 + 6] (u)			  ## hci_ll.c:276:5
 1e1e308:    3a 03             	[sp+76] = r2			  ## hci_ll.c:276:5
 1e1e30a:    92 60             	r2 = b[r0 + 9] (u)			  ## hci_ll.c:276:5
 1e1e30c:    2a 03             	[sp+72] = r2			  ## hci_ll.c:276:5
 1e1e30e:    09 f9 08 00       	r9 = b[r0 + 8] (u)			  ## hci_ll.c:276:5
 1e1e312:    b2 60             	r2 = b[r0 + 11] (u)			  ## hci_ll.c:276:5
 1e1e314:    1a 03             	[sp+68] = r2			  ## hci_ll.c:276:5
 1e1e316:    a2 60             	r2 = b[r0 + 10] (u)			  ## hci_ll.c:276:5
 1e1e318:    0a 03             	[sp+64] = r2			  ## hci_ll.c:276:5
 1e1e31a:    d2 60             	r2 = b[r0 + 13] (u)			  ## hci_ll.c:276:5
 1e1e31c:    fa 02             	[sp+60] = r2			  ## hci_ll.c:276:5
 1e1e31e:    08 f9 0c 00       	r8 = b[r0 + 12] (u)			  ## hci_ll.c:276:5
 1e1e322:    f2 60             	r2 = b[r0 + 15] (u)			  ## hci_ll.c:276:5
 1e1e324:    ea 02             	[sp+56] = r2			  ## hci_ll.c:276:5
 1e1e326:    0c f9 0e 00       	r12 = b[r0 + 14] (u)			  ## hci_ll.c:276:5
 1e1e32a:    f0 62             	r0 = b[r1 + 15] (u)			  ## hci_ll.c:277:5
 1e1e32c:    98 02             	[sp+36] = r0			  ## hci_ll.c:277:5
 1e1e32e:    e4 62             	r4 = b[r1 + 14] (u)			  ## hci_ll.c:277:5
 1e1e330:    d0 62             	r0 = b[r1 + 13] (u)			  ## hci_ll.c:277:5
 1e1e332:    88 02             	[sp+32] = r0			  ## hci_ll.c:277:5
 1e1e334:    c2 62             	r2 = b[r1 + 12] (u)			  ## hci_ll.c:277:5
 1e1e336:    10 62             	r0 = b[r1 + 1] (u)			  ## hci_ll.c:277:5
 1e1e338:    d8 02             	[sp+52] = r0			  ## hci_ll.c:277:5
 1e1e33a:    05 62             	r5 = b[r1 + 0] (u)			  ## hci_ll.c:277:5
 1e1e33c:    30 62             	r0 = b[r1 + 3] (u)			  ## hci_ll.c:277:5
 1e1e33e:    c8 02             	[sp+48] = r0			  ## hci_ll.c:277:5
 1e1e340:    0a f9 02 10       	r10 = b[r1 + 2] (u)			  ## hci_ll.c:277:5
 1e1e344:    50 62             	r0 = b[r1 + 5] (u)			  ## hci_ll.c:277:5
 1e1e346:    b8 02             	[sp+44] = r0			  ## hci_ll.c:277:5
 1e1e348:    43 62             	r3 = b[r1 + 4] (u)			  ## hci_ll.c:277:5
 1e1e34a:    70 62             	r0 = b[r1 + 7] (u)			  ## hci_ll.c:277:5
 1e1e34c:    a8 02             	[sp+40] = r0			  ## hci_ll.c:277:5
 1e1e34e:    66 62             	r6 = b[r1 + 6] (u)			  ## hci_ll.c:277:5
 1e1e350:    0d f9 09 10       	r13 = b[r1 + 9] (u)			  ## hci_ll.c:277:5
 1e1e354:    80 62             	r0 = b[r1 + 8] (u)			  ## hci_ll.c:277:5
 1e1e356:    0b f9 0b 10       	r11 = b[r1 + 11] (u)			  ## hci_ll.c:277:5
 1e1e35a:    a1 62             	r1 = b[r1 + 10] (u)			  ## hci_ll.c:277:5
 1e1e35c:    0f f5 24 00       	r15 = [sp+36]			  ## hci_ll.c:277:5
 1e1e360:    c8 fd 40 4f       	r4 <= insert(r15, p:8, l:8)			  ## hci_ll.c:277:5
 1e1e364:    87 02             	r7 = [sp+32]			  ## hci_ll.c:277:5
 1e1e366:    c8 fd 40 27       	r2 <= insert(r7, p:8, l:8)			  ## hci_ll.c:277:5
 1e1e36a:    d0 fd 80 24       	r2 <= insert(r4, p:16, l:16)			  ## hci_ll.c:277:5
 1e1e36e:    6a 02             	[sp+24] = r2			  ## hci_ll.c:279:5
 1e1e370:    c8 fd 40 1b       	r1 <= insert(r11, p:8, l:8)			  ## hci_ll.c:277:5
 1e1e374:    c8 fd 40 0d       	r0 <= insert(r13, p:8, l:8)			  ## hci_ll.c:277:5
 1e1e378:    d0 fd 80 01       	r0 <= insert(r1, p:16, l:16)			  ## hci_ll.c:277:5
 1e1e37c:    58 02             	[sp+20] = r0			  ## hci_ll.c:279:5
 1e1e37e:    a0 02             	r0 = [sp+40]			  ## hci_ll.c:277:5
 1e1e380:    c8 fd 40 60       	r6 <= insert(r0, p:8, l:8)			  ## hci_ll.c:277:5
 1e1e384:    b0 02             	r0 = [sp+44]			  ## hci_ll.c:277:5
 1e1e386:    c8 fd 40 30       	r3 <= insert(r0, p:8, l:8)			  ## hci_ll.c:277:5
 1e1e38a:    d0 fd 80 36       	r3 <= insert(r6, p:16, l:16)			  ## hci_ll.c:277:5
 1e1e38e:    4b 02             	[sp+16] = r3			  ## hci_ll.c:279:5
 1e1e390:    c0 02             	r0 = [sp+48]			  ## hci_ll.c:277:5
 1e1e392:    c8 fd 40 a0       	r10 <= insert(r0, p:8, l:8)			  ## hci_ll.c:277:5
 1e1e396:    d0 02             	r0 = [sp+52]			  ## hci_ll.c:277:5
 1e1e398:    c8 fd 40 50       	r5 <= insert(r0, p:8, l:8)			  ## hci_ll.c:277:5
 1e1e39c:    d0 fd 80 5a       	r5 <= insert(r10, p:16, l:16)			  ## hci_ll.c:277:5
 1e1e3a0:    3d 02             	[sp+12] = r5			  ## hci_ll.c:279:5
 1e1e3a2:    e0 02             	r0 = [sp+56]			  ## hci_ll.c:276:5
 1e1e3a4:    c8 fd 40 c0       	r12 <= insert(r0, p:8, l:8)			  ## hci_ll.c:276:5
 1e1e3a8:    f0 02             	r0 = [sp+60]			  ## hci_ll.c:276:5
 1e1e3aa:    c8 fd 40 80       	r8 <= insert(r0, p:8, l:8)			  ## hci_ll.c:276:5
 1e1e3ae:    d0 fd 80 8c       	r8 <= insert(r12, p:16, l:16)			  ## hci_ll.c:276:5
 1e1e3b2:    18 f5 08 00       	[sp+8] = r8			  ## hci_ll.c:279:5
 1e1e3b6:    01 03             	r1 = [sp+64]			  ## hci_ll.c:279:5
 1e1e3b8:    10 03             	r0 = [sp+68]			  ## hci_ll.c:276:5
 1e1e3ba:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_ll.c:276:5
 1e1e3be:    20 03             	r0 = [sp+72]			  ## hci_ll.c:276:5
 1e1e3c0:    c8 fd 40 90       	r9 <= insert(r0, p:8, l:8)			  ## hci_ll.c:276:5
 1e1e3c4:    d0 fd 80 91       	r9 <= insert(r1, p:16, l:16)			  ## hci_ll.c:276:5
 1e1e3c8:    19 f5 04 00       	[sp+4] = r9			  ## hci_ll.c:279:5
 1e1e3cc:    31 03             	r1 = [sp+76]			  ## hci_ll.c:279:5
 1e1e3ce:    40 03             	r0 = [sp+80]			  ## hci_ll.c:276:5
 1e1e3d0:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_ll.c:276:5
 1e1e3d4:    50 03             	r0 = [sp+84]			  ## hci_ll.c:276:5
 1e1e3d6:    c8 fd 40 e0       	r14 <= insert(r0, p:8, l:8)			  ## hci_ll.c:276:5
 1e1e3da:    d0 fd 80 e1       	r14 <= insert(r1, p:16, l:16)			  ## hci_ll.c:276:5
 1e1e3de:    61 03             	r1 = [sp+88]
 1e1e3e0:    70 03             	r0 = [sp+92]			  ## hci_ll.c:276:5
 1e1e3e2:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_ll.c:276:5
 1e1e3e6:    80 03             	r0 = [sp+96]			  ## hci_ll.c:276:5
 1e1e3e8:    72 02             	r2 = [sp+28]			  ## hci_ll.c:276:5
 1e1e3ea:    c8 fd 40 20       	r2 <= insert(r0, p:8, l:8)			  ## hci_ll.c:276:5
 1e1e3ee:    d0 fd 80 21       	r2 <= insert(r1, p:16, l:16)			  ## hci_ll.c:276:5
 1e1e3f2:    23 08             	r3 = r2
 1e1e3f4:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:279:5
 1e1e3fa:    91 70             	r1 = 9			  ## hci_ll.c:279:5
 1e1e3fc:    02 fb 17 20       	r2 = 8215 <btif_cfg+0x1B : 2017 >			  ## hci_ll.c:279:5
 1e1e400:    1e f5 00 00       	[sp] = r14			  ## hci_ll.c:279:5
 1e1e404:    bf f3 c8 d5       	call -21616 <btctrler_hci_cmd_to_task : 1e18f98 >			  ## hci_ll.c:279:5
 1e1e408:    32 0a             	sp += 100
 1e1e40a:    5f 01             	{pc, r15-r4} = [sp++]


ll_hci_get_le_rand:
 1e1e40c:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:287:0
 1e1e412:    11 70             	r1 = 1			  ## hci_ll.c:288:5
 1e1e414:    02 fb 18 20       	r2 = 8216 <btif_cfg+0x1C : 2018 >			  ## hci_ll.c:288:5
 1e1e418:    ff f3 be d5       	goto -21636 <btctrler_hci_cmd_to_task : 1e18f98 >			  ## hci_ll.c:288:5


ll_hci_set_random_address:
 1e1e41c:    01 08             	r1 = r0			  ## hci_ll.c:146:0
 1e1e41e:    c0 ff c6 0e 00 00 	r0 = 3782 <le_param+0xE : ec6 >			  ## hci_ll.c:147:5
 1e1e424:    62 70             	r2 = 6			  ## hci_ll.c:147:5
 1e1e426:    d7 f3 5d 45       	goto 3050170 <memcpy : 106ee4 >			  ## hci_ll.c:147:5


ll_hci_long_term_key_request_nagative_reply:
 1e1e42a:    03 08             	r3 = r0			  ## hci_ll.c:318:0
 1e1e42c:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:319:5
 1e1e432:    21 70             	r1 = 2			  ## hci_ll.c:319:5
 1e1e434:    02 fb 1b 20       	r2 = 8219 <btif_cfg+0x1F : 201b >			  ## hci_ll.c:319:5
 1e1e438:    ff f3 ae d5       	goto -21668 <btctrler_hci_cmd_to_task : 1e18f98 >			  ## hci_ll.c:319:5


ll_hci_start_encryption:
 1e1e43c:    74 01             	[--sp] = {rets, r4}			  ## hci_ll.c:293:0
 1e1e43e:    c4 ff 80 2a 00 00 	r4 = 10880 <hci_cmd_tmp_buff : 2a80 >			  ## hci_ll.c:300:5
 1e1e444:    08 58             	h[r4 + 0] = r0			  ## hci_ll.c:296:30
 1e1e446:    08 d4             	r0 = r1 >> 16			  ## hci_ll.c:297:5
 1e1e448:    28 58             	h[r4 + 4] = r0			  ## hci_ll.c:297:5
 1e1e44a:    19 58             	h[r4 + 2] = r1			  ## hci_ll.c:297:5
 1e1e44c:    10 d4             	r0 = r2 >> 16			  ## hci_ll.c:298:5
 1e1e44e:    48 58             	h[r4 + 8] = r0			  ## hci_ll.c:298:5
 1e1e450:    3a 58             	h[r4 + 6] = r2			  ## hci_ll.c:298:5
 1e1e452:    5b 58             	h[r4 + 10] = r3			  ## hci_ll.c:299:5
 1e1e454:    21 02             	r1 = [sp+8]			  ## hci_ll.c:299:5
 1e1e456:    c0 98             	r0 = r4 + 12			  ## hci_ll.c:300:5
 1e1e458:    02 71             	r2 = 16			  ## hci_ll.c:300:5
 1e1e45a:    97 f3 43 45       	call 3050118 <memcpy : 106ee4 >			  ## hci_ll.c:300:5
 1e1e45e:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:302:5
 1e1e464:    21 70             	r1 = 2			  ## hci_ll.c:302:5
 1e1e466:    02 fb 19 20       	r2 = 8217 <btif_cfg+0x1D : 2019 >			  ## hci_ll.c:302:5
 1e1e46a:    43 08             	r3 = r4			  ## hci_ll.c:302:5
 1e1e46c:    14 01             	{rets, r4} = [sp++]			  ## hci_ll.c:302:5
 1e1e46e:    ff f3 93 d5       	goto -21722 <btctrler_hci_cmd_to_task : 1e18f98 >			  ## hci_ll.c:302:5


ll_hci_long_term_key_request_reply:
 1e1e472:    7f 01             	[--sp] = {rets, r15-r4}			  ## hci_ll.c:307:0
 1e1e474:    f6 0b             	sp += -20			  ## hci_ll.c:307:0
 1e1e476:    48 02             	[sp+16] = r0			  ## hci_ll.c:307:0
 1e1e478:    0b f9 0f 10       	r11 = b[r1 + 15] (u)			  ## hci_ll.c:310:5
 1e1e47c:    e2 62             	r2 = b[r1 + 14] (u)			  ## hci_ll.c:310:5
 1e1e47e:    0d f9 0d 10       	r13 = b[r1 + 13] (u)			  ## hci_ll.c:310:5
 1e1e482:    c6 62             	r6 = b[r1 + 12] (u)			  ## hci_ll.c:310:5
 1e1e484:    09 f9 01 10       	r9 = b[r1 + 1] (u)			  ## hci_ll.c:310:5
 1e1e488:    04 62             	r4 = b[r1 + 0] (u)			  ## hci_ll.c:310:5
 1e1e48a:    0a f9 03 10       	r10 = b[r1 + 3] (u)			  ## hci_ll.c:310:5
 1e1e48e:    27 62             	r7 = b[r1 + 2] (u)			  ## hci_ll.c:310:5
 1e1e490:    0c f9 05 10       	r12 = b[r1 + 5] (u)			  ## hci_ll.c:310:5
 1e1e494:    40 62             	r0 = b[r1 + 4] (u)			  ## hci_ll.c:310:5
 1e1e496:    0e f9 07 10       	r14 = b[r1 + 7] (u)			  ## hci_ll.c:310:5
 1e1e49a:    65 62             	r5 = b[r1 + 6] (u)			  ## hci_ll.c:310:5
 1e1e49c:    0f f9 09 10       	r15 = b[r1 + 9] (u)			  ## hci_ll.c:310:5
 1e1e4a0:    83 62             	r3 = b[r1 + 8] (u)			  ## hci_ll.c:310:5
 1e1e4a2:    08 f9 0b 10       	r8 = b[r1 + 11] (u)			  ## hci_ll.c:310:5
 1e1e4a6:    a1 62             	r1 = b[r1 + 10] (u)			  ## hci_ll.c:310:5
 1e1e4a8:    c8 fd 40 2b       	r2 <= insert(r11, p:8, l:8)			  ## hci_ll.c:310:5
 1e1e4ac:    c8 fd 40 6d       	r6 <= insert(r13, p:8, l:8)			  ## hci_ll.c:310:5
 1e1e4b0:    d0 fd 80 62       	r6 <= insert(r2, p:16, l:16)			  ## hci_ll.c:310:5
 1e1e4b4:    3e 02             	[sp+12] = r6			  ## hci_ll.c:312:5
 1e1e4b6:    c8 fd 40 18       	r1 <= insert(r8, p:8, l:8)			  ## hci_ll.c:310:5
 1e1e4ba:    c8 fd 40 3f       	r3 <= insert(r15, p:8, l:8)			  ## hci_ll.c:310:5
 1e1e4be:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## hci_ll.c:310:5
 1e1e4c2:    2b 02             	[sp+8] = r3			  ## hci_ll.c:312:5
 1e1e4c4:    c8 fd 40 5e       	r5 <= insert(r14, p:8, l:8)			  ## hci_ll.c:310:5
 1e1e4c8:    c8 fd 40 0c       	r0 <= insert(r12, p:8, l:8)			  ## hci_ll.c:310:5
 1e1e4cc:    d0 fd 80 05       	r0 <= insert(r5, p:16, l:16)			  ## hci_ll.c:310:5
 1e1e4d0:    18 02             	[sp+4] = r0			  ## hci_ll.c:312:5
 1e1e4d2:    c8 fd 40 7a       	r7 <= insert(r10, p:8, l:8)			  ## hci_ll.c:310:5
 1e1e4d6:    c8 fd 40 49       	r4 <= insert(r9, p:8, l:8)			  ## hci_ll.c:310:5
 1e1e4da:    d0 fd 80 47       	r4 <= insert(r7, p:16, l:16)			  ## hci_ll.c:310:5
 1e1e4de:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:312:5
 1e1e4e4:    61 70             	r1 = 6			  ## hci_ll.c:312:5
 1e1e4e6:    02 fb 1a 20       	r2 = 8218 <btif_cfg+0x1E : 201a >			  ## hci_ll.c:312:5
 1e1e4ea:    0c 02             	[sp] = r4			  ## hci_ll.c:312:5
 1e1e4ec:    43 02             	r3 = [sp+16]			  ## hci_ll.c:312:5
 1e1e4ee:    bf f3 53 d5       	call -21850 <btctrler_hci_cmd_to_task : 1e18f98 >			  ## hci_ll.c:312:5
 1e1e4f2:    0a 0a             	sp += 20			  ## hci_ll.c:312:5
 1e1e4f4:    5f 01             	{pc, r15-r4} = [sp++]			  ## hci_ll.c:312:5


le_controller_set_random_mac:
 1e1e4f6:    01 08             	r1 = r0			  ## hci_ll_cmds.c:618:0
 1e1e4f8:    c0 ff c6 0e 00 00 	r0 = 3782 <le_param+0xE : ec6 >			  ## hci_ll_cmds.c:619:5
 1e1e4fe:    62 70             	r2 = 6			  ## hci_ll_cmds.c:619:5
 1e1e500:    d7 f3 f0 44       	goto 3049952 <memcpy : 106ee4 >			  ## hci_ll_cmds.c:619:5


ll_hci_cmd_handler:
 1e1e504:    77 01             	[--sp] = {rets, r7-r4}			  ## hci_ll.c:498:0
 1e1e506:    a8 0b             	sp += -176			  ## hci_ll.c:498:0
 1e1e508:    06 08             	r6 = r0			  ## hci_ll.c:498:0
 1e1e50a:    04 5c             	r4 = h[r6 + 0] (u)			  ## hci_ll.c:499:18
 1e1e50c:    c5 ff 5c 59 e1 01 	r5 = 31545692 <update_target_end+0x2AD4 : 1e1595c >
 1e1e512:    01 ff 06 44 11 00 	if (r4 != 1030) goto 34 <ll_hci_cmd_handler+0x36 : 1e1e53a >			  ## hci_ll.c:503:9
 1e1e518:    10 4c             	r0 = [r6 + 4]			  ## hci_ll.c:509:42
 1e1e51a:    90 f5 ac 00       	h[sp+172] = r0			  ## hci_ll.c:509:40
 1e1e51e:    20 4c             	r0 = [r6 + 8]			  ## hci_ll.c:510:31
 1e1e520:    d0 f5 ae 00       	b[sp+174] = r0			  ## hci_ll.c:510:29
 1e1e524:    c1 aa             	r1 = sp + 172			  ## hci_ll.c:510:29
 1e1e526:    40 08             	r0 = r4			  ## hci_ll.c:511:26
 1e1e528:    bf f3 4b f2       	call -7018 <ll_push_control_data : 1e1c9c2 >			  ## hci_ll.c:511:26
 1e1e52c:    02 08             	r2 = r0			  ## hci_ll.c:511:26
 1e1e52e:    01 fb 06 04       	r1 = 1030 <BTCTLER_LE_RAM_TOTAL+0x28 : 406 >			  ## hci_ll.c:512:17
 1e1e532:    f0 70             	r0 = 15			  ## hci_ll.c:512:17
 1e1e534:    13 70             	r3 = 1			  ## hci_ll.c:512:17
 1e1e536:    09 02             	[sp] = r1			  ## hci_ll.c:512:17
 1e1e538:    aa 18             	goto 340 <.GJTIE907_0_0_+0x128 : 1e1e68e >			  ## hci_ll.c:512:17
 1e1e53a:    30 fd fc 4a       	r0 = r4 & 4294902783
 1e1e53e:    40 e2 1c c0       	ifs (r0 > 36) goto 56 <.GJTIE907_0_0_+0x14 : 1e1e57a >			  ## hci_ll.c:518:5
 1e1e542:    a0 8f             	r0 += -6
 1e1e544:    50 e1 a6 80       	if (r0 > 21) goto 332 <.GJTIE907_0_0_+0x12E : 1e1e694 >
 1e1e548:    c7 ff 5d 59 e1 01 	r7 = 31545693 <update_target_end+0x2AD5 : 1e1595d >
 1e1e54e:    a0 00             	tbb [r0]


.GJTIS907_0_0_:
 1e1e550:    0b     < 11 : 0xB >
 1e1e551:    a2     < 162 : 0xA2 >
 1e1e552:    2d     < 45 : 0x2D >
 1e1e553:    37     < 55 : 0x37 >
 1e1e554:    41     < 65 : 0x41 >
 1e1e555:    a2     < 162 : 0xA2 >
 1e1e556:    a2     < 162 : 0xA2 >
 1e1e557:    a2     < 162 : 0xA2 >
 1e1e558:    a2     < 162 : 0xA2 >
 1e1e559:    a2     < 162 : 0xA2 >
 1e1e55a:    a2     < 162 : 0xA2 >
 1e1e55b:    a2     < 162 : 0xA2 >
 1e1e55c:    a2     < 162 : 0xA2 >
 1e1e55d:    a2     < 162 : 0xA2 >
 1e1e55e:    a2     < 162 : 0xA2 >
 1e1e55f:    a2     < 162 : 0xA2 >
 1e1e560:    a2     < 162 : 0xA2 >
 1e1e561:    46     < 70 : 0x46 >
 1e1e562:    62     < 98 : 0x62 >
 1e1e563:    70     < 112 : 0x70 >
 1e1e564:    72     < 114 : 0x72 >
 1e1e565:    7d     < 125 : 0x7D >
 1e1e566:    41 9c             	r1 = r6 + 4			  ## hci_ll.c:537:36
 1e1e568:    d4 a9             	r4 = sp + 157			  ## hci_ll.c:537:36
 1e1e56a:    f2 70             	r2 = 15			  ## hci_ll.c:537:13
 1e1e56c:    40 08             	r0 = r4			  ## hci_ll.c:537:13
 1e1e56e:    97 f3 b9 44       	call 3049842 <memcpy : 106ee4 >			  ## hci_ll.c:537:13
 1e1e572:    40 08             	r0 = r4			  ## hci_ll.c:538:13
 1e1e574:    bf f3 22 f3       	call -6588 <ll_adv_set_params : 1e1cbbc >			  ## hci_ll.c:538:13
 1e1e578:    8d 18             	goto 282 <.GJTIE907_0_0_+0x12E : 1e1e694 >			  ## hci_ll.c:538:13
 1e1e57a:    0c ff 82 00 07 00 	ifs (r0 > 130) goto 14 <.GJTIE907_0_0_+0x28 : 1e1e58e >
 1e1e580:    50 e2 02 00       	if (r0 == 37) goto 4 <.GJTIE907_0_0_+0x22 : 1e1e588 >
 1e1e584:    60 e2 86 10       	if (r0 != 38) goto 268 <.GJTIE907_0_0_+0x12E : 1e1e694 >
 1e1e588:    f0 70             	r0 = 15
 1e1e58a:    02 70             	r2 = 0
 1e1e58c:    7e 18             	goto 252 <.GJTIE907_0_0_+0x124 : 1e1e68a >
 1e1e58e:    00 ff 83 00 6f 00 	if (r0 == 131) goto 222 <.GJTIE907_0_0_+0x10C : 1e1e672 >
 1e1e594:    01 ff 84 00 7d 00 	if (r0 != 132) goto 250 <.GJTIE907_0_0_+0x12E : 1e1e694 >
 1e1e59a:    10 4c             	r0 = [r6 + 4]			  ## hci_ll.c:686:27
 1e1e59c:    90 f5 04 00       	h[sp+4] = r0			  ## hci_ll.c:686:25
 1e1e5a0:    20 4c             	r0 = [r6 + 8]			  ## hci_ll.c:687:27
 1e1e5a2:    90 f5 06 00       	h[sp+6] = r0			  ## hci_ll.c:687:25
 1e1e5a6:    41 a0             	r1 = sp + 4			  ## hci_ll.c:687:25
 1e1e5a8:    6b 18             	goto 214 <.GJTIE907_0_0_+0x11A : 1e1e680 >			  ## hci_ll.c:687:25
 1e1e5aa:    41 9c             	r1 = r6 + 4			  ## hci_ll.c:545:35
 1e1e5ac:    d4 a7             	r4 = sp + 125			  ## hci_ll.c:545:35
 1e1e5ae:    02 72             	r2 = 32			  ## hci_ll.c:545:13
 1e1e5b0:    40 08             	r0 = r4			  ## hci_ll.c:545:13
 1e1e5b2:    97 f3 97 44       	call 3049774 <memcpy : 106ee4 >			  ## hci_ll.c:545:13
 1e1e5b6:    40 08             	r0 = r4			  ## hci_ll.c:546:13
 1e1e5b8:    bf f3 13 f3       	call -6618 <ll_adv_set_adv_data : 1e1cbe2 >			  ## hci_ll.c:546:13
 1e1e5bc:    6b 18             	goto 214 <.GJTIE907_0_0_+0x12E : 1e1e694 >			  ## hci_ll.c:546:13
 1e1e5be:    41 9c             	r1 = r6 + 4			  ## hci_ll.c:553:41
 1e1e5c0:    d4 a5             	r4 = sp + 93			  ## hci_ll.c:553:41
 1e1e5c2:    02 72             	r2 = 32			  ## hci_ll.c:553:13
 1e1e5c4:    40 08             	r0 = r4			  ## hci_ll.c:553:13
 1e1e5c6:    97 f3 8d 44       	call 3049754 <memcpy : 106ee4 >			  ## hci_ll.c:553:13
 1e1e5ca:    40 08             	r0 = r4			  ## hci_ll.c:554:13
 1e1e5cc:    bf f3 2b f3       	call -6570 <ll_adv_set_scan_rsp_data : 1e1cc26 >			  ## hci_ll.c:554:13
 1e1e5d0:    61 18             	goto 194 <.GJTIE907_0_0_+0x12E : 1e1e694 >			  ## hci_ll.c:554:13
 1e1e5d2:    10 4c             	r0 = [r6 + 4]			  ## hci_ll.c:559:13
 1e1e5d4:    61 20             	if (r0 == 0) goto 194 <.GJTIE907_0_0_+0x132 : 1e1e698 >			  ## hci_ll.c:559:13
 1e1e5d6:    bf f3 3b f4       	call -6026 <ll_adv_open : 1e1ce50 >			  ## hci_ll.c:560:22
 1e1e5da:    5c 18             	goto 184 <.GJTIE907_0_0_+0x12E : 1e1e694 >			  ## hci_ll.c:560:22
 1e1e5dc:    41 9c             	r1 = r6 + 4			  ## hci_ll.c:592:29
 1e1e5de:    d4 a4             	r4 = sp + 77			  ## hci_ll.c:592:29
 1e1e5e0:    02 71             	r2 = 16			  ## hci_ll.c:592:13
 1e1e5e2:    40 08             	r0 = r4			  ## hci_ll.c:592:13
 1e1e5e4:    97 f3 7e 44       	call 3049724 <memcpy : 106ee4 >			  ## hci_ll.c:592:13
 1e1e5e8:    41 9d             	r1 = r6 + 20			  ## hci_ll.c:593:40
 1e1e5ea:    d5 a3             	r5 = sp + 61			  ## hci_ll.c:593:40
 1e1e5ec:    02 71             	r2 = 16			  ## hci_ll.c:593:13
 1e1e5ee:    50 08             	r0 = r5			  ## hci_ll.c:593:13
 1e1e5f0:    97 f3 78 44       	call 3049712 <memcpy : 106ee4 >			  ## hci_ll.c:593:13
 1e1e5f4:    d6 a2             	r6 = sp + 45			  ## hci_ll.c:593:13
 1e1e5f6:    40 08             	r0 = r4			  ## hci_ll.c:594:13
 1e1e5f8:    51 08             	r1 = r5			  ## hci_ll.c:594:13
 1e1e5fa:    62 08             	r2 = r6			  ## hci_ll.c:594:13
 1e1e5fc:    bf f3 1d 25       	call -112070 <aes128_start : 1e0303a >			  ## hci_ll.c:594:13
 1e1e600:    c1 ff 60 59 e1 01 	r1 = 31545696 <update_target_end+0x2AD8 : 1e15960 >			  ## hci_ll.c:595:13
 1e1e606:    00 fb 17 20       	r0 = 8215 <btif_cfg+0x1B : 2017 >			  ## hci_ll.c:595:13
 1e1e60a:    02 70             	r2 = 0			  ## hci_ll.c:595:13
 1e1e60c:    63 08             	r3 = r6			  ## hci_ll.c:595:13
 1e1e60e:    bf f3 1b d6       	call -21450 <hci_send_event_cmd_complete : 1e19248 >			  ## hci_ll.c:595:13
 1e1e612:    40 18             	goto 128 <.GJTIE907_0_0_+0x12E : 1e1e694 >			  ## hci_ll.c:595:13
 1e1e614:    55 a2             	r5 = sp + 37
 1e1e616:    81 70             	r1 = 8			  ## hci_ll.c:602:13
 1e1e618:    50 08             	r0 = r5			  ## hci_ll.c:602:13
 1e1e61a:    bf f3 9f 46       	call -94914 <pseudo_random_genrate : 1e0735c >			  ## hci_ll.c:602:13
 1e1e61e:    c1 ff 65 59 e1 01 	r1 = 31545701 <update_target_end+0x2ADD : 1e15965 >			  ## hci_ll.c:603:13
 1e1e624:    02 70             	r2 = 0			  ## hci_ll.c:603:13
 1e1e626:    40 08             	r0 = r4			  ## hci_ll.c:603:13
 1e1e628:    53 08             	r3 = r5			  ## hci_ll.c:603:13
 1e1e62a:    bf f3 0d d6       	call -21478 <hci_send_event_cmd_complete : 1e19248 >			  ## hci_ll.c:603:13
 1e1e62e:    32 18             	goto 100 <.GJTIE907_0_0_+0x12E : 1e1e694 >			  ## hci_ll.c:603:13
 1e1e630:    11 4c             	r1 = [r6 + 4]			  ## hci_ll.c:611:63
 1e1e632:    26 18             	goto 76 <.GJTIE907_0_0_+0x11A : 1e1e680 >			  ## hci_ll.c:611:63
 1e1e634:    10 4c             	r0 = [r6 + 4]			  ## hci_ll.c:623:42
 1e1e636:    90 f5 10 00       	h[sp+16] = r0			  ## hci_ll.c:623:40
 1e1e63a:    05 a1             	r5 = sp + 16			  ## hci_ll.c:623:40
 1e1e63c:    00 fd 02 59       	r0 = r5 | 2			  ## hci_ll.c:624:17
 1e1e640:    81 9c             	r1 = r6 + 8			  ## hci_ll.c:624:48
 1e1e642:    02 71             	r2 = 16			  ## hci_ll.c:624:17
 1e1e644:    97 f3 4e 44       	call 3049628 <memcpy : 106ee4 >			  ## hci_ll.c:624:17
 1e1e648:    04 18             	goto 8 <.GJTIE907_0_0_+0xEC : 1e1e652 >			  ## hci_ll.c:624:17
 1e1e64a:    10 4c             	r0 = [r6 + 4]			  ## hci_ll.c:638:42
 1e1e64c:    90 f5 0c 00       	h[sp+12] = r0			  ## hci_ll.c:638:40
 1e1e650:    c5 a0             	r5 = sp + 12			  ## hci_ll.c:638:40
 1e1e652:    40 08             	r0 = r4
 1e1e654:    51 08             	r1 = r5
 1e1e656:    bf f3 b4 f1       	call -7320 <ll_push_control_data : 1e1c9c2 >
 1e1e65a:    02 08             	r2 = r0
 1e1e65c:    01 70             	r1 = 0
 1e1e65e:    50 08             	r0 = r5
 1e1e660:    bf f3 27 46       	call -95154 <btctler_little_endian_read_16 : 1e072b2 >
 1e1e664:    33 fd f0 0a       	r3 = r0 & 4294905855
 1e1e668:    40 08             	r0 = r4
 1e1e66a:    71 08             	r1 = r7
 1e1e66c:    bf f3 ec d5       	call -21544 <hci_send_event_cmd_complete : 1e19248 >
 1e1e670:    11 18             	goto 34 <.GJTIE907_0_0_+0x12E : 1e1e694 >
 1e1e672:    10 4c             	r0 = [r6 + 4]			  ## hci_ll.c:676:38
 1e1e674:    90 f5 08 00       	h[sp+8] = r0			  ## hci_ll.c:676:36
 1e1e678:    20 4c             	r0 = [r6 + 8]			  ## hci_ll.c:677:28
 1e1e67a:    d0 f5 0a 00       	b[sp+10] = r0			  ## hci_ll.c:677:26
 1e1e67e:    81 a0             	r1 = sp + 8			  ## hci_ll.c:677:26
 1e1e680:    40 08             	r0 = r4
 1e1e682:    bf f3 9e f1       	call -7364 <ll_push_control_data : 1e1c9c2 >
 1e1e686:    02 08             	r2 = r0
 1e1e688:    f0 70             	r0 = 15
 1e1e68a:    13 70             	r3 = 1
 1e1e68c:    0c 02             	[sp] = r4
 1e1e68e:    51 08             	r1 = r5
 1e1e690:    bf f3 b3 d5       	call -21658 <hci_send_event : 1e191fa >
 1e1e694:    58 0a             	sp += 176
 1e1e696:    57 01             	{pc, r7-r4} = [sp++]			  ## hci_ll.c:721:1
 1e1e698:    bf f3 20 ec       	call -10176 <ll_adv_close : 1e1bedc >			  ## hci_ll.c:562:22
 1e1e69c:    fb 1f             	goto -10 <.GJTIE907_0_0_+0x12E : 1e1e694 >			  ## hci_ll.c:562:22


ll_push_acl_data:
 1e1e69e:    74 01             	[--sp] = {rets, r4}			  ## hci_ll_cmds.c:541:0
 1e1e6a0:    02 08             	r2 = r0			  ## hci_ll_cmds.c:541:0
 1e1e6a2:    01 70             	r1 = 0			  ## hci_ll_cmds.c:546:14
 1e1e6a4:    bf f3 05 46       	call -95222 <btctler_little_endian_read_16 : 1e072b2 >			  ## hci_ll_cmds.c:546:14
 1e1e6a8:    03 08             	r3 = r0			  ## hci_ll_cmds.c:546:14
 1e1e6aa:    21 70             	r1 = 2			  ## hci_ll_cmds.c:547:12
 1e1e6ac:    20 08             	r0 = r2			  ## hci_ll_cmds.c:547:12
 1e1e6ae:    bf f3 00 46       	call -95232 <btctler_little_endian_read_16 : 1e072b2 >			  ## hci_ll_cmds.c:547:12
 1e1e6b2:    04 08             	r4 = r0			  ## hci_ll_cmds.c:547:12
 1e1e6b4:    30 fd f0 3a       	r0 = r3 & 4294905855			  ## hci_ll_cmds.c:546:14
 1e1e6b8:    21 08             	r1 = r2			  ## hci_ll_cmds.c:552:5
 1e1e6ba:    42 08             	r2 = r4			  ## hci_ll_cmds.c:552:5
 1e1e6bc:    14 01             	{rets, r4} = [sp++]			  ## hci_ll_cmds.c:552:5
 1e1e6be:    ff f3 eb f3       	goto -6186 <ll_send_acl_packet : 1e1ce98 >			  ## hci_ll_cmds.c:552:5


__bt_updata_save_connection_info:
 1e1e6c2:    74 01             	[--sp] = {rets, r4}			  ## lmp_escape3.c:862:0
 1e1e6c4:    f6 0b             	sp += -20			  ## lmp_escape3.c:862:0
 1e1e6c6:    c0 ff 7c 0f 00 00 	r0 = 3964 <update_conn : f7c >			  ## lmp_escape3.c:864:35
 1e1e6cc:    04 40             	r4 = [r0 + 0]			  ## lmp_escape3.c:864:35
 1e1e6ce:    0e 28             	if (r4 == 0) goto 28 <__bt_updata_save_connection_info+0x2A : 1e1e6ec >
 1e1e6d0:    97 f3 64 43       	call 3049160 <local_irq_disable : 106d9c >			  ## lmp_escape3.c:870:5
 1e1e6d4:    30 70             	r0 = 3			  ## lmp_escape3.c:873:33
 1e1e6d6:    d0 f5 02 00       	b[sp+2] = r0			  ## lmp_escape3.c:873:33
 1e1e6da:    00 f6 dc 40       	r0 = [r4 + 220]			  ## lmp_escape3.c:874:38
 1e1e6de:    01 a0             	r1 = sp + 0			  ## lmp_escape3.c:874:38
 1e1e6e0:    80 f3 9f 01       	call 830 <__bt_updata_save_link_info : 1e1ea22 >			  ## lmp_escape3.c:874:5
 1e1e6e4:    97 f3 58 43       	call 3049136 <local_irq_enable : 106d98 >			  ## lmp_escape3.c:877:5
 1e1e6e8:    00 70             	r0 = 0			  ## lmp_escape3.c:877:5
 1e1e6ea:    01 18             	goto 2 <__bt_updata_save_connection_info+0x2C : 1e1e6ee >			  ## lmp_escape3.c:877:5
 1e1e6ec:    f0 07             	r0 = -1
 1e1e6ee:    0a 0a             	sp += 20
 1e1e6f0:    54 01             	{pc, r4} = [sp++]			  ## lmp_escape3.c:881:1


lmp_get_conn_num:
 1e1e6f2:    74 01             	[--sp] = {rets, r4}			  ## lmp.c:4109:0
 1e1e6f4:    97 f3 52 43       	call 3049124 <local_irq_disable : 106d9c >			  ## lmp.c:4113:5
 1e1e6f8:    c0 ff 38 2e 00 00 	r0 = 11832 <lmp_acl_link : 2e38 >			  ## lmp.c:4113:5
 1e1e6fe:    04 70             	r4 = 0
 1e1e700:    01 08             	r1 = r0
 1e1e702:    11 fc d4 00       	r1 = r1 + 212
 1e1e706:    02 52             	r2 = h[r1 + 0] (u)			  ## lmp.c:4115:26
 1e1e708:    05 24             	if (r2 == 0) goto 10 <lmp_get_conn_num+0x22 : 1e1e714 >			  ## lmp.c:4115:26
 1e1e70a:    23 42             	r3 = [r1 + 8]			  ## lmp.c:4116:23
 1e1e70c:    12 70             	r2 = 1			  ## lmp.c:4116:17
 1e1e70e:    01 36             	if (r3 != 0) goto 2 <lmp_get_conn_num+0x20 : 1e1e712 >			  ## lmp.c:4116:17
 1e1e710:    02 70             	r2 = 0
 1e1e712:    24 09             	r4 += r2			  ## lmp.c:4116:17
 1e1e714:    41 84             	r1 += 68			  ## lmp.c:4114:5
 1e1e716:    02 fc 18 01       	r2 = r0 + 280
 1e1e71a:    21 f2 f2 3f       	if (r1 < r2) goto -28 <lmp_get_conn_num+0x10 : 1e1e702 >
 1e1e71e:    97 f3 3b 43       	call 3049078 <local_irq_enable : 106d98 >			  ## lmp.c:4121:5
 1e1e722:    00 05             	r0 = r4.b0 (u)			  ## lmp.c:4122:5
 1e1e724:    54 01             	{pc, r4} = [sp++]			  ## lmp.c:4122:5


get_random_number:
 1e1e726:    78 01             	[--sp] = {rets, r8-r4}			  ## lmp.c:378:0
 1e1e728:    fe 0b             	sp += -4			  ## lmp.c:378:0
 1e1e72a:    14 08             	r4 = r1			  ## lmp.c:378:0
 1e1e72c:    05 08             	r5 = r0			  ## lmp.c:378:0
 1e1e72e:    19 28             	if (r4 == 0) goto 50 <get_random_number+0x3C : 1e1e762 >			  ## lmp.c:378:0
 1e1e730:    c8 ff 00 3b 1e 00 	r8 = 1981184 <uECC_vli_cmp_unsafe+0xDCB04 : 1e3b00 >			  ## lmp.c:378:0
 1e1e736:    00 f6 00 80       	r0 = [r8 + 0]			  ## lmp.c:385:27
 1e1e73a:    01 05             	r1 = r4.b0 (u)			  ## lmp.c:387:13
 1e1e73c:    08 02             	[sp] = r0			  ## lmp.c:385:16
 1e1e73e:    47 08             	r7 = r4			  ## lmp.c:387:13
 1e1e740:    41 e0 01 30       	if (r1 < 4) goto 2 <get_random_number+0x20 : 1e1e746 >			  ## lmp.c:387:13
 1e1e744:    47 70             	r7 = 4			  ## lmp.c:387:13
 1e1e746:    c6 05             	r6 = r7.b0 (u)			  ## lmp.c:390:40
 1e1e748:    01 a0             	r1 = sp + 0			  ## lmp.c:390:40
 1e1e74a:    50 08             	r0 = r5			  ## lmp.c:390:9
 1e1e74c:    62 08             	r2 = r6			  ## lmp.c:390:9
 1e1e74e:    97 f3 c9 43       	call 3049362 <memcpy : 106ee4 >			  ## lmp.c:390:9
 1e1e752:    a0 70             	r0 = 10			  ## lmp.c:393:9
 1e1e754:    8f f3 80 32       	call 1991936 <delay : 4c58 >			  ## lmp.c:393:9
 1e1e758:    e4 b9             	r4 = r4 - r7			  ## lmp.c:392:17
 1e1e75a:    65 09             	r5 += r6			  ## lmp.c:391:17
 1e1e75c:    61 ff ff 49 ea ff 	if ((r4 & 255) != 0) goto -44 <get_random_number+0x10 : 1e1e736 >
 1e1e762:    02 0a             	sp += 4
 1e1e764:    58 01             	{pc, r8-r4} = [sp++]			  ## lmp.c:395:1


lmp_private_remote_addr_for_handler:
 1e1e766:    74 01             	[--sp] = {rets, r4}			  ## lmp.c:673:0
 1e1e768:    c2 ff ed 2e 00 00 	r2 = 12013 <lmp_acl_link+0xB5 : 2eed >			  ## lmp.c:673:0
 1e1e76e:    21 08             	r1 = r2			  ## lmp.c:673:0
 1e1e770:    03 f7 1f 10       	r3 = h[r1 + 31] (u)			  ## lmp.c:617:13
 1e1e774:    02 26             	if (r3 == 0) goto 4 <lmp_private_remote_addr_for_handler+0x14 : 1e1e77a >			  ## lmp.c:617:13
 1e1e776:    03 f2 1a 00       	if (r3 == r0) goto 52 <lmp_private_remote_addr_for_handler+0x48 : 1e1e7ae >
 1e1e77a:    14 fc 63 00       	r4 = r1 + 99			  ## lmp.c:616:5
 1e1e77e:    11 fc 18 01       	r1 = r1 + 280			  ## lmp.c:616:5
 1e1e782:    23 fc 63 00       	r3 = r2 + 99			  ## lmp.c:616:5
 1e1e786:    34 f2 f3 3f       	if (r4 < r3) goto -26 <lmp_private_remote_addr_for_handler+0xA : 1e1e770 >			  ## lmp.c:616:5
 1e1e78a:    01 f7 1f 20       	r1 = h[r2 + 31] (u)			  ## lmp.c:680:30
 1e1e78e:    06 22             	if (r1 == 0) goto 12 <lmp_private_remote_addr_for_handler+0x36 : 1e1e79c >			  ## lmp.c:680:30
 1e1e790:    01 f6 2f 20       	r1 = [r2 + 47]			  ## lmp.c:681:27
 1e1e794:    03 22             	if (r1 == 0) goto 6 <lmp_private_remote_addr_for_handler+0x36 : 1e1e79c >			  ## lmp.c:681:27
 1e1e796:    01 62             	r1 = b[r1 + 0] (u)			  ## lmp.c:681:40
 1e1e798:    01 f2 08 00       	if (r1 == r0) goto 16 <lmp_private_remote_addr_for_handler+0x46 : 1e1e7ac >			  ## lmp.c:681:40
 1e1e79c:    21 fc 63 00       	r1 = r2 + 99			  ## lmp.c:679:9
 1e1e7a0:    22 fc 18 01       	r2 = r2 + 280			  ## lmp.c:679:9
 1e1e7a4:    31 f2 f1 3f       	if (r1 < r3) goto -30 <lmp_private_remote_addr_for_handler+0x24 : 1e1e78a >			  ## lmp.c:679:9
 1e1e7a8:    01 70             	r1 = 0
 1e1e7aa:    01 18             	goto 2 <lmp_private_remote_addr_for_handler+0x48 : 1e1e7ae >
 1e1e7ac:    21 08             	r1 = r2
 1e1e7ae:    10 08             	r0 = r1			  ## lmp.c:688:1
 1e1e7b0:    54 01             	{pc, r4} = [sp++]			  ## lmp.c:688:1


lmp_hci_set_connection_encryption:
 1e1e7b2:    ff f3 a7 d4       	goto -22194 <lmp_hci_cmd_to_conn_for_handle : 1e19104 >			  ## lmp_hci.c:210:0


lmp_conn_for_handle:
 1e1e7b6:    c2 ff 38 2e 00 00 	r2 = 11832 <lmp_acl_link : 2e38 >			  ## lmp.c:613:0
 1e1e7bc:    01 08             	r1 = r0			  ## lmp.c:613:0
 1e1e7be:    20 08             	r0 = r2			  ## lmp.c:613:0
 1e1e7c0:    03 f7 d4 00       	r3 = h[r0 + 212] (u)			  ## lmp.c:617:13
 1e1e7c4:    02 26             	if (r3 == 0) goto 4 <lmp_conn_for_handle+0x14 : 1e1e7ca >			  ## lmp.c:617:13
 1e1e7c6:    13 f2 07 00       	if (r3 == r1) goto 14 <lmp_conn_for_handle+0x22 : 1e1e7d8 >
 1e1e7ca:    00 fc 18 01       	r0 = r0 + 280			  ## lmp.c:616:5
 1e1e7ce:    23 fc 18 01       	r3 = r2 + 280
 1e1e7d2:    30 f2 f5 3f       	if (r0 < r3) goto -22 <lmp_conn_for_handle+0xA : 1e1e7c0 >
 1e1e7d6:    00 70             	r0 = 0
 1e1e7d8:    20 00             	rts			  ## lmp.c:622:1


lmp_sniff_and_afh_offset_ali:
 1e1e7da:    74 01             	[--sp] = {rets, r4}			  ## lmp_sniff.c:1416:0
 1e1e7dc:    8f f3 6a 32       	call 1991892 <lmp_conn_for_link : 4cb4 >			  ## lmp_sniff.c:1417:35
 1e1e7e0:    c2 ff 38 2e 00 00 	r2 = 11832 <lmp_acl_link : 2e38 >			  ## lmp_sniff.c:1417:35
 1e1e7e6:    01 08             	r1 = r0			  ## lmp_sniff.c:1417:35
 1e1e7e8:    23 08             	r3 = r2
 1e1e7ea:    00 70             	r0 = 0
 1e1e7ec:    04 f6 e4 30       	r4 = [r3 + 228]			  ## lmp_esco.c:1264:19
 1e1e7f0:    10 38             	if (r4 != 0) goto 32 <lmp_sniff_and_afh_offset_ali+0x38 : 1e1e812 >			  ## lmp_esco.c:1264:19
 1e1e7f2:    33 fc 18 01       	r3 = r3 + 280			  ## lmp_esco.c:1263:5
 1e1e7f6:    24 fc 18 01       	r4 = r2 + 280			  ## lmp_esco.c:1263:5
 1e1e7fa:    43 f2 f7 3f       	if (r3 < r4) goto -18 <lmp_sniff_and_afh_offset_ali+0x12 : 1e1e7ec >			  ## lmp_esco.c:1263:5
 1e1e7fe:    09 22             	if (r1 == 0) goto 18 <lmp_sniff_and_afh_offset_ali+0x38 : 1e1e812 >
 1e1e800:    02 f9 ab 10       	r2 = b[r1 + 171] (u)			  ## lmp_sniff.c:1421:35
 1e1e804:    22 e0 05 10       	if (r2 != 2) goto 10 <lmp_sniff_and_afh_offset_ali+0x38 : 1e1e812 >			  ## lmp_sniff.c:1421:35
 1e1e808:    01 f6 e0 10       	r1 = [r1 + 224]			  ## lmp_sniff.c:1393:37
 1e1e80c:    02 22             	if (r1 == 0) goto 4 <lmp_sniff_and_afh_offset_ali+0x38 : 1e1e812 >
 1e1e80e:    80 52             	r0 = h[r1 + 16] (u)			  ## lmp_sniff.c:1400:22
 1e1e810:    40 c0             	r0 = r0 << 1			  ## lmp_sniff.c:1400:37
 1e1e812:    54 01             	{pc, r4} = [sp++]			  ## lmp_sniff.c:1427:5


lmp_hci_disconnect:
 1e1e814:    7a 01             	[--sp] = {rets, r10-r4}			  ## lmp_hci.c:282:0
 1e1e816:    fc 0b             	sp += -8			  ## lmp_hci.c:282:0
 1e1e818:    04 08             	r4 = r0			  ## lmp_hci.c:282:0
 1e1e81a:    cd 17             	call -102 <lmp_conn_for_handle : 1e1e7b6 >			  ## lmp_hci.c:283:35
 1e1e81c:    03 20             	if (r0 == 0) goto 6 <lmp_hci_disconnect+0x10 : 1e1e824 >			  ## lmp_hci.c:285:9
 1e1e81e:    bf f3 71 d4       	call -22302 <lmp_hci_cmd_to_conn_for_handle : 1e19104 >			  ## lmp_hci.c:287:16
 1e1e822:    32 18             	goto 100 <lmp_hci_disconnect+0x74 : 1e1e888 >
 1e1e824:    31 28             	if (r4 == 0) goto 98 <lmp_hci_disconnect+0x74 : 1e1e888 >
 1e1e826:    c6 ff 38 2e 00 00 	r6 = 11832 <lmp_acl_link : 2e38 >
 1e1e82c:    6a 71             	r10 = 22
 1e1e82e:    c8 ff eb 58 e1 01 	r8 = 31545579 <update_target_end+0x2A63 : 1e158eb >
 1e1e834:    c9 ff 16 58 e1 01 	r9 = 31545366 <update_target_end+0x298E : 1e15816 >
 1e1e83a:    67 08             	r7 = r6
 1e1e83c:    00 f6 e4 70       	r0 = [r7 + 228]			  ## lmp_esco.c:292:19
 1e1e840:    1d 20             	if (r0 == 0) goto 58 <lmp_hci_disconnect+0x68 : 1e1e87c >
 1e1e842:    01 60             	r1 = b[r0 + 0] (u)			  ## lmp_esco.c:293:17
 1e1e844:    41 f2 1a 10       	if (r1 != r4) goto 52 <lmp_hci_disconnect+0x68 : 1e1e87c >			  ## lmp_esco.c:293:17
 1e1e848:    21 60             	r1 = b[r0 + 2] (u)			  ## lmp_esco.c:294:56
 1e1e84a:    85 60             	r5 = b[r0 + 8] (u)			  ## lmp_esco.c:294:56
 1e1e84c:    21 e0 0b 10       	if (r1 != 2) goto 22 <lmp_hci_disconnect+0x52 : 1e1e866 >			  ## lmp_esco.c:294:21
 1e1e850:    1a f5 04 00       	[sp+4] = r10			  ## lmp_esco.c:295:21
 1e1e854:    e2 7f             	r2 = 254			  ## lmp_esco.c:295:21
 1e1e856:    d3 70             	r3 = 13			  ## lmp_esco.c:295:21
 1e1e858:    0d 02             	[sp] = r5			  ## lmp_esco.c:295:21
 1e1e85a:    70 08             	r0 = r7			  ## lmp_esco.c:295:21
 1e1e85c:    81 08             	r1 = r8			  ## lmp_esco.c:295:21
 1e1e85e:    bf f3 24 3d       	call -99768 <lmp_request : 1e062aa >			  ## lmp_esco.c:295:21
 1e1e862:    50 75             	r0 = 85			  ## lmp_esco.c:295:21
 1e1e864:    09 18             	goto 18 <lmp_hci_disconnect+0x64 : 1e1e878 >			  ## lmp_esco.c:295:21
 1e1e866:    82 75             	r2 = 88			  ## lmp_esco.c:299:21
 1e1e868:    1a f5 00 00       	[sp] = r10			  ## lmp_esco.c:299:21
 1e1e86c:    70 08             	r0 = r7			  ## lmp_esco.c:299:21
 1e1e86e:    91 08             	r1 = r9			  ## lmp_esco.c:299:21
 1e1e870:    53 08             	r3 = r5			  ## lmp_esco.c:299:21
 1e1e872:    bf f3 1a 3d       	call -99788 <lmp_request : 1e062aa >			  ## lmp_esco.c:299:21
 1e1e876:    30 75             	r0 = 83			  ## lmp_esco.c:299:21
 1e1e878:    10 f9 89 70       	b[r7 + 137] = r0
 1e1e87c:    77 fc 18 01       	r7 = r7 + 280			  ## lmp_esco.c:291:5
 1e1e880:    60 fc 18 01       	r0 = r6 + 280
 1e1e884:    07 f2 da 3f       	if (r7 < r0) goto -76 <lmp_hci_disconnect+0x28 : 1e1e83c >
 1e1e888:    04 0a             	sp += 8
 1e1e88a:    5a 01             	{pc, r10-r4} = [sp++]


lmp_hci_io_capability_request_reply:
 1e1e88c:    ff f3 85 d4       	goto -22262 <lmp_hci_cmd_to_conn_for_addr : 1e1919a >			  ## lmp_hci.c:216:0


lmp_private_handler_for_remote_addr:
 1e1e890:    76 01             	[--sp] = {rets, r6-r4}			  ## lmp.c:691:0
 1e1e892:    16 08             	r6 = r1			  ## lmp.c:691:0
 1e1e894:    05 08             	r5 = r0			  ## lmp.c:691:0
 1e1e896:    8f f3 1e 32       	call 1991740 <lmp_conn_for_address : 4cd6 >			  ## lmp.c:693:12
 1e1e89a:    04 70             	r4 = 0
 1e1e89c:    14 20             	if (r0 == 0) goto 40 <lmp_private_handler_for_remote_addr+0x36 : 1e1e8c6 >
 1e1e89e:    00 fc b0 00       	r0 = r0 + 176
 1e1e8a2:    16 e0 07 10       	if (r6 != 1) goto 14 <lmp_private_handler_for_remote_addr+0x24 : 1e1e8b4 >			  ## lmp.c:698:9
 1e1e8a6:    01 40             	r1 = [r0 + 0]			  ## lmp.c:699:26
 1e1e8a8:    21 fd 09 19       	r1 = r1 & 9			  ## lmp.c:699:60
 1e1e8ac:    81 e0 0b 00       	if (r1 == 8) goto 22 <lmp_private_handler_for_remote_addr+0x36 : 1e1e8c6 >			  ## lmp.c:699:60
 1e1e8b0:    24 51             	r4 = h[r0 + 36] (u)			  ## lmp.c:702:29
 1e1e8b2:    09 18             	goto 18 <lmp_private_handler_for_remote_addr+0x36 : 1e1e8c6 >			  ## lmp.c:702:29
 1e1e8b4:    d6 40             	r6 = [r0 + 52]			  ## lmp.c:705:15
 1e1e8b6:    07 2c             	if (r6 == 0) goto 14 <lmp_private_handler_for_remote_addr+0x36 : 1e1e8c6 >
 1e1e8b8:    50 80             	r0 += 5			  ## lmp.c:705:36
 1e1e8ba:    62 70             	r2 = 6			  ## lmp.c:705:29
 1e1e8bc:    51 08             	r1 = r5			  ## lmp.c:705:29
 1e1e8be:    97 f3 15 43       	call 3049002 <memcmp : 106eec >			  ## lmp.c:705:29
 1e1e8c2:    01 30             	if (r0 != 0) goto 2 <lmp_private_handler_for_remote_addr+0x36 : 1e1e8c6 >			  ## lmp.c:705:29
 1e1e8c4:    04 6c             	r4 = b[r6 + 0] (u)			  ## lmp.c:706:33
 1e1e8c6:    40 08             	r0 = r4			  ## lmp.c:710:1
 1e1e8c8:    56 01             	{pc, r6-r4} = [sp++]			  ## lmp.c:710:1


lmp_hci_accept_connection_request:
 1e1e8ca:    ff f3 66 d4       	goto -22324 <lmp_hci_cmd_to_conn_for_addr : 1e1919a >			  ## lmp_hci.c:328:0


lmp_hci_accept_sco_connection_request:
 1e1e8ce:    ff f3 64 d4       	goto -22328 <lmp_hci_cmd_to_conn_for_addr : 1e1919a >			  ## lmp_hci.c:335:0


lmp_hci_reject_connection_request:
 1e1e8d2:    ff f3 62 d4       	goto -22332 <lmp_hci_cmd_to_conn_for_addr : 1e1919a >			  ## lmp_hci.c:346:0


lmp_hci_link_key_request_reply:
 1e1e8d6:    ff f3 60 d4       	goto -22336 <lmp_hci_cmd_to_conn_for_addr : 1e1919a >			  ## lmp_hci.c:413:0


lmp_hci_link_key_request_negative_reply:
 1e1e8da:    ff f3 5e d4       	goto -22340 <lmp_hci_cmd_to_conn_for_addr : 1e1919a >			  ## lmp_hci.c:421:0


lmp_hci_pin_code_request_reply:
 1e1e8de:    ff f3 5c d4       	goto -22344 <lmp_hci_cmd_to_conn_for_addr : 1e1919a >			  ## lmp_hci.c:252:0


lmp_hci_create_connection:
 1e1e8e2:    78 01             	[--sp] = {rets, r8-r4}			  ## lmp_hci.c:465:0
 1e1e8e4:    f6 0b             	sp += -20			  ## lmp_hci.c:465:0
 1e1e8e6:    08 f9 01 00       	r8 = b[r0 + 1] (u)			  ## lmp_hci.c:468:5
 1e1e8ea:    03 60             	r3 = b[r0 + 0] (u)			  ## lmp_hci.c:468:5
 1e1e8ec:    35 60             	r5 = b[r0 + 3] (u)			  ## lmp_hci.c:468:5
 1e1e8ee:    26 60             	r6 = b[r0 + 2] (u)			  ## lmp_hci.c:468:5
 1e1e8f0:    57 60             	r7 = b[r0 + 5] (u)			  ## lmp_hci.c:468:5
 1e1e8f2:    44 60             	r4 = b[r0 + 4] (u)			  ## lmp_hci.c:468:5
 1e1e8f4:    4a 02             	[sp+16] = r2			  ## lmp_hci.c:469:5
 1e1e8f6:    00 70             	r0 = 0			  ## lmp_hci.c:469:5
 1e1e8f8:    38 02             	[sp+12] = r0			  ## lmp_hci.c:469:5
 1e1e8fa:    28 02             	[sp+8] = r0			  ## lmp_hci.c:469:5
 1e1e8fc:    19 02             	[sp+4] = r1			  ## lmp_hci.c:469:5
 1e1e8fe:    c8 fd 40 47       	r4 <= insert(r7, p:8, l:8)			  ## lmp_hci.c:468:5
 1e1e902:    c8 fd 40 65       	r6 <= insert(r5, p:8, l:8)			  ## lmp_hci.c:468:5
 1e1e906:    c8 fd 40 38       	r3 <= insert(r8, p:8, l:8)			  ## lmp_hci.c:468:5
 1e1e90a:    d0 fd 80 36       	r3 <= insert(r6, p:16, l:16)			  ## lmp_hci.c:468:5
 1e1e90e:    c0 ff 02 00 40 00 	r0 = 4194306 <uECC_vli_cmp_unsafe+0x2F9006 : 400002 >			  ## lmp_hci.c:469:5
 1e1e914:    71 70             	r1 = 7			  ## lmp_hci.c:469:5
 1e1e916:    02 fb 05 04       	r2 = 1029 <BTCTLER_LE_RAM_TOTAL+0x27 : 405 >			  ## lmp_hci.c:469:5
 1e1e91a:    0c 02             	[sp] = r4			  ## lmp_hci.c:469:5
 1e1e91c:    bf f3 3c d3       	call -22920 <btctrler_hci_cmd_to_task : 1e18f98 >			  ## lmp_hci.c:469:5
 1e1e920:    0a 0a             	sp += 20
 1e1e922:    58 01             	{pc, r8-r4} = [sp++]			  ## lmp_hci.c:470:1


lmp_hci_host_num_of_completed_packets:
 1e1e924:    ff f3 ee d3       	goto -22564 <lmp_hci_cmd_to_conn_for_handle : 1e19104 >			  ## lmp_hci.c:168:0


lmp_private_set_a2dp_channel:
 1e1e928:    75 01             	[--sp] = {rets, r5, r4}			  ## lmp_a2dp.c:39:0
 1e1e92a:    14 08             	r4 = r1			  ## lmp_a2dp.c:39:0
 1e1e92c:    05 08             	r5 = r0			  ## lmp_a2dp.c:39:0
 1e1e92e:    97 f3 35 42       	call 3048554 <local_irq_disable : 106d9c >			  ## lmp_a2dp.c:41:5
 1e1e932:    50 08             	r0 = r5			  ## lmp_a2dp.c:42:12
 1e1e934:    8f f3 cf 31       	call 1991582 <lmp_conn_for_address : 4cd6 >			  ## lmp_a2dp.c:42:12
 1e1e938:    01 20             	if (r0 == 0) goto 2 <lmp_private_set_a2dp_channel+0x14 : 1e1e93c >
 1e1e93a:    9c 50             	h[r0 + 18] = r4			  ## lmp_a2dp.c:44:27
 1e1e93c:    15 01             	{rets, r5, r4} = [sp++]			  ## lmp_a2dp.c:46:5
 1e1e93e:    d7 f3 2b 42       	goto 3048534 <local_irq_enable : 106d98 >			  ## lmp_a2dp.c:46:5


tws_lmp_clear_a2dp_packet:
 1e1e942:    20 00             	rts			  ## lmp_a2dp.c:710:0


bt_updata_clr_flag:
 1e1e944:    c0 ff 80 0f 00 00 	r0 = 3968 <bt_res_updata_flag : f80 >			  ## lmp_escape3.c:58:0
 1e1e94a:    01 40             	r1 = [r0 + 0]			  ## lmp_escape3.c:60:28
 1e1e94c:    f1 b0             	r1 &= 4294967293			  ## lmp_escape3.c:60:28
 1e1e94e:    09 40             	[r0 + 0] = r1			  ## lmp_escape3.c:60:28
 1e1e950:    20 00             	rts			  ## lmp_escape3.c:62:1


bt_updata_control:
 1e1e952:    74 01             	[--sp] = {rets, r4}			  ## lmp_escape3.c:595:0
 1e1e954:    f8 0b             	sp += -16			  ## lmp_escape3.c:595:0
 1e1e956:    c4 ff 7c 0f 00 00 	r4 = 3964 <update_conn : f7c >			  ## lmp_escape3.c:597:35
 1e1e95c:    04 48             	r4 = [r4 + 0]			  ## lmp_escape3.c:597:35
 1e1e95e:    0c 28             	if (r4 == 0) goto 24 <bt_updata_control+0x26 : 1e1e978 >
 1e1e960:    3b 02             	[sp+12] = r3			  ## lmp_escape3.c:604:5
 1e1e962:    2a 02             	[sp+8] = r2			  ## lmp_escape3.c:604:5
 1e1e964:    19 02             	[sp+4] = r1			  ## lmp_escape3.c:604:5
 1e1e966:    c1 ff 0f 58 e1 01 	r1 = 31545359 <update_target_end+0x2987 : 1e1580f >			  ## lmp_escape3.c:604:5
 1e1e96c:    c2 7f             	r2 = 252			  ## lmp_escape3.c:604:5
 1e1e96e:    63 76             	r3 = 102			  ## lmp_escape3.c:604:5
 1e1e970:    08 02             	[sp] = r0			  ## lmp_escape3.c:604:5
 1e1e972:    40 08             	r0 = r4			  ## lmp_escape3.c:604:5
 1e1e974:    bf f3 99 3c       	call -100046 <lmp_request : 1e062aa >			  ## lmp_escape3.c:604:5
 1e1e978:    08 0a             	sp += 16
 1e1e97a:    54 01             	{pc, r4} = [sp++]			  ## lmp_escape3.c:605:1


bt_updata_get_flag:
 1e1e97c:    c0 ff 80 0f 00 00 	r0 = 3968 <bt_res_updata_flag : f80 >			  ## lmp_escape3.c:65:0
 1e1e982:    00 40             	r0 = [r0 + 0]			  ## lmp_escape3.c:67:16
 1e1e984:    20 00             	rts			  ## lmp_escape3.c:70:1


reg_revic_buf_addr:
 1e1e986:    c0 ff 84 0f 00 00 	r0 = 3972 <uboot_revic_handle : f84 >			  ## lmp_escape3.c:86:0
 1e1e98c:    c1 ff c8 05 e2 01 	r1 = 31589832 <bt_updata_handle : 1e205c8 >			  ## lmp_escape3.c:87:24
 1e1e992:    09 40             	[r0 + 0] = r1			  ## lmp_escape3.c:87:24
 1e1e994:    20 00             	rts			  ## lmp_escape3.c:88:1


lmp_update_init:
 1e1e996:    c0 ff 7c 0f 00 00 	r0 = 3964 <update_conn : f7c >			  ## lmp_escape3.c:622:0
 1e1e99c:    00 40             	r0 = [r0 + 0]			  ## lmp_escape3.c:624:39
 1e1e99e:    05 20             	if (r0 == 0) goto 10 <lmp_update_init+0x14 : 1e1e9aa >
 1e1e9a0:    c0 ff 88 0f 00 00 	r0 = 3976 <g_lmp_update_start_flag : f88 >
 1e1e9a6:    11 70             	r1 = 1
 1e1e9a8:    09 60             	b[r0 + 0] = r1
 1e1e9aa:    20 00             	rts


lmp_update_exit:
 1e1e9ac:    c0 ff 7c 0f 00 00 	r0 = 3964 <update_conn : f7c >			  ## lmp_escape3.c:635:0
 1e1e9b2:    00 40             	r0 = [r0 + 0]			  ## lmp_escape3.c:637:39
 1e1e9b4:    05 20             	if (r0 == 0) goto 10 <lmp_update_exit+0x14 : 1e1e9c0 >
 1e1e9b6:    c0 ff 88 0f 00 00 	r0 = 3976 <g_lmp_update_start_flag : f88 >
 1e1e9bc:    01 70             	r1 = 0
 1e1e9be:    09 60             	b[r0 + 0] = r1
 1e1e9c0:    20 00             	rts


packet_1M_table:
 1e1e9c2:    11 00             	lockclr
 1e1e9c4:    11 00             	lockclr
 1e1e9c6:    03 00             	idle
 1e1e9c8:    01 00             	nop
 1e1e9ca:    1b 00             	cli
 1e1e9cc:    1b 00             	cli
 1e1e9ce:    04 00             	bkpt
 1e1e9d0:    01 00             	nop
 1e1e9d2:    79 00             	sti r9
 1e1e9d4:    79 00             	sti r9
 1e1e9d6:    0a 00             	ssync
 1e1e9d8:    03 00             	idle
 1e1e9da:    b7 00             	tbh [r7]
 1e1e9dc:    b7 00             	tbh [r7]
 1e1e9de:    0b 00             	ssync
 1e1e9e0:    03 00             	idle
 1e1e9e2:    e0 00             	flush [r0]
 1e1e9e4:    e0 00             	flush [r0]
 1e1e9e6:    0e 00              <unkown instruction>
 1e1e9e8:    05 00             	bkpt
 1e1e9ea:    53 01             	{pc, r3} = [sp++]
 1e1e9ec:    53 01             	{pc, r3} = [sp++]
 1e1e9ee:    0f 00              <unkown instruction>
 1e1e9f0:    05 00             	bkpt


packet_1M_table_tws:
 1e1e9f2:    1b 00             	cli
 1e1e9f4:    1b 00             	cli
 1e1e9f6:    04 00             	bkpt
 1e1e9f8:    01 00             	nop
 1e1e9fa:    b7 00             	tbh [r7]
 1e1e9fc:    b7 00             	tbh [r7]
 1e1e9fe:    0b 00             	ssync
 1e1ea00:    03 00             	idle
 1e1ea02:    53 01             	{pc, r3} = [sp++]
 1e1ea04:    53 01             	{pc, r3} = [sp++]
 1e1ea06:    0f 00              <unkown instruction>
 1e1ea08:    05 00             	bkpt


packet_2M_table:
 1e1ea0a:    6c 00             	cli r12
 1e1ea0c:    36 00             	[--sp] = rets
 1e1ea0e:    04 00             	bkpt
 1e1ea10:    01 00             	nop
 1e1ea12:    a5 01             	{psr, retx, reti} = [sp++]
 1e1ea14:    6f 01             	[--sp] = {r15-r4}
 1e1ea16:    0a 00             	ssync
 1e1ea18:    03 00             	idle
 1e1ea1a:    a7 02             	r7 = [sp+40]
 1e1ea1c:    a7 02             	r7 = [sp+40]
 1e1ea1e:    0e 00              <unkown instruction>
 1e1ea20:    05 00             	bkpt


__bt_updata_save_link_info:
 1e1ea22:    77 01             	[--sp] = {rets, r7-r4}			  ## bredr_link.c:5640:0
 1e1ea24:    14 08             	r4 = r1			  ## bredr_link.c:5640:0
 1e1ea26:    05 08             	r5 = r0			  ## bredr_link.c:5640:0
 1e1ea28:    c0 ff 9e 58 e1 01 	r0 = 31545502 <update_target_end+0x2A16 : 1e1589e >			  ## bredr_link.c:5641:5
 1e1ea2e:    c1 ff bc 58 e1 01 	r1 = 31545532 <update_target_end+0x2A34 : 1e158bc >			  ## bredr_link.c:5641:5
 1e1ea34:    42 08             	r2 = r4			  ## bredr_link.c:5641:5
 1e1ea36:    bf f3 48 83       	call -63856 <printf : 1e0f0ca >			  ## bredr_link.c:5641:5
 1e1ea3a:    c5 85             	r5 += 92			  ## bredr_link.c:5641:5
 1e1ea3c:    00 6a             	r0 = b[r5 + 0] (u)			  ## bredr_link.c:5654:40
 1e1ea3e:    81 68             	r1 = b[r4 + 8] (u)			  ## bredr_link.c:5654:21
 1e1ea40:    40 d0             	r0 = r0 >> 1			  ## bredr_link.c:5654:21
 1e1ea42:    c1 fd 08 10       	r1 <= insert(r0, p:1, l:1)			  ## bredr_link.c:5654:21
 1e1ea46:    89 68             	b[r4 + 8] = r1			  ## bredr_link.c:5654:21
 1e1ea48:    00 6a             	r0 = b[r5 + 0] (u)			  ## bredr_link.c:5655:40
 1e1ea4a:    49 d0             	r1 = r1 >> 1			  ## bredr_link.c:5655:21
 1e1ea4c:    df fd 08 01       	r0 <= insert(r1, p:1, l:31)			  ## bredr_link.c:5655:21
 1e1ea50:    88 68             	b[r4 + 8] = r0			  ## bredr_link.c:5655:21
 1e1ea52:    01 6a             	r1 = b[r5 + 0] (u)			  ## bredr_link.c:5656:40
 1e1ea54:    89 d0             	r1 = r1 >> 2			  ## bredr_link.c:5656:21
 1e1ea56:    c1 fd 10 01       	r0 <= insert(r1, p:2, l:1)			  ## bredr_link.c:5656:21
 1e1ea5a:    88 68             	b[r4 + 8] = r0			  ## bredr_link.c:5656:21
 1e1ea5c:    01 6a             	r1 = b[r5 + 0] (u)			  ## bredr_link.c:5657:41
 1e1ea5e:    20 fd 87 09       	r0 = r0 & 135			  ## bredr_link.c:5657:22
 1e1ea62:    21 fd 78 19       	r1 = r1 & 120			  ## bredr_link.c:5657:41
 1e1ea66:    50 b2             	r0 |= r1			  ## bredr_link.c:5657:22
 1e1ea68:    88 68             	b[r4 + 8] = r0			  ## bredr_link.c:5657:22
 1e1ea6a:    10 6a             	r0 = b[r5 + 1] (u)			  ## bredr_link.c:5658:46
 1e1ea6c:    98 68             	b[r4 + 9] = r0			  ## bredr_link.c:5658:27
 1e1ea6e:    20 6a             	r0 = b[r5 + 2] (u)			  ## bredr_link.c:5659:46
 1e1ea70:    a8 68             	b[r4 + 10] = r0			  ## bredr_link.c:5659:27
 1e1ea72:    20 5a             	r0 = h[r5 + 4] (u)			  ## bredr_link.c:5660:42
 1e1ea74:    68 58             	h[r4 + 12] = r0			  ## bredr_link.c:5660:23
 1e1ea76:    52 4a             	r2 = [r5 + 20]			  ## bredr_link.c:5661:37
 1e1ea78:    4a 48             	[r4 + 16] = r2			  ## bredr_link.c:5661:31
 1e1ea7a:    21 f7 0a 50       	r1 = h[r5 + 10] (s)			  ## bredr_link.c:5664:36
 1e1ea7e:    c0 ff d7 58 e1 01 	r0 = 31545559 <update_target_end+0x2A4F : 1e158d7 >			  ## bredr_link.c:5664:5
 1e1ea84:    bf f3 21 83       	call -63934 <printf : 1e0f0ca >			  ## bredr_link.c:5664:5
 1e1ea88:    d0 4b             	r0 = [r5 + 116]			  ## bredr_link.c:5669:42
 1e1ea8a:    c6 ff c0 28 00 00 	r6 = 10432 <btctler_bss_start : 28c0 >
 1e1ea90:    07 70             	r7 = 0
 1e1ea92:    61 08             	r1 = r6
 1e1ea94:    05 70             	r5 = 0
 1e1ea96:    42 f6 04 10       	r2 = [r1 ++= 4]			  ## bredr_frame.c:2847:22
 1e1ea9a:    02 f2 05 00       	if (r2 == r0) goto 10 <__bt_updata_save_link_info+0x86 : 1e1eaa8 >			  ## bredr_frame.c:2847:22
 1e1ea9e:    15 80             	r5 += 1			  ## bredr_frame.c:2846:39
 1e1eaa0:    17 80             	r7 += 1			  ## bredr_frame.c:2846:19
 1e1eaa2:    85 e0 f8 bf       	ifs (r5 < 8) goto -16 <__bt_updata_save_link_info+0x74 : 1e1ea96 >			  ## bredr_frame.c:2846:19
 1e1eaa6:    57 01             	{pc, r7-r4} = [sp++]			  ## bredr_link.c:5670:1
 1e1eaa8:    60 fc 40 00       	r0 = r6 + 64			  ## bredr_frame.c:2848:13
 1e1eaac:    42 71             	r2 = 20			  ## bredr_frame.c:2848:13
 1e1eaae:    41 08             	r1 = r4			  ## bredr_frame.c:2848:13
 1e1eab0:    97 f3 18 42       	call 3048496 <memcpy : 106ee4 >			  ## bredr_frame.c:2848:13
 1e1eab4:    17 f9 41 60       	b[r6 + 65] = r7			  ## bredr_frame.c:2849:51
 1e1eab8:    c0 ff 1a 58 e1 01 	r0 = 31545370 <update_target_end+0x2992 : 1e1581a >			  ## bredr_frame.c:2850:13
 1e1eabe:    51 08             	r1 = r5			  ## bredr_frame.c:2850:13
 1e1eac0:    17 01             	{rets, r7-r4} = [sp++]			  ## bredr_frame.c:2850:13
 1e1eac2:    ff f3 02 83       	goto -63996 <printf : 1e0f0ca >			  ## bredr_frame.c:2850:13


bredr_bd_close_frame:
 1e1eac6:    20 fb 1c 0b       	r0 = 1835008			  ## bredr_frame.c:2284:0
 1e1eaca:    11 40             	r1 = [r0 + 4]			  ## bredr_frame.c:2285:21
 1e1eacc:    71 b0             	r1 &= 4294967294			  ## bredr_frame.c:2285:21
 1e1eace:    19 40             	[r0 + 4] = r1			  ## bredr_frame.c:2285:21
 1e1ead0:    00 f4 84 09       	[r0 + 0] |= 132			  ## bredr_frame.c:2286:15
 1e1ead4:    01 40             	r1 = [r0 + 0]			  ## bredr_frame.c:2290:12
 1e1ead6:    28 f3 fd 1f       	if ((r1 & 256) != 0) goto -6 <bredr_bd_close_frame+0xE : 1e1ead4 >			  ## bredr_frame.c:2290:5
 1e1eada:    20 00             	rts			  ## bredr_frame.c:2292:1


bredr_bd_frame_disable:
 1e1eadc:    74 01             	[--sp] = {rets, r4}			  ## bredr_frame.c:2311:0
 1e1eade:    04 08             	r4 = r0			  ## bredr_frame.c:2311:0
 1e1eae0:    97 f3 5c 41       	call 3048120 <local_irq_disable : 106d9c >			  ## bredr_frame.c:2312:5
 1e1eae4:    c0 ff 04 00 1c 00 	r0 = 1835012 <uECC_vli_cmp_unsafe+0xB9008 : 1c0004 >			  ## bredr_frame.c:2314:15
 1e1eaea:    00 40             	r0 = [r0 + 0]			  ## bredr_frame.c:2314:15
 1e1eaec:    01 f9 34 42       	r1 = b[r4 + 564] (u)			  ## bredr_frame.c:2316:15
 1e1eaf0:    84 fd 60 00       	r0 = uextra(r0, p:12, l:4)			  ## bredr_frame.c:2314:38
 1e1eaf4:    10 f2 01 10       	if (r0 != r1) goto 2 <bredr_bd_frame_disable+0x1E : 1e1eafa >
 1e1eaf8:    e6 17             	call -52 <bredr_bd_close_frame : 1e1eac6 >			  ## bredr_frame.c:2317:9
 1e1eafa:    14 01             	{rets, r4} = [sp++]			  ## bredr_frame.c:2320:5
 1e1eafc:    d7 f3 4c 41       	goto 3048088 <local_irq_enable : 106d98 >			  ## bredr_frame.c:2320:5


bredr_bd_frame_enable:
 1e1eb00:    74 01             	[--sp] = {rets, r4}			  ## bredr_frame.c:2301:0
 1e1eb02:    04 08             	r4 = r0			  ## bredr_frame.c:2301:0
 1e1eb04:    97 f3 4a 41       	call 3048084 <local_irq_disable : 106d9c >			  ## bredr_frame.c:2302:5
 1e1eb08:    00 f9 34 42       	r0 = b[r4 + 564] (u)			  ## bredr_frame.c:2303:24
 1e1eb0c:    01 f7 36 42       	r1 = h[r4 + 566] (u)			  ## bredr_frame.c:2303:44
 1e1eb10:    00 c3             	r0 = r0 << 12			  ## bredr_frame.c:2303:34
 1e1eb12:    49 c0             	r1 = r1 << 1			  ## bredr_frame.c:2303:58
 1e1eb14:    50 b2             	r0 |= r1			  ## bredr_frame.c:2303:41
 1e1eb16:    c1 ff 04 00 1c 00 	r1 = 1835012 <uECC_vli_cmp_unsafe+0xB9008 : 1c0004 >			  ## bredr_frame.c:2303:41
 1e1eb1c:    08 42             	[r1 + 0] = r0			  ## bredr_frame.c:2303:21
 1e1eb1e:    00 f4 01 19       	[r1 + 0] |= 1			  ## bredr_frame.c:2296:21
 1e1eb22:    14 01             	{rets, r4} = [sp++]			  ## bredr_frame.c:2305:5
 1e1eb24:    d7 f3 38 41       	goto 3048048 <local_irq_enable : 106d98 >			  ## bredr_frame.c:2305:5


bredr_link_check_used:
 1e1eb28:    c0 ff 90 0f 00 00 	r0 = 3984 <g_page_scan : f90 >			  ## bredr_link.c:245:0
 1e1eb2e:    00 40             	r0 = [r0 + 0]			  ## bredr_link.c:247:14
 1e1eb30:    c1 ff 94 0f 00 00 	r1 = 3988 <inquiry_scan : f94 >			  ## bredr_link.c:246:25
 1e1eb36:    01 42             	r1 = [r1 + 0]			  ## bredr_link.c:246:25
 1e1eb38:    c2 ff 8c 0f 00 00 	r2 = 3980 <g_page : f8c >			  ## bredr_link.c:247:32
 1e1eb3e:    02 44             	r2 = [r2 + 0]			  ## bredr_link.c:247:32
 1e1eb40:    50 b2             	r0 |= r1			  ## bredr_link.c:247:32
 1e1eb42:    e0 fd 20 10       	r1 = r0 | r2			  ## bredr_link.c:247:32
 1e1eb46:    10 70             	r0 = 1			  ## bredr_link.c:246:20
 1e1eb48:    01 32             	if (r1 != 0) goto 2 <bredr_link_check_used+0x24 : 1e1eb4c >			  ## bredr_link.c:246:20
 1e1eb4a:    00 70             	r0 = 0
 1e1eb4c:    20 00             	rts			  ## bredr_link.c:251:1


bredr_normal_pwr_set:
 1e1eb4e:    c2 ff e8 09 00 00 	r2 = 2536 <system_data_end : 9e8 >			  ## bredr_link.c:3552:0
 1e1eb54:    22 64             	r2 = b[r2 + 2] (u)			  ## bredr_link.c:3553:12
 1e1eb56:    00 fc ec 01       	r0 = r0 + 492			  ## bredr_link.c:3553:12
 1e1eb5a:    03 40             	r3 = [r0 + 0]			  ## bredr_link.c:3565:22
 1e1eb5c:    33 fd ff 39       	r3 = r3 & 4294967040			  ## bredr_link.c:3565:22
 1e1eb60:    0b 40             	[r0 + 0] = r3			  ## bredr_link.c:3565:22
 1e1eb62:    00 ff ff 20 01 00 	if (r2 == 255) goto 2 <bredr_normal_pwr_set+0x1C : 1e1eb6a >			  ## bredr_link.c:3565:22
 1e1eb68:    21 08             	r1 = r2			  ## bredr_link.c:3553:9
 1e1eb6a:    a1 e0 01 30       	if (r1 < 10) goto 2 <bredr_normal_pwr_set+0x22 : 1e1eb70 >
 1e1eb6e:    a1 70             	r1 = 10			  ## bredr_link.c:3561:9
 1e1eb70:    02 40             	r2 = [r0 + 0]			  ## bredr_link.c:3566:22
 1e1eb72:    51 b4             	r1 |= r2			  ## bredr_link.c:3566:22
 1e1eb74:    09 40             	[r0 + 0] = r1			  ## bredr_link.c:3566:22
 1e1eb76:    20 00             	rts			  ## bredr_link.c:3569:1


bredr_pwr_set:
 1e1eb78:    76 01             	[--sp] = {rets, r6-r4}			  ## bredr_link.c:3493:0
 1e1eb7a:    03 fc a4 00       	r3 = r0 + 164			  ## bredr_link.c:3493:0
 1e1eb7e:    02 22             	if (r1 == 0) goto 4 <bredr_pwr_set+0xC : 1e1eb84 >			  ## bredr_link.c:3493:0
 1e1eb80:    01 66             	r1 = b[r3 + 0] (u)			  ## bredr_link.c:3495:28
 1e1eb82:    12 09             	r2 += r1			  ## bredr_link.c:3498:26
 1e1eb84:    94 04             	r4 = r2.b0 (s)			  ## bredr_link.c:3498:26
 1e1eb86:    0a 66             	b[r3 + 0] = r2			  ## bredr_link.c:3498:26
 1e1eb88:    04 e0 06 b0       	ifs (r4 < 0) goto 12 <bredr_pwr_set+0x20 : 1e1eb98 >			  ## bredr_link.c:3498:26
 1e1eb8c:    01 70             	r1 = 0
 1e1eb8e:    b4 e0 06 b0       	ifs (r4 < 11) goto 12 <bredr_pwr_set+0x26 : 1e1eb9e >
 1e1eb92:    21 70             	r1 = 2
 1e1eb94:    a2 70             	r2 = 10
 1e1eb96:    02 18             	goto 4 <bredr_pwr_set+0x24 : 1e1eb9c >
 1e1eb98:    11 70             	r1 = 1
 1e1eb9a:    02 70             	r2 = 0
 1e1eb9c:    0a 66             	b[r3 + 0] = r2
 1e1eb9e:    c4 ff e8 09 00 00 	r4 = 2536 <system_data_end : 9e8 >
 1e1eba4:    05 58             	r5 = h[r4 + 0] (u)			  ## bredr_link.c:3514:32
 1e1eba6:    25 fd 0f 59       	r5 = r5 & 15			  ## bredr_link.c:3514:32
 1e1ebaa:    96 04             	r6 = r2.b0 (s)			  ## bredr_link.c:3514:9
 1e1ebac:    56 f2 03 b0       	ifs (r6 < r5) goto 6 <bredr_pwr_set+0x3E : 1e1ebb6 >			  ## bredr_link.c:3514:9
 1e1ebb0:    0d 66             	b[r3 + 0] = r5			  ## bredr_link.c:3515:26
 1e1ebb2:    21 70             	r1 = 2
 1e1ebb4:    52 08             	r2 = r5
 1e1ebb6:    24 68             	r4 = b[r4 + 2] (u)			  ## bredr_link.c:3519:12
 1e1ebb8:    00 ff ff 40 03 00 	if (r4 == 255) goto 6 <bredr_pwr_set+0x4C : 1e1ebc4 >			  ## bredr_link.c:3519:12
 1e1ebbe:    0c 66             	b[r3 + 0] = r4			  ## bredr_link.c:3520:26
 1e1ebc0:    21 70             	r1 = 2			  ## bredr_link.c:3520:26
 1e1ebc2:    42 08             	r2 = r4			  ## bredr_link.c:3520:26
 1e1ebc4:    00 f9 2b 00       	r0 = b[r0 + 43] (u)			  ## bredr_link.c:3524:13
 1e1ebc8:    02 f3 02 00       	if ((r0 & 4) == 0) goto 4 <bredr_pwr_set+0x58 : 1e1ebd0 >
 1e1ebcc:    a2 70             	r2 = 10
 1e1ebce:    0a 66             	b[r3 + 0] = r2			  ## bredr_link.c:3525:26
 1e1ebd0:    b0 46             	r0 = [r3 + 44]			  ## bredr_link.c:3528:9
 1e1ebd2:    00 fc ec 01       	r0 = r0 + 492			  ## bredr_link.c:3528:9
 1e1ebd6:    03 40             	r3 = [r0 + 0]			  ## bredr_link.c:3528:26
 1e1ebd8:    33 fd ff 39       	r3 = r3 & 4294967040			  ## bredr_link.c:3528:26
 1e1ebdc:    0b 40             	[r0 + 0] = r3			  ## bredr_link.c:3528:26
 1e1ebde:    03 40             	r3 = [r0 + 0]			  ## bredr_link.c:3529:26
 1e1ebe0:    92 04             	r2 = r2.b0 (s)			  ## bredr_link.c:3529:29
 1e1ebe2:    52 b6             	r2 |= r3			  ## bredr_link.c:3529:26
 1e1ebe4:    0a 40             	[r0 + 0] = r2			  ## bredr_link.c:3529:26
 1e1ebe6:    92 40             	r2 = [r0 + 36]			  ## bredr_link.c:3530:30
 1e1ebe8:    32 fd ff 29       	r2 = r2 & 4294967040			  ## bredr_link.c:3530:30
 1e1ebec:    9a 40             	[r0 + 36] = r2			  ## bredr_link.c:3530:30
 1e1ebee:    09 f4 0a 09       	[r0 + 36] |= 10			  ## bredr_link.c:3531:30
 1e1ebf2:    10 08             	r0 = r1			  ## bredr_link.c:3535:5
 1e1ebf4:    56 01             	{pc, r6-r4} = [sp++]			  ## bredr_link.c:3535:5


bredr_link_reset_power:
 1e1ebf6:    75 01             	[--sp] = {rets, r5, r4}			  ## bredr_link.c:254:0
 1e1ebf8:    c0 ff c0 28 00 00 	r0 = 10432 <btctler_bss_start : 28c0 >			  ## bredr_link.c:255:18
 1e1ebfe:    00 f9 54 00       	r0 = b[r0 + 84] (u)			  ## bredr_link.c:255:18
 1e1ec02:    2e 20             	if (r0 == 0) goto 92 <bredr_link_reset_power+0x6A : 1e1ec60 >			  ## bredr_link.c:255:18
 1e1ec04:    c0 ff 94 0f 00 00 	r0 = 3988 <inquiry_scan : f94 >			  ## bredr_link.c:263:9
 1e1ec0a:    00 40             	r0 = [r0 + 0]			  ## bredr_link.c:263:9
 1e1ec0c:    05 20             	if (r0 == 0) goto 10 <bredr_link_reset_power+0x22 : 1e1ec18 >			  ## bredr_link.c:263:9
 1e1ec0e:    00 f6 2c 01       	r0 = [r0 + 300]			  ## bredr_link.c:263:39
 1e1ec12:    02 20             	if (r0 == 0) goto 4 <bredr_link_reset_power+0x22 : 1e1ec18 >			  ## bredr_link.c:263:39
 1e1ec14:    f1 70             	r1 = 15			  ## bredr_link.c:265:9
 1e1ec16:    9b 17             	call -202 <bredr_normal_pwr_set : 1e1eb4e >			  ## bredr_link.c:265:9
 1e1ec18:    c0 ff 90 0f 00 00 	r0 = 3984 <g_page_scan : f90 >			  ## bredr_link.c:267:9
 1e1ec1e:    00 40             	r0 = [r0 + 0]			  ## bredr_link.c:267:9
 1e1ec20:    05 20             	if (r0 == 0) goto 10 <bredr_link_reset_power+0x36 : 1e1ec2c >			  ## bredr_link.c:267:9
 1e1ec22:    00 f6 98 00       	r0 = [r0 + 152]			  ## bredr_link.c:267:37
 1e1ec26:    02 20             	if (r0 == 0) goto 4 <bredr_link_reset_power+0x36 : 1e1ec2c >			  ## bredr_link.c:267:37
 1e1ec28:    f1 70             	r1 = 15			  ## bredr_link.c:269:9
 1e1ec2a:    91 17             	call -222 <bredr_normal_pwr_set : 1e1eb4e >			  ## bredr_link.c:269:9
 1e1ec2c:    c0 ff 8c 0f 00 00 	r0 = 3980 <g_page : f8c >			  ## bredr_link.c:271:9
 1e1ec32:    00 40             	r0 = [r0 + 0]			  ## bredr_link.c:271:9
 1e1ec34:    05 20             	if (r0 == 0) goto 10 <bredr_link_reset_power+0x4A : 1e1ec40 >			  ## bredr_link.c:271:9
 1e1ec36:    00 f6 a0 00       	r0 = [r0 + 160]			  ## bredr_link.c:271:27
 1e1ec3a:    02 20             	if (r0 == 0) goto 4 <bredr_link_reset_power+0x4A : 1e1ec40 >			  ## bredr_link.c:271:27
 1e1ec3c:    f1 70             	r1 = 15			  ## bredr_link.c:273:9
 1e1ec3e:    87 17             	call -242 <bredr_normal_pwr_set : 1e1eb4e >			  ## bredr_link.c:273:9
 1e1ec40:    c5 ff 8c 2d 00 00 	r5 = 11660 <bredr_link_v : 2d8c >
 1e1ec46:    04 4a             	r4 = [r5 + 0]
 1e1ec48:    54 f2 0a 00       	if (r4 == r5) goto 20 <bredr_link_reset_power+0x6A : 1e1ec60 >
 1e1ec4c:    00 f6 d0 40       	r0 = [r4 + 208]			  ## bredr_link.c:293:17
 1e1ec50:    04 20             	if (r0 == 0) goto 8 <bredr_link_reset_power+0x64 : 1e1ec5a >			  ## bredr_link.c:293:17
 1e1ec52:    01 70             	r1 = 0			  ## bredr_link.c:295:13
 1e1ec54:    f2 70             	r2 = 15			  ## bredr_link.c:295:13
 1e1ec56:    40 08             	r0 = r4			  ## bredr_link.c:295:13
 1e1ec58:    8f 17             	call -226 <bredr_pwr_set : 1e1eb78 >			  ## bredr_link.c:295:13
 1e1ec5a:    04 48             	r4 = [r4 + 0]
 1e1ec5c:    54 f2 f6 1f       	if (r4 != r5) goto -20 <bredr_link_reset_power+0x56 : 1e1ec4c >
 1e1ec60:    55 01             	{pc, r5, r4} = [sp++]			  ## bredr_link.c:298:1


lp_winsize_init:
 1e1ec62:    c0 ff a4 08 00 00 	r0 = 2212 <lp_winsize : 8a4 >			  ## bredr_link.c:3620:0
 1e1ec68:    c1 ff 8c 2d 00 00 	r1 = 11660 <bredr_link_v : 2d8c >			  ## bredr_link.c:3621:19
 1e1ec6e:    28 42             	[r1 + 8] = r0			  ## bredr_link.c:3621:19
 1e1ec70:    20 00             	rts			  ## bredr_link.c:3622:1


check_update_param_len:
 1e1ec72:    c0 ff 32 58 e1 01 	r0 = 31545394 <update_target_end+0x29AA : 1e15832 >			  ## bredr_frame.c:2956:0
 1e1ec78:    01 fb 84 03       	r1 = 900 <NVRAM_DATA_SIZE+0x40 : 384 >			  ## bredr_frame.c:2957:5
 1e1ec7c:    ff f3 25 82       	goto -64438 <printf : 1e0f0ca >			  ## bredr_frame.c:2957:5


__write_reg_packet_type:
 1e1ec80:    49 c0             	r1 = r1 << 1			  ## bredr_frame.c:83:0
 1e1ec82:    10 09             	r0 += r1			  ## bredr_frame.c:86:13
 1e1ec84:    91 50             	r1 = h[r0 + 18] (u)			  ## bredr_frame.c:86:13
 1e1ec86:    c2 ff b0 80 00 00 	r2 = 32944 <nvbss_size+0x15B0 : 80b0 >			  ## bredr_frame.c:87:11
 1e1ec8c:    51 b5             	r1 &= r2			  ## bredr_frame.c:87:11
 1e1ec8e:    11 b7             	r1 |= 16384			  ## bredr_frame.c:89:5
 1e1ec90:    99 50             	h[r0 + 18] = r1			  ## bredr_frame.c:89:5
 1e1ec92:    20 00             	rts			  ## bredr_frame.c:90:1


bredr_frame_get_empty_txbuf_index:
 1e1ec94:    77 01             	[--sp] = {rets, r7-r4}			  ## bredr_frame.c:1086:0
 1e1ec96:    14 08             	r4 = r1			  ## bredr_frame.c:1086:0
 1e1ec98:    05 08             	r5 = r0			  ## bredr_frame.c:1086:0
 1e1ec9a:    97 f3 7f 40       	call 3047678 <local_irq_disable : 106d9c >			  ## bredr_frame.c:1093:5
 1e1ec9e:    00 f9 34 52       	r0 = b[r5 + 564] (u)			  ## bredr_frame.c:1093:5
 1e1eca2:    00 c1             	r0 = r0 << 4			  ## bredr_frame.c:1093:5
 1e1eca4:    20 fb 1c 1b       	r1 = 1835008			  ## bredr_frame.c:1093:5
 1e1eca8:    02 42             	r2 = [r1 + 0]			  ## bredr_frame.c:1096:19
 1e1ecaa:    32 fd 70 29       	r2 = r2 & 4294967183			  ## bredr_frame.c:1096:19
 1e1ecae:    0a 42             	[r1 + 0] = r2			  ## bredr_frame.c:1096:19
 1e1ecb0:    02 42             	r2 = [r1 + 0]			  ## bredr_frame.c:1097:19
 1e1ecb2:    52 b0             	r2 |= r0			  ## bredr_frame.c:1097:19
 1e1ecb4:    0a 42             	[r1 + 0] = r2			  ## bredr_frame.c:1097:19
 1e1ecb6:    00 f4 08 19       	[r1 + 0] |= 8			  ## bredr_frame.c:1098:19
 1e1ecba:    72 5a             	r2 = h[r5 + 14] (u)			  ## bredr_frame.c:1100:29
 1e1ecbc:    06 f7 54 50       	r6 = h[r5 + 84] (u)			  ## bredr_frame.c:1101:29
 1e1ecc0:    07 f7 56 50       	r7 = h[r5 + 86] (u)			  ## bredr_frame.c:1102:29
 1e1ecc4:    93 5a             	r3 = h[r5 + 18] (u)			  ## bredr_frame.c:1103:29
 1e1ecc6:    a3 5a             	r3 = h[r5 + 20] (u)			  ## bredr_frame.c:1104:29
 1e1ecc8:    03 42             	r3 = [r1 + 0]			  ## bredr_frame.c:1105:16
 1e1ecca:    03 f3 ed 3f       	if ((r3 & 8) == 0) goto -38 <bredr_frame_get_empty_txbuf_index+0x14 : 1e1eca8 >			  ## bredr_frame.c:1105:5
 1e1ecce:    25 fd 01 29       	r5 = r2 & 1			  ## bredr_frame.c:1100:35
 1e1ecd2:    97 f3 61 40       	call 3047618 <local_irq_enable : 106d98 >			  ## bredr_frame.c:1107:5
 1e1ecd6:    00 70             	r0 = 0
 1e1ecd8:    01 70             	r1 = 0
 1e1ecda:    06 2a             	if (r5 == 0) goto 12 <bredr_frame_get_empty_txbuf_index+0x54 : 1e1ece8 >			  ## bredr_frame.c:1112:13
 1e1ecdc:    02 70             	r2 = 0
 1e1ecde:    00 f3 08 70       	if ((r7 & 1) == 0) goto 16 <bredr_frame_get_empty_txbuf_index+0x5E : 1e1ecf2 >
 1e1ece2:    15 fa 00 41       	b[r4+r1] = r5			  ## bredr_frame.c:1114:33
 1e1ece6:    05 18             	goto 10 <bredr_frame_get_empty_txbuf_index+0x5E : 1e1ecf2 >			  ## bredr_frame.c:1114:33
 1e1ece8:    12 70             	r2 = 1
 1e1ecea:    00 f3 02 60       	if ((r6 & 1) == 0) goto 4 <bredr_frame_get_empty_txbuf_index+0x5E : 1e1ecf2 >
 1e1ecee:    10 fa 00 41       	b[r4+r1] = r0			  ## bredr_frame.c:1120:33
 1e1ecf2:    11 80             	r1 += 1			  ## bredr_frame.c:1111:29
 1e1ecf4:    25 08             	r5 = r2
 1e1ecf6:    21 e0 f0 1f       	if (r1 != 2) goto -32 <bredr_frame_get_empty_txbuf_index+0x46 : 1e1ecda >
 1e1ecfa:    57 01             	{pc, r7-r4} = [sp++]			  ## bredr_frame.c:1126:1


link_conn_set_ptt:
 1e1ecfc:    b1 50             	r1 = h[r0 + 22] (u)			  ## bredr_link.c:3471:0
 1e1ecfe:    91 b1             	r1 |= 8			  ## bredr_frame.h:134:24
 1e1ed00:    b9 50             	h[r0 + 22] = r1			  ## bredr_frame.h:134:24
 1e1ed02:    20 00             	rts			  ## bredr_link.c:3473:1


link_conn_set_encrypt:
 1e1ed04:    93 50             	r3 = h[r0 + 18] (u)			  ## bredr_link.c:3573:0
 1e1ed06:    33 fd 60 39       	r3 = r3 & 4294967199			  ## bredr_frame.c:307:22
 1e1ed0a:    9b 50             	h[r0 + 18] = r3			  ## bredr_frame.c:307:22
 1e1ed0c:    a3 50             	r3 = h[r0 + 20] (u)			  ## bredr_frame.c:308:22
 1e1ed0e:    33 fd 60 39       	r3 = r3 & 4294967199			  ## bredr_frame.c:308:22
 1e1ed12:    ab 50             	h[r0 + 20] = r3			  ## bredr_frame.c:308:22
 1e1ed14:    93 50             	r3 = h[r0 + 18] (u)			  ## bredr_frame.c:309:22
 1e1ed16:    89 c1             	r1 = r1 << 6			  ## bredr_frame.c:309:33
 1e1ed18:    52 c1             	r2 = r2 << 5			  ## bredr_frame.c:309:49
 1e1ed1a:    51 b4             	r1 |= r2			  ## bredr_frame.c:309:39
 1e1ed1c:    e0 fd 10 23       	r2 = r3 | r1			  ## bredr_frame.c:309:22
 1e1ed20:    9a 50             	h[r0 + 18] = r2			  ## bredr_frame.c:309:22
 1e1ed22:    a2 50             	r2 = h[r0 + 20] (u)			  ## bredr_frame.c:310:22
 1e1ed24:    51 b4             	r1 |= r2			  ## bredr_frame.c:310:22
 1e1ed26:    a9 50             	h[r0 + 20] = r1			  ## bredr_frame.c:310:22
 1e1ed28:    20 00             	rts			  ## bredr_link.c:3575:1


slot_timer_disable:
 1e1ed2a:    34 00             	[--sp] = rets			  ## bredr_slot_timer.c:214:0
 1e1ed2c:    02 08             	r2 = r0			  ## bredr_slot_timer.c:214:0
 1e1ed2e:    28 fb 00 03       	r0 = rets			  ## bredr_slot_timer.c:216:5
 1e1ed32:    02 e1 02 30       	if (r2 < 16) goto 4 <slot_timer_disable+0x10 : 1e1ed3a >
 1e1ed36:    8f f3 53 23       	call 1984166 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1ed3a:    c0 ff ac 00 1c 00 	r0 = 1835180 <uECC_vli_cmp_unsafe+0xB90B0 : 1c00ac >
 1e1ed40:    01 40             	r1 = [r0 + 0]			  ## bredr_slot_timer.c:219:22
 1e1ed42:    13 70             	r3 = 1			  ## bredr_slot_timer.c:219:26
 1e1ed44:    f8 fd 20 23       	r2 = r3 << r2			  ## bredr_slot_timer.c:219:26
 1e1ed48:    e3 fd 20 11       	r1 = r1 & ~r2			  ## bredr_slot_timer.c:219:22
 1e1ed4c:    09 40             	[r0 + 0] = r1			  ## bredr_slot_timer.c:219:22
 1e1ed4e:    11 40             	r1 = [r0 + 4]			  ## bredr_slot_timer.c:220:23
 1e1ed50:    51 b4             	r1 |= r2			  ## bredr_slot_timer.c:220:23
 1e1ed52:    19 40             	[r0 + 4] = r1			  ## bredr_slot_timer.c:220:23
 1e1ed54:    30 00             	pc = [sp++]			  ## bredr_slot_timer.c:221:1


slot_timer_put:
 1e1ed56:    74 01             	[--sp] = {rets, r4}			  ## bredr_slot_timer.c:198:0
 1e1ed58:    04 08             	r4 = r0			  ## bredr_slot_timer.c:198:0
 1e1ed5a:    28 fb 00 03       	r0 = rets			  ## bredr_slot_timer.c:200:5
 1e1ed5e:    04 e1 02 30       	if (r4 < 16) goto 4 <slot_timer_put+0x10 : 1e1ed66 >
 1e1ed62:    8f f3 3d 23       	call 1984122 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1ed66:    97 f3 19 40       	call 3047474 <local_irq_disable : 106d9c >			  ## bredr_slot_timer.c:203:5
 1e1ed6a:    40 08             	r0 = r4			  ## bredr_slot_timer.c:205:5
 1e1ed6c:    de 17             	call -68 <slot_timer_disable : 1e1ed2a >			  ## bredr_slot_timer.c:205:5
 1e1ed6e:    c0 ff 8c 2d 00 00 	r0 = 11660 <bredr_link_v : 2d8c >			  ## bredr_slot_timer.c:207:23
 1e1ed74:    01 f7 a0 00       	r1 = h[r0 + 160] (u)			  ## bredr_slot_timer.c:206:24
 1e1ed78:    12 70             	r2 = 1			  ## bredr_slot_timer.c:206:28
 1e1ed7a:    02 0d             	r2 <<= r4			  ## bredr_slot_timer.c:206:28
 1e1ed7c:    e3 fd 20 11       	r1 = r1 & ~r2			  ## bredr_slot_timer.c:206:24
 1e1ed80:    11 f7 a0 00       	h[r0 + 160] = r1			  ## bredr_slot_timer.c:206:24
 1e1ed84:    e1 c0             	r1 = r4 << 3			  ## bredr_slot_timer.c:207:23
 1e1ed86:    10 09             	r0 += r1			  ## bredr_slot_timer.c:207:23
 1e1ed88:    c9 f4 00 09       	[r0 + 36] = 0			  ## bredr_slot_timer.c:207:28
 1e1ed8c:    14 01             	{rets, r4} = [sp++]			  ## bredr_slot_timer.c:209:5
 1e1ed8e:    d7 f3 03 40       	goto 3047430 <local_irq_enable : 106d98 >			  ## bredr_slot_timer.c:209:5


bredr_link_enable_afh:
 1e1ed92:    7b 01             	[--sp] = {rets, r11-r4}			  ## bredr_link.c:4424:0
 1e1ed94:    fa 0b             	sp += -12			  ## bredr_link.c:4424:0
 1e1ed96:    04 08             	r4 = r0			  ## bredr_link.c:4424:0
 1e1ed98:    97 f3 00 40       	call 3047424 <local_irq_disable : 106d9c >			  ## bredr_link.c:4427:5
 1e1ed9c:    90 68             	r0 = b[r4 + 9] (u)			  ## bredr_link.c:4428:13
 1e1ed9e:    00 ff ff 00 03 00 	if (r0 == 255) goto 6 <bredr_link_enable_afh+0x18 : 1e1edaa >			  ## bredr_link.c:4428:13
 1e1eda4:    d8 17             	call -80 <slot_timer_put : 1e1ed56 >			  ## bredr_link.c:4429:9
 1e1eda6:    f0 7f             	r0 = 255			  ## bredr_link.c:4430:23
 1e1eda8:    98 68             	b[r4 + 9] = r0			  ## bredr_link.c:4430:23
 1e1edaa:    97 f3 f5 3f       	call 3047402 <local_irq_enable : 106d98 >			  ## bredr_link.c:4432:5
 1e1edae:    00 70             	r0 = 0			  ## bredr_link.c:4432:5
 1e1edb0:    10 f9 2a 40       	b[r4 + 42] = r0			  ## bredr_link.c:4434:28
 1e1edb4:    08 f6 d0 40       	r8 = [r4 + 208]			  ## bredr_link.c:4435:22
 1e1edb8:    90 f5 08 00       	h[sp+8] = r0			  ## bredr_frame.c:2461:5
 1e1edbc:    18 02             	[sp+4] = r0			  ## bredr_frame.c:2461:5
 1e1edbe:    08 02             	[sp] = r0			  ## bredr_frame.c:2461:5
 1e1edc0:    49 fc 20 00       	r9 = r4 + 32			  ## bredr_link.c:4435:36
 1e1edc4:    2a 70             	r10 = 2
 1e1edc6:    1b 70             	r11 = 1
 1e1edc8:    03 fa 00 90       	r3 = b[r9+r0] (u)			  ## bredr_frame.c:2465:16
 1e1edcc:    41 d8             	r1 = r0 >>> 1			  ## bredr_frame.c:2466:18
 1e1edce:    02 a0             	r2 = sp + 0
 1e1edd0:    44 b4             	r4 = r2 + r1
 1e1edd2:    52 98             	r2 = r4 + 5
 1e1edd4:    05 70             	r5 = 0
 1e1edd6:    f0 fe a0 65       	r6 = r5 % r10 (s)			  ## bredr_frame.c:2469:53
 1e1edda:    69 d8             	r1 = r5 >>> 1			  ## bredr_frame.c:2469:42
 1e1eddc:    61 09             	r1 += r6			  ## bredr_frame.c:2469:48
 1e1edde:    f8 fd 50 7b       	r7 = r11 << r5			  ## bredr_frame.c:2469:27
 1e1ede2:    57 b7             	r7 &= r3			  ## bredr_frame.c:2469:25
 1e1ede4:    fa fd 10 17       	r1 = r7 >> r1			  ## bredr_frame.c:2469:35
 1e1ede8:    0f c1             	r7 = r1 << 4			  ## bredr_frame.c:2471:29
 1e1edea:    00 f3 01 00       	if ((r0 & 1) == 0) goto 2 <bredr_link_enable_afh+0x5E : 1e1edf0 >
 1e1edee:    71 08             	r1 = r7			  ## bredr_frame.c:2470:17
 1e1edf0:    27 08             	r7 = r2			  ## bredr_frame.c:2473:17
 1e1edf2:    01 3c             	if (r6 != 0) goto 2 <bredr_link_enable_afh+0x64 : 1e1edf6 >			  ## bredr_frame.c:2473:17
 1e1edf4:    47 08             	r7 = r4			  ## bredr_frame.c:2473:17
 1e1edf6:    06 6e             	r6 = b[r7 + 0] (u)
 1e1edf8:    51 bc             	r1 |= r6
 1e1edfa:    15 80             	r5 += 1			  ## bredr_frame.c:2468:29
 1e1edfc:    09 6e             	b[r7 + 0] = r1
 1e1edfe:    85 e0 ea 1f       	if (r5 != 8) goto -44 <bredr_link_enable_afh+0x44 : 1e1edd6 >
 1e1ee02:    10 80             	r0 += 1			  ## bredr_frame.c:2464:26
 1e1ee04:    a0 e0 e0 1f       	if (r0 != 10) goto -64 <bredr_link_enable_afh+0x36 : 1e1edc8 >
 1e1ee08:    84 fc 4c 01       	r4 = r8 + 332			  ## bredr_frame.c:2526:30
 1e1ee0c:    01 70             	r1 = 0			  ## bredr_frame.c:2481:5
 1e1ee0e:    02 75             	r2 = 80			  ## bredr_frame.c:2481:5
 1e1ee10:    07 70             	r7 = 0			  ## bredr_frame.c:2481:5
 1e1ee12:    40 08             	r0 = r4			  ## bredr_frame.c:2481:5
 1e1ee14:    97 f3 6c 40       	call 3047640 <memset : 106ef0 >			  ## bredr_frame.c:2481:5
 1e1ee18:    10 70             	r0 = 1
 1e1ee1a:    01 70             	r1 = 0
 1e1ee1c:    72 08             	r2 = r7
 1e1ee1e:    03 70             	r3 = 0
 1e1ee20:    05 a0             	r5 = sp + 0
 1e1ee22:    05 fa 00 51       	r5 = b[r5+r1] (u)			  ## bredr_frame.c:2488:17
 1e1ee26:    f8 fd 30 60       	r6 = r0 << r3			  ## bredr_frame.c:2488:24
 1e1ee2a:    65 f0 02 00       	if ((r5 & r6) == 0) goto 4 <bredr_link_enable_afh+0xA0 : 1e1ee32 >			  ## bredr_frame.c:2488:24
 1e1ee2e:    92 f9 01 40       	b[r4 ++= 1] = r2			  ## bredr_frame.c:2489:30
 1e1ee32:    13 80             	r3 += 1			  ## bredr_frame.c:2487:29
 1e1ee34:    22 80             	r2 += 2			  ## bredr_frame.c:2491:23
 1e1ee36:    83 e0 f3 1f       	if (r3 != 8) goto -26 <bredr_link_enable_afh+0x8E : 1e1ee20 >			  ## bredr_frame.c:2491:23
 1e1ee3a:    02 9f             	r2 = r7 + 16			  ## bredr_frame.c:2487:9
 1e1ee3c:    17 70             	r7 = 1			  ## bredr_frame.c:2487:9
 1e1ee3e:    41 e0 01 00       	if (r1 == 4) goto 2 <bredr_link_enable_afh+0xB2 : 1e1ee44 >
 1e1ee42:    27 08             	r7 = r2			  ## bredr_frame.c:2493:13
 1e1ee44:    11 80             	r1 += 1			  ## bredr_frame.c:2486:35
 1e1ee46:    a1 e0 e9 1f       	if (r1 != 10) goto -46 <bredr_link_enable_afh+0x8A : 1e1ee1c >
 1e1ee4a:    00 70             	r0 = 0
 1e1ee4c:    01 70             	r1 = 0
 1e1ee4e:    02 fa 00 91       	r2 = b[r9+r1] (u)
 1e1ee52:    03 70             	r3 = 0
 1e1ee54:    14 70             	r4 = 1
 1e1ee56:    f8 fd 30 54       	r5 = r4 << r3			  ## bredr_frame.c:2531:34
 1e1ee5a:    52 f1 01 00       	if ((r2 & r5) != 0) goto 2 <bredr_link_enable_afh+0xCE : 1e1ee60 >			  ## bredr_frame.c:2531:34
 1e1ee5e:    04 70             	r4 = 0			  ## bredr_frame.c:2531:17
 1e1ee60:    13 80             	r3 += 1			  ## bredr_frame.c:2530:29
 1e1ee62:    40 09             	r0 += r4			  ## bredr_frame.c:2531:17
 1e1ee64:    83 e0 f6 1f       	if (r3 != 8) goto -20 <bredr_link_enable_afh+0xC2 : 1e1ee54 >
 1e1ee68:    11 80             	r1 += 1			  ## bredr_frame.c:2529:35
 1e1ee6a:    a1 e0 f0 1f       	if (r1 != 10) goto -32 <bredr_link_enable_afh+0xBC : 1e1ee4e >
 1e1ee6e:    90 b3             	r0 |= 128
 1e1ee70:    10 f7 34 80       	h[r8 + 52] = r0			  ## bredr_frame.c:2538:23
 1e1ee74:    c0 f5 01 00       	r0 = b[sp+1] (u)			  ## bredr_frame.c:2539:35
 1e1ee78:    c1 f5 00 00       	r1 = b[sp] (u)			  ## bredr_frame.c:2539:25
 1e1ee7c:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## bredr_frame.c:2539:32
 1e1ee80:    11 f7 36 80       	h[r8 + 54] = r1			  ## bredr_frame.c:2539:23
 1e1ee84:    c0 f5 03 00       	r0 = b[sp+3] (u)			  ## bredr_frame.c:2540:35
 1e1ee88:    c1 f5 02 00       	r1 = b[sp+2] (u)			  ## bredr_frame.c:2540:25
 1e1ee8c:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## bredr_frame.c:2540:32
 1e1ee90:    11 f7 38 80       	h[r8 + 56] = r1			  ## bredr_frame.c:2540:23
 1e1ee94:    c0 f5 05 00       	r0 = b[sp+5] (u)			  ## bredr_frame.c:2541:35
 1e1ee98:    c1 f5 04 00       	r1 = b[sp+4] (u)			  ## bredr_frame.c:2541:25
 1e1ee9c:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## bredr_frame.c:2541:32
 1e1eea0:    11 f7 3a 80       	h[r8 + 58] = r1			  ## bredr_frame.c:2541:23
 1e1eea4:    c0 f5 07 00       	r0 = b[sp+7] (u)			  ## bredr_frame.c:2542:35
 1e1eea8:    c1 f5 06 00       	r1 = b[sp+6] (u)			  ## bredr_frame.c:2542:25
 1e1eeac:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## bredr_frame.c:2542:32
 1e1eeb0:    11 f7 3c 80       	h[r8 + 60] = r1			  ## bredr_frame.c:2542:23
 1e1eeb4:    c0 f5 09 00       	r0 = b[sp+9] (u)			  ## bredr_frame.c:2543:35
 1e1eeb8:    c1 f5 08 00       	r1 = b[sp+8] (u)			  ## bredr_frame.c:2543:25
 1e1eebc:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## bredr_frame.c:2543:32
 1e1eec0:    11 f7 3e 80       	h[r8 + 62] = r1			  ## bredr_frame.c:2543:23
 1e1eec4:    06 0a             	sp += 12			  ## bredr_frame.c:2543:23
 1e1eec6:    5b 01             	{pc, r11-r4} = [sp++]			  ## bredr_link.c:4452:1


READ_SLOT_CLK:
 1e1eec8:    c1 ff b4 00 1c 00 	r1 = 1835188 <uECC_vli_cmp_unsafe+0xB90B8 : 1c00b4 >			  ## bredr_frame.c:127:0
 1e1eece:    00 42             	r0 = [r1 + 0]			  ## bredr_frame.c:131:25
 1e1eed0:    12 42             	r2 = [r1 + 4]			  ## bredr_frame.c:132:25
 1e1eed2:    03 42             	r3 = [r1 + 0]			  ## bredr_frame.c:134:31
 1e1eed4:    30 f2 fb 1f       	if (r0 != r3) goto -10 <READ_SLOT_CLK+0x6 : 1e1eece >			  ## bredr_frame.c:134:5
 1e1eed8:    11 c4             	r1 = r2 << 16			  ## bredr_frame.c:135:44
 1e1eeda:    50 b2             	r0 |= r1			  ## bredr_frame.c:135:27
 1e1eedc:    40 d0             	r0 = r0 >> 1			  ## bredr_frame.c:135:52
 1e1eede:    20 00             	rts			  ## bredr_frame.c:135:5


bredr_get_link_slot_clk:
 1e1eee0:    76 01             	[--sp] = {rets, r6-r4}			  ## bredr_link.c:4392:0
 1e1eee2:    24 08             	r4 = r2			  ## bredr_link.c:4392:0
 1e1eee4:    15 08             	r5 = r1			  ## bredr_link.c:4392:0
 1e1eee6:    06 08             	r6 = r0			  ## bredr_link.c:4392:0
 1e1eee8:    ef 17             	call -34 <READ_SLOT_CLK : 1e1eec8 >			  ## bredr_link.c:4396:17
 1e1eeea:    01 f6 d0 60       	r1 = [r6 + 208]			  ## bredr_link.c:4397:61
 1e1eeee:    01 f6 3c 12       	r1 = [r1 + 572]			  ## bredr_frame.c:190:19
 1e1eef2:    49 d8             	r1 = r1 >>> 1			  ## bredr_link.c:4397:68
 1e1eef4:    02 b2             	r2 = r1 + r0			  ## bredr_link.c:4397:33
 1e1eef6:    f2 ef 09 d0       	ifs (r2 <= -1) goto 18 <bredr_get_link_slot_clk+0x2C : 1e1ef0c >
 1e1eefa:    41 fb f8 2c       	r1 = r2 + 4160749568			  ## bredr_link.c:4402:33
 1e1eefe:    c3 ff ff ff ff 07 	r3 = 134217727 <bank_code_load_addr+0x1DCA07 : 1ffffff >			  ## bredr_link.c:4401:27
 1e1ef04:    32 f2 04 c0       	ifs (r2 > r3) goto 8 <bredr_get_link_slot_clk+0x30 : 1e1ef10 >			  ## bredr_link.c:4401:27
 1e1ef08:    21 08             	r1 = r2			  ## bredr_link.c:4401:16
 1e1ef0a:    02 18             	goto 4 <bredr_get_link_slot_clk+0x30 : 1e1ef10 >
 1e1ef0c:    41 fb 08 2c       	r1 = r2 + 134217728			  ## bredr_link.c:4400:32
 1e1ef10:    01 2a             	if (r5 == 0) goto 2 <bredr_get_link_slot_clk+0x34 : 1e1ef14 >
 1e1ef12:    09 4a             	[r5 + 0] = r1			  ## bredr_link.c:4408:15
 1e1ef14:    01 28             	if (r4 == 0) goto 2 <bredr_get_link_slot_clk+0x38 : 1e1ef18 >
 1e1ef16:    08 48             	[r4 + 0] = r0			  ## bredr_link.c:4412:15
 1e1ef18:    56 01             	{pc, r6-r4} = [sp++]			  ## bredr_link.c:4414:1


slot_timer_get:
 1e1ef1a:    75 01             	[--sp] = {rets, r5, r4}			  ## bredr_slot_timer.c:128:0
 1e1ef1c:    97 f3 3e 3f       	call 3047036 <local_irq_disable : 106d9c >			  ## bredr_slot_timer.c:129:5
 1e1ef20:    c0 ff 8c 2d 00 00 	r0 = 11660 <bredr_link_v : 2d8c >			  ## bredr_slot_timer.c:129:5
 1e1ef26:    01 f7 a0 00       	r1 = h[r0 + 160] (u)
 1e1ef2a:    04 70             	r4 = 0
 1e1ef2c:    12 70             	r2 = 1
 1e1ef2e:    03 70             	r3 = 0
 1e1ef30:    f8 fd 30 52       	r5 = r2 << r3			  ## bredr_slot_timer.c:132:36
 1e1ef34:    51 f0 0a 00       	if ((r1 & r5) == 0) goto 20 <slot_timer_get+0x32 : 1e1ef4c >			  ## bredr_slot_timer.c:132:13
 1e1ef38:    13 80             	r3 += 1			  ## bredr_slot_timer.c:131:30
 1e1ef3a:    14 80             	r4 += 1			  ## bredr_slot_timer.c:131:23
 1e1ef3c:    03 e1 f8 bf       	ifs (r3 < 16) goto -16 <slot_timer_get+0x16 : 1e1ef30 >			  ## bredr_slot_timer.c:131:23
 1e1ef40:    97 f3 2a 3f       	call 3046996 <local_irq_enable : 106d98 >			  ## bredr_slot_timer.c:139:5
 1e1ef44:    8f f3 4c 22       	call 1983640 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1ef48:    f4 7f             	r4 = 255			  ## cpu.h:148:5
 1e1ef4a:    05 18             	goto 10 <slot_timer_get+0x3C : 1e1ef56 >			  ## cpu.h:148:5
 1e1ef4c:    51 ba             	r1 |= r5			  ## bredr_slot_timer.c:133:32
 1e1ef4e:    11 f7 a0 00       	h[r0 + 160] = r1			  ## bredr_slot_timer.c:133:32
 1e1ef52:    97 f3 21 3f       	call 3046978 <local_irq_enable : 106d98 >			  ## bredr_slot_timer.c:134:13
 1e1ef56:    00 05             	r0 = r4.b0 (u)			  ## bredr_slot_timer.c:148:1
 1e1ef58:    55 01             	{pc, r5, r4} = [sp++]			  ## bredr_slot_timer.c:148:1


slot_timer_set_finecnt:
 1e1ef5a:    76 01             	[--sp] = {rets, r6-r4}			  ## bredr_slot_timer.c:161:0
 1e1ef5c:    14 08             	r4 = r1			  ## bredr_slot_timer.c:161:0
 1e1ef5e:    05 08             	r5 = r0			  ## bredr_slot_timer.c:161:0
 1e1ef60:    05 e1 02 30       	if (r5 < 16) goto 4 <slot_timer_set_finecnt+0xE : 1e1ef68 >			  ## bredr_slot_timer.c:161:0
 1e1ef64:    8f f3 3c 22       	call 1983608 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1ef68:    40 02             	r0 = [sp+16]
 1e1ef6a:    e9 c0             	r1 = r5 << 3			  ## bredr_slot_timer.c:163:23
 1e1ef6c:    c6 ff 8c 2d 00 00 	r6 = 11660 <bredr_link_v : 2d8c >			  ## bredr_slot_timer.c:164:23
 1e1ef72:    16 09             	r6 += r1			  ## bredr_slot_timer.c:163:23
 1e1ef74:    8a 4c             	[r6 + 32] = r2			  ## bredr_slot_timer.c:163:28
 1e1ef76:    41 fb f8 3c       	r1 = r3 + 4160749568			  ## bredr_slot_timer.c:64:14
 1e1ef7a:    c2 ff ff ff ff 07 	r2 = 134217727 <bank_code_load_addr+0x1DCA07 : 1ffffff >			  ## bredr_slot_timer.c:63:14
 1e1ef80:    9c 4c             	[r6 + 36] = r4			  ## bredr_slot_timer.c:164:28
 1e1ef82:    23 f2 01 c0       	ifs (r3 > r2) goto 2 <slot_timer_set_finecnt+0x2E : 1e1ef88 >			  ## bredr_slot_timer.c:164:28
 1e1ef86:    31 08             	r1 = r3			  ## bredr_slot_timer.c:63:9
 1e1ef88:    22 70             	r2 = 2
 1e1ef8a:    e0 fe 20 11       	r1 = r1 / r2 (s)			  ## bredr_slot_timer.c:66:34
 1e1ef8e:    c2 ff 68 00 1c 00 	r2 = 1835112 <uECC_vli_cmp_unsafe+0xB906C : 1c0068 >			  ## bredr_slot_timer.c:66:5
 1e1ef94:    b1 f6 00 25       	[r2+r5<<2] = r1			  ## bredr_slot_timer.c:66:27
 1e1ef98:    20 04             	r0 = r0.l (u)			  ## bredr_slot_timer.c:67:29
 1e1ef9a:    21 fc c0 ff       	r1 = r2 + -64			  ## bredr_slot_timer.c:67:5
 1e1ef9e:    b0 f6 00 15       	[r1+r5<<2] = r0			  ## bredr_slot_timer.c:67:27
 1e1efa2:    10 fc 84 00       	r0 = r1 + 132			  ## bredr_slot_timer.c:67:27
 1e1efa6:    11 40             	r1 = [r0 + 4]			  ## bredr_slot_timer.c:69:23
 1e1efa8:    12 70             	r2 = 1			  ## bredr_slot_timer.c:69:26
 1e1efaa:    42 0d             	r2 <<= r5			  ## bredr_slot_timer.c:69:26
 1e1efac:    51 b4             	r1 |= r2			  ## bredr_slot_timer.c:69:23
 1e1efae:    19 40             	[r0 + 4] = r1			  ## bredr_slot_timer.c:69:23
 1e1efb0:    01 40             	r1 = [r0 + 0]			  ## bredr_slot_timer.c:70:22
 1e1efb2:    51 b4             	r1 |= r2			  ## bredr_slot_timer.c:70:22
 1e1efb4:    09 40             	[r0 + 0] = r1			  ## bredr_slot_timer.c:70:22
 1e1efb6:    56 01             	{pc, r6-r4} = [sp++]			  ## bredr_slot_timer.c:166:1


slot_timer_set_ext:
 1e1efb8:    76 01             	[--sp] = {rets, r6-r4}			  ## bredr_slot_timer.c:169:0
 1e1efba:    fe 0b             	sp += -4			  ## bredr_slot_timer.c:169:0
 1e1efbc:    c4 ff bc 00 1c 00 	r4 = 1835196 <uECC_vli_cmp_unsafe+0xB90C0 : 1c00bc >			  ## bredr_slot_timer.c:170:19
 1e1efc2:    05 48             	r5 = [r4 + 0]			  ## bredr_slot_timer.c:170:19
 1e1efc4:    54 02             	r4 = [sp+20]
 1e1efc6:    00 f3 06 30       	if ((r3 & 1) == 0) goto 12 <slot_timer_set_ext+0x1E : 1e1efd6 >
 1e1efca:    55 fc 71 02       	r5 = r5 + 625			  ## bredr_slot_timer.c:172:28
 1e1efce:    06 fb e2 04       	r6 = 1250 <BTCTLER_CONTROLLER_DATA_SIZE+0x24 : 4e2 >			  ## bredr_slot_timer.c:172:35
 1e1efd2:    f0 fe 60 55       	r5 = r5 % r6 (s)			  ## bredr_slot_timer.c:172:35
 1e1efd6:    06 fb ff 07       	r6 = 2047 <DRIVER_CODE_TOTAL+0x79 : 7ff >			  ## bredr_slot_timer.c:174:5
 1e1efda:    55 bd             	r5 &= r6			  ## bredr_slot_timer.c:174:5
 1e1efdc:    43 09             	r3 += r4			  ## bredr_slot_timer.c:174:55
 1e1efde:    0d 02             	[sp] = r5			  ## bredr_slot_timer.c:174:5
 1e1efe0:    bc 17             	call -136 <slot_timer_set_finecnt : 1e1ef5a >			  ## bredr_slot_timer.c:174:5
 1e1efe2:    02 0a             	sp += 4
 1e1efe4:    56 01             	{pc, r6-r4} = [sp++]			  ## bredr_slot_timer.c:175:1


slot_timer_set:
 1e1efe6:    77 01             	[--sp] = {rets, r7-r4}			  ## bredr_slot_timer.c:178:0
 1e1efe8:    fe 0b             	sp += -4			  ## bredr_slot_timer.c:178:0
 1e1efea:    34 08             	r4 = r3			  ## bredr_slot_timer.c:178:0
 1e1efec:    25 08             	r5 = r2			  ## bredr_slot_timer.c:178:0
 1e1efee:    16 08             	r6 = r1			  ## bredr_slot_timer.c:178:0
 1e1eff0:    07 08             	r7 = r0			  ## bredr_slot_timer.c:178:0
 1e1eff2:    28 fb 00 03       	r0 = rets			  ## bredr_slot_timer.c:180:5
 1e1eff6:    07 e1 02 30       	if (r7 < 16) goto 4 <slot_timer_set+0x18 : 1e1effe >
 1e1effa:    8f f3 f1 21       	call 1983458 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e1effe:    64 17             	call -312 <READ_SLOT_CLK : 1e1eec8 >			  ## bredr_slot_timer.c:183:48
 1e1f000:    08 02             	[sp] = r0			  ## bredr_slot_timer.c:183:5
 1e1f002:    70 08             	r0 = r7			  ## bredr_slot_timer.c:183:5
 1e1f004:    61 08             	r1 = r6			  ## bredr_slot_timer.c:183:5
 1e1f006:    52 08             	r2 = r5			  ## bredr_slot_timer.c:183:5
 1e1f008:    43 08             	r3 = r4			  ## bredr_slot_timer.c:183:5
 1e1f00a:    d6 17             	call -84 <slot_timer_set_ext : 1e1efb8 >			  ## bredr_slot_timer.c:183:5
 1e1f00c:    02 0a             	sp += 4			  ## bredr_slot_timer.c:183:5
 1e1f00e:    57 01             	{pc, r7-r4} = [sp++]			  ## bredr_slot_timer.c:184:1


bredr_link_set_afh:
 1e1f010:    77 01             	[--sp] = {rets, r7-r4}			  ## bredr_link.c:4503:0
 1e1f012:    fe 0b             	sp += -4			  ## bredr_link.c:4503:0
 1e1f014:    36 08             	r6 = r3			  ## bredr_link.c:4503:0
 1e1f016:    15 08             	r5 = r1			  ## bredr_link.c:4503:0
 1e1f018:    04 08             	r4 = r0			  ## bredr_link.c:4503:0
 1e1f01a:    34 24             	if (r2 == 0) goto 104 <bredr_link_set_afh+0x74 : 1e1f084 >			  ## bredr_link.c:4503:0
 1e1f01c:    47 fc 28 00       	r7 = r4 + 40			  ## bredr_link.c:4503:0
 1e1f020:    20 6e             	r0 = b[r7 + 2] (u)			  ## bredr_link.c:4513:13
 1e1f022:    05 20             	if (r0 == 0) goto 10 <bredr_link_set_afh+0x1E : 1e1f02e >			  ## bredr_link.c:4513:13
 1e1f024:    d0 4f             	r0 = [r7 + 116]			  ## bredr_link.c:4515:17
 1e1f026:    50 f2 4d 00       	if (r0 == r5) goto 154 <bredr_link_set_afh+0xB4 : 1e1f0c4 >			  ## bredr_link.c:4515:17
 1e1f02a:    40 08             	r0 = r4			  ## bredr_link.c:4518:9
 1e1f02c:    b2 16             	call -668 <bredr_link_enable_afh : 1e1ed92 >			  ## bredr_link.c:4518:9
 1e1f02e:    10 70             	r0 = 1			  ## bredr_link.c:4521:28
 1e1f030:    28 6e             	b[r7 + 2] = r0			  ## bredr_link.c:4521:28
 1e1f032:    40 fc 20 00       	r0 = r4 + 32			  ## bredr_link.c:4523:5
 1e1f036:    a2 70             	r2 = 10			  ## bredr_link.c:4523:5
 1e1f038:    61 08             	r1 = r6			  ## bredr_link.c:4523:5
 1e1f03a:    97 f3 53 3f       	call 3047078 <memcpy : 106ee4 >			  ## bredr_link.c:4523:5
 1e1f03e:    40 08             	r0 = r4			  ## bredr_link.c:4525:17
 1e1f040:    bf f3 cb fb       	call -2154 <lmp_sniff_and_afh_offset_ali : 1e1e7da >			  ## bredr_link.c:4525:17
 1e1f044:    06 08             	r6 = r0			  ## bredr_link.c:4525:17
 1e1f046:    01 a0             	r1 = sp + 0
 1e1f048:    02 70             	r2 = 0			  ## bredr_link.c:4419:5
 1e1f04a:    40 08             	r0 = r4			  ## bredr_link.c:4419:5
 1e1f04c:    49 17             	call -366 <bredr_get_link_slot_clk : 1e1eee0 >			  ## bredr_link.c:4419:5
 1e1f04e:    40 bd             	r0 = r6 + r5			  ## bredr_link.c:4525:14
 1e1f050:    01 02             	r1 = [sp]			  ## bredr_link.c:4420:12
 1e1f052:    c2 ff fe ff ff 07 	r2 = 134217726 <bank_code_load_addr+0x1DCA06 : 1fffffe >			  ## bredr_link.c:4532:26
 1e1f058:    02 09             	r2 += r0			  ## bredr_link.c:4532:26
 1e1f05a:    30 fd f8 2c       	r0 = r2 & 134217727			  ## bredr_link.c:4532:31
 1e1f05e:    10 f2 16 20       	if (r0 >= r1) goto 44 <bredr_link_set_afh+0x7E : 1e1f08e >
 1e1f062:    20 b2             	r0 = r1 - r0			  ## bredr_link.c:4537:30
 1e1f064:    c3 ff fe ff ff 0f 	r3 = 268435454 <bank_code_load_addr+0x1DCA06 : 1fffffe >			  ## bredr_link.c:4537:42
 1e1f06a:    e2 fd 30 50       	r5 = r0 & r3			  ## bredr_link.c:4537:42
 1e1f06e:    c6 ff 01 b0 1e 04 	r6 = 69120001 <uECC_vli_cmp_unsafe+0xE4005 : 1eb001 >			  ## bredr_link.c:4538:13
 1e1f074:    20 70             	r0 = 2			  ## bredr_link.c:4538:13
 1e1f076:    65 f2 0f 30       	if (r5 < r6) goto 30 <bredr_link_set_afh+0x88 : 1e1f098 >			  ## bredr_link.c:4538:13
 1e1f07a:    00 fd 08 2c       	r0 = r2 | 134217728			  ## bredr_link.c:4539:33
 1e1f07e:    60 b0             	r0 = r0 - r1			  ## bredr_link.c:4539:46
 1e1f080:    50 b7             	r0 &= r3			  ## bredr_link.c:4539:58
 1e1f082:    0a 18             	goto 20 <bredr_link_set_afh+0x88 : 1e1f098 >
 1e1f084:    00 f6 d0 40       	r0 = [r4 + 208]			  ## bredr_link.c:4506:57
 1e1f088:    01 70             	r1 = 0			  ## bredr_frame.c:2501:19
 1e1f08a:    a9 51             	h[r0 + 52] = r1			  ## bredr_frame.c:2501:19
 1e1f08c:    1b 18             	goto 54 <bredr_link_set_afh+0xB4 : 1e1f0c4 >			  ## bredr_frame.c:2501:19
 1e1f08e:    60 b0             	r0 = r0 - r1			  ## bredr_link.c:4535:28
 1e1f090:    c1 ff fe ff ff 0f 	r1 = 268435454 <bank_code_load_addr+0x1DCA06 : 1fffffe >			  ## bredr_link.c:4535:42
 1e1f096:    50 b3             	r0 &= r1			  ## bredr_link.c:4535:42
 1e1f098:    25 70             	r5 = 2			  ## bredr_link.c:4544:9
 1e1f09a:    20 e0 01 80       	if (r0 > 2) goto 2 <bredr_link_set_afh+0x90 : 1e1f0a0 >			  ## bredr_link.c:4544:9
 1e1f09e:    20 70             	r0 = 2			  ## bredr_link.c:4544:9
 1e1f0a0:    c1 ff 00 b0 1e 04 	r1 = 69120000 <uECC_vli_cmp_unsafe+0xE4004 : 1eb000 >			  ## bredr_link.c:4548:16
 1e1f0a6:    10 f2 01 80       	if (r0 > r1) goto 2 <bredr_link_set_afh+0x9C : 1e1f0ac >
 1e1f0aa:    05 08             	r5 = r0			  ## bredr_link.c:4548:9
 1e1f0ac:    90 68             	r0 = b[r4 + 9] (u)			  ## bredr_link.c:4551:13
 1e1f0ae:    01 ff ff 00 02 00 	if (r0 != 255) goto 4 <bredr_link_set_afh+0xA8 : 1e1f0b8 >			  ## bredr_link.c:4551:13
 1e1f0b4:    32 17             	call -412 <slot_timer_get : 1e1ef1a >			  ## bredr_link.c:4552:25
 1e1f0b6:    98 68             	b[r4 + 9] = r0			  ## bredr_link.c:4552:23
 1e1f0b8:    c1 ff 92 ed e1 01 	r1 = 31583634 <bredr_link_enable_afh : 1e1ed92 >			  ## bredr_link.c:4554:5
 1e1f0be:    42 08             	r2 = r4			  ## bredr_link.c:4554:5
 1e1f0c0:    53 08             	r3 = r5			  ## bredr_link.c:4554:5
 1e1f0c2:    91 17             	call -222 <slot_timer_set : 1e1efe6 >			  ## bredr_link.c:4554:5
 1e1f0c4:    02 0a             	sp += 4
 1e1f0c6:    57 01             	{pc, r7-r4} = [sp++]			  ## bredr_link.c:4565:1


__write_reg_txinfo:
 1e1f0c8:    75 01             	[--sp] = {rets, r5, r4}			  ## bredr_frame.c:112:0
 1e1f0ca:    44 02             	r4 = [sp+16]			  ## bredr_frame.c:112:0
 1e1f0cc:    35 02             	r5 = [sp+12]			  ## bredr_frame.c:112:0
 1e1f0ce:    0e 22             	if (r1 == 0) goto 28 <__write_reg_txinfo+0x24 : 1e1f0ec >			  ## bredr_frame.c:112:0
 1e1f0d0:    2a 51             	h[r0 + 36] = r2			  ## bredr_frame.c:119:25
 1e1f0d2:    11 d4             	r1 = r2 >> 16			  ## bredr_frame.c:120:37
 1e1f0d4:    39 51             	h[r0 + 38] = r1			  ## bredr_frame.c:120:25
 1e1f0d6:    d9 c0             	r1 = r3 << 3			  ## bredr_frame.c:121:32
 1e1f0d8:    51 ba             	r1 |= r5			  ## bredr_frame.c:121:38
 1e1f0da:    11 b1             	r1 |= 4			  ## bredr_frame.c:121:27
 1e1f0dc:    f9 50             	h[r0 + 30] = r1			  ## bredr_frame.c:121:25
 1e1f0de:    a1 50             	r1 = h[r0 + 20] (u)			  ## bredr_frame.c:122:47
 1e1f0e0:    31 fd 1f 19       	r1 = r1 & 4294967264			  ## bredr_frame.c:122:57
 1e1f0e4:    51 b8             	r1 |= r4			  ## bredr_frame.c:122:37
 1e1f0e6:    11 b2             	r1 |= 16			  ## bredr_frame.c:122:68
 1e1f0e8:    a9 50             	h[r0 + 20] = r1			  ## bredr_frame.c:122:26
 1e1f0ea:    55 01             	{pc, r5, r4} = [sp++]			  ## bredr_frame.c:124:1
 1e1f0ec:    0a 51             	h[r0 + 32] = r2			  ## bredr_frame.c:114:25
 1e1f0ee:    11 d4             	r1 = r2 >> 16			  ## bredr_frame.c:115:37
 1e1f0f0:    19 51             	h[r0 + 34] = r1			  ## bredr_frame.c:115:25
 1e1f0f2:    d9 c0             	r1 = r3 << 3			  ## bredr_frame.c:116:32
 1e1f0f4:    51 ba             	r1 |= r5			  ## bredr_frame.c:116:38
 1e1f0f6:    11 b1             	r1 |= 4			  ## bredr_frame.c:116:27
 1e1f0f8:    e9 50             	h[r0 + 28] = r1			  ## bredr_frame.c:116:25
 1e1f0fa:    91 50             	r1 = h[r0 + 18] (u)			  ## bredr_frame.c:117:36
 1e1f0fc:    31 fd 0f 19       	r1 = r1 & 4294967280			  ## bredr_frame.c:117:46
 1e1f100:    51 b8             	r1 |= r4			  ## bredr_frame.c:117:57
 1e1f102:    99 50             	h[r0 + 18] = r1			  ## bredr_frame.c:117:26
 1e1f104:    55 01             	{pc, r5, r4} = [sp++]			  ## bredr_frame.c:124:1


__clean_reg_txempty:
 1e1f106:    40 85             	r0 += 84			  ## bredr_frame.c:345:0
 1e1f108:    04 22             	if (r1 == 0) goto 8 <__clean_reg_txempty+0xC : 1e1f112 >			  ## bredr_frame.c:345:0
 1e1f10a:    11 50             	r1 = h[r0 + 2] (u)			  ## bredr_frame.c:349:27
 1e1f10c:    71 b0             	r1 &= 4294967294			  ## bredr_frame.c:349:27
 1e1f10e:    19 50             	h[r0 + 2] = r1			  ## bredr_frame.c:349:27
 1e1f110:    20 00             	rts			  ## bredr_frame.c:351:1
 1e1f112:    01 50             	r1 = h[r0 + 0] (u)			  ## bredr_frame.c:347:27
 1e1f114:    71 b0             	r1 &= 4294967294			  ## bredr_frame.c:347:27
 1e1f116:    09 50             	h[r0 + 0] = r1			  ## bredr_frame.c:347:27
 1e1f118:    20 00             	rts			  ## bredr_frame.c:351:1


link_conn_tx_bulk_avaiable:
 1e1f11a:    7a 01             	[--sp] = {rets, r10-r4}			  ## bredr_link.c:2566:0
 1e1f11c:    15 08             	r5 = r1			  ## bredr_link.c:2566:0
 1e1f11e:    04 08             	r4 = r0			  ## bredr_link.c:2566:0
 1e1f120:    97 f3 3c 3e       	call 3046520 <local_irq_disable : 106d9c >			  ## bredr_link.c:2569:5
 1e1f124:    c0 ff 8c 2d 00 00 	r0 = 11660 <bredr_link_v : 2d8c >			  ## bredr_link.c:2569:5
 1e1f12a:    01 40             	r1 = [r0 + 0]			  ## bredr_link.c:2569:5
 1e1f12c:    01 f2 27 00       	if (r1 == r0) goto 78 <link_conn_tx_bulk_avaiable+0x64 : 1e1f17e >
 1e1f130:    41 f2 04 00       	if (r1 == r4) goto 8 <link_conn_tx_bulk_avaiable+0x22 : 1e1f13c >
 1e1f134:    01 42             	r1 = [r1 + 0]
 1e1f136:    01 f2 fb 1f       	if (r1 != r0) goto -10 <link_conn_tx_bulk_avaiable+0x16 : 1e1f130 >
 1e1f13a:    21 18             	goto 66 <link_conn_tx_bulk_avaiable+0x64 : 1e1f17e >
 1e1f13c:    47 fc d0 00       	r7 = r4 + 208
 1e1f140:    09 f6 00 70       	r9 = [r7 + 0]			  ## bredr_link.c:2575:19
 1e1f144:    09 e0 1b 00       	if (r9 == 0) goto 54 <link_conn_tx_bulk_avaiable+0x64 : 1e1f17e >
 1e1f148:    c8 ff 78 0f 00 00 	r8 = 3960 <g_dut_hdl : f78 >
 1e1f14e:    43 2a             	if (r5 == 0) goto 134 <link_conn_tx_bulk_avaiable+0xBC : 1e1f1d6 >
 1e1f150:    60 6a             	r0 = b[r5 + 6] (u)			  ## bredr_link.c:2577:25
 1e1f152:    30 e0 1b 10       	if (r0 != 3) goto 54 <link_conn_tx_bulk_avaiable+0x72 : 1e1f18c >			  ## bredr_link.c:2577:21
 1e1f156:    00 f6 00 80       	r0 = [r8 + 0]			  ## bredr_dut.c:550:10
 1e1f15a:    36 20             	if (r0 == 0) goto 108 <link_conn_tx_bulk_avaiable+0xAE : 1e1f1c8 >			  ## bredr_dut.c:550:10
 1e1f15c:    40 69             	r0 = b[r4 + 20] (u)			  ## bredr_dut.c:554:13
 1e1f15e:    34 30             	if (r0 != 0) goto 104 <link_conn_tx_bulk_avaiable+0xAE : 1e1f1c8 >			  ## bredr_dut.c:554:13
 1e1f160:    97 f3 1c 3e       	call 3046456 <local_irq_disable : 106d9c >			  ## bredr_dut.c:559:5
 1e1f164:    90 4e             	r0 = [r7 + 36]			  ## bredr_dut.c:531:9
 1e1f166:    17 20             	if (r0 == 0) goto 46 <link_conn_tx_bulk_avaiable+0x7C : 1e1f196 >			  ## bredr_dut.c:531:9
 1e1f168:    bf f3 73 38       	call -102170 <bredr_tx_bulk_free : 1e06252 >			  ## bredr_dut.c:532:9
 1e1f16c:    a0 4e             	r0 = [r7 + 40]			  ## bredr_dut.c:533:13
 1e1f16e:    91 4e             	r1 = [r7 + 36]			  ## bredr_dut.c:533:31
 1e1f170:    10 f2 02 10       	if (r0 != r1) goto 4 <link_conn_tx_bulk_avaiable+0x5E : 1e1f178 >			  ## bredr_dut.c:533:31
 1e1f174:    00 70             	r0 = 0
 1e1f176:    a8 4e             	[r7 + 40] = r0			  ## bredr_dut.c:534:28
 1e1f178:    c9 f4 00 79       	[r7 + 36] = 0			  ## bredr_dut.c:536:24
 1e1f17c:    0d 18             	goto 26 <link_conn_tx_bulk_avaiable+0x7E : 1e1f198 >			  ## bredr_dut.c:536:24
 1e1f17e:    03 2a             	if (r5 == 0) goto 6 <link_conn_tx_bulk_avaiable+0x6C : 1e1f186 >
 1e1f180:    50 08             	r0 = r5			  ## bredr_link.c:2602:9
 1e1f182:    bf f3 66 38       	call -102196 <bredr_tx_bulk_free : 1e06252 >			  ## bredr_link.c:2602:9
 1e1f186:    1a 01             	{rets, r10-r4} = [sp++]			  ## bredr_link.c:2606:5
 1e1f188:    d7 f3 06 3e       	goto 3046412 <local_irq_enable : 106d98 >			  ## bredr_link.c:2606:5
 1e1f18c:    60 4e             	r0 = [r7 + 24]			  ## list.h:154:28
 1e1f18e:    01 9b             	r1 = r5 + 16			  ## bredr_link.c:2590:40
 1e1f190:    69 4e             	[r7 + 24] = r1			  ## list.h:137:16
 1e1f192:    42 9f             	r2 = r7 + 20			  ## bredr_link.c:2590:52
 1e1f194:    1d 18             	goto 58 <link_conn_tx_bulk_avaiable+0xB6 : 1e1f1d0 >
 1e1f196:    a0 4e             	r0 = [r7 + 40]
 1e1f198:    02 20             	if (r0 == 0) goto 4 <link_conn_tx_bulk_avaiable+0x84 : 1e1f19e >
 1e1f19a:    bf f3 5a 38       	call -102220 <bredr_tx_bulk_free : 1e06252 >			  ## bredr_dut.c:539:9
 1e1f19e:    ca f4 00 79       	[r7 + 40] = 0			  ## bredr_dut.c:541:20
 1e1f1a2:    50 4e             	r0 = [r7 + 20]			  ## bredr_dut.c:543:5
 1e1f1a4:    4a 9f             	r10 = r7 + 20			  ## bredr_dut.c:543:5
 1e1f1a6:    a0 f2 07 00       	if (r0 == r10) goto 14 <link_conn_tx_bulk_avaiable+0x9E : 1e1f1b8 >			  ## bredr_dut.c:543:5
 1e1f1aa:    46 f6 f0 0f       	r6 = [r0 ++= -16]
 1e1f1ae:    bf f3 50 38       	call -102240 <bredr_tx_bulk_free : 1e06252 >			  ## bredr_dut.c:544:9
 1e1f1b2:    60 08             	r0 = r6
 1e1f1b4:    a6 f2 f9 1f       	if (r6 != r10) goto -14 <link_conn_tx_bulk_avaiable+0x90 : 1e1f1aa >
 1e1f1b8:    01 70             	r1 = 0			  ## bredr_dut.c:562:5
 1e1f1ba:    90 08             	r0 = r9			  ## bredr_dut.c:562:5
 1e1f1bc:    61 15             	call -1342 <__write_reg_packet_type : 1e1ec80 >			  ## bredr_dut.c:562:5
 1e1f1be:    11 70             	r1 = 1			  ## bredr_dut.c:563:5
 1e1f1c0:    90 08             	r0 = r9			  ## bredr_dut.c:563:5
 1e1f1c2:    5e 15             	call -1348 <__write_reg_packet_type : 1e1ec80 >			  ## bredr_dut.c:563:5
 1e1f1c4:    97 f3 e8 3d       	call 3046352 <local_irq_enable : 106d98 >			  ## bredr_dut.c:564:5
 1e1f1c8:    40 4e             	r0 = [r7 + 16]			  ## list.h:154:28
 1e1f1ca:    01 9b             	r1 = r5 + 16			  ## bredr_link.c:2583:40
 1e1f1cc:    49 4e             	[r7 + 16] = r1			  ## list.h:137:16
 1e1f1ce:    c2 9e             	r2 = r7 + 12			  ## bredr_link.c:2583:52
 1e1f1d0:    4a 4a             	[r5 + 16] = r2			  ## list.h:138:16
 1e1f1d2:    58 4a             	[r5 + 20] = r0			  ## list.h:139:16
 1e1f1d4:    09 40             	[r0 + 0] = r1			  ## list.h:140:16
 1e1f1d6:    00 f6 00 80       	r0 = [r8 + 0]			  ## bredr_link.c:2593:18
 1e1f1da:    d5 31             	if (r0 != 0) goto -86 <link_conn_tx_bulk_avaiable+0x6C : 1e1f186 >			  ## bredr_link.c:2593:18
 1e1f1dc:    40 08             	r0 = r4			  ## bredr_link.c:2594:17
 1e1f1de:    8f f3 a1 2d       	call 1989442 <connection_tx_handler : 4d24 >			  ## bredr_link.c:2594:17
 1e1f1e2:    d1 1f             	goto -94 <link_conn_tx_bulk_avaiable+0x6C : 1e1f186 >			  ## bredr_link.c:2594:17


sys_event_recode:
 1e1f1e4:    00 70             	r0 = 0			  ## tws_event.c:67:0
 1e1f1e6:    20 00             	rts			  ## tws_event.c:117:1


update_code_start:
 1e1f1e8:    76 01             	[--sp] = {rets, r6-r4}			  ## bredr_frame.c:2967:0
 1e1f1ea:    c5 ff c0 28 00 00 	r5 = 10432 <btctler_bss_start : 28c0 >			  ## bredr_frame.c:2973:37
 1e1f1f0:    06 f9 41 50       	r6 = b[r5 + 65] (u)			  ## bredr_frame.c:2974:37
 1e1f1f4:    a0 f6 00 56       	r0 = [r5+r6<<2]			  ## bredr_frame.c:2974:37
 1e1f1f8:    bf f3 70 fc       	call -1824 <bredr_bd_frame_disable : 1e1eadc >			  ## bredr_frame.c:2976:5
 1e1f1fc:    c4 ff 60 eb 00 00 	r4 = 60256 <UPDATA_BREDR_BASE_BEG : eb60 >			  ## bredr_frame.c:2980:5
 1e1f202:    01 70             	r1 = 0			  ## bredr_frame.c:2978:5
 1e1f204:    02 fb 84 03       	r2 = 900 <NVRAM_DATA_SIZE+0x40 : 384 >			  ## bredr_frame.c:2978:5
 1e1f208:    40 08             	r0 = r4			  ## bredr_frame.c:2978:5
 1e1f20a:    97 f3 71 3e       	call 3046626 <memset : 106ef0 >			  ## bredr_frame.c:2978:5
 1e1f20e:    40 fc 20 00       	r0 = r4 + 32			  ## bredr_frame.c:2979:5
 1e1f212:    51 fc 40 00       	r1 = r5 + 64			  ## bredr_frame.c:2973:37
 1e1f216:    42 71             	r2 = 20			  ## bredr_frame.c:2979:5
 1e1f218:    97 f3 64 3e       	call 3046600 <memcpy : 106ee4 >			  ## bredr_frame.c:2979:5
 1e1f21c:    a1 f6 00 56       	r1 = [r5+r6<<2]			  ## bredr_frame.c:2980:42
 1e1f220:    45 fc 38 00       	r5 = r4 + 56			  ## bredr_frame.c:2980:5
 1e1f224:    02 fb 48 02       	r2 = 584 <BTCTLER_CL_RAM_TOTAL+0x64 : 248 >			  ## bredr_frame.c:2980:5
 1e1f228:    50 08             	r0 = r5			  ## bredr_frame.c:2980:5
 1e1f22a:    97 f3 5b 3e       	call 3046582 <memcpy : 106ee4 >			  ## bredr_frame.c:2980:5
 1e1f22e:    b5 f6 00 46       	[r4+r6<<2] = r5			  ## bredr_frame.c:2981:35
 1e1f232:    c0 ff 44 fc 1c 00 	r0 = 1899588 <uECC_vli_cmp_unsafe+0xC8C48 : 1cfc44 >			  ## bredr_frame.c:2983:21
 1e1f238:    0c 40             	[r0 + 0] = r4			  ## bredr_frame.c:2983:21
 1e1f23a:    c0 ff c0 00 1c 00 	r0 = 1835200 <uECC_vli_cmp_unsafe+0xB90C4 : 1c00c0 >			  ## bredr_frame.c:2983:21
 1e1f240:    0c 40             	[r0 + 0] = r4			  ## bredr_frame.c:2984:22
 1e1f242:    21 d4             	r1 = r4 >> 16			  ## bredr_frame.c:2985:22
 1e1f244:    19 40             	[r0 + 4] = r1			  ## bredr_frame.c:2985:22
 1e1f246:    c0 ff 58 58 e1 01 	r0 = 31545432 <update_target_end+0x29D0 : 1e15858 >			  ## bredr_frame.c:2987:5
 1e1f24c:    51 08             	r1 = r5			  ## bredr_frame.c:2987:5
 1e1f24e:    bf f3 3c 7f       	call -65928 <printf : 1e0f0ca >			  ## bredr_frame.c:2987:5
 1e1f252:    a0 f6 00 46       	r0 = [r4+r6<<2]			  ## bredr_frame.c:2990:27
 1e1f256:    bf f3 53 fc       	call -1882 <bredr_bd_frame_enable : 1e1eb00 >			  ## bredr_frame.c:2990:5
 1e1f25a:    c0 ff 04 41 1e 00 	r0 = 1982724 <uECC_vli_cmp_unsafe+0xDD108 : 1e4104 >			  ## bredr_frame.c:2992:24
 1e1f260:    c1 ff ff ff 00 00 	r1 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## bredr_frame.c:2992:24
 1e1f266:    09 40             	[r0 + 0] = r1			  ## bredr_frame.c:2992:24
 1e1f268:    10 70             	r0 = 1			  ## bredr_frame.c:3005:5
 1e1f26a:    16 01             	{rets, r6-r4} = [sp++]			  ## bredr_frame.c:3005:5
 1e1f26c:    ff f3 b0 07       	goto -127136 <__BT_UPDATA_JUMP : 1e001d0 >			  ## bredr_frame.c:3005:5


lmp_ch_update_op:
 1e1f270:    ae 05             	r14 = r6.l (u)
 1e1f272:    e2 01             	[--sp] = {psr, rete}
 1e1f274:    90 04             	r0 = r2.b0 (s)
 1e1f276:    e2 01             	[--sp] = {psr, rete}
 1e1f278:    2e 04             	r14 = r0.l (u)
 1e1f27a:    e2 01             	[--sp] = {psr, rete}
 1e1f27c:    0c 04             	r12 = r0.b0 (u)
 1e1f27e:    e2 01             	[--sp] = {psr, rete}
 1e1f280:    3a 05             	r10 = r4.l (s)
 1e1f282:    e2 01             	[--sp] = {psr, rete}
 1e1f284:    dc 04             	r12 = r3.b0 (s)
 1e1f286:    e2 01             	[--sp] = {psr, rete}
 1e1f288:    e6 05             	r6 = r7.l (u)
 1e1f28a:    e2 01             	[--sp] = {psr, rete}


ble_ll_ch_update_op:
 1e1f28c:    64 07             	r4 = -10
 1e1f28e:    e2 01             	[--sp] = {psr, rete}
 1e1f290:    7a 06             	r10 = -25
 1e1f292:    e2 01             	[--sp] = {psr, rete}
 1e1f294:    0c 06             	r12 = -32
 1e1f296:    e2 01             	[--sp] = {psr, rete}
 1e1f298:    ea 05             	r10 = r7.l (u)
 1e1f29a:    e2 01             	[--sp] = {psr, rete}
 1e1f29c:    b8 06             	r8 = -21
 1e1f29e:    e2 01             	[--sp] = {psr, rete}
 1e1f2a0:    9e 06             	r14 = -23
 1e1f2a2:    e2 01             	[--sp] = {psr, rete}
 1e1f2a4:    46 07             	r6 = -12
 1e1f2a6:    e2 01             	[--sp] = {psr, rete}


update_loader_match_tab:
 1e1f2a8:    05 5a             	r5 = h[r5 + 0] (u)
 1e1f2aa:    65 64             	r5 = b[r2 + 6] (u)
 1e1f2ac:    72 5f             	r2 = h[r7 + 46] (u)
 1e1f2ae:    6f 74             	r15 = 70
 1e1f2b0:    61 32             	if (r1 != 0) goto 194 <update_part_tab_init+0x10 : 1e1f374 >
 1e1f2b2:    2e 62             	b[r1 + 2] = r6
 1e1f2b4:    69 6e             	b[r7 + 6] = r1
 1e1f2b6:    00 00             	nop
 1e1f2b8:    00 00             	nop
 1e1f2ba:    01 5a             	r1 = h[r5 + 0] (u)
 1e1f2bc:    73 64             	r3 = b[r2 + 7] (u)
 1e1f2be:    5f 75             	r15 = 85
 1e1f2c0:    70 64             	r0 = b[r2 + 7] (u)
 1e1f2c2:    61 74             	r1 = 70
 1e1f2c4:    65 32             	if (r1 != 0) goto 202 <update_part_tab_init+0x2C : 1e1f390 >
 1e1f2c6:    2e 62             	b[r1 + 2] = r6
 1e1f2c8:    69 6e             	b[r7 + 6] = r1
 1e1f2ca:    00 00             	nop
 1e1f2cc:    02 5a             	r2 = h[r5 + 0] (u)
 1e1f2ce:    73 64             	r3 = b[r2 + 7] (u)
 1e1f2d0:    5f 75             	r15 = 85
 1e1f2d2:    70 64             	r0 = b[r2 + 7] (u)
 1e1f2d4:    61 74             	r1 = 70
 1e1f2d6:    65 32             	if (r1 != 0) goto 202 <update_part_tab_init+0x3E : 1e1f3a2 >
 1e1f2d8:    2e 62             	b[r1 + 2] = r6
 1e1f2da:    69 6e             	b[r7 + 6] = r1
 1e1f2dc:    00 00             	nop
 1e1f2de:    06 5a             	r6 = h[r5 + 0] (u)
 1e1f2e0:    62 6c             	r2 = b[r6 + 6] (u)
 1e1f2e2:    65 5f             	r5 = h[r7 + 44] (u)
 1e1f2e4:    61 70             	r1 = 6
 1e1f2e6:    70 5f             	r0 = h[r7 + 46] (u)
 1e1f2e8:    6f 74             	r15 = 70
 1e1f2ea:    61 2e             	if (r7 == 0) goto 194 <JL_BT_CFG_FILE_NAME+0x2 : 1e1f3ae >
 1e1f2ec:    62 69             	r2 = b[r4 + 22] (u)
 1e1f2ee:    6e 00             	cli r14
 1e1f2f0:    07 5a             	r7 = h[r5 + 0] (u)
 1e1f2f2:    73 70             	r3 = 7
 1e1f2f4:    70 5f             	r0 = h[r7 + 46] (u)
 1e1f2f6:    61 70             	r1 = 6
 1e1f2f8:    70 5f             	r0 = h[r7 + 46] (u)
 1e1f2fa:    6f 74             	r15 = 70
 1e1f2fc:    61 2e             	if (r7 == 0) goto 194 <JL_FLASH_BIN_FILE_NAME+0x7 : 1e1f3c0 >
 1e1f2fe:    62 69             	r2 = b[r4 + 22] (u)
 1e1f300:    6e 00             	cli r14
 1e1f302:    00 5a             	r0 = h[r5 + 0] (u)
 1e1f304:    75 73             	r5 = 55
 1e1f306:    62 5f             	r2 = h[r7 + 44] (u)
 1e1f308:    75 70             	r5 = 7
 1e1f30a:    64 61             	r4 = b[r0 + 22] (u)
 1e1f30c:    74 65             	r4 = b[r2 + 23] (u)
 1e1f30e:    32 2e             	if (r7 == 0) goto 100 <update_part_tab_init+0x10 : 1e1f374 >
 1e1f310:    62 69             	r2 = b[r4 + 22] (u)
 1e1f312:    6e 00             	cli r14
 1e1f314:    09 5a             	h[r5 + 0] = r1
 1e1f316:    62 6c             	r2 = b[r6 + 6] (u)
 1e1f318:    65 5f             	r5 = h[r7 + 44] (u)
 1e1f31a:    6f 74             	r15 = 70
 1e1f31c:    61 2e             	if (r7 == 0) goto 194 <update_stop+0x12 : 1e1f3e0 >
 1e1f31e:    62 69             	r2 = b[r4 + 22] (u)
 1e1f320:    6e 00             	cli r14
 1e1f322:    00 00             	nop
 1e1f324:    00 00             	nop
 1e1f326:    04 5a             	r4 = h[r5 + 0] (u)
 1e1f328:    75 61             	r5 = b[r0 + 23] (u)
 1e1f32a:    72 74             	r2 = 71
 1e1f32c:    5f 75             	r15 = 85
 1e1f32e:    73 65             	r3 = b[r2 + 23] (u)
 1e1f330:    72 2e             	if (r7 == 0) goto 228 <decode_data_by_user_key+0x2E : 1e1f416 >
 1e1f332:    62 69             	r2 = b[r4 + 22] (u)
 1e1f334:    6e 00             	cli r14
 1e1f336:    00 00             	nop
 1e1f338:    0b 5a             	h[r5 + 0] = r3
 1e1f33a:    6e 6f             	b[r7 + 22] = r6
 1e1f33c:    72 5f             	r2 = h[r7 + 46] (u)
 1e1f33e:    6f 74             	r15 = 70
 1e1f340:    61 2e             	if (r7 == 0) goto 194 <decode_data_by_user_key+0x1C : 1e1f404 >
 1e1f342:    62 69             	r2 = b[r4 + 22] (u)
 1e1f344:    6e 00             	cli r14
 1e1f346:    00 00             	nop
 1e1f348:    00 00             	nop


JL_RESERVED_VM_FILE_NAME:
 1e1f34a:    56 4d             	r6 = [r6 + 84]
 1e1f34c:    00 61             	r0 = b[r0 + 16] (u)


JL_APP_CODE0_FILE_NAME:
 1e1f34d:    61 70             	r1 = 6
 1e1f34f:    70 5f             	r0 = h[r7 + 46] (u)
 1e1f351:    64 69             	r4 = b[r4 + 22] (u)
 1e1f353:    72 5f             	r2 = h[r7 + 46] (u)
 1e1f355:    68 65             	b[r2 + 22] = r0
 1e1f357:    61 64             	r1 = b[r2 + 6] (u)
 1e1f359:    00 6f             	r0 = b[r7 + 16] (u)


JL_OTA_LOADER_FILE_NAME:
 1e1f35a:    6f 74             	r15 = 70
 1e1f35c:    61 2e             	if (r7 == 0) goto 194 <update_decode+0x2 : 1e1f420 >
 1e1f35e:    62 69             	r2 = b[r4 + 22] (u)
 1e1f360:    6e 00             	cli r14
 1e1f362:    00 00             	nop


update_part_tab_init:
 1e1f364:    ac f3 e1 01       	call -2620478 <uECC_vli_cmp_unsafe+0x1A9872E : 1b9f72a >
 1e1f368:    01 00             	nop
 1e1f36a:    00 00             	nop
 1e1f36c:    00 00             	nop
 1e1f36e:    00 00             	nop
 1e1f370:    00 00             	nop
 1e1f372:    00 00             	nop
 1e1f374:    e4 07             	r4 = -2
 1e1f376:    e2 01             	[--sp] = {psr, rete}
 1e1f378:    0c 00             	syscall
 1e1f37a:    00 00             	nop
 1e1f37c:    b9 f3 e1 01       	call -916542 <uECC_vli_cmp_unsafe+0x1C38746 : 1d3f742 >
 1e1f380:    ff ff ff ff 00 00 	pc = 65535
 1e1f386:    00 00             	nop
 1e1f388:    00 00             	nop
 1e1f38a:    00 00             	nop
 1e1f38c:    00 00             	nop
 1e1f38e:    00 00             	nop
 1e1f390:    00 00             	nop
 1e1f392:    00 00             	nop
 1e1f394:    c3 f3 e1 01       	goto 394178 <bank_code_load_addr+0x5C162 : 1e7f75a >
 1e1f398:    ff ff ff ff 00 00 	pc = 65535
 1e1f39e:    00 00             	nop
 1e1f3a0:    00 00             	nop
 1e1f3a2:    00 00             	nop
 1e1f3a4:    00 00             	nop
 1e1f3a6:    00 00             	nop
 1e1f3a8:    00 00             	nop
 1e1f3aa:    00 00             	nop


JL_BT_CFG_FILE_NAME:
 1e1f3ac:    63 66             	r3 = b[r3 + 6] (u)
 1e1f3ae:    67 5f             	r7 = h[r7 + 44] (u)
 1e1f3b0:    74 6f             	r4 = b[r7 + 23] (u)
 1e1f3b2:    6f 6c             	b[r6 + 6] = r7
 1e1f3b4:    2e 62             	b[r1 + 2] = r6
 1e1f3b6:    69 6e             	b[r7 + 6] = r1
 1e1f3b8:    00 66             	r0 = b[r3 + 0] (u)


JL_FLASH_BIN_FILE_NAME:
 1e1f3b9:    66 6c             	r6 = b[r6 + 6] (u)
 1e1f3bb:    61 73             	r1 = 54
 1e1f3bd:    68 2e             	if (r7 == 0) goto 208 <update_decode+0x71 : 1e1f48f >
 1e1f3bf:    62 69             	r2 = b[r4 + 22] (u)
 1e1f3c1:    6e 00             	cli r14


JL_FLASH2_BIN_FILE_NAME:
 1e1f3c3:    66 6c             	r6 = b[r6 + 6] (u)
 1e1f3c5:    61 73             	r1 = 54
 1e1f3c7:    68 32             	if (r1 != 0) goto 208 <update_decode+0x7B : 1e1f499 >
 1e1f3c9:    2e 62             	b[r1 + 2] = r6
 1e1f3cb:    69 6e             	b[r7 + 6] = r1
 1e1f3cd:    00 75             	r0 = 80


update_stop:
 1e1f3ce:    75 01             	[--sp] = {rets, r5, r4}			  ## download_loop.c:482:0
 1e1f3d0:    c5 ff b0 20 00 00 	r5 = 8368 <gatt_client_conn_handle : 20b0 >			  ## download_loop.c:482:0
 1e1f3d6:    01 f6 18 51       	r1 = [r5 + 280]			  ## download_loop.c:485:17
 1e1f3da:    04 08             	r4 = r0			  ## download_loop.c:485:17
 1e1f3dc:    04 22             	if (r1 == 0) goto 8 <update_stop+0x18 : 1e1f3e6 >			  ## download_loop.c:485:17
 1e1f3de:    41 42             	r1 = [r1 + 16]			  ## download_loop.c:491:22
 1e1f3e0:    01 22             	if (r1 == 0) goto 2 <update_stop+0x16 : 1e1f3e4 >			  ## download_loop.c:491:22
 1e1f3e2:    81 00             	call r1			  ## download_loop.c:492:9
 1e1f3e4:    8c 6b             	b[r5 + 24] = r4			  ## download_loop.c:495:23
 1e1f3e6:    55 01             	{pc, r5, r4} = [sp++]


decode_data_by_user_key:
 1e1f3e8:    79 01             	[--sp] = {rets, r9-r4}			  ## encrypt_api.c:97:0
 1e1f3ea:    34 08             	r4 = r3			  ## encrypt_api.c:97:0
 1e1f3ec:    15 08             	r5 = r1			  ## encrypt_api.c:97:0
 1e1f3ee:    08 08             	r8 = r0			  ## encrypt_api.c:97:0
 1e1f3f0:    15 24             	if (r2 == 0) goto 42 <decode_data_by_user_key+0x34 : 1e1f41c >			  ## encrypt_api.c:97:0
 1e1f3f2:    09 f5 1c 00       	r9 = [sp+28]			  ## encrypt_api.c:97:0
 1e1f3f6:    a6 04             	r6 = r2.l (u)			  ## encrypt_api.c:102:18
 1e1f3f8:    97 08             	r7 = r9			  ## encrypt_api.c:102:17
 1e1f3fa:    76 f2 01 80       	if (r6 > r7) goto 2 <decode_data_by_user_key+0x18 : 1e1f400 >			  ## encrypt_api.c:102:17
 1e1f3fe:    67 08             	r7 = r6			  ## encrypt_api.c:102:17
 1e1f400:    a0 d0             	r0 = r4 >> 2			  ## encrypt_api.c:103:30
 1e1f402:    e1 fd 80 00       	r0 = r0 ^ r8			  ## encrypt_api.c:103:35
 1e1f406:    20 04             	r0 = r0.l (u)			  ## encrypt_api.c:105:9
 1e1f408:    03 70             	r3 = 0			  ## encrypt_api.c:105:9
 1e1f40a:    51 08             	r1 = r5			  ## encrypt_api.c:105:9
 1e1f40c:    72 08             	r2 = r7			  ## encrypt_api.c:105:9
 1e1f40e:    bf f3 a7 0f       	call -123058 <doe : 1e01360 >			  ## encrypt_api.c:105:9
 1e1f412:    74 09             	r4 += r7			  ## encrypt_api.c:110:18
 1e1f414:    e2 bd             	r2 = r6 - r7			  ## encrypt_api.c:111:14
 1e1f416:    a0 04             	r0 = r2.l (u)			  ## encrypt_api.c:101:5
 1e1f418:    75 09             	r5 += r7			  ## encrypt_api.c:109:14
 1e1f41a:    ed 31             	if (r0 != 0) goto -38 <decode_data_by_user_key+0xE : 1e1f3f6 >			  ## encrypt_api.c:109:14
 1e1f41c:    59 01             	{pc, r9-r4} = [sp++]


update_decode:
 1e1f41e:    7c 01             	[--sp] = {rets, r12-r4}			  ## download_loop.c:1887:0
 1e1f420:    f0 0b             	sp += -32			  ## download_loop.c:1887:0
 1e1f422:    3b 08             	r11 = r3			  ## download_loop.c:1887:0
 1e1f424:    15 08             	r5 = r1			  ## download_loop.c:1887:0
 1e1f426:    0c 08             	r12 = r0			  ## download_loop.c:1887:0
 1e1f428:    07 70             	r7 = 0			  ## download_loop.c:1887:0
 1e1f42a:    60 ff 1f 29 24 00 	if ((r2 & 31) == 0) goto 72 <update_decode+0x5A : 1e1f478 >			  ## download_loop.c:1887:0
 1e1f430:    29 fd 1f 29       	r9 = r2 & 31			  ## download_loop.c:1893:36
 1e1f434:    90 fb 90 12       	r1 = r2 - r9			  ## download_loop.c:1893:28
 1e1f438:    0a a0             	r10 = sp + 0
 1e1f43a:    a0 08             	r0 = r10			  ## download_loop.c:1897:9
 1e1f43c:    92 08             	r2 = r9			  ## download_loop.c:1897:9
 1e1f43e:    bf f3 8d 0f       	call -123110 <norflash_origin_read : 1e0135c >			  ## download_loop.c:1897:9
 1e1f442:    80 fb 90 8a       	r8 = r10 + r9			  ## download_loop.c:1900:24
 1e1f446:    60 fb 00 99       	r0 = 0 - r9			  ## download_loop.c:1899:68
 1e1f44a:    67 fb 20 99       	r7 = 32 - r9			  ## download_loop.c:1898:37
 1e1f44e:    07 e2 01 30       	if (r7 < 32) goto 2 <update_decode+0x36 : 1e1f454 >
 1e1f452:    07 08             	r7 = r0			  ## download_loop.c:1899:22
 1e1f454:    80 08             	r0 = r8			  ## download_loop.c:1900:9
 1e1f456:    51 08             	r1 = r5			  ## download_loop.c:1900:9
 1e1f458:    72 08             	r2 = r7			  ## download_loop.c:1900:9
 1e1f45a:    97 f3 43 3d       	call 3046022 <memcpy : 106ee4 >			  ## download_loop.c:1900:9
 1e1f45e:    90 fb 90 3b       	r3 = r11 - r9			  ## download_loop.c:1901:55
 1e1f462:    80 fb 90 27       	r2 = r7 + r9			  ## download_loop.c:1901:38
 1e1f466:    c0 08             	r0 = r12			  ## download_loop.c:1901:9
 1e1f468:    a1 08             	r1 = r10			  ## download_loop.c:1901:9
 1e1f46a:    bf f3 79 0f       	call -123150 <doe : 1e01360 >			  ## download_loop.c:1901:9
 1e1f46e:    50 08             	r0 = r5			  ## download_loop.c:1902:9
 1e1f470:    81 08             	r1 = r8			  ## download_loop.c:1902:9
 1e1f472:    72 08             	r2 = r7			  ## download_loop.c:1902:9
 1e1f474:    97 f3 36 3d       	call 3045996 <memcpy : 106ee4 >			  ## download_loop.c:1902:9
 1e1f478:    64 fb 20 79       	r4 = 32 - r7			  ## download_loop.c:1906:22
 1e1f47c:    0e 28             	if (r4 == 0) goto 28 <update_decode+0x7C : 1e1f49a >
 1e1f47e:    c1 bb             	r1 = r5 + r7			  ## download_loop.c:1913:26
 1e1f480:    46 08             	r6 = r4			  ## download_loop.c:1912:16
 1e1f482:    04 e2 01 30       	if (r4 < 32) goto 2 <update_decode+0x6A : 1e1f488 >			  ## download_loop.c:1912:16
 1e1f486:    06 72             	r6 = 32			  ## download_loop.c:1912:16
 1e1f488:    80 fb b0 37       	r3 = r7 + r11			  ## download_loop.c:1913:51
 1e1f48c:    c0 08             	r0 = r12			  ## download_loop.c:1913:9
 1e1f48e:    62 08             	r2 = r6			  ## download_loop.c:1913:9
 1e1f490:    bf f3 66 0f       	call -123188 <doe : 1e01360 >			  ## download_loop.c:1913:9
 1e1f494:    a4 b9             	r4 = r4 - r6			  ## download_loop.c:1915:20
 1e1f496:    67 09             	r7 += r6			  ## download_loop.c:1914:16
 1e1f498:    f2 39             	if (r4 != 0) goto -28 <update_decode+0x60 : 1e1f47e >
 1e1f49a:    10 0a             	sp += 32
 1e1f49c:    5c 01             	{pc, r12-r4} = [sp++]			  ## download_loop.c:1919:1


update_notify_content_size:
 1e1f49e:    34 00             	[--sp] = rets			  ## download_loop.c:502:0
 1e1f4a0:    c2 ff b0 20 00 00 	r2 = 8368 <gatt_client_conn_handle : 20b0 >			  ## download_loop.c:506:9
 1e1f4a6:    02 f6 18 21       	r2 = [r2 + 280]			  ## download_loop.c:506:9
 1e1f4aa:    03 24             	if (r2 == 0) goto 6 <update_notify_content_size+0x14 : 1e1f4b2 >			  ## download_loop.c:506:9
 1e1f4ac:    52 44             	r2 = [r2 + 20]			  ## download_loop.c:506:37
 1e1f4ae:    01 24             	if (r2 == 0) goto 2 <update_notify_content_size+0x14 : 1e1f4b2 >			  ## download_loop.c:506:37
 1e1f4b0:    82 00             	call r2			  ## download_loop.c:507:9
 1e1f4b2:    30 00             	pc = [sp++]


update_resource_release:
 1e1f4b4:    74 01             	[--sp] = {rets, r4}			  ## download_loop.c:1699:0
 1e1f4b6:    c4 ff 50 2f 00 00 	r4 = 12112 <update_bss_start : 2f50 >			  ## download_loop.c:1699:0
 1e1f4bc:    00 48             	r0 = [r4 + 0]			  ## download_loop.c:1702:9
 1e1f4be:    08 20             	if (r0 == 0) goto 16 <update_resource_release+0x1C : 1e1f4d0 >			  ## download_loop.c:1702:9
 1e1f4c0:    01 40             	r1 = [r0 + 0]			  ## download_loop.c:1703:21
 1e1f4c2:    04 22             	if (r1 == 0) goto 8 <update_resource_release+0x18 : 1e1f4cc >			  ## download_loop.c:1703:21
 1e1f4c4:    10 08             	r0 = r1			  ## download_loop.c:1704:13
 1e1f4c6:    bf f3 a1 82       	call -64190 <free : 1e0fa0c >			  ## download_loop.c:1704:13
 1e1f4ca:    00 48             	r0 = [r4 + 0]			  ## download_loop.c:1704:13
 1e1f4cc:    bf f3 9e 82       	call -64196 <free : 1e0fa0c >			  ## download_loop.c:1706:9
 1e1f4d0:    54 01             	{pc, r4} = [sp++]


active_update_task:
 1e1f4d2:    7f 01             	[--sp] = {rets, r15-r4}			  ## update_main.c:106:0
 1e1f4d4:    06 0b             	sp += -500			  ## update_main.c:106:0
 1e1f4d6:    c8 ff b0 20 00 00 	r8 = 8368 <gatt_client_conn_handle : 20b0 >			  ## update_main.c:106:0
 1e1f4dc:    01 f6 14 81       	r1 = [r8 + 276]			  ## update_main.c:109:5
 1e1f4e0:    0f 08             	r15 = r0			  ## update_main.c:109:5
 1e1f4e2:    10 70             	r0 = 1			  ## update_main.c:109:22
 1e1f4e4:    10 f9 64 10       	b[r1 + 100] = r0			  ## update_main.c:109:22
 1e1f4e8:    00 70             	r0 = 0			  ## update_main.c:109:22
 1e1f4ea:    88 02             	[sp+32] = r0			  ## update_main.c:113:23
 1e1f4ec:    78 02             	[sp+28] = r0			  ## update_main.c:113:23
 1e1f4ee:    03 f6 60 f0       	r3 = [r15 + 96]			  ## update_main.c:115:15
 1e1f4f2:    f9 fc 50 00       	r9 = r15 + 80			  ## update_main.c:112:39
 1e1f4f6:    04 26             	if (r3 == 0) goto 8 <active_update_task+0x2E : 1e1f500 >			  ## update_main.c:112:39
 1e1f4f8:    11 70             	r1 = 1			  ## update_main.c:116:9
 1e1f4fa:    02 70             	r2 = 0			  ## update_main.c:116:9
 1e1f4fc:    90 08             	r0 = r9			  ## update_main.c:116:9
 1e1f4fe:    83 00             	call r3			  ## update_main.c:116:9
 1e1f500:    00 f6 58 f0       	r0 = [r15 + 88]			  ## update_main.c:60:15
 1e1f504:    0b 20             	if (r0 == 0) goto 22 <active_update_task+0x4A : 1e1f51c >			  ## update_main.c:60:15
 1e1f506:    10 f6 18 81       	[r8 + 280] = r0			  ## download_loop.c:2785:17
 1e1f50a:    02 40             	r2 = [r0 + 0]			  ## update_main.c:62:29
 1e1f50c:    07 24             	if (r2 == 0) goto 14 <active_update_task+0x4A : 1e1f51c >			  ## update_main.c:62:29
 1e1f50e:    c0 ff 76 07 e2 01 	r0 = 31590262 <update_thread_resume : 1e20776 >			  ## update_main.c:63:13
 1e1f514:    c1 ff 84 07 e2 01 	r1 = 31590276 <update_thread_sleep : 1e20784 >			  ## update_main.c:63:13
 1e1f51a:    82 00             	call r2			  ## update_main.c:63:13
 1e1f51c:    c0 ff f7 59 e1 01 	r0 = 31545847 <update_target_end+0x2B6F : 1e159f7 >			  ## update_main.c:125:9
 1e1f522:    bf f3 28 7f       	call -65968 <puts : 1e0f376 >			  ## update_main.c:125:9
 1e1f526:    0d f6 50 f0       	r13 = [r15 + 80]			  ## update_main.c:126:19
 1e1f52a:    00 fb 07 5a       	r0 = 23047 <report_overlay_end+0x6BF : 5a07 >			  ## update_main.c:126:24
 1e1f52e:    0d f2 04 10       	if (r13 != r0) goto 8 <active_update_task+0x68 : 1e1f53a >			  ## update_main.c:126:24
 1e1f532:    0d fb 06 5a       	r13 = 23046 <report_overlay_end+0x6BE : 5a06 >
 1e1f536:    1d f6 50 f0       	[r15 + 80] = r13			  ## update_main.c:127:24
 1e1f53a:    00 70             	r0 = 0
 1e1f53c:    10 f9 18 80       	b[r8 + 24] = r0			  ## download_loop.c:1666:23
 1e1f540:    00 fb 44 02       	r0 = 580 <BTCTLER_CL_RAM_TOTAL+0x60 : 244 >			  ## download_loop.c:1668:31
 1e1f544:    bf f3 37 82       	call -64402 <malloc : 1e0f9b6 >			  ## download_loop.c:1668:31
 1e1f548:    05 08             	r5 = r0			  ## download_loop.c:1668:31
 1e1f54a:    ce ff 50 2f 00 00 	r14 = 12112 <update_bss_start : 2f50 >			  ## download_loop.c:1668:31
 1e1f550:    15 f6 00 e0       	[r14 + 0] = r5			  ## download_loop.c:1668:12
 1e1f554:    4a 2a             	if (r5 == 0) goto 148 <active_update_task+0x118 : 1e1f5ea >			  ## download_loop.c:1668:12
 1e1f556:    01 70             	r1 = 0			  ## download_loop.c:1676:5
 1e1f558:    02 fb 44 02       	r2 = 580 <BTCTLER_CL_RAM_TOTAL+0x60 : 244 >			  ## download_loop.c:1676:5
 1e1f55c:    04 70             	r4 = 0			  ## download_loop.c:1676:5
 1e1f55e:    97 f3 c7 3c       	call 3045774 <memset : 106ef0 >			  ## download_loop.c:1676:5
 1e1f562:    50 fc f8 01       	r0 = r5 + 504			  ## download_loop.c:1677:5
 1e1f566:    c1 ff 64 f3 e1 01 	r1 = 31585124 <update_part_tab_init : 1e1f364 >			  ## download_loop.c:1677:5
 1e1f56c:    82 74             	r2 = 72			  ## download_loop.c:1677:5
 1e1f56e:    97 f3 b9 3c       	call 3045746 <memcpy : 106ee4 >			  ## download_loop.c:1677:5
 1e1f572:    00 fb 00 04       	r0 = 1024 <BTCTLER_LE_RAM_TOTAL+0x22 : 400 >			  ## download_loop.c:1677:5
 1e1f576:    28 5a             	h[r5 + 4] = r0			  ## download_loop.c:1679:28
 1e1f578:    bf f3 1d 82       	call -64454 <malloc : 1e0f9b6 >			  ## download_loop.c:1680:32
 1e1f57c:    08 4a             	[r5 + 0] = r0			  ## download_loop.c:1680:24
 1e1f57e:    35 20             	if (r0 == 0) goto 106 <active_update_task+0x118 : 1e1f5ea >			  ## download_loop.c:1680:24
 1e1f580:    10 70             	r0 = 1
 1e1f582:    02 fb 09 5a       	r2 = 23049 <report_overlay_end+0x6C1 : 5a09 >			  ## download_loop.c:1688:49
 1e1f586:    11 70             	r1 = 1			  ## download_loop.c:1688:49
 1e1f588:    2d f2 01 00       	if (r13 == r2) goto 2 <active_update_task+0xBC : 1e1f58e >			  ## download_loop.c:1688:49
 1e1f58c:    01 70             	r1 = 0			  ## download_loop.c:1688:49
 1e1f58e:    c2 8f             	r2 += -4			  ## download_loop.c:1688:20
 1e1f590:    2d f2 01 00       	if (r13 == r2) goto 2 <active_update_task+0xC4 : 1e1f596 >			  ## download_loop.c:1688:20
 1e1f594:    00 70             	r0 = 0			  ## download_loop.c:1688:20
 1e1f596:    50 b2             	r0 |= r1			  ## download_loop.c:1688:29
 1e1f598:    10 f9 41 52       	b[r5 + 577] = r0			  ## download_loop.c:1688:29
 1e1f59c:    14 f6 1c 81       	[r8 + 284] = r4			  ## flash_fs_api.c:69:20
 1e1f5a0:    40 a7             	r0 = sp + 116			  ## flash_fs_api.c:69:20
 1e1f5a2:    0b fd 02 09       	r11 = r0 | 2
 1e1f5a6:    c6 ff a8 64 e1 01 	r6 = 31548584 <boot_addr_tab : 1e164a8 >
 1e1f5ac:    0c 72             	r12 = 32
 1e1f5ae:    ca ff ff ff 00 00 	r10 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >
 1e1f5b4:    47 f6 04 60       	r7 = [r6 ++= 4]			  ## flash_fs_api.c:71:42
 1e1f5b8:    45 a7             	r5 = sp + 116			  ## flash_fs_api.c:71:42
 1e1f5ba:    02 72             	r2 = 32			  ## flash_fs_api.c:71:9
 1e1f5bc:    50 08             	r0 = r5			  ## flash_fs_api.c:71:9
 1e1f5be:    71 08             	r1 = r7			  ## flash_fs_api.c:71:9
 1e1f5c0:    bf f3 cc 0e       	call -123496 <norflash_origin_read : 1e0135c >			  ## flash_fs_api.c:71:9
 1e1f5c4:    02 72             	r2 = 32			  ## flash_fs_api.c:72:9
 1e1f5c6:    03 70             	r3 = 0			  ## flash_fs_api.c:72:9
 1e1f5c8:    1c f5 00 00       	[sp] = r12			  ## flash_fs_api.c:72:9
 1e1f5cc:    a0 08             	r0 = r10			  ## flash_fs_api.c:72:9
 1e1f5ce:    51 08             	r1 = r5			  ## flash_fs_api.c:72:9
 1e1f5d0:    0b 17             	call -490 <decode_data_by_user_key : 1e1f3e8 >			  ## flash_fs_api.c:72:9
 1e1f5d2:    e1 71             	r1 = 30			  ## flash_fs_api.c:44:20
 1e1f5d4:    b0 08             	r0 = r11			  ## flash_fs_api.c:44:20
 1e1f5d6:    bf f3 e8 0e       	call -123440 <CRC16 : 1e013aa >			  ## flash_fs_api.c:44:20
 1e1f5da:    81 f5 74 00       	r1 = h[sp+116] (u)			  ## flash_fs_api.c:45:15
 1e1f5de:    01 f2 18 00       	if (r1 == r0) goto 48 <active_update_task+0x140 : 1e1f612 >			  ## flash_fs_api.c:45:15
 1e1f5e2:    14 80             	r4 += 1			  ## flash_fs_api.c:70:72
 1e1f5e4:    24 e0 e6 9f       	if (r4 <= 2) goto -52 <active_update_task+0xE2 : 1e1f5b4 >			  ## flash_fs_api.c:70:72
 1e1f5e8:    16 18             	goto 44 <active_update_task+0x144 : 1e1f616 >			  ## flash_fs_api.c:70:72
 1e1f5ea:    20 79             	r0 = 146			  ## download_loop.c:2007:9
 1e1f5ec:    f0 16             	call -544 <update_stop : 1e1f3ce >
 1e1f5ee:    fc 07             	r12 = -1
 1e1f5f0:    61 17             	call -318 <update_resource_release : 1e1f4b4 >			  ## download_loop.c:2186:5
 1e1f5f2:    1c e0 42 12       	if (r12 != 1) goto 1156 <active_update_task+0x5A8 : 1e1fa7a >			  ## download_loop.c:2186:5
 1e1f5f6:    c4 ff 60 fb 00 00 	r4 = 64352 <report_heap_end : fb60 >			  ## update_main.c:144:27
 1e1f5fc:    00 fb 02 5a       	r0 = 23042 <report_overlay_end+0x6BA : 5a02 >			  ## update_main.c:143:28
 1e1f600:    68 58             	h[r4 + 12] = r0			  ## update_main.c:143:28
 1e1f602:    a0 98             	r0 = r4 + 10			  ## update_main.c:144:27
 1e1f604:    e1 74             	r1 = 78			  ## update_main.c:144:27
 1e1f606:    bf f3 d0 0e       	call -123488 <CRC16 : 1e013aa >			  ## update_main.c:144:27
 1e1f60a:    48 58             	h[r4 + 8] = r0			  ## update_main.c:144:25
 1e1f60c:    10 70             	r0 = 1			  ## update_main.c:145:26
 1e1f60e:    78 02             	[sp+28] = r0			  ## update_main.c:145:26
 1e1f610:    41 1a             	goto 1154 <active_update_task+0x5C2 : 1e1fa94 >			  ## update_main.c:145:26
 1e1f612:    17 f6 1c 81       	[r8 + 284] = r7			  ## flash_fs_api.c:74:28
 1e1f616:    00 f6 18 81       	r0 = [r8 + 280]			  ## download_loop.c:465:17
 1e1f61a:    fc 07             	r12 = -1			  ## download_loop.c:465:17
 1e1f61c:    e9 21             	if (r0 == 0) goto -46 <active_update_task+0x11E : 1e1f5f0 >			  ## download_loop.c:465:17
 1e1f61e:    10 40             	r0 = [r0 + 4]			  ## download_loop.c:471:23
 1e1f620:    80 00             	call r0			  ## download_loop.c:471:10
 1e1f622:    e6 21             	if (r0 == 0) goto -52 <active_update_task+0x11E : 1e1f5f0 >
 1e1f624:    1d f5 08 00       	[sp+8] = r13
 1e1f628:    19 f5 14 00       	[sp+20] = r9
 1e1f62c:    00 f6 18 81       	r0 = [r8 + 280]			  ## download_loop.c:755:13
 1e1f630:    01 f6 00 e0       	r1 = [r14 + 0]			  ## download_loop.c:2021:24
 1e1f634:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:755:26
 1e1f636:    0d f6 00 10       	r13 = [r1 + 0]			  ## download_loop.c:2021:32
 1e1f63a:    00 70             	r0 = 0			  ## download_loop.c:755:13
 1e1f63c:    02 fb 00 02       	r2 = 512 <BTCTLER_CL_RAM_TOTAL+0x1C : 200 >			  ## download_loop.c:755:13
 1e1f640:    d1 08             	r1 = r13			  ## download_loop.c:755:13
 1e1f642:    83 00             	call r3			  ## download_loop.c:755:13
 1e1f644:    a0 f2 13 02       	if (r0 == r10) goto 1062 <active_update_task+0x59C : 1e1fa6e >			  ## download_loop.c:755:13
 1e1f648:    00 f6 18 81       	r0 = [r8 + 280]			  ## download_loop.c:761:13
 1e1f64c:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:761:26
 1e1f64e:    d1 fc 00 02       	r1 = r13 + 512			  ## download_loop.c:761:46
 1e1f652:    00 70             	r0 = 0			  ## download_loop.c:761:13
 1e1f654:    02 fb 00 02       	r2 = 512 <BTCTLER_CL_RAM_TOTAL+0x1C : 200 >			  ## download_loop.c:761:13
 1e1f658:    83 00             	call r3			  ## download_loop.c:761:13
 1e1f65a:    a0 f2 08 02       	if (r0 == r10) goto 1040 <active_update_task+0x59C : 1e1fa6e >
 1e1f65e:    00 74             	r0 = 64			  ## download_loop.c:775:5
 1e1f660:    08 02             	[sp] = r0			  ## download_loop.c:775:5
 1e1f662:    a0 08             	r0 = r10			  ## download_loop.c:775:5
 1e1f664:    02 74             	r2 = 64			  ## download_loop.c:775:5
 1e1f666:    03 70             	r3 = 0			  ## download_loop.c:775:5
 1e1f668:    d1 08             	r1 = r13			  ## download_loop.c:775:5
 1e1f66a:    be 16             	call -644 <decode_data_by_user_key : 1e1f3e8 >			  ## download_loop.c:775:5
 1e1f66c:    d0 fc 02 00       	r0 = r13 + 2			  ## download_loop.c:781:43
 1e1f670:    e1 73             	r1 = 62			  ## download_loop.c:339:12
 1e1f672:    bf f3 9a 0e       	call -123596 <CRC16 : 1e013aa >			  ## download_loop.c:339:12
 1e1f676:    01 f7 00 d0       	r1 = h[r13 + 0] (u)			  ## download_loop.c:782:24
 1e1f67a:    01 f2 f8 11       	if (r1 != r0) goto 1008 <active_update_task+0x59C : 1e1fa6e >			  ## download_loop.c:782:24
 1e1f67e:    00 70             	r0 = 0
 1e1f680:    18 02             	[sp+4] = r0
 1e1f682:    ea 08             	r10 = r14
 1e1f684:    00 f6 00 a0       	r0 = [r10 + 0]			  ## download_loop.c:802:28
 1e1f688:    09 f7 08 d0       	r9 = h[r13 + 8] (u)			  ## download_loop.c:793:64
 1e1f68c:    38 02             	[sp+12] = r0			  ## download_loop.c:793:64
 1e1f68e:    24 50             	r4 = h[r0 + 4] (u)			  ## download_loop.c:802:36
 1e1f690:    03 fe 50 99       	r3 = r9 * 80			  ## download_loop.c:793:77
 1e1f694:    30 fc 40 00       	r0 = r3 + 64			  ## download_loop.c:793:47
 1e1f698:    25 04             	r5 = r0.l (u)			  ## download_loop.c:793:47
 1e1f69a:    91 08             	r1 = r9			  ## download_loop.c:823:36
 1e1f69c:    d2 08             	r2 = r13			  ## download_loop.c:823:36
 1e1f69e:    45 f2 37 90       	if (r5 <= r4) goto 110 <active_update_task+0x23E : 1e1f710 >			  ## download_loop.c:823:36
 1e1f6a2:    31 fc 40 02       	r1 = r3 + 576			  ## download_loop.c:805:85
 1e1f6a6:    02 fb 00 fe       	r2 = -512 <bank_code_load_addr+0x1DC808 : 1fffe00 >			  ## download_loop.c:805:85
 1e1f6aa:    51 b5             	r1 &= r2			  ## download_loop.c:805:85
 1e1f6ac:    02 fb f0 01       	r2 = 496 <BTCTLER_CL_RAM_TOTAL+0xC : 1f0 >			  ## download_loop.c:804:34
 1e1f6b0:    20 f0 01 00       	if ((r0 & r2) == 0) goto 2 <active_update_task+0x1E4 : 1e1f6b6 >			  ## download_loop.c:804:34
 1e1f6b4:    10 08             	r0 = r1			  ## download_loop.c:804:17
 1e1f6b6:    26 04             	r6 = r0.l (u)			  ## download_loop.c:807:34
 1e1f6b8:    60 08             	r0 = r6			  ## download_loop.c:807:27
 1e1f6ba:    bf f3 99 81       	call -64718 <zalloc : 1e0f9f0 >			  ## download_loop.c:807:27
 1e1f6be:    05 08             	r5 = r0			  ## download_loop.c:807:27
 1e1f6c0:    05 e0 d5 01       	if (r5 == 0) goto 938 <active_update_task+0x59C : 1e1fa6e >			  ## download_loop.c:807:27
 1e1f6c4:    00 f6 00 a0       	r0 = [r10 + 0]
 1e1f6c8:    38 02             	[sp+12] = r0
 1e1f6ca:    24 50             	r4 = h[r0 + 4] (u)
 1e1f6cc:    64 f2 17 20       	if (r4 >= r6) goto 46 <active_update_task+0x22C : 1e1f6fe >
 1e1f6d0:    0e 70             	r14 = 0
 1e1f6d2:    00 f6 18 81       	r0 = [r8 + 280]			  ## download_loop.c:814:30
 1e1f6d6:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:814:43
 1e1f6d8:    20 05             	r0 = r4.l (u)			  ## download_loop.c:813:42
 1e1f6da:    01 ba             	r1 = r5 + r0			  ## download_loop.c:814:76
 1e1f6dc:    00 70             	r0 = 0			  ## download_loop.c:814:30
 1e1f6de:    02 fb 00 02       	r2 = 512 <BTCTLER_CL_RAM_TOTAL+0x1C : 200 >			  ## download_loop.c:814:30
 1e1f6e2:    83 00             	call r3			  ## download_loop.c:814:30
 1e1f6e4:    41 fb 01 cb       	r1 = r12 + 65536			  ## download_loop.c:814:30
 1e1f6e8:    10 f2 bb 01       	if (r0 == r1) goto 886 <active_update_task+0x590 : 1e1fa62 >			  ## download_loop.c:814:30
 1e1f6ec:    44 fc 00 02       	r4 = r4 + 512			  ## download_loop.c:813:66
 1e1f6f0:    20 05             	r0 = r4.l (u)			  ## download_loop.c:813:44
 1e1f6f2:    60 f2 ee 3f       	if (r0 < r6) goto -36 <active_update_task+0x200 : 1e1f6d2 >			  ## download_loop.c:813:44
 1e1f6f6:    00 f6 00 a0       	r0 = [r10 + 0]
 1e1f6fa:    38 02             	[sp+12] = r0
 1e1f6fc:    24 50             	r4 = h[r0 + 4] (u)
 1e1f6fe:    50 08             	r0 = r5			  ## download_loop.c:819:9
 1e1f700:    d1 08             	r1 = r13			  ## download_loop.c:819:9
 1e1f702:    42 08             	r2 = r4			  ## download_loop.c:819:9
 1e1f704:    97 f3 ee 3b       	call 3045340 <memcpy : 106ee4 >			  ## download_loop.c:819:9
 1e1f708:    01 f7 08 d0       	r1 = h[r13 + 8] (u)			  ## download_loop.c:819:9
 1e1f70c:    1d 02             	[sp+4] = r5			  ## download_loop.c:819:9
 1e1f70e:    52 08             	r2 = r5			  ## download_loop.c:819:9
 1e1f710:    18 22             	if (r1 == 0) goto 48 <active_update_task+0x270 : 1e1f742 >
 1e1f712:    26 fc 40 00       	r6 = r2 + 64
 1e1f716:    05 70             	r5 = 0
 1e1f718:    07 75             	r7 = 80
 1e1f71a:    44 fb 01 cb       	r4 = r12 + 65536
 1e1f71e:    60 05             	r0 = r5.l (u)			  ## download_loop.c:823:17
 1e1f720:    61 08             	r1 = r6			  ## download_loop.c:825:33
 1e1f722:    80 fe 70 10       	r1 += r0 * r7			  ## download_loop.c:825:33
 1e1f726:    02 75             	r2 = 80			  ## download_loop.c:824:9
 1e1f728:    03 70             	r3 = 0			  ## download_loop.c:824:9
 1e1f72a:    0f 02             	[sp] = r7			  ## download_loop.c:824:9
 1e1f72c:    40 08             	r0 = r4			  ## download_loop.c:824:9
 1e1f72e:    5c 16             	call -840 <decode_data_by_user_key : 1e1f3e8 >			  ## download_loop.c:824:9
 1e1f730:    00 f7 08 d0       	r0 = h[r13 + 8] (u)			  ## download_loop.c:823:36
 1e1f734:    15 80             	r5 += 1			  ## download_loop.c:823:51
 1e1f736:    61 05             	r1 = r5.l (u)			  ## download_loop.c:823:51
 1e1f738:    01 f2 f1 3f       	if (r1 < r0) goto -30 <active_update_task+0x24C : 1e1f71e >			  ## download_loop.c:823:5
 1e1f73c:    00 f6 00 a0       	r0 = [r10 + 0]
 1e1f740:    38 02             	[sp+12] = r0
 1e1f742:    0e 70             	r14 = 0
 1e1f744:    30 02             	r0 = [sp+12]
 1e1f746:    0b fc 40 02       	r11 = r0 + 576
 1e1f74a:    1e f9 00 b0       	b[r11 + 0] = r14			  ## download_loop.c:543:35
 1e1f74e:    1e f5 a0 00       	[sp+160] = r14			  ## download_loop.c:544:29
 1e1f752:    1e f5 9c 00       	[sp+156] = r14			  ## download_loop.c:544:29
 1e1f756:    1e f5 98 00       	[sp+152] = r14			  ## download_loop.c:544:29
 1e1f75a:    1e f5 94 00       	[sp+148] = r14			  ## download_loop.c:544:29
 1e1f75e:    c0 ff 74 2f 00 00 	r0 = 12148 <fw_flash_bin_head : 2f74 >
 1e1f764:    01 70             	r1 = 0			  ## download_loop.c:549:5
 1e1f766:    02 fb e0 01       	r2 = 480 <BTCTLER_CL_BSS_SIZE+0x1C : 1e0 >			  ## download_loop.c:549:5
 1e1f76a:    97 f3 c1 3b       	call 3045250 <memset : 106ef0 >			  ## download_loop.c:549:5
 1e1f76e:    1e f9 19 80       	b[r8 + 25] = r14			  ## download_loop.c:550:22
 1e1f772:    60 ff ff 99 9f 00 	if ((r9 & 255) == 0) goto 318 <active_update_task+0x3E4 : 1e1f8b6 >
 1e1f778:    e4 fd 00 09       	r0 = r9.b0 (u)			  ## download_loop.c:861:69
 1e1f77c:    68 02             	[sp+24] = r0
 1e1f77e:    10 02             	r0 = [sp+4]
 1e1f780:    01 20             	if (r0 == 0) goto 2 <active_update_task+0x2B2 : 1e1f784 >
 1e1f782:    0d 08             	r13 = r0			  ## download_loop.c:856:9
 1e1f784:    d7 fc 40 00       	r7 = r13 + 64			  ## download_loop.c:861:55
 1e1f788:    30 02             	r0 = [sp+12]			  ## download_loop.c:552:5
 1e1f78a:    00 fc 04 02       	r0 = r0 + 516			  ## download_loop.c:552:5
 1e1f78e:    48 02             	[sp+16] = r0			  ## download_loop.c:552:5
 1e1f790:    0d 70             	r13 = 0			  ## download_loop.c:552:5
 1e1f792:    0a 70             	r10 = 0			  ## download_loop.c:552:5
 1e1f794:    49 fb 01 cb       	r9 = r12 + 65536			  ## download_loop.c:552:5
 1e1f798:    0f 18             	goto 30 <active_update_task+0x2E6 : 1e1f7b8 >			  ## download_loop.c:552:5
 1e1f79a:    e4 fd 00 1d       	r1 = r13.b0 (u)			  ## download_loop.c:592:36
 1e1f79e:    51 e0 6c 80       	if (r1 > 5) goto 216 <active_update_task+0x3A8 : 1e1f87a >			  ## download_loop.c:592:36
 1e1f7a2:    c0 ff 74 2f 00 00 	r0 = 12148 <fw_flash_bin_head : 2f74 >			  ## download_loop.c:593:17
 1e1f7a8:    02 75             	r2 = 80			  ## download_loop.c:593:17
 1e1f7aa:    80 fe 20 01       	r0 += r1 * r2			  ## download_loop.c:593:17
 1e1f7ae:    71 08             	r1 = r7			  ## download_loop.c:593:17
 1e1f7b0:    97 f3 98 3b       	call 3045168 <memcpy : 106ee4 >			  ## download_loop.c:593:17
 1e1f7b4:    1d 80             	r13 += 1			  ## download_loop.c:594:35
 1e1f7b6:    61 18             	goto 194 <active_update_task+0x3A8 : 1e1f87a >			  ## download_loop.c:594:35
 1e1f7b8:    36 4e             	r6 = [r7 + 12]			  ## download_loop.c:554:127
 1e1f7ba:    74 fc 40 00       	r4 = r7 + 64			  ## download_loop.c:554:64
 1e1f7be:    05 70             	r5 = 0
 1e1f7c0:    28 2c             	if (r6 == 0) goto 80 <active_update_task+0x340 : 1e1f812 >
 1e1f7c2:    bc 08             	r12 = r11
 1e1f7c4:    db 08             	r11 = r13
 1e1f7c6:    09 f6 08 70       	r9 = [r7 + 8]			  ## download_loop.c:554:102
 1e1f7ca:    0d 70             	r13 = 0
 1e1f7cc:    40 02             	r0 = [sp+16]
 1e1f7ce:    08 fc f4 ff       	r8 = r0 + -12
 1e1f7d2:    05 f6 00 80       	r5 = [r8 + 0]			  ## download_loop.c:352:60
 1e1f7d6:    50 08             	r0 = r5			  ## download_loop.c:352:71
 1e1f7d8:    97 f3 90 3b       	call 3045152 <strlen : 106efc >			  ## download_loop.c:352:71
 1e1f7dc:    02 08             	r2 = r0			  ## download_loop.c:352:71
 1e1f7de:    40 08             	r0 = r4			  ## download_loop.c:352:18
 1e1f7e0:    51 08             	r1 = r5			  ## download_loop.c:352:18
 1e1f7e2:    97 f3 83 3b       	call 3045126 <memcmp : 106eec >			  ## download_loop.c:352:18
 1e1f7e6:    07 20             	if (r0 == 0) goto 14 <active_update_task+0x324 : 1e1f7f6 >			  ## download_loop.c:352:18
 1e1f7e8:    1d 80             	r13 += 1			  ## download_loop.c:351:92
 1e1f7ea:    80 fc 24 00       	r0 = r8 + 36			  ## download_loop.c:351:19
 1e1f7ee:    2d e0 ee 9f       	if (r13 <= 2) goto -36 <active_update_task+0x2FC : 1e1f7ce >			  ## download_loop.c:351:19
 1e1f7f2:    05 70             	r5 = 0
 1e1f7f4:    06 18             	goto 12 <active_update_task+0x330 : 1e1f802 >
 1e1f7f6:    05 f6 04 80       	r5 = [r8 + 4]			  ## download_loop.c:353:47
 1e1f7fa:    19 f6 08 80       	[r8 + 8] = r9			  ## download_loop.c:354:51
 1e1f7fe:    16 f6 0c 80       	[r8 + 12] = r6			  ## download_loop.c:355:44
 1e1f802:    c8 ff b0 20 00 00 	r8 = 8368 <gatt_client_conn_handle : 20b0 >
 1e1f808:    c9 ff ff ff 00 00 	r9 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >
 1e1f80e:    bd 08             	r13 = r11
 1e1f810:    cb 08             	r11 = r12
 1e1f812:    52 70             	r2 = 5			  ## download_loop.c:529:14
 1e1f814:    40 08             	r0 = r4			  ## download_loop.c:529:14
 1e1f816:    c1 ff 9b 64 e1 01 	r1 = 31548571 <ufw_flash_file_match_api.match_file_prefix : 1e1649b >			  ## download_loop.c:529:14
 1e1f81c:    97 f3 66 3b       	call 3045068 <memcmp : 106eec >			  ## download_loop.c:529:14
 1e1f820:    17 30             	if (r0 != 0) goto 46 <active_update_task+0x37E : 1e1f850 >			  ## download_loop.c:529:14
 1e1f822:    40 08             	r0 = r4			  ## download_loop.c:523:19
 1e1f824:    97 f3 6a 3b       	call 3045076 <strlen : 106efc >			  ## download_loop.c:523:19
 1e1f828:    00 fc fc 00       	r0 = r0 + 252			  ## download_loop.c:526:32
 1e1f82c:    00 04             	r0 = r0.b0 (u)			  ## download_loop.c:530:48
 1e1f82e:    70 09             	r0 += r7			  ## download_loop.c:530:46
 1e1f830:    00 84             	r0 += 64			  ## download_loop.c:530:46
 1e1f832:    31 60             	r1 = b[r0 + 3] (u)			  ## download_loop.c:530:18
 1e1f834:    22 60             	r2 = b[r0 + 2] (u)			  ## download_loop.c:530:18
 1e1f836:    13 60             	r3 = b[r0 + 1] (u)			  ## download_loop.c:530:18
 1e1f838:    00 60             	r0 = b[r0 + 0] (u)			  ## download_loop.c:530:18
 1e1f83a:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## download_loop.c:530:18
 1e1f83e:    c8 fd 40 03       	r0 <= insert(r3, p:8, l:8)			  ## download_loop.c:530:18
 1e1f842:    d0 fd 80 02       	r0 <= insert(r2, p:16, l:16)			  ## download_loop.c:530:18
 1e1f846:    c1 ff 2e 62 69 6e 	r1 = 1852400174 <uECC_vli_cmp_unsafe+0x58F232 : 69622e >			  ## download_loop.c:529:9
 1e1f84c:    10 f2 a5 0f       	if (r0 == r1) goto -182 <active_update_task+0x2C8 : 1e1f79a >			  ## download_loop.c:529:9
 1e1f850:    82 70             	r2 = 8			  ## download_loop.c:599:25
 1e1f852:    40 08             	r0 = r4			  ## download_loop.c:599:25
 1e1f854:    c1 ff 5a f3 e1 01 	r1 = 31585114 <JL_OTA_LOADER_FILE_NAME : 1e1f35a >			  ## download_loop.c:599:25
 1e1f85a:    97 f3 47 3b       	call 3045006 <memcmp : 106eec >			  ## download_loop.c:599:25
 1e1f85e:    07 20             	if (r0 == 0) goto 14 <active_update_task+0x39C : 1e1f86e >			  ## download_loop.c:599:25
 1e1f860:    00 f9 00 b0       	r0 = b[r11 + 0] (u)			  ## download_loop.c:604:30
 1e1f864:    0a 30             	if (r0 != 0) goto 20 <active_update_task+0x3A8 : 1e1f87a >			  ## download_loop.c:604:30
 1e1f866:    00 70             	r0 = 0			  ## download_loop.c:605:47
 1e1f868:    10 f9 00 b0       	b[r11 + 0] = r0			  ## download_loop.c:605:47
 1e1f86c:    06 18             	goto 12 <active_update_task+0x3A8 : 1e1f87a >			  ## download_loop.c:605:47
 1e1f86e:    30 02             	r0 = [sp+12]			  ## download_loop.c:601:13
 1e1f870:    80 81             	r0 += 24			  ## download_loop.c:601:13
 1e1f872:    02 75             	r2 = 80			  ## download_loop.c:601:13
 1e1f874:    71 08             	r1 = r7			  ## download_loop.c:601:13
 1e1f876:    97 f3 35 3b       	call 3044970 <memcpy : 106ee4 >			  ## download_loop.c:601:13
 1e1f87a:    5e ba             	r14 |= r5			  ## download_loop.c:554:26
 1e1f87c:    1a 80             	r10 += 1			  ## download_loop.c:552:32
 1e1f87e:    e6 fd 00 0a       	r0 = r10.l (u)			  ## download_loop.c:552:32
 1e1f882:    07 85             	r7 += 80			  ## download_loop.c:614:23
 1e1f884:    61 02             	r1 = [sp+24]			  ## download_loop.c:552:5
 1e1f886:    10 f2 97 1f       	if (r0 != r1) goto -210 <active_update_task+0x2E6 : 1e1f7b8 >			  ## download_loop.c:552:5
 1e1f88a:    00 f9 00 b0       	r0 = b[r11 + 0] (u)
 1e1f88e:    1d f9 19 80       	b[r8 + 25] = r13			  ## download_loop.c:617:22
 1e1f892:    16 20             	if (r0 == 0) goto 44 <active_update_task+0x3EE : 1e1f8c0 >			  ## download_loop.c:617:22
 1e1f894:    05 06             	r5 = -32
 1e1f896:    00 4a             	r0 = [r5 + 0]			  ## download_loop.c:621:64
 1e1f898:    c1 ff 0b 5a e1 01 	r1 = 31545867 <update_target_end+0x2B83 : 1e15a0b >			  ## download_loop.c:401:14
 1e1f89e:    72 70             	r2 = 7			  ## download_loop.c:401:14
 1e1f8a0:    97 f3 24 3b       	call 3044936 <memcmp : 106eec >			  ## download_loop.c:401:14
 1e1f8a4:    fc 07             	r12 = -1
 1e1f8a6:    0e 20             	if (r0 == 0) goto 28 <active_update_task+0x3F2 : 1e1f8c4 >
 1e1f8a8:    12 4a             	r2 = [r5 + 4]			  ## download_loop.c:424:51
 1e1f8aa:    39 24             	if (r2 == 0) goto 114 <active_update_task+0x44C : 1e1f91e >			  ## download_loop.c:424:51
 1e1f8ac:    01 f6 18 81       	r1 = [r8 + 280]			  ## download_loop.c:622:38
 1e1f8b0:    40 a9             	r0 = sp + 148			  ## download_loop.c:622:38
 1e1f8b2:    82 00             	call r2			  ## download_loop.c:425:15
 1e1f8b4:    34 18             	goto 104 <active_update_task+0x44C : 1e1f91e >			  ## download_loop.c:425:15
 1e1f8b6:    1e f9 19 80       	b[r8 + 25] = r14			  ## download_loop.c:617:22
 1e1f8ba:    49 fb 01 cb       	r9 = r12 + 65536			  ## download_loop.c:617:22
 1e1f8be:    2f 18             	goto 94 <active_update_task+0x44C : 1e1f91e >			  ## download_loop.c:617:22
 1e1f8c0:    fc 07             	r12 = -1
 1e1f8c2:    2d 18             	goto 90 <active_update_task+0x44C : 1e1f91e >
 1e1f8c4:    00 fb 00 02       	r0 = 512 <BTCTLER_CL_RAM_TOTAL+0x1C : 200 >			  ## download_loop.c:368:20
 1e1f8c8:    bf f3 75 80       	call -65302 <malloc : 1e0f9b6 >			  ## download_loop.c:368:20
 1e1f8cc:    04 08             	r4 = r0			  ## download_loop.c:368:20
 1e1f8ce:    ec 29             	if (r4 == 0) goto -40 <active_update_task+0x3D6 : 1e1f8a8 >
 1e1f8d0:    00 f6 18 81       	r0 = [r8 + 280]			  ## download_loop.c:371:13
 1e1f8d4:    10 20             	if (r0 == 0) goto 32 <active_update_task+0x424 : 1e1f8f6 >			  ## download_loop.c:371:13
 1e1f8d6:    33 40             	r3 = [r0 + 12]			  ## download_loop.c:371:41
 1e1f8d8:    0e 26             	if (r3 == 0) goto 28 <active_update_task+0x424 : 1e1f8f6 >			  ## download_loop.c:371:41
 1e1f8da:    20 40             	r0 = [r0 + 8]			  ## download_loop.c:371:64
 1e1f8dc:    0c 20             	if (r0 == 0) goto 24 <active_update_task+0x424 : 1e1f8f6 >			  ## download_loop.c:371:64
 1e1f8de:    00 70             	r0 = 0			  ## download_loop.c:372:13
 1e1f8e0:    01 70             	r1 = 0			  ## download_loop.c:372:13
 1e1f8e2:    02 70             	r2 = 0			  ## download_loop.c:372:13
 1e1f8e4:    83 00             	call r3			  ## download_loop.c:372:13
 1e1f8e6:    00 f6 18 81       	r0 = [r8 + 280]			  ## download_loop.c:373:13
 1e1f8ea:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:373:26
 1e1f8ec:    00 70             	r0 = 0			  ## download_loop.c:373:13
 1e1f8ee:    02 fb 00 02       	r2 = 512 <BTCTLER_CL_RAM_TOTAL+0x1C : 200 >			  ## download_loop.c:373:13
 1e1f8f2:    41 08             	r1 = r4			  ## download_loop.c:373:13
 1e1f8f4:    83 00             	call r3			  ## download_loop.c:373:13
 1e1f8f6:    40 fc 22 00       	r0 = r4 + 34			  ## download_loop.c:379:45
 1e1f8fa:    e1 71             	r1 = 30			  ## download_loop.c:339:12
 1e1f8fc:    bf f3 55 0d       	call -124246 <CRC16 : 1e013aa >			  ## download_loop.c:339:12
 1e1f900:    90 48             	r0 = [r4 + 36]			  ## download_loop.c:385:43
 1e1f902:    10 f5 94 00       	[sp+148] = r0			  ## download_loop.c:385:20
 1e1f906:    a0 48             	r0 = [r4 + 40]			  ## download_loop.c:386:29
 1e1f908:    10 f5 98 00       	[sp+152] = r0			  ## download_loop.c:386:19
 1e1f90c:    10 59             	r0 = h[r4 + 34] (u)			  ## download_loop.c:387:29
 1e1f90e:    90 f5 9c 00       	h[sp+156] = r0			  ## download_loop.c:387:19
 1e1f912:    f0 48             	r0 = [r4 + 60]			  ## download_loop.c:388:34
 1e1f914:    10 f5 a0 00       	[sp+160] = r0			  ## download_loop.c:388:24
 1e1f918:    40 08             	r0 = r4			  ## download_loop.c:392:9
 1e1f91a:    bf f3 77 80       	call -65298 <free : 1e0fa0c >			  ## download_loop.c:392:9
 1e1f91e:    c0 ff 50 2f 00 00 	r0 = 12112 <update_bss_start : 2f50 >			  ## download_loop.c:864:38
 1e1f924:    05 40             	r5 = [r0 + 0]			  ## download_loop.c:864:38
 1e1f926:    02 f6 1c 81       	r2 = [r8 + 284]			  ## flash_fs_api.c:89:12
 1e1f92a:    44 aa             	r4 = sp + 164			  ## flash_fs_api.c:89:12
 1e1f92c:    01 72             	r1 = 32			  ## flash_fs_api.c:571:5
 1e1f92e:    40 08             	r0 = r4			  ## flash_fs_api.c:571:5
 1e1f930:    bf f3 57 0d       	call -124242 <norflash_read : 1e013e2 >			  ## flash_fs_api.c:571:5
 1e1f934:    00 fd 02 49       	r0 = r4 | 2			  ## flash_fs_api.c:44:42
 1e1f938:    e1 71             	r1 = 30			  ## flash_fs_api.c:44:20
 1e1f93a:    bf f3 36 0d       	call -124308 <CRC16 : 1e013aa >			  ## flash_fs_api.c:44:20
 1e1f93e:    81 f5 a4 00       	r1 = h[sp+164] (u)			  ## flash_fs_api.c:45:15
 1e1f942:    01 f2 08 10       	if (r1 != r0) goto 16 <active_update_task+0x484 : 1e1f956 >
 1e1f946:    c0 f5 b1 00       	r0 = b[sp+177] (u)			  ## flash_fs_api.c:579:42
 1e1f94a:    68 6a             	b[r5 + 6] = r0			  ## flash_fs_api.c:579:29
 1e1f94c:    c1 f5 b0 00       	r1 = b[sp+176] (u)			  ## flash_fs_api.c:582:40
 1e1f950:    79 6a             	b[r5 + 7] = r1			  ## flash_fs_api.c:582:27
 1e1f952:    10 f9 1a 80       	b[r8 + 26] = r0			  ## flash_fs_api.c:585:26
 1e1f956:    c5 ff 50 2f 00 00 	r5 = 12112 <update_bss_start : 2f50 >
 1e1f95c:    04 4a             	r4 = [r5 + 0]			  ## download_loop.c:865:40
 1e1f95e:    00 f6 1c 81       	r0 = [r8 + 284]			  ## flash_fs_api.c:89:12
 1e1f962:    02 fc 60 00       	r2 = r0 + 96			  ## flash_fs_api.c:596:77
 1e1f966:    40 ac             	r0 = sp + 196
 1e1f968:    01 72             	r1 = 32			  ## flash_fs_api.c:601:5
 1e1f96a:    bf f3 3a 0d       	call -124300 <norflash_read : 1e013e2 >			  ## flash_fs_api.c:601:5
 1e1f96e:    00 f5 c8 00       	r0 = [sp+200]			  ## flash_fs_api.c:606:42
 1e1f972:    28 48             	[r4 + 8] = r0			  ## flash_fs_api.c:606:25
 1e1f974:    04 70             	r4 = 0			  ## flash_fs_api.c:606:25
 1e1f976:    fe ef 02 00       	if (r14 == -1) goto 4 <active_update_task+0x4AC : 1e1f97e >			  ## flash_fs_api.c:606:25
 1e1f97a:    15 02             	r5 = [sp+4]
 1e1f97c:    73 18             	goto 230 <active_update_task+0x592 : 1e1fa64 >
 1e1f97e:    00 4a             	r0 = [r5 + 0]			  ## download_loop.c:869:57
 1e1f980:    71 60             	r1 = b[r0 + 7] (u)			  ## download_loop.c:869:95
 1e1f982:    69 02             	[sp+24] = r1			  ## download_loop.c:869:65
 1e1f984:    60 60             	r0 = b[r0 + 6] (u)			  ## download_loop.c:869:65
 1e1f986:    48 02             	[sp+16] = r0			  ## download_loop.c:647:28
 1e1f988:    0d f9 19 80       	r13 = b[r8 + 25] (u)			  ## download_loop.c:647:28
 1e1f98c:    c0 ff 13 5a e1 01 	r0 = 31545875 <update_target_end+0x2B8B : 1e15a13 >			  ## download_loop.c:647:5
 1e1f992:    d1 08             	r1 = r13			  ## download_loop.c:647:5
 1e1f994:    bf f3 99 7b       	call -67790 <printf : 1e0f0ca >			  ## download_loop.c:647:5
 1e1f998:    b4 70             	r4 = 11
 1e1f99a:    fe 07             	r14 = -1
 1e1f99c:    0d e0 ed 0f       	if (r13 == 0) goto -38 <active_update_task+0x4A8 : 1e1f97a >
 1e1f9a0:    00 4a             	r0 = [r5 + 0]			  ## download_loop.c:655:27
 1e1f9a2:    00 40             	r0 = [r0 + 0]			  ## download_loop.c:655:35
 1e1f9a4:    01 f6 1c 81       	r1 = [r8 + 284]			  ## flash_fs_api.c:89:12
 1e1f9a8:    05 fc 00 02       	r5 = r0 + 512			  ## download_loop.c:655:46
 1e1f9ac:    08 d3             	r0 = r1 >> 12			  ## download_loop.c:651:54
 1e1f9ae:    38 02             	[sp+12] = r0			  ## download_loop.c:651:54
 1e1f9b0:    0a 70             	r10 = 0			  ## download_loop.c:651:54
 1e1f9b2:    0c 72             	r12 = 32			  ## download_loop.c:651:54
 1e1f9b4:    00 f6 18 81       	r0 = [r8 + 280]			  ## download_loop.c:664:9
 1e1f9b8:    c1 ff 74 2f 00 00 	r1 = 12148 <fw_flash_bin_head : 2f74 >			  ## download_loop.c:664:9
 1e1f9be:    02 75             	r2 = 80			  ## download_loop.c:664:9
 1e1f9c0:    80 fe 20 1a       	r1 += r10 * r2			  ## download_loop.c:664:9
 1e1f9c4:    22 42             	r2 = [r1 + 8]			  ## download_loop.c:664:67
 1e1f9c6:    33 40             	r3 = [r0 + 12]			  ## download_loop.c:664:22
 1e1f9c8:    00 70             	r0 = 0			  ## download_loop.c:664:9
 1e1f9ca:    01 70             	r1 = 0			  ## download_loop.c:664:9
 1e1f9cc:    83 00             	call r3			  ## download_loop.c:664:9
 1e1f9ce:    00 f6 18 81       	r0 = [r8 + 280]			  ## download_loop.c:665:17
 1e1f9d2:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:665:30
 1e1f9d4:    00 70             	r0 = 0			  ## download_loop.c:665:17
 1e1f9d6:    02 fb 00 02       	r2 = 512 <BTCTLER_CL_RAM_TOTAL+0x1C : 200 >			  ## download_loop.c:665:17
 1e1f9da:    51 08             	r1 = r5			  ## download_loop.c:665:17
 1e1f9dc:    83 00             	call r3			  ## download_loop.c:665:17
 1e1f9de:    90 f2 3e 00       	if (r0 == r9) goto 124 <active_update_task+0x58C : 1e1fa5e >			  ## download_loop.c:665:17
 1e1f9e2:    07 70             	r7 = 0
 1e1f9e4:    54 08             	r4 = r5
 1e1f9e6:    0b 70             	r11 = 0
 1e1f9e8:    03 18             	goto 6 <active_update_task+0x51E : 1e1f9f0 >
 1e1f9ea:    47 08             	r7 = r4
 1e1f9ec:    04 82             	r4 += 32			  ## download_loop.c:676:9
 1e1f9ee:    1b 70             	r11 = 1			  ## download_loop.c:676:9
 1e1f9f0:    02 72             	r2 = 32			  ## download_loop.c:677:13
 1e1f9f2:    03 70             	r3 = 0			  ## download_loop.c:677:13
 1e1f9f4:    1c f5 00 00       	[sp] = r12			  ## download_loop.c:677:13
 1e1f9f8:    90 08             	r0 = r9			  ## download_loop.c:677:13
 1e1f9fa:    41 08             	r1 = r4			  ## download_loop.c:677:13
 1e1f9fc:    f5 14             	call -1558 <decode_data_by_user_key : 1e1f3e8 >			  ## download_loop.c:677:13
 1e1f9fe:    60 ff ff b9 f3 ff 	if ((r11 & 255) == 0) goto -26 <active_update_task+0x518 : 1e1f9ea >			  ## download_loop.c:677:13
 1e1fa04:    06 99             	r6 = r4 + 16			  ## download_loop.c:680:29
 1e1fa06:    d2 70             	r2 = 13			  ## download_loop.c:680:29
 1e1fa08:    60 08             	r0 = r6			  ## download_loop.c:680:29
 1e1fa0a:    c1 ff 4d f3 e1 01 	r1 = 31585101 <JL_APP_CODE0_FILE_NAME : 1e1f34d >			  ## download_loop.c:680:29
 1e1fa10:    97 f3 6c 3a       	call 3044568 <memcmp : 106eec >			  ## download_loop.c:680:29
 1e1fa14:    07 20             	if (r0 == 0) goto 14 <active_update_task+0x552 : 1e1fa24 >			  ## download_loop.c:680:29
 1e1fa16:    1b 80             	r11 += 1			  ## download_loop.c:676:63
 1e1fa18:    e4 fd 00 0b       	r0 = r11.b0 (u)			  ## download_loop.c:676:63
 1e1fa1c:    04 9d             	r4 = r6 + 16			  ## download_loop.c:676:9
 1e1fa1e:    00 e1 e7 3f       	if (r0 < 16) goto -50 <active_update_task+0x51E : 1e1f9f0 >			  ## download_loop.c:676:9
 1e1fa22:    04 70             	r4 = 0
 1e1fa24:    70 08             	r0 = r7			  ## download_loop.c:687:18
 1e1fa26:    bf f3 07 0d       	call -124402 <jl_file_head_valid_check : 1e01438 >			  ## download_loop.c:687:18
 1e1fa2a:    19 30             	if (r0 != 0) goto 50 <active_update_task+0x58C : 1e1fa5e >			  ## download_loop.c:687:18
 1e1fa2c:    40 08             	r0 = r4			  ## download_loop.c:693:18
 1e1fa2e:    bf f3 03 0d       	call -124410 <jl_file_head_valid_check : 1e01438 >			  ## download_loop.c:693:18
 1e1fa32:    15 30             	if (r0 != 0) goto 42 <active_update_task+0x58C : 1e1fa5e >			  ## download_loop.c:693:18
 1e1fa34:    c0 6e             	r0 = b[r7 + 12] (u)			  ## download_loop.c:699:56
 1e1fa36:    61 02             	r1 = [sp+24]			  ## download_loop.c:699:13
 1e1fa38:    10 f2 0e 10       	if (r0 != r1) goto 28 <active_update_task+0x586 : 1e1fa58 >			  ## download_loop.c:699:13
 1e1fa3c:    d0 6e             	r0 = b[r7 + 13] (u)			  ## download_loop.c:704:57
 1e1fa3e:    41 02             	r1 = [sp+16]			  ## download_loop.c:704:13
 1e1fa40:    10 f2 0a 10       	if (r0 != r1) goto 20 <active_update_task+0x586 : 1e1fa58 >			  ## download_loop.c:704:13
 1e1fa44:    10 58             	r0 = h[r4 + 2] (u)			  ## download_loop.c:709:42
 1e1fa46:    01 d2             	r1 = r0 >> 8			  ## download_loop.c:709:70
 1e1fa48:    00 c1             	r0 = r0 << 4			  ## download_loop.c:709:134
 1e1fa4a:    10 09             	r0 += r1			  ## download_loop.c:709:89
 1e1fa4c:    10 81             	r0 += 17			  ## download_loop.c:709:89
 1e1fa4e:    31 02             	r1 = [sp+12]			  ## download_loop.c:710:34
 1e1fa50:    d0 b2             	r0 ^= r1			  ## download_loop.c:710:34
 1e1fa52:    60 ff ff 09 24 03 	if ((r0 & 255) == 0) goto 1608 <active_update_task+0xBCE : 1e200a0 >			  ## download_loop.c:710:34
 1e1fa58:    1a 80             	r10 += 1			  ## download_loop.c:662:31
 1e1fa5a:    da f2 ab 3f       	if (r10 < r13) goto -170 <active_update_task+0x4E2 : 1e1f9b4 >			  ## download_loop.c:662:31
 1e1fa5e:    fc 07             	r12 = -1
 1e1fa60:    15 02             	r5 = [sp+4]
 1e1fa62:    b4 70             	r4 = 11
 1e1fa64:    03 2a             	if (r5 == 0) goto 6 <active_update_task+0x59A : 1e1fa6c >
 1e1fa66:    50 08             	r0 = r5			  ## download_loop.c:877:9
 1e1fa68:    bf f3 d0 7f       	call -65632 <free : 1e0fa0c >			  ## download_loop.c:877:9
 1e1fa6c:    29 28             	if (r4 == 0) goto 82 <active_update_task+0x5EE : 1e1fac0 >
 1e1fa6e:    60 78             	r0 = 134			  ## download_loop.c:2022:9
 1e1fa70:    ae 14             	call -1700 <update_stop : 1e1f3ce >			  ## download_loop.c:2022:9
 1e1fa72:    09 f5 14 00       	r9 = [sp+20]			  ## download_loop.c:2022:9
 1e1fa76:    1e 15             	call -1476 <update_resource_release : 1e1f4b4 >			  ## download_loop.c:2186:5
 1e1fa78:    fc 07             	r12 = -1			  ## download_loop.c:2186:5
 1e1fa7a:    00 f9 18 80       	r0 = b[r8 + 24] (u)			  ## download_loop.c:516:12
 1e1fa7e:    1c f5 1c 00       	[sp+28] = r12			  ## update_main.c:152:18
 1e1fa82:    d0 f5 20 00       	b[sp+32] = r0			  ## update_main.c:153:23
 1e1fa86:    00 f6 58 f0       	r0 = [r15 + 88]			  ## update_main.c:70:15
 1e1fa8a:    04 20             	if (r0 == 0) goto 8 <active_update_task+0x5C2 : 1e1fa94 >			  ## update_main.c:70:15
 1e1fa8c:    61 40             	r1 = [r0 + 24]			  ## update_main.c:70:43
 1e1fa8e:    02 22             	if (r1 == 0) goto 4 <active_update_task+0x5C2 : 1e1fa94 >			  ## update_main.c:70:43
 1e1fa90:    90 08             	r0 = r9			  ## update_main.c:71:9
 1e1fa92:    81 00             	call r1			  ## update_main.c:71:9
 1e1fa94:    03 f6 60 f0       	r3 = [r15 + 96]			  ## update_main.c:161:15
 1e1fa98:    04 26             	if (r3 == 0) goto 8 <active_update_task+0x5D0 : 1e1faa2 >			  ## update_main.c:161:15
 1e1fa9a:    c2 a1             	r2 = sp + 28
 1e1fa9c:    31 70             	r1 = 3			  ## update_main.c:162:9
 1e1fa9e:    90 08             	r0 = r9			  ## update_main.c:162:9
 1e1faa0:    83 00             	call r3			  ## update_main.c:162:9
 1e1faa2:    01 f6 14 81       	r1 = [r8 + 276]			  ## update_main.c:165:5
 1e1faa6:    00 70             	r0 = 0			  ## update_main.c:165:22
 1e1faa8:    c1 85             	r1 += 92			  ## update_main.c:165:22
 1e1faaa:    88 62             	b[r1 + 8] = r0			  ## update_main.c:165:22
 1e1faac:    02 62             	r2 = b[r1 + 0] (u)			  ## update_main.c:86:22
 1e1faae:    06 24             	if (r2 == 0) goto 12 <active_update_task+0x5EA : 1e1fabc >			  ## update_main.c:86:22
 1e1fab0:    08 62             	b[r1 + 0] = r0			  ## update_main.c:87:30
 1e1fab2:    c0 ff f0 59 e1 01 	r0 = 31545840 <update_target_end+0x2B68 : 1e159f0 >			  ## update_main.c:88:9
 1e1fab8:    bf f3 bc 89       	call -60552 <task_kill : 1e10e34 >			  ## update_main.c:88:9
 1e1fabc:    fa 0a             	sp += 500
 1e1fabe:    5f 01             	{pc, r15-r4} = [sp++]			  ## update_main.c:172:1
 1e1fac0:    fe ef 5f 00       	if (r14 == -1) goto 190 <active_update_task+0x6B0 : 1e1fb82 >			  ## download_loop.c:2028:9
 1e1fac4:    04 70             	r4 = 0
 1e1fac6:    15 70             	r5 = 1
 1e1fac8:    06 70             	r6 = 0
 1e1faca:    09 f5 14 00       	r9 = [sp+20]
 1e1face:    27 02             	r7 = [sp+8]
 1e1fad0:    f8 fd 60 05       	r0 = r5 << r6			  ## download_loop.c:1612:32
 1e1fad4:    e0 f0 0c 00       	if ((r0 & r14) == 0) goto 24 <active_update_task+0x61E : 1e1faf0 >			  ## download_loop.c:1612:32
 1e1fad8:    c0 ff 50 2f 00 00 	r0 = 12112 <update_bss_start : 2f50 >			  ## download_loop.c:1613:17
 1e1fade:    00 40             	r0 = [r0 + 0]			  ## download_loop.c:1613:17
 1e1fae0:    40 09             	r0 += r4			  ## download_loop.c:1613:44
 1e1fae2:    01 f6 08 02       	r1 = [r0 + 520]			  ## download_loop.c:1613:44
 1e1fae6:    04 22             	if (r1 == 0) goto 8 <active_update_task+0x61E : 1e1faf0 >			  ## download_loop.c:1613:44
 1e1fae8:    00 fc f8 01       	r0 = r0 + 504			  ## download_loop.c:1614:26
 1e1faec:    81 00             	call r1			  ## download_loop.c:1614:26
 1e1faee:    90 30             	if (r0 != 0) goto 288 <active_update_task+0x73E : 1e1fc10 >			  ## download_loop.c:1614:26
 1e1faf0:    16 80             	r6 += 1			  ## download_loop.c:1611:26
 1e1faf2:    84 81             	r4 += 24			  ## download_loop.c:1611:19
 1e1faf4:    06 e2 ec 3f       	if (r6 < 32) goto -40 <active_update_task+0x5FE : 1e1fad0 >			  ## download_loop.c:1611:19
 1e1faf8:    0d 70             	r13 = 0
 1e1fafa:    0b 70             	r11 = 0
 1e1fafc:    c6 ff 50 2f 00 00 	r6 = 12112 <update_bss_start : 2f50 >
 1e1fb02:    00 4c             	r0 = [r6 + 0]			  ## download_loop.c:2084:41
 1e1fb04:    01 f6 18 81       	r1 = [r8 + 280]			  ## download_loop.c:2084:5
 1e1fb08:    82 40             	r2 = [r0 + 32]			  ## download_loop.c:2084:70
 1e1fb0a:    33 42             	r3 = [r1 + 12]			  ## download_loop.c:2084:18
 1e1fb0c:    00 70             	r0 = 0			  ## download_loop.c:2084:5
 1e1fb0e:    01 70             	r1 = 0			  ## download_loop.c:2084:5
 1e1fb10:    05 70             	r5 = 0			  ## download_loop.c:2084:5
 1e1fb12:    83 00             	call r3			  ## download_loop.c:2084:5
 1e1fb14:    00 4c             	r0 = [r6 + 0]			  ## download_loop.c:2085:39
 1e1fb16:    02 f6 18 81       	r2 = [r8 + 280]			  ## download_loop.c:2085:13
 1e1fb1a:    01 40             	r1 = [r0 + 0]			  ## download_loop.c:2085:47
 1e1fb1c:    23 44             	r3 = [r2 + 8]			  ## download_loop.c:2085:26
 1e1fb1e:    00 70             	r0 = 0			  ## download_loop.c:2085:13
 1e1fb20:    02 fb 00 02       	r2 = 512 <BTCTLER_CL_RAM_TOTAL+0x1C : 200 >			  ## download_loop.c:2085:13
 1e1fb24:    83 00             	call r3			  ## download_loop.c:2085:13
 1e1fb26:    00 4c             	r0 = [r6 + 0]			  ## download_loop.c:2087:37
 1e1fb28:    08 f6 00 00       	r8 = [r0 + 0]			  ## download_loop.c:2087:45
 1e1fb2c:    c6 ff aa f2 e1 01 	r6 = 31584938 <update_loader_match_tab+0x2 : 1e1f2aa >
 1e1fb32:    ee 05             	r14 = r7.l (u)
 1e1fb34:    00 f7 fe 6f       	r0 = h[r6 + -2] (u)			  ## download_loop.c:917:48
 1e1fb38:    e0 f2 05 00       	if (r0 == r14) goto 10 <active_update_task+0x674 : 1e1fb46 >			  ## download_loop.c:917:48
 1e1fb3c:    15 80             	r5 += 1			  ## download_loop.c:916:31
 1e1fb3e:    26 81             	r6 += 18			  ## download_loop.c:916:19
 1e1fb40:    85 e0 f8 9f       	if (r5 <= 8) goto -16 <active_update_task+0x662 : 1e1fb34 >			  ## download_loop.c:916:19
 1e1fb44:    06 70             	r6 = 0
 1e1fb46:    05 70             	r5 = 0
 1e1fb48:    ca ff 54 2f 00 00 	r10 = 12116 <curr_loader_file_head : 2f54 >
 1e1fb4e:    04 f7 00 80       	r4 = h[r8 + 0] (u)			  ## download_loop.c:939:33
 1e1fb52:    87 fc 02 00       	r7 = r8 + 2			  ## download_loop.c:339:12
 1e1fb56:    e1 71             	r1 = 30			  ## download_loop.c:339:12
 1e1fb58:    70 08             	r0 = r7			  ## download_loop.c:339:12
 1e1fb5a:    bf f3 26 0c       	call -124852 <CRC16 : 1e013aa >			  ## download_loop.c:339:12
 1e1fb5e:    04 f2 6c 10       	if (r4 != r0) goto 216 <active_update_task+0x768 : 1e1fc3a >			  ## download_loop.c:339:12
 1e1fb62:    e0 6e             	r0 = b[r7 + 14] (u)			  ## download_loop.c:939:126
 1e1fb64:    6a 20             	if (r0 == 0) goto 212 <active_update_task+0x768 : 1e1fc3a >			  ## download_loop.c:939:126
 1e1fb66:    0c f9 0a 70       	r12 = b[r7 + 10] (u)			  ## download_loop.c:946:53
 1e1fb6a:    e7 80             	r7 += 14			  ## download_loop.c:949:18
 1e1fb6c:    02 71             	r2 = 16			  ## download_loop.c:949:18
 1e1fb6e:    70 08             	r0 = r7			  ## download_loop.c:949:18
 1e1fb70:    61 08             	r1 = r6			  ## download_loop.c:949:18
 1e1fb72:    97 f3 bb 39       	call 3044214 <memcmp : 106eec >			  ## download_loop.c:949:18
 1e1fb76:    59 20             	if (r0 == 0) goto 178 <active_update_task+0x758 : 1e1fc2a >			  ## download_loop.c:949:18
 1e1fb78:    15 80             	r5 += 1			  ## download_loop.c:938:41
 1e1fb7a:    08 9f             	r8 = r7 + 16			  ## download_loop.c:938:5
 1e1fb7c:    95 e0 e7 3f       	if (r5 < 9) goto -50 <active_update_task+0x67C : 1e1fb4e >			  ## download_loop.c:938:5
 1e1fb80:    59 18             	goto 178 <active_update_task+0x762 : 1e1fc34 >			  ## download_loop.c:938:5
 1e1fb82:    cd ff 50 2f 00 00 	r13 = 12112 <update_bss_start : 2f50 >
 1e1fb88:    00 f6 00 d0       	r0 = [r13 + 0]			  ## download_loop.c:2031:45
 1e1fb8c:    01 f6 18 81       	r1 = [r8 + 280]			  ## download_loop.c:2031:9
 1e1fb90:    02 f6 b0 01       	r2 = [r0 + 432]			  ## download_loop.c:2031:72
 1e1fb94:    33 42             	r3 = [r1 + 12]			  ## download_loop.c:2031:22
 1e1fb96:    00 70             	r0 = 0			  ## download_loop.c:2031:9
 1e1fb98:    01 70             	r1 = 0			  ## download_loop.c:2031:9
 1e1fb9a:    04 70             	r4 = 0			  ## download_loop.c:2031:9
 1e1fb9c:    83 00             	call r3			  ## download_loop.c:2031:9
 1e1fb9e:    00 f6 00 d0       	r0 = [r13 + 0]			  ## download_loop.c:2032:43
 1e1fba2:    02 f6 18 81       	r2 = [r8 + 280]			  ## download_loop.c:2032:17
 1e1fba6:    01 40             	r1 = [r0 + 0]			  ## download_loop.c:2032:51
 1e1fba8:    23 44             	r3 = [r2 + 8]			  ## download_loop.c:2032:30
 1e1fbaa:    00 70             	r0 = 0			  ## download_loop.c:2032:17
 1e1fbac:    02 fb 00 02       	r2 = 512 <BTCTLER_CL_RAM_TOTAL+0x1C : 200 >			  ## download_loop.c:2032:17
 1e1fbb0:    83 00             	call r3			  ## download_loop.c:2032:17
 1e1fbb2:    41 fb 01 cb       	r1 = r12 + 65536			  ## download_loop.c:2032:17
 1e1fbb6:    10 f2 31 03       	if (r0 == r1) goto 1634 <active_update_task+0xD4A : 1e2021c >			  ## download_loop.c:2032:17
 1e1fbba:    00 f6 00 d0       	r0 = [r13 + 0]			  ## download_loop.c:2040:42
 1e1fbbe:    07 40             	r7 = [r0 + 0]			  ## download_loop.c:2040:50
 1e1fbc0:    ce ff 00 08 00 00 	r14 = 2048 <report_mmu_tlb_size : 800 >			  ## download_loop.c:2040:50
 1e1fbc6:    0a f7 1c e0       	r10 = h[r14 + 28] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/efuse.c:9:22
 1e1fbca:    e0 fb 04 01       	r0 = sp + 260			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/efuse.c:9:22
 1e1fbce:    06 91             	r6 = r0 + 16
 1e1fbd0:    0c 72             	r12 = 32
 1e1fbd2:    1b 08             	r11 = r1
 1e1fbd4:    09 f5 14 00       	r9 = [sp+20]
 1e1fbd8:    01 bf             	r1 = r7 + r4			  ## download_loop.c:1498:9
 1e1fbda:    e5 fb 04 01       	r5 = sp + 260			  ## download_loop.c:1498:9
 1e1fbde:    02 72             	r2 = 32			  ## download_loop.c:1498:9
 1e1fbe0:    50 08             	r0 = r5			  ## download_loop.c:1498:9
 1e1fbe2:    97 f3 7f 39       	call 3044094 <memcpy : 106ee4 >			  ## download_loop.c:1498:9
 1e1fbe6:    02 72             	r2 = 32			  ## download_loop.c:1499:9
 1e1fbe8:    03 70             	r3 = 0			  ## download_loop.c:1499:9
 1e1fbea:    1c f5 00 00       	[sp] = r12			  ## download_loop.c:1499:9
 1e1fbee:    b0 08             	r0 = r11			  ## download_loop.c:1499:9
 1e1fbf0:    51 08             	r1 = r5			  ## download_loop.c:1499:9
 1e1fbf2:    bf f3 f9 fb       	call -2062 <decode_data_by_user_key : 1e1f3e8 >			  ## download_loop.c:1499:9
 1e1fbf6:    d2 70             	r2 = 13			  ## download_loop.c:1500:18
 1e1fbf8:    60 08             	r0 = r6			  ## download_loop.c:1500:18
 1e1fbfa:    c1 ff 4d f3 e1 01 	r1 = 31585101 <JL_APP_CODE0_FILE_NAME : 1e1f34d >			  ## download_loop.c:1500:18
 1e1fc00:    97 f3 74 39       	call 3044072 <memcmp : 106eec >			  ## download_loop.c:1500:18
 1e1fc04:    84 20             	if (r0 == 0) goto 264 <active_update_task+0x83C : 1e1fd0e >			  ## download_loop.c:1500:18
 1e1fc06:    04 82             	r4 += 32			  ## download_loop.c:1497:48
 1e1fc08:    09 ff ff 41 e5 ff 	if (r4 <= 511) goto -54 <active_update_task+0x706 : 1e1fbd8 >
 1e1fc0e:    d5 18             	goto 426 <active_update_task+0x8E8 : 1e1fdba >
 1e1fc10:    c6 ff 50 2f 00 00 	r6 = 12112 <update_bss_start : 2f50 >
 1e1fc16:    00 4c             	r0 = [r6 + 0]			  ## download_loop.c:1617:32
 1e1fc18:    40 09             	r0 += r4			  ## download_loop.c:1617:59
 1e1fc1a:    00 f9 0c 02       	r0 = b[r0 + 524] (u)			  ## download_loop.c:1617:59
 1e1fc1e:    0d 70             	r13 = 0			  ## download_loop.c:1617:59
 1e1fc20:    0b 70             	r11 = 0			  ## download_loop.c:1617:59
 1e1fc22:    c0 e0 6e 1f       	if (r0 != 12) goto -292 <active_update_task+0x630 : 1e1fb02 >			  ## download_loop.c:1617:59
 1e1fc26:    10 70             	r0 = 1			  ## download_loop.c:2065:13
 1e1fc28:    b8 1a             	goto 1392 <active_update_task+0xCC8 : 1e2019a >			  ## download_loop.c:2065:13
 1e1fc2a:    02 72             	r2 = 32			  ## download_loop.c:951:13
 1e1fc2c:    a0 08             	r0 = r10			  ## download_loop.c:951:13
 1e1fc2e:    81 08             	r1 = r8			  ## download_loop.c:951:13
 1e1fc30:    97 f3 58 39       	call 3044016 <memcpy : 106ee4 >			  ## download_loop.c:951:13
 1e1fc34:    40 05             	r0 = r5.b0 (u)
 1e1fc36:    90 e0 07 10       	if (r0 != 9) goto 14 <active_update_task+0x776 : 1e1fc48 >
 1e1fc3a:    60 78             	r0 = 134			  ## download_loop.c:2089:9
 1e1fc3c:    bf f3 c7 fb       	call -2162 <update_stop : 1e1f3ce >			  ## download_loop.c:2089:9
 1e1fc40:    c8 ff b0 20 00 00 	r8 = 8368 <gatt_client_conn_handle : 20b0 >
 1e1fc46:    d3 1c             	goto -1626 <active_update_task+0x11C : 1e1f5ee >
 1e1fc48:    07 f6 08 a0       	r7 = [r10 + 8]			  ## download_loop.c:2102:82
 1e1fc4c:    00 70             	r0 = 0
 1e1fc4e:    10 f5 90 01       	[sp+400] = r0			  ## flash_fs_api.c:372:20
 1e1fc52:    10 f5 8c 01       	[sp+396] = r0			  ## flash_fs_api.c:372:20
 1e1fc56:    10 f5 88 01       	[sp+392] = r0			  ## flash_fs_api.c:372:20
 1e1fc5a:    10 f5 84 01       	[sp+388] = r0			  ## flash_fs_api.c:372:20
 1e1fc5e:    c0 ff 02 56 04 40 	r0 = 1074025986 <text_size+0x24752 : 45602 >			  ## flash_fs_api.c:373:5
 1e1fc64:    e1 fb 84 01       	r1 = sp + 388			  ## flash_fs_api.c:373:5
 1e1fc68:    bf f3 f5 0b       	call -124950 <norflash_ioctl : 1e01456 >			  ## flash_fs_api.c:373:5
 1e1fc6c:    05 f5 90 01       	r5 = [sp+400]			  ## flash_fs_api.c:380:62
 1e1fc70:    04 f5 88 01       	r4 = [sp+392]			  ## flash_fs_api.c:380:49
 1e1fc74:    e1 fb e4 01       	r1 = sp + 484
 1e1fc78:    70 76             	r0 = 103			  ## flash_fs_api.c:272:5
 1e1fc7a:    bf f3 ec 0b       	call -124968 <norflash_ioctl : 1e01456 >			  ## flash_fs_api.c:272:5
 1e1fc7e:    0a f5 e4 01       	r10 = [sp+484]			  ## flash_fs_api.c:274:12
 1e1fc82:    d0 08             	r0 = r13			  ## flash_fs_api.c:292:29
 1e1fc84:    bf f3 7e 0c       	call -124676 <__jl_fs_sector_align : 1e01584 >			  ## flash_fs_api.c:292:29
 1e1fc88:    d6 08             	r6 = r13			  ## flash_fs_api.c:292:29
 1e1fc8a:    08 08             	r8 = r0			  ## flash_fs_api.c:292:29
 1e1fc8c:    40 08             	r0 = r4			  ## flash_fs_api.c:293:31
 1e1fc8e:    bf f3 79 0c       	call -124686 <__jl_fs_sector_align : 1e01584 >			  ## flash_fs_api.c:293:31
 1e1fc92:    68 02             	[sp+24] = r0			  ## flash_fs_api.c:293:31
 1e1fc94:    70 fc 20 01       	r0 = r7 + 288			  ## flash_fs_api.c:294:33
 1e1fc98:    bf f3 74 0c       	call -124696 <__jl_fs_sector_align : 1e01584 >			  ## flash_fs_api.c:294:33
 1e1fc9c:    03 08             	r3 = r0			  ## flash_fs_api.c:294:33
 1e1fc9e:    c0 ff 30 5a e1 01 	r0 = 31545904 <update_target_end+0x2BA8 : 1e15a30 >			  ## flash_fs_api.c:295:5
 1e1fca4:    02 fb 00 01       	r2 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## flash_fs_api.c:295:5
 1e1fca8:    3f 02             	[sp+12] = r7			  ## flash_fs_api.c:295:5
 1e1fcaa:    71 08             	r1 = r7			  ## flash_fs_api.c:295:5
 1e1fcac:    37 08             	r7 = r3			  ## flash_fs_api.c:295:5
 1e1fcae:    bf f3 0c 7a       	call -68584 <printf : 1e0f0ca >			  ## flash_fs_api.c:295:5
 1e1fcb2:    80 fb b0 06       	r0 = r6 + r11			  ## flash_fs_api.c:306:45
 1e1fcb6:    48 02             	[sp+16] = r0			  ## flash_fs_api.c:304:47
 1e1fcb8:    02 bb             	r2 = r5 + r4			  ## flash_fs_api.c:304:47
 1e1fcba:    80 fb 80 0b       	r0 = r11 + r8			  ## flash_fs_api.c:292:29
 1e1fcbe:    c1 ff ff ff 01 00 	r1 = 131071 <_IRQ_MEM_ADDR+0x100FF : 1ffff >			  ## flash_fs_api.c:292:29
 1e1fcc4:    10 09             	r0 += r1			  ## flash_fs_api.c:292:29
 1e1fcc6:    c3 ff 00 00 fe ff 	r3 = 4294836224 <bank_code_load_addr+0x1BCA08 : 1fe0000 >			  ## flash_fs_api.c:292:29
 1e1fccc:    50 b7             	r0 &= r3			  ## flash_fs_api.c:292:29
 1e1fcce:    66 02             	r6 = [sp+24]			  ## flash_fs_api.c:293:31
 1e1fcd0:    65 09             	r5 += r6			  ## flash_fs_api.c:293:31
 1e1fcd2:    51 09             	r1 += r5			  ## flash_fs_api.c:293:31
 1e1fcd4:    51 b7             	r1 &= r3			  ## flash_fs_api.c:293:31
 1e1fcd6:    10 f2 01 30       	if (r0 < r1) goto 2 <active_update_task+0x80A : 1e1fcdc >
 1e1fcda:    42 02             	r2 = [sp+16]			  ## flash_fs_api.c:302:9
 1e1fcdc:    76 08             	r6 = r7
 1e1fcde:    a3 b5             	r3 = r2 - r6
 1e1fce0:    d2 08             	r2 = r13			  ## flash_fs_api.c:299:31
 1e1fce2:    24 f2 01 30       	if (r4 < r2) goto 2 <active_update_task+0x816 : 1e1fce8 >			  ## flash_fs_api.c:299:31
 1e1fce6:    42 08             	r2 = r4			  ## flash_fs_api.c:299:31
 1e1fce8:    65 fb 02 6b       	r5 = 131072 - r6			  ## flash_fs_api.c:312:53
 1e1fcec:    0b ba             	r11 = r5 + r0			  ## flash_fs_api.c:312:71
 1e1fcee:    c8 ff b0 20 00 00 	r8 = 8368 <gatt_client_conn_handle : 20b0 >
 1e1fcf4:    23 f2 01 30       	if (r3 < r2) goto 2 <active_update_task+0x828 : 1e1fcfa >
 1e1fcf8:    3b 08             	r11 = r3			  ## flash_fs_api.c:310:9
 1e1fcfa:    a0 f2 01 30       	if (r0 < r10) goto 2 <active_update_task+0x82E : 1e1fd00 >
 1e1fcfe:    3b 08             	r11 = r3			  ## flash_fs_api.c:310:9
 1e1fd00:    a1 f2 01 30       	if (r1 < r10) goto 2 <active_update_task+0x834 : 1e1fd06 >
 1e1fd04:    3b 08             	r11 = r3			  ## flash_fs_api.c:310:9
 1e1fd06:    a0 f2 5a 90       	if (r0 <= r10) goto 180 <active_update_task+0x8EC : 1e1fdbe >			  ## flash_fs_api.c:321:9
 1e1fd0a:    10 78             	r0 = 129			  ## download_loop.c:2111:13
 1e1fd0c:    6f 1c             	goto -1826 <active_update_task+0x11A : 1e1f5ec >			  ## download_loop.c:2111:13
 1e1fd0e:    00 f6 00 d0       	r0 = [r13 + 0]			  ## download_loop.c:1514:28
 1e1fd12:    01 f6 18 81       	r1 = [r8 + 280]			  ## download_loop.c:1515:5
 1e1fd16:    02 f6 b0 01       	r2 = [r0 + 432]			  ## download_loop.c:1515:101
 1e1fd1a:    03 f5 08 01       	r3 = [sp+264]			  ## download_loop.c:1501:13
 1e1fd1e:    04 40             	r4 = [r0 + 0]			  ## download_loop.c:1514:36
 1e1fd20:    35 42             	r5 = [r1 + 12]			  ## download_loop.c:1515:18
 1e1fd22:    32 09             	r2 += r3			  ## download_loop.c:1515:72
 1e1fd24:    00 70             	r0 = 0			  ## download_loop.c:1515:5
 1e1fd26:    01 70             	r1 = 0			  ## download_loop.c:1515:5
 1e1fd28:    06 70             	r6 = 0			  ## download_loop.c:1515:5
 1e1fd2a:    85 00             	call r5			  ## download_loop.c:1515:5
 1e1fd2c:    00 f6 18 81       	r0 = [r8 + 280]			  ## download_loop.c:1516:5
 1e1fd30:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:1516:18
 1e1fd32:    4d fc 00 02       	r13 = r4 + 512			  ## download_loop.c:1514:47
 1e1fd36:    00 70             	r0 = 0			  ## download_loop.c:1516:5
 1e1fd38:    02 fb 00 02       	r2 = 512 <BTCTLER_CL_RAM_TOTAL+0x1C : 200 >			  ## download_loop.c:1516:5
 1e1fd3c:    d1 08             	r1 = r13			  ## download_loop.c:1516:5
 1e1fd3e:    83 00             	call r3			  ## download_loop.c:1516:5
 1e1fd40:    45 ae             	r5 = sp + 228			  ## download_loop.c:1516:5
 1e1fd42:    02 72             	r2 = 32			  ## download_loop.c:1518:5
 1e1fd44:    0b 72             	r11 = 32			  ## download_loop.c:1518:5
 1e1fd46:    50 08             	r0 = r5			  ## download_loop.c:1518:5
 1e1fd48:    d1 08             	r1 = r13			  ## download_loop.c:1518:5
 1e1fd4a:    97 f3 cb 38       	call 3043734 <memcpy : 106ee4 >			  ## download_loop.c:1518:5
 1e1fd4e:    02 72             	r2 = 32			  ## download_loop.c:1519:5
 1e1fd50:    03 70             	r3 = 0			  ## download_loop.c:1519:5
 1e1fd52:    1b f5 00 00       	[sp] = r11			  ## download_loop.c:1519:5
 1e1fd56:    a0 08             	r0 = r10			  ## download_loop.c:1519:5
 1e1fd58:    51 08             	r1 = r5			  ## download_loop.c:1519:5
 1e1fd5a:    bf f3 45 fb       	call -2422 <decode_data_by_user_key : 1e1f3e8 >			  ## download_loop.c:1519:5
 1e1fd5e:    00 fd 02 59       	r0 = r5 | 2			  ## download_loop.c:1521:58
 1e1fd62:    e1 71             	r1 = 30			  ## download_loop.c:339:12
 1e1fd64:    bf f3 21 0b       	call -125374 <CRC16 : 1e013aa >			  ## download_loop.c:339:12
 1e1fd68:    81 f5 e4 00       	r1 = h[sp+228] (u)			  ## download_loop.c:1522:31
 1e1fd6c:    01 f2 25 10       	if (r1 != r0) goto 74 <active_update_task+0x8E8 : 1e1fdba >
 1e1fd70:    04 f7 1c e0       	r4 = h[r14 + 28] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/efuse.c:9:22
 1e1fd74:    e0 fb 24 01       	r0 = sp + 292			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/efuse.c:9:22
 1e1fd78:    07 91             	r7 = r0 + 16
 1e1fd7a:    ce ff 4a f3 e1 01 	r14 = 31585098 <JL_RESERVED_VM_FILE_NAME : 1e1f34a >
 1e1fd80:    80 fb 60 1d       	r1 = r13 + r6			  ## download_loop.c:1463:9
 1e1fd84:    e5 fb 24 01       	r5 = sp + 292			  ## download_loop.c:1463:9
 1e1fd88:    02 72             	r2 = 32			  ## download_loop.c:1463:9
 1e1fd8a:    50 08             	r0 = r5			  ## download_loop.c:1463:9
 1e1fd8c:    97 f3 aa 38       	call 3043668 <memcpy : 106ee4 >			  ## download_loop.c:1463:9
 1e1fd90:    02 72             	r2 = 32			  ## download_loop.c:1464:9
 1e1fd92:    1b f5 00 00       	[sp] = r11			  ## download_loop.c:1464:9
 1e1fd96:    40 08             	r0 = r4			  ## download_loop.c:1464:9
 1e1fd98:    51 08             	r1 = r5			  ## download_loop.c:1464:9
 1e1fd9a:    63 08             	r3 = r6			  ## download_loop.c:1464:9
 1e1fd9c:    bf f3 24 fb       	call -2488 <decode_data_by_user_key : 1e1f3e8 >			  ## download_loop.c:1464:9
 1e1fda0:    32 70             	r2 = 3			  ## download_loop.c:1466:18
 1e1fda2:    70 08             	r0 = r7			  ## download_loop.c:1466:18
 1e1fda4:    e1 08             	r1 = r14			  ## download_loop.c:1466:18
 1e1fda6:    97 f3 a1 38       	call 3043650 <memcmp : 106eec >			  ## download_loop.c:1466:18
 1e1fdaa:    00 e0 8a 01       	if (r0 == 0) goto 788 <active_update_task+0xBF0 : 1e200c2 >			  ## download_loop.c:1466:13
 1e1fdae:    06 82             	r6 += 32			  ## download_loop.c:1462:48
 1e1fdb0:    03 ff 00 62 e5 ff 	if (r6 < 512) goto -54 <active_update_task+0x8AE : 1e1fd80 >
 1e1fdb6:    60 78             	r0 = 134			  ## download_loop.c:2050:13
 1e1fdb8:    19 1c             	goto -1998 <active_update_task+0x11A : 1e1f5ec >			  ## download_loop.c:2050:13
 1e1fdba:    10 70             	r0 = 1			  ## download_loop.c:2042:13
 1e1fdbc:    17 1c             	goto -2002 <active_update_task+0x11A : 1e1f5ec >			  ## download_loop.c:2042:13
 1e1fdbe:    2b f2 07 20       	if (r11 >= r2) goto 14 <active_update_task+0x8FE : 1e1fdd0 >			  ## flash_fs_api.c:327:13
 1e1fdc2:    4b f2 14 3c       	if (r11 < r4) goto -2008 <active_update_task+0x11C : 1e1f5ee >
 1e1fdc6:    fc 07             	r12 = -1
 1e1fdc8:    db f2 12 3c       	if (r11 < r13) goto -2012 <active_update_task+0x11E : 1e1f5f0 >
 1e1fdcc:    20 78             	r0 = 130			  ## download_loop.c:2108:13
 1e1fdce:    e5 19             	goto 970 <active_update_task+0xCC8 : 1e2019a >			  ## download_loop.c:2108:13
 1e1fdd0:    04 f5 88 01       	r4 = [sp+392]			  ## flash_fs_api.c:435:25
 1e1fdd4:    40 08             	r0 = r4			  ## flash_fs_api.c:437:21
 1e1fdd6:    bf f3 93 0c       	call -124634 <flash_erase_by_first_unit : 1e01700 >			  ## flash_fs_api.c:437:21
 1e1fdda:    40 09             	r0 += r4			  ## flash_fs_api.c:446:44
 1e1fddc:    b4 08             	r4 = r11			  ## flash_fs_api.c:447:22
 1e1fdde:    04 f2 01 80       	if (r4 > r0) goto 2 <active_update_task+0x912 : 1e1fde4 >
 1e1fde2:    04 08             	r4 = r0			  ## flash_fs_api.c:447:22
 1e1fde4:    40 08             	r0 = r4			  ## flash_fs_api.c:449:21
 1e1fde6:    bf f3 8b 0c       	call -124650 <flash_erase_by_first_unit : 1e01700 >			  ## flash_fs_api.c:449:21
 1e1fdea:    80 fb 60 ab       	r10 = r11 + r6			  ## flash_fs_api.c:451:56
 1e1fdee:    a5 fc 00 f0       	r5 = r10 + -4096			  ## flash_fs_api.c:451:74
 1e1fdf2:    07 08             	r7 = r0			  ## flash_fs_api.c:449:21
 1e1fdf4:    01 fb 00 10       	r1 = 4096 <sys_clock_limit+0x44 : 1000 >			  ## flash_fs_api.c:451:9
 1e1fdf8:    50 08             	r0 = r5			  ## flash_fs_api.c:451:9
 1e1fdfa:    bf f3 fa 0b       	call -124940 <flash_erase_by_blcok_n_sector : 1e015f2 >			  ## flash_fs_api.c:451:9
 1e1fdfe:    c0 b9             	r0 = r4 + r7			  ## flash_fs_api.c:450:42
 1e1fe00:    a1 08             	r1 = r10			  ## flash_fs_api.c:453:27
 1e1fe02:    50 f2 01 80       	if (r0 > r5) goto 2 <active_update_task+0x936 : 1e1fe08 >			  ## flash_fs_api.c:453:27
 1e1fe06:    01 08             	r1 = r0			  ## flash_fs_api.c:453:27
 1e1fe08:    c0 ff 50 2f 00 00 	r0 = 12112 <update_bss_start : 2f50 >			  ## download_loop.c:2233:5
 1e1fe0e:    00 40             	r0 = [r0 + 0]			  ## download_loop.c:2233:5
 1e1fe10:    39 40             	[r0 + 12] = r1			  ## download_loop.c:2233:29
 1e1fe12:    61 fc 00 f0       	r1 = r6 + -4096			  ## flash_fs_api.c:452:81
 1e1fe16:    1b f6 10 00       	[r0 + 16] = r11			  ## download_loop.c:2234:31
 1e1fe1a:    28 ff 10 6a 01 00 	if (r6 > 4096) goto 2 <active_update_task+0x950 : 1e1fe22 >			  ## download_loop.c:2234:31
 1e1fe20:    01 70             	r1 = 0			  ## flash_fs_api.c:452:25
 1e1fe22:    59 40             	[r0 + 20] = r1			  ## download_loop.c:2235:30
 1e1fe24:    c0 ff ff ff 00 00 	r0 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## download_loop.c:2235:30
 1e1fe2a:    01 08             	r1 = r0			  ## download_loop.c:2235:30
 1e1fe2c:    91 f5 66 01       	h[sp+358] = r1			  ## flash_fs_api.c:466:21
 1e1fe30:    1b f5 68 01       	[sp+360] = r11			  ## flash_fs_api.c:467:21
 1e1fe34:    30 02             	r0 = [sp+12]			  ## flash_fs_api.c:468:33
 1e1fe36:    00 82             	r0 += 32			  ## flash_fs_api.c:468:33
 1e1fe38:    10 f5 6c 01       	[sp+364] = r0			  ## flash_fs_api.c:468:20
 1e1fe3c:    dc f5 70 01       	b[sp+368] = r12			  ## flash_fs_api.c:469:22
 1e1fe40:    f0 7f             	r0 = 255			  ## flash_fs_api.c:469:22
 1e1fe42:    d0 f5 71 01       	b[sp+369] = r0			  ## flash_fs_api.c:470:16
 1e1fe46:    91 f5 72 01       	h[sp+370] = r1			  ## flash_fs_api.c:471:19
 1e1fe4a:    e4 fb 64 01       	r4 = sp + 356			  ## flash_fs_api.c:471:19
 1e1fe4e:    00 99             	r0 = r4 + 16			  ## flash_fs_api.c:473:5
 1e1fe50:    c1 ff 65 5a e1 01 	r1 = 31545957 <update_target_end+0x2BDD : 1e15a65 >			  ## flash_fs_api.c:473:5
 1e1fe56:    02 71             	r2 = 16			  ## flash_fs_api.c:473:5
 1e1fe58:    97 f3 44 38       	call 3043464 <memcpy : 106ee4 >			  ## flash_fs_api.c:473:5
 1e1fe5c:    00 fd 02 49       	r0 = r4 | 2			  ## flash_fs_api.c:466:10
 1e1fe60:    e1 71             	r1 = 30			  ## flash_fs_api.c:474:19
 1e1fe62:    bf f3 a2 0a       	call -125628 <CRC16 : 1e013aa >			  ## flash_fs_api.c:474:19
 1e1fe66:    90 f5 64 01       	h[sp+356] = r0			  ## flash_fs_api.c:474:17
 1e1fe6a:    02 72             	r2 = 32			  ## flash_fs_api.c:476:10
 1e1fe6c:    40 08             	r0 = r4			  ## flash_fs_api.c:476:10
 1e1fe6e:    b1 08             	r1 = r11			  ## flash_fs_api.c:476:10
 1e1fe70:    bf f3 90 0c       	call -124640 <sfc_write : 1e01794 >			  ## flash_fs_api.c:476:10
 1e1fe74:    01 70             	r1 = 0			  ## flash_fs_api.c:480:5
 1e1fe76:    02 72             	r2 = 32			  ## flash_fs_api.c:480:5
 1e1fe78:    40 08             	r0 = r4			  ## flash_fs_api.c:480:5
 1e1fe7a:    97 f3 39 38       	call 3043442 <memset : 106ef0 >			  ## flash_fs_api.c:480:5
 1e1fe7e:    02 72             	r2 = 32			  ## flash_fs_api.c:481:5
 1e1fe80:    40 08             	r0 = r4			  ## flash_fs_api.c:481:5
 1e1fe82:    b1 08             	r1 = r11			  ## flash_fs_api.c:481:5
 1e1fe84:    bf f3 8d 0c       	call -124646 <sfc_read : 1e017a2 >			  ## flash_fs_api.c:481:5
 1e1fe88:    a7 fc 00 ff       	r7 = r10 + -256			  ## flash_fs_api.c:489:61
 1e1fe8c:    c0 ff 70 5a e1 01 	r0 = 31545968 <update_target_end+0x2BE8 : 1e15a70 >			  ## flash_fs_api.c:490:9
 1e1fe92:    71 08             	r1 = r7			  ## flash_fs_api.c:490:9
 1e1fe94:    62 08             	r2 = r6			  ## flash_fs_api.c:490:9
 1e1fe96:    bf f3 18 79       	call -69072 <printf : 1e0f0ca >			  ## flash_fs_api.c:490:9
 1e1fe9a:    e4 fb 94 01       	r4 = sp + 404			  ## flash_fs_api.c:490:9
 1e1fe9e:    f1 7f             	r1 = 255			  ## flash_fs_api.c:494:5
 1e1fea0:    02 75             	r2 = 80			  ## flash_fs_api.c:494:5
 1e1fea2:    40 08             	r0 = r4			  ## flash_fs_api.c:494:5
 1e1fea4:    97 f3 24 38       	call 3043400 <memset : 106ef0 >			  ## flash_fs_api.c:494:5
 1e1fea8:    1b f5 dc 01       	[sp+476] = r11			  ## flash_fs_api.c:495:30
 1e1feac:    25 02             	r5 = [sp+8]			  ## flash_fs_api.c:495:30
 1e1feae:    95 f5 96 01       	h[sp+406] = r5			  ## flash_fs_api.c:496:31
 1e1feb2:    c0 ff 9a 5a e1 01 	r0 = 31546010 <update_target_end+0x2C12 : 1e15a9a >			  ## flash_fs_api.c:497:5
 1e1feb8:    b1 08             	r1 = r11			  ## flash_fs_api.c:497:5
 1e1feba:    e2 08             	r2 = r14			  ## flash_fs_api.c:497:5
 1e1febc:    bf f3 05 79       	call -69110 <printf : 1e0f0ca >			  ## flash_fs_api.c:497:5
 1e1fec0:    01 75             	r1 = 80			  ## flash_fs_api.c:498:32
 1e1fec2:    40 08             	r0 = r4			  ## flash_fs_api.c:498:32
 1e1fec4:    6f 02             	[sp+24] = r7			  ## flash_fs_api.c:498:32
 1e1fec6:    72 08             	r2 = r7			  ## flash_fs_api.c:498:32
 1e1fec8:    bf f3 2d 0c       	call -124838 <norflash_write : 1e01726 >			  ## flash_fs_api.c:498:32
 1e1fecc:    00 e5 05 00       	if (r0 == 80) goto 10 <active_update_task+0xA08 : 1e1feda >
 1e1fed0:    c0 ff 60 67 e1 01 	r0 = 31549280 <gpio_regs+0x2A4 : 1e16760 >			  ## flash_fs_api.c:499:9
 1e1fed6:    bf f3 4e 7a       	call -68452 <puts : 1e0f376 >			  ## flash_fs_api.c:499:9
 1e1feda:    c7 ff 50 2f 00 00 	r7 = 12112 <update_bss_start : 2f50 >
 1e1fee0:    00 4e             	r0 = [r7 + 0]			  ## download_loop.c:2120:35
 1e1fee2:    86 40             	r6 = [r0 + 32]			  ## download_loop.c:2120:64
 1e1fee4:    21 70             	r1 = 2			  ## download_loop.c:2122:19
 1e1fee6:    d1 f5 30 00       	b[sp+48] = r1			  ## download_loop.c:2122:19
 1e1feea:    00 f9 40 02       	r0 = b[r0 + 576] (u)			  ## download_loop.c:2125:17
 1e1feee:    c4 ff 54 2f 00 00 	r4 = 12116 <curr_loader_file_head : 2f54 >			  ## download_loop.c:2125:17
 1e1fef4:    0c f6 04 40       	r12 = [r4 + 4]			  ## download_loop.c:2120:96
 1e1fef8:    0e 20             	if (r0 == 0) goto 28 <active_update_task+0xA44 : 1e1ff16 >			  ## download_loop.c:2120:96
 1e1fefa:    00 fb 09 5a       	r0 = 23049 <report_overlay_end+0x6C1 : 5a09 >			  ## download_loop.c:2126:33
 1e1fefe:    05 f2 03 00       	if (r5 == r0) goto 6 <active_update_task+0xA36 : 1e1ff08 >			  ## download_loop.c:2126:33
 1e1ff02:    c0 8f             	r0 += -4
 1e1ff04:    05 f2 07 10       	if (r5 != r0) goto 14 <active_update_task+0xA44 : 1e1ff16 >
 1e1ff08:    20 70             	r0 = 2			  ## download_loop.c:2128:35
 1e1ff0a:    d0 f5 30 00       	b[sp+48] = r0			  ## download_loop.c:2128:35
 1e1ff0e:    00 a3             	r0 = sp + 48
 1e1ff10:    01 70             	r1 = 0			  ## download_loop.c:2129:13
 1e1ff12:    bf f3 c4 fa       	call -2680 <update_notify_content_size : 1e1f49e >			  ## download_loop.c:2129:13
 1e1ff16:    21 48             	r1 = [r4 + 8]			  ## download_loop.c:2141:60
 1e1ff18:    00 70             	r0 = 0			  ## download_loop.c:2141:5
 1e1ff1a:    bf f3 c0 fa       	call -2688 <update_notify_content_size : 1e1f49e >			  ## download_loop.c:2141:5
 1e1ff1e:    25 48             	r5 = [r4 + 8]			  ## download_loop.c:2146:50
 1e1ff20:    00 fb 00 02       	r0 = 512 <BTCTLER_CL_RAM_TOTAL+0x1C : 200 >			  ## download_loop.c:1267:20
 1e1ff24:    bf f3 47 7d       	call -66930 <malloc : 1e0f9b6 >			  ## download_loop.c:1267:20
 1e1ff28:    0d 08             	r13 = r0			  ## download_loop.c:1267:20
 1e1ff2a:    00 e0 a4 0d       	if (r0 == 0) goto -1208 <active_update_task+0x5A4 : 1e1fa76 >
 1e1ff2e:    00 f6 18 81       	r0 = [r8 + 280]			  ## download_loop.c:1208:5
 1e1ff32:    33 40             	r3 = [r0 + 12]			  ## download_loop.c:1208:18
 1e1ff34:    1b f5 10 00       	[sp+16] = r11			  ## download_loop.c:1208:18
 1e1ff38:    ba fc 20 00       	r10 = r11 + 32			  ## flash_fs_api.c:485:41
 1e1ff3c:    80 fb 60 2c       	r2 = r12 + r6			  ## download_loop.c:2120:72
 1e1ff40:    00 70             	r0 = 0			  ## download_loop.c:1208:5
 1e1ff42:    01 70             	r1 = 0			  ## download_loop.c:1208:5
 1e1ff44:    0b 70             	r11 = 0			  ## download_loop.c:1208:5
 1e1ff46:    83 00             	call r3			  ## download_loop.c:1208:5
 1e1ff48:    44 2a             	if (r5 == 0) goto 136 <active_update_task+0xB00 : 1e1ffd2 >
 1e1ff4a:    0c fb 00 f0       	r12 = -4096 <bank_code_load_addr+0x1DBA08 : 1fff000 >
 1e1ff4e:    a6 08             	r6 = r10
 1e1ff50:    54 08             	r4 = r5			  ## download_loop.c:1211:17
 1e1ff52:    03 ff 00 52 02 00 	if (r5 < 512) goto 4 <active_update_task+0xA8A : 1e1ff5c >			  ## download_loop.c:1211:17
 1e1ff58:    04 fb 00 02       	r4 = 512 <BTCTLER_CL_RAM_TOTAL+0x1C : 200 >			  ## download_loop.c:1211:17
 1e1ff5c:    00 f6 18 81       	r0 = [r8 + 280]			  ## download_loop.c:1213:15
 1e1ff60:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:1213:28
 1e1ff62:    22 05             	r2 = r4.l (u)			  ## download_loop.c:1213:15
 1e1ff64:    00 70             	r0 = 0			  ## download_loop.c:1213:15
 1e1ff66:    d1 08             	r1 = r13			  ## download_loop.c:1213:15
 1e1ff68:    83 00             	call r3			  ## download_loop.c:1213:15
 1e1ff6a:    c1 ff ff ff 00 00 	r1 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## download_loop.c:1214:13
 1e1ff70:    10 f2 17 01       	if (r0 == r1) goto 558 <active_update_task+0xCD0 : 1e201a2 >			  ## download_loop.c:1214:13
 1e1ff74:    01 4e             	r1 = [r7 + 0]			  ## download_loop.c:1073:9
 1e1ff76:    30 42             	r0 = [r1 + 12]			  ## download_loop.c:1073:17
 1e1ff78:    22 20             	if (r0 == 0) goto 68 <active_update_task+0xAEC : 1e1ffbe >			  ## download_loop.c:1073:17
 1e1ff7a:    82 b9             	r2 = r4 + r6			  ## download_loop.c:1075:42
 1e1ff7c:    20 f2 1f 20       	if (r0 >= r2) goto 62 <active_update_task+0xAEC : 1e1ffbe >
 1e1ff80:    42 42             	r2 = [r1 + 16]			  ## download_loop.c:1074:41
 1e1ff82:    51 42             	r1 = [r1 + 20]			  ## download_loop.c:1074:69
 1e1ff84:    12 09             	r2 += r1			  ## download_loop.c:1074:59
 1e1ff86:    01 fc ff 0f       	r1 = r0 + 4095			  ## download_loop.c:1077:32
 1e1ff8a:    e2 fd c0 81       	r8 = r1 & r12			  ## download_loop.c:1077:32
 1e1ff8e:    43 fc ff 0f       	r3 = r4 + 4095			  ## download_loop.c:1081:29
 1e1ff92:    23 fd 10 3a       	r3 = r3 & 4096			  ## download_loop.c:1081:29
 1e1ff96:    21 b6             	r1 = r3 - r0			  ## download_loop.c:1077:75
 1e1ff98:    81 09             	r1 += r8			  ## download_loop.c:1087:31
 1e1ff9a:    2e b4             	r14 = r2 - r0			  ## download_loop.c:1084:51
 1e1ff9c:    03 09             	r3 += r0			  ## download_loop.c:1083:41
 1e1ff9e:    23 f2 01 80       	if (r3 > r2) goto 2 <active_update_task+0xAD2 : 1e1ffa4 >			  ## download_loop.c:1083:41
 1e1ffa2:    1e 08             	r14 = r1			  ## download_loop.c:1083:17
 1e1ffa4:    c8 ff b0 20 00 00 	r8 = 8368 <gatt_client_conn_handle : 20b0 >
 1e1ffaa:    0e e0 08 00       	if (r14 == 0) goto 16 <active_update_task+0xAEC : 1e1ffbe >
 1e1ffae:    e1 08             	r1 = r14			  ## download_loop.c:1092:17
 1e1ffb0:    bf f3 1f 0b       	call -125378 <flash_erase_by_blcok_n_sector : 1e015f2 >			  ## download_loop.c:1092:17
 1e1ffb4:    70 08             	r0 = r7			  ## download_loop.c:1093:17
 1e1ffb6:    00 40             	r0 = [r0 + 0]			  ## download_loop.c:1093:17
 1e1ffb8:    31 40             	r1 = [r0 + 12]			  ## download_loop.c:1093:41
 1e1ffba:    e1 09             	r1 += r14			  ## download_loop.c:1093:41
 1e1ffbc:    39 40             	[r0 + 12] = r1			  ## download_loop.c:1093:41
 1e1ffbe:    d0 08             	r0 = r13			  ## download_loop.c:1236:19
 1e1ffc0:    61 08             	r1 = r6			  ## download_loop.c:1236:19
 1e1ffc2:    42 08             	r2 = r4			  ## download_loop.c:1236:19
 1e1ffc4:    bf f3 e6 0b       	call -124980 <sfc_write : 1e01794 >			  ## download_loop.c:1236:19
 1e1ffc8:    04 f2 eb 10       	if (r4 != r0) goto 470 <active_update_task+0xCD0 : 1e201a2 >			  ## download_loop.c:1236:19
 1e1ffcc:    25 bb             	r5 = r5 - r4			  ## download_loop.c:1245:20
 1e1ffce:    46 09             	r6 += r4			  ## download_loop.c:1244:20
 1e1ffd0:    bf 3b             	if (r5 != 0) goto -130 <active_update_task+0xA7E : 1e1ff50 >
 1e1ffd2:    d0 08             	r0 = r13			  ## download_loop.c:1294:9
 1e1ffd4:    bf f3 1a 7d       	call -67020 <free : 1e0fa0c >			  ## download_loop.c:1294:9
 1e1ffd8:    c0 ff 54 2f 00 00 	r0 = 12116 <curr_loader_file_head : 2f54 >			  ## download_loop.c:1294:9
 1e1ffde:    17 50             	r7 = h[r0 + 2] (u)			  ## download_loop.c:2159:102
 1e1ffe0:    25 40             	r5 = [r0 + 8]			  ## download_loop.c:2159:75
 1e1ffe2:    00 fb 00 02       	r0 = 512 <BTCTLER_CL_RAM_TOTAL+0x1C : 200 >			  ## download_loop.c:1003:20
 1e1ffe6:    bf f3 e6 7c       	call -67124 <malloc : 1e0f9b6 >			  ## download_loop.c:1003:20
 1e1ffea:    0e 08             	r14 = r0			  ## download_loop.c:1003:20
 1e1ffec:    f2 20             	if (r0 == 0) goto 484 <active_update_task+0xD00 : 1e201d2 >
 1e1ffee:    ee 2a             	if (r5 == 0) goto 476 <active_update_task+0xCFA : 1e201cc >
 1e1fff0:    08 70             	r8 = 0
 1e1fff2:    cd ff 00 35 1e 00 	r13 = 1979648 <uECC_vli_cmp_unsafe+0xDC504 : 1e3500 >
 1e1fff8:    c9 ff 1f 5a e1 01 	r9 = 31545887 <update_target_end+0x2B97 : 1e15a1f >
 1e1fffe:    23 18             	goto 70 <active_update_task+0xB74 : 1e20046 >
 1e20000:    c0 ff 50 2f 00 00 	r0 = 12112 <update_bss_start : 2f50 >			  ## download_loop.c:988:9
 1e20006:    00 40             	r0 = [r0 + 0]			  ## download_loop.c:988:9
 1e20008:    48 20             	if (r0 == 0) goto 144 <active_update_task+0xBC8 : 1e2009a >			  ## download_loop.c:988:9
 1e2000a:    00 f9 41 02       	r0 = b[r0 + 577] (u)			  ## download_loop.c:988:27
 1e2000e:    45 20             	if (r0 == 0) goto 138 <active_update_task+0xBC8 : 1e2009a >			  ## download_loop.c:988:27
 1e20010:    f2 fd 80 c8       	r12 = r8 >> 16			  ## download_loop.c:1028:61
 1e20014:    a2 70             	r2 = 10			  ## download_loop.c:989:9
 1e20016:    90 08             	r0 = r9			  ## download_loop.c:989:9
 1e20018:    c1 08             	r1 = r12			  ## download_loop.c:989:9
 1e2001a:    bf f3 56 78       	call -69460 <printf : 1e0f0ca >			  ## download_loop.c:989:9
 1e2001e:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## download_loop.c:989:9
 1e20024:    04 08             	r4 = r0			  ## download_loop.c:989:9
 1e20026:    00 f6 18 41       	r0 = [r4 + 280]			  ## download_loop.c:990:9
 1e2002a:    33 40             	r3 = [r0 + 12]			  ## download_loop.c:990:22
 1e2002c:    00 70             	r0 = 0			  ## download_loop.c:990:9
 1e2002e:    01 70             	r1 = 0			  ## download_loop.c:990:9
 1e20030:    c2 08             	r2 = r12			  ## download_loop.c:990:9
 1e20032:    83 00             	call r3			  ## download_loop.c:990:9
 1e20034:    00 f6 18 41       	r0 = [r4 + 280]			  ## download_loop.c:991:16
 1e20038:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:991:29
 1e2003a:    e1 fb ea 01       	r1 = sp + 490			  ## download_loop.c:991:29
 1e2003e:    00 70             	r0 = 0			  ## download_loop.c:991:16
 1e20040:    a2 70             	r2 = 10			  ## download_loop.c:991:16
 1e20042:    83 00             	call r3			  ## download_loop.c:991:16
 1e20044:    2a 18             	goto 84 <active_update_task+0xBC8 : 1e2009a >			  ## download_loop.c:991:16
 1e20046:    bf f3 b9 0a       	call -125582 <clr_wdt : 1e015bc >			  ## download_loop.c:1012:9
 1e2004a:    56 08             	r6 = r5			  ## download_loop.c:1013:17
 1e2004c:    03 ff 00 52 02 00 	if (r5 < 512) goto 4 <active_update_task+0xB84 : 1e20056 >			  ## download_loop.c:1013:17
 1e20052:    06 fb 00 02       	r6 = 512 <BTCTLER_CL_RAM_TOTAL+0x1C : 200 >			  ## download_loop.c:1013:17
 1e20056:    e0 08             	r0 = r14			  ## download_loop.c:1018:13
 1e20058:    a1 08             	r1 = r10			  ## download_loop.c:1018:13
 1e2005a:    62 08             	r2 = r6			  ## download_loop.c:1018:13
 1e2005c:    bf f3 a1 0b       	call -125118 <sfc_read : 1e017a2 >			  ## download_loop.c:1018:13
 1e20060:    97 f3 9c 36       	call 3042616 <local_irq_disable : 106d9c >			  ## download_loop.c:971:5
 1e20064:    08 00             	csync			  ## download_loop.c:971:5
 1e20066:    e6 fd 00 0b       	r0 = r11.l (u)			  ## download_loop.c:972:19
 1e2006a:    a1 05             	r1 = r6.l (u)			  ## download_loop.c:973:5
 1e2006c:    10 f6 04 d0       	[r13 + 4] = r0			  ## download_loop.c:972:17
 1e20070:    0a 22             	if (r1 == 0) goto 20 <active_update_task+0xBB4 : 1e20086 >			  ## download_loop.c:972:17
 1e20072:    60 fb 00 69       	r0 = 0 - r6			  ## download_loop.c:973:15
 1e20076:    e1 08             	r1 = r14			  ## download_loop.c:973:15
 1e20078:    82 f9 01 10       	r2 = b[r1 ++= 1] (u)			  ## download_loop.c:974:24
 1e2007c:    10 80             	r0 += 1			  ## download_loop.c:973:5
 1e2007e:    23 04             	r3 = r0.l (u)			  ## download_loop.c:973:5
 1e20080:    12 f6 00 d0       	[r13 + 0] = r2			  ## download_loop.c:974:22
 1e20084:    f9 37             	if (r3 != 0) goto -14 <active_update_task+0xBA6 : 1e20078 >
 1e20086:    08 00             	csync			  ## download_loop.c:976:5
 1e20088:    0b f6 04 d0       	r11 = [r13 + 4]			  ## download_loop.c:978:19
 1e2008c:    a5 bb             	r5 = r5 - r6			  ## download_loop.c:1024:13
 1e2008e:    68 09             	r8 += r6			  ## download_loop.c:1025:17
 1e20090:    e6 fd 00 48       	r4 = r8.l (u)			  ## download_loop.c:1027:13
 1e20094:    97 f3 80 36       	call 3042560 <local_irq_enable : 106d98 >			  ## download_loop.c:979:5
 1e20098:    b3 29             	if (r4 == 0) goto -154 <active_update_task+0xB2E : 1e20000 >			  ## download_loop.c:979:5
 1e2009a:    6a 09             	r10 += r6			  ## download_loop.c:1023:14
 1e2009c:    d4 3b             	if (r5 != 0) goto -88 <active_update_task+0xB74 : 1e20046 >
 1e2009e:    96 18             	goto 300 <active_update_task+0xCFA : 1e201cc >
 1e200a0:    c0 ff 50 2f 00 00 	r0 = 12112 <update_bss_start : 2f50 >			  ## download_loop.c:733:23
 1e200a6:    00 40             	r0 = [r0 + 0]			  ## download_loop.c:733:23
 1e200a8:    02 75             	r2 = 80			  ## download_loop.c:733:9
 1e200aa:    c1 ff 74 2f 00 00 	r1 = 12148 <fw_flash_bin_head : 2f74 >			  ## download_loop.c:733:9
 1e200b0:    80 fe 20 1a       	r1 += r10 * r2			  ## download_loop.c:733:9
 1e200b4:    00 fc a8 01       	r0 = r0 + 424			  ## download_loop.c:733:9
 1e200b8:    97 f3 14 37       	call 3042856 <memcpy : 106ee4 >			  ## download_loop.c:733:9
 1e200bc:    04 70             	r4 = 0			  ## download_loop.c:733:9
 1e200be:    fc 07             	r12 = -1			  ## download_loop.c:733:9
 1e200c0:    5c 1c             	goto -1864 <active_update_task+0x4A8 : 1e1f97a >			  ## download_loop.c:733:9
 1e200c2:    ca ff 50 2f 00 00 	r10 = 12112 <update_bss_start : 2f50 >
 1e200c8:    00 f6 00 a0       	r0 = [r10 + 0]			  ## download_loop.c:1390:63
 1e200cc:    01 40             	r1 = [r0 + 0]			  ## download_loop.c:1390:71
 1e200ce:    02 f6 b0 01       	r2 = [r0 + 432]			  ## download_loop.c:1396:34
 1e200d2:    14 fc 00 02       	r4 = r1 + 512			  ## download_loop.c:1396:34
 1e200d6:    fc 07             	r12 = -1			  ## download_loop.c:1396:34
 1e200d8:    5f 24             	if (r2 == 0) goto 190 <active_update_task+0xCC6 : 1e20198 >			  ## download_loop.c:1396:34
 1e200da:    00 f6 b4 01       	r0 = [r0 + 436]			  ## download_loop.c:1396:71
 1e200de:    5c 20             	if (r0 == 0) goto 184 <active_update_task+0xCC6 : 1e20198 >			  ## download_loop.c:1396:71
 1e200e0:    00 f6 18 81       	r0 = [r8 + 280]			  ## download_loop.c:1401:5
 1e200e4:    0b f5 2c 01       	r11 = [sp+300]			  ## download_loop.c:1469:31
 1e200e8:    01 f5 28 01       	r1 = [sp+296]			  ## download_loop.c:1468:35
 1e200ec:    69 02             	[sp+24] = r1			  ## flash_fs_api.c:89:12
 1e200ee:    05 f6 1c 81       	r5 = [r8 + 284]			  ## flash_fs_api.c:89:12
 1e200f2:    33 40             	r3 = [r0 + 12]			  ## download_loop.c:1401:18
 1e200f4:    00 70             	r0 = 0			  ## download_loop.c:1401:5
 1e200f6:    01 70             	r1 = 0			  ## download_loop.c:1401:5
 1e200f8:    07 70             	r7 = 0			  ## download_loop.c:1401:5
 1e200fa:    83 00             	call r3			  ## download_loop.c:1401:5
 1e200fc:    00 f6 18 81       	r0 = [r8 + 280]			  ## download_loop.c:1402:5
 1e20100:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:1402:18
 1e20102:    00 70             	r0 = 0			  ## download_loop.c:1402:5
 1e20104:    02 72             	r2 = 32			  ## download_loop.c:1402:5
 1e20106:    08 72             	r8 = 32			  ## download_loop.c:1402:5
 1e20108:    41 08             	r1 = r4			  ## download_loop.c:1402:5
 1e2010a:    83 00             	call r3			  ## download_loop.c:1402:5
 1e2010c:    e6 fb 44 01       	r6 = sp + 324			  ## download_loop.c:1402:5
 1e20110:    01 72             	r1 = 32			  ## download_loop.c:1405:5
 1e20112:    60 08             	r0 = r6			  ## download_loop.c:1405:5
 1e20114:    52 08             	r2 = r5			  ## download_loop.c:1405:5
 1e20116:    bf f3 64 09       	call -126264 <norflash_read : 1e013e2 >			  ## download_loop.c:1405:5
 1e2011a:    4d fb 01 cb       	r13 = r12 + 65536			  ## download_loop.c:1406:5
 1e2011e:    02 72             	r2 = 32			  ## download_loop.c:1406:5
 1e20120:    03 70             	r3 = 0			  ## download_loop.c:1406:5
 1e20122:    18 f5 00 00       	[sp] = r8			  ## download_loop.c:1406:5
 1e20126:    c8 ff b0 20 00 00 	r8 = 8368 <gatt_client_conn_handle : 20b0 >			  ## download_loop.c:1406:5
 1e2012c:    d0 08             	r0 = r13			  ## download_loop.c:1406:5
 1e2012e:    61 08             	r1 = r6			  ## download_loop.c:1406:5
 1e20130:    bf f3 5a f9       	call -3404 <decode_data_by_user_key : 1e1f3e8 >			  ## download_loop.c:1406:5
 1e20134:    40 98             	r0 = r4 + 4			  ## download_loop.c:1408:54
 1e20136:    41 70             	r1 = 4
 1e20138:    02 fa 00 07       	r2 = b[r0+r7] (u)			  ## download_loop.c:1360:13
 1e2013c:    01 ff ff 20 07 00 	if (r2 != 255) goto 14 <active_update_task+0xC7E : 1e20150 >			  ## download_loop.c:1360:13
 1e20142:    17 80             	r7 += 1			  ## download_loop.c:1359:27
 1e20144:    f1 8f             	r1 += -1			  ## download_loop.c:1359:19
 1e20146:    47 e0 f7 3f       	if (r7 < 4) goto -18 <active_update_task+0xC66 : 1e20138 >			  ## download_loop.c:1359:19
 1e2014a:    60 ff ff 19 0e 00 	if ((r1 & 255) == 0) goto 28 <active_update_task+0xC9A : 1e2016c >
 1e20150:    31 60             	r1 = b[r0 + 3] (u)			  ## download_loop.c:1415:13
 1e20152:    22 60             	r2 = b[r0 + 2] (u)			  ## download_loop.c:1415:13
 1e20154:    10 60             	r0 = b[r0 + 1] (u)			  ## download_loop.c:1415:13
 1e20156:    43 68             	r3 = b[r4 + 4] (u)			  ## download_loop.c:1415:13
 1e20158:    05 f5 48 01       	r5 = [sp+328]			  ## download_loop.c:1415:13
 1e2015c:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## download_loop.c:1415:13
 1e20160:    c8 fd 40 30       	r3 <= insert(r0, p:8, l:8)			  ## download_loop.c:1415:13
 1e20164:    d0 fd 80 32       	r3 <= insert(r2, p:16, l:16)			  ## download_loop.c:1415:13
 1e20168:    35 f2 16 10       	if (r5 != r3) goto 44 <active_update_task+0xCC6 : 1e20198 >			  ## download_loop.c:1415:13
 1e2016c:    01 99             	r1 = r4 + 16			  ## download_loop.c:1423:54
 1e2016e:    02 70             	r2 = 0
 1e20170:    00 71             	r0 = 16
 1e20172:    03 fa 00 12       	r3 = b[r1+r2] (u)			  ## download_loop.c:1360:13
 1e20176:    01 ff ff 30 07 00 	if (r3 != 255) goto 14 <active_update_task+0xCB8 : 1e2018a >			  ## download_loop.c:1360:13
 1e2017c:    12 80             	r2 += 1			  ## download_loop.c:1359:27
 1e2017e:    f0 8f             	r0 += -1			  ## download_loop.c:1359:19
 1e20180:    02 e1 f7 3f       	if (r2 < 16) goto -18 <active_update_task+0xCA0 : 1e20172 >			  ## download_loop.c:1359:19
 1e20184:    60 ff ff 09 10 00 	if ((r0 & 255) == 0) goto 32 <active_update_task+0xCD8 : 1e201aa >
 1e2018a:    e0 fb 44 01       	r0 = sp + 324
 1e2018e:    00 81             	r0 += 16			  ## download_loop.c:1426:9
 1e20190:    02 71             	r2 = 16			  ## download_loop.c:1429:13
 1e20192:    97 f3 ab 36       	call 3042646 <memcmp : 106eec >			  ## download_loop.c:1429:13
 1e20196:    09 20             	if (r0 == 0) goto 18 <active_update_task+0xCD8 : 1e201aa >
 1e20198:    a0 78             	r0 = 138			  ## download_loop.c:2058:13
 1e2019a:    bf f3 18 f9       	call -3536 <update_stop : 1e1f3ce >
 1e2019e:    ff f3 27 fa       	goto -2994 <active_update_task+0x11E : 1e1f5f0 >
 1e201a2:    d0 08             	r0 = r13			  ## download_loop.c:1294:9
 1e201a4:    bf f3 32 7c       	call -67484 <free : 1e0fa0c >			  ## download_loop.c:1294:9
 1e201a8:    66 1c             	goto -1844 <active_update_task+0x5A4 : 1e1fa76 >			  ## download_loop.c:1294:9
 1e201aa:    00 f6 00 a0       	r0 = [r10 + 0]			  ## download_loop.c:2073:54
 1e201ae:    01 f9 40 02       	r1 = b[r0 + 576] (u)			  ## download_loop.c:2073:62
 1e201b2:    42 22             	if (r1 == 0) goto 132 <active_update_task+0xD66 : 1e20238 >			  ## download_loop.c:2073:62
 1e201b4:    c8 ff b0 20 00 00 	r8 = 8368 <gatt_client_conn_handle : 20b0 >
 1e201ba:    09 f5 14 00       	r9 = [sp+20]
 1e201be:    27 02             	r7 = [sp+8]
 1e201c0:    c6 ff 50 2f 00 00 	r6 = 12112 <update_bss_start : 2f50 >
 1e201c6:    0d f5 18 00       	r13 = [sp+24]
 1e201ca:    9b 1c             	goto -1738 <active_update_task+0x630 : 1e1fb02 >
 1e201cc:    e0 08             	r0 = r14			  ## download_loop.c:1034:9
 1e201ce:    bf f3 1d 7c       	call -67526 <free : 1e0fa0c >			  ## download_loop.c:1034:9
 1e201d2:    e6 fd 00 0b       	r0 = r11.l (u)			  ## download_loop.c:1047:18
 1e201d6:    70 f2 25 10       	if (r0 != r7) goto 74 <active_update_task+0xD52 : 1e20224 >			  ## download_loop.c:1047:18
 1e201da:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## update_main.c:79:9
 1e201e0:    00 f6 14 01       	r0 = [r0 + 276]			  ## update_main.c:79:9
 1e201e4:    41 02             	r1 = [sp+16]			  ## download_loop.c:2169:32
 1e201e6:    99 02             	[sp+36] = r1			  ## download_loop.c:2169:32
 1e201e8:    61 02             	r1 = [sp+24]			  ## download_loop.c:2169:32
 1e201ea:    a9 02             	[sp+40] = r1			  ## download_loop.c:2169:32
 1e201ec:    c1 ff 96 07 e2 01 	r1 = 31590294 <loader_info_record_write : 1e20796 >			  ## download_loop.c:2169:32
 1e201f2:    b9 02             	[sp+44] = r1			  ## download_loop.c:2169:32
 1e201f4:    06 20             	if (r0 == 0) goto 12 <active_update_task+0xD30 : 1e20202 >
 1e201f6:    83 41             	r3 = [r0 + 96]			  ## update_main.c:79:27
 1e201f8:    04 26             	if (r3 == 0) goto 8 <active_update_task+0xD30 : 1e20202 >			  ## update_main.c:79:27
 1e201fa:    00 85             	r0 += 80			  ## update_main.c:80:43
 1e201fc:    42 a2             	r2 = sp + 36			  ## update_main.c:80:43
 1e201fe:    21 70             	r1 = 2			  ## update_main.c:80:9
 1e20200:    83 00             	call r3			  ## update_main.c:80:9
 1e20202:    20 02             	r0 = [sp+8]			  ## download_loop.c:2180:38
 1e20204:    10 b0             	r0 |= 1			  ## download_loop.c:2180:38
 1e20206:    01 fb 07 5a       	r1 = 23047 <report_overlay_end+0x6BF : 5a07 >			  ## download_loop.c:2180:38
 1e2020a:    10 f2 03 10       	if (r0 != r1) goto 6 <active_update_task+0xD42 : 1e20214 >			  ## download_loop.c:2180:38
 1e2020e:    00 70             	r0 = 0			  ## download_loop.c:2181:13
 1e20210:    bf f3 dd f8       	call -3654 <update_stop : 1e1f3ce >			  ## download_loop.c:2181:13
 1e20214:    0c 70             	r12 = 0
 1e20216:    c8 ff b0 20 00 00 	r8 = 8368 <gatt_client_conn_handle : 20b0 >
 1e2021c:    09 f5 14 00       	r9 = [sp+20]
 1e20220:    ff f3 e6 f9       	goto -3124 <active_update_task+0x11E : 1e1f5f0 >
 1e20224:    30 78             	r0 = 131			  ## download_loop.c:2161:9
 1e20226:    bf f3 d2 f8       	call -3676 <update_stop : 1e1f3ce >			  ## download_loop.c:2161:9
 1e2022a:    c8 ff b0 20 00 00 	r8 = 8368 <gatt_client_conn_handle : 20b0 >
 1e20230:    09 f5 14 00       	r9 = [sp+20]
 1e20234:    ff f3 db f9       	goto -3146 <active_update_task+0x11C : 1e1f5ee >
 1e20238:    81 08             	r1 = r8
 1e2023a:    14 fc 18 01       	r4 = r1 + 280
 1e2023e:    01 48             	r1 = [r4 + 0]			  ## download_loop.c:1930:5
 1e20240:    07 40             	r7 = [r0 + 0]			  ## download_loop.c:2074:55
 1e20242:    0c f6 04 40       	r12 = [r4 + 4]			  ## flash_fs_api.c:89:12
 1e20246:    09 f6 b0 01       	r9 = [r0 + 432]			  ## download_loop.c:1926:63
 1e2024a:    33 42             	r3 = [r1 + 12]			  ## download_loop.c:1930:18
 1e2024c:    00 70             	r0 = 0			  ## download_loop.c:1930:5
 1e2024e:    01 70             	r1 = 0			  ## download_loop.c:1930:5
 1e20250:    92 08             	r2 = r9			  ## download_loop.c:1930:5
 1e20252:    83 00             	call r3			  ## download_loop.c:1930:5
 1e20254:    00 48             	r0 = [r4 + 0]			  ## download_loop.c:1931:13
 1e20256:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:1931:26
 1e20258:    00 70             	r0 = 0			  ## download_loop.c:1931:13
 1e2025a:    02 fb 00 02       	r2 = 512 <BTCTLER_CL_RAM_TOTAL+0x1C : 200 >			  ## download_loop.c:1931:13
 1e2025e:    71 08             	r1 = r7			  ## download_loop.c:1931:13
 1e20260:    83 00             	call r3			  ## download_loop.c:1931:13
 1e20262:    0a 08             	r10 = r0			  ## download_loop.c:1931:13
 1e20264:    d0 f2 a6 0f       	if (r0 == r13) goto -180 <active_update_task+0xCE2 : 1e201b4 >			  ## download_loop.c:1931:13
 1e20268:    45 a3             	r5 = sp + 52
 1e2026a:    01 70             	r1 = 0			  ## download_loop.c:1938:8
 1e2026c:    02 72             	r2 = 32			  ## download_loop.c:1938:8
 1e2026e:    08 70             	r8 = 0			  ## download_loop.c:1938:8
 1e20270:    50 08             	r0 = r5			  ## download_loop.c:1938:8
 1e20272:    97 f3 3d 36       	call 3042426 <memset : 106ef0 >			  ## download_loop.c:1938:8
 1e20276:    46 a5             	r6 = sp + 84			  ## download_loop.c:1938:8
 1e20278:    02 72             	r2 = 32			  ## download_loop.c:1939:5
 1e2027a:    60 08             	r0 = r6			  ## download_loop.c:1939:5
 1e2027c:    71 08             	r1 = r7			  ## download_loop.c:1939:5
 1e2027e:    97 f3 31 36       	call 3042402 <memcpy : 106ee4 >			  ## download_loop.c:1939:5
 1e20282:    02 72             	r2 = 32			  ## download_loop.c:1940:5
 1e20284:    50 08             	r0 = r5			  ## download_loop.c:1940:5
 1e20286:    c1 08             	r1 = r12			  ## download_loop.c:1940:5
 1e20288:    bf f3 68 08       	call -126768 <norflash_origin_read : 1e0135c >			  ## download_loop.c:1940:5
 1e2028c:    02 72             	r2 = 32			  ## download_loop.c:1941:14
 1e2028e:    60 08             	r0 = r6			  ## download_loop.c:1941:14
 1e20290:    51 08             	r1 = r5			  ## download_loop.c:1941:14
 1e20292:    97 f3 2b 36       	call 3042390 <memcmp : 106eec >			  ## download_loop.c:1941:14
 1e20296:    8e 31             	if (r0 != 0) goto -228 <active_update_task+0xCE2 : 1e201b4 >			  ## download_loop.c:1941:14
 1e20298:    1a e2 30 30       	if (r10 < 33) goto 96 <active_update_task+0xE2A : 1e202fc >
 1e2029c:    40 a3             	r0 = sp + 52
 1e2029e:    00 81             	r0 += 16
 1e202a0:    48 02             	[sp+16] = r0
 1e202a2:    04 72             	r4 = 32
 1e202a4:    01 bf             	r1 = r7 + r4			  ## download_loop.c:1949:33
 1e202a6:    46 a5             	r6 = sp + 84			  ## download_loop.c:1949:33
 1e202a8:    02 72             	r2 = 32			  ## download_loop.c:1949:9
 1e202aa:    60 08             	r0 = r6			  ## download_loop.c:1949:9
 1e202ac:    97 f3 1a 36       	call 3042356 <memcpy : 106ee4 >			  ## download_loop.c:1949:9
 1e202b0:    80 fb c0 54       	r5 = r4 + r12			  ## download_loop.c:1950:69
 1e202b4:    4e a3             	r14 = sp + 52			  ## download_loop.c:1950:69
 1e202b6:    02 72             	r2 = 32			  ## download_loop.c:1950:9
 1e202b8:    e0 08             	r0 = r14			  ## download_loop.c:1950:9
 1e202ba:    51 08             	r1 = r5			  ## download_loop.c:1950:9
 1e202bc:    bf f3 4e 08       	call -126820 <norflash_origin_read : 1e0135c >			  ## download_loop.c:1950:9
 1e202c0:    02 72             	r2 = 32			  ## download_loop.c:1951:18
 1e202c2:    60 08             	r0 = r6			  ## download_loop.c:1951:18
 1e202c4:    e1 08             	r1 = r14			  ## download_loop.c:1951:18
 1e202c6:    97 f3 11 36       	call 3042338 <memcmp : 106eec >			  ## download_loop.c:1951:18
 1e202ca:    74 31             	if (r0 != 0) goto -280 <active_update_task+0xCE2 : 1e201b4 >			  ## download_loop.c:1951:18
 1e202cc:    41 a3             	r1 = sp + 52
 1e202ce:    03 70             	r3 = 0			  ## download_loop.c:1955:9
 1e202d0:    d0 08             	r0 = r13			  ## download_loop.c:1955:9
 1e202d2:    52 08             	r2 = r5			  ## download_loop.c:1955:9
 1e202d4:    bf f3 a3 f8       	call -3770 <update_decode : 1e1f41e >			  ## download_loop.c:1955:9
 1e202d8:    d2 70             	r2 = 13			  ## download_loop.c:1957:18
 1e202da:    40 02             	r0 = [sp+16]			  ## download_loop.c:1957:18
 1e202dc:    c1 ff 4d f3 e1 01 	r1 = 31585101 <JL_APP_CODE0_FILE_NAME : 1e1f34d >			  ## download_loop.c:1957:18
 1e202e2:    97 f3 03 36       	call 3042310 <memcmp : 106eec >			  ## download_loop.c:1957:18
 1e202e6:    02 30             	if (r0 != 0) goto 4 <active_update_task+0xE1A : 1e202ec >			  ## download_loop.c:1957:18
 1e202e8:    08 f5 38 00       	r8 = [sp+56]			  ## download_loop.c:1958:52
 1e202ec:    80 f5 42 00       	r0 = h[sp+66] (u)			  ## download_loop.c:1960:24
 1e202f0:    05 30             	if (r0 != 0) goto 10 <active_update_task+0xE2A : 1e202fc >			  ## download_loop.c:1960:24
 1e202f2:    40 fc 20 00       	r0 = r4 + 32			  ## download_loop.c:1948:62
 1e202f6:    24 04             	r4 = r0.l (u)			  ## download_loop.c:1948:39
 1e202f8:    a4 f2 d4 3f       	if (r4 < r10) goto -88 <active_update_task+0xDD2 : 1e202a4 >			  ## download_loop.c:1948:39
 1e202fc:    c0 ff 50 2f 00 00 	r0 = 12112 <update_bss_start : 2f50 >			  ## download_loop.c:1970:35
 1e20302:    00 40             	r0 = [r0 + 0]			  ## download_loop.c:1970:35
 1e20304:    00 f6 b4 01       	r0 = [r0 + 436]			  ## download_loop.c:1970:62
 1e20308:    80 f2 05 10       	if (r0 != r8) goto 10 <active_update_task+0xE44 : 1e20316 >			  ## download_loop.c:1970:62
 1e2030c:    70 79             	r0 = 151			  ## download_loop.c:2076:13
 1e2030e:    bf f3 5e f8       	call -3908 <update_stop : 1e1f3ce >			  ## download_loop.c:2076:13
 1e20312:    1c 70             	r12 = 1			  ## download_loop.c:2076:13
 1e20314:    80 1f             	goto -256 <active_update_task+0xD44 : 1e20216 >			  ## download_loop.c:2076:13
 1e20316:    c0 ff 00 08 00 00 	r0 = 2048 <report_mmu_tlb_size : 800 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/efuse.c:9:22
 1e2031c:    0a f7 1c 00       	r10 = h[r0 + 28] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/efuse.c:9:22
 1e20320:    8c 09             	r12 += r8			  ## download_loop.c:1978:69
 1e20322:    80 fb 90 48       	r4 = r8 + r9			  ## download_loop.c:1978:69
 1e20326:    06 70             	r6 = 0			  ## download_loop.c:1978:69
 1e20328:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >
 1e2032e:    05 08             	r5 = r0
 1e20330:    00 f6 18 51       	r0 = [r5 + 280]			  ## download_loop.c:1971:9
 1e20334:    33 40             	r3 = [r0 + 12]			  ## download_loop.c:1971:22
 1e20336:    82 b9             	r2 = r4 + r6			  ## download_loop.c:1971:98
 1e20338:    00 70             	r0 = 0			  ## download_loop.c:1971:9
 1e2033a:    01 70             	r1 = 0			  ## download_loop.c:1971:9
 1e2033c:    83 00             	call r3			  ## download_loop.c:1971:9
 1e2033e:    00 f6 18 51       	r0 = [r5 + 280]			  ## download_loop.c:1972:17
 1e20342:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:1972:30
 1e20344:    41 a5             	r1 = sp + 84			  ## download_loop.c:1972:30
 1e20346:    00 70             	r0 = 0			  ## download_loop.c:1972:17
 1e20348:    02 72             	r2 = 32			  ## download_loop.c:1972:17
 1e2034a:    83 00             	call r3			  ## download_loop.c:1972:17
 1e2034c:    d0 f2 32 0f       	if (r0 == r13) goto -412 <active_update_task+0xCE2 : 1e201b4 >			  ## download_loop.c:1972:17
 1e20350:    80 fb c0 76       	r7 = r6 + r12			  ## download_loop.c:1978:97
 1e20354:    45 a3             	r5 = sp + 52			  ## download_loop.c:1978:97
 1e20356:    02 72             	r2 = 32			  ## download_loop.c:1978:9
 1e20358:    50 08             	r0 = r5			  ## download_loop.c:1978:9
 1e2035a:    71 08             	r1 = r7			  ## download_loop.c:1978:9
 1e2035c:    bf f3 fe 07       	call -126980 <norflash_origin_read : 1e0135c >			  ## download_loop.c:1978:9
 1e20360:    40 a5             	r0 = sp + 84			  ## download_loop.c:1978:9
 1e20362:    02 72             	r2 = 32			  ## download_loop.c:1979:18
 1e20364:    51 08             	r1 = r5			  ## download_loop.c:1979:18
 1e20366:    97 f3 c1 35       	call 3042178 <memcmp : 106eec >			  ## download_loop.c:1979:18
 1e2036a:    24 31             	if (r0 != 0) goto -440 <active_update_task+0xCE2 : 1e201b4 >			  ## download_loop.c:1979:18
 1e2036c:    41 a3             	r1 = sp + 52
 1e2036e:    a0 08             	r0 = r10			  ## download_loop.c:1983:9
 1e20370:    72 08             	r2 = r7			  ## download_loop.c:1983:9
 1e20372:    63 08             	r3 = r6			  ## download_loop.c:1983:9
 1e20374:    bf f3 53 f8       	call -3930 <update_decode : 1e1f41e >			  ## download_loop.c:1983:9
 1e20378:    80 f5 42 00       	r0 = h[sp+66] (u)			  ## download_loop.c:1985:24
 1e2037c:    c7 31             	if (r0 != 0) goto -114 <active_update_task+0xE3A : 1e2030c >			  ## download_loop.c:1985:24
 1e2037e:    c0 ff 50 2f 00 00 	r0 = 12112 <update_bss_start : 2f50 >			  ## download_loop.c:1970:35
 1e20384:    00 40             	r0 = [r0 + 0]			  ## download_loop.c:1970:35
 1e20386:    f1 02             	r1 = [sp+60]			  ## download_loop.c:1988:30
 1e20388:    00 f6 b4 01       	r0 = [r0 + 436]			  ## download_loop.c:1970:62
 1e2038c:    16 09             	r6 += r1			  ## download_loop.c:1988:16
 1e2038e:    90 fb 80 00       	r0 = r0 - r8			  ## download_loop.c:1970:72
 1e20392:    06 f2 c9 3f       	if (r6 < r0) goto -110 <active_update_task+0xE56 : 1e20328 >			  ## download_loop.c:1970:72
 1e20396:    ba 1f             	goto -140 <active_update_task+0xE3A : 1e2030c >			  ## download_loop.c:1970:72


app_active_update_task_init:
 1e20398:    74 01             	[--sp] = {rets, r4}			  ## update_main.c:206:0
 1e2039a:    c1 ff b0 20 00 00 	r1 = 8368 <gatt_client_conn_handle : 20b0 >			  ## update_main.c:207:9
 1e203a0:    04 f6 14 11       	r4 = [r1 + 276]			  ## update_main.c:207:9
 1e203a4:    02 f9 64 40       	r2 = b[r4 + 100] (u)			  ## update_main.c:207:17
 1e203a8:    01 08             	r1 = r0			  ## update_main.c:207:17
 1e203aa:    01 24             	if (r2 == 0) goto 2 <app_active_update_task_init+0x16 : 1e203ae >			  ## update_main.c:207:17
 1e203ac:    54 01             	{pc, r4} = [sp++]
 1e203ae:    40 fc 50 00       	r0 = r4 + 80			  ## update_main.c:212:27
 1e203b2:    02 71             	r2 = 16			  ## update_main.c:212:5
 1e203b4:    97 f3 96 35       	call 3042092 <memcpy : 106ee4 >			  ## update_main.c:212:5
 1e203b8:    00 f9 5c 40       	r0 = b[r4 + 92] (u)			  ## update_main.c:181:22
 1e203bc:    0e 20             	if (r0 == 0) goto 28 <app_active_update_task_init+0x42 : 1e203da >			  ## update_main.c:181:9
 1e203be:    01 70             	r1 = 0			  ## update_main.c:182:9
 1e203c0:    40 08             	r0 = r4			  ## update_main.c:182:9
 1e203c2:    97 f3 1d 35       	call 3041850 <os_sem_create : 106e00 >			  ## update_main.c:182:9
 1e203c6:    c0 ff d2 f4 e1 01 	r0 = 31585490 <active_update_task : 1e1f4d2 >			  ## update_main.c:184:9
 1e203cc:    c2 ff f0 59 e1 01 	r2 = 31545840 <update_target_end+0x2B68 : 1e159f0 >			  ## update_main.c:184:9
 1e203d2:    41 08             	r1 = r4			  ## update_main.c:184:9
 1e203d4:    14 01             	{rets, r4} = [sp++]			  ## update_main.c:184:9
 1e203d6:    ff f3 0a 85       	goto -62956 <task_create : 1e10dee >			  ## update_main.c:184:9
 1e203da:    40 08             	r0 = r4			  ## update_main.c:186:9
 1e203dc:    bf f3 79 f8       	call -3854 <active_update_task : 1e1f4d2 >			  ## update_main.c:186:9
 1e203e0:    54 01             	{pc, r4} = [sp++]			  ## update_main.c:186:9


update_module_init:
 1e203e2:    74 01             	[--sp] = {rets, r4}			  ## update_main.c:219:0
 1e203e4:    80 76             	r0 = 104			  ## update_main.c:220:14
 1e203e6:    bf f3 e6 7a       	call -68148 <malloc : 1e0f9b6 >			  ## update_main.c:220:14
 1e203ea:    04 08             	r4 = r0			  ## update_main.c:220:14
 1e203ec:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## update_main.c:220:12
 1e203f2:    14 f6 14 01       	[r0 + 276] = r4			  ## update_main.c:220:12
 1e203f6:    09 28             	if (r4 == 0) goto 18 <update_module_init+0x28 : 1e2040a >			  ## update_main.c:220:12
 1e203f8:    01 70             	r1 = 0			  ## update_main.c:222:9
 1e203fa:    82 76             	r2 = 104			  ## update_main.c:222:9
 1e203fc:    40 08             	r0 = r4			  ## update_main.c:222:9
 1e203fe:    97 f3 77 35       	call 3042030 <memset : 106ef0 >			  ## update_main.c:222:9
 1e20402:    c0 ff 10 1d e0 01 	r0 = 31464720 <update_common_state_cbk : 1e01d10 >			  ## update_main.c:223:34
 1e20408:    88 49             	[r4 + 96] = r0			  ## update_main.c:223:34
 1e2040a:    54 01             	{pc, r4} = [sp++]			  ## update_main.c:228:1


bt_f_seek:
 1e2040c:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## lmp_ch_update.c:57:0
 1e20412:    07 22             	if (r1 == 0) goto 14 <bt_f_seek+0x16 : 1e20422 >			  ## lmp_ch_update.c:57:0
 1e20414:    11 e0 09 10       	if (r1 != 1) goto 18 <bt_f_seek+0x1E : 1e2042a >			  ## lmp_ch_update.c:57:0
 1e20418:    01 f6 e4 00       	r1 = [r0 + 228]			  ## lmp_ch_update.c:62:24
 1e2041c:    12 09             	r2 += r1			  ## lmp_ch_update.c:62:24
 1e2041e:    21 70             	r1 = 2
 1e20420:    01 18             	goto 2 <bt_f_seek+0x18 : 1e20424 >
 1e20422:    11 70             	r1 = 1
 1e20424:    12 f6 e4 00       	[r0 + 228] = r2
 1e20428:    69 61             	b[r0 + 22] = r1
 1e2042a:    00 70             	r0 = 0			  ## lmp_ch_update.c:67:5
 1e2042c:    20 00             	rts			  ## lmp_ch_update.c:67:5


bt_f_read:
 1e2042e:    75 01             	[--sp] = {rets, r5, r4}			  ## lmp_ch_update.c:71:0
 1e20430:    24 08             	r4 = r2			  ## lmp_ch_update.c:71:0
 1e20432:    c5 ff b0 20 00 00 	r5 = 8368 <gatt_client_conn_handle : 20b0 >			  ## lmp_ch_update.c:71:0
 1e20438:    00 70             	r0 = 0			  ## lmp_ch_update.c:71:0
 1e2043a:    48 5b             	h[r5 + 40] = r0			  ## lmp_ch_update.c:72:19
 1e2043c:    11 f6 e8 50       	[r5 + 232] = r1			  ## lmp_ch_update.c:73:17
 1e20440:    bf f3 80 f2       	call -6912 <bt_updata_clr_flag : 1e1e944 >			  ## lmp_ch_update.c:74:5
 1e20444:    03 f6 e4 50       	r3 = [r5 + 228]			  ## lmp_ch_update.c:77:63
 1e20448:    62 6b             	r2 = b[r5 + 22] (u)			  ## lmp_ch_update.c:77:5
 1e2044a:    40 70             	r0 = 4			  ## lmp_ch_update.c:77:5
 1e2044c:    41 08             	r1 = r4			  ## lmp_ch_update.c:77:5
 1e2044e:    bf f3 80 f2       	call -6912 <bt_updata_control : 1e1e952 >			  ## lmp_ch_update.c:77:5
 1e20452:    bf f3 93 f2       	call -6874 <bt_updata_get_flag : 1e1e97c >
 1e20456:    21 f3 0c 00       	if ((r0 & 2) != 0) goto 24 <bt_f_read+0x44 : 1e20472 >
 1e2045a:    01 f6 ec 50       	r1 = [r5 + 236]			  ## lmp_ch_update.c:79:13
 1e2045e:    f9 23             	if (r1 == 0) goto -14 <bt_f_read+0x24 : 1e20452 >			  ## lmp_ch_update.c:79:13
 1e20460:    00 70             	r0 = 0			  ## lmp_ch_update.c:80:13
 1e20462:    81 00             	call r1			  ## lmp_ch_update.c:80:13
 1e20464:    bf f3 8a f2       	call -6892 <bt_updata_get_flag : 1e1e97c >			  ## lmp_ch_update.c:81:46
 1e20468:    21 f3 f3 0f       	if ((r0 & 2) != 0) goto -26 <bt_f_read+0x24 : 1e20452 >			  ## lmp_ch_update.c:81:46
 1e2046c:    bf f3 6a f2       	call -6956 <bt_updata_clr_flag : 1e1e944 >			  ## lmp_ch_update.c:82:17
 1e20470:    0a 18             	goto 20 <bt_f_read+0x58 : 1e20486 >			  ## lmp_ch_update.c:82:17
 1e20472:    bf f3 67 f2       	call -6962 <bt_updata_clr_flag : 1e1e944 >			  ## lmp_ch_update.c:88:5
 1e20476:    40 5b             	r0 = h[r5 + 40] (u)			  ## lmp_ch_update.c:89:9
 1e20478:    06 20             	if (r0 == 0) goto 12 <bt_f_read+0x58 : 1e20486 >			  ## lmp_ch_update.c:89:9
 1e2047a:    00 f6 e4 50       	r0 = [r5 + 228]			  ## lmp_ch_update.c:92:20
 1e2047e:    40 09             	r0 += r4			  ## lmp_ch_update.c:92:20
 1e20480:    10 f6 e4 50       	[r5 + 228] = r0			  ## lmp_ch_update.c:92:20
 1e20484:    03 18             	goto 6 <bt_f_read+0x5E : 1e2048c >			  ## lmp_ch_update.c:92:20
 1e20486:    c4 ff ff ff 00 00 	r4 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >
 1e2048c:    40 08             	r0 = r4			  ## lmp_ch_update.c:95:1
 1e2048e:    55 01             	{pc, r5, r4} = [sp++]			  ## lmp_ch_update.c:95:1


bt_f_open:
 1e20490:    75 01             	[--sp] = {rets, r5, r4}			  ## lmp_ch_update.c:100:0
 1e20492:    bf f3 57 f2       	call -6994 <bt_updata_clr_flag : 1e1e944 >			  ## lmp_ch_update.c:105:5
 1e20496:    c5 ff b0 20 00 00 	r5 = 8368 <gatt_client_conn_handle : 20b0 >			  ## lmp_ch_update.c:105:5
 1e2049c:    00 70             	r0 = 0			  ## lmp_ch_update.c:105:5
 1e2049e:    10 f6 e4 50       	[r5 + 228] = r0			  ## lmp_ch_update.c:107:20
 1e204a2:    14 70             	r4 = 1			  ## lmp_ch_update.c:107:20
 1e204a4:    6c 6b             	b[r5 + 22] = r4			  ## lmp_ch_update.c:108:18
 1e204a6:    10 70             	r0 = 1			  ## lmp_ch_update.c:109:5
 1e204a8:    01 70             	r1 = 0			  ## lmp_ch_update.c:109:5
 1e204aa:    02 70             	r2 = 0			  ## lmp_ch_update.c:109:5
 1e204ac:    03 70             	r3 = 0			  ## lmp_ch_update.c:109:5
 1e204ae:    bf f3 50 f2       	call -7008 <bt_updata_control : 1e1e952 >			  ## lmp_ch_update.c:109:5
 1e204b2:    bf f3 63 f2       	call -6970 <bt_updata_get_flag : 1e1e97c >
 1e204b6:    21 f3 0d 00       	if ((r0 & 2) != 0) goto 26 <bt_f_open+0x44 : 1e204d4 >
 1e204ba:    01 f6 ec 50       	r1 = [r5 + 236]			  ## lmp_ch_update.c:124:13
 1e204be:    f9 23             	if (r1 == 0) goto -14 <bt_f_open+0x22 : 1e204b2 >			  ## lmp_ch_update.c:124:13
 1e204c0:    00 70             	r0 = 0			  ## lmp_ch_update.c:125:13
 1e204c2:    81 00             	call r1			  ## lmp_ch_update.c:125:13
 1e204c4:    bf f3 5a f2       	call -6988 <bt_updata_get_flag : 1e1e97c >			  ## lmp_ch_update.c:126:46
 1e204c8:    21 f3 f3 0f       	if ((r0 & 2) != 0) goto -26 <bt_f_open+0x22 : 1e204b2 >			  ## lmp_ch_update.c:126:46
 1e204cc:    bf f3 3a f2       	call -7052 <bt_updata_clr_flag : 1e1e944 >			  ## lmp_ch_update.c:127:17
 1e204d0:    04 70             	r4 = 0			  ## lmp_ch_update.c:127:17
 1e204d2:    02 18             	goto 4 <bt_f_open+0x48 : 1e204d8 >			  ## lmp_ch_update.c:127:17
 1e204d4:    bf f3 36 f2       	call -7060 <bt_updata_clr_flag : 1e1e944 >			  ## lmp_ch_update.c:133:5
 1e204d8:    40 08             	r0 = r4			  ## lmp_ch_update.c:135:1
 1e204da:    55 01             	{pc, r5, r4} = [sp++]			  ## lmp_ch_update.c:135:1


bt_f_send_update_len:
 1e204dc:    74 01             	[--sp] = {rets, r4}			  ## lmp_ch_update.c:138:0
 1e204de:    13 08             	r3 = r1			  ## lmp_ch_update.c:138:0
 1e204e0:    02 08             	r2 = r0			  ## lmp_ch_update.c:138:0
 1e204e2:    bf f3 2f f2       	call -7074 <bt_updata_clr_flag : 1e1e944 >			  ## lmp_ch_update.c:145:5
 1e204e6:    27 24             	if (r2 == 0) goto 78 <bt_f_send_update_len+0x5A : 1e20536 >			  ## lmp_ch_update.c:145:5
 1e204e8:    00 64             	r0 = b[r2 + 0] (u)			  ## lmp_ch_update.c:150:31
 1e204ea:    20 e0 05 00       	if (r0 == 2) goto 10 <bt_f_send_update_len+0x1C : 1e204f8 >			  ## lmp_ch_update.c:150:13
 1e204ee:    09 30             	if (r0 != 0) goto 18 <bt_f_send_update_len+0x26 : 1e20502 >
 1e204f0:    20 70             	r0 = 2			  ## lmp_ch_update.c:151:13
 1e204f2:    01 70             	r1 = 0			  ## lmp_ch_update.c:151:13
 1e204f4:    02 71             	r2 = 16			  ## lmp_ch_update.c:151:13
 1e204f6:    03 18             	goto 6 <bt_f_send_update_len+0x22 : 1e204fe >
 1e204f8:    20 70             	r0 = 2			  ## lmp_ch_update.c:153:13
 1e204fa:    01 70             	r1 = 0			  ## lmp_ch_update.c:153:13
 1e204fc:    12 71             	r2 = 17			  ## lmp_ch_update.c:153:13
 1e204fe:    bf f3 28 f2       	call -7088 <bt_updata_control : 1e1e952 >
 1e20502:    bf f3 3b f2       	call -7050 <bt_updata_get_flag : 1e1e97c >			  ## lmp_ch_update.c:160:41
 1e20506:    21 f3 10 00       	if ((r0 & 2) != 0) goto 32 <bt_f_send_update_len+0x4E : 1e2052a >			  ## lmp_ch_update.c:160:41
 1e2050a:    c4 ff b0 20 00 00 	r4 = 8368 <gatt_client_conn_handle : 20b0 >
 1e20510:    01 f6 ec 40       	r1 = [r4 + 236]			  ## lmp_ch_update.c:161:13
 1e20514:    06 22             	if (r1 == 0) goto 12 <bt_f_send_update_len+0x46 : 1e20522 >			  ## lmp_ch_update.c:161:13
 1e20516:    00 70             	r0 = 0			  ## lmp_ch_update.c:162:13
 1e20518:    81 00             	call r1			  ## lmp_ch_update.c:162:13
 1e2051a:    bf f3 2f f2       	call -7074 <bt_updata_get_flag : 1e1e97c >			  ## lmp_ch_update.c:163:46
 1e2051e:    01 f3 08 00       	if ((r0 & 2) == 0) goto 16 <bt_f_send_update_len+0x56 : 1e20532 >			  ## lmp_ch_update.c:163:46
 1e20522:    bf f3 2b f2       	call -7082 <bt_updata_get_flag : 1e1e97c >			  ## lmp_ch_update.c:160:41
 1e20526:    01 f3 f3 0f       	if ((r0 & 2) == 0) goto -26 <bt_f_send_update_len+0x34 : 1e20510 >			  ## lmp_ch_update.c:160:41
 1e2052a:    bf f3 0b f2       	call -7146 <bt_updata_clr_flag : 1e1e944 >			  ## lmp_ch_update.c:169:5
 1e2052e:    10 70             	r0 = 1			  ## lmp_ch_update.c:169:5
 1e20530:    54 01             	{pc, r4} = [sp++]			  ## lmp_ch_update.c:171:1
 1e20532:    bf f3 07 f2       	call -7154 <bt_updata_clr_flag : 1e1e944 >			  ## lmp_ch_update.c:164:17
 1e20536:    00 70             	r0 = 0
 1e20538:    54 01             	{pc, r4} = [sp++]			  ## lmp_ch_update.c:171:1


bt_f_stop:
 1e2053a:    75 01             	[--sp] = {rets, r5, r4}			  ## lmp_ch_update.c:174:0
 1e2053c:    04 08             	r4 = r0			  ## lmp_ch_update.c:174:0
 1e2053e:    c5 ff b0 20 00 00 	r5 = 8368 <gatt_client_conn_handle : 20b0 >			  ## lmp_ch_update.c:174:0
 1e20544:    00 70             	r0 = 0			  ## lmp_ch_update.c:179:17
 1e20546:    10 f6 e8 50       	[r5 + 232] = r0			  ## lmp_ch_update.c:179:17
 1e2054a:    bf f3 fb f1       	call -7178 <bt_updata_clr_flag : 1e1e944 >			  ## lmp_ch_update.c:180:5
 1e2054e:    64 e1 05 c0       	ifs (r4 > 22) goto 10 <bt_f_stop+0x22 : 1e2055c >			  ## lmp_ch_update.c:181:31
 1e20552:    09 28             	if (r4 == 0) goto 18 <bt_f_stop+0x2C : 1e20566 >
 1e20554:    14 e0 22 10       	if (r4 != 1) goto 68 <bt_f_stop+0x62 : 1e2059c >
 1e20558:    50 70             	r0 = 5			  ## lmp_ch_update.c:184:9
 1e2055a:    06 18             	goto 12 <bt_f_stop+0x2E : 1e20568 >			  ## lmp_ch_update.c:184:9
 1e2055c:    00 ff 97 40 02 00 	if (r4 == 151) goto 4 <bt_f_stop+0x2C : 1e20566 >
 1e20562:    74 e1 1b 10       	if (r4 != 23) goto 54 <bt_f_stop+0x62 : 1e2059c >
 1e20566:    00 70             	r0 = 0			  ## lmp_ch_update.c:182:9
 1e20568:    01 70             	r1 = 0
 1e2056a:    02 70             	r2 = 0
 1e2056c:    03 70             	r3 = 0
 1e2056e:    bf f3 f0 f1       	call -7200 <bt_updata_control : 1e1e952 >
 1e20572:    bf f3 03 f2       	call -7162 <bt_updata_get_flag : 1e1e97c >
 1e20576:    21 f3 0d 00       	if ((r0 & 2) != 0) goto 26 <bt_f_stop+0x5A : 1e20594 >
 1e2057a:    01 f6 ec 50       	r1 = [r5 + 236]			  ## lmp_ch_update.c:198:13
 1e2057e:    f9 23             	if (r1 == 0) goto -14 <bt_f_stop+0x38 : 1e20572 >			  ## lmp_ch_update.c:198:13
 1e20580:    00 70             	r0 = 0			  ## lmp_ch_update.c:199:13
 1e20582:    81 00             	call r1			  ## lmp_ch_update.c:199:13
 1e20584:    bf f3 fa f1       	call -7180 <bt_updata_get_flag : 1e1e97c >			  ## lmp_ch_update.c:200:46
 1e20588:    21 f3 f3 0f       	if ((r0 & 2) != 0) goto -26 <bt_f_stop+0x38 : 1e20572 >			  ## lmp_ch_update.c:200:46
 1e2058c:    bf f3 da f1       	call -7244 <bt_updata_clr_flag : 1e1e944 >			  ## lmp_ch_update.c:201:17
 1e20590:    05 70             	r5 = 0			  ## lmp_ch_update.c:201:17
 1e20592:    0b 18             	goto 22 <bt_f_stop+0x70 : 1e205aa >			  ## lmp_ch_update.c:201:17
 1e20594:    bf f3 d6 f1       	call -7252 <bt_updata_clr_flag : 1e1e944 >			  ## lmp_ch_update.c:207:5
 1e20598:    15 70             	r5 = 1			  ## lmp_ch_update.c:207:5
 1e2059a:    07 18             	goto 14 <bt_f_stop+0x70 : 1e205aa >			  ## lmp_ch_update.c:207:5
 1e2059c:    00 70             	r0 = 0			  ## lmp_ch_update.c:186:9
 1e2059e:    02 70             	r2 = 0			  ## lmp_ch_update.c:186:9
 1e205a0:    03 70             	r3 = 0			  ## lmp_ch_update.c:186:9
 1e205a2:    05 70             	r5 = 0			  ## lmp_ch_update.c:186:9
 1e205a4:    41 08             	r1 = r4			  ## lmp_ch_update.c:186:9
 1e205a6:    bf f3 d4 f1       	call -7256 <bt_updata_control : 1e1e952 >			  ## lmp_ch_update.c:186:9
 1e205aa:    50 08             	r0 = r5			  ## lmp_ch_update.c:209:1
 1e205ac:    55 01             	{pc, r5, r4} = [sp++]			  ## lmp_ch_update.c:209:1


lmp_ch_update_init:
 1e205ae:    34 00             	[--sp] = rets			  ## lmp_ch_update.c:232:0
 1e205b0:    c2 ff b0 20 00 00 	r2 = 8368 <gatt_client_conn_handle : 20b0 >			  ## lmp_ch_update.c:228:29
 1e205b6:    10 f6 f0 20       	[r2 + 240] = r0			  ## lmp_ch_update.c:227:30
 1e205ba:    11 f6 ec 20       	[r2 + 236] = r1			  ## lmp_ch_update.c:228:29
 1e205be:    bf f3 e2 f1       	call -7228 <reg_revic_buf_addr : 1e1e986 >			  ## lmp_ch_update.c:235:5
 1e205c2:    88 01             	{rets} = [sp++]			  ## lmp_ch_update.c:237:5
 1e205c4:    ff f3 e7 f1       	goto -7218 <lmp_update_init : 1e1e996 >			  ## lmp_ch_update.c:237:5


bt_updata_handle:
 1e205c8:    75 01             	[--sp] = {rets, r5, r4}			  ## lmp_ch_update.c:217:0
 1e205ca:    c5 ff b0 20 00 00 	r5 = 8368 <gatt_client_conn_handle : 20b0 >			  ## lmp_ch_update.c:217:0
 1e205d0:    02 f6 e8 50       	r2 = [r5 + 232]			  ## lmp_ch_update.c:219:9
 1e205d4:    14 08             	r4 = r1			  ## lmp_ch_update.c:219:9
 1e205d6:    01 08             	r1 = r0
 1e205d8:    05 24             	if (r2 == 0) goto 10 <bt_updata_handle+0x1C : 1e205e4 >
 1e205da:    20 08             	r0 = r2			  ## lmp_ch_update.c:220:9
 1e205dc:    42 08             	r2 = r4			  ## lmp_ch_update.c:220:9
 1e205de:    97 f3 81 34       	call 3041538 <memcpy : 106ee4 >			  ## lmp_ch_update.c:220:9
 1e205e2:    4c 5b             	h[r5 + 40] = r4			  ## lmp_ch_update.c:221:23
 1e205e4:    55 01             	{pc, r5, r4} = [sp++]			  ## lmp_ch_update.c:223:1


lmp_ch_update_exit:
 1e205e6:    ff f3 e1 f1       	goto -7230 <lmp_update_exit : 1e1e9ac >			  ## lmp_ch_update.c:241:0


ble_f_seek:
 1e205ea:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## ble_ll_ch_update.c:83:0
 1e205f0:    07 22             	if (r1 == 0) goto 14 <ble_f_seek+0x16 : 1e20600 >			  ## ble_ll_ch_update.c:83:0
 1e205f2:    11 e0 09 10       	if (r1 != 1) goto 18 <ble_f_seek+0x1E : 1e20608 >			  ## ble_ll_ch_update.c:83:0
 1e205f6:    01 f6 f4 00       	r1 = [r0 + 244]			  ## ble_ll_ch_update.c:88:24
 1e205fa:    12 09             	r2 += r1			  ## ble_ll_ch_update.c:88:24
 1e205fc:    21 70             	r1 = 2
 1e205fe:    01 18             	goto 2 <ble_f_seek+0x18 : 1e20602 >
 1e20600:    11 70             	r1 = 1
 1e20602:    12 f6 f4 00       	[r0 + 244] = r2
 1e20606:    79 61             	b[r0 + 23] = r1
 1e20608:    00 70             	r0 = 0			  ## ble_ll_ch_update.c:93:5
 1e2060a:    20 00             	rts			  ## ble_ll_ch_update.c:93:5


ble_f_read:
 1e2060c:    76 01             	[--sp] = {rets, r6-r4}			  ## ble_ll_ch_update.c:97:0
 1e2060e:    24 08             	r4 = r2			  ## ble_ll_ch_update.c:97:0
 1e20610:    c6 ff b0 20 00 00 	r6 = 8368 <gatt_client_conn_handle : 20b0 >			  ## ble_ll_ch_update.c:97:0
 1e20616:    10 70             	r0 = 1			  ## ble_ll_ch_update.c:97:0
 1e20618:    62 fc f4 00       	r2 = r6 + 244			  ## ble_ll_ch_update.c:97:0
 1e2061c:    48 64             	b[r2 + 4] = r0			  ## ble_ll_ch_update.c:97:0
 1e2061e:    2c 44             	[r2 + 8] = r4			  ## ble_ll_ch_update.c:100:25
 1e20620:    c3 f4 00 29       	[r2 + 12] = 0			  ## ble_ll_ch_update.c:101:22
 1e20624:    49 44             	[r2 + 16] = r1			  ## ble_ll_ch_update.c:102:22
 1e20626:    03 44             	r3 = [r2 + 0]			  ## ble_ll_ch_update.c:104:68
 1e20628:    72 6d             	r2 = b[r6 + 23] (u)			  ## ble_ll_ch_update.c:49:12
 1e2062a:    40 70             	r0 = 4			  ## ble_ll_ch_update.c:49:12
 1e2062c:    41 08             	r1 = r4			  ## ble_ll_ch_update.c:49:12
 1e2062e:    bf f3 e6 eb       	call -10292 <ll_update_send_data_handle : 1e1ddfe >			  ## ble_ll_ch_update.c:49:12
 1e20632:    c5 ff ff ff 00 00 	r5 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >
 1e20638:    02 20             	if (r0 == 0) goto 4 <ble_f_read+0x32 : 1e2063e >
 1e2063a:    50 08             	r0 = r5			  ## ble_ll_ch_update.c:126:1
 1e2063c:    56 01             	{pc, r6-r4} = [sp++]			  ## ble_ll_ch_update.c:126:1
 1e2063e:    00 f9 f8 60       	r0 = b[r6 + 248] (u)
 1e20642:    00 f3 0f 00       	if ((r0 & 1) == 0) goto 30 <ble_f_read+0x58 : 1e20664 >			  ## ble_ll_ch_update.c:108:5
 1e20646:    01 f6 08 61       	r1 = [r6 + 264]			  ## ble_ll_ch_update.c:109:13
 1e2064a:    f7 23             	if (r1 == 0) goto -18 <ble_f_read+0x2E : 1e2063a >			  ## ble_ll_ch_update.c:109:13
 1e2064c:    00 70             	r0 = 0			  ## ble_ll_ch_update.c:110:13
 1e2064e:    81 00             	call r1			  ## ble_ll_ch_update.c:110:13
 1e20650:    00 f6 00 61       	r0 = [r6 + 256]			  ## ble_ll_ch_update.c:113:63
 1e20654:    04 f2 f1 1f       	if (r4 != r0) goto -30 <ble_f_read+0x2E : 1e2063a >			  ## ble_ll_ch_update.c:113:63
 1e20658:    00 f9 f8 60       	r0 = b[r6 + 248] (u)
 1e2065c:    11 fd 01 09       	r1 = r0 ^ 1			  ## ble_ll_ch_update.c:113:44
 1e20660:    f0 33             	if (r1 != 0) goto -32 <ble_f_read+0x36 : 1e20642 >			  ## ble_ll_ch_update.c:113:44
 1e20662:    eb 1f             	goto -42 <ble_f_read+0x2E : 1e2063a >			  ## ble_ll_ch_update.c:113:44
 1e20664:    00 f6 00 61       	r0 = [r6 + 256]			  ## ble_ll_ch_update.c:119:17
 1e20668:    40 f2 e7 1f       	if (r0 != r4) goto -50 <ble_f_read+0x2E : 1e2063a >			  ## ble_ll_ch_update.c:119:17
 1e2066c:    00 f6 f4 60       	r0 = [r6 + 244]			  ## ble_ll_ch_update.c:120:24
 1e20670:    40 09             	r0 += r4			  ## ble_ll_ch_update.c:120:24
 1e20672:    10 f6 f4 60       	[r6 + 244] = r0			  ## ble_ll_ch_update.c:120:24
 1e20676:    45 08             	r5 = r4			  ## ble_ll_ch_update.c:120:24
 1e20678:    e0 1f             	goto -64 <ble_f_read+0x2E : 1e2063a >			  ## ble_ll_ch_update.c:120:24


ble_f_open:
 1e2067a:    74 01             	[--sp] = {rets, r4}			  ## ble_ll_ch_update.c:129:0
 1e2067c:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## ble_ll_ch_update.c:137:18
 1e20682:    01 70             	r1 = 0			  ## ble_ll_ch_update.c:137:18
 1e20684:    11 f6 f4 00       	[r0 + 244] = r1			  ## ble_ll_ch_update.c:136:20
 1e20688:    14 70             	r4 = 1			  ## ble_ll_ch_update.c:136:20
 1e2068a:    7c 61             	b[r0 + 23] = r4			  ## ble_ll_ch_update.c:137:18
 1e2068c:    10 70             	r0 = 1			  ## ble_ll_ch_update.c:49:12
 1e2068e:    02 70             	r2 = 0			  ## ble_ll_ch_update.c:49:12
 1e20690:    03 70             	r3 = 0			  ## ble_ll_ch_update.c:49:12
 1e20692:    bf f3 b4 eb       	call -10392 <ll_update_send_data_handle : 1e1ddfe >			  ## ble_ll_ch_update.c:49:12
 1e20696:    01 20             	if (r0 == 0) goto 2 <ble_f_open+0x20 : 1e2069a >			  ## ble_ll_ch_update.c:49:12
 1e20698:    f4 07             	r4 = -1			  ## ble_ll_ch_update.c:142:5
 1e2069a:    20 05             	r0 = r4.l (u)			  ## ble_ll_ch_update.c:143:1
 1e2069c:    54 01             	{pc, r4} = [sp++]			  ## ble_ll_ch_update.c:143:1


ble_f_send_update_len:
 1e2069e:    34 00             	[--sp] = rets			  ## ble_ll_ch_update.c:146:0
 1e206a0:    13 08             	r3 = r1			  ## ble_ll_ch_update.c:146:0
 1e206a2:    08 20             	if (r0 == 0) goto 16 <ble_f_send_update_len+0x16 : 1e206b4 >			  ## ble_ll_ch_update.c:146:0
 1e206a4:    20 70             	r0 = 2			  ## ble_ll_ch_update.c:49:12
 1e206a6:    01 70             	r1 = 0			  ## ble_ll_ch_update.c:49:12
 1e206a8:    02 71             	r2 = 16			  ## ble_ll_ch_update.c:49:12
 1e206aa:    bf f3 a8 eb       	call -10416 <ll_update_send_data_handle : 1e1ddfe >			  ## ble_ll_ch_update.c:49:12
 1e206ae:    01 08             	r1 = r0			  ## ble_ll_ch_update.c:49:12
 1e206b0:    f0 07             	r0 = -1			  ## ble_ll_ch_update.c:49:12
 1e206b2:    01 32             	if (r1 != 0) goto 2 <ble_f_send_update_len+0x18 : 1e206b6 >			  ## ble_ll_ch_update.c:49:12
 1e206b4:    10 70             	r0 = 1
 1e206b6:    30 00             	pc = [sp++]			  ## ble_ll_ch_update.c:160:1


ble_f_stop:
 1e206b8:    74 01             	[--sp] = {rets, r4}			  ## ble_ll_ch_update.c:163:0
 1e206ba:    01 08             	r1 = r0			  ## ble_ll_ch_update.c:163:0
 1e206bc:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## ble_ll_ch_update.c:164:22
 1e206c2:    02 70             	r2 = 0			  ## ble_ll_ch_update.c:164:22
 1e206c4:    12 f6 04 01       	[r0 + 260] = r2			  ## ble_ll_ch_update.c:164:22
 1e206c8:    61 e1 05 c0       	ifs (r1 > 22) goto 10 <ble_f_stop+0x1E : 1e206d6 >			  ## ble_ll_ch_update.c:167:31
 1e206cc:    09 22             	if (r1 == 0) goto 18 <ble_f_stop+0x28 : 1e206e0 >
 1e206ce:    11 e0 0e 10       	if (r1 != 1) goto 28 <ble_f_stop+0x36 : 1e206ee >
 1e206d2:    50 70             	r0 = 5			  ## ble_ll_ch_update.c:49:12
 1e206d4:    06 18             	goto 12 <ble_f_stop+0x2A : 1e206e2 >			  ## ble_ll_ch_update.c:49:12
 1e206d6:    00 ff 97 10 02 00 	if (r1 == 151) goto 4 <ble_f_stop+0x28 : 1e206e0 >
 1e206dc:    71 e1 07 10       	if (r1 != 23) goto 14 <ble_f_stop+0x36 : 1e206ee >
 1e206e0:    00 70             	r0 = 0			  ## ble_ll_ch_update.c:49:12
 1e206e2:    01 70             	r1 = 0
 1e206e4:    03 70             	r3 = 0
 1e206e6:    bf f3 8a eb       	call -10476 <ll_update_send_data_handle : 1e1ddfe >
 1e206ea:    14 70             	r4 = 1
 1e206ec:    05 18             	goto 10 <ble_f_stop+0x40 : 1e206f8 >
 1e206ee:    00 70             	r0 = 0			  ## ble_ll_ch_update.c:49:12
 1e206f0:    03 70             	r3 = 0			  ## ble_ll_ch_update.c:49:12
 1e206f2:    04 70             	r4 = 0			  ## ble_ll_ch_update.c:49:12
 1e206f4:    bf f3 83 eb       	call -10490 <ll_update_send_data_handle : 1e1ddfe >			  ## ble_ll_ch_update.c:49:12
 1e206f8:    40 08             	r0 = r4			  ## ble_ll_ch_update.c:177:1
 1e206fa:    54 01             	{pc, r4} = [sp++]			  ## ble_ll_ch_update.c:177:1


ble_updata_handle:
 1e206fc:    76 01             	[--sp] = {rets, r6-r4}			  ## ble_ll_ch_update.c:180:0
 1e206fe:    c4 ff b0 20 00 00 	r4 = 8368 <gatt_client_conn_handle : 20b0 >			  ## ble_ll_ch_update.c:180:0
 1e20704:    00 f6 04 41       	r0 = [r4 + 260]			  ## ble_ll_ch_update.c:182:17
 1e20708:    1d 20             	if (r0 == 0) goto 58 <ble_updata_handle+0x48 : 1e20744 >
 1e2070a:    03 f9 f8 40       	r3 = b[r4 + 248] (u)
 1e2070e:    1a 26             	if (r3 == 0) goto 52 <ble_updata_handle+0x48 : 1e20744 >
 1e20710:    03 f6 00 41       	r3 = [r4 + 256]			  ## ble_ll_ch_update.c:183:44
 1e20714:    05 f6 fc 40       	r5 = [r4 + 252]			  ## ble_ll_ch_update.c:183:21
 1e20718:    86 b6             	r6 = r3 + r2			  ## ble_ll_ch_update.c:183:53
 1e2071a:    65 f2 02 20       	if (r5 >= r6) goto 4 <ble_updata_handle+0x26 : 1e20722 >			  ## ble_ll_ch_update.c:183:53
 1e2071e:    36 08             	r6 = r3			  ## ble_ll_ch_update.c:188:44
 1e20720:    05 18             	goto 10 <ble_updata_handle+0x30 : 1e2072c >			  ## ble_ll_ch_update.c:188:44
 1e20722:    30 09             	r0 += r3			  ## ble_ll_ch_update.c:184:37
 1e20724:    97 f3 de 33       	call 3041212 <memcpy : 106ee4 >			  ## ble_ll_ch_update.c:184:13
 1e20728:    16 f6 00 41       	[r4 + 256] = r6			  ## ble_ll_ch_update.c:185:30
 1e2072c:    65 f2 0a 10       	if (r5 != r6) goto 20 <ble_updata_handle+0x48 : 1e20744 >
 1e20730:    40 fc f8 00       	r0 = r4 + 248
 1e20734:    05 f4 02 09       	[r0 + 20] |= 2			  ## ble_ll_ch_update.c:55:24
 1e20738:    01 70             	r1 = 0			  ## ble_ll_ch_update.c:55:24
 1e2073a:    09 60             	b[r0 + 0] = r1			  ## ble_ll_ch_update.c:55:24
 1e2073c:    61 40             	r1 = [r0 + 24]			  ## ble_ll_ch_update.c:191:17
 1e2073e:    02 22             	if (r1 == 0) goto 4 <ble_updata_handle+0x48 : 1e20744 >			  ## ble_ll_ch_update.c:191:17
 1e20740:    00 70             	r0 = 0			  ## ble_ll_ch_update.c:192:17
 1e20742:    81 00             	call r1			  ## ble_ll_ch_update.c:192:17
 1e20744:    56 01             	{pc, r6-r4} = [sp++]			  ## ble_ll_ch_update.c:197:1


ble_test_update_exit:
 1e20746:    34 00             	[--sp] = rets			  ## ble_ll_ch_update.c:237:0
 1e20748:    c0 ff 40 67 e1 01 	r0 = 31549248 <gpio_regs+0x284 : 1e16740 >			  ## ble_ll_ch_update.c:239:5
 1e2074e:    bf f3 12 76       	call -70620 <puts : 1e0f376 >			  ## ble_ll_ch_update.c:239:5
 1e20752:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## ble_ll_ch_update.c:245:22
 1e20758:    01 70             	r1 = 0			  ## ble_ll_ch_update.c:245:22
 1e2075a:    11 f6 04 01       	[r0 + 260] = r1			  ## ble_ll_ch_update.c:245:22
 1e2075e:    88 01             	{rets} = [sp++]			  ## ble_ll_ch_update.c:246:5
 1e20760:    ff f3 6a eb       	goto -10540 <unregister_ll_update_handle : 1e1de38 >			  ## ble_ll_ch_update.c:246:5


ble_test_update_init:
 1e20764:    c2 ff b0 20 00 00 	r2 = 8368 <gatt_client_conn_handle : 20b0 >			  ## ble_ll_ch_update.c:213:0
 1e2076a:    10 f6 10 21       	[r2 + 272] = r0			  ## ble_ll_ch_update.c:201:30
 1e2076e:    11 f6 08 21       	[r2 + 264] = r1			  ## ble_ll_ch_update.c:202:29
 1e20772:    ff f3 6f eb       	goto -10530 <register_ll_update_handle : 1e1de54 >			  ## ble_ll_ch_update.c:220:5


update_thread_resume:
 1e20776:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## update_main.c:53:0
 1e2077c:    00 f6 14 01       	r0 = [r0 + 276]			  ## update_main.c:55:18
 1e20780:    d7 f3 44 33       	goto 3040904 <os_sem_post : 106e0c >			  ## update_main.c:55:5


update_thread_sleep:
 1e20784:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## update_main.c:47:0
 1e2078a:    00 f6 14 01       	r0 = [r0 + 276]			  ## update_main.c:49:25
 1e2078e:    01 fb f4 01       	r1 = 500 <BTCTLER_CL_RAM_TOTAL+0x10 : 1f4 >			  ## update_main.c:49:12
 1e20792:    d7 f3 39 33       	goto 3040882 <os_sem_pend : 106e08 >			  ## update_main.c:49:12


loader_info_record_write:
 1e20796:    78 01             	[--sp] = {rets, r8-r4}			  ## download_loop.c:1305:0
 1e20798:    24 08             	r4 = r2			  ## download_loop.c:1305:0
 1e2079a:    15 08             	r5 = r1			  ## download_loop.c:1305:0
 1e2079c:    07 08             	r7 = r0			  ## download_loop.c:1305:0
 1e2079e:    50 08             	r0 = r5			  ## download_loop.c:1314:16
 1e207a0:    41 08             	r1 = r4			  ## download_loop.c:1314:16
 1e207a2:    72 08             	r2 = r7			  ## download_loop.c:1314:16
 1e207a4:    bf f3 bf 07       	call -127106 <norflash_write : 1e01726 >			  ## download_loop.c:1314:16
 1e207a8:    d6 7f             	r6 = 253			  ## download_loop.c:1314:16
 1e207aa:    04 f2 19 10       	if (r4 != r0) goto 50 <loader_info_record_write+0x4A : 1e207e0 >
 1e207ae:    40 08             	r0 = r4			  ## download_loop.c:1320:20
 1e207b0:    bf f3 01 79       	call -69118 <malloc : 1e0f9b6 >			  ## download_loop.c:1320:20
 1e207b4:    08 08             	r8 = r0			  ## download_loop.c:1320:20
 1e207b6:    13 20             	if (r0 == 0) goto 38 <loader_info_record_write+0x48 : 1e207de >
 1e207b8:    41 08             	r1 = r4			  ## download_loop.c:1323:20
 1e207ba:    72 08             	r2 = r7			  ## download_loop.c:1323:20
 1e207bc:    bf f3 11 06       	call -127966 <norflash_read : 1e013e2 >			  ## download_loop.c:1323:20
 1e207c0:    c6 7f             	r6 = 252			  ## download_loop.c:1323:20
 1e207c2:    04 f2 08 10       	if (r4 != r0) goto 16 <loader_info_record_write+0x40 : 1e207d6 >			  ## download_loop.c:1323:20
 1e207c6:    50 08             	r0 = r5			  ## download_loop.c:1325:22
 1e207c8:    81 08             	r1 = r8			  ## download_loop.c:1325:22
 1e207ca:    42 08             	r2 = r4			  ## download_loop.c:1325:22
 1e207cc:    97 f3 8e 33       	call 3041052 <memcmp : 106eec >			  ## download_loop.c:1325:22
 1e207d0:    f6 07             	r6 = -1			  ## download_loop.c:1325:17
 1e207d2:    01 30             	if (r0 != 0) goto 2 <loader_info_record_write+0x40 : 1e207d6 >			  ## download_loop.c:1325:17
 1e207d4:    06 70             	r6 = 0			  ## download_loop.c:1325:17
 1e207d6:    80 08             	r0 = r8			  ## download_loop.c:1336:9
 1e207d8:    bf f3 18 79       	call -69072 <free : 1e0fa0c >			  ## download_loop.c:1336:9
 1e207dc:    01 18             	goto 2 <loader_info_record_write+0x4A : 1e207e0 >			  ## download_loop.c:1336:9
 1e207de:    e6 7f             	r6 = 254
 1e207e0:    80 05             	r0 = r6.b0 (u)			  ## download_loop.c:1342:5
 1e207e2:    58 01             	{pc, r8-r4} = [sp++]			  ## download_loop.c:1342:5


part_update_encrypt_key_check:
 1e207e4:    77 01             	[--sp] = {rets, r7-r4}			  ## download_loop.c:1630:0
 1e207e6:    fe 0b             	sp += -4			  ## download_loop.c:1630:0
 1e207e8:    04 08             	r4 = r0			  ## download_loop.c:1630:0
 1e207ea:    c0 ff 00 08 00 00 	r0 = 2048 <report_mmu_tlb_size : 800 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/efuse.c:9:22
 1e207f0:    c1 ff 50 2f 00 00 	r1 = 12112 <update_bss_start : 2f50 >			  ## download_loop.c:1636:50
 1e207f6:    01 42             	r1 = [r1 + 0]			  ## download_loop.c:1636:50
 1e207f8:    c6 ff b0 20 00 00 	r6 = 8368 <gatt_client_conn_handle : 20b0 >			  ## download_loop.c:1638:5
 1e207fe:    03 f6 18 61       	r3 = [r6 + 280]			  ## download_loop.c:1638:5
 1e20802:    e5 50             	r5 = h[r0 + 28] (u)			  ## download_loop.c:1641:5
 1e20804:    07 42             	r7 = [r1 + 0]			  ## download_loop.c:1636:58
 1e20806:    22 48             	r2 = [r4 + 8]			  ## download_loop.c:1638:61
 1e20808:    33 46             	r3 = [r3 + 12]			  ## download_loop.c:1638:18
 1e2080a:    00 70             	r0 = 0			  ## download_loop.c:1638:5
 1e2080c:    01 70             	r1 = 0			  ## download_loop.c:1638:5
 1e2080e:    83 00             	call r3			  ## download_loop.c:1638:5
 1e20810:    00 f6 18 61       	r0 = [r6 + 280]			  ## download_loop.c:1639:5
 1e20814:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:1639:18
 1e20816:    76 fc 00 02       	r6 = r7 + 512			  ## download_loop.c:1639:18
 1e2081a:    00 70             	r0 = 0			  ## download_loop.c:1639:5
 1e2081c:    02 72             	r2 = 32			  ## download_loop.c:1639:5
 1e2081e:    07 72             	r7 = 32			  ## download_loop.c:1639:5
 1e20820:    61 08             	r1 = r6			  ## download_loop.c:1639:5
 1e20822:    83 00             	call r3			  ## download_loop.c:1639:5
 1e20824:    23 48             	r3 = [r4 + 8]			  ## download_loop.c:1641:107
 1e20826:    02 72             	r2 = 32			  ## download_loop.c:1641:5
 1e20828:    0f 02             	[sp] = r7			  ## download_loop.c:1641:5
 1e2082a:    50 08             	r0 = r5			  ## download_loop.c:1641:5
 1e2082c:    61 08             	r1 = r6			  ## download_loop.c:1641:5
 1e2082e:    bf f3 db f5       	call -5194 <decode_data_by_user_key : 1e1f3e8 >			  ## download_loop.c:1641:5
 1e20832:    20 9c             	r0 = r6 + 2			  ## download_loop.c:1643:49
 1e20834:    e1 71             	r1 = 30			  ## download_loop.c:339:12
 1e20836:    bf f3 b8 05       	call -128144 <CRC16 : 1e013aa >			  ## download_loop.c:339:12
 1e2083a:    02 5c             	r2 = h[r6 + 0] (u)			  ## download_loop.c:1644:34
 1e2083c:    01 08             	r1 = r0			  ## download_loop.c:339:12
 1e2083e:    f0 07             	r0 = -1			  ## download_loop.c:1644:9
 1e20840:    21 f2 01 10       	if (r1 != r2) goto 2 <part_update_encrypt_key_check+0x62 : 1e20846 >			  ## download_loop.c:1644:9
 1e20844:    00 70             	r0 = 0			  ## download_loop.c:1644:9
 1e20846:    02 0a             	sp += 4
 1e20848:    57 01             	{pc, r7-r4} = [sp++]			  ## download_loop.c:1652:5


update_code_end:
 1e2084a:    7f 01             	[--sp] = {rets, r15-r4}			  ## clock.c:641:0
 1e2084c:    f2 0b             	sp += -28			  ## clock.c:641:0
 1e2084e:    05 70             	r5 = 0			  ## clock.c:641:0
 1e20850:    1d 02             	[sp+4] = r5			  ## clock.c:650:9
 1e20852:    c3 ff 80 84 1e 00 	r3 = 2000000 <uECC_vli_cmp_unsafe+0xE1484 : 1e8480 >			  ## clock.c:654:39
 1e20858:    c3 0e             	r3 = r0 * r3			  ## clock.c:654:39
 1e2085a:    94 70             	r4 = 9			  ## clock.c:654:39
 1e2085c:    c0 fe 40 43       	r4 = r3 / r4 (u)			  ## clock.c:654:39
 1e20860:    2c 02             	[sp+8] = r4			  ## clock.c:654:37
 1e20862:    74 70             	r4 = 7			  ## clock.c:655:39
 1e20864:    c0 fe 40 43       	r4 = r3 / r4 (u)			  ## clock.c:655:39
 1e20868:    3c 02             	[sp+12] = r4			  ## clock.c:655:37
 1e2086a:    c4 ff 80 1a 06 00 	r4 = 400000 <text_size+0x40BD0 : 61a80 >			  ## clock.c:656:39
 1e20870:    04 0f             	r4 = r0 * r4			  ## clock.c:656:39
 1e20872:    4c 02             	[sp+16] = r4			  ## clock.c:656:37
 1e20874:    34 70             	r4 = 3			  ## clock.c:657:39
 1e20876:    c0 fe 40 33       	r3 = r3 / r4 (u)			  ## clock.c:657:39
 1e2087a:    5b 02             	[sp+20] = r3			  ## clock.c:657:37
 1e2087c:    c3 ff 40 42 0f 00 	r3 = 1000000 <text_size+0xD3390 : f4240 >			  ## clock.c:654:39
 1e20882:    c3 0e             	r3 = r0 * r3			  ## clock.c:654:39
 1e20884:    6b 02             	[sp+24] = r3			  ## clock.c:658:37
 1e20886:    c3 ff b4 64 e1 01 	r3 = 31548596 <boot_addr_tab+0xC : 1e164b4 >			  ## clock.c:658:37
 1e2088c:    cf ff b8 64 e1 01 	r15 = 31548600 <boot_addr_tab+0x10 : 1e164b8 >			  ## clock.c:658:37
 1e20892:    cc ff 98 31 00 00 	r12 = 12696 <hdl.30 : 3198 >			  ## clock.c:658:37
 1e20898:    cd ff 9c 31 00 00 	r13 = 12700 <hdl.31 : 319c >			  ## clock.c:658:37
 1e2089e:    cb ff 9e 31 00 00 	r11 = 12702 <hdl.32 : 319e >			  ## clock.c:658:37
 1e208a4:    12 24             	if (r2 == 0) goto 36 <update_code_end+0x80 : 1e208ca >			  ## clock.c:658:37
 1e208a6:    00 f9 00 d0       	r0 = b[r13 + 0] (u)			  ## clock.c:702:52
 1e208aa:    01 f9 00 c0       	r1 = b[r12 + 0] (u)			  ## clock.c:702:22
 1e208ae:    02 f9 00 b0       	r2 = b[r11 + 0] (u)			  ## clock.c:702:79
 1e208b2:    00 fa 00 03       	r0 = b[r0+r3] (u)			  ## clock.c:702:52
 1e208b6:    43 a0             	r3 = sp + 4			  ## clock.c:702:52
 1e208b8:    a1 f6 00 31       	r1 = [r3+r1<<2]			  ## clock.c:702:22
 1e208bc:    02 fa 00 2f       	r2 = b[r2+r15] (u)			  ## clock.c:702:79
 1e208c0:    c0 fe 00 01       	r0 = r1 / r0 (u)			  ## clock.c:702:50
 1e208c4:    c0 fe 20 20       	r2 = r0 / r2 (u)			  ## clock.c:702:77
 1e208c8:    43 18             	goto 134 <update_code_end+0x106 : 1e20950 >
 1e208ca:    c4 ff 94 31 00 00 	r4 = 12692 <hdl.29 : 3194 >
 1e208d0:    ca ff 5c 31 00 00 	r10 = 12636 <hdl.5 : 315c >
 1e208d6:    0e 70             	r14 = 0
 1e208d8:    03 18             	goto 6 <update_code_end+0x96 : 1e208e0 >
 1e208da:    42 a0             	r2 = sp + 4
 1e208dc:    a5 f6 00 2e       	r5 = [r2+r14<<2]
 1e208e0:    07 70             	r7 = 0
 1e208e2:    0d 02             	[sp] = r5
 1e208e4:    02 fa 00 73       	r2 = b[r7+r3] (u)
 1e208e8:    c0 fe 20 35       	r3 = r5 / r2 (u)
 1e208ec:    06 70             	r6 = 0
 1e208ee:    05 70             	r5 = 0
 1e208f0:    02 fa 00 5f       	r2 = b[r5+r15] (u)			  ## clock.c:668:65
 1e208f4:    c0 fe 20 23       	r2 = r3 / r2 (u)			  ## clock.c:668:63
 1e208f8:    68 b4             	r8 = r2 - r1			  ## clock.c:670:43
 1e208fa:    08 e0 10 b0       	ifs (r8 < 0) goto 32 <update_code_end+0xD4 : 1e2091e >
 1e208fe:    08 e0 1d 00       	if (r8 == 0) goto 58 <update_code_end+0xF2 : 1e2093c >			  ## clock.c:677:25
 1e20902:    09 f6 00 40       	r9 = [r4 + 0]			  ## clock.c:689:33
 1e20906:    89 f2 0a 90       	if (r9 <= r8) goto 20 <update_code_end+0xD4 : 1e2091e >			  ## clock.c:689:33
 1e2090a:    18 f6 00 40       	[r4 + 0] = r8			  ## clock.c:690:42
 1e2090e:    1e f9 00 c0       	b[r12 + 0] = r14			  ## clock.c:691:40
 1e20912:    17 f9 00 d0       	b[r13 + 0] = r7			  ## clock.c:692:40
 1e20916:    16 f9 00 b0       	b[r11 + 0] = r6			  ## clock.c:693:40
 1e2091a:    10 f9 00 a0       	b[r10 + 0] = r0			  ## clock.c:695:48
 1e2091e:    15 80             	r5 += 1			  ## clock.c:667:56
 1e20920:    16 80             	r6 += 1			  ## clock.c:667:31
 1e20922:    45 e0 e5 3f       	if (r5 < 4) goto -54 <update_code_end+0xA6 : 1e208f0 >			  ## clock.c:667:31
 1e20926:    17 80             	r7 += 1			  ## clock.c:666:52
 1e20928:    05 02             	r5 = [sp]			  ## clock.c:666:52
 1e2092a:    c3 ff b4 64 e1 01 	r3 = 31548596 <boot_addr_tab+0xC : 1e164b4 >			  ## clock.c:666:52
 1e20930:    47 e0 d8 3f       	if (r7 < 4) goto -80 <update_code_end+0x9A : 1e208e4 >			  ## clock.c:666:52
 1e20934:    1e 80             	r14 += 1			  ## clock.c:665:51
 1e20936:    5e e0 d0 9f       	if (r14 <= 5) goto -96 <update_code_end+0x90 : 1e208da >			  ## clock.c:665:51
 1e2093a:    0a 18             	goto 20 <update_code_end+0x106 : 1e20950 >			  ## clock.c:665:51
 1e2093c:    c0 f4 00 49       	[r4 + 0] = 0			  ## clock.c:679:42
 1e20940:    1e f9 00 c0       	b[r12 + 0] = r14			  ## clock.c:680:40
 1e20944:    17 f9 00 d0       	b[r13 + 0] = r7			  ## clock.c:681:40
 1e20948:    16 f9 00 b0       	b[r11 + 0] = r6			  ## clock.c:682:40
 1e2094c:    10 f9 00 a0       	b[r10 + 0] = r0			  ## clock.c:683:48
 1e20950:    20 08             	r0 = r2			  ## clock.c:708:1
 1e20952:    0e 0a             	sp += 28			  ## clock.c:708:1
 1e20954:    5f 01             	{pc, r15-r4} = [sp++]			  ## clock.c:708:1


__hw_hsb_upper_bound:
 1e20956:    34 00             	[--sp] = rets			  ## clock.c:820:0
 1e20958:    c1 ff 94 31 00 00 	r1 = 12692 <hdl.29 : 3194 >			  ## clock.c:821:22
 1e2095e:    c0 f4 ff 1f       	[r1 + 0] = 4294967295			  ## clock.c:821:22
 1e20962:    01 08             	r1 = r0			  ## clock.c:821:22
 1e20964:    00 7c             	r0 = 192			  ## clock.c:832:5
 1e20966:    02 70             	r2 = 0			  ## clock.c:832:5
 1e20968:    70 17             	call -288 <update_code_end : 1e2084a >			  ## clock.c:832:5
 1e2096a:    c0 ff 5c 31 00 00 	r0 = 12636 <hdl.5 : 315c >			  ## clock.c:835:45
 1e20970:    00 60             	r0 = b[r0 + 0] (u)			  ## clock.c:835:12
 1e20972:    01 70             	r1 = 0			  ## clock.c:835:12
 1e20974:    12 70             	r2 = 1			  ## clock.c:835:12
 1e20976:    88 01             	{rets} = [sp++]			  ## clock.c:835:12
 1e20978:    68 1f             	goto -304 <update_code_end : 1e2084a >			  ## clock.c:835:12


voltage_by_freq_pre:
 1e2097a:    c2 ff c0 0f 00 00 	r2 = 4032 <sys_clock_limit+0x4 : fc0 >			  ## clock.c:1119:0
 1e20980:    01 70             	r1 = 0			  ## clock.c:1119:0
 1e20982:    43 f6 14 20       	r3 = [r2 ++= 20]			  ## clock.c:1130:26
 1e20986:    03 f2 03 20       	if (r3 >= r0) goto 6 <voltage_by_freq_pre+0x16 : 1e20990 >			  ## clock.c:1130:26
 1e2098a:    11 80             	r1 += 1			  ## clock.c:1129:33
 1e2098c:    61 e0 f9 bf       	ifs (r1 < 6) goto -14 <voltage_by_freq_pre+0x8 : 1e20982 >
 1e20990:    50 70             	r0 = 5			  ## clock.c:1135:21
 1e20992:    61 e0 01 00       	if (r1 == 6) goto 2 <voltage_by_freq_pre+0x1E : 1e20998 >
 1e20996:    10 08             	r0 = r1			  ## clock.c:1135:21
 1e20998:    c1 ff 84 31 00 00 	r1 = 12676 <hdl.23 : 3184 >			  ## clock.c:1135:19
 1e2099e:    08 62             	b[r1 + 0] = r0			  ## clock.c:1135:19
 1e209a0:    20 00             	rts			  ## clock.c:1136:1


pll_clock_by_all_limit:
 1e209a2:    76 01             	[--sp] = {rets, r6-r4}			  ## clock.c:1082:0
 1e209a4:    c1 ff 84 31 00 00 	r1 = 12676 <hdl.23 : 3184 >			  ## clock.c:1083:49
 1e209aa:    02 62             	r2 = b[r1 + 0] (u)			  ## clock.c:1083:25
 1e209ac:    01 fe 14 29       	r1 = r2 * 20			  ## clock.c:1083:25
 1e209b0:    c3 ff bc 0f 00 00 	r3 = 4028 <sys_clock_limit : fbc >			  ## clock.c:1083:25
 1e209b6:    81 f6 00 13       	r1 = [r1+r3]			  ## clock.c:1083:25
 1e209ba:    04 08             	r4 = r0
 1e209bc:    f5 07             	r5 = -1
 1e209be:    41 f2 14 30       	if (r1 < r4) goto 40 <pll_clock_by_all_limit+0x48 : 1e209ea >
 1e209c2:    40 71             	r0 = 20			  ## clock.c:1085:25
 1e209c4:    80 fe 00 32       	r3 += r2 * r0			  ## clock.c:1085:25
 1e209c8:    10 46             	r0 = [r3 + 4]			  ## clock.c:1085:25
 1e209ca:    40 f2 0e 30       	if (r0 < r4) goto 28 <pll_clock_by_all_limit+0x48 : 1e209ea >
 1e209ce:    c0 fe 40 01       	r0 = r1 / r4 (u)			  ## clock.c:1098:35
 1e209d2:    06 04             	r6 = r0.b0 (u)			  ## clock.c:1100:9
 1e209d4:    26 e0 08 30       	if (r6 < 2) goto 16 <pll_clock_by_all_limit+0x46 : 1e209e8 >
 1e209d8:    35 0f             	r5 = r6 * r4			  ## clock.c:1103:36
 1e209da:    50 08             	r0 = r5			  ## clock.c:1106:32
 1e209dc:    bc 17             	call -136 <__hw_hsb_upper_bound : 1e20956 >			  ## clock.c:1106:32
 1e209de:    05 f2 04 00       	if (r5 == r0) goto 8 <pll_clock_by_all_limit+0x48 : 1e209ea >
 1e209e2:    f6 8f             	r6 += -1			  ## clock.c:1101:37
 1e209e4:    26 e0 f8 af       	ifs (r6 >= 2) goto -16 <pll_clock_by_all_limit+0x36 : 1e209d8 >
 1e209e8:    45 08             	r5 = r4
 1e209ea:    50 08             	r0 = r5			  ## clock.c:1116:1
 1e209ec:    56 01             	{pc, r6-r4} = [sp++]			  ## clock.c:1116:1


__hw_pll_run_pre:
 1e209ee:    76 01             	[--sp] = {rets, r6-r4}			  ## clock.c:839:0
 1e209f0:    d4 0b             	sp += -88			  ## clock.c:839:0
 1e209f2:    c1 ff 94 31 00 00 	r1 = 12692 <hdl.29 : 3194 >			  ## clock.c:842:22
 1e209f8:    c0 f4 ff 1f       	[r1 + 0] = 4294967295			  ## clock.c:842:22
 1e209fc:    01 08             	r1 = r0			  ## clock.c:842:22
 1e209fe:    00 7c             	r0 = 192			  ## clock.c:852:5
 1e20a00:    02 70             	r2 = 0			  ## clock.c:852:5
 1e20a02:    06 70             	r6 = 0			  ## clock.c:852:5
 1e20a04:    22 17             	call -444 <update_code_end : 1e2084a >			  ## clock.c:852:5
 1e20a06:    c0 ff 98 31 00 00 	r0 = 12696 <hdl.30 : 3198 >			  ## clock.c:854:37
 1e20a0c:    00 60             	r0 = b[r0 + 0] (u)			  ## clock.c:854:37
 1e20a0e:    c1 ff 78 31 00 00 	r1 = 12664 <hdl.0 : 3178 >			  ## clock.c:854:27
 1e20a14:    c2 ff 9c 31 00 00 	r2 = 12700 <hdl.31 : 319c >			  ## clock.c:856:35
 1e20a1a:    02 64             	r2 = b[r2 + 0] (u)			  ## clock.c:856:35
 1e20a1c:    08 62             	b[r1 + 0] = r0			  ## clock.c:854:27
 1e20a1e:    c0 ff 9e 31 00 00 	r0 = 12702 <hdl.32 : 319e >			  ## clock.c:856:56
 1e20a24:    00 60             	r0 = b[r0 + 0] (u)			  ## clock.c:856:56
 1e20a26:    91 c0             	r1 = r2 << 2			  ## clock.c:856:42
 1e20a28:    c2 ff 5c 31 00 00 	r2 = 12636 <hdl.5 : 315c >			  ## clock.c:858:34
 1e20a2e:    04 64             	r4 = b[r2 + 0] (u)			  ## clock.c:858:34
 1e20a30:    10 09             	r0 += r1			  ## clock.c:856:46
 1e20a32:    c1 ff 7c 31 00 00 	r1 = 12668 <hdl.1 : 317c >			  ## clock.c:856:25
 1e20a38:    08 62             	b[r1 + 0] = r0			  ## clock.c:856:25
 1e20a3a:    05 a0             	r5 = sp + 0			  ## clock.c:856:25
 1e20a3c:    01 70             	r1 = 0			  ## clock.c:613:9
 1e20a3e:    42 74             	r2 = 68			  ## clock.c:613:9
 1e20a40:    50 08             	r0 = r5			  ## clock.c:613:9
 1e20a42:    97 f3 55 32       	call 3040426 <memset : 106ef0 >			  ## clock.c:613:9
 1e20a46:    c0 ff 80 84 1e 00 	r0 = 2000000 <uECC_vli_cmp_unsafe+0xE1484 : 1e8480 >			  ## clock.c:616:36
 1e20a4c:    20 0e             	r0 = r4 * r0			  ## clock.c:616:36
 1e20a4e:    91 70             	r1 = 9			  ## clock.c:616:36
 1e20a50:    c0 fe 10 10       	r1 = r0 / r1 (u)			  ## clock.c:616:36
 1e20a54:    19 02             	[sp+4] = r1			  ## clock.c:616:34
 1e20a56:    71 70             	r1 = 7			  ## clock.c:617:36
 1e20a58:    c0 fe 10 10       	r1 = r0 / r1 (u)			  ## clock.c:617:36
 1e20a5c:    29 02             	[sp+8] = r1			  ## clock.c:617:34
 1e20a5e:    c1 ff 80 1a 06 00 	r1 = 400000 <text_size+0x40BD0 : 61a80 >			  ## clock.c:618:36
 1e20a64:    61 0e             	r1 = r4 * r1			  ## clock.c:618:36
 1e20a66:    39 02             	[sp+12] = r1			  ## clock.c:618:34
 1e20a68:    31 70             	r1 = 3			  ## clock.c:619:36
 1e20a6a:    c0 fe 10 10       	r1 = r0 / r1 (u)			  ## clock.c:619:36
 1e20a6e:    49 02             	[sp+16] = r1			  ## clock.c:619:34
 1e20a70:    c1 ff 40 42 0f 00 	r1 = 1000000 <text_size+0xD3390 : f4240 >			  ## clock.c:616:36
 1e20a76:    61 0e             	r1 = r4 * r1			  ## clock.c:616:36
 1e20a78:    59 02             	[sp+20] = r1			  ## clock.c:620:34
 1e20a7a:    21 71             	r1 = 18			  ## clock.c:622:71
 1e20a7c:    c0 fe 10 10       	r1 = r0 / r1 (u)			  ## clock.c:622:71
 1e20a80:    19 03             	[sp+68] = r1			  ## clock.c:622:34
 1e20a82:    e1 70             	r1 = 14			  ## clock.c:623:71
 1e20a84:    c0 fe 10 10       	r1 = r0 / r1 (u)			  ## clock.c:623:71
 1e20a88:    29 03             	[sp+72] = r1			  ## clock.c:623:34
 1e20a8a:    c1 ff 40 0d 03 00 	r1 = 200000 <text_size+0xFE90 : 30d40 >			  ## clock.c:624:71
 1e20a90:    61 0e             	r1 = r4 * r1			  ## clock.c:624:71
 1e20a92:    39 03             	[sp+76] = r1			  ## clock.c:624:34
 1e20a94:    61 70             	r1 = 6			  ## clock.c:625:71
 1e20a96:    c0 fe 10 00       	r0 = r0 / r1 (u)			  ## clock.c:625:71
 1e20a9a:    48 03             	[sp+80] = r0			  ## clock.c:625:34
 1e20a9c:    c0 ff 20 a1 07 00 	r0 = 500000 <text_size+0x59270 : 7a120 >			  ## clock.c:626:71
 1e20aa2:    20 0e             	r0 = r4 * r0			  ## clock.c:626:71
 1e20aa4:    58 03             	[sp+84] = r0			  ## clock.c:626:34
 1e20aa6:    c0 ff 00 d8 b8 05 	r0 = 96000000 <uECC_vli_cmp_unsafe+0x1A86804 : 1b8d800 >			  ## clock.c:626:34
 1e20aac:    01 70             	r1 = 0			  ## clock.c:626:34
 1e20aae:    42 f6 04 50       	r2 = [r5 ++= 4]			  ## clock.c:629:32
 1e20ab2:    02 f2 05 00       	if (r2 == r0) goto 10 <__hw_pll_run_pre+0xD2 : 1e20ac0 >			  ## clock.c:629:32
 1e20ab6:    11 80             	r1 += 1			  ## clock.c:628:50
 1e20ab8:    16 80             	r6 += 1			  ## clock.c:628:23
 1e20aba:    71 e1 f8 3f       	if (r1 < 23) goto -16 <__hw_pll_run_pre+0xC0 : 1e20aae >			  ## clock.c:628:23
 1e20abe:    f6 7f             	r6 = 255
 1e20ac0:    c0 ff a0 31 00 00 	r0 = 12704 <hdl.3 : 31a0 >
 1e20ac6:    0e 60             	b[r0 + 0] = r6
 1e20ac8:    01 70             	r1 = 0			  ## clock.c:862:12
 1e20aca:    12 70             	r2 = 1			  ## clock.c:862:12
 1e20acc:    40 08             	r0 = r4			  ## clock.c:862:12
 1e20ace:    bd 16             	call -646 <update_code_end : 1e2084a >			  ## clock.c:862:12
 1e20ad0:    2c 0a             	sp += 88			  ## clock.c:862:12
 1e20ad2:    56 01             	{pc, r6-r4} = [sp++]			  ## clock.c:862:5


__hw_clk_limit:
 1e20ad4:    74 01             	[--sp] = {rets, r4}			  ## clock.c:404:0
 1e20ad6:    03 70             	r3 = 0			  ## clock.c:404:0
 1e20ad8:    c4 04             	r4 = r3.b0 (u)			  ## clock.c:408:19
 1e20ada:    14 80             	r4 += 1			  ## clock.c:409:13
 1e20adc:    c0 fe 40 40       	r4 = r0 / r4 (u)			  ## clock.c:409:13
 1e20ae0:    14 f2 04 90       	if (r4 <= r1) goto 8 <__hw_clk_limit+0x18 : 1e20aec >			  ## clock.c:409:13
 1e20ae4:    13 80             	r3 += 1			  ## clock.c:408:38
 1e20ae6:    c4 04             	r4 = r3.b0 (u)			  ## clock.c:408:38
 1e20ae8:    24 f2 f6 9f       	if (r4 <= r2) goto -20 <__hw_clk_limit+0x4 : 1e20ad8 >			  ## clock.c:408:38
 1e20aec:    c0 04             	r0 = r3.b0 (u)			  ## clock.c:414:5
 1e20aee:    54 01             	{pc, r4} = [sp++]			  ## clock.c:414:5


clock_all_limit_pre:
 1e20af0:    77 01             	[--sp] = {rets, r7-r4}			  ## clock.c:458:0
 1e20af2:    15 08             	r5 = r1			  ## clock.c:458:0
 1e20af4:    04 08             	r4 = r0			  ## clock.c:458:0
 1e20af6:    02 3a             	if (r5 != 0) goto 4 <clock_all_limit_pre+0xC : 1e20afc >			  ## clock.c:458:0
 1e20af8:    8f f3 72 14       	call 1976548 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
 1e20afc:    c0 ff 84 31 00 00 	r0 = 12676 <hdl.23 : 3184 >			  ## clock.c:419:62
 1e20b02:    00 60             	r0 = b[r0 + 0] (u)			  ## clock.c:419:38
 1e20b04:    41 71             	r1 = 20			  ## clock.c:419:38
 1e20b06:    c6 ff bc 0f 00 00 	r6 = 4028 <sys_clock_limit : fbc >			  ## clock.c:445:38
 1e20b0c:    80 fe 10 60       	r6 += r0 * r1			  ## clock.c:419:38
 1e20b10:    01 4c             	r1 = [r6 + 0]			  ## clock.c:419:38
 1e20b12:    72 70             	r2 = 7			  ## clock.c:419:12
 1e20b14:    40 08             	r0 = r4			  ## clock.c:419:12
 1e20b16:    de 17             	call -68 <__hw_clk_limit : 1e20ad4 >			  ## clock.c:419:12
 1e20b18:    10 80             	r0 += 1			  ## clock.c:465:23
 1e20b1a:    c0 fe 00 44       	r4 = r4 / r0 (u)			  ## clock.c:465:23
 1e20b1e:    c0 ff 40 42 0f 00 	r0 = 1000000 <text_size+0xD3390 : f4240 >			  ## clock.c:450:35
 1e20b24:    c0 fe 00 04       	r0 = r4 / r0 (u)			  ## clock.c:450:35
 1e20b28:    00 fe 1e 09       	r0 = r0 * 30			  ## clock.c:450:22
 1e20b2c:    01 fb e8 03       	r1 = 1000 <BTCTLER_LE_RAM_TOTAL+0xA : 3e8 >			  ## clock.c:450:47
 1e20b30:    c0 fe 10 00       	r0 = r0 / r1 (u)			  ## clock.c:450:47
 1e20b34:    c2 ff 6c 31 00 00 	r2 = 12652 <hdl.19 : 316c >			  ## clock.c:467:24
 1e20b3a:    31 4c             	r1 = [r6 + 12]			  ## clock.c:445:38
 1e20b3c:    08 64             	b[r2 + 0] = r0			  ## clock.c:467:24
 1e20b3e:    c0 ff 88 31 00 00 	r0 = 12680 <hdl.13 : 3188 >			  ## clock.c:465:21
 1e20b44:    0c 40             	[r0 + 0] = r4			  ## clock.c:465:21
 1e20b46:    f2 7f             	r2 = 255			  ## clock.c:445:12
 1e20b48:    40 08             	r0 = r4			  ## clock.c:445:12
 1e20b4a:    c4 17             	call -120 <__hw_clk_limit : 1e20ad4 >			  ## clock.c:445:12
 1e20b4c:    c1 ff 68 31 00 00 	r1 = 12648 <hdl.18 : 3168 >			  ## clock.c:470:21
 1e20b52:    08 62             	b[r1 + 0] = r0			  ## clock.c:470:21
 1e20b54:    c0 fe 50 14       	r1 = r4 / r5 (u)			  ## clock.c:484:27
 1e20b58:    10 fc ff 00       	r0 = r1 + 255			  ## clock.c:486:13
 1e20b5c:    05 70             	r5 = 0			  ## clock.c:485:9
 1e20b5e:    60 ff ff 19 01 00 	if ((r1 & 255) == 0) goto 2 <clock_all_limit_pre+0x76 : 1e20b66 >
 1e20b64:    05 08             	r5 = r0			  ## clock.c:485:9
 1e20b66:    11 4c             	r1 = [r6 + 4]			  ## clock.c:424:38
 1e20b68:    47 05             	r7 = r5.b0 (u)			  ## clock.c:485:9
 1e20b6a:    40 08             	r0 = r4			  ## clock.c:424:12
 1e20b6c:    b3 17             	call -154 <__hw_clk_limit : 1e20ad4 >			  ## clock.c:424:12
 1e20b6e:    07 f2 01 80       	if (r7 > r0) goto 2 <clock_all_limit_pre+0x84 : 1e20b74 >			  ## clock.c:424:12
 1e20b72:    05 08             	r5 = r0			  ## clock.c:488:11
 1e20b74:    40 05             	r0 = r5.b0 (u)
 1e20b76:    c1 ff 70 31 00 00 	r1 = 12656 <hdl.14 : 3170 >			  ## clock.c:489:21
 1e20b7c:    08 52             	h[r1 + 0] = r0			  ## clock.c:489:21
 1e20b7e:    10 80             	r0 += 1			  ## clock.c:490:23
 1e20b80:    21 4c             	r1 = [r6 + 8]			  ## clock.c:429:38
 1e20b82:    c0 fe 00 44       	r4 = r4 / r0 (u)			  ## clock.c:490:23
 1e20b86:    c0 ff 8c 31 00 00 	r0 = 12684 <hdl.15 : 318c >			  ## clock.c:490:21
 1e20b8c:    0c 40             	[r0 + 0] = r4			  ## clock.c:490:21
 1e20b8e:    72 70             	r2 = 7			  ## clock.c:429:12
 1e20b90:    40 08             	r0 = r4			  ## clock.c:429:12
 1e20b92:    a0 17             	call -192 <__hw_clk_limit : 1e20ad4 >			  ## clock.c:429:12
 1e20b94:    c1 ff 74 31 00 00 	r1 = 12660 <hdl.16 : 3174 >			  ## clock.c:494:21
 1e20b9a:    08 62             	b[r1 + 0] = r0			  ## clock.c:494:21
 1e20b9c:    10 80             	r0 += 1			  ## clock.c:495:23
 1e20b9e:    c0 fe 00 04       	r0 = r4 / r0 (u)			  ## clock.c:495:23
 1e20ba2:    c1 ff 90 31 00 00 	r1 = 12688 <hdl.17 : 3190 >			  ## clock.c:495:21
 1e20ba8:    08 42             	[r1 + 0] = r0			  ## clock.c:495:21
 1e20baa:    57 01             	{pc, r7-r4} = [sp++]			  ## clock.c:501:1


voltage_by_freq_post:
 1e20bac:    76 01             	[--sp] = {rets, r6-r4}			  ## clock.c:1292:0
 1e20bae:    c0 ff 80 31 00 00 	r0 = 12672 <hdl.24 : 3180 >			  ## clock.c:1292:0
 1e20bb4:    02 60             	r2 = b[r0 + 0] (u)			  ## clock.c:1292:0
 1e20bb6:    c0 ff 96 18 1a 00 	r0 = 1710230 <uECC_vli_cmp_unsafe+0x9A89A : 1a1896 >			  ## clock.c:1292:0
 1e20bbc:    51 60             	r1 = b[r0 + 5] (u)			  ## clock.c:1292:0
 1e20bbe:    31 fd 0f 19       	r1 = r1 & 4294967280			  ## clock.c:1292:0
 1e20bc2:    21 24             	if (r2 == 0) goto 66 <voltage_by_freq_post+0x5A : 1e20c06 >			  ## clock.c:1293:9
 1e20bc4:    c2 ff 84 31 00 00 	r2 = 12676 <hdl.23 : 3184 >			  ## clock.c:1294:9
 1e20bca:    03 64             	r3 = b[r2 + 0] (u)			  ## clock.c:1294:9
 1e20bcc:    03 fe 03 39       	r3 = r3 * 3			  ## clock.c:1294:9
 1e20bd0:    c4 ff 98 0f 00 00 	r4 = 3992 <update_data_start : f98 >			  ## clock.c:1295:9
 1e20bd6:    03 fa 00 34       	r3 = b[r3+r4] (u)			  ## clock.c:1294:9
 1e20bda:    23 fd 0f 39       	r3 = r3 & 15			  ## clock.c:1294:9
 1e20bde:    51 b6             	r1 |= r3			  ## clock.c:1294:9
 1e20be0:    59 60             	b[r0 + 5] = r1			  ## clock.c:1294:9
 1e20be2:    61 60             	r1 = b[r0 + 6] (u)			  ## clock.c:1295:9
 1e20be4:    03 64             	r3 = b[r2 + 0] (u)			  ## clock.c:1295:9
 1e20be6:    35 70             	r5 = 3			  ## clock.c:1295:9
 1e20be8:    46 08             	r6 = r4			  ## clock.c:1295:9
 1e20bea:    80 fe 50 63       	r6 += r3 * r5			  ## clock.c:1295:9
 1e20bee:    13 6c             	r3 = b[r6 + 1] (u)			  ## clock.c:1295:9
 1e20bf0:    23 fd 0f 39       	r3 = r3 & 15			  ## clock.c:1295:9
 1e20bf4:    21 fd f0 19       	r1 = r1 & 240			  ## clock.c:1295:9
 1e20bf8:    51 b6             	r1 |= r3			  ## clock.c:1295:9
 1e20bfa:    69 60             	b[r0 + 6] = r1			  ## clock.c:1295:9
 1e20bfc:    01 64             	r1 = b[r2 + 0] (u)			  ## clock.c:1296:9
 1e20bfe:    80 fe 50 41       	r4 += r1 * r5			  ## clock.c:1296:9
 1e20c02:    21 98             	r1 = r4 + 2			  ## clock.c:1296:9
 1e20c04:    08 18             	goto 16 <voltage_by_freq_post+0x6A : 1e20c16 >			  ## clock.c:1296:9
 1e20c06:    59 60             	b[r0 + 5] = r1			  ## clock.c:1298:9
 1e20c08:    61 60             	r1 = b[r0 + 6] (u)			  ## clock.c:1299:9
 1e20c0a:    21 fd f0 19       	r1 = r1 & 240			  ## clock.c:1299:9
 1e20c0e:    69 60             	b[r0 + 6] = r1			  ## clock.c:1299:9
 1e20c10:    c1 ff aa 0f 00 00 	r1 = 4010 <sysvdd_vdc13_table : faa >			  ## clock.c:1299:9
 1e20c16:    02 60             	r2 = b[r0 + 0] (u)
 1e20c18:    01 62             	r1 = b[r1 + 0] (u)
 1e20c1a:    22 fd f8 29       	r2 = r2 & 248
 1e20c1e:    21 fd 07 19       	r1 = r1 & 7
 1e20c22:    51 b4             	r1 |= r2
 1e20c24:    09 60             	b[r0 + 0] = r1
 1e20c26:    56 01             	{pc, r6-r4} = [sp++]			  ## clock.c:1302:1


__hw_pll_all_oe:
 1e20c28:    76 01             	[--sp] = {rets, r6-r4}			  ## clock.c:751:0
 1e20c2a:    c0 ff 0c 47 1e 00 	r0 = 1984268 <uECC_vli_cmp_unsafe+0xDD710 : 1e470c >			  ## clock.c:751:0
 1e20c30:    00 f4 02 0a       	[r0 + 0] |= 512			  ## clock.c:752:5
 1e20c34:    00 f4 01 09       	[r0 + 0] |= 1			  ## clock.c:753:5
 1e20c38:    05 fc 00 b9       	r5 = r0 + -18176
 1e20c3c:    11 4a             	r1 = [r5 + 4]			  ## clock.c:761:13
 1e20c3e:    21 fd 07 19       	r1 = r1 & 7			  ## clock.c:761:13
 1e20c42:    12 fc ff ff       	r2 = r1 + -1			  ## clock.c:761:5
 1e20c46:    01 70             	r1 = 0			  ## clock.c:761:5
 1e20c48:    32 e0 04 80       	if (r2 > 3) goto 8 <.GJTIE210_0_0_+0x2 : 1e20c54 >			  ## clock.c:761:5
 1e20c4c:    a2 00             	tbb [r2]


.GJTIS210_0_0_:
 1e20c4e:    02     < 2 : 0x2 >
 1e20c4f:    05     < 5 : 0x5 >
 1e20c50:    09     < 9 : 0x9 >
 1e20c51:    0c     < 12 : 0xC >
 1e20c52:    11 70             	r1 = 1
 1e20c54:    04 70             	r4 = 0
 1e20c56:    08 18             	goto 16 <.GJTIE210_0_0_+0x16 : 1e20c68 >
 1e20c58:    12 70             	r2 = 1
 1e20c5a:    04 70             	r4 = 0
 1e20c5c:    03 70             	r3 = 0
 1e20c5e:    06 18             	goto 12 <.GJTIE210_0_0_+0x1A : 1e20c6c >
 1e20c60:    13 70             	r3 = 1
 1e20c62:    04 70             	r4 = 0
 1e20c64:    02 18             	goto 4 <.GJTIE210_0_0_+0x18 : 1e20c6a >
 1e20c66:    14 70             	r4 = 1
 1e20c68:    03 70             	r3 = 0
 1e20c6a:    02 70             	r2 = 0
 1e20c6c:    05 4a             	r5 = [r5 + 0]			  ## clock.c:781:13
 1e20c6e:    85 fd 20 55       	r5 = uextra(r5, p:4, l:5)			  ## clock.c:781:13
 1e20c72:    f5 8f             	r5 += -1			  ## clock.c:781:5
 1e20c74:    35 e1 12 80       	if (r5 > 19) goto 36 <.GJTIE210_1_1_+0xE : 1e20c9c >			  ## clock.c:781:5
 1e20c78:    a5 00             	tbb [r5]


.GJTIS210_1_1_:
 1e20c7a:    0a     < 10 : 0xA >
 1e20c7b:    0c     < 12 : 0xC >
 1e20c7c:    0e     < 14 : 0xE >
 1e20c7d:    10     < 16 : 0x10 >
 1e20c7e:    11     < 17 : 0x11 >
 1e20c7f:    11     < 17 : 0x11 >
 1e20c80:    11     < 17 : 0x11 >
 1e20c81:    11     < 17 : 0x11 >
 1e20c82:    11     < 17 : 0x11 >
 1e20c83:    11     < 17 : 0x11 >
 1e20c84:    11     < 17 : 0x11 >
 1e20c85:    11     < 17 : 0x11 >
 1e20c86:    11     < 17 : 0x11 >
 1e20c87:    11     < 17 : 0x11 >
 1e20c88:    11     < 17 : 0x11 >
 1e20c89:    11     < 17 : 0x11 >
 1e20c8a:    0a     < 10 : 0xA >
 1e20c8b:    0c     < 12 : 0xC >
 1e20c8c:    0e     < 14 : 0xE >
 1e20c8d:    10     < 16 : 0x10 >
 1e20c8e:    11 70             	r1 = 1
 1e20c90:    05 18             	goto 10 <.GJTIE210_1_1_+0xE : 1e20c9c >
 1e20c92:    12 70             	r2 = 1
 1e20c94:    03 18             	goto 6 <.GJTIE210_1_1_+0xE : 1e20c9c >
 1e20c96:    13 70             	r3 = 1
 1e20c98:    01 18             	goto 2 <.GJTIE210_1_1_+0xE : 1e20c9c >
 1e20c9a:    14 70             	r4 = 1
 1e20c9c:    05 40             	r5 = [r0 + 0]			  ## clock.c:806:5
 1e20c9e:    f5 b0             	r5 &= 4294967293			  ## clock.c:806:5
 1e20ca0:    c1 fd 08 54       	r5 <= insert(r4, p:1, l:1)			  ## clock.c:806:5
 1e20ca4:    0d 40             	[r0 + 0] = r5			  ## clock.c:806:5
 1e20ca6:    04 40             	r4 = [r0 + 0]			  ## clock.c:807:5
 1e20ca8:    74 b1             	r4 &= 4294967291			  ## clock.c:807:5
 1e20caa:    c1 fd 10 43       	r4 <= insert(r3, p:2, l:1)			  ## clock.c:807:5
 1e20cae:    0c 40             	[r0 + 0] = r4			  ## clock.c:807:5
 1e20cb0:    03 40             	r3 = [r0 + 0]			  ## clock.c:808:5
 1e20cb2:    f3 b1             	r3 &= 4294967287			  ## clock.c:808:5
 1e20cb4:    c1 fd 18 32       	r3 <= insert(r2, p:3, l:1)			  ## clock.c:808:5
 1e20cb8:    0b 40             	[r0 + 0] = r3			  ## clock.c:808:5
 1e20cba:    02 40             	r2 = [r0 + 0]			  ## clock.c:809:5
 1e20cbc:    72 b2             	r2 &= 4294967279			  ## clock.c:809:5
 1e20cbe:    c1 fd 20 21       	r2 <= insert(r1, p:4, l:1)			  ## clock.c:809:5
 1e20cc2:    0a 40             	[r0 + 0] = r2			  ## clock.c:809:5
 1e20cc4:    56 01             	{pc, r6-r4} = [sp++]			  ## clock.c:810:1


clock_all_limit_post:
 1e20cc6:    34 00             	[--sp] = rets			  ## clock.c:599:0
 1e20cc8:    c0 ff 6c 31 00 00 	r0 = 12652 <hdl.19 : 316c >			  ## clock.c:603:51
 1e20cce:    01 60             	r1 = b[r0 + 0] (u)			  ## clock.c:603:9
 1e20cd0:    c0 ff 68 31 00 00 	r0 = 12648 <hdl.18 : 3168 >			  ## clock.c:603:34
 1e20cd6:    00 60             	r0 = b[r0 + 0] (u)			  ## clock.c:603:9
 1e20cd8:    8f f3 8c 17       	call 1978136 <__hw_spi_clk_div : 3bf4 >			  ## clock.c:603:9
 1e20cdc:    c0 ff 08 00 1e 00 	r0 = 1966088 <uECC_vli_cmp_unsafe+0xD900C : 1e0008 >			  ## clock.c:603:9
 1e20ce2:    01 40             	r1 = [r0 + 0]			  ## clock.c:604:9
 1e20ce4:    c2 ff 70 31 00 00 	r2 = 12656 <hdl.14 : 3170 >			  ## clock.c:604:9
 1e20cea:    02 54             	r2 = h[r2 + 0] (u)			  ## clock.c:604:9
 1e20cec:    c8 fd 00 12       	r1 <= insert(r2, p:0, l:8)			  ## clock.c:604:9
 1e20cf0:    09 40             	[r0 + 0] = r1			  ## clock.c:604:9
 1e20cf2:    01 40             	r1 = [r0 + 0]			  ## clock.c:605:9
 1e20cf4:    c2 ff 74 31 00 00 	r2 = 12660 <hdl.16 : 3174 >			  ## clock.c:605:9
 1e20cfa:    02 64             	r2 = b[r2 + 0] (u)			  ## clock.c:605:9
 1e20cfc:    31 fd 07 1a       	r1 = r1 & 4294965503			  ## clock.c:605:9
 1e20d00:    22 fd 07 29       	r2 = r2 & 7			  ## clock.c:605:9
 1e20d04:    c3 fd 40 12       	r1 <= insert(r2, p:8, l:3)			  ## clock.c:605:9
 1e20d08:    09 40             	[r0 + 0] = r1			  ## clock.c:605:9
 1e20d0a:    30 00             	pc = [sp++]			  ## clock.c:608:1


clk_set:
 1e20d0c:    78 01             	[--sp] = {rets, r8-r4}			  ## clock.c:2294:0
 1e20d0e:    c8 ff a4 31 00 00 	r8 = 12708 <clk_set.last_clk : 31a4 >			  ## clock.c:2294:0
 1e20d14:    00 f9 00 80       	r0 = b[r8 + 0] (u)			  ## clock.c:2294:0
 1e20d18:    60 30             	if (r0 != 0) goto 192 <clk_set+0xCE : 1e20dda >			  ## clock.c:2294:0
 1e20d1a:    c6 ff a8 67 e1 01 	r6 = 31549352 <storage_device_end : 1e167a8 >			  ## clock.c:2294:0
 1e20d20:    c7 ff 80 67 e1 01 	r7 = 31549312 <clock_mcpwm : 1e16780 >			  ## clock.c:2294:0
 1e20d26:    67 f2 06 20       	if (r7 >= r6) goto 12 <clk_set+0x2A : 1e20d36 >			  ## clock.c:2294:0
 1e20d2a:    74 08             	r4 = r7			  ## clock.c:2294:0
 1e20d2c:    40 f6 08 40       	r0 = [r4 ++= 8]			  ## clock.c:1540:12
 1e20d30:    80 00             	call r0			  ## clock.c:1540:9
 1e20d32:    64 f2 fb 3f       	if (r4 < r6) goto -10 <clk_set+0x20 : 1e20d2c >
 1e20d36:    c5 ff 64 31 00 00 	r5 = 12644 <hdl.2 : 3164 >
 1e20d3c:    00 4a             	r0 = [r5 + 0]			  ## clock.c:1543:17
 1e20d3e:    43 20             	if (r0 == 0) goto 134 <clk_set+0xBA : 1e20dc6 >			  ## clock.c:1543:17
 1e20d40:    c0 ff 00 6c dc 02 	r0 = 48000000 <uECC_vli_cmp_unsafe+0xCBFC04 : dc6c00 >			  ## clock.c:1385:17
 1e20d46:    07 16             	call -1010 <__hw_hsb_upper_bound : 1e20956 >			  ## clock.c:1385:17
 1e20d48:    04 08             	r4 = r0			  ## clock.c:1385:17
 1e20d4a:    f4 ef 3c 00       	if (r4 == -1) goto 120 <clk_set+0xBA : 1e20dc6 >
 1e20d4e:    15 16             	call -982 <voltage_by_freq_pre : 1e2097a >			  ## clock.c:1391:5
 1e20d50:    40 08             	r0 = r4			  ## clock.c:1395:27
 1e20d52:    27 16             	call -946 <pll_clock_by_all_limit : 1e209a2 >			  ## clock.c:1395:27
 1e20d54:    08 4a             	[r5 + 0] = r0			  ## clock.c:1395:25
 1e20d56:    f0 ef 36 00       	if (r0 == -1) goto 108 <clk_set+0xBA : 1e20dc6 >			  ## clock.c:1395:25
 1e20d5a:    49 16             	call -878 <__hw_pll_run_pre : 1e209ee >			  ## clock.c:1403:27
 1e20d5c:    08 4a             	[r5 + 0] = r0			  ## clock.c:1403:25
 1e20d5e:    f0 ef 32 00       	if (r0 == -1) goto 100 <clk_set+0xBA : 1e20dc6 >			  ## clock.c:1403:25
 1e20d62:    41 08             	r1 = r4			  ## clock.c:1409:5
 1e20d64:    c5 16             	call -630 <clock_all_limit_pre : 1e20af0 >			  ## clock.c:1409:5
 1e20d66:    97 f3 19 30       	call 3039282 <local_irq_disable : 106d9c >			  ## clock.c:1411:5
 1e20d6a:    08 00             	csync			  ## clock.c:1411:5
 1e20d6c:    c4 ff 0c 00 1e 00 	r4 = 1966092 <uECC_vli_cmp_unsafe+0xD9010 : 1e000c >			  ## clock.c:1411:5
 1e20d72:    00 48             	r0 = [r4 + 0]			  ## clock.c:1413:5
 1e20d74:    30 fd 0c 09       	r0 = r0 & 4294967283			  ## clock.c:1413:5
 1e20d78:    08 48             	[r4 + 0] = r0			  ## clock.c:1413:5
 1e20d7a:    10 48             	r0 = [r4 + 4]			  ## clock.c:1421:5
 1e20d7c:    30 fd 07 0a       	r0 = r0 & 4294965503			  ## clock.c:1421:5
 1e20d80:    00 fd 03 0a       	r0 = r0 | 768			  ## clock.c:1421:5
 1e20d84:    18 48             	[r4 + 4] = r0			  ## clock.c:1421:5
 1e20d86:    08 00             	csync			  ## clock.c:1421:5
 1e20d88:    11 17             	call -478 <voltage_by_freq_post : 1e20bac >			  ## clock.c:1423:5
 1e20d8a:    00 4a             	r0 = [r5 + 0]			  ## clock.c:980:17
 1e20d8c:    f0 ef 11 00       	if (r0 == -1) goto 34 <clk_set+0xA6 : 1e20db2 >			  ## clock.c:980:17
 1e20d90:    10 48             	r0 = [r4 + 4]			  ## clock.c:984:5
 1e20d92:    c1 ff 78 31 00 00 	r1 = 12664 <hdl.0 : 3178 >			  ## clock.c:984:5
 1e20d98:    01 62             	r1 = b[r1 + 0] (u)			  ## clock.c:984:5
 1e20d9a:    c3 fd 00 01       	r0 <= insert(r1, p:0, l:3)			  ## clock.c:984:5
 1e20d9e:    18 48             	[r4 + 4] = r0			  ## clock.c:984:5
 1e20da0:    10 48             	r0 = [r4 + 4]			  ## clock.c:985:5
 1e20da2:    c1 ff 7c 31 00 00 	r1 = 12668 <hdl.1 : 317c >			  ## clock.c:985:5
 1e20da8:    01 62             	r1 = b[r1 + 0] (u)			  ## clock.c:985:5
 1e20daa:    c4 fd 20 01       	r0 <= insert(r1, p:4, l:4)			  ## clock.c:985:5
 1e20dae:    18 48             	[r4 + 4] = r0			  ## clock.c:985:5
 1e20db0:    3b 17             	call -394 <__hw_pll_all_oe : 1e20c28 >			  ## clock.c:987:5
 1e20db2:    89 17             	call -238 <clock_all_limit_post : 1e20cc6 >			  ## clock.c:1427:5
 1e20db4:    10 48             	r0 = [r4 + 4]			  ## clock.c:1429:5
 1e20db6:    30 fd 07 0a       	r0 = r0 & 4294965503			  ## clock.c:1429:5
 1e20dba:    00 fd 06 0a       	r0 = r0 | 1536			  ## clock.c:1429:5
 1e20dbe:    18 48             	[r4 + 4] = r0			  ## clock.c:1429:5
 1e20dc0:    08 00             	csync			  ## clock.c:1429:5
 1e20dc2:    97 f3 e9 2f       	call 3039186 <local_irq_enable : 106d98 >			  ## clock.c:1431:5
 1e20dc6:    67 f2 05 20       	if (r7 >= r6) goto 10 <clk_set+0xC8 : 1e20dd4 >
 1e20dca:    10 4e             	r0 = [r7 + 4]			  ## clock.c:1548:12
 1e20dcc:    80 00             	call r0			  ## clock.c:1548:9
 1e20dce:    87 80             	r7 += 8			  ## clock.c:1547:5
 1e20dd0:    67 f2 fb 3f       	if (r7 < r6) goto -10 <clk_set+0xBE : 1e20dca >
 1e20dd4:    10 70             	r0 = 1
 1e20dd6:    10 f9 00 80       	b[r8 + 0] = r0
 1e20dda:    58 01             	{pc, r8-r4} = [sp++]


clk_voltage_init:
 1e20ddc:    c0 ff 80 31 00 00 	r0 = 12672 <hdl.24 : 3180 >			  ## clock.c:2443:0
 1e20de2:    11 70             	r1 = 1			  ## clock.c:2443:0
 1e20de4:    09 60             	b[r0 + 0] = r1			  ## clock.c:2443:0
 1e20de6:    20 00             	rts			  ## clock.c:2451:1


clk_early_init:
 1e20de8:    76 01             	[--sp] = {rets, r6-r4}			  ## clock.c:2380:0
 1e20dea:    c0 ff 00 02 1f 00 	r0 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >			  ## clock.c:1588:22
 1e20df0:    00 40             	r0 = [r0 + 0]			  ## clock.c:1588:22
 1e20df2:    00 d2             	r0 = r0 >> 8			  ## clock.c:1588:36
 1e20df4:    71 90             	r1 = r0 + 7			  ## clock.c:1591:5
 1e20df6:    83 fd 08 01       	r0 = uextra(r1, p:1, l:3)			  ## clock.c:1591:5
 1e20dfa:    d9 fd 18 01       	r0 <= insert(r1, p:3, l:25)			  ## clock.c:1591:5
 1e20dfe:    a4 fd 00 10       	r1 = sextra(r0, p:0, l:4)			  ## clock.c:1591:5
 1e20e02:    01 e0 14 b0       	ifs (r1 < 0) goto 40 <clk_early_init+0x46 : 1e20e2e >			  ## clock.c:1591:5
 1e20e06:    20 fd 0f 09       	r0 = r0 & 15
 1e20e0a:    11 70             	r1 = 1
 1e20e0c:    f8 fd 00 01       	r0 = r1 << r0
 1e20e10:    60 ff e1 09 0c 00 	if ((r0 & 225) == 0) goto 24 <clk_early_init+0x46 : 1e20e2e >
 1e20e16:    00 70             	r0 = 0
 1e20e18:    c1 ff bc 0f 00 00 	r1 = 4028 <sys_clock_limit : fbc >
 1e20e1e:    c2 ff 80 f0 fa 02 	r2 = 50000000 <uECC_vli_cmp_unsafe+0xEA8084 : faf080 >
 1e20e24:    43 b0             	r3 = r0 + r1			  ## clock.c:1624:47
 1e20e26:    40 81             	r0 += 20			  ## clock.c:1623:26
 1e20e28:    3a 46             	[r3 + 12] = r2			  ## clock.c:1624:47
 1e20e2a:    80 e7 fb 1f       	if (r0 != 120) goto -10 <clk_early_init+0x3C : 1e20e24 >			  ## clock.c:1624:47
 1e20e2e:    c0 ff 58 31 00 00 	r0 = 12632 <hdl.27 : 3158 >			  ## clock.c:1635:30
 1e20e34:    c0 f4 00 09       	[r0 + 0] = 0			  ## clock.c:1635:30
 1e20e38:    c5 ff 0c 00 1e 00 	r5 = 1966092 <uECC_vli_cmp_unsafe+0xD9010 : 1e000c >
 1e20e3e:    00 4a             	r0 = [r5 + 0]			  ## clock.c:1003:9
 1e20e40:    30 fd 0e 09       	r0 = r0 & 4294967281			  ## clock.c:1003:9
 1e20e44:    08 4a             	[r5 + 0] = r0			  ## clock.c:1003:9
 1e20e46:    c0 ff 60 31 00 00 	r0 = 12640 <hdl.11 : 3160 >			  ## clock.c:1003:9
 1e20e4c:    11 70             	r1 = 1			  ## clock.c:1003:9
 1e20e4e:    09 60             	b[r0 + 0] = r1			  ## clock.c:1003:9
 1e20e50:    c0 ff 00 36 6e 01 	r0 = 24000000 <uECC_vli_cmp_unsafe+0x15DC604 : 16e3600 >			  ## clock.c:1308:16
 1e20e56:    7f 15             	call -1282 <__hw_hsb_upper_bound : 1e20956 >			  ## clock.c:1308:16
 1e20e58:    04 08             	r4 = r0			  ## clock.c:1308:16
 1e20e5a:    c6 ff 64 31 00 00 	r6 = 12644 <hdl.2 : 3164 >
 1e20e60:    f4 ef 0c 00       	if (r4 == -1) goto 24 <clk_early_init+0x94 : 1e20e7c >
 1e20e64:    8a 15             	call -1260 <voltage_by_freq_pre : 1e2097a >			  ## clock.c:1314:5
 1e20e66:    40 08             	r0 = r4			  ## clock.c:1318:27
 1e20e68:    9c 15             	call -1224 <pll_clock_by_all_limit : 1e209a2 >			  ## clock.c:1318:27
 1e20e6a:    08 4c             	[r6 + 0] = r0			  ## clock.c:1318:25
 1e20e6c:    f0 ef 06 00       	if (r0 == -1) goto 12 <clk_early_init+0x94 : 1e20e7c >			  ## clock.c:1318:25
 1e20e70:    be 15             	call -1156 <__hw_pll_run_pre : 1e209ee >			  ## clock.c:1326:27
 1e20e72:    08 4c             	[r6 + 0] = r0			  ## clock.c:1326:25
 1e20e74:    f0 ef 02 00       	if (r0 == -1) goto 4 <clk_early_init+0x94 : 1e20e7c >			  ## clock.c:1326:25
 1e20e78:    41 08             	r1 = r4			  ## clock.c:1332:5
 1e20e7a:    3a 16             	call -908 <clock_all_limit_pre : 1e20af0 >			  ## clock.c:1332:5
 1e20e7c:    97 f3 8e 2f       	call 3039004 <local_irq_disable : 106d9c >			  ## clock.c:1494:5
 1e20e80:    08 00             	csync			  ## clock.c:1494:5
 1e20e82:    00 4a             	r0 = [r5 + 0]			  ## clock.c:1496:5
 1e20e84:    30 fd 0c 09       	r0 = r0 & 4294967283			  ## clock.c:1496:5
 1e20e88:    08 4a             	[r5 + 0] = r0			  ## clock.c:1496:5
 1e20e8a:    00 f4 01 59       	[r5 + 0] |= 1			  ## clock.c:352:5
 1e20e8e:    40 76             	r0 = 100			  ## clock.c:353:5
 1e20e90:    8f f3 e2 1e       	call 1981892 <delay : 4c58 >			  ## clock.c:353:5
 1e20e94:    10 4a             	r0 = [r5 + 4]			  ## clock.c:1501:5
 1e20e96:    30 fd 07 0a       	r0 = r0 & 4294965503			  ## clock.c:1501:5
 1e20e9a:    00 fd 03 0a       	r0 = r0 | 768			  ## clock.c:1501:5
 1e20e9e:    18 4a             	[r5 + 4] = r0			  ## clock.c:1501:5
 1e20ea0:    08 00             	csync			  ## clock.c:1501:5
 1e20ea2:    84 16             	call -760 <voltage_by_freq_post : 1e20bac >			  ## clock.c:1503:5
 1e20ea4:    54 fc f4 46       	r4 = r5 + 18164			  ## clock.c:1503:5
 1e20ea8:    40 48             	r0 = [r4 + 16]			  ## clock.c:1351:9
 1e20eaa:    30 fd 60 09       	r0 = r0 & 4294967199			  ## clock.c:1351:9
 1e20eae:    48 48             	[r4 + 16] = r0			  ## clock.c:1351:9
 1e20eb0:    00 48             	r0 = [r4 + 0]			  ## clock.c:873:5
 1e20eb2:    30 fd 18 09       	r0 = r0 & 4294967271			  ## clock.c:873:5
 1e20eb6:    90 b1             	r0 |= 8			  ## clock.c:873:5
 1e20eb8:    08 48             	[r4 + 0] = r0			  ## clock.c:873:5
 1e20eba:    00 48             	r0 = [r4 + 0]			  ## clock.c:874:5
 1e20ebc:    30 fd e0 09       	r0 = r0 & 4294967071			  ## clock.c:874:5
 1e20ec0:    00 fd a0 09       	r0 = r0 | 160			  ## clock.c:874:5
 1e20ec4:    08 48             	[r4 + 0] = r0			  ## clock.c:874:5
 1e20ec6:    00 48             	r0 = [r4 + 0]			  ## clock.c:875:5
 1e20ec8:    30 fd 07 0a       	r0 = r0 & 4294965503			  ## clock.c:875:5
 1e20ecc:    90 b4             	r0 |= 512			  ## clock.c:875:5
 1e20ece:    08 48             	[r4 + 0] = r0			  ## clock.c:875:5
 1e20ed0:    00 48             	r0 = [r4 + 0]			  ## clock.c:877:5
 1e20ed2:    70 ba             	r0 &= 4293918719			  ## clock.c:877:5
 1e20ed4:    08 48             	[r4 + 0] = r0			  ## clock.c:877:5
 1e20ed6:    00 48             	r0 = [r4 + 0]			  ## clock.c:878:5
 1e20ed8:    30 fd 60 02       	r0 = r0 & 4294852607			  ## clock.c:878:5
 1e20edc:    10 b8             	r0 |= 65536			  ## clock.c:878:5
 1e20ede:    08 48             	[r4 + 0] = r0			  ## clock.c:878:5
 1e20ee0:    00 48             	r0 = [r4 + 0]			  ## clock.c:879:5
 1e20ee2:    30 fd 0e 0b       	r0 = r0 & 4294049791			  ## clock.c:879:5
 1e20ee6:    90 b9             	r0 |= 524288			  ## clock.c:879:5
 1e20ee8:    08 48             	[r4 + 0] = r0			  ## clock.c:879:5
 1e20eea:    00 48             	r0 = [r4 + 0]			  ## clock.c:880:5
 1e20eec:    30 fd 38 0a       	r0 = r0 & 4294952959			  ## clock.c:880:5
 1e20ef0:    00 fd 18 0a       	r0 = r0 | 6144			  ## clock.c:880:5
 1e20ef4:    08 48             	[r4 + 0] = r0			  ## clock.c:880:5
 1e20ef6:    00 48             	r0 = [r4 + 0]			  ## clock.c:383:5
 1e20ef8:    70 b0             	r0 &= 4294967294			  ## clock.c:383:5
 1e20efa:    08 48             	[r4 + 0] = r0			  ## clock.c:383:5
 1e20efc:    00 48             	r0 = [r4 + 0]			  ## clock.c:384:5
 1e20efe:    f0 b0             	r0 &= 4294967293			  ## clock.c:384:5
 1e20f00:    08 48             	[r4 + 0] = r0			  ## clock.c:384:5
 1e20f02:    10 48             	r0 = [r4 + 4]			  ## clock.c:384:5
 1e20f04:    30 fd 0c 0a       	r0 = r0 & 4294964223			  ## clock.c:384:5
 1e20f08:    90 b5             	r0 |= 2048			  ## clock.c:384:5
 1e20f0a:    18 48             	[r4 + 4] = r0			  ## clock.c:384:5
 1e20f0c:    10 48             	r0 = [r4 + 4]			  ## clock.c:894:5
 1e20f0e:    30 fd 7f 09       	r0 = r0 & 4294967168			  ## clock.c:894:5
 1e20f12:    18 48             	[r4 + 4] = r0			  ## clock.c:894:5
 1e20f14:    20 48             	r0 = [r4 + 8]			  ## clock.c:895:5
 1e20f16:    c1 ff 5c 31 00 00 	r1 = 12636 <hdl.5 : 315c >			  ## clock.c:895:5
 1e20f1c:    01 62             	r1 = b[r1 + 0] (u)			  ## clock.c:895:5
 1e20f1e:    c2 70             	r2 = 12			  ## clock.c:895:5
 1e20f20:    c0 fe 20 11       	r1 = r1 / r2 (u)			  ## clock.c:895:5
 1e20f24:    11 fc fe 0f       	r1 = r1 + 4094			  ## clock.c:895:5
 1e20f28:    cc fd 00 01       	r0 <= insert(r1, p:0, l:12)			  ## clock.c:895:5
 1e20f2c:    28 48             	[r4 + 8] = r0			  ## clock.c:895:5
 1e20f2e:    00 4c             	r0 = [r6 + 0]			  ## clock.c:713:17
 1e20f30:    f0 ef 23 00       	if (r0 == -1) goto 70 <clk_early_init+0x192 : 1e20f7a >			  ## clock.c:713:17
 1e20f34:    10 4a             	r0 = [r5 + 4]			  ## clock.c:717:5
 1e20f36:    c1 ff 78 31 00 00 	r1 = 12664 <hdl.0 : 3178 >			  ## clock.c:717:5
 1e20f3c:    01 62             	r1 = b[r1 + 0] (u)			  ## clock.c:717:5
 1e20f3e:    c3 fd 00 01       	r0 <= insert(r1, p:0, l:3)			  ## clock.c:717:5
 1e20f42:    18 4a             	[r5 + 4] = r0			  ## clock.c:717:5
 1e20f44:    10 4a             	r0 = [r5 + 4]			  ## clock.c:718:5
 1e20f46:    c1 ff 7c 31 00 00 	r1 = 12668 <hdl.1 : 317c >			  ## clock.c:718:5
 1e20f4c:    01 62             	r1 = b[r1 + 0] (u)			  ## clock.c:718:5
 1e20f4e:    c4 fd 20 01       	r0 <= insert(r1, p:4, l:4)			  ## clock.c:718:5
 1e20f52:    18 4a             	[r5 + 4] = r0			  ## clock.c:718:5
 1e20f54:    00 4a             	r0 = [r5 + 0]			  ## clock.c:732:5
 1e20f56:    70 b5             	r0 &= 4294966271			  ## clock.c:732:5
 1e20f58:    08 4a             	[r5 + 0] = r0			  ## clock.c:732:5
 1e20f5a:    00 4a             	r0 = [r5 + 0]			  ## clock.c:734:5
 1e20f5c:    f0 b4             	r0 &= 4294966783			  ## clock.c:734:5
 1e20f5e:    08 4a             	[r5 + 0] = r0			  ## clock.c:734:5
 1e20f60:    00 4a             	r0 = [r5 + 0]			  ## clock.c:735:5
 1e20f62:    c1 ff a0 31 00 00 	r1 = 12704 <hdl.3 : 31a0 >			  ## clock.c:735:5
 1e20f68:    01 62             	r1 = b[r1 + 0] (u)			  ## clock.c:735:5
 1e20f6a:    02 fb 0f fe       	r2 = -497 <bank_code_load_addr+0x1DC817 : 1fffe0f >			  ## clock.c:735:5
 1e20f6e:    50 b5             	r0 &= r2			  ## clock.c:735:5
 1e20f70:    21 fd 1f 19       	r1 = r1 & 31			  ## clock.c:735:5
 1e20f74:    c5 fd 20 01       	r0 <= insert(r1, p:4, l:5)			  ## clock.c:735:5
 1e20f78:    08 4a             	[r5 + 0] = r0			  ## clock.c:735:5
 1e20f7a:    56 16             	call -852 <__hw_pll_all_oe : 1e20c28 >			  ## clock.c:902:5
 1e20f7c:    00 f4 01 49       	[r4 + 0] |= 1			  ## clock.c:374:5
 1e20f80:    10 70             	r0 = 1			  ## clock.c:375:5
 1e20f82:    8f f3 69 1e       	call 1981650 <delay : 4c58 >			  ## clock.c:375:5
 1e20f86:    00 f4 02 49       	[r4 + 0] |= 2			  ## clock.c:376:5
 1e20f8a:    40 71             	r0 = 20			  ## clock.c:377:5
 1e20f8c:    8f f3 64 1e       	call 1981640 <delay : 4c58 >			  ## clock.c:377:5
 1e20f90:    9a 16             	call -716 <clock_all_limit_post : 1e20cc6 >			  ## clock.c:1377:5
 1e20f92:    10 4a             	r0 = [r5 + 4]			  ## clock.c:1379:5
 1e20f94:    30 fd 07 0a       	r0 = r0 & 4294965503			  ## clock.c:1379:5
 1e20f98:    00 fd 06 0a       	r0 = r0 | 1536			  ## clock.c:1379:5
 1e20f9c:    18 4a             	[r5 + 4] = r0			  ## clock.c:1379:5
 1e20f9e:    08 00             	csync			  ## clock.c:1379:5
 1e20fa0:    97 f3 fa 2e       	call 3038708 <local_irq_enable : 106d98 >			  ## clock.c:1528:5
 1e20fa4:    20 4a             	r0 = [r5 + 8]			  ## clock.c:1673:5
 1e20fa6:    30 fd 03 0a       	r0 = r0 & 4294966527			  ## clock.c:1673:5
 1e20faa:    28 4a             	[r5 + 8] = r0			  ## clock.c:1673:5
 1e20fac:    20 4a             	r0 = [r5 + 8]			  ## clock.c:1675:5
 1e20fae:    30 fd 0c 0a       	r0 = r0 & 4294964223			  ## clock.c:1675:5
 1e20fb2:    28 4a             	[r5 + 8] = r0			  ## clock.c:1675:5
 1e20fb4:    10 4a             	r0 = [r5 + 4]			  ## clock.c:1678:5
 1e20fb6:    f0 b5             	r0 &= 4294965247			  ## clock.c:1678:5
 1e20fb8:    18 4a             	[r5 + 4] = r0			  ## clock.c:1678:5
 1e20fba:    c0 ff 17 18 1a 00 	r0 = 1710103 <uECC_vli_cmp_unsafe+0x9A81B : 1a1817 >			  ## clock.c:1678:5
 1e20fc0:    01 60             	r1 = b[r0 + 0] (u)			  ## clock.c:2388:5
 1e20fc2:    71 b0             	r1 &= 4294967294			  ## clock.c:2388:5
 1e20fc4:    09 60             	b[r0 + 0] = r1			  ## clock.c:2388:5
 1e20fc6:    40 fc 14 0d       	r0 = r4 + 3348			  ## clock.c:2390:20
 1e20fca:    00 f4 0f 09       	[r0 + 0] |= 15			  ## clock.c:2390:20
 1e20fce:    56 01             	{pc, r6-r4} = [sp++]			  ## clock.c:2390:20

Disassembly of section .mmu_tlb:
report_mmu_tlb_begin:
       0:    00 00 00 00     "\0\0\0\0"
       4:    00 00 00 00     "\0\0\0\0"
       8:    00 00 00 00     "\0\0\0\0"
       c:    00 00 00 00     "\0\0\0\0"
      10:    00 00 00 00     "\0\0\0\0"
      14:    00 00 00 00     "\0\0\0\0"
      18:    00 00 00 00     "\0\0\0\0"
      1c:    00 00 00 00     "\0\0\0\0"
      20:    00 00 00 00     "\0\0\0\0"
      24:    00 00 00 00     "\0\0\0\0"
      28:    00 00 00 00     "\0\0\0\0"
      2c:    00 00 00 00     "\0\0\0\0"
      30:    00 00 00 00     "\0\0\0\0"
      34:    00 00 00 00     "\0\0\0\0"
      38:    00 00 00 00     "\0\0\0\0"
      3c:    00 00 00 00     "\0\0\0\0"
      40:    00 00 00 00     "\0\0\0\0"
      44:    00 00 00 00     "\0\0\0\0"
      48:    00 00 00 00     "\0\0\0\0"
      4c:    00 00 00 00     "\0\0\0\0"
      50:    00 00 00 00     "\0\0\0\0"
      54:    00 00 00 00     "\0\0\0\0"
      58:    00 00 00 00     "\0\0\0\0"
      5c:    00 00 00 00     "\0\0\0\0"
      60:    00 00 00 00     "\0\0\0\0"
      64:    00 00 00 00     "\0\0\0\0"
      68:    00 00 00 00     "\0\0\0\0"
      6c:    00 00 00 00     "\0\0\0\0"
      70:    00 00 00 00     "\0\0\0\0"
      74:    00 00 00 00     "\0\0\0\0"
      78:    00 00 00 00     "\0\0\0\0"
      7c:    00 00 00 00     "\0\0\0\0"
      80:    00 00 00 00     "\0\0\0\0"
      84:    00 00 00 00     "\0\0\0\0"
      88:    00 00 00 00     "\0\0\0\0"
      8c:    00 00 00 00     "\0\0\0\0"
      90:    00 00 00 00     "\0\0\0\0"
      94:    00 00 00 00     "\0\0\0\0"
      98:    00 00 00 00     "\0\0\0\0"
      9c:    00 00 00 00     "\0\0\0\0"
      a0:    00 00 00 00     "\0\0\0\0"
      a4:    00 00 00 00     "\0\0\0\0"
      a8:    00 00 00 00     "\0\0\0\0"
      ac:    00 00 00 00     "\0\0\0\0"
      b0:    00 00 00 00     "\0\0\0\0"
      b4:    00 00 00 00     "\0\0\0\0"
      b8:    00 00 00 00     "\0\0\0\0"
      bc:    00 00 00 00     "\0\0\0\0"
      c0:    00 00 00 00     "\0\0\0\0"
      c4:    00 00 00 00     "\0\0\0\0"
      c8:    00 00 00 00     "\0\0\0\0"
      cc:    00 00 00 00     "\0\0\0\0"
      d0:    00 00 00 00     "\0\0\0\0"
      d4:    00 00 00 00     "\0\0\0\0"
      d8:    00 00 00 00     "\0\0\0\0"
      dc:    00 00 00 00     "\0\0\0\0"
      e0:    00 00 00 00     "\0\0\0\0"
      e4:    00 00 00 00     "\0\0\0\0"
      e8:    00 00 00 00     "\0\0\0\0"
      ec:    00 00 00 00     "\0\0\0\0"
      f0:    00 00 00 00     "\0\0\0\0"
      f4:    00 00 00 00     "\0\0\0\0"
      f8:    00 00 00 00     "\0\0\0\0"
      fc:    00 00 00 00     "\0\0\0\0"
     100:    00 00 00 00     "\0\0\0\0"
     104:    00 00 00 00     "\0\0\0\0"
     108:    00 00 00 00     "\0\0\0\0"
     10c:    00 00 00 00     "\0\0\0\0"
     110:    00 00 00 00     "\0\0\0\0"
     114:    00 00 00 00     "\0\0\0\0"
     118:    00 00 00 00     "\0\0\0\0"
     11c:    00 00 00 00     "\0\0\0\0"
     120:    00 00 00 00     "\0\0\0\0"
     124:    00 00 00 00     "\0\0\0\0"
     128:    00 00 00 00     "\0\0\0\0"
     12c:    00 00 00 00     "\0\0\0\0"
     130:    00 00 00 00     "\0\0\0\0"
     134:    00 00 00 00     "\0\0\0\0"
     138:    00 00 00 00     "\0\0\0\0"
     13c:    00 00 00 00     "\0\0\0\0"
     140:    00 00 00 00     "\0\0\0\0"
     144:    00 00 00 00     "\0\0\0\0"
     148:    00 00 00 00     "\0\0\0\0"
     14c:    00 00 00 00     "\0\0\0\0"
     150:    00 00 00 00     "\0\0\0\0"
     154:    00 00 00 00     "\0\0\0\0"
     158:    00 00 00 00     "\0\0\0\0"
     15c:    00 00 00 00     "\0\0\0\0"
     160:    00 00 00 00     "\0\0\0\0"
     164:    00 00 00 00     "\0\0\0\0"
     168:    00 00 00 00     "\0\0\0\0"
     16c:    00 00 00 00     "\0\0\0\0"
     170:    00 00 00 00     "\0\0\0\0"
     174:    00 00 00 00     "\0\0\0\0"
     178:    00 00 00 00     "\0\0\0\0"
     17c:    00 00 00 00     "\0\0\0\0"
     180:    00 00 00 00     "\0\0\0\0"
     184:    00 00 00 00     "\0\0\0\0"
     188:    00 00 00 00     "\0\0\0\0"
     18c:    00 00 00 00     "\0\0\0\0"
     190:    00 00 00 00     "\0\0\0\0"
     194:    00 00 00 00     "\0\0\0\0"
     198:    00 00 00 00     "\0\0\0\0"
     19c:    00 00 00 00     "\0\0\0\0"
     1a0:    00 00 00 00     "\0\0\0\0"
     1a4:    00 00 00 00     "\0\0\0\0"
     1a8:    00 00 00 00     "\0\0\0\0"
     1ac:    00 00 00 00     "\0\0\0\0"
     1b0:    00 00 00 00     "\0\0\0\0"
     1b4:    00 00 00 00     "\0\0\0\0"
     1b8:    00 00 00 00     "\0\0\0\0"
     1bc:    00 00 00 00     "\0\0\0\0"
     1c0:    00 00 00 00     "\0\0\0\0"
     1c4:    00 00 00 00     "\0\0\0\0"
     1c8:    00 00 00 00     "\0\0\0\0"
     1cc:    00 00 00 00     "\0\0\0\0"
     1d0:    00 00 00 00     "\0\0\0\0"
     1d4:    00 00 00 00     "\0\0\0\0"
     1d8:    00 00 00 00     "\0\0\0\0"
     1dc:    00 00 00 00     "\0\0\0\0"
     1e0:    00 00 00 00     "\0\0\0\0"
     1e4:    00 00 00 00     "\0\0\0\0"
     1e8:    00 00 00 00     "\0\0\0\0"
     1ec:    00 00 00 00     "\0\0\0\0"
     1f0:    00 00 00 00     "\0\0\0\0"
     1f4:    00 00 00 00     "\0\0\0\0"
     1f8:    00 00 00 00     "\0\0\0\0"
     1fc:    00 00 00 00     "\0\0\0\0"
     200:    00 00 00 00     "\0\0\0\0"
     204:    00 00 00 00     "\0\0\0\0"
     208:    00 00 00 00     "\0\0\0\0"
     20c:    00 00 00 00     "\0\0\0\0"
     210:    00 00 00 00     "\0\0\0\0"
     214:    00 00 00 00     "\0\0\0\0"
     218:    00 00 00 00     "\0\0\0\0"
     21c:    00 00 00 00     "\0\0\0\0"
     220:    00 00 00 00     "\0\0\0\0"
     224:    00 00 00 00     "\0\0\0\0"
     228:    00 00 00 00     "\0\0\0\0"
     22c:    00 00 00 00     "\0\0\0\0"
     230:    00 00 00 00     "\0\0\0\0"
     234:    00 00 00 00     "\0\0\0\0"
     238:    00 00 00 00     "\0\0\0\0"
     23c:    00 00 00 00     "\0\0\0\0"
     240:    00 00 00 00     "\0\0\0\0"
     244:    00 00 00 00     "\0\0\0\0"
     248:    00 00 00 00     "\0\0\0\0"
     24c:    00 00 00 00     "\0\0\0\0"
     250:    00 00 00 00     "\0\0\0\0"
     254:    00 00 00 00     "\0\0\0\0"
     258:    00 00 00 00     "\0\0\0\0"
     25c:    00 00 00 00     "\0\0\0\0"
     260:    00 00 00 00     "\0\0\0\0"
     264:    00 00 00 00     "\0\0\0\0"
     268:    00 00 00 00     "\0\0\0\0"
     26c:    00 00 00 00     "\0\0\0\0"
     270:    00 00 00 00     "\0\0\0\0"
     274:    00 00 00 00     "\0\0\0\0"
     278:    00 00 00 00     "\0\0\0\0"
     27c:    00 00 00 00     "\0\0\0\0"
     280:    00 00 00 00     "\0\0\0\0"
     284:    00 00 00 00     "\0\0\0\0"
     288:    00 00 00 00     "\0\0\0\0"
     28c:    00 00 00 00     "\0\0\0\0"
     290:    00 00 00 00     "\0\0\0\0"
     294:    00 00 00 00     "\0\0\0\0"
     298:    00 00 00 00     "\0\0\0\0"
     29c:    00 00 00 00     "\0\0\0\0"
     2a0:    00 00 00 00     "\0\0\0\0"
     2a4:    00 00 00 00     "\0\0\0\0"
     2a8:    00 00 00 00     "\0\0\0\0"
     2ac:    00 00 00 00     "\0\0\0\0"
     2b0:    00 00 00 00     "\0\0\0\0"
     2b4:    00 00 00 00     "\0\0\0\0"
     2b8:    00 00 00 00     "\0\0\0\0"
     2bc:    00 00 00 00     "\0\0\0\0"
     2c0:    00 00 00 00     "\0\0\0\0"
     2c4:    00 00 00 00     "\0\0\0\0"
     2c8:    00 00 00 00     "\0\0\0\0"
     2cc:    00 00 00 00     "\0\0\0\0"
     2d0:    00 00 00 00     "\0\0\0\0"
     2d4:    00 00 00 00     "\0\0\0\0"
     2d8:    00 00 00 00     "\0\0\0\0"
     2dc:    00 00 00 00     "\0\0\0\0"
     2e0:    00 00 00 00     "\0\0\0\0"
     2e4:    00 00 00 00     "\0\0\0\0"
     2e8:    00 00 00 00     "\0\0\0\0"
     2ec:    00 00 00 00     "\0\0\0\0"
     2f0:    00 00 00 00     "\0\0\0\0"
     2f4:    00 00 00 00     "\0\0\0\0"
     2f8:    00 00 00 00     "\0\0\0\0"
     2fc:    00 00 00 00     "\0\0\0\0"
     300:    00 00 00 00     "\0\0\0\0"
     304:    00 00 00 00     "\0\0\0\0"
     308:    00 00 00 00     "\0\0\0\0"
     30c:    00 00 00 00     "\0\0\0\0"
     310:    00 00 00 00     "\0\0\0\0"
     314:    00 00 00 00     "\0\0\0\0"
     318:    00 00 00 00     "\0\0\0\0"
     31c:    00 00 00 00     "\0\0\0\0"
     320:    00 00 00 00     "\0\0\0\0"
     324:    00 00 00 00     "\0\0\0\0"
     328:    00 00 00 00     "\0\0\0\0"
     32c:    00 00 00 00     "\0\0\0\0"
     330:    00 00 00 00     "\0\0\0\0"
     334:    00 00 00 00     "\0\0\0\0"
     338:    00 00 00 00     "\0\0\0\0"
     33c:    00 00 00 00     "\0\0\0\0"
     340:    00 00 00 00     "\0\0\0\0"
     344:    00 00 00 00     "\0\0\0\0"
     348:    00 00 00 00     "\0\0\0\0"
     34c:    00 00 00 00     "\0\0\0\0"
     350:    00 00 00 00     "\0\0\0\0"
     354:    00 00 00 00     "\0\0\0\0"
     358:    00 00 00 00     "\0\0\0\0"
     35c:    00 00 00 00     "\0\0\0\0"
     360:    00 00 00 00     "\0\0\0\0"
     364:    00 00 00 00     "\0\0\0\0"
     368:    00 00 00 00     "\0\0\0\0"
     36c:    00 00 00 00     "\0\0\0\0"
     370:    00 00 00 00     "\0\0\0\0"
     374:    00 00 00 00     "\0\0\0\0"
     378:    00 00 00 00     "\0\0\0\0"
     37c:    00 00 00 00     "\0\0\0\0"
     380:    00 00 00 00     "\0\0\0\0"
     384:    00 00 00 00     "\0\0\0\0"
     388:    00 00 00 00     "\0\0\0\0"
     38c:    00 00 00 00     "\0\0\0\0"
     390:    00 00 00 00     "\0\0\0\0"
     394:    00 00 00 00     "\0\0\0\0"
     398:    00 00 00 00     "\0\0\0\0"
     39c:    00 00 00 00     "\0\0\0\0"
     3a0:    00 00 00 00     "\0\0\0\0"
     3a4:    00 00 00 00     "\0\0\0\0"
     3a8:    00 00 00 00     "\0\0\0\0"
     3ac:    00 00 00 00     "\0\0\0\0"
     3b0:    00 00 00 00     "\0\0\0\0"
     3b4:    00 00 00 00     "\0\0\0\0"
     3b8:    00 00 00 00     "\0\0\0\0"
     3bc:    00 00 00 00     "\0\0\0\0"
     3c0:    00 00 00 00     "\0\0\0\0"
     3c4:    00 00 00 00     "\0\0\0\0"
     3c8:    00 00 00 00     "\0\0\0\0"
     3cc:    00 00 00 00     "\0\0\0\0"
     3d0:    00 00 00 00     "\0\0\0\0"
     3d4:    00 00 00 00     "\0\0\0\0"
     3d8:    00 00 00 00     "\0\0\0\0"
     3dc:    00 00 00 00     "\0\0\0\0"
     3e0:    00 00 00 00     "\0\0\0\0"
     3e4:    00 00 00 00     "\0\0\0\0"
     3e8:    00 00 00 00     "\0\0\0\0"
     3ec:    00 00 00 00     "\0\0\0\0"
     3f0:    00 00 00 00     "\0\0\0\0"
     3f4:    00 00 00 00     "\0\0\0\0"
     3f8:    00 00 00 00     "\0\0\0\0"
     3fc:    00 00 00 00     "\0\0\0\0"
     400:    00 00 00 00     "\0\0\0\0"
     404:    00 00 00 00     "\0\0\0\0"
     408:    00 00 00 00     "\0\0\0\0"
     40c:    00 00 00 00     "\0\0\0\0"
     410:    00 00 00 00     "\0\0\0\0"
     414:    00 00 00 00     "\0\0\0\0"
     418:    00 00 00 00     "\0\0\0\0"
     41c:    00 00 00 00     "\0\0\0\0"
     420:    00 00 00 00     "\0\0\0\0"
     424:    00 00 00 00     "\0\0\0\0"
     428:    00 00 00 00     "\0\0\0\0"
     42c:    00 00 00 00     "\0\0\0\0"
     430:    00 00 00 00     "\0\0\0\0"
     434:    00 00 00 00     "\0\0\0\0"
     438:    00 00 00 00     "\0\0\0\0"
     43c:    00 00 00 00     "\0\0\0\0"
     440:    00 00 00 00     "\0\0\0\0"
     444:    00 00 00 00     "\0\0\0\0"
     448:    00 00 00 00     "\0\0\0\0"
     44c:    00 00 00 00     "\0\0\0\0"
     450:    00 00 00 00     "\0\0\0\0"
     454:    00 00 00 00     "\0\0\0\0"
     458:    00 00 00 00     "\0\0\0\0"
     45c:    00 00 00 00     "\0\0\0\0"
     460:    00 00 00 00     "\0\0\0\0"
     464:    00 00 00 00     "\0\0\0\0"
     468:    00 00 00 00     "\0\0\0\0"
     46c:    00 00 00 00     "\0\0\0\0"
     470:    00 00 00 00     "\0\0\0\0"
     474:    00 00 00 00     "\0\0\0\0"
     478:    00 00 00 00     "\0\0\0\0"
     47c:    00 00 00 00     "\0\0\0\0"
     480:    00 00 00 00     "\0\0\0\0"
     484:    00 00 00 00     "\0\0\0\0"
     488:    00 00 00 00     "\0\0\0\0"
     48c:    00 00 00 00     "\0\0\0\0"
     490:    00 00 00 00     "\0\0\0\0"
     494:    00 00 00 00     "\0\0\0\0"
     498:    00 00 00 00     "\0\0\0\0"
     49c:    00 00 00 00     "\0\0\0\0"
     4a0:    00 00 00 00     "\0\0\0\0"
     4a4:    00 00 00 00     "\0\0\0\0"
     4a8:    00 00 00 00     "\0\0\0\0"
     4ac:    00 00 00 00     "\0\0\0\0"
     4b0:    00 00 00 00     "\0\0\0\0"
     4b4:    00 00 00 00     "\0\0\0\0"
     4b8:    00 00 00 00     "\0\0\0\0"
     4bc:    00 00 00 00     "\0\0\0\0"
     4c0:    00 00 00 00     "\0\0\0\0"
     4c4:    00 00 00 00     "\0\0\0\0"
     4c8:    00 00 00 00     "\0\0\0\0"
     4cc:    00 00 00 00     "\0\0\0\0"
     4d0:    00 00 00 00     "\0\0\0\0"
     4d4:    00 00 00 00     "\0\0\0\0"
     4d8:    00 00 00 00     "\0\0\0\0"
     4dc:    00 00 00 00     "\0\0\0\0"
     4e0:    00 00 00 00     "\0\0\0\0"
     4e4:    00 00 00 00     "\0\0\0\0"
     4e8:    00 00 00 00     "\0\0\0\0"
     4ec:    00 00 00 00     "\0\0\0\0"
     4f0:    00 00 00 00     "\0\0\0\0"
     4f4:    00 00 00 00     "\0\0\0\0"
     4f8:    00 00 00 00     "\0\0\0\0"
     4fc:    00 00 00 00     "\0\0\0\0"
     500:    00 00 00 00     "\0\0\0\0"
     504:    00 00 00 00     "\0\0\0\0"
     508:    00 00 00 00     "\0\0\0\0"
     50c:    00 00 00 00     "\0\0\0\0"
     510:    00 00 00 00     "\0\0\0\0"
     514:    00 00 00 00     "\0\0\0\0"
     518:    00 00 00 00     "\0\0\0\0"
     51c:    00 00 00 00     "\0\0\0\0"
     520:    00 00 00 00     "\0\0\0\0"
     524:    00 00 00 00     "\0\0\0\0"
     528:    00 00 00 00     "\0\0\0\0"
     52c:    00 00 00 00     "\0\0\0\0"
     530:    00 00 00 00     "\0\0\0\0"
     534:    00 00 00 00     "\0\0\0\0"
     538:    00 00 00 00     "\0\0\0\0"
     53c:    00 00 00 00     "\0\0\0\0"
     540:    00 00 00 00     "\0\0\0\0"
     544:    00 00 00 00     "\0\0\0\0"
     548:    00 00 00 00     "\0\0\0\0"
     54c:    00 00 00 00     "\0\0\0\0"
     550:    00 00 00 00     "\0\0\0\0"
     554:    00 00 00 00     "\0\0\0\0"
     558:    00 00 00 00     "\0\0\0\0"
     55c:    00 00 00 00     "\0\0\0\0"
     560:    00 00 00 00     "\0\0\0\0"
     564:    00 00 00 00     "\0\0\0\0"
     568:    00 00 00 00     "\0\0\0\0"
     56c:    00 00 00 00     "\0\0\0\0"
     570:    00 00 00 00     "\0\0\0\0"
     574:    00 00 00 00     "\0\0\0\0"
     578:    00 00 00 00     "\0\0\0\0"
     57c:    00 00 00 00     "\0\0\0\0"
     580:    00 00 00 00     "\0\0\0\0"
     584:    00 00 00 00     "\0\0\0\0"
     588:    00 00 00 00     "\0\0\0\0"
     58c:    00 00 00 00     "\0\0\0\0"
     590:    00 00 00 00     "\0\0\0\0"
     594:    00 00 00 00     "\0\0\0\0"
     598:    00 00 00 00     "\0\0\0\0"
     59c:    00 00 00 00     "\0\0\0\0"
     5a0:    00 00 00 00     "\0\0\0\0"
     5a4:    00 00 00 00     "\0\0\0\0"
     5a8:    00 00 00 00     "\0\0\0\0"
     5ac:    00 00 00 00     "\0\0\0\0"
     5b0:    00 00 00 00     "\0\0\0\0"
     5b4:    00 00 00 00     "\0\0\0\0"
     5b8:    00 00 00 00     "\0\0\0\0"
     5bc:    00 00 00 00     "\0\0\0\0"
     5c0:    00 00 00 00     "\0\0\0\0"
     5c4:    00 00 00 00     "\0\0\0\0"
     5c8:    00 00 00 00     "\0\0\0\0"
     5cc:    00 00 00 00     "\0\0\0\0"
     5d0:    00 00 00 00     "\0\0\0\0"
     5d4:    00 00 00 00     "\0\0\0\0"
     5d8:    00 00 00 00     "\0\0\0\0"
     5dc:    00 00 00 00     "\0\0\0\0"
     5e0:    00 00 00 00     "\0\0\0\0"
     5e4:    00 00 00 00     "\0\0\0\0"
     5e8:    00 00 00 00     "\0\0\0\0"
     5ec:    00 00 00 00     "\0\0\0\0"
     5f0:    00 00 00 00     "\0\0\0\0"
     5f4:    00 00 00 00     "\0\0\0\0"
     5f8:    00 00 00 00     "\0\0\0\0"
     5fc:    00 00 00 00     "\0\0\0\0"
     600:    00 00 00 00     "\0\0\0\0"
     604:    00 00 00 00     "\0\0\0\0"
     608:    00 00 00 00     "\0\0\0\0"
     60c:    00 00 00 00     "\0\0\0\0"
     610:    00 00 00 00     "\0\0\0\0"
     614:    00 00 00 00     "\0\0\0\0"
     618:    00 00 00 00     "\0\0\0\0"
     61c:    00 00 00 00     "\0\0\0\0"
     620:    00 00 00 00     "\0\0\0\0"
     624:    00 00 00 00     "\0\0\0\0"
     628:    00 00 00 00     "\0\0\0\0"
     62c:    00 00 00 00     "\0\0\0\0"
     630:    00 00 00 00     "\0\0\0\0"
     634:    00 00 00 00     "\0\0\0\0"
     638:    00 00 00 00     "\0\0\0\0"
     63c:    00 00 00 00     "\0\0\0\0"
     640:    00 00 00 00     "\0\0\0\0"
     644:    00 00 00 00     "\0\0\0\0"
     648:    00 00 00 00     "\0\0\0\0"
     64c:    00 00 00 00     "\0\0\0\0"
     650:    00 00 00 00     "\0\0\0\0"
     654:    00 00 00 00     "\0\0\0\0"
     658:    00 00 00 00     "\0\0\0\0"
     65c:    00 00 00 00     "\0\0\0\0"
     660:    00 00 00 00     "\0\0\0\0"
     664:    00 00 00 00     "\0\0\0\0"
     668:    00 00 00 00     "\0\0\0\0"
     66c:    00 00 00 00     "\0\0\0\0"
     670:    00 00 00 00     "\0\0\0\0"
     674:    00 00 00 00     "\0\0\0\0"
     678:    00 00 00 00     "\0\0\0\0"
     67c:    00 00 00 00     "\0\0\0\0"
     680:    00 00 00 00     "\0\0\0\0"
     684:    00 00 00 00     "\0\0\0\0"
     688:    00 00 00 00     "\0\0\0\0"
     68c:    00 00 00 00     "\0\0\0\0"
     690:    00 00 00 00     "\0\0\0\0"
     694:    00 00 00 00     "\0\0\0\0"
     698:    00 00 00 00     "\0\0\0\0"
     69c:    00 00 00 00     "\0\0\0\0"
     6a0:    00 00 00 00     "\0\0\0\0"
     6a4:    00 00 00 00     "\0\0\0\0"
     6a8:    00 00 00 00     "\0\0\0\0"
     6ac:    00 00 00 00     "\0\0\0\0"
     6b0:    00 00 00 00     "\0\0\0\0"
     6b4:    00 00 00 00     "\0\0\0\0"
     6b8:    00 00 00 00     "\0\0\0\0"
     6bc:    00 00 00 00     "\0\0\0\0"
     6c0:    00 00 00 00     "\0\0\0\0"
     6c4:    00 00 00 00     "\0\0\0\0"
     6c8:    00 00 00 00     "\0\0\0\0"
     6cc:    00 00 00 00     "\0\0\0\0"
     6d0:    00 00 00 00     "\0\0\0\0"
     6d4:    00 00 00 00     "\0\0\0\0"
     6d8:    00 00 00 00     "\0\0\0\0"
     6dc:    00 00 00 00     "\0\0\0\0"
     6e0:    00 00 00 00     "\0\0\0\0"
     6e4:    00 00 00 00     "\0\0\0\0"
     6e8:    00 00 00 00     "\0\0\0\0"
     6ec:    00 00 00 00     "\0\0\0\0"
     6f0:    00 00 00 00     "\0\0\0\0"
     6f4:    00 00 00 00     "\0\0\0\0"
     6f8:    00 00 00 00     "\0\0\0\0"
     6fc:    00 00 00 00     "\0\0\0\0"
     700:    00 00 00 00     "\0\0\0\0"
     704:    00 00 00 00     "\0\0\0\0"
     708:    00 00 00 00     "\0\0\0\0"
     70c:    00 00 00 00     "\0\0\0\0"
     710:    00 00 00 00     "\0\0\0\0"
     714:    00 00 00 00     "\0\0\0\0"
     718:    00 00 00 00     "\0\0\0\0"
     71c:    00 00 00 00     "\0\0\0\0"
     720:    00 00 00 00     "\0\0\0\0"
     724:    00 00 00 00     "\0\0\0\0"
     728:    00 00 00 00     "\0\0\0\0"
     72c:    00 00 00 00     "\0\0\0\0"
     730:    00 00 00 00     "\0\0\0\0"
     734:    00 00 00 00     "\0\0\0\0"
     738:    00 00 00 00     "\0\0\0\0"
     73c:    00 00 00 00     "\0\0\0\0"
     740:    00 00 00 00     "\0\0\0\0"
     744:    00 00 00 00     "\0\0\0\0"
     748:    00 00 00 00     "\0\0\0\0"
     74c:    00 00 00 00     "\0\0\0\0"
     750:    00 00 00 00     "\0\0\0\0"
     754:    00 00 00 00     "\0\0\0\0"
     758:    00 00 00 00     "\0\0\0\0"
     75c:    00 00 00 00     "\0\0\0\0"
     760:    00 00 00 00     "\0\0\0\0"
     764:    00 00 00 00     "\0\0\0\0"
     768:    00 00 00 00     "\0\0\0\0"
     76c:    00 00 00 00     "\0\0\0\0"
     770:    00 00 00 00     "\0\0\0\0"
     774:    00 00 00 00     "\0\0\0\0"
     778:    00 00 00 00     "\0\0\0\0"
     77c:    00 00 00 00     "\0\0\0\0"
     780:    00 00 00 00     "\0\0\0\0"
     784:    00 00 00 00     "\0\0\0\0"
     788:    00 00 00 00     "\0\0\0\0"
     78c:    00 00 00 00     "\0\0\0\0"
     790:    00 00 00 00     "\0\0\0\0"
     794:    00 00 00 00     "\0\0\0\0"
     798:    00 00 00 00     "\0\0\0\0"
     79c:    00 00 00 00     "\0\0\0\0"
     7a0:    00 00 00 00     "\0\0\0\0"
     7a4:    00 00 00 00     "\0\0\0\0"
     7a8:    00 00 00 00     "\0\0\0\0"
     7ac:    00 00 00 00     "\0\0\0\0"
     7b0:    00 00 00 00     "\0\0\0\0"
     7b4:    00 00 00 00     "\0\0\0\0"
     7b8:    00 00 00 00     "\0\0\0\0"
     7bc:    00 00 00 00     "\0\0\0\0"
     7c0:    00 00 00 00     "\0\0\0\0"
     7c4:    00 00 00 00     "\0\0\0\0"
     7c8:    00 00 00 00     "\0\0\0\0"
     7cc:    00 00 00 00     "\0\0\0\0"
     7d0:    00 00 00 00     "\0\0\0\0"
     7d4:    00 00 00 00     "\0\0\0\0"
     7d8:    00 00 00 00     "\0\0\0\0"
     7dc:    00 00 00 00     "\0\0\0\0"
     7e0:    00 00 00 00     "\0\0\0\0"
     7e4:    00 00 00 00     "\0\0\0\0"
     7e8:    00 00 00 00     "\0\0\0\0"
     7ec:    00 00 00 00     "\0\0\0\0"
     7f0:    00 00 00 00     "\0\0\0\0"
     7f4:    00 00 00 00     "\0\0\0\0"
     7f8:    00 00 00 00     "\0\0\0\0"
     7fc:    00 00 00 00     "\0\0\0\0"
Disassembly of section .boot_info:
report_boot_info_begin:
     800:    00 00 00 00     "\0\0\0\0"
     804:    00 00 00 00     "\0\0\0\0"
     808:    00 00 00 00     "\0\0\0\0"
     80c:    00 00 00 00     "\0\0\0\0"
     810:    00 00 00 00     "\0\0\0\0"
     814:    00 00 00 00     "\0\0\0\0"
     818:    00 00 00 00     "\0\0\0\0"
     81c:    00 00 00 00     "\0\0\0\0"
     820:    00 00 00 00     "\0\0\0\0"
     824:    00 00 00 00     "\0\0\0\0"
     828:    00 00 00 00     "\0\0\0\0"
     82c:    00 00 00 00     "\0\0\0\0"
     830:    00 00 00 00     "\0\0\0\0"
     834:    00 00 00 00     "\0\0\0\0"
     838:    00 00 00 00     "\0\0\0\0"
     83c:    00 00 00 00     "\0\0\0\0"
Disassembly of section .data:
report_data_begin:
     840:    01              "\x01"

__ble_state_to_user.ble_state:
     841:    ff              "\x0f"

port0:
     842:    01 01 00 04     "\x01\x01\0\x04"
     846:    11              "\x01"

port1:
     847:    01 01 00 04     "\x01\x01\0\x04"
     84b:    32              "2"

def_cam:
     84c:    10 f0 90 30     "\x00\x00\x000"
     850:    b0 80 00 00     "\x00\x00\0\0"

head:
     854:    54 08 00 00     "T\b\0\0"
     858:    54 08 00 00     "T\b\0\0"

handl:
     85c:    00 00 00 01     "\0\0\0\x01"
     860:    00 00 01 00     "\0\0\x01\0"
     864:    40 9c 00 00     "@\x0c\0\0"
     868:    00 00 00 00     "\0\0\0\0"
     86c:    00 00 00 00     "\0\0\0\0"
     870:    00 00 00 00     "\0\0\0\0"
     874:    00 00 00 00     "\0\0\0\0"
     878:    00 00 00 00     "\0\0\0\0"
     87c:    00 00 00 00     "\0\0\0\0"

head.1354:
     880:    80 08 00 00     "\x00\b\0\0"
     884:    80 08 00 00     "\x00\b\0\0"

jiffies:
     888:    0a 00 00 00     "\n\0\0\0"

timer_head:
     88c:    8c 08 00 00     "\x0c\b\0\0"
     890:    8c 08 00 00     "\x0c\b\0\0"

puk:
     894:    98 36 6c f3     "\x086l\x03"
     898:    00 00 00 00     "\0\0\0\0"
     89c:    00 00 00 00     "\0\0\0\0"

ble_device_name_len:
     8a0:    0a              "\n"

hid_battery_level:
     8a1:    58              "X"

Appearance:
     8a2:    c0 03           "\x00\x03"

lp_winsize:
     8a4:    e0 01 a0 00     "\x00\x01\x00\0"
     8a8:    64 00 8c 00     "d\0\x0c\0"
     8ac:    00 00 00 00     "\0\0\0\0"

iokey_scan_para:
     8b0:    0a 00 00 00     "\n\0\0\0"
     8b4:    ff 00 00 04     "\x0f\0\0\x04"
     8b8:    4b 5a 00 00     "KZ\0\0"
     8bc:    00 14 00 00     "\0\x04\0\0"
     8c0:    fc 07 e0 01     "\x0c\x07\x00\x01"

hogp_gatt_control_block:
     8c4:    40 00 8c 00     "@\0\x0c\0"
     8c8:    00 00 00 00     "\0\0\0\0"
     8cc:    d4 5b e1 01     "\x04[\x01\x01"
     8d0:    00 00 00 00     "\0\0\0\0"
     8d4:    e0 5b e1 01     "\x00[\x01\x01"
     8d8:    00 00 00 00     "\0\0\0\0"

ble_device_name:
     8dc:    4a 4c 5f 42     "JL_B"
     8e0:    54 28 42 4c     "T(BL"
     8e4:    45 29 00 00     "E)\0\0"
     8e8:    00 00 00 00     "\0\0\0\0"
     8ec:    00 00 00 00     "\0\0\0\0"
     8f0:    00 00 00 00     "\0\0\0\0"
     8f4:    00 00 00 00     "\0\0\0\0"
     8f8:    00 00           "\0\0"

bt_cfg:
     8fa:    4a 4c 5f 48     "JL_H"
     8fe:    49 44 5f 44     "ID_D"
     902:    45 42 55 47     "EBUG"
     906:    00 00 00 00     "\0\0\0\0"
     90a:    00 00 00 00     "\0\0\0\0"
     90e:    00 00 00 00     "\0\0\0\0"
     912:    00 00 00 00     "\0\0\0\0"
     916:    00 00 00 00     "\0\0\0\0"
     91a:    ff ff ff ff     "\x0f\x0f\x0f\x0f"
     91e:    ff ff 0a 19     "\x0f\x0f\n\x09"
     922:    07 88 66 ff     "\x07\x08f\x0f"
     926:    ff ff ff ff     "\x0f\x0f\x0f\x0f"
     92a:    ff 00           "\x0f\0"

data_magic:
     92c:    00 00 00 00     "\0\0\0\0"
     930:    00 00 00 00     "\0\0\0\0"
     934:    00 00 00 00     "\0\0\0\0"
     938:    00 00 00 00     "\0\0\0\0"
     93c:    00 00 00 00     "\0\0\0\0"
     940:    00 00 00 00     "\0\0\0\0"
     944:    00 00 00 00     "\0\0\0\0"
     948:    00 00 00 00     "\0\0\0\0"
     94c:    00 00 00 00     "\0\0\0\0"
     950:    00 00 00 00     "\0\0\0\0"
     954:    00 00 00 00     "\0\0\0\0"
     958:    00 00 00 00     "\0\0\0\0"
     95c:    00 00 00 00     "\0\0\0\0"
     960:    00 00 00 00     "\0\0\0\0"
     964:    00 00 00 00     "\0\0\0\0"
     968:    00 00 00 00     "\0\0\0\0"
     96c:    00 00 00 00     "\0\0\0\0"
     970:    00 00 00 00     "\0\0\0\0"
     974:    00 00 00 00     "\0\0\0\0"
     978:    00 00 00 00     "\0\0\0\0"
     97c:    00 00 00 00     "\0\0\0\0"

is_btstack_lowpower_active:
     980:    00 00 00 00     "\0\0\0\0"

btstack_task_create_flag:
     984:    00 00 00 00     "\0\0\0\0"

stack_run_loop_head:
     988:    00 00 00 00     "\0\0\0\0"

le_att_mtu_size:
     98c:    05 02           "\x05\x02"

gap_request_connection_parameter_update.le_con_param_update_identifier:
     98e:    01              "\x01"

temp_link_key_flag:
     98f:    00              "\0"

stack_configs_app:
     990:    04 04 24 00     "\x04\x04$\0"
     994:    40 1f 40 1f     "@\x0f@\x0f"
     998:    00 00 00 00     "\0\0\0\0"
     99c:    00 00 3c 35     "\0\0<5"
     9a0:    00 11 10 08     "\0\x01\x00\b"
     9a4:    23 00 01 46     "#\0\x01F"
     9a8:    1e 0a 00 00     "\x0e\n\0\0"
     9ac:    00 00 00 00     "\0\0\0\0"
     9b0:    00 00 00 00     "\0\0\0\0"

remote_info_hdl:
     9b4:    00 00 ff ff     "\0\0\x0f\x0f"
     9b8:    00 00 00 00     "\0\0\0\0"
     9bc:    00 00 00 00     "\0\0\0\0"
     9c0:    00 00           "\0\0"

disable_sco_timer:
     9c2:    00 00           "\0\0"

sm_global_info:
     9c4:    00 00 00 00     "\0\0\0\0"

system_data_start:
     9c8:    05 00 00 00     "\x05\0\0\0"
     9cc:    04 00 00 00     "\x04\0\0\0"
     9d0:    00 00 00 00     "\0\0\0\0"
     9d4:    04 3f e1 01     "\x04?\x01\x01"
     9d8:    00 00 00 00     "\0\0\0\0"
     9dc:    00 00 00 00     "\0\0\0\0"
     9e0:    00 00 00 00     "\0\0\0\0"
     9e4:    84 5b e1 01     "\x04[\x01\x01"

system_data_end:
     9e8:    00 00 ff ff     "\0\0\x0f\x0f"
     9ec:    00 00 00 00     "\0\0\0\0"
     9f0:    00 00 00 00     "\0\0\0\0"
     9f4:    00 00 00 00     "\0\0\0\0"
     9f8:    00 00 00 00     "\0\0\0\0"
     9fc:    00 00 00 00     "\0\0\0\0"
     a00:    00 00 00 00     "\0\0\0\0"
     a04:    00 00 00 00     "\0\0\0\0"
     a08:    00 00 00 00     "\0\0\0\0"
     a0c:    00 00 00 00     "\0\0\0\0"
     a10:    00 00 00 00     "\0\0\0\0"
     a14:    00 00 00 00     "\0\0\0\0"
     a18:    00 00 00 00     "\0\0\0\0"
     a1c:    00 00 00 00     "\0\0\0\0"
     a20:    00 00 00 00     "\0\0\0\0"
     a24:    00 00 00 00     "\0\0\0\0"
     a28:    00 00 00 00     "\0\0\0\0"
     a2c:    00 00 00 00     "\0\0\0\0"
     a30:    00 00 00 00     "\0\0\0\0"
     a34:    00 00 00 00     "\0\0\0\0"
     a38:    00 00 00 00     "\0\0\0\0"
     a3c:    00 00 00 00     "\0\0\0\0"
     a40:    00 00 00 00     "\0\0\0\0"
     a44:    00 00 00 00     "\0\0\0\0"
     a48:    00 00 00 00     "\0\0\0\0"
     a4c:    00 00 00 00     "\0\0\0\0"
     a50:    00 00 00 00     "\0\0\0\0"
     a54:    00 00 00 00     "\0\0\0\0"
     a58:    00 00 00 00     "\0\0\0\0"
     a5c:    00 00 00 00     "\0\0\0\0"
     a60:    00 00 00 00     "\0\0\0\0"
     a64:    00 00 00 00     "\0\0\0\0"
     a68:    00 00 00 00     "\0\0\0\0"
     a6c:    00 00 00 00     "\0\0\0\0"
     a70:    00 00 00 00     "\0\0\0\0"
     a74:    00 00 00 00     "\0\0\0\0"
     a78:    00 00 00 00     "\0\0\0\0"
     a7c:    00 00 00 00     "\0\0\0\0"
     a80:    00 00 00 00     "\0\0\0\0"
     a84:    00 00 00 00     "\0\0\0\0"
     a88:    00 00 00 00     "\0\0\0\0"
     a8c:    00 00 00 00     "\0\0\0\0"
     a90:    00 00 00 00     "\0\0\0\0"
     a94:    00 00 00 00     "\0\0\0\0"
     a98:    00 00 00 00     "\0\0\0\0"
     a9c:    00 00 00 00     "\0\0\0\0"
     aa0:    00 00 00 00     "\0\0\0\0"
     aa4:    00 00 00 00     "\0\0\0\0"
     aa8:    00 00 00 00     "\0\0\0\0"
     aac:    00 00 00 00     "\0\0\0\0"
     ab0:    00 00 00 00     "\0\0\0\0"
     ab4:    00 00 00 00     "\0\0\0\0"
     ab8:    00 00 00 00     "\0\0\0\0"
     abc:    00 00 00 00     "\0\0\0\0"
     ac0:    00 00 00 00     "\0\0\0\0"
     ac4:    00 00 00 00     "\0\0\0\0"
     ac8:    00 00 00 00     "\0\0\0\0"
     acc:    00 00 00 00     "\0\0\0\0"
     ad0:    00 00 00 00     "\0\0\0\0"
     ad4:    00 00 00 00     "\0\0\0\0"
     ad8:    00 00 00 00     "\0\0\0\0"
     adc:    00 00 00 00     "\0\0\0\0"
     ae0:    00 00 00 00     "\0\0\0\0"
     ae4:    00 00 00 00     "\0\0\0\0"
     ae8:    00 00 00 00     "\0\0\0\0"
     aec:    00 00 00 00     "\0\0\0\0"
     af0:    00 00 00 00     "\0\0\0\0"
     af4:    00 00 00 00     "\0\0\0\0"
     af8:    00 00 00 00     "\0\0\0\0"
     afc:    00 00 00 00     "\0\0\0\0"
     b00:    00 00 00 00     "\0\0\0\0"
     b04:    00 00 00 00     "\0\0\0\0"
     b08:    00 00 00 00     "\0\0\0\0"
     b0c:    00 00 00 00     "\0\0\0\0"
     b10:    00 00 00 00     "\0\0\0\0"
     b14:    00 00 00 00     "\0\0\0\0"
     b18:    00 00 00 00     "\0\0\0\0"
     b1c:    00 00 00 00     "\0\0\0\0"
     b20:    00 00 00 00     "\0\0\0\0"
     b24:    00 00 00 00     "\0\0\0\0"
     b28:    00 00 00 00     "\0\0\0\0"
     b2c:    00 00 00 00     "\0\0\0\0"
     b30:    00 00 00 00     "\0\0\0\0"
     b34:    00 00 00 00     "\0\0\0\0"
     b38:    00 00 00 00     "\0\0\0\0"
     b3c:    00 00 00 00     "\0\0\0\0"
     b40:    00 00 00 00     "\0\0\0\0"
     b44:    00 00 00 00     "\0\0\0\0"
     b48:    00 00 00 00     "\0\0\0\0"
     b4c:    00 00 00 00     "\0\0\0\0"
     b50:    00 00 00 00     "\0\0\0\0"
     b54:    00 00 00 00     "\0\0\0\0"
     b58:    00 00 00 00     "\0\0\0\0"
     b5c:    00 00 00 00     "\0\0\0\0"
     b60:    00 00 00 00     "\0\0\0\0"
     b64:    00 00 00 00     "\0\0\0\0"
     b68:    00 00 00 00     "\0\0\0\0"
     b6c:    00 00 00 00     "\0\0\0\0"
     b70:    00 00 00 00     "\0\0\0\0"
     b74:    00 00 00 00     "\0\0\0\0"
     b78:    00 00 00 00     "\0\0\0\0"
     b7c:    00 00 00 00     "\0\0\0\0"
     b80:    00 00 00 00     "\0\0\0\0"
     b84:    00 00 00 00     "\0\0\0\0"
     b88:    00 00 00 00     "\0\0\0\0"
     b8c:    00 00 00 00     "\0\0\0\0"
     b90:    00 00 00 00     "\0\0\0\0"
     b94:    00 00 00 00     "\0\0\0\0"
     b98:    00 00 00 00     "\0\0\0\0"
     b9c:    00 00 00 00     "\0\0\0\0"
     ba0:    00 00 00 00     "\0\0\0\0"
     ba4:    00 00 00 00     "\0\0\0\0"
     ba8:    00 00 00 00     "\0\0\0\0"
     bac:    00 00 00 00     "\0\0\0\0"
     bb0:    00 00 00 00     "\0\0\0\0"
     bb4:    00 00 00 00     "\0\0\0\0"
     bb8:    00 00 00 00     "\0\0\0\0"
     bbc:    00 00 00 00     "\0\0\0\0"
     bc0:    00 00 00 00     "\0\0\0\0"
     bc4:    00 00 00 00     "\0\0\0\0"
     bc8:    00 00 00 00     "\0\0\0\0"
     bcc:    00 00 00 00     "\0\0\0\0"
     bd0:    00 00 00 00     "\0\0\0\0"
     bd4:    00 00 00 00     "\0\0\0\0"
     bd8:    00 00 00 00     "\0\0\0\0"
     bdc:    00 00 00 00     "\0\0\0\0"
     be0:    00 00 00 00     "\0\0\0\0"
     be4:    00 00 00 00     "\0\0\0\0"
     be8:    00 00 00 00     "\0\0\0\0"
     bec:    00 00 00 00     "\0\0\0\0"
     bf0:    00 00 00 00     "\0\0\0\0"
     bf4:    00 00 00 00     "\0\0\0\0"
     bf8:    00 00 00 00     "\0\0\0\0"
     bfc:    00 00 00 00     "\0\0\0\0"
     c00:    00 00 00 00     "\0\0\0\0"
     c04:    00 00 00 00     "\0\0\0\0"
     c08:    00 00 00 00     "\0\0\0\0"
     c0c:    00 00 00 00     "\0\0\0\0"
     c10:    00 00 00 00     "\0\0\0\0"
     c14:    00 00 00 00     "\0\0\0\0"
     c18:    00 00 00 00     "\0\0\0\0"
     c1c:    00 00 00 00     "\0\0\0\0"
     c20:    00 00 00 00     "\0\0\0\0"
     c24:    00 00 00 00     "\0\0\0\0"
     c28:    00 00 00 00     "\0\0\0\0"
     c2c:    00 00 00 00     "\0\0\0\0"
     c30:    00 00 00 00     "\0\0\0\0"
     c34:    00 00 00 00     "\0\0\0\0"
     c38:    00 00 00 00     "\0\0\0\0"
     c3c:    00 00 00 00     "\0\0\0\0"
     c40:    00 00 00 00     "\0\0\0\0"
     c44:    00 00 00 00     "\0\0\0\0"
     c48:    00 00 00 00     "\0\0\0\0"
     c4c:    00 00 00 00     "\0\0\0\0"
     c50:    00 00 00 00     "\0\0\0\0"
     c54:    00 00 00 00     "\0\0\0\0"
     c58:    00 00 00 00     "\0\0\0\0"
     c5c:    00 00 00 00     "\0\0\0\0"
     c60:    00 00 00 00     "\0\0\0\0"
     c64:    00 00 00 00     "\0\0\0\0"
     c68:    00 00 00 00     "\0\0\0\0"
     c6c:    00 00 00 00     "\0\0\0\0"
     c70:    00 00 00 00     "\0\0\0\0"
     c74:    00 00 00 00     "\0\0\0\0"
     c78:    00 00 00 00     "\0\0\0\0"
     c7c:    00 00 00 00     "\0\0\0\0"
     c80:    00 00 00 00     "\0\0\0\0"
     c84:    00 00 00 00     "\0\0\0\0"
     c88:    00 00 00 00     "\0\0\0\0"
     c8c:    00 00 00 00     "\0\0\0\0"
     c90:    00 00 00 00     "\0\0\0\0"
     c94:    00 00 00 00     "\0\0\0\0"
     c98:    00 00 00 00     "\0\0\0\0"
     c9c:    00 00 00 00     "\0\0\0\0"
     ca0:    00 00 00 00     "\0\0\0\0"
     ca4:    00 00 00 00     "\0\0\0\0"
     ca8:    00 00 00 00     "\0\0\0\0"
     cac:    00 00 00 00     "\0\0\0\0"
     cb0:    00 00 00 00     "\0\0\0\0"
     cb4:    00 00 00 00     "\0\0\0\0"
     cb8:    00 00 00 00     "\0\0\0\0"
     cbc:    00 00 00 00     "\0\0\0\0"
     cc0:    00 00 00 00     "\0\0\0\0"
     cc4:    00 00 00 00     "\0\0\0\0"
     cc8:    00 00 00 00     "\0\0\0\0"
     ccc:    00 00 00 00     "\0\0\0\0"
     cd0:    00 00 00 00     "\0\0\0\0"
     cd4:    00 00 00 00     "\0\0\0\0"
     cd8:    00 00 00 00     "\0\0\0\0"
     cdc:    00 00 00 00     "\0\0\0\0"
     ce0:    00 00 00 00     "\0\0\0\0"
     ce4:    00 00 00 00     "\0\0\0\0"
     ce8:    00 00 00 00     "\0\0\0\0"
     cec:    00 00 00 00     "\0\0\0\0"
     cf0:    00 00 00 00     "\0\0\0\0"
     cf4:    00 00 00 00     "\0\0\0\0"
     cf8:    00 00 00 00     "\0\0\0\0"
     cfc:    00 00 00 00     "\0\0\0\0"
     d00:    00 00 00 00     "\0\0\0\0"
     d04:    00 00 00 00     "\0\0\0\0"
     d08:    00 00 00 00     "\0\0\0\0"
     d0c:    00 00 00 00     "\0\0\0\0"
     d10:    00 00 00 00     "\0\0\0\0"
     d14:    00 00 00 00     "\0\0\0\0"
     d18:    00 00 00 00     "\0\0\0\0"
     d1c:    00 00 00 00     "\0\0\0\0"
     d20:    00 00 00 00     "\0\0\0\0"
     d24:    00 00 00 00     "\0\0\0\0"
     d28:    00 00 00 00     "\0\0\0\0"
     d2c:    00 00 00 00     "\0\0\0\0"
     d30:    00 00 00 00     "\0\0\0\0"
     d34:    00 00 00 00     "\0\0\0\0"
     d38:    00 00 00 00     "\0\0\0\0"
     d3c:    00 00 00 00     "\0\0\0\0"
     d40:    00 00 00 00     "\0\0\0\0"
     d44:    00 00 00 00     "\0\0\0\0"
     d48:    00 00 00 00     "\0\0\0\0"
     d4c:    00 00 00 00     "\0\0\0\0"
     d50:    00 00 00 00     "\0\0\0\0"
     d54:    00 00 00 00     "\0\0\0\0"
     d58:    00 00 00 00     "\0\0\0\0"
     d5c:    00 00 00 00     "\0\0\0\0"
     d60:    00 00 00 00     "\0\0\0\0"
     d64:    00 00 00 00     "\0\0\0\0"
     d68:    00 00 00 00     "\0\0\0\0"
     d6c:    00 00 00 00     "\0\0\0\0"
     d70:    00 00 00 00     "\0\0\0\0"
     d74:    00 00 00 00     "\0\0\0\0"
     d78:    00 00 00 00     "\0\0\0\0"
     d7c:    00 00 00 00     "\0\0\0\0"
     d80:    00 00 00 00     "\0\0\0\0"
     d84:    00 00 00 00     "\0\0\0\0"
     d88:    00 00 00 00     "\0\0\0\0"
     d8c:    00 00 00 00     "\0\0\0\0"
     d90:    00 00 00 00     "\0\0\0\0"
     d94:    00 00 00 00     "\0\0\0\0"
     d98:    00 00 00 00     "\0\0\0\0"
     d9c:    00 00 00 00     "\0\0\0\0"
     da0:    00 00 00 00     "\0\0\0\0"
     da4:    00 00 00 00     "\0\0\0\0"
     da8:    00 00 00 00     "\0\0\0\0"
     dac:    00 00 00 00     "\0\0\0\0"
     db0:    00 00 00 00     "\0\0\0\0"
     db4:    00 00 00 00     "\0\0\0\0"
     db8:    00 00 00 00     "\0\0\0\0"
     dbc:    00 00 00 00     "\0\0\0\0"
     dc0:    00 00 00 00     "\0\0\0\0"
     dc4:    00 00 00 00     "\0\0\0\0"
     dc8:    00 00 00 00     "\0\0\0\0"
     dcc:    00 00 00 00     "\0\0\0\0"
     dd0:    00 00 00 00     "\0\0\0\0"
     dd4:    00 00 00 00     "\0\0\0\0"
     dd8:    00 00 00 00     "\0\0\0\0"
     ddc:    00 00 00 00     "\0\0\0\0"
     de0:    00 00 00 00     "\0\0\0\0"
     de4:    00 00 00 00     "\0\0\0\0"

bt_testbox_update_msg_handle:
     de8:    00 00 00 00     "\0\0\0\0"

bt_task_thread:
     dec:    00 00 00 00     "\0\0\0\0"
     df0:    00 00 00 00     "\0\0\0\0"
     df4:    2a 93 e1 01     "*\x03\x01\x01"
     df8:    2e 93 e1 01     ".\x03\x01\x01"
     dfc:    32 93 e1 01     "2\x03\x01\x01"
     e00:    36 93 e1 01     "6\x03\x01\x01"

hci_param:
     e04:    00 00 00 00     "\0\0\0\0"
     e08:    00 00 00 00     "\0\0\0\0"
     e0c:    0c 00 20 31     "\x0c\0 1"
     e10:    0a 00 bb 22     "\n\0\x0b""
     e14:    d6 05 ff ff     "\x06\x05\x0f\x0f"
     e18:    ff 03 80 ff     "\x0f\x03\x00\x0f"
     e1c:    ff ff 3f ff     "\x0f\x0f?\x0f"
     e20:    ff 1f f2 0f     "\x0f\x0f\x02\x0f"
     e24:    e8 fe 3f f7     "\x08\x0e?\x07"
     e28:    8d ff 1c 00     "\x0d\x0f\x0c\0"
     e2c:    00 00 7d f7     "\0\0}\x07"
     e30:    ff ff 7f 00     "\x0f\x0f\x0f\0"
     e34:    00 00 00 00     "\0\0\0\0"
     e38:    00 00 00 00     "\0\0\0\0"
     e3c:    00 00 00 00     "\0\0\0\0"
     e40:    00 00 00 00     "\0\0\0\0"
     e44:    00 00 00 00     "\0\0\0\0"
     e48:    00 00 00 00     "\0\0\0\0"
     e4c:    00 00 00 00     "\0\0\0\0"
     e50:    00 00 00 00     "\0\0\0\0"
     e54:    00 00 00 00     "\0\0\0\0"
     e58:    00 00 00 00     "\0\0\0\0"
     e5c:    00 00 00 00     "\0\0\0\0"
     e60:    00 00 00 00     "\0\0\0\0"
     e64:    00 00 00 00     "\0\0\0\0"
     e68:    00 00 00 00     "\0\0\0\0"
     e6c:    00 00 00 00     "\0\0\0\0"
     e70:    00 00 00 00     "\0\0\0\0"
     e74:    00 00 00 57     "\0\0\0W"
     e78:    74 78 a2 5a     "tx\x02Z"
     e7c:    ab bf fe 8d     "\x0b\x0f\x0e\x0d"
     e80:    fa c8 2d 79     "\x0a\x08-y"
     e84:    83 00 00 00     "\x03\0\0\0"
     e88:    00 00 00 00     "\0\0\0\0"
     e8c:    00 00 00 00     "\0\0\0\0"
     e90:    00 00 00 00     "\0\0\0\0"
     e94:    00 00 45 00     "\0\0E\0"
     e98:    00 00 00 00     "\0\0\0\0"
     e9c:    00 00 00 00     "\0\0\0\0"
     ea0:    00 00 00 00     "\0\0\0\0"
     ea4:    00 00           "\0\0"

BTCTLER_LE_CONTROLLER_DATA_START:
     ea6:    00 00           "\0\0"

ll_update_handle:
     ea8:    00 00 00 00     "\0\0\0\0"

adv_hdl:
     eac:    00 00 00 00     "\0\0\0\0"

le_data_length.6:
     eb0:    00 00 00 00     "\0\0\0\0"

le_data_length.7:
     eb4:    00 00 00 00     "\0\0\0\0"

le_param:
     eb8:    00 00 00 00     "\0\0\0\0"
     ebc:    00 00 00 00     "\0\0\0\0"
     ec0:    01 02 03 04     "\x01\x02\x03\x04"
     ec4:    05 08 00 00     "\x05\b\0\0"
     ec8:    00 00 00 00     "\0\0\0\0"
     ecc:    00 00 00 00     "\0\0\0\0"
     ed0:    00 00 00 00     "\0\0\0\0"
     ed4:    00 00 00 00     "\0\0\0\0"
     ed8:    00 00 00 00     "\0\0\0\0"
     edc:    00 00 00 00     "\0\0\0\0"
     ee0:    00 00 06 0f     "\0\0\x06\x0f"
     ee4:    00 09 61 00     "\0\ta\0"
     ee8:    00 00 08 00     "\0\0\b\0"
     eec:    78 00 72 07     "x\0r\x07"
     ef0:    ff ff ff 1f     "\x0f\x0f\x0f\x0f"
     ef4:    00 00 00 00     "\0\0\0\0"
     ef8:    00 00 00 00     "\0\0\0\0"
     efc:    00 00 00 00     "\0\0\0\0"
     f00:    01 00 00 00     "\x01\0\0\0"
     f04:    00 00 00 00     "\0\0\0\0"
     f08:    00 00 00 00     "\0\0\0\0"
     f0c:    00 00 00 00     "\0\0\0\0"
     f10:    00 00 00 00     "\0\0\0\0"
     f14:    00 00 00 00     "\0\0\0\0"
     f18:    00 00 00 00     "\0\0\0\0"
     f1c:    00 00 00 00     "\0\0\0\0"
     f20:    00 00 00 00     "\0\0\0\0"
     f24:    00 00 00 00     "\0\0\0\0"
     f28:    00 00 00 00     "\0\0\0\0"
     f2c:    00 00 00 00     "\0\0\0\0"
     f30:    00 00 00 00     "\0\0\0\0"
     f34:    00 00 00 00     "\0\0\0\0"
     f38:    00 00 00 00     "\0\0\0\0"
     f3c:    00 00 00 00     "\0\0\0\0"
     f40:    00 00 00 00     "\0\0\0\0"
     f44:    00 00 00 00     "\0\0\0\0"
     f48:    00 00 00 00     "\0\0\0\0"
     f4c:    00 00 00 19     "\0\0\0\x09"
     f50:    00 00 00 00     "\0\0\0\0"
     f54:    00 00 00 00     "\0\0\0\0"
     f58:    00 01 00 00     "\0\x01\0\0"
     f5c:    00 00 00 00     "\0\0\0\0"
     f60:    00 00 00 00     "\0\0\0\0"

config_hci_ll_param.0:
     f64:    00 00 00 00     "\0\0\0\0"

g_ble_fp:
     f68:    00 00 00 00     "\0\0\0\0"

ble_slot_schedule.credits:
     f6c:    00 00 00 00     "\0\0\0\0"

ble_window_autozoom.widen:
     f70:    00 00 00 00     "\0\0\0\0"

ble_finetimecnt_poweroff_sfr:
     f74:    00 00 00 00     "\0\0\0\0"

g_dut_hdl:
     f78:    00 00 00 00     "\0\0\0\0"

update_conn:
     f7c:    00 00 00 00     "\0\0\0\0"

bt_res_updata_flag:
     f80:    00 00 00 00     "\0\0\0\0"

uboot_revic_handle:
     f84:    00 00 00 00     "\0\0\0\0"

g_lmp_update_start_flag:
     f88:    00 00 00 00     "\0\0\0\0"

g_page:
     f8c:    00 00 00 00     "\0\0\0\0"

g_page_scan:
     f90:    00 00 00 00     "\0\0\0\0"

inquiry_scan:
     f94:    00 00 00 00     "\0\0\0\0"

update_data_start:
     f98:    05 0a 06 05     "\x05\n\x06\x05"
     f9c:    0a 06 06 0a     "\n\x06\x06\n"
     fa0:    06 07 0a 06     "\x06\x07\n\x06"
     fa4:    0b 0c 07 0f     "\x0b\x0c\x07\x0f"
     fa8:    0f 07           "\x0f\x07"

sysvdd_vdc13_table:
     faa:    06 06 06 06     "\x06\x06\x06\x06"
     fae:    06 06 06 06     "\x06\x06\x06\x06"
     fb2:    06 06 07 07     "\x06\x06\x07\x07"
     fb6:    07 07 07 07     "\x07\x07\x07\x07"
     fba:    00 00           "\0\0"

sys_clock_limit:
     fbc:    00 6c dc 02     "\0l\x0c\x02"
     fc0:    00 36 6e 01     "\06n\x01"
     fc4:    00 1b b7 00     "\0\x0b\x07\0"
     fc8:    80 f0 fa 02     "\x00\x00\x0a\x02"
     fcc:    00 36 6e 01     "\06n\x01"
     fd0:    00 90 d0 03     "\0\x00\x00\x03"
     fd4:    00 48 e8 01     "\0H\x08\x01"
     fd8:    80 a8 12 01     "\x00\x08\x02\x01"
     fdc:    80 f0 fa 02     "\x00\x00\x0a\x02"
     fe0:    00 36 6e 01     "\06n\x01"
     fe4:    00 6c dc 02     "\0l\x0c\x02"
     fe8:    00 6c dc 02     "\0l\x0c\x02"
     fec:    00 36 6e 01     "\06n\x01"
     ff0:    80 f0 fa 02     "\x00\x00\x0a\x02"
     ff4:    00 36 6e 01     "\06n\x01"
     ff8:    00 90 d0 03     "\0\x00\x00\x03"
     ffc:    00 90 d0 03     "\0\x00\x00\x03"
    1000:    00 48 e8 01     "\0H\x08\x01"
    1004:    80 f0 fa 02     "\x00\x00\x0a\x02"
    1008:    00 36 6e 01     "\06n\x01"
    100c:    00 d8 b8 05     "\0\x08\x08\x05"
    1010:    00 d8 b8 05     "\0\x08\x08\x05"
    1014:    00 6c dc 02     "\0l\x0c\x02"
    1018:    80 f0 fa 02     "\x00\x00\x0a\x02"
    101c:    00 36 6e 01     "\06n\x01"
    1020:    00 20 a1 07     "\0 \x01\x07"
    1024:    00 20 a1 07     "\0 \x01\x07"
    1028:    00 b4 c4 04     "\0\x04\x04\x04"
    102c:    80 f0 fa 02     "\x00\x00\x0a\x02"
    1030:    00 36 6e 01     "\06n\x01"

driver_data_end:
    1034:    00 00 00 00     "\0\0\0\0"
    1038:    00 00 00 00     "\0\0\0\0"
    103c:    00 00 00 00     "\0\0\0\0"
Disassembly of section .irq_stack:
stack_magic:
    1040:    00 00 00 00     "\0\0\0\0"
    1044:    00 00 00 00     "\0\0\0\0"
    1048:    00 00 00 00     "\0\0\0\0"
    104c:    00 00 00 00     "\0\0\0\0"

_cpu0_sstack_begin:
    1050:    00 00 00 00     "\0\0\0\0"
    1054:    00 00 00 00     "\0\0\0\0"
    1058:    00 00 00 00     "\0\0\0\0"
    105c:    00 00 00 00     "\0\0\0\0"
    1060:    00 00 00 00     "\0\0\0\0"
    1064:    00 00 00 00     "\0\0\0\0"
    1068:    00 00 00 00     "\0\0\0\0"
    106c:    00 00 00 00     "\0\0\0\0"
    1070:    00 00 00 00     "\0\0\0\0"
    1074:    00 00 00 00     "\0\0\0\0"
    1078:    00 00 00 00     "\0\0\0\0"
    107c:    00 00 00 00     "\0\0\0\0"
    1080:    00 00 00 00     "\0\0\0\0"
    1084:    00 00 00 00     "\0\0\0\0"
    1088:    00 00 00 00     "\0\0\0\0"
    108c:    00 00 00 00     "\0\0\0\0"
    1090:    00 00 00 00     "\0\0\0\0"
    1094:    00 00 00 00     "\0\0\0\0"
    1098:    00 00 00 00     "\0\0\0\0"
    109c:    00 00 00 00     "\0\0\0\0"
    10a0:    00 00 00 00     "\0\0\0\0"
    10a4:    00 00 00 00     "\0\0\0\0"
    10a8:    00 00 00 00     "\0\0\0\0"
    10ac:    00 00 00 00     "\0\0\0\0"
    10b0:    00 00 00 00     "\0\0\0\0"
    10b4:    00 00 00 00     "\0\0\0\0"
    10b8:    00 00 00 00     "\0\0\0\0"
    10bc:    00 00 00 00     "\0\0\0\0"
    10c0:    00 00 00 00     "\0\0\0\0"
    10c4:    00 00 00 00     "\0\0\0\0"
    10c8:    00 00 00 00     "\0\0\0\0"
    10cc:    00 00 00 00     "\0\0\0\0"
    10d0:    00 00 00 00     "\0\0\0\0"
    10d4:    00 00 00 00     "\0\0\0\0"
    10d8:    00 00 00 00     "\0\0\0\0"
    10dc:    00 00 00 00     "\0\0\0\0"
    10e0:    00 00 00 00     "\0\0\0\0"
    10e4:    00 00 00 00     "\0\0\0\0"
    10e8:    00 00 00 00     "\0\0\0\0"
    10ec:    00 00 00 00     "\0\0\0\0"
    10f0:    00 00 00 00     "\0\0\0\0"
    10f4:    00 00 00 00     "\0\0\0\0"
    10f8:    00 00 00 00     "\0\0\0\0"
    10fc:    00 00 00 00     "\0\0\0\0"
    1100:    00 00 00 00     "\0\0\0\0"
    1104:    00 00 00 00     "\0\0\0\0"
    1108:    00 00 00 00     "\0\0\0\0"
    110c:    00 00 00 00     "\0\0\0\0"
    1110:    00 00 00 00     "\0\0\0\0"
    1114:    00 00 00 00     "\0\0\0\0"
    1118:    00 00 00 00     "\0\0\0\0"
    111c:    00 00 00 00     "\0\0\0\0"
    1120:    00 00 00 00     "\0\0\0\0"
    1124:    00 00 00 00     "\0\0\0\0"
    1128:    00 00 00 00     "\0\0\0\0"
    112c:    00 00 00 00     "\0\0\0\0"
    1130:    00 00 00 00     "\0\0\0\0"
    1134:    00 00 00 00     "\0\0\0\0"
    1138:    00 00 00 00     "\0\0\0\0"
    113c:    00 00 00 00     "\0\0\0\0"
    1140:    00 00 00 00     "\0\0\0\0"
    1144:    00 00 00 00     "\0\0\0\0"
    1148:    00 00 00 00     "\0\0\0\0"
    114c:    00 00 00 00     "\0\0\0\0"
    1150:    00 00 00 00     "\0\0\0\0"
    1154:    00 00 00 00     "\0\0\0\0"
    1158:    00 00 00 00     "\0\0\0\0"
    115c:    00 00 00 00     "\0\0\0\0"
    1160:    00 00 00 00     "\0\0\0\0"
    1164:    00 00 00 00     "\0\0\0\0"
    1168:    00 00 00 00     "\0\0\0\0"
    116c:    00 00 00 00     "\0\0\0\0"
    1170:    00 00 00 00     "\0\0\0\0"
    1174:    00 00 00 00     "\0\0\0\0"
    1178:    00 00 00 00     "\0\0\0\0"
    117c:    00 00 00 00     "\0\0\0\0"
    1180:    00 00 00 00     "\0\0\0\0"
    1184:    00 00 00 00     "\0\0\0\0"
    1188:    00 00 00 00     "\0\0\0\0"
    118c:    00 00 00 00     "\0\0\0\0"
    1190:    00 00 00 00     "\0\0\0\0"
    1194:    00 00 00 00     "\0\0\0\0"
    1198:    00 00 00 00     "\0\0\0\0"
    119c:    00 00 00 00     "\0\0\0\0"
    11a0:    00 00 00 00     "\0\0\0\0"
    11a4:    00 00 00 00     "\0\0\0\0"
    11a8:    00 00 00 00     "\0\0\0\0"
    11ac:    00 00 00 00     "\0\0\0\0"
    11b0:    00 00 00 00     "\0\0\0\0"
    11b4:    00 00 00 00     "\0\0\0\0"
    11b8:    00 00 00 00     "\0\0\0\0"
    11bc:    00 00 00 00     "\0\0\0\0"
    11c0:    00 00 00 00     "\0\0\0\0"
    11c4:    00 00 00 00     "\0\0\0\0"
    11c8:    00 00 00 00     "\0\0\0\0"
    11cc:    00 00 00 00     "\0\0\0\0"
    11d0:    00 00 00 00     "\0\0\0\0"
    11d4:    00 00 00 00     "\0\0\0\0"
    11d8:    00 00 00 00     "\0\0\0\0"
    11dc:    00 00 00 00     "\0\0\0\0"
    11e0:    00 00 00 00     "\0\0\0\0"
    11e4:    00 00 00 00     "\0\0\0\0"
    11e8:    00 00 00 00     "\0\0\0\0"
    11ec:    00 00 00 00     "\0\0\0\0"
    11f0:    00 00 00 00     "\0\0\0\0"
    11f4:    00 00 00 00     "\0\0\0\0"
    11f8:    00 00 00 00     "\0\0\0\0"
    11fc:    00 00 00 00     "\0\0\0\0"
    1200:    00 00 00 00     "\0\0\0\0"
    1204:    00 00 00 00     "\0\0\0\0"
    1208:    00 00 00 00     "\0\0\0\0"
    120c:    00 00 00 00     "\0\0\0\0"
    1210:    00 00 00 00     "\0\0\0\0"
    1214:    00 00 00 00     "\0\0\0\0"
    1218:    00 00 00 00     "\0\0\0\0"
    121c:    00 00 00 00     "\0\0\0\0"
    1220:    00 00 00 00     "\0\0\0\0"
    1224:    00 00 00 00     "\0\0\0\0"
    1228:    00 00 00 00     "\0\0\0\0"
    122c:    00 00 00 00     "\0\0\0\0"
    1230:    00 00 00 00     "\0\0\0\0"
    1234:    00 00 00 00     "\0\0\0\0"
    1238:    00 00 00 00     "\0\0\0\0"
    123c:    00 00 00 00     "\0\0\0\0"
    1240:    00 00 00 00     "\0\0\0\0"
    1244:    00 00 00 00     "\0\0\0\0"
    1248:    00 00 00 00     "\0\0\0\0"
    124c:    00 00 00 00     "\0\0\0\0"
    1250:    00 00 00 00     "\0\0\0\0"
    1254:    00 00 00 00     "\0\0\0\0"
    1258:    00 00 00 00     "\0\0\0\0"
    125c:    00 00 00 00     "\0\0\0\0"
    1260:    00 00 00 00     "\0\0\0\0"
    1264:    00 00 00 00     "\0\0\0\0"
    1268:    00 00 00 00     "\0\0\0\0"
    126c:    00 00 00 00     "\0\0\0\0"
    1270:    00 00 00 00     "\0\0\0\0"
    1274:    00 00 00 00     "\0\0\0\0"
    1278:    00 00 00 00     "\0\0\0\0"
    127c:    00 00 00 00     "\0\0\0\0"
    1280:    00 00 00 00     "\0\0\0\0"
    1284:    00 00 00 00     "\0\0\0\0"
    1288:    00 00 00 00     "\0\0\0\0"
    128c:    00 00 00 00     "\0\0\0\0"
    1290:    00 00 00 00     "\0\0\0\0"
    1294:    00 00 00 00     "\0\0\0\0"
    1298:    00 00 00 00     "\0\0\0\0"
    129c:    00 00 00 00     "\0\0\0\0"
    12a0:    00 00 00 00     "\0\0\0\0"
    12a4:    00 00 00 00     "\0\0\0\0"
    12a8:    00 00 00 00     "\0\0\0\0"
    12ac:    00 00 00 00     "\0\0\0\0"
    12b0:    00 00 00 00     "\0\0\0\0"
    12b4:    00 00 00 00     "\0\0\0\0"
    12b8:    00 00 00 00     "\0\0\0\0"
    12bc:    00 00 00 00     "\0\0\0\0"
    12c0:    00 00 00 00     "\0\0\0\0"
    12c4:    00 00 00 00     "\0\0\0\0"
    12c8:    00 00 00 00     "\0\0\0\0"
    12cc:    00 00 00 00     "\0\0\0\0"
    12d0:    00 00 00 00     "\0\0\0\0"
    12d4:    00 00 00 00     "\0\0\0\0"
    12d8:    00 00 00 00     "\0\0\0\0"
    12dc:    00 00 00 00     "\0\0\0\0"
    12e0:    00 00 00 00     "\0\0\0\0"
    12e4:    00 00 00 00     "\0\0\0\0"
    12e8:    00 00 00 00     "\0\0\0\0"
    12ec:    00 00 00 00     "\0\0\0\0"
    12f0:    00 00 00 00     "\0\0\0\0"
    12f4:    00 00 00 00     "\0\0\0\0"
    12f8:    00 00 00 00     "\0\0\0\0"
    12fc:    00 00 00 00     "\0\0\0\0"
    1300:    00 00 00 00     "\0\0\0\0"
    1304:    00 00 00 00     "\0\0\0\0"
    1308:    00 00 00 00     "\0\0\0\0"
    130c:    00 00 00 00     "\0\0\0\0"
    1310:    00 00 00 00     "\0\0\0\0"
    1314:    00 00 00 00     "\0\0\0\0"
    1318:    00 00 00 00     "\0\0\0\0"
    131c:    00 00 00 00     "\0\0\0\0"
    1320:    00 00 00 00     "\0\0\0\0"
    1324:    00 00 00 00     "\0\0\0\0"
    1328:    00 00 00 00     "\0\0\0\0"
    132c:    00 00 00 00     "\0\0\0\0"
    1330:    00 00 00 00     "\0\0\0\0"
    1334:    00 00 00 00     "\0\0\0\0"
    1338:    00 00 00 00     "\0\0\0\0"
    133c:    00 00 00 00     "\0\0\0\0"
    1340:    00 00 00 00     "\0\0\0\0"
    1344:    00 00 00 00     "\0\0\0\0"
    1348:    00 00 00 00     "\0\0\0\0"
    134c:    00 00 00 00     "\0\0\0\0"
    1350:    00 00 00 00     "\0\0\0\0"
    1354:    00 00 00 00     "\0\0\0\0"
    1358:    00 00 00 00     "\0\0\0\0"
    135c:    00 00 00 00     "\0\0\0\0"
    1360:    00 00 00 00     "\0\0\0\0"
    1364:    00 00 00 00     "\0\0\0\0"
    1368:    00 00 00 00     "\0\0\0\0"
    136c:    00 00 00 00     "\0\0\0\0"
    1370:    00 00 00 00     "\0\0\0\0"
    1374:    00 00 00 00     "\0\0\0\0"
    1378:    00 00 00 00     "\0\0\0\0"
    137c:    00 00 00 00     "\0\0\0\0"
    1380:    00 00 00 00     "\0\0\0\0"
    1384:    00 00 00 00     "\0\0\0\0"
    1388:    00 00 00 00     "\0\0\0\0"
    138c:    00 00 00 00     "\0\0\0\0"
    1390:    00 00 00 00     "\0\0\0\0"
    1394:    00 00 00 00     "\0\0\0\0"
    1398:    00 00 00 00     "\0\0\0\0"
    139c:    00 00 00 00     "\0\0\0\0"
    13a0:    00 00 00 00     "\0\0\0\0"
    13a4:    00 00 00 00     "\0\0\0\0"
    13a8:    00 00 00 00     "\0\0\0\0"
    13ac:    00 00 00 00     "\0\0\0\0"
    13b0:    00 00 00 00     "\0\0\0\0"
    13b4:    00 00 00 00     "\0\0\0\0"
    13b8:    00 00 00 00     "\0\0\0\0"
    13bc:    00 00 00 00     "\0\0\0\0"
    13c0:    00 00 00 00     "\0\0\0\0"
    13c4:    00 00 00 00     "\0\0\0\0"
    13c8:    00 00 00 00     "\0\0\0\0"
    13cc:    00 00 00 00     "\0\0\0\0"
    13d0:    00 00 00 00     "\0\0\0\0"
    13d4:    00 00 00 00     "\0\0\0\0"
    13d8:    00 00 00 00     "\0\0\0\0"
    13dc:    00 00 00 00     "\0\0\0\0"
    13e0:    00 00 00 00     "\0\0\0\0"
    13e4:    00 00 00 00     "\0\0\0\0"
    13e8:    00 00 00 00     "\0\0\0\0"
    13ec:    00 00 00 00     "\0\0\0\0"
    13f0:    00 00 00 00     "\0\0\0\0"
    13f4:    00 00 00 00     "\0\0\0\0"
    13f8:    00 00 00 00     "\0\0\0\0"
    13fc:    00 00 00 00     "\0\0\0\0"
    1400:    00 00 00 00     "\0\0\0\0"
    1404:    00 00 00 00     "\0\0\0\0"
    1408:    00 00 00 00     "\0\0\0\0"
    140c:    00 00 00 00     "\0\0\0\0"
    1410:    00 00 00 00     "\0\0\0\0"
    1414:    00 00 00 00     "\0\0\0\0"
    1418:    00 00 00 00     "\0\0\0\0"
    141c:    00 00 00 00     "\0\0\0\0"
    1420:    00 00 00 00     "\0\0\0\0"
    1424:    00 00 00 00     "\0\0\0\0"
    1428:    00 00 00 00     "\0\0\0\0"
    142c:    00 00 00 00     "\0\0\0\0"
    1430:    00 00 00 00     "\0\0\0\0"
    1434:    00 00 00 00     "\0\0\0\0"
    1438:    00 00 00 00     "\0\0\0\0"
    143c:    00 00 00 00     "\0\0\0\0"
    1440:    00 00 00 00     "\0\0\0\0"
    1444:    00 00 00 00     "\0\0\0\0"
    1448:    00 00 00 00     "\0\0\0\0"
    144c:    00 00 00 00     "\0\0\0\0"
    1450:    00 00 00 00     "\0\0\0\0"
    1454:    00 00 00 00     "\0\0\0\0"
    1458:    00 00 00 00     "\0\0\0\0"
    145c:    00 00 00 00     "\0\0\0\0"
    1460:    00 00 00 00     "\0\0\0\0"
    1464:    00 00 00 00     "\0\0\0\0"
    1468:    00 00 00 00     "\0\0\0\0"
    146c:    00 00 00 00     "\0\0\0\0"
    1470:    00 00 00 00     "\0\0\0\0"
    1474:    00 00 00 00     "\0\0\0\0"
    1478:    00 00 00 00     "\0\0\0\0"
    147c:    00 00 00 00     "\0\0\0\0"
    1480:    00 00 00 00     "\0\0\0\0"
    1484:    00 00 00 00     "\0\0\0\0"
    1488:    00 00 00 00     "\0\0\0\0"
    148c:    00 00 00 00     "\0\0\0\0"
    1490:    00 00 00 00     "\0\0\0\0"
    1494:    00 00 00 00     "\0\0\0\0"
    1498:    00 00 00 00     "\0\0\0\0"
    149c:    00 00 00 00     "\0\0\0\0"
    14a0:    00 00 00 00     "\0\0\0\0"
    14a4:    00 00 00 00     "\0\0\0\0"
    14a8:    00 00 00 00     "\0\0\0\0"
    14ac:    00 00 00 00     "\0\0\0\0"
    14b0:    00 00 00 00     "\0\0\0\0"
    14b4:    00 00 00 00     "\0\0\0\0"
    14b8:    00 00 00 00     "\0\0\0\0"
    14bc:    00 00 00 00     "\0\0\0\0"
    14c0:    00 00 00 00     "\0\0\0\0"
    14c4:    00 00 00 00     "\0\0\0\0"
    14c8:    00 00 00 00     "\0\0\0\0"
    14cc:    00 00 00 00     "\0\0\0\0"
    14d0:    00 00 00 00     "\0\0\0\0"
    14d4:    00 00 00 00     "\0\0\0\0"
    14d8:    00 00 00 00     "\0\0\0\0"
    14dc:    00 00 00 00     "\0\0\0\0"
    14e0:    00 00 00 00     "\0\0\0\0"
    14e4:    00 00 00 00     "\0\0\0\0"
    14e8:    00 00 00 00     "\0\0\0\0"
    14ec:    00 00 00 00     "\0\0\0\0"
    14f0:    00 00 00 00     "\0\0\0\0"
    14f4:    00 00 00 00     "\0\0\0\0"
    14f8:    00 00 00 00     "\0\0\0\0"
    14fc:    00 00 00 00     "\0\0\0\0"
    1500:    00 00 00 00     "\0\0\0\0"
    1504:    00 00 00 00     "\0\0\0\0"
    1508:    00 00 00 00     "\0\0\0\0"
    150c:    00 00 00 00     "\0\0\0\0"
    1510:    00 00 00 00     "\0\0\0\0"
    1514:    00 00 00 00     "\0\0\0\0"
    1518:    00 00 00 00     "\0\0\0\0"
    151c:    00 00 00 00     "\0\0\0\0"
    1520:    00 00 00 00     "\0\0\0\0"
    1524:    00 00 00 00     "\0\0\0\0"
    1528:    00 00 00 00     "\0\0\0\0"
    152c:    00 00 00 00     "\0\0\0\0"
    1530:    00 00 00 00     "\0\0\0\0"
    1534:    00 00 00 00     "\0\0\0\0"
    1538:    00 00 00 00     "\0\0\0\0"
    153c:    00 00 00 00     "\0\0\0\0"
    1540:    00 00 00 00     "\0\0\0\0"
    1544:    00 00 00 00     "\0\0\0\0"
    1548:    00 00 00 00     "\0\0\0\0"
    154c:    00 00 00 00     "\0\0\0\0"
    1550:    00 00 00 00     "\0\0\0\0"
    1554:    00 00 00 00     "\0\0\0\0"
    1558:    00 00 00 00     "\0\0\0\0"
    155c:    00 00 00 00     "\0\0\0\0"
    1560:    00 00 00 00     "\0\0\0\0"
    1564:    00 00 00 00     "\0\0\0\0"
    1568:    00 00 00 00     "\0\0\0\0"
    156c:    00 00 00 00     "\0\0\0\0"
    1570:    00 00 00 00     "\0\0\0\0"
    1574:    00 00 00 00     "\0\0\0\0"
    1578:    00 00 00 00     "\0\0\0\0"
    157c:    00 00 00 00     "\0\0\0\0"
    1580:    00 00 00 00     "\0\0\0\0"
    1584:    00 00 00 00     "\0\0\0\0"
    1588:    00 00 00 00     "\0\0\0\0"
    158c:    00 00 00 00     "\0\0\0\0"
    1590:    00 00 00 00     "\0\0\0\0"
    1594:    00 00 00 00     "\0\0\0\0"
    1598:    00 00 00 00     "\0\0\0\0"
    159c:    00 00 00 00     "\0\0\0\0"
    15a0:    00 00 00 00     "\0\0\0\0"
    15a4:    00 00 00 00     "\0\0\0\0"
    15a8:    00 00 00 00     "\0\0\0\0"
    15ac:    00 00 00 00     "\0\0\0\0"
    15b0:    00 00 00 00     "\0\0\0\0"
    15b4:    00 00 00 00     "\0\0\0\0"
    15b8:    00 00 00 00     "\0\0\0\0"
    15bc:    00 00 00 00     "\0\0\0\0"
    15c0:    00 00 00 00     "\0\0\0\0"
    15c4:    00 00 00 00     "\0\0\0\0"
    15c8:    00 00 00 00     "\0\0\0\0"
    15cc:    00 00 00 00     "\0\0\0\0"
    15d0:    00 00 00 00     "\0\0\0\0"
    15d4:    00 00 00 00     "\0\0\0\0"
    15d8:    00 00 00 00     "\0\0\0\0"
    15dc:    00 00 00 00     "\0\0\0\0"
    15e0:    00 00 00 00     "\0\0\0\0"
    15e4:    00 00 00 00     "\0\0\0\0"
    15e8:    00 00 00 00     "\0\0\0\0"
    15ec:    00 00 00 00     "\0\0\0\0"
    15f0:    00 00 00 00     "\0\0\0\0"
    15f4:    00 00 00 00     "\0\0\0\0"
    15f8:    00 00 00 00     "\0\0\0\0"
    15fc:    00 00 00 00     "\0\0\0\0"
    1600:    00 00 00 00     "\0\0\0\0"
    1604:    00 00 00 00     "\0\0\0\0"
    1608:    00 00 00 00     "\0\0\0\0"
    160c:    00 00 00 00     "\0\0\0\0"
    1610:    00 00 00 00     "\0\0\0\0"
    1614:    00 00 00 00     "\0\0\0\0"
    1618:    00 00 00 00     "\0\0\0\0"
    161c:    00 00 00 00     "\0\0\0\0"
    1620:    00 00 00 00     "\0\0\0\0"
    1624:    00 00 00 00     "\0\0\0\0"
    1628:    00 00 00 00     "\0\0\0\0"
    162c:    00 00 00 00     "\0\0\0\0"
    1630:    00 00 00 00     "\0\0\0\0"
    1634:    00 00 00 00     "\0\0\0\0"
    1638:    00 00 00 00     "\0\0\0\0"
    163c:    00 00 00 00     "\0\0\0\0"
    1640:    00 00 00 00     "\0\0\0\0"
    1644:    00 00 00 00     "\0\0\0\0"
    1648:    00 00 00 00     "\0\0\0\0"
    164c:    00 00 00 00     "\0\0\0\0"
    1650:    00 00 00 00     "\0\0\0\0"
    1654:    00 00 00 00     "\0\0\0\0"
    1658:    00 00 00 00     "\0\0\0\0"
    165c:    00 00 00 00     "\0\0\0\0"
    1660:    00 00 00 00     "\0\0\0\0"
    1664:    00 00 00 00     "\0\0\0\0"
    1668:    00 00 00 00     "\0\0\0\0"
    166c:    00 00 00 00     "\0\0\0\0"
    1670:    00 00 00 00     "\0\0\0\0"
    1674:    00 00 00 00     "\0\0\0\0"
    1678:    00 00 00 00     "\0\0\0\0"
    167c:    00 00 00 00     "\0\0\0\0"
    1680:    00 00 00 00     "\0\0\0\0"
    1684:    00 00 00 00     "\0\0\0\0"
    1688:    00 00 00 00     "\0\0\0\0"
    168c:    00 00 00 00     "\0\0\0\0"
    1690:    00 00 00 00     "\0\0\0\0"
    1694:    00 00 00 00     "\0\0\0\0"
    1698:    00 00 00 00     "\0\0\0\0"
    169c:    00 00 00 00     "\0\0\0\0"
    16a0:    00 00 00 00     "\0\0\0\0"
    16a4:    00 00 00 00     "\0\0\0\0"
    16a8:    00 00 00 00     "\0\0\0\0"
    16ac:    00 00 00 00     "\0\0\0\0"
    16b0:    00 00 00 00     "\0\0\0\0"
    16b4:    00 00 00 00     "\0\0\0\0"
    16b8:    00 00 00 00     "\0\0\0\0"
    16bc:    00 00 00 00     "\0\0\0\0"
    16c0:    00 00 00 00     "\0\0\0\0"
    16c4:    00 00 00 00     "\0\0\0\0"
    16c8:    00 00 00 00     "\0\0\0\0"
    16cc:    00 00 00 00     "\0\0\0\0"
    16d0:    00 00 00 00     "\0\0\0\0"
    16d4:    00 00 00 00     "\0\0\0\0"
    16d8:    00 00 00 00     "\0\0\0\0"
    16dc:    00 00 00 00     "\0\0\0\0"
    16e0:    00 00 00 00     "\0\0\0\0"
    16e4:    00 00 00 00     "\0\0\0\0"
    16e8:    00 00 00 00     "\0\0\0\0"
    16ec:    00 00 00 00     "\0\0\0\0"
    16f0:    00 00 00 00     "\0\0\0\0"
    16f4:    00 00 00 00     "\0\0\0\0"
    16f8:    00 00 00 00     "\0\0\0\0"
    16fc:    00 00 00 00     "\0\0\0\0"
    1700:    00 00 00 00     "\0\0\0\0"
    1704:    00 00 00 00     "\0\0\0\0"
    1708:    00 00 00 00     "\0\0\0\0"
    170c:    00 00 00 00     "\0\0\0\0"
    1710:    00 00 00 00     "\0\0\0\0"
    1714:    00 00 00 00     "\0\0\0\0"
    1718:    00 00 00 00     "\0\0\0\0"
    171c:    00 00 00 00     "\0\0\0\0"
    1720:    00 00 00 00     "\0\0\0\0"
    1724:    00 00 00 00     "\0\0\0\0"
    1728:    00 00 00 00     "\0\0\0\0"
    172c:    00 00 00 00     "\0\0\0\0"
    1730:    00 00 00 00     "\0\0\0\0"
    1734:    00 00 00 00     "\0\0\0\0"
    1738:    00 00 00 00     "\0\0\0\0"
    173c:    00 00 00 00     "\0\0\0\0"
    1740:    00 00 00 00     "\0\0\0\0"
    1744:    00 00 00 00     "\0\0\0\0"
    1748:    00 00 00 00     "\0\0\0\0"
    174c:    00 00 00 00     "\0\0\0\0"
    1750:    00 00 00 00     "\0\0\0\0"
    1754:    00 00 00 00     "\0\0\0\0"
    1758:    00 00 00 00     "\0\0\0\0"
    175c:    00 00 00 00     "\0\0\0\0"
    1760:    00 00 00 00     "\0\0\0\0"
    1764:    00 00 00 00     "\0\0\0\0"
    1768:    00 00 00 00     "\0\0\0\0"
    176c:    00 00 00 00     "\0\0\0\0"
    1770:    00 00 00 00     "\0\0\0\0"
    1774:    00 00 00 00     "\0\0\0\0"
    1778:    00 00 00 00     "\0\0\0\0"
    177c:    00 00 00 00     "\0\0\0\0"
    1780:    00 00 00 00     "\0\0\0\0"
    1784:    00 00 00 00     "\0\0\0\0"
    1788:    00 00 00 00     "\0\0\0\0"
    178c:    00 00 00 00     "\0\0\0\0"
    1790:    00 00 00 00     "\0\0\0\0"
    1794:    00 00 00 00     "\0\0\0\0"
    1798:    00 00 00 00     "\0\0\0\0"
    179c:    00 00 00 00     "\0\0\0\0"
    17a0:    00 00 00 00     "\0\0\0\0"
    17a4:    00 00 00 00     "\0\0\0\0"
    17a8:    00 00 00 00     "\0\0\0\0"
    17ac:    00 00 00 00     "\0\0\0\0"
    17b0:    00 00 00 00     "\0\0\0\0"
    17b4:    00 00 00 00     "\0\0\0\0"
    17b8:    00 00 00 00     "\0\0\0\0"
    17bc:    00 00 00 00     "\0\0\0\0"
    17c0:    00 00 00 00     "\0\0\0\0"
    17c4:    00 00 00 00     "\0\0\0\0"
    17c8:    00 00 00 00     "\0\0\0\0"
    17cc:    00 00 00 00     "\0\0\0\0"
    17d0:    00 00 00 00     "\0\0\0\0"
    17d4:    00 00 00 00     "\0\0\0\0"
    17d8:    00 00 00 00     "\0\0\0\0"
    17dc:    00 00 00 00     "\0\0\0\0"
    17e0:    00 00 00 00     "\0\0\0\0"
    17e4:    00 00 00 00     "\0\0\0\0"
    17e8:    00 00 00 00     "\0\0\0\0"
    17ec:    00 00 00 00     "\0\0\0\0"
    17f0:    00 00 00 00     "\0\0\0\0"
    17f4:    00 00 00 00     "\0\0\0\0"
    17f8:    00 00 00 00     "\0\0\0\0"
    17fc:    00 00 00 00     "\0\0\0\0"
    1800:    00 00 00 00     "\0\0\0\0"
    1804:    00 00 00 00     "\0\0\0\0"
    1808:    00 00 00 00     "\0\0\0\0"
    180c:    00 00 00 00     "\0\0\0\0"
    1810:    00 00 00 00     "\0\0\0\0"
    1814:    00 00 00 00     "\0\0\0\0"
    1818:    00 00 00 00     "\0\0\0\0"
    181c:    00 00 00 00     "\0\0\0\0"
    1820:    00 00 00 00     "\0\0\0\0"
    1824:    00 00 00 00     "\0\0\0\0"
    1828:    00 00 00 00     "\0\0\0\0"
    182c:    00 00 00 00     "\0\0\0\0"
    1830:    00 00 00 00     "\0\0\0\0"
    1834:    00 00 00 00     "\0\0\0\0"
    1838:    00 00 00 00     "\0\0\0\0"
    183c:    00 00 00 00     "\0\0\0\0"
    1840:    00 00 00 00     "\0\0\0\0"
    1844:    00 00 00 00     "\0\0\0\0"
    1848:    00 00 00 00     "\0\0\0\0"
    184c:    00 00 00 00     "\0\0\0\0"

stack_magic0:
    1850:    00 00 00 00     "\0\0\0\0"
    1854:    00 00 00 00     "\0\0\0\0"
    1858:    00 00 00 00     "\0\0\0\0"
    185c:    00 00 00 00     "\0\0\0\0"
Disassembly of section .bss:
report_bss_begin:

hci_event_callback_registration:

le_stack_pool:

l2cap_stack:

le_l2cap_event_packet_handler:

hci_event_callback_registration.1626:

l2cap_fixed_channels:

__user_info:

att_s_hdl:

profile_l2cap_hdl:

btstack_stack:

profile_le_pool_hdl:

btstack_global_info:

le_global_db_info.0:

att_global_info:

gatt_client_global_info:

system_bss_start:

__errno.err:

led_timer_id:

mutex:

hdl:

port_edge_wakeup_callback:

aport_edge_wakeup_callback:

lrc.4:

lrc.2:

mutex.1190:

start_app.app_msg_type:

highCurrentTCB:

sys_low_power:

event:

cur_time.3:

cur_time.4:

cur_time.5:

timer_pool:

bin_cfg:

btif_cfg:

prev_half_msec:

link:

acl_tx_bulk_sem:

gatt_client_conn_handle:

is_key_active:

key_poweron_flag:

gatt_server_conn_handle_state:

cbk_event_type:

ota_status:

is_hid_active:

ble_connect:

led_state:

led_io_flash:

led_next_state:

adv_name_ok:

p2m_ie:

flash_ie_bak:

flash_ie_bakh:

flash_pu_bak:

flash_pd_bak:

flash_out_bak:

flash_dir_bak:

sfc_is_busy:

sys_low_power_request:

prev_putbyte:

bt_seek_type:

bt_seek_type.6191:

g_update_err_code:

fw_flash_bin_num:

lc_sector_align_mode:

_adc_res:

gatt_server_conn_handle:

g_auto_shutdown_timer:

io_check_timer:

hogp_con_handle:

global_id:

g_bt_read_len:

adc_scan.adc_sample_flag:

__this:

gatt_control_block:

gatt_ram_buffer:

ble_update_ready_jump_flag:

g_updata_flag:

bt_hid_mode:

led_timeout_count:

io_check_timer_handle.vaild_cnt:

first_pair_flag:

get_vbat_percent_call:

report_map_size:

report_map:

battery_full_value:

uart_sfr.0:

uart_sfr.1:

tmr_sfr.0:

tmr_sfr.1:

tmr_sfr.2:

timer1_isr.cnt1:

hdl.5.632:

usr_jiffies:

delay_cnt:

hdl.4:

hdl.0.637:

hdl.6:

sys_div_bak:

reset_source_value:

lrc.0:

lrc.6:

lrc.3:

lrc.5:

memory_init.init:

last_otcb:

last_tcb:

compensation:

tick_cnt:

pxEnd:

xMinimumEverFreeBytesRemaining:

xFreeBytesRemaining:

lb_send:

log_bufs:

jiffies_base:

log_output_busy:

hdl.0.5459:

hdl.2.5460:

bt_file_offset:

bt_read_buf:

lmp_ch_update_sleep_hdl:

lmp_ch_update_resume_hdl:

bt_file_offset.6190:

ble_update_ctrl.0:

ble_update_ctrl.2:

ble_update_ctrl.1:

ble_update_ctrl.3:

ble_ch_update_sleep_hdl:

bt_res_update_flag:

ble_ch_update_resume_hdl:

p_update_param:

p_update_op:

lc_boot_offset:

vm_poweroff_sfc_info.0:

vm_poweroff_sfc_info.1:

bt_mac_addr_for_testbox:

cur_peer_addr_info:

xStart:

succ_report:

nor_sdfile_hdl:

hogp_pair_info:

burn_code:

usr_timer_head:

vbat_value_array:

vbg_value_array:

charge_var:

_led:

norflash_dev:

_sdfile_handl:

hogp_scan_rsp_data:

hogp_adv_data:

hogp_server_adv_config:

app_var:

server_s_hdl:

flash_info:

sfc_norflash_mutex:

log_mutex:

sys_timer_sem:

pmu_voltage:

lrc.7:

adc_queue:

stack_mem:

vm_obj:

btctler_bss_start:

tws_bulk_pool_end:

lnav_flag:

ldo_trim_res:

rf_pwr_off_info_p:

ble_pwr_off_store:

h4_transport:

__h4_send_packet:

hdl.3679:

hci_cmd_tmp_buff:

ll_hdl:

pEvent_buf_static:

ll_error_code:

adv_param:

adv_data:

scan_resp_data:

bb_hdl:

sche_lock:

bredr_link_v:

lmp_acl_link:

update_bss_start:

curr_loader_file_head:

fw_flash_bin_head:

update_bss_end:

hdl.27:

hdl.5:

hdl.11:

hdl.2:

hdl.18:

hdl.19:

hdl.14:

hdl.16:

hdl.0:

hdl.1:

hdl.24:

hdl.23:

hdl.13:

hdl.15:

hdl.17:

hdl.29:

hdl.30:

hdl.31:

hdl.32:

hdl.3:

clk_set.last_clk:

clock_poweroff_sfc_info.0:

driver_bss_end:

CurrentTCB:
Disassembly of section .data_code:
report_data_code_begin:
    31c0:    77 01             	[--sp] = {rets, r7-r4}			  ## common.c:10:0
    31c2:    c1 ff 88 08 00 00 	r1 = 2184 <jiffies : 888 >			  ## common.c:10:0
    31c8:    00 42             	r0 = [r1 + 0]			  ## common.c:11:24
    31ca:    c2 ff f0 e0 1b 00 	r2 = 1827056 <uECC_vli_cmp_unsafe+0xB70F4 : 1be0f0 >			  ## common.c:11:24
    31d0:    03 44             	r3 = [r2 + 0]			  ## common.c:12:23
    31d2:    12 44             	r2 = [r2 + 4]			  ## common.c:12:39
    31d4:    03 fe 14 39       	r3 = r3 * 20			  ## common.c:12:32
    31d8:    c0 fe 20 23       	r2 = r3 / r2 (u)			  ## common.c:12:37
    31dc:    34 fd f8 0c       	r4 = r0 & 134217727			  ## common.c:11:32
    31e0:    c3 ff 50 20 00 00 	r3 = 8272 <prev_half_msec : 2050 >			  ## common.c:11:32
    31e6:    00 46             	r0 = [r3 + 0]			  ## common.c:14:17
    31e8:    46 71             	r6 = 20			  ## common.c:11:50
    31ea:    25 08             	r5 = r2			  ## common.c:14:11
    31ec:    80 fe 60 54       	r5 += r4 * r6			  ## common.c:14:11
    31f0:    16 70             	r6 = 1			  ## common.c:14:11
    31f2:    17 70             	r7 = 1			  ## common.c:15:13
    31f4:    05 f2 01 b0       	ifs (r5 < r0) goto 2 <report_data_code_begin+0x3A : 31fa >			  ## common.c:15:13
    31f8:    07 70             	r7 = 0			  ## common.c:15:13
    31fa:    05 f2 01 30       	if (r5 < r0) goto 2 <report_data_code_begin+0x40 : 3200 >
    31fe:    06 70             	r6 = 0			  ## common.c:14:15
    3200:    56 bf             	r6 &= r7			  ## common.c:14:9
    3202:    04 fe 14 49       	r4 = r4 * 20			  ## common.c:11:50
    3206:    16 e0 08 10       	if (r6 != 1) goto 16 <report_data_code_begin+0x5A : 321a >
    320a:    45 81             	r5 += 20			  ## common.c:16:18
    320c:    05 f2 04 a0       	ifs (r5 >= r0) goto 8 <report_data_code_begin+0x58 : 3218 >			  ## common.c:16:18
    3210:    02 42             	r2 = [r1 + 0]			  ## common.c:19:24
    3212:    12 80             	r2 += 1			  ## common.c:19:24
    3214:    0a 42             	[r1 + 0] = r2			  ## common.c:19:24
    3216:    57 01             	{pc, r7-r4} = [sp++]			  ## common.c:27:1
    3218:    44 81             	r4 += 20			  ## common.c:17:19
    321a:    80 b8             	r0 = r4 + r2			  ## common.c:24:24
    321c:    08 46             	[r3 + 0] = r0			  ## common.c:24:20
    321e:    57 01             	{pc, r7-r4} = [sp++]			  ## common.c:27:1


jiffies_msec:
    3220:    34 00             	[--sp] = rets			  ## common.c:31:0
    3222:    ce 17             	call -100 <report_data_code_begin : 31c0 >			  ## common.c:32:12
    3224:    40 d0             	r0 = r0 >> 1			  ## common.c:32:32
    3226:    30 00             	pc = [sp++]			  ## common.c:32:5


os_current_task:
    3228:    75 01             	[--sp] = {rets, r5, r4}			  ## task.c:37:0
    322a:    88 f3 b7 1d       	call 1063790 <local_irq_disable : 106d9c >			  ## task.c:40:5
    322e:    88 f3 c1 1d       	call 1063810 <os_current_task_rom : 106db4 >			  ## task.c:42:23
    3232:    04 08             	r4 = r0			  ## task.c:42:23
    3234:    c5 ff 24 5b e1 01 	r5 = 31546148 <task_info_table : 1e15b24 >
    323a:    c0 ff 03 58 e1 01 	r0 = 31545347 <update_target_end+0x297B : 1e15803 >
    3240:    41 08             	r1 = r4			  ## task.c:45:14
    3242:    88 f3 57 1e       	call 1064110 <strcmp : 106ef4 >			  ## task.c:45:14
    3246:    06 20             	if (r0 == 0) goto 12 <os_current_task+0x2C : 3254 >			  ## task.c:45:14
    3248:    30 4a             	r0 = [r5 + 12]			  ## task.c:44:34
    324a:    c5 80             	r5 += 12			  ## task.c:44:49
    324c:    f9 31             	if (r0 != 0) goto -14 <os_current_task+0x18 : 3240 >			  ## task.c:44:49
    324e:    88 f3 a3 1d       	call 1063750 <local_irq_enable : 106d98 >			  ## task.c:51:5
    3252:    03 18             	goto 6 <os_current_task+0x32 : 325a >			  ## task.c:51:5
    3254:    88 f3 a0 1d       	call 1063744 <local_irq_enable : 106d98 >			  ## task.c:46:13
    3258:    04 4a             	r4 = [r5 + 0]			  ## task.c:47:23
    325a:    40 08             	r0 = r4			  ## task.c:54:1
    325c:    55 01             	{pc, r5, r4} = [sp++]			  ## task.c:54:1


pcTaskName:
    325e:    80 80             	r0 += 8			  ## port_overwrite.c:116:0
    3260:    20 00             	rts			  ## port_overwrite.c:117:5


vCreateTaskStack:
    3262:    77 01             	[--sp] = {rets, r7-r4}			  ## port_overwrite.c:135:0
    3264:    12 08             	r2 = r1			  ## port_overwrite.c:135:0
    3266:    03 08             	r3 = r0			  ## port_overwrite.c:135:0
    3268:    32 f2 42 00       	if (r2 == r3) goto 132 <vCreateTaskStack+0x8E : 32f0 >			  ## port_overwrite.c:135:0
    326c:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## port_overwrite.c:143:14
    3272:    13 f6 b0 00       	[r0 + 176] = r3			  ## port_overwrite.c:142:15
    3276:    12 f6 b4 00       	[r0 + 180] = r2			  ## port_overwrite.c:143:14
    327a:    00 47             	r0 = [r3 + 64]			  ## port_overwrite.c:111:21
    327c:    01 46             	r1 = [r3 + 0]			  ## port_overwrite.c:111:21
    327e:    05 fc 80 00       	r5 = r0 + 128			  ## port_overwrite.c:144:49
    3282:    51 f2 03 20       	if (r1 >= r5) goto 6 <vCreateTaskStack+0x2A : 328c >
    3286:    b0 f3 a1 64       	call -2045630 <cpu_reset.1221 : 1e0fbcc >			  ## port_overwrite.c:147:5
    328a:    01 46             	r1 = [r3 + 0]			  ## port_overwrite.c:147:5
    328c:    03 45             	r3 = [r2 + 64]			  ## port_overwrite.c:111:21
    328e:    00 44             	r0 = [r2 + 0]
    3290:    34 fc 80 00       	r4 = r3 + 128			  ## port_overwrite.c:150:49
    3294:    33 fd 7f 19       	r3 = r1 & 4294967168			  ## port_overwrite.c:148:29
    3298:    40 f2 03 20       	if (r0 >= r4) goto 6 <vCreateTaskStack+0x40 : 32a2 >
    329c:    b0 f3 96 64       	call -2045652 <cpu_reset.1221 : 1e0fbcc >			  ## port_overwrite.c:152:5
    32a0:    00 44             	r0 = [r2 + 0]			  ## port_overwrite.c:152:5
    32a2:    01 4a             	r1 = [r5 + 0]			  ## port_overwrite.c:157:9
    32a4:    67 b7             	r7 = r3 - r5			  ## port_overwrite.c:148:87
    32a6:    30 fd 7f 09       	r0 = r0 & 4294967168			  ## port_overwrite.c:153:29
    32aa:    26 b1             	r6 = r0 - r4			  ## port_overwrite.c:153:87
    32ac:    20 ff 5a 1f 02 00 	if (r1 == 1515870810) goto 4 <vCreateTaskStack+0x54 : 32b6 >
    32b2:    b0 f3 8b 64       	call -2045674 <cpu_reset.1221 : 1e0fbcc >			  ## port_overwrite.c:158:9
    32b6:    a1 bf             	r1 = r7 - r6			  ## port_overwrite.c:173:26
    32b8:    11 e0 07 b0       	ifs (r1 < 1) goto 14 <vCreateTaskStack+0x68 : 32ca >			  ## port_overwrite.c:175:9
    32bc:    80 bb             	r0 = r5 + r6			  ## port_overwrite.c:178:34
    32be:    88 f3 0b 1e       	call 1063958 <vfree_v2 : 106ed8 >			  ## port_overwrite.c:178:9
    32c2:    40 08             	r0 = r4			  ## port_overwrite.c:181:9
    32c4:    51 08             	r1 = r5			  ## port_overwrite.c:181:9
    32c6:    62 08             	r2 = r6			  ## port_overwrite.c:181:9
    32c8:    0a 18             	goto 20 <vCreateTaskStack+0x7C : 32de >			  ## port_overwrite.c:181:9
    32ca:    f1 ef 05 c0       	ifs (r1 > -1) goto 10 <vCreateTaskStack+0x76 : 32d8 >
    32ce:    c0 b9             	r0 = r4 + r7			  ## port_overwrite.c:186:36
    32d0:    61 fb 00 19       	r1 = 0 - r1			  ## port_overwrite.c:186:52
    32d4:    88 f3 fe 1d       	call 1063932 <vmalloc_v2 : 106ed4 >			  ## port_overwrite.c:186:9
    32d8:    40 08             	r0 = r4
    32da:    51 08             	r1 = r5
    32dc:    72 08             	r2 = r7
    32de:    88 f3 fd 1d       	call 1063930 <vcopy_ : 106edc >
    32e2:    56 e0 05 30       	if (r6 < 5) goto 10 <vCreateTaskStack+0x8E : 32f0 >
    32e6:    a0 75             	r0 = 90			  ## port_overwrite.c:201:9
    32e8:    38 68             	b[r4 + 3] = r0			  ## port_overwrite.c:201:9
    32ea:    28 68             	b[r4 + 2] = r0			  ## port_overwrite.c:201:9
    32ec:    18 68             	b[r4 + 1] = r0			  ## port_overwrite.c:201:9
    32ee:    08 68             	b[r4 + 0] = r0			  ## port_overwrite.c:201:9
    32f0:    57 01             	{pc, r7-r4} = [sp++]			  ## port_overwrite.c:205:1


pvPortSwitch:
    32f2:    c0 ff 7c 1e 00 00 	r0 = 7804 <highCurrentTCB : 1e7c >			  ## port_overwrite.c:221:0
    32f8:    00 40             	r0 = [r0 + 0]			  ## port_overwrite.c:226:32
    32fa:    c1 ff ac 31 00 00 	r1 = 12716 <CurrentTCB : 31ac >			  ## port_overwrite.c:225:32
    3300:    02 42             	r2 = [r1 + 0]			  ## port_overwrite.c:225:32
    3302:    01 40             	r1 = [r0 + 0]			  ## port_overwrite.c:226:23
    3304:    00 44             	r0 = [r2 + 0]			  ## port_overwrite.c:225:23
    3306:    ad 1f             	goto -166 <vCreateTaskStack : 3262 >			  ## port_overwrite.c:228:5


uxTaskStack:
    3308:    00 41             	r0 = [r0 + 64]			  ## port_overwrite.c:110:0
    330a:    20 00             	rts			  ## port_overwrite.c:111:5


vAppSoftwareInterruptISR:
    330c:    18 00             	cli			  ## port_overwrite.c:506:0
    330e:    78 f3 03 00       	[--sp] = {r1, r0}			  ## port_overwrite.c:507:5
    3312:    e0 01             	[--sp] = {psr}			  ## port_overwrite.c:507:5
    3314:    c0 ff 00 e2 1b 00 	r0 = 1827328 <uECC_vli_cmp_unsafe+0xB7204 : 1be200 >			  ## port_overwrite.c:507:5
    331a:    01 40             	r1 = [r0 + 0]			  ## port_overwrite.c:507:5
    331c:    f1 b1             	r1 &= 4294967287			  ## port_overwrite.c:507:5
    331e:    09 40             	[r0 + 0] = r1			  ## port_overwrite.c:507:5
    3320:    a0 01             	{psr} = [sp++]			  ## port_overwrite.c:507:5
    3322:    70 f3 03 00       	{r1, r0} = [sp++]			  ## port_overwrite.c:507:5
    3326:    3c 00             	sp = usp			  ## port_overwrite.c:507:5
    3328:    78 f3 ff ff       	[--sp] = {r15-r0}			  ## port_overwrite.c:507:5
    332c:    e9 01             	[--sp] = {psr, rets, reti}			  ## port_overwrite.c:507:5
    332e:    c1 ff ac 31 00 00 	r1 = 12716 <CurrentTCB : 31ac >			  ## port_overwrite.c:507:5
    3334:    01 42             	r1 = [r1 + 0]			  ## port_overwrite.c:507:5
    3336:    01 42             	r1 = [r1 + 0]			  ## port_overwrite.c:507:5
    3338:    28 fb 00 0e       	r0 = sp			  ## port_overwrite.c:507:5
    333c:    08 42             	[r1 + 0] = r0			  ## port_overwrite.c:507:5
    333e:    3d 00             	sp = ssp			  ## port_overwrite.c:507:5
    3340:    d8 17             	call -80 <pvPortSwitch : 32f2 >			  ## port_overwrite.c:507:5
    3342:    88 f3 a9 1d       	call 1063762 <OS_ClrPending : 106e98 >			  ## port_overwrite.c:507:5
    3346:    c0 ff 7c 1e 00 00 	r0 = 7804 <highCurrentTCB : 1e7c >			  ## port_overwrite.c:507:5
    334c:    00 40             	r0 = [r0 + 0]			  ## port_overwrite.c:507:5
    334e:    00 40             	r0 = [r0 + 0]			  ## port_overwrite.c:507:5
    3350:    00 40             	r0 = [r0 + 0]			  ## port_overwrite.c:507:5
    3352:    29 fb 00 0e       	sp = r0			  ## port_overwrite.c:507:5
    3356:    a9 01             	{psr, rets, reti} = [sp++]			  ## port_overwrite.c:507:5
    3358:    70 f3 ff ff       	{r15-r0} = [sp++]			  ## port_overwrite.c:507:5
    335c:    3e 00             	usp = sp			  ## port_overwrite.c:507:5
    335e:    3d 00             	sp = ssp			  ## port_overwrite.c:507:5
    3360:    78 f3 01 00       	[--sp] = {r0}			  ## port_overwrite.c:507:5
    3364:    e0 01             	[--sp] = {psr}			  ## port_overwrite.c:507:5
    3366:    c0 ff 00 e2 1b 00 	r0 = 1827328 <uECC_vli_cmp_unsafe+0xB7204 : 1be200 >			  ## port_overwrite.c:507:5
    336c:    00 f4 08 09       	[r0 + 0] |= 8			  ## port_overwrite.c:507:5
    3370:    a0 01             	{psr} = [sp++]			  ## port_overwrite.c:507:5
    3372:    70 f3 01 00       	{r0} = [sp++]			  ## port_overwrite.c:507:5
    3376:    1c 00             	sti			  ## port_overwrite.c:507:5
    3378:    22 00             	rti			  ## port_overwrite.c:507:5
    337a:    20 00             	rts			  ## port_overwrite.c:555:1


vAppPortStartFirstTask:
    337c:    18 00             	cli			  ## port_asm_mmu.S:12:0
    337e:    c0 ff ac 31 00 00 	r0 = 12716 <CurrentTCB : 31ac >			  ## port_asm_mmu.S:13:0
    3384:    00 40             	r0 = [r0 + 0]			  ## port_asm_mmu.S:14:0
    3386:    00 40             	r0 = [r0 + 0]			  ## port_asm_mmu.S:15:0
    3388:    b0 f3 49 64       	call -2045806 <vFillingTaskStack : 1e0fc1e >			  ## port_asm_mmu.S:16:0
    338c:    c0 ff ac 31 00 00 	r0 = 12716 <CurrentTCB : 31ac >			  ## port_asm_mmu.S:17:0
    3392:    00 40             	r0 = [r0 + 0]			  ## port_asm_mmu.S:18:0
    3394:    00 40             	r0 = [r0 + 0]			  ## port_asm_mmu.S:19:0
    3396:    00 40             	r0 = [r0 + 0]			  ## port_asm_mmu.S:20:0
    3398:    29 fb 00 0e       	sp = r0			  ## port_asm_mmu.S:21:0
    339c:    a9 01             	{psr, rets, reti} = [sp++]			  ## port_asm_mmu.S:22:0
    339e:    70 f3 ff ff       	{r15-r0} = [sp++]			  ## port_asm_mmu.S:23:0
    33a2:    1c 00             	sti			  ## port_asm_mmu.S:24:0
    33a4:    22 00             	rti			  ## port_asm_mmu.S:25:0


begin_of_data:
    33a6:    e0 01             	[--sp] = {psr}			  ## port_asm_mmu.S:39:0
    33a8:    78 f3 03 00       	[--sp] = {r1, r0}			  ## port_asm_mmu.S:40:0
    33ac:    c0 ff 88 08 00 00 	r0 = 2184 <jiffies : 888 >			  ## port_asm_mmu.S:41:0
    33b2:    01 40             	r1 = [r0 + 0]			  ## port_asm_mmu.S:42:0
    33b4:    11 80             	r1 += 1			  ## port_asm_mmu.S:43:0
    33b6:    09 40             	[r0 + 0] = r1			  ## port_asm_mmu.S:44:0
    33b8:    70 f3 03 00       	{r1, r0} = [sp++]			  ## port_asm_mmu.S:45:0
    33bc:    a0 01             	{psr} = [sp++]			  ## port_asm_mmu.S:46:0
    33be:    c8 f3 6d 1d       	goto 1063642 <vTickISR : 106e9c >			  ## port_asm_mmu.S:47:0
    33c2:    00 00             	nop
    33c4:    00 00             	nop
    33c6:    00 00             	nop
    33c8:    00 00             	nop
    33ca:    00 00             	nop
    33cc:    00 00             	nop
    33ce:    00 00             	nop
    33d0:    00 00             	nop
    33d2:    00 00             	nop
    33d4:    00 00             	nop
    33d6:    00 00             	nop
    33d8:    00 00             	nop
    33da:    00 00             	nop
    33dc:    00 00             	nop
    33de:    00 00             	nop


p33_soft_reset:
    33e0:    c0 ff a0 18 1a 00 	r0 = 1710240 <uECC_vli_cmp_unsafe+0x9A8A4 : 1a18a0 >			  ## power_reset.c:147:0
    33e6:    01 60             	r1 = b[r0 + 0] (u)			  ## power_reset.c:148:5
    33e8:    01 fd 30 19       	r1 = r1 | 48			  ## power_reset.c:148:5
    33ec:    09 60             	b[r0 + 0] = r1			  ## power_reset.c:148:5
    33ee:    20 00             	rts			  ## power_reset.c:149:1


sfc_suspend:
    33f0:    08 00             	csync			  ## vm_sfc.c:417:0
    33f2:    c1 ff 00 e4 1b 00 	r1 = 1827840 <uECC_vli_cmp_unsafe+0xB7404 : 1be400 >			  ## vm_sfc.c:419:5
    33f8:    02 42             	r2 = [r1 + 0]			  ## vm_sfc.c:419:5
    33fa:    f2 ef fd cf       	ifs (r2 > -1) goto -6 <sfc_suspend+0x8 : 33f8 >			  ## vm_sfc.c:419:5
    33fe:    08 00             	csync			  ## vm_sfc.c:420:5
    3400:    c1 ff 00 05 1b 00 	r1 = 1770752 <uECC_vli_cmp_unsafe+0xA9504 : 1b0500 >			  ## vm_sfc.c:420:5
    3406:    02 42             	r2 = [r1 + 0]			  ## vm_sfc.c:420:5
    3408:    f2 ef fd cf       	ifs (r2 > -1) goto -6 <sfc_suspend+0x16 : 3406 >			  ## vm_sfc.c:420:5
    340c:    c1 ff 00 02 1f 00 	r1 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >
    3412:    02 42             	r2 = [r1 + 0]			  ## vm_sfc.c:423:20
    3414:    02 e0 fd bf       	ifs (r2 < 0) goto -6 <sfc_suspend+0x22 : 3412 >			  ## vm_sfc.c:423:5
    3418:    c2 ff 00 53 1e 00 	r2 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >
    341e:    04 f4 08 29       	[r2 + 16] |= 8			  ## vm_sfc.c:425:19
    3422:    02 f4 08 29       	[r2 + 8] |= 8			  ## vm_sfc.c:426:19
    3426:    03 42             	r3 = [r1 + 0]			  ## vm_sfc.c:429:17
    3428:    73 b0             	r3 &= 4294967294			  ## vm_sfc.c:429:17
    342a:    0b 42             	[r1 + 0] = r3			  ## vm_sfc.c:429:17
    342c:    00 f4 08 29       	[r2 + 0] |= 8			  ## vm_sfc.c:431:19
    3430:    21 44             	r1 = [r2 + 8]			  ## vm_sfc.c:432:19
    3432:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:432:19
    3434:    29 44             	[r2 + 8] = r1			  ## vm_sfc.c:432:19
    3436:    41 44             	r1 = [r2 + 16]			  ## vm_sfc.c:433:19
    3438:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:433:19
    343a:    49 44             	[r2 + 16] = r1			  ## vm_sfc.c:433:19
    343c:    04 20             	if (r0 == 0) goto 8 <sfc_suspend+0x56 : 3446 >			  ## vm_sfc.c:433:19
    343e:    20 fc 00 c9       	r0 = r2 + -14080			  ## vm_sfc.c:436:22
    3442:    00 f4 01 09       	[r0 + 0] |= 1			  ## vm_sfc.c:436:22
    3446:    20 00             	rts			  ## vm_sfc.c:438:1


enter_spi_code:
    3448:    34 00             	[--sp] = rets			  ## vm_sfc.c:445:0
    344a:    88 f3 a7 1c       	call 1063246 <local_irq_disable : 106d9c >			  ## vm_sfc.c:447:5
    344e:    08 00             	csync			  ## vm_sfc.c:447:5
    3450:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## vm_sfc.c:385:17
    3456:    11 70             	r1 = 1			  ## vm_sfc.c:385:17
    3458:    39 61             	b[r0 + 19] = r1			  ## vm_sfc.c:385:17
    345a:    10 70             	r0 = 1			  ## vm_sfc.c:454:5
    345c:    c9 17             	call -110 <sfc_suspend : 33f0 >			  ## vm_sfc.c:454:5
    345e:    c0 ff 00 02 1f 00 	r0 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >			  ## vm_sfc.c:457:29
    3464:    00 40             	r0 = [r0 + 0]			  ## vm_sfc.c:457:29
    3466:    c0 ff 50 56 1e 00 	r0 = 1988176 <uECC_vli_cmp_unsafe+0xDE654 : 1e5650 >
    346c:    c0 f4 43 09       	[r0 + 0] = 67			  ## vm_sfc.c:478:22
    3470:    c1 f4 47 09       	[r0 + 4] = 71			  ## vm_sfc.c:479:22
    3474:    c2 f4 4b 09       	[r0 + 8] = 75			  ## vm_sfc.c:480:22
    3478:    00 fc f4 00       	r0 = r0 + 244			  ## vm_sfc.c:480:22
    347c:    c0 f4 16 09       	[r0 + 0] = 22			  ## vm_sfc.c:481:26
    3480:    c1 f4 17 09       	[r0 + 4] = 23			  ## vm_sfc.c:482:26
    3484:    30 00             	pc = [sp++]			  ## vm_sfc.c:492:1


spi_writebyte:
    3486:    c1 ff 00 1c 1e 00 	r1 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >			  ## vm_sfc.c:156:0
    348c:    00 f4 08 19       	[r1 + 0] |= 8			  ## vm_sfc.c:160:18
    3490:    02 42             	r2 = [r1 + 0]			  ## vm_sfc.c:161:18
    3492:    72 b6             	r2 &= 4294963199			  ## vm_sfc.c:161:18
    3494:    0a 42             	[r1 + 0] = r2			  ## vm_sfc.c:161:18
    3496:    28 42             	[r1 + 8] = r0			  ## vm_sfc.c:162:18
    3498:    08 00             	csync			  ## vm_sfc.c:114:5
    349a:    00 42             	r0 = [r1 + 0]			  ## vm_sfc.c:115:23
    349c:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:115:12
    349e:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <spi_writebyte+0x14 : 349a >			  ## vm_sfc.c:115:5
    34a2:    00 f4 40 1a       	[r1 + 0] |= 16384			  ## vm_sfc.c:116:18
    34a6:    00 42             	r0 = [r1 + 0]			  ## vm_sfc.c:164:18
    34a8:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:164:18
    34aa:    08 42             	[r1 + 0] = r0			  ## vm_sfc.c:164:18
    34ac:    20 00             	rts			  ## vm_sfc.c:166:1


norflash_send_addr:
    34ae:    34 00             	[--sp] = rets			  ## vm_sfc.c:545:0
    34b0:    03 08             	r3 = r0			  ## vm_sfc.c:545:0
    34b2:    88 fd 80 03       	r0 = uextra(r3, p:16, l:8)			  ## vm_sfc.c:546:5
    34b6:    e7 17             	call -50 <spi_writebyte : 3486 >			  ## vm_sfc.c:546:5
    34b8:    88 fd 40 03       	r0 = uextra(r3, p:8, l:8)			  ## vm_sfc.c:547:5
    34bc:    e4 17             	call -56 <spi_writebyte : 3486 >			  ## vm_sfc.c:547:5
    34be:    c0 04             	r0 = r3.b0 (u)			  ## vm_sfc.c:548:5
    34c0:    88 01             	{rets} = [sp++]			  ## vm_sfc.c:548:5
    34c2:    e1 1f             	goto -62 <spi_writebyte : 3486 >			  ## vm_sfc.c:548:5


spi_readbyte_dma:
    34c4:    c0 ff 00 1c 1e 00 	r0 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >			  ## vm_sfc.c:231:0
    34ca:    c2 f4 ff 09       	[r0 + 8] = 255			  ## vm_sfc.c:236:18
    34ce:    08 00             	csync			  ## vm_sfc.c:114:5
    34d0:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:115:23
    34d2:    71 04             	r1 = r1.l (s)			  ## vm_sfc.c:115:12
    34d4:    f1 ef fc cf       	ifs (r1 > -1) goto -8 <spi_readbyte_dma+0xC : 34d0 >			  ## vm_sfc.c:115:5
    34d8:    00 f4 40 0a       	[r0 + 0] |= 16384			  ## vm_sfc.c:116:18
    34dc:    20 40             	r0 = [r0 + 8]			  ## vm_sfc.c:238:25
    34de:    00 04             	r0 = r0.b0 (u)			  ## vm_sfc.c:241:5
    34e0:    20 00             	rts			  ## vm_sfc.c:241:5


spi_read_dma:
    34e2:    75 01             	[--sp] = {rets, r5, r4}			  ## vm_sfc.c:302:0
    34e4:    c2 ff 00 02 1f 00 	r2 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >			  ## vm_sfc.c:307:29
    34ea:    02 44             	r2 = [r2 + 0]			  ## vm_sfc.c:307:29
    34ec:    c4 ff 00 1c 1e 00 	r4 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >			  ## vm_sfc.c:307:29
    34f2:    00 f4 10 4a       	[r4 + 0] |= 4096			  ## vm_sfc.c:317:18
    34f6:    84 fd 40 52       	r5 = uextra(r2, p:8, l:4)			  ## vm_sfc.c:320:5
    34fa:    12 08             	r2 = r1
    34fc:    03 08             	r3 = r0
    34fe:    95 e0 12 80       	if (r5 > 9) goto 36 <spi_read_dma+0x44 : 3526 >
    3502:    10 70             	r0 = 1
    3504:    f8 fd 50 10       	r1 = r0 << r5
    3508:    05 fb 54 01       	r5 = 340 <DRIVER_RAM_TOTAL+0x62 : 154 >
    350c:    00 fb 00 04       	r0 = 1024 <BTCTLER_LE_RAM_TOTAL+0x22 : 400 >
    3510:    51 f1 06 00       	if ((r1 & r5) != 0) goto 12 <spi_read_dma+0x3E : 3520 >
    3514:    00 fb a8 02       	r0 = 680 <_MASK_MEM_SIZE+0x14 : 2a8 >
    3518:    01 f0 05 00       	if ((r1 & r0) == 0) goto 10 <spi_read_dma+0x44 : 3526 >
    351c:    00 fb 00 08       	r0 = 2048 <report_mmu_tlb_size : 800 >
    3520:    01 48             	r1 = [r4 + 0]
    3522:    50 b2             	r0 |= r1
    3524:    08 48             	[r4 + 0] = r0
    3526:    06 24             	if (r2 == 0) goto 12 <spi_read_dma+0x52 : 3534 >
    3528:    cd 17             	call -102 <spi_readbyte_dma : 34c4 >			  ## vm_sfc.c:345:16
    352a:    f2 8f             	r2 += -1			  ## vm_sfc.c:344:15
    352c:    a1 04             	r1 = r2.l (u)			  ## vm_sfc.c:344:5
    352e:    90 f9 01 30       	b[r3 ++= 1] = r0			  ## vm_sfc.c:345:14
    3532:    fa 33             	if (r1 != 0) goto -12 <spi_read_dma+0x46 : 3528 >
    3534:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:351:18
    3536:    31 fd 0c 0a       	r1 = r0 & 4294964223			  ## vm_sfc.c:351:18
    353a:    00 70             	r0 = 0			  ## vm_sfc.c:353:5
    353c:    09 48             	[r4 + 0] = r1			  ## vm_sfc.c:351:18
    353e:    55 01             	{pc, r5, r4} = [sp++]			  ## vm_sfc.c:353:5


spi_readbyte:
    3540:    c1 ff 00 1c 1e 00 	r1 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >			  ## vm_sfc.c:212:0
    3546:    00 f4 08 19       	[r1 + 0] |= 8			  ## vm_sfc.c:218:18
    354a:    00 f4 10 1a       	[r1 + 0] |= 4096			  ## vm_sfc.c:219:18
    354e:    c2 f4 ff 19       	[r1 + 8] = 255			  ## vm_sfc.c:220:18
    3552:    08 00             	csync			  ## vm_sfc.c:114:5
    3554:    00 42             	r0 = [r1 + 0]			  ## vm_sfc.c:115:23
    3556:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:115:12
    3558:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <spi_readbyte+0x14 : 3554 >			  ## vm_sfc.c:115:5
    355c:    00 f4 40 1a       	[r1 + 0] |= 16384			  ## vm_sfc.c:116:18
    3560:    20 42             	r0 = [r1 + 8]			  ## vm_sfc.c:222:25
    3562:    02 42             	r2 = [r1 + 0]			  ## vm_sfc.c:223:18
    3564:    f2 b1             	r2 &= 4294967287			  ## vm_sfc.c:223:18
    3566:    00 04             	r0 = r0.b0 (u)			  ## vm_sfc.c:226:5
    3568:    0a 42             	[r1 + 0] = r2			  ## vm_sfc.c:223:18
    356a:    20 00             	rts			  ## vm_sfc.c:226:5


spi_write_dma:
    356c:    75 01             	[--sp] = {rets, r5, r4}			  ## vm_sfc.c:246:0
    356e:    c2 ff 00 02 1f 00 	r2 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >			  ## vm_sfc.c:251:29
    3574:    03 44             	r3 = [r2 + 0]			  ## vm_sfc.c:251:29
    3576:    c2 ff 00 1c 1e 00 	r2 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >			  ## vm_sfc.c:251:29
    357c:    04 44             	r4 = [r2 + 0]			  ## vm_sfc.c:261:18
    357e:    74 b6             	r4 &= 4294963199			  ## vm_sfc.c:261:18
    3580:    84 fd 40 33       	r3 = uextra(r3, p:8, l:4)			  ## vm_sfc.c:264:5
    3584:    0c 44             	[r2 + 0] = r4			  ## vm_sfc.c:261:18
    3586:    93 e0 15 80       	if (r3 > 9) goto 42 <spi_write_dma+0x48 : 35b4 >			  ## vm_sfc.c:261:18
    358a:    14 70             	r4 = 1
    358c:    c4 0c             	r4 <<= r3
    358e:    05 fb 54 01       	r5 = 340 <DRIVER_RAM_TOTAL+0x62 : 154 >
    3592:    03 fb 00 04       	r3 = 1024 <BTCTLER_LE_RAM_TOTAL+0x22 : 400 >
    3596:    54 f1 0a 00       	if ((r4 & r5) != 0) goto 20 <spi_write_dma+0x42 : 35ae >
    359a:    03 fb a8 02       	r3 = 680 <_MASK_MEM_SIZE+0x14 : 2a8 >
    359e:    34 f0 09 00       	if ((r4 & r3) == 0) goto 18 <spi_write_dma+0x48 : 35b4 >
    35a2:    03 fb 00 08       	r3 = 2048 <report_mmu_tlb_size : 800 >
    35a6:    03 18             	goto 6 <spi_write_dma+0x42 : 35ae >
    35a8:    f1 8f             	r1 += -1			  ## vm_sfc.c:288:15
    35aa:    03 fb 00 40       	r3 = 16384 <ze_entry_tm+0xAE : 4000 >
    35ae:    04 44             	r4 = [r2 + 0]
    35b0:    53 b8             	r3 |= r4
    35b2:    0b 44             	[r2 + 0] = r3
    35b4:    63 04             	r3 = r1.l (u)			  ## vm_sfc.c:288:5
    35b6:    09 26             	if (r3 == 0) goto 18 <spi_write_dma+0x5E : 35ca >			  ## vm_sfc.c:288:5
    35b8:    83 f9 01 00       	r3 = b[r0 ++= 1] (u)			  ## vm_sfc.c:174:20
    35bc:    2b 44             	[r2 + 8] = r3			  ## vm_sfc.c:174:18
    35be:    08 00             	csync			  ## vm_sfc.c:114:5
    35c0:    03 44             	r3 = [r2 + 0]			  ## vm_sfc.c:115:23
    35c2:    f3 04             	r3 = r3.l (s)			  ## vm_sfc.c:115:12
    35c4:    f3 ef fc cf       	ifs (r3 > -1) goto -8 <spi_write_dma+0x54 : 35c0 >			  ## vm_sfc.c:115:5
    35c8:    ef 1f             	goto -34 <spi_write_dma+0x3C : 35a8 >			  ## vm_sfc.c:115:5
    35ca:    00 44             	r0 = [r2 + 0]			  ## vm_sfc.c:294:18
    35cc:    31 fd 0c 0a       	r1 = r0 & 4294964223			  ## vm_sfc.c:294:18
    35d0:    00 70             	r0 = 0			  ## vm_sfc.c:297:5
    35d2:    09 44             	[r2 + 0] = r1			  ## vm_sfc.c:294:18
    35d4:    55 01             	{pc, r5, r4} = [sp++]			  ## vm_sfc.c:297:5


__norflash_read:
    35d6:    79 01             	[--sp] = {rets, r9-r4}			  ## vm_sfc.c:603:0
    35d8:    de 0b             	sp += -68			  ## vm_sfc.c:603:0
    35da:    c4 ff 00 02 1f 00 	r4 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >			  ## vm_sfc.c:608:29
    35e0:    07 48             	r7 = [r4 + 0]			  ## vm_sfc.c:608:29
    35e2:    a4 fd 40 57       	r5 = sextra(r7, p:8, l:4)			  ## vm_sfc.c:617:5
    35e6:    24 08             	r4 = r2			  ## vm_sfc.c:617:5
    35e8:    16 08             	r6 = r1
    35ea:    09 08             	r9 = r0
    35ec:    05 e0 25 b0       	ifs (r5 < 0) goto 74 <.GJTIE110_0_0_+0x2C : 363a >
    35f0:    84 fd 40 07       	r0 = uextra(r7, p:8, l:4)
    35f4:    41 c0             	r1 = r0 << 1
    35f6:    c7 ff 00 53 1e 00 	r7 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >
    35fc:    b1 00             	tbh [r1]


.GJTIL110_0_0_:
    35fe:    08 00     < 8 : 0x8 >
    3600:    20 00     < 32 : 0x20 >
    3602:    37 00     < 55 : 0x37 >
    3604:    50 00     < 80 : 0x50 >
    3606:    69 00     < 105 : 0x69 >
    3608:    8b 00     < 139 : 0x8B >
    360a:    b1 00     < 177 : 0xB1 >
    360c:    d4 00     < 212 : 0xD4 >
    360e:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:104:19
    3610:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3612:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:104:19
    3614:    00 4e             	r0 = [r7 + 0]			  ## vm_sfc.c:104:19
    3616:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    3618:    08 4e             	[r7 + 0] = r0			  ## vm_sfc.c:105:53
    361a:    a5 70             	r5 = 10			  ## vm_sfc.c:105:53
    361c:    1d 02             	[sp+4] = r5
    361e:    30 70             	r0 = 3			  ## vm_sfc.c:620:9
    3620:    32 17             	call -412 <spi_writebyte : 3486 >			  ## vm_sfc.c:620:9
    3622:    60 08             	r0 = r6			  ## vm_sfc.c:621:9
    3624:    44 17             	call -376 <norflash_send_addr : 34ae >			  ## vm_sfc.c:621:9
    3626:    90 08             	r0 = r9			  ## vm_sfc.c:622:9
    3628:    41 08             	r1 = r4			  ## vm_sfc.c:622:9
    362a:    5b 17             	call -330 <spi_read_dma : 34e2 >			  ## vm_sfc.c:622:9
    362c:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:104:19
    362e:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3630:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:104:19
    3632:    00 f4 08 79       	[r7 + 0] |= 8			  ## vm_sfc.c:104:19
    3636:    3d 02             	[sp+12] = r5
    3638:    de 18             	goto 444 <.GJTIE110_0_0_+0x1E8 : 37f6 >
    363a:    f4 07             	r4 = -1
    363c:    dc 18             	goto 440 <.GJTIE110_0_0_+0x1E8 : 37f6 >
    363e:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:104:19
    3640:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3642:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:104:19
    3644:    00 4e             	r0 = [r7 + 0]			  ## vm_sfc.c:104:19
    3646:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    3648:    08 4e             	[r7 + 0] = r0			  ## vm_sfc.c:105:53
    364a:    a5 70             	r5 = 10			  ## vm_sfc.c:105:53
    364c:    4d 02             	[sp+16] = r5
    364e:    b0 70             	r0 = 11			  ## vm_sfc.c:628:9
    3650:    1a 17             	call -460 <spi_writebyte : 3486 >			  ## vm_sfc.c:628:9
    3652:    60 08             	r0 = r6			  ## vm_sfc.c:629:9
    3654:    2c 17             	call -424 <norflash_send_addr : 34ae >			  ## vm_sfc.c:629:9
    3656:    74 17             	call -280 <spi_readbyte : 3540 >			  ## vm_sfc.c:630:9
    3658:    90 08             	r0 = r9			  ## vm_sfc.c:631:9
    365a:    41 08             	r1 = r4			  ## vm_sfc.c:631:9
    365c:    42 17             	call -380 <spi_read_dma : 34e2 >			  ## vm_sfc.c:631:9
    365e:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:104:19
    3660:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3662:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:104:19
    3664:    00 f4 08 79       	[r7 + 0] |= 8			  ## vm_sfc.c:104:19
    3668:    5d 02             	[sp+20] = r5
    366a:    c5 18             	goto 394 <.GJTIE110_0_0_+0x1E8 : 37f6 >
    366c:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:104:19
    366e:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3670:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:104:19
    3672:    00 4e             	r0 = [r7 + 0]			  ## vm_sfc.c:104:19
    3674:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    3676:    08 4e             	[r7 + 0] = r0			  ## vm_sfc.c:105:53
    3678:    a5 70             	r5 = 10			  ## vm_sfc.c:105:53
    367a:    cd 02             	[sp+48] = r5
    367c:    b0 73             	r0 = 59			  ## vm_sfc.c:664:9
    367e:    03 17             	call -506 <spi_writebyte : 3486 >			  ## vm_sfc.c:664:9
    3680:    60 08             	r0 = r6			  ## vm_sfc.c:665:9
    3682:    15 17             	call -470 <norflash_send_addr : 34ae >			  ## vm_sfc.c:665:9
    3684:    00 a0             	r0 = sp + 0
    3686:    21 70             	r1 = 2			  ## vm_sfc.c:666:9
    3688:    2c 17             	call -424 <spi_read_dma : 34e2 >			  ## vm_sfc.c:666:9
    368a:    90 08             	r0 = r9			  ## vm_sfc.c:667:9
    368c:    41 08             	r1 = r4			  ## vm_sfc.c:667:9
    368e:    29 17             	call -430 <spi_read_dma : 34e2 >			  ## vm_sfc.c:667:9
    3690:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:104:19
    3692:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3694:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:104:19
    3696:    00 f4 08 79       	[r7 + 0] |= 8			  ## vm_sfc.c:104:19
    369a:    fd 02             	[sp+60] = r5
    369c:    ac 18             	goto 344 <.GJTIE110_0_0_+0x1E8 : 37f6 >
    369e:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:104:19
    36a0:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    36a2:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:104:19
    36a4:    00 4e             	r0 = [r7 + 0]			  ## vm_sfc.c:104:19
    36a6:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    36a8:    08 4e             	[r7 + 0] = r0			  ## vm_sfc.c:105:53
    36aa:    a5 70             	r5 = 10			  ## vm_sfc.c:105:53
    36ac:    0d 03             	[sp+64] = r5
    36ae:    b0 76             	r0 = 107			  ## vm_sfc.c:674:9
    36b0:    ea 16             	call -556 <spi_writebyte : 3486 >			  ## vm_sfc.c:674:9
    36b2:    60 08             	r0 = r6			  ## vm_sfc.c:675:9
    36b4:    fc 16             	call -520 <norflash_send_addr : 34ae >			  ## vm_sfc.c:675:9
    36b6:    00 a0             	r0 = sp + 0
    36b8:    41 70             	r1 = 4			  ## vm_sfc.c:676:9
    36ba:    13 17             	call -474 <spi_read_dma : 34e2 >			  ## vm_sfc.c:676:9
    36bc:    90 08             	r0 = r9			  ## vm_sfc.c:677:9
    36be:    41 08             	r1 = r4			  ## vm_sfc.c:677:9
    36c0:    10 17             	call -480 <spi_read_dma : 34e2 >			  ## vm_sfc.c:677:9
    36c2:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:104:19
    36c4:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    36c6:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:104:19
    36c8:    00 f4 08 79       	[r7 + 0] |= 8			  ## vm_sfc.c:104:19
    36cc:    ed 02             	[sp+56] = r5
    36ce:    93 18             	goto 294 <.GJTIE110_0_0_+0x1E8 : 37f6 >
    36d0:    30 d4             	r0 = r6 >> 16			  ## vm_sfc.c:636:38
    36d2:    d0 f5 00 00       	b[sp] = r0			  ## vm_sfc.c:636:26
    36d6:    30 d2             	r0 = r6 >> 8			  ## vm_sfc.c:637:38
    36d8:    d0 f5 01 00       	b[sp+1] = r0			  ## vm_sfc.c:637:26
    36dc:    d6 f5 02 00       	b[sp+2] = r6			  ## vm_sfc.c:638:26
    36e0:    00 70             	r0 = 0			  ## vm_sfc.c:639:26
    36e2:    d0 f5 03 00       	b[sp+3] = r0			  ## vm_sfc.c:639:26
    36e6:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:104:19
    36e8:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    36ea:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:104:19
    36ec:    00 4e             	r0 = [r7 + 0]			  ## vm_sfc.c:104:19
    36ee:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    36f0:    08 4e             	[r7 + 0] = r0			  ## vm_sfc.c:105:53
    36f2:    a5 70             	r5 = 10			  ## vm_sfc.c:105:53
    36f4:    6d 02             	[sp+24] = r5
    36f6:    b0 7b             	r0 = 187			  ## vm_sfc.c:641:9
    36f8:    c6 16             	call -628 <spi_writebyte : 3486 >			  ## vm_sfc.c:641:9
    36fa:    00 a0             	r0 = sp + 0			  ## vm_sfc.c:641:9
    36fc:    41 70             	r1 = 4			  ## vm_sfc.c:642:9
    36fe:    36 17             	call -404 <spi_write_dma : 356c >			  ## vm_sfc.c:642:9
    3700:    90 08             	r0 = r9			  ## vm_sfc.c:643:9
    3702:    41 08             	r1 = r4			  ## vm_sfc.c:643:9
    3704:    ee 16             	call -548 <spi_read_dma : 34e2 >			  ## vm_sfc.c:643:9
    3706:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:104:19
    3708:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    370a:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:104:19
    370c:    00 f4 08 79       	[r7 + 0] |= 8			  ## vm_sfc.c:104:19
    3710:    9d 02             	[sp+36] = r5
    3712:    71 18             	goto 226 <.GJTIE110_0_0_+0x1E8 : 37f6 >
    3714:    30 d4             	r0 = r6 >> 16			  ## vm_sfc.c:682:38
    3716:    d0 f5 00 00       	b[sp] = r0			  ## vm_sfc.c:682:26
    371a:    30 d2             	r0 = r6 >> 8			  ## vm_sfc.c:683:38
    371c:    d0 f5 01 00       	b[sp+1] = r0			  ## vm_sfc.c:683:26
    3720:    d6 f5 02 00       	b[sp+2] = r6			  ## vm_sfc.c:684:26
    3724:    00 70             	r0 = 0			  ## vm_sfc.c:685:26
    3726:    d0 f5 03 00       	b[sp+3] = r0			  ## vm_sfc.c:685:26
    372a:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:104:19
    372c:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    372e:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:104:19
    3730:    00 4e             	r0 = [r7 + 0]			  ## vm_sfc.c:104:19
    3732:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    3734:    08 4e             	[r7 + 0] = r0			  ## vm_sfc.c:105:53
    3736:    a5 70             	r5 = 10			  ## vm_sfc.c:105:53
    3738:    dd 02             	[sp+52] = r5
    373a:    b0 7e             	r0 = 235			  ## vm_sfc.c:688:9
    373c:    a4 16             	call -696 <spi_writebyte : 3486 >			  ## vm_sfc.c:688:9
    373e:    06 a0             	r6 = sp + 0			  ## vm_sfc.c:688:9
    3740:    41 70             	r1 = 4			  ## vm_sfc.c:689:9
    3742:    60 08             	r0 = r6			  ## vm_sfc.c:689:9
    3744:    13 17             	call -474 <spi_write_dma : 356c >			  ## vm_sfc.c:689:9
    3746:    21 70             	r1 = 2			  ## vm_sfc.c:690:9
    3748:    60 08             	r0 = r6			  ## vm_sfc.c:690:9
    374a:    cb 16             	call -618 <spi_read_dma : 34e2 >			  ## vm_sfc.c:690:9
    374c:    90 08             	r0 = r9			  ## vm_sfc.c:691:9
    374e:    41 08             	r1 = r4			  ## vm_sfc.c:691:9
    3750:    c8 16             	call -624 <spi_read_dma : 34e2 >			  ## vm_sfc.c:691:9
    3752:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:104:19
    3754:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3756:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:104:19
    3758:    00 f4 08 79       	[r7 + 0] |= 8			  ## vm_sfc.c:104:19
    375c:    8d 02             	[sp+32] = r5
    375e:    4b 18             	goto 150 <.GJTIE110_0_0_+0x1E8 : 37f6 >
    3760:    30 d4             	r0 = r6 >> 16			  ## vm_sfc.c:648:38
    3762:    d0 f5 00 00       	b[sp] = r0			  ## vm_sfc.c:648:26
    3766:    30 d2             	r0 = r6 >> 8			  ## vm_sfc.c:649:38
    3768:    d0 f5 01 00       	b[sp+1] = r0			  ## vm_sfc.c:649:26
    376c:    d6 f5 02 00       	b[sp+2] = r6			  ## vm_sfc.c:650:26
    3770:    00 7a             	r0 = 160			  ## vm_sfc.c:651:26
    3772:    d0 f5 03 00       	b[sp+3] = r0			  ## vm_sfc.c:651:26
    3776:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:104:19
    3778:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    377a:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:104:19
    377c:    00 4e             	r0 = [r7 + 0]			  ## vm_sfc.c:104:19
    377e:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    3780:    08 4e             	[r7 + 0] = r0			  ## vm_sfc.c:105:53
    3782:    a6 70             	r6 = 10			  ## vm_sfc.c:105:53
    3784:    ae 02             	[sp+40] = r6
    3786:    02 26             	if (r3 == 0) goto 4 <.GJTIE110_0_0_+0x17E : 378c >
    3788:    b0 7b             	r0 = 187			  ## vm_sfc.c:654:13
    378a:    7d 16             	call -774 <spi_writebyte : 3486 >			  ## vm_sfc.c:654:13
    378c:    00 a0             	r0 = sp + 0
    378e:    41 70             	r1 = 4			  ## vm_sfc.c:656:9
    3790:    ed 16             	call -550 <spi_write_dma : 356c >			  ## vm_sfc.c:656:9
    3792:    90 08             	r0 = r9			  ## vm_sfc.c:657:9
    3794:    41 08             	r1 = r4			  ## vm_sfc.c:657:9
    3796:    a5 16             	call -694 <spi_read_dma : 34e2 >			  ## vm_sfc.c:657:9
    3798:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:104:19
    379a:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    379c:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:104:19
    379e:    00 f4 08 79       	[r7 + 0] |= 8			  ## vm_sfc.c:104:19
    37a2:    be 02             	[sp+44] = r6
    37a4:    28 18             	goto 80 <.GJTIE110_0_0_+0x1E8 : 37f6 >
    37a6:    30 d4             	r0 = r6 >> 16			  ## vm_sfc.c:696:38
    37a8:    d0 f5 00 00       	b[sp] = r0			  ## vm_sfc.c:696:26
    37ac:    30 d2             	r0 = r6 >> 8			  ## vm_sfc.c:697:38
    37ae:    d0 f5 01 00       	b[sp+1] = r0			  ## vm_sfc.c:697:26
    37b2:    d6 f5 02 00       	b[sp+2] = r6			  ## vm_sfc.c:698:26
    37b6:    00 7a             	r0 = 160			  ## vm_sfc.c:699:26
    37b8:    d0 f5 03 00       	b[sp+3] = r0			  ## vm_sfc.c:699:26
    37bc:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:104:19
    37be:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    37c0:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:104:19
    37c2:    00 4e             	r0 = [r7 + 0]			  ## vm_sfc.c:104:19
    37c4:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    37c6:    08 4e             	[r7 + 0] = r0			  ## vm_sfc.c:105:53
    37c8:    a8 70             	r8 = 10			  ## vm_sfc.c:105:53
    37ca:    18 f5 1c 00       	[sp+28] = r8
    37ce:    02 26             	if (r3 == 0) goto 4 <.GJTIE110_0_0_+0x1C6 : 37d4 >
    37d0:    b0 7e             	r0 = 235			  ## vm_sfc.c:702:13
    37d2:    59 16             	call -846 <spi_writebyte : 3486 >			  ## vm_sfc.c:702:13
    37d4:    06 a0             	r6 = sp + 0
    37d6:    41 70             	r1 = 4			  ## vm_sfc.c:704:9
    37d8:    60 08             	r0 = r6			  ## vm_sfc.c:704:9
    37da:    c8 16             	call -624 <spi_write_dma : 356c >			  ## vm_sfc.c:704:9
    37dc:    21 70             	r1 = 2			  ## vm_sfc.c:705:9
    37de:    60 08             	r0 = r6			  ## vm_sfc.c:705:9
    37e0:    80 16             	call -768 <spi_read_dma : 34e2 >			  ## vm_sfc.c:705:9
    37e2:    90 08             	r0 = r9			  ## vm_sfc.c:706:9
    37e4:    41 08             	r1 = r4			  ## vm_sfc.c:706:9
    37e6:    7d 16             	call -774 <spi_read_dma : 34e2 >			  ## vm_sfc.c:706:9
    37e8:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:104:19
    37ea:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    37ec:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:104:19
    37ee:    00 f4 08 79       	[r7 + 0] |= 8			  ## vm_sfc.c:104:19
    37f2:    18 f5 08 00       	[sp+8] = r8
    37f6:    40 08             	r0 = r4			  ## vm_sfc.c:714:1
    37f8:    22 0a             	sp += 68			  ## vm_sfc.c:714:1
    37fa:    59 01             	{pc, r9-r4} = [sp++]			  ## vm_sfc.c:714:1


_norflash_read:
    37fc:    77 01             	[--sp] = {rets, r7-r4}			  ## vm_sfc.c:879:0
    37fe:    24 08             	r4 = r2			  ## vm_sfc.c:879:0
    3800:    15 08             	r5 = r1			  ## vm_sfc.c:879:0
    3802:    06 08             	r6 = r0			  ## vm_sfc.c:879:0
    3804:    21 16             	call -958 <enter_spi_code : 3448 >			  ## vm_sfc.c:881:5
    3806:    22 05             	r2 = r4.l (u)			  ## vm_sfc.c:883:5
    3808:    03 70             	r3 = 0			  ## vm_sfc.c:883:5
    380a:    07 70             	r7 = 0			  ## vm_sfc.c:883:5
    380c:    60 08             	r0 = r6			  ## vm_sfc.c:883:5
    380e:    51 08             	r1 = r5			  ## vm_sfc.c:883:5
    3810:    e2 16             	call -572 <__norflash_read : 35d6 >			  ## vm_sfc.c:883:5
    3812:    10 70             	r0 = 1			  ## vm_sfc.c:500:5
    3814:    88 f3 88 1b       	call 1062672 <sfc_resume : 106f28 >			  ## vm_sfc.c:500:5
    3818:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## vm_sfc.c:385:17
    381e:    3f 61             	b[r0 + 19] = r7			  ## vm_sfc.c:385:17
    3820:    c0 ff 00 02 1f 00 	r0 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >			  ## vm_sfc.c:505:29
    3826:    00 40             	r0 = [r0 + 0]			  ## vm_sfc.c:505:29
    3828:    c0 ff 50 56 1e 00 	r0 = 1988176 <uECC_vli_cmp_unsafe+0xDE654 : 1e5650 >
    382e:    0f 40             	[r0 + 0] = r7			  ## vm_sfc.c:517:22
    3830:    1f 40             	[r0 + 4] = r7			  ## vm_sfc.c:518:22
    3832:    2f 40             	[r0 + 8] = r7			  ## vm_sfc.c:519:22
    3834:    00 fc f4 00       	r0 = r0 + 244			  ## vm_sfc.c:519:22
    3838:    0f 40             	[r0 + 0] = r7			  ## vm_sfc.c:520:26
    383a:    1f 40             	[r0 + 4] = r7			  ## vm_sfc.c:521:26
    383c:    88 f3 ac 1a       	call 1062232 <local_irq_enable : 106d98 >			  ## vm_sfc.c:530:5
    3840:    40 08             	r0 = r4			  ## vm_sfc.c:886:5
    3842:    57 01             	{pc, r7-r4} = [sp++]			  ## vm_sfc.c:886:5


flash_addr2cpu_addr:
    3844:    c1 ff a0 22 00 00 	r1 = 8864 <_sdfile_handl : 22a0 >			  ## vm_sfc.c:361:0
    384a:    02 f6 00 11       	r2 = [r1 + 256]			  ## vm_sfc.c:363:30
    384e:    01 f6 04 11       	r1 = [r1 + 260]			  ## vm_sfc.c:365:27
    3852:    a0 b0             	r0 = r0 - r2			  ## vm_sfc.c:363:12
    3854:    10 09             	r0 += r1			  ## vm_sfc.c:365:36
    3856:    20 00             	rts			  ## vm_sfc.c:365:5


exit_continue_mode:
    3858:    74 01             	[--sp] = {rets, r4}			  ## vm_sfc.c:757:0
    385a:    f8 0b             	sp += -16			  ## vm_sfc.c:757:0
    385c:    c0 ff 00 02 1f 00 	r0 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >			  ## vm_sfc.c:758:29
    3862:    00 40             	r0 = [r0 + 0]			  ## vm_sfc.c:758:29
    3864:    84 fd 40 10       	r1 = uextra(r0, p:8, l:4)			  ## vm_sfc.c:761:9
    3868:    c3 ff 00 53 1e 00 	r3 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:761:9
    386e:    61 e0 14 00       	if (r1 == 6) goto 40 <exit_continue_mode+0x42 : 389a >			  ## vm_sfc.c:761:9
    3872:    00 70             	r0 = 0
    3874:    71 e0 24 10       	if (r1 != 7) goto 72 <exit_continue_mode+0x68 : 38c0 >
    3878:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:104:19
    387a:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    387c:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:104:19
    387e:    00 46             	r0 = [r3 + 0]			  ## vm_sfc.c:104:19
    3880:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    3882:    08 46             	[r3 + 0] = r0			  ## vm_sfc.c:105:53
    3884:    a4 70             	r4 = 10			  ## vm_sfc.c:105:53
    3886:    0c 02             	[sp] = r4
    3888:    f0 7f             	r0 = 255			  ## vm_sfc.c:766:9
    388a:    fd 15             	call -1030 <spi_writebyte : 3486 >			  ## vm_sfc.c:766:9
    388c:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:104:19
    388e:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3890:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:104:19
    3892:    00 f4 08 39       	[r3 + 0] |= 8			  ## vm_sfc.c:104:19
    3896:    2c 02             	[sp+8] = r4
    3898:    12 18             	goto 36 <exit_continue_mode+0x66 : 38be >
    389a:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:104:19
    389c:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    389e:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:104:19
    38a0:    00 46             	r0 = [r3 + 0]			  ## vm_sfc.c:104:19
    38a2:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    38a4:    08 46             	[r3 + 0] = r0			  ## vm_sfc.c:105:53
    38a6:    a4 70             	r4 = 10			  ## vm_sfc.c:105:53
    38a8:    3c 02             	[sp+12] = r4
    38aa:    f0 7f             	r0 = 255			  ## vm_sfc.c:775:9
    38ac:    ec 15             	call -1064 <spi_writebyte : 3486 >			  ## vm_sfc.c:775:9
    38ae:    f0 7f             	r0 = 255			  ## vm_sfc.c:776:9
    38b0:    ea 15             	call -1068 <spi_writebyte : 3486 >			  ## vm_sfc.c:776:9
    38b2:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:104:19
    38b4:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    38b6:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:104:19
    38b8:    00 f4 08 39       	[r3 + 0] |= 8			  ## vm_sfc.c:104:19
    38bc:    1c 02             	[sp+4] = r4
    38be:    10 70             	r0 = 1
    38c0:    08 0a             	sp += 16
    38c2:    54 01             	{pc, r4} = [sp++]			  ## vm_sfc.c:781:5


read_flash_id:
    38c4:    77 01             	[--sp] = {rets, r7-r4}			  ## vm_sfc.c:1120:0
    38c6:    f6 0b             	sp += -20			  ## vm_sfc.c:1120:0
    38c8:    bf 15             	call -1154 <enter_spi_code : 3448 >			  ## vm_sfc.c:1121:5
    38ca:    c6 17             	call -116 <exit_continue_mode : 3858 >			  ## vm_sfc.c:1122:21
    38cc:    c5 ff 00 53 1e 00 	r5 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:1122:21
    38d2:    21 4a             	r1 = [r5 + 8]			  ## vm_sfc.c:104:19
    38d4:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:104:19
    38d6:    29 4a             	[r5 + 8] = r1			  ## vm_sfc.c:104:19
    38d8:    01 4a             	r1 = [r5 + 0]			  ## vm_sfc.c:104:19
    38da:    03 08             	r3 = r0			  ## vm_sfc.c:1122:21
    38dc:    30 fd 08 19       	r0 = r1 & 4294967287			  ## vm_sfc.c:105:53
    38e0:    08 4a             	[r5 + 0] = r0			  ## vm_sfc.c:105:53
    38e2:    a0 70             	r0 = 10			  ## vm_sfc.c:105:53
    38e4:    08 02             	[sp] = r0
    38e6:    f0 79             	r0 = 159			  ## vm_sfc.c:1126:5
    38e8:    ce 15             	call -1124 <spi_writebyte : 3486 >			  ## vm_sfc.c:1126:5
    38ea:    c4 ff a0 22 00 00 	r4 = 8864 <_sdfile_handl : 22a0 >			  ## vm_sfc.c:1126:5
    38f0:    06 70             	r6 = 0			  ## vm_sfc.c:1126:5
    38f2:    16 f6 ec 40       	[r4 + 236] = r6			  ## vm_sfc.c:1127:25
    38f6:    07 bd             	r7 = r6 + r4			  ## vm_sfc.c:1129:34
    38f8:    23 16             	call -954 <spi_readbyte : 3540 >			  ## vm_sfc.c:1129:36
    38fa:    10 f9 d0 70       	b[r7 + 208] = r0			  ## vm_sfc.c:1129:34
    38fe:    01 f6 ec 40       	r1 = [r4 + 236]			  ## vm_sfc.c:1130:29
    3902:    50 b2             	r0 |= r1			  ## vm_sfc.c:1130:29
    3904:    00 c2             	r0 = r0 << 8			  ## vm_sfc.c:1131:29
    3906:    16 80             	r6 += 1			  ## vm_sfc.c:1128:25
    3908:    10 f6 ec 40       	[r4 + 236] = r0			  ## vm_sfc.c:1131:29
    390c:    36 e0 f3 1f       	if (r6 != 3) goto -26 <read_flash_id+0x32 : 38f6 >			  ## vm_sfc.c:1128:5
    3910:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    3912:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3914:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    3916:    00 f4 08 59       	[r5 + 0] |= 8			  ## vm_sfc.c:104:19
    391a:    a0 70             	r0 = 10			  ## vm_sfc.c:104:19
    391c:    18 02             	[sp+4] = r0
    391e:    21 4a             	r1 = [r5 + 8]			  ## vm_sfc.c:104:19
    3920:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:104:19
    3922:    29 4a             	[r5 + 8] = r1			  ## vm_sfc.c:104:19
    3924:    01 4a             	r1 = [r5 + 0]			  ## vm_sfc.c:104:19
    3926:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:105:53
    3928:    09 4a             	[r5 + 0] = r1			  ## vm_sfc.c:105:53
    392a:    28 02             	[sp+8] = r0
    392c:    b0 74             	r0 = 75			  ## vm_sfc.c:1139:5
    392e:    ab 15             	call -1194 <spi_writebyte : 3486 >			  ## vm_sfc.c:1139:5
    3930:    00 70             	r0 = 0			  ## vm_sfc.c:1140:5
    3932:    06 70             	r6 = 0			  ## vm_sfc.c:1140:5
    3934:    a8 15             	call -1200 <spi_writebyte : 3486 >			  ## vm_sfc.c:1140:5
    3936:    00 70             	r0 = 0			  ## vm_sfc.c:1141:5
    3938:    a6 15             	call -1204 <spi_writebyte : 3486 >			  ## vm_sfc.c:1141:5
    393a:    00 70             	r0 = 0			  ## vm_sfc.c:1142:5
    393c:    a4 15             	call -1208 <spi_writebyte : 3486 >			  ## vm_sfc.c:1142:5
    393e:    00 70             	r0 = 0			  ## vm_sfc.c:1143:5
    3940:    a2 15             	call -1212 <spi_writebyte : 3486 >			  ## vm_sfc.c:1143:5
    3942:    07 bd             	r7 = r6 + r4			  ## vm_sfc.c:1145:34
    3944:    fd 15             	call -1030 <spi_readbyte : 3540 >			  ## vm_sfc.c:1145:36
    3946:    16 80             	r6 += 1			  ## vm_sfc.c:1144:19
    3948:    10 f9 d3 70       	b[r7 + 211] = r0			  ## vm_sfc.c:1145:34
    394c:    06 e1 f9 1f       	if (r6 != 16) goto -14 <read_flash_id+0x7E : 3942 >			  ## vm_sfc.c:1144:5
    3950:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    3952:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3954:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    3956:    00 f4 08 59       	[r5 + 0] |= 8			  ## vm_sfc.c:104:19
    395a:    a0 70             	r0 = 10			  ## vm_sfc.c:104:19
    395c:    48 02             	[sp+16] = r0
    395e:    05 26             	if (r3 == 0) goto 10 <read_flash_id+0xA6 : 396a >
    3960:    c0 a0             	r0 = sp + 12
    3962:    01 70             	r1 = 0			  ## vm_sfc.c:873:5
    3964:    12 70             	r2 = 1			  ## vm_sfc.c:873:5
    3966:    13 70             	r3 = 1			  ## vm_sfc.c:873:5
    3968:    36 16             	call -916 <__norflash_read : 35d6 >			  ## vm_sfc.c:873:5
    396a:    00 f6 ec 40       	r0 = [r4 + 236]			  ## vm_sfc.c:1152:25
    396e:    00 d2             	r0 = r0 >> 8			  ## vm_sfc.c:1152:25
    3970:    10 f6 ec 40       	[r4 + 236] = r0			  ## vm_sfc.c:1152:25
    3974:    10 70             	r0 = 1			  ## vm_sfc.c:500:5
    3976:    88 f3 d7 1a       	call 1062318 <sfc_resume : 106f28 >			  ## vm_sfc.c:500:5
    397a:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## vm_sfc.c:385:17
    3980:    01 70             	r1 = 0			  ## vm_sfc.c:385:17
    3982:    39 61             	b[r0 + 19] = r1			  ## vm_sfc.c:385:17
    3984:    40 fb af 5a       	r0 = r5 + 44800			  ## vm_sfc.c:505:29
    3988:    00 40             	r0 = [r0 + 0]			  ## vm_sfc.c:505:29
    398a:    50 fc 50 03       	r0 = r5 + 848
    398e:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:517:22
    3990:    19 40             	[r0 + 4] = r1			  ## vm_sfc.c:518:22
    3992:    29 40             	[r0 + 8] = r1			  ## vm_sfc.c:519:22
    3994:    00 fc f4 00       	r0 = r0 + 244			  ## vm_sfc.c:519:22
    3998:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:520:26
    399a:    19 40             	[r0 + 4] = r1			  ## vm_sfc.c:521:26
    399c:    88 f3 fc 19       	call 1061880 <local_irq_enable : 106d98 >			  ## vm_sfc.c:530:5
    39a0:    0a 0a             	sp += 20			  ## vm_sfc.c:530:5
    39a2:    57 01             	{pc, r7-r4} = [sp++]			  ## vm_sfc.c:1154:1


norflash_write_enable:
    39a4:    74 01             	[--sp] = {rets, r4}			  ## vm_sfc.c:535:0
    39a6:    fc 0b             	sp += -8			  ## vm_sfc.c:535:0
    39a8:    c3 ff 00 53 1e 00 	r3 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:535:0
    39ae:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:104:19
    39b0:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    39b2:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:104:19
    39b4:    00 46             	r0 = [r3 + 0]			  ## vm_sfc.c:104:19
    39b6:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    39b8:    08 46             	[r3 + 0] = r0			  ## vm_sfc.c:105:53
    39ba:    a4 70             	r4 = 10			  ## vm_sfc.c:105:53
    39bc:    0c 02             	[sp] = r4
    39be:    60 70             	r0 = 6			  ## vm_sfc.c:538:5
    39c0:    62 15             	call -1340 <spi_writebyte : 3486 >			  ## vm_sfc.c:538:5
    39c2:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:104:19
    39c4:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    39c6:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:104:19
    39c8:    00 f4 08 39       	[r3 + 0] |= 8			  ## vm_sfc.c:104:19
    39cc:    1c 02             	[sp+4] = r4
    39ce:    04 0a             	sp += 8
    39d0:    54 01             	{pc, r4} = [sp++]			  ## vm_sfc.c:541:1


norflash_wait_ok:
    39d2:    75 01             	[--sp] = {rets, r5, r4}			  ## vm_sfc.c:579:0
    39d4:    fc 0b             	sp += -8			  ## vm_sfc.c:579:0
    39d6:    c3 ff 20 a1 07 00 	r3 = 500000 <text_size+0x59270 : 7a120 >			  ## vm_sfc.c:579:0
    39dc:    c4 ff 00 53 1e 00 	r4 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:579:0
    39e2:    a5 70             	r5 = 10			  ## vm_sfc.c:579:0
    39e4:    20 48             	r0 = [r4 + 8]			  ## vm_sfc.c:104:19
    39e6:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    39e8:    28 48             	[r4 + 8] = r0			  ## vm_sfc.c:104:19
    39ea:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:104:19
    39ec:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    39ee:    08 48             	[r4 + 0] = r0			  ## vm_sfc.c:105:53
    39f0:    0d 02             	[sp] = r5
    39f2:    50 70             	r0 = 5			  ## vm_sfc.c:585:9
    39f4:    48 15             	call -1392 <spi_writebyte : 3486 >			  ## vm_sfc.c:585:9
    39f6:    a4 15             	call -1208 <spi_readbyte : 3540 >			  ## vm_sfc.c:586:19
    39f8:    21 48             	r1 = [r4 + 8]			  ## vm_sfc.c:104:19
    39fa:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:104:19
    39fc:    29 48             	[r4 + 8] = r1			  ## vm_sfc.c:104:19
    39fe:    00 f4 08 49       	[r4 + 0] |= 8			  ## vm_sfc.c:104:19
    3a02:    20 fd 01 09       	r0 = r0 & 1			  ## vm_sfc.c:589:13
    3a06:    23 b6             	r3 = r3 - r0			  ## vm_sfc.c:589:13
    3a08:    1d 02             	[sp+4] = r5
    3a0a:    01 26             	if (r3 == 0) goto 2 <norflash_wait_ok+0x3C : 3a0e >
    3a0c:    eb 31             	if (r0 != 0) goto -42 <norflash_wait_ok+0x12 : 39e4 >
    3a0e:    04 0a             	sp += 8
    3a10:    55 01             	{pc, r5, r4} = [sp++]			  ## vm_sfc.c:599:1


norflash_erase:
    3a12:    7a 01             	[--sp] = {rets, r10-r4}			  ## vm_sfc.c:1048:0
    3a14:    fa 0b             	sp += -12			  ## vm_sfc.c:1048:0
    3a16:    f5 07             	r5 = -1			  ## vm_sfc.c:1048:0
    3a18:    00 ff c8 00 0a 00 	if (r0 == 200) goto 20 <norflash_erase+0x20 : 3a32 >			  ## vm_sfc.c:1048:0
    3a1e:    00 ff cc 00 0b 00 	if (r0 == 204) goto 22 <norflash_erase+0x28 : 3a3a >			  ## vm_sfc.c:1048:0
    3a24:    01 ff c9 00 5b 00 	if (r0 != 201) goto 182 <norflash_erase+0xCE : 3ae0 >			  ## vm_sfc.c:1048:0
    3a2a:    88 7d             	r8 = 216			  ## vm_sfc.c:1048:0
    3a2c:    20 fb 01 4b       	r4 = 65536			  ## vm_sfc.c:1048:0
    3a30:    07 18             	goto 14 <norflash_erase+0x2E : 3a40 >			  ## vm_sfc.c:1048:0
    3a32:    08 72             	r8 = 32			  ## vm_sfc.c:1048:0
    3a34:    04 fb 00 10       	r4 = 4096 <sys_clock_limit+0x44 : 1000 >			  ## vm_sfc.c:1048:0
    3a38:    03 18             	goto 6 <norflash_erase+0x2E : 3a40 >			  ## vm_sfc.c:1048:0
    3a3a:    18 78             	r8 = 129			  ## vm_sfc.c:1048:0
    3a3c:    04 fb 00 01       	r4 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## vm_sfc.c:1048:0
    3a40:    c6 ff a0 22 00 00 	r6 = 8864 <_sdfile_handl : 22a0 >			  ## vm_sfc.c:1048:0
    3a46:    00 f6 e8 60       	r0 = [r6 + 232]			  ## vm_sfc.c:1068:35
    3a4a:    62 fb 00 49       	r2 = 0 - r4			  ## vm_sfc.c:1065:13
    3a4e:    e2 fd 10 72       	r7 = r2 & r1			  ## vm_sfc.c:1065:10
    3a52:    50 b5             	r0 &= r2			  ## vm_sfc.c:1068:50
    3a54:    07 f2 44 00       	if (r7 == r0) goto 136 <norflash_erase+0xCE : 3ae0 >
    3a58:    f7 14             	call -1554 <enter_spi_code : 3448 >			  ## vm_sfc.c:1086:5
    3a5a:    fe 16             	call -516 <exit_continue_mode : 3858 >			  ## vm_sfc.c:1087:21
    3a5c:    09 08             	r9 = r0			  ## vm_sfc.c:1087:21
    3a5e:    a2 17             	call -188 <norflash_write_enable : 39a4 >			  ## vm_sfc.c:1089:5
    3a60:    c5 ff 00 53 1e 00 	r5 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >
    3a66:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    3a68:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3a6a:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    3a6c:    00 4a             	r0 = [r5 + 0]			  ## vm_sfc.c:104:19
    3a6e:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    3a70:    08 4a             	[r5 + 0] = r0			  ## vm_sfc.c:105:53
    3a72:    aa 70             	r10 = 10			  ## vm_sfc.c:105:53
    3a74:    1a f5 00 00       	[sp] = r10
    3a78:    80 08             	r0 = r8			  ## vm_sfc.c:1092:5
    3a7a:    05 15             	call -1526 <spi_writebyte : 3486 >			  ## vm_sfc.c:1092:5
    3a7c:    70 08             	r0 = r7			  ## vm_sfc.c:1093:5
    3a7e:    17 15             	call -1490 <norflash_send_addr : 34ae >			  ## vm_sfc.c:1093:5
    3a80:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    3a82:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3a84:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    3a86:    00 f4 08 59       	[r5 + 0] |= 8			  ## vm_sfc.c:104:19
    3a8a:    1a f5 04 00       	[sp+4] = r10
    3a8e:    00 f6 00 61       	r0 = [r6 + 256]			  ## vm_sfc.c:363:30
    3a92:    01 f6 04 61       	r1 = [r6 + 260]			  ## vm_sfc.c:365:27
    3a96:    20 be             	r0 = r7 - r0			  ## vm_sfc.c:363:12
    3a98:    10 09             	r0 += r1			  ## vm_sfc.c:365:36
    3a9a:    41 08             	r1 = r4			  ## vm_sfc.c:1098:5
    3a9c:    88 f3 46 1a       	call 1062028 <sfc_drop_cache : 106f2c >			  ## vm_sfc.c:1098:5
    3aa0:    98 17             	call -208 <norflash_wait_ok : 39d2 >			  ## vm_sfc.c:1099:5
    3aa2:    09 e0 05 00       	if (r9 == 0) goto 10 <norflash_erase+0x9E : 3ab0 >			  ## vm_sfc.c:1099:5
    3aa6:    80 a0             	r0 = sp + 8
    3aa8:    01 70             	r1 = 0			  ## vm_sfc.c:873:5
    3aaa:    12 70             	r2 = 1			  ## vm_sfc.c:873:5
    3aac:    13 70             	r3 = 1			  ## vm_sfc.c:873:5
    3aae:    93 15             	call -1242 <__norflash_read : 35d6 >			  ## vm_sfc.c:873:5
    3ab0:    10 70             	r0 = 1			  ## vm_sfc.c:500:5
    3ab2:    88 f3 39 1a       	call 1062002 <sfc_resume : 106f28 >			  ## vm_sfc.c:500:5
    3ab6:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## vm_sfc.c:385:17
    3abc:    05 70             	r5 = 0			  ## vm_sfc.c:385:17
    3abe:    3d 61             	b[r0 + 19] = r5			  ## vm_sfc.c:385:17
    3ac0:    c0 ff 00 02 1f 00 	r0 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >			  ## vm_sfc.c:505:29
    3ac6:    00 40             	r0 = [r0 + 0]			  ## vm_sfc.c:505:29
    3ac8:    c0 ff 50 56 1e 00 	r0 = 1988176 <uECC_vli_cmp_unsafe+0xDE654 : 1e5650 >
    3ace:    0d 40             	[r0 + 0] = r5			  ## vm_sfc.c:517:22
    3ad0:    1d 40             	[r0 + 4] = r5			  ## vm_sfc.c:518:22
    3ad2:    2d 40             	[r0 + 8] = r5			  ## vm_sfc.c:519:22
    3ad4:    00 fc f4 00       	r0 = r0 + 244			  ## vm_sfc.c:519:22
    3ad8:    0d 40             	[r0 + 0] = r5			  ## vm_sfc.c:520:26
    3ada:    1d 40             	[r0 + 4] = r5			  ## vm_sfc.c:521:26
    3adc:    88 f3 5c 19       	call 1061560 <local_irq_enable : 106d98 >			  ## vm_sfc.c:530:5
    3ae0:    50 08             	r0 = r5			  ## vm_sfc.c:1108:1
    3ae2:    06 0a             	sp += 12			  ## vm_sfc.c:1108:1
    3ae4:    5a 01             	{pc, r10-r4} = [sp++]			  ## vm_sfc.c:1108:1


flushinv_dcache_api:
    3ae6:    75 01             	[--sp] = {rets, r5, r4}			  ## vm_sfc.c:1112:0
    3ae8:    14 08             	r4 = r1			  ## vm_sfc.c:1112:0
    3aea:    05 08             	r5 = r0			  ## vm_sfc.c:1112:0
    3aec:    ad 14             	call -1702 <enter_spi_code : 3448 >			  ## vm_sfc.c:1113:5
    3aee:    c0 ff a0 22 00 00 	r0 = 8864 <_sdfile_handl : 22a0 >			  ## vm_sfc.c:365:27
    3af4:    01 f6 00 01       	r1 = [r0 + 256]			  ## vm_sfc.c:363:30
    3af8:    00 f6 04 01       	r0 = [r0 + 260]			  ## vm_sfc.c:365:27
    3afc:    61 ba             	r1 = r5 - r1			  ## vm_sfc.c:363:12
    3afe:    10 09             	r0 += r1			  ## vm_sfc.c:365:36
    3b00:    41 08             	r1 = r4			  ## vm_sfc.c:1114:5
    3b02:    88 f3 13 1a       	call 1061926 <sfc_drop_cache : 106f2c >			  ## vm_sfc.c:1114:5
    3b06:    10 70             	r0 = 1			  ## vm_sfc.c:500:5
    3b08:    88 f3 0e 1a       	call 1061916 <sfc_resume : 106f28 >			  ## vm_sfc.c:500:5
    3b0c:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## vm_sfc.c:385:17
    3b12:    01 70             	r1 = 0			  ## vm_sfc.c:385:17
    3b14:    39 61             	b[r0 + 19] = r1			  ## vm_sfc.c:385:17
    3b16:    c0 ff 00 02 1f 00 	r0 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >			  ## vm_sfc.c:505:29
    3b1c:    00 40             	r0 = [r0 + 0]			  ## vm_sfc.c:505:29
    3b1e:    c0 ff 50 56 1e 00 	r0 = 1988176 <uECC_vli_cmp_unsafe+0xDE654 : 1e5650 >
    3b24:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:517:22
    3b26:    19 40             	[r0 + 4] = r1			  ## vm_sfc.c:518:22
    3b28:    29 40             	[r0 + 8] = r1			  ## vm_sfc.c:519:22
    3b2a:    00 fc f4 00       	r0 = r0 + 244			  ## vm_sfc.c:519:22
    3b2e:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:520:26
    3b30:    19 40             	[r0 + 4] = r1			  ## vm_sfc.c:521:26
    3b32:    15 01             	{rets, r5, r4} = [sp++]			  ## vm_sfc.c:530:5
    3b34:    c8 f3 30 19       	goto 1061472 <local_irq_enable : 106d98 >			  ## vm_sfc.c:530:5


_norflash_write:
    3b38:    78 01             	[--sp] = {rets, r8-r4}			  ## vm_sfc.c:974:0
    3b3a:    fa 0b             	sp += -12			  ## vm_sfc.c:974:0
    3b3c:    24 08             	r4 = r2			  ## vm_sfc.c:974:0
    3b3e:    15 08             	r5 = r1			  ## vm_sfc.c:974:0
    3b40:    07 08             	r7 = r0			  ## vm_sfc.c:974:0
    3b42:    4b 28             	if (r4 == 0) goto 150 <_norflash_write+0xA2 : 3bda >			  ## vm_sfc.c:974:0
    3b44:    81 14             	call -1790 <enter_spi_code : 3448 >			  ## vm_sfc.c:980:5
    3b46:    88 16             	call -752 <exit_continue_mode : 3858 >			  ## vm_sfc.c:981:21
    3b48:    08 08             	r8 = r0			  ## vm_sfc.c:981:21
    3b4a:    2c 17             	call -424 <norflash_write_enable : 39a4 >			  ## vm_sfc.c:983:5
    3b4c:    c6 ff 00 53 1e 00 	r6 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >
    3b52:    20 4c             	r0 = [r6 + 8]			  ## vm_sfc.c:104:19
    3b54:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3b56:    28 4c             	[r6 + 8] = r0			  ## vm_sfc.c:104:19
    3b58:    00 4c             	r0 = [r6 + 0]			  ## vm_sfc.c:104:19
    3b5a:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    3b5c:    08 4c             	[r6 + 0] = r0			  ## vm_sfc.c:105:53
    3b5e:    a0 70             	r0 = 10			  ## vm_sfc.c:105:53
    3b60:    08 02             	[sp] = r0
    3b62:    20 70             	r0 = 2			  ## vm_sfc.c:987:5
    3b64:    90 14             	call -1760 <spi_writebyte : 3486 >			  ## vm_sfc.c:987:5
    3b66:    50 08             	r0 = r5			  ## vm_sfc.c:989:5
    3b68:    a2 14             	call -1724 <norflash_send_addr : 34ae >			  ## vm_sfc.c:989:5
    3b6a:    03 70             	r3 = 0			  ## vm_sfc.c:989:5
    3b6c:    00 fa 00 73       	r0 = b[r7+r3] (u)			  ## vm_sfc.c:993:9
    3b70:    8a 14             	call -1772 <spi_writebyte : 3486 >			  ## vm_sfc.c:993:9
    3b72:    13 80             	r3 += 1			  ## vm_sfc.c:992:5
    3b74:    34 f2 fa 1f       	if (r4 != r3) goto -12 <_norflash_write+0x34 : 3b6c >			  ## vm_sfc.c:992:5
    3b78:    20 4c             	r0 = [r6 + 8]			  ## vm_sfc.c:104:19
    3b7a:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3b7c:    28 4c             	[r6 + 8] = r0			  ## vm_sfc.c:104:19
    3b7e:    00 f4 08 69       	[r6 + 0] |= 8			  ## vm_sfc.c:104:19
    3b82:    a0 70             	r0 = 10			  ## vm_sfc.c:104:19
    3b84:    18 02             	[sp+4] = r0
    3b86:    c0 ff a0 22 00 00 	r0 = 8864 <_sdfile_handl : 22a0 >			  ## vm_sfc.c:365:27
    3b8c:    01 f6 00 01       	r1 = [r0 + 256]			  ## vm_sfc.c:363:30
    3b90:    00 f6 04 01       	r0 = [r0 + 260]			  ## vm_sfc.c:365:27
    3b94:    61 ba             	r1 = r5 - r1			  ## vm_sfc.c:363:12
    3b96:    10 09             	r0 += r1			  ## vm_sfc.c:365:36
    3b98:    41 08             	r1 = r4			  ## vm_sfc.c:998:5
    3b9a:    88 f3 c7 19       	call 1061774 <sfc_drop_cache : 106f2c >			  ## vm_sfc.c:998:5
    3b9e:    19 17             	call -462 <norflash_wait_ok : 39d2 >			  ## vm_sfc.c:999:5
    3ba0:    08 e0 05 00       	if (r8 == 0) goto 10 <_norflash_write+0x76 : 3bae >			  ## vm_sfc.c:999:5
    3ba4:    80 a0             	r0 = sp + 8
    3ba6:    01 70             	r1 = 0			  ## vm_sfc.c:873:5
    3ba8:    12 70             	r2 = 1			  ## vm_sfc.c:873:5
    3baa:    13 70             	r3 = 1			  ## vm_sfc.c:873:5
    3bac:    14 15             	call -1496 <__norflash_read : 35d6 >			  ## vm_sfc.c:873:5
    3bae:    10 70             	r0 = 1			  ## vm_sfc.c:500:5
    3bb0:    88 f3 ba 19       	call 1061748 <sfc_resume : 106f28 >			  ## vm_sfc.c:500:5
    3bb4:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## vm_sfc.c:385:17
    3bba:    01 70             	r1 = 0			  ## vm_sfc.c:385:17
    3bbc:    39 61             	b[r0 + 19] = r1			  ## vm_sfc.c:385:17
    3bbe:    40 fb af 6a       	r0 = r6 + 44800			  ## vm_sfc.c:505:29
    3bc2:    00 40             	r0 = [r0 + 0]			  ## vm_sfc.c:505:29
    3bc4:    60 fc 50 03       	r0 = r6 + 848
    3bc8:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:517:22
    3bca:    19 40             	[r0 + 4] = r1			  ## vm_sfc.c:518:22
    3bcc:    29 40             	[r0 + 8] = r1			  ## vm_sfc.c:519:22
    3bce:    00 fc f4 00       	r0 = r0 + 244			  ## vm_sfc.c:519:22
    3bd2:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:520:26
    3bd4:    19 40             	[r0 + 4] = r1			  ## vm_sfc.c:521:26
    3bd6:    88 f3 df 18       	call 1061310 <local_irq_enable : 106d98 >			  ## vm_sfc.c:530:5
    3bda:    00 70             	r0 = 0			  ## vm_sfc.c:1007:1
    3bdc:    06 0a             	sp += 12			  ## vm_sfc.c:1007:1
    3bde:    58 01             	{pc, r8-r4} = [sp++]			  ## vm_sfc.c:1007:1


delay_nus:
    3be0:    c0 ff 00 50 00 00 	r0 = 20480 <nvbss_begin : 5000 >			  ## power_hw.c:197:0
    3be6:    00 f9 45 00       	r0 = b[r0 + 69] (u)			  ## power_hw.c:199:27
    3bea:    03 20             	if (r0 == 0) goto 6 <delay_nus+0x12 : 3bf2 >			  ## power_hw.c:199:27
    3bec:    f0 8f             	r0 += -1			  ## power_hw.c:190:13
    3bee:    00 00             	nop			  ## power_hw.c:191:9
    3bf0:    fd 31             	if (r0 != 0) goto -6 <delay_nus+0xC : 3bec >			  ## power_hw.c:191:9
    3bf2:    20 00             	rts			  ## power_hw.c:200:1


__hw_spi_clk_div:
    3bf4:    75 01             	[--sp] = {rets, r5, r4}			  ## clock.c:223:0
    3bf6:    15 08             	r5 = r1			  ## clock.c:223:0
    3bf8:    04 08             	r4 = r0			  ## clock.c:223:0
    3bfa:    88 f3 cf 18       	call 1061278 <local_irq_disable : 106d9c >			  ## clock.c:224:5
    3bfe:    08 00             	csync			  ## clock.c:224:5
    3c00:    08 00             	csync			  ## clock.c:225:5
    3c02:    c0 ff 00 05 1b 00 	r0 = 1770752 <uECC_vli_cmp_unsafe+0xA9504 : 1b0500 >
    3c08:    01 40             	r1 = [r0 + 0]			  ## clock.c:225:5
    3c0a:    f1 ef fd cf       	ifs (r1 > -1) goto -6 <__hw_spi_clk_div+0x14 : 3c08 >			  ## clock.c:225:5
    3c0e:    08 00             	csync			  ## clock.c:226:5
    3c10:    40 fb df 0a       	r0 = r0 + 57088			  ## clock.c:226:5
    3c14:    01 40             	r1 = [r0 + 0]			  ## clock.c:226:5
    3c16:    f1 ef fd cf       	ifs (r1 > -1) goto -6 <__hw_spi_clk_div+0x20 : 3c14 >			  ## clock.c:226:5
    3c1a:    c0 ff 00 02 1f 00 	r0 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >
    3c20:    01 40             	r1 = [r0 + 0]			  ## clock.c:227:20
    3c22:    01 e0 fd bf       	ifs (r1 < 0) goto -6 <__hw_spi_clk_div+0x2C : 3c20 >			  ## clock.c:227:5
    3c26:    01 40             	r1 = [r0 + 0]			  ## clock.c:228:17
    3c28:    71 b0             	r1 &= 4294967294			  ## clock.c:228:17
    3c2a:    09 40             	[r0 + 0] = r1			  ## clock.c:228:17
    3c2c:    1c 40             	[r0 + 4] = r4			  ## clock.c:229:18
    3c2e:    01 40             	r1 = [r0 + 0]			  ## clock.c:230:5
    3c30:    22 fd 0f 59       	r2 = r5 & 15			  ## clock.c:230:5
    3c34:    31 fd f0 1b       	r1 = r1 & 4279238655			  ## clock.c:230:5
    3c38:    c4 fd a0 12       	r1 <= insert(r2, p:20, l:4)			  ## clock.c:230:5
    3c3c:    09 40             	[r0 + 0] = r1			  ## clock.c:230:5
    3c3e:    00 f4 01 09       	[r0 + 0] |= 1			  ## clock.c:231:17
    3c42:    c0 ff a8 31 00 00 	r0 = 12712 <clock_poweroff_sfc_info.0 : 31a8 >			  ## clock.c:232:38
    3c48:    0c 50             	h[r0 + 0] = r4			  ## clock.c:232:38
    3c4a:    15 01             	{rets, r5, r4} = [sp++]			  ## clock.c:233:5
    3c4c:    c8 f3 a4 18       	goto 1061192 <local_irq_enable : 106d98 >			  ## clock.c:233:5


clock_enter_deepsleep:
    3c50:    20 00             	rts			  ## clock.c:2504:0


clock_exit_deepsleep:
    3c52:    c0 ff a8 31 00 00 	r0 = 12712 <clock_poweroff_sfc_info.0 : 31a8 >			  ## clock.c:2508:0
    3c58:    00 50             	r0 = h[r0 + 0] (u)			  ## clock.c:2509:20
    3c5a:    c1 ff 04 02 1f 00 	r1 = 2032132 <uECC_vli_cmp_unsafe+0xE9208 : 1f0204 >			  ## clock.c:2509:18
    3c60:    08 42             	[r1 + 0] = r0			  ## clock.c:2509:18
    3c62:    20 00             	rts			  ## clock.c:2510:1


tmr_exit_deepsleep:
    3c64:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## timer.c:264:0
    3c6a:    b1 41             	r1 = [r0 + 108]			  ## timer.c:265:22
    3c6c:    c2 ff 00 05 1e 00 	r2 = 1967360 <uECC_vli_cmp_unsafe+0xD9504 : 1e0500 >			  ## timer.c:265:22
    3c72:    19 44             	[r2 + 4] = r1			  ## timer.c:265:20
    3c74:    c1 41             	r1 = [r0 + 112]			  ## timer.c:266:22
    3c76:    29 44             	[r2 + 8] = r1			  ## timer.c:266:20
    3c78:    d0 41             	r0 = [r0 + 116]			  ## timer.c:267:22
    3c7a:    08 44             	[r2 + 0] = r0			  ## timer.c:267:20
    3c7c:    00 f4 40 2a       	[r2 + 0] |= 16384			  ## timer.c:268:20
    3c80:    c2 ff 90 36 e0 01 	r2 = 31471248 <timer1_isr : 1e03690 >			  ## timer.c:269:5
    3c86:    50 70             	r0 = 5			  ## timer.c:269:5
    3c88:    11 70             	r1 = 1			  ## timer.c:269:5
    3c8a:    f0 f3 7d 5f       	goto -2048262 <request_irq : 1e0fb88 >			  ## timer.c:269:5


delay_p11_tmr1_lrc:
    3c8e:    c1 ff 00 3e 1e 00 	r1 = 1981952 <uECC_vli_cmp_unsafe+0xDCE04 : 1e3e00 >			  ## power_hw.c:225:0
    3c94:    00 f4 04 19       	[r1 + 0] |= 4			  ## power_hw.c:226:21
    3c98:    c1 ff ac 0f 1a 00 	r1 = 1707948 <uECC_vli_cmp_unsafe+0x99FB0 : 1a0fac >			  ## power_hw.c:229:20
    3c9e:    01 62             	r1 = b[r1 + 0] (u)			  ## power_hw.c:229:20
    3ca0:    c0 fe 10 20       	r2 = r0 / r1 (u)			  ## power_hw.c:229:18
    3ca4:    21 70             	r1 = 2			  ## power_hw.c:229:18
    3ca6:    22 e0 01 80       	if (r2 > 2) goto 2 <delay_p11_tmr1_lrc+0x1E : 3cac >			  ## power_hw.c:229:18
    3caa:    22 70             	r2 = 2			  ## power_hw.c:231:9
    3cac:    13 d2             	r3 = r2 >> 8			  ## power_hw.c:235:21
    3cae:    c0 ff e1 1f 1a 00 	r0 = 1712097 <uECC_vli_cmp_unsafe+0x9AFE5 : 1a1fe1 >			  ## power_hw.c:235:21
    3cb4:    4b 60             	b[r0 + 4] = r3			  ## power_hw.c:235:19
    3cb6:    3a 60             	b[r0 + 3] = r2			  ## power_hw.c:236:19
    3cb8:    29 60             	b[r0 + 2] = r1			  ## power_hw.c:238:19
    3cba:    81 75             	r1 = 88			  ## power_hw.c:239:19
    3cbc:    19 60             	b[r0 + 1] = r1			  ## power_hw.c:239:19
    3cbe:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:240:19
    3cc0:    11 b0             	r1 |= 1			  ## power_hw.c:240:19
    3cc2:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:240:19
    3cc4:    21 60             	r1 = b[r0 + 2] (u)			  ## power_hw.c:241:19
    3cc6:    11 b2             	r1 |= 16			  ## power_hw.c:241:19
    3cc8:    29 60             	b[r0 + 2] = r1			  ## power_hw.c:241:19
    3cca:    20 fb 1e 1b       	r1 = 1966080			  ## power_hw.c:243:23
    3cce:    00 f4 04 19       	[r1 + 0] |= 4			  ## power_hw.c:243:23
    3cd2:    21 f9 01 00       	r1 = b[r0 + 1] (s)			  ## power_hw.c:245:14
    3cd6:    f1 ef fc cf       	ifs (r1 > -1) goto -8 <delay_p11_tmr1_lrc+0x44 : 3cd2 >			  ## power_hw.c:245:5
    3cda:    01 75             	r1 = 80			  ## power_hw.c:246:19
    3cdc:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:246:19
    3cde:    19 60             	b[r0 + 1] = r1			  ## power_hw.c:247:19
    3ce0:    20 00             	rts			  ## power_hw.c:248:1


close_flash:
    3ce2:    74 01             	[--sp] = {rets, r4}			  ## pmu_analog.c:919:0
    3ce4:    08 00             	csync			  ## pmu_analog.c:920:5
    3ce6:    c0 ff 00 05 1b 00 	r0 = 1770752 <uECC_vli_cmp_unsafe+0xA9504 : 1b0500 >			  ## pmu_analog.c:920:5
    3cec:    01 40             	r1 = [r0 + 0]			  ## pmu_analog.c:920:5
    3cee:    f1 ef fd cf       	ifs (r1 > -1) goto -6 <close_flash+0xA : 3cec >			  ## pmu_analog.c:920:5
    3cf2:    08 00             	csync			  ## pmu_analog.c:921:5
    3cf4:    40 fb df 0a       	r0 = r0 + 57088			  ## pmu_analog.c:921:5
    3cf8:    01 40             	r1 = [r0 + 0]			  ## pmu_analog.c:921:5
    3cfa:    f1 ef fd cf       	ifs (r1 > -1) goto -6 <close_flash+0x16 : 3cf8 >			  ## pmu_analog.c:921:5
    3cfe:    c0 ff 00 02 1f 00 	r0 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >
    3d04:    01 40             	r1 = [r0 + 0]			  ## pmu_analog.c:923:20
    3d06:    01 e0 fd bf       	ifs (r1 < 0) goto -6 <close_flash+0x22 : 3d04 >			  ## pmu_analog.c:923:5
    3d0a:    01 40             	r1 = [r0 + 0]			  ## pmu_analog.c:925:17
    3d0c:    71 b0             	r1 &= 4294967294			  ## pmu_analog.c:925:17
    3d0e:    09 40             	[r0 + 0] = r1			  ## pmu_analog.c:925:17
    3d10:    c4 ff 00 53 1e 00 	r4 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## pmu_analog.c:925:17
    3d16:    30 48             	r0 = [r4 + 12]			  ## pmu_analog.c:236:37
    3d18:    70 b0             	r0 &= 4294967294			  ## pmu_analog.c:236:37
    3d1a:    38 48             	[r4 + 12] = r0			  ## pmu_analog.c:236:37
    3d1c:    80 48             	r0 = [r4 + 32]			  ## pmu_analog.c:237:37
    3d1e:    70 b0             	r0 &= 4294967294			  ## pmu_analog.c:237:37
    3d20:    88 48             	[r4 + 32] = r0			  ## pmu_analog.c:237:37
    3d22:    40 48             	r0 = [r4 + 16]			  ## pmu_analog.c:238:37
    3d24:    70 b0             	r0 &= 4294967294			  ## pmu_analog.c:238:37
    3d26:    48 48             	[r4 + 16] = r0			  ## pmu_analog.c:238:37
    3d28:    50 48             	r0 = [r4 + 20]			  ## pmu_analog.c:239:37
    3d2a:    70 b0             	r0 &= 4294967294			  ## pmu_analog.c:239:37
    3d2c:    58 48             	[r4 + 20] = r0			  ## pmu_analog.c:239:37
    3d2e:    02 f4 01 49       	[r4 + 8] |= 1			  ## pmu_analog.c:240:37
    3d32:    30 48             	r0 = [r4 + 12]			  ## pmu_analog.c:243:37
    3d34:    f0 b0             	r0 &= 4294967293			  ## pmu_analog.c:243:37
    3d36:    38 48             	[r4 + 12] = r0			  ## pmu_analog.c:243:37
    3d38:    80 48             	r0 = [r4 + 32]			  ## pmu_analog.c:244:37
    3d3a:    f0 b0             	r0 &= 4294967293			  ## pmu_analog.c:244:37
    3d3c:    88 48             	[r4 + 32] = r0			  ## pmu_analog.c:244:37
    3d3e:    40 48             	r0 = [r4 + 16]			  ## pmu_analog.c:245:37
    3d40:    f0 b0             	r0 &= 4294967293			  ## pmu_analog.c:245:37
    3d42:    48 48             	[r4 + 16] = r0			  ## pmu_analog.c:245:37
    3d44:    50 48             	r0 = [r4 + 20]			  ## pmu_analog.c:246:37
    3d46:    f0 b0             	r0 &= 4294967293			  ## pmu_analog.c:246:37
    3d48:    58 48             	[r4 + 20] = r0			  ## pmu_analog.c:246:37
    3d4a:    02 f4 02 49       	[r4 + 8] |= 2			  ## pmu_analog.c:247:37
    3d4e:    30 48             	r0 = [r4 + 12]			  ## pmu_analog.c:250:37
    3d50:    70 b1             	r0 &= 4294967291			  ## pmu_analog.c:250:37
    3d52:    38 48             	[r4 + 12] = r0			  ## pmu_analog.c:250:37
    3d54:    80 48             	r0 = [r4 + 32]			  ## pmu_analog.c:251:37
    3d56:    70 b1             	r0 &= 4294967291			  ## pmu_analog.c:251:37
    3d58:    88 48             	[r4 + 32] = r0			  ## pmu_analog.c:251:37
    3d5a:    40 48             	r0 = [r4 + 16]			  ## pmu_analog.c:252:37
    3d5c:    70 b1             	r0 &= 4294967291			  ## pmu_analog.c:252:37
    3d5e:    48 48             	[r4 + 16] = r0			  ## pmu_analog.c:252:37
    3d60:    50 48             	r0 = [r4 + 20]			  ## pmu_analog.c:253:37
    3d62:    70 b1             	r0 &= 4294967291			  ## pmu_analog.c:253:37
    3d64:    58 48             	[r4 + 20] = r0			  ## pmu_analog.c:253:37
    3d66:    02 f4 04 49       	[r4 + 8] |= 4			  ## pmu_analog.c:254:37
    3d6a:    30 48             	r0 = [r4 + 12]			  ## pmu_analog.c:267:37
    3d6c:    f0 b1             	r0 &= 4294967287			  ## pmu_analog.c:267:37
    3d6e:    38 48             	[r4 + 12] = r0			  ## pmu_analog.c:267:37
    3d70:    80 48             	r0 = [r4 + 32]			  ## pmu_analog.c:268:37
    3d72:    f0 b1             	r0 &= 4294967287			  ## pmu_analog.c:268:37
    3d74:    88 48             	[r4 + 32] = r0			  ## pmu_analog.c:268:37
    3d76:    50 48             	r0 = [r4 + 20]			  ## pmu_analog.c:269:37
    3d78:    f0 b1             	r0 &= 4294967287			  ## pmu_analog.c:269:37
    3d7a:    58 48             	[r4 + 20] = r0			  ## pmu_analog.c:269:37
    3d7c:    04 f4 08 49       	[r4 + 16] |= 8			  ## pmu_analog.c:270:37
    3d80:    02 f4 08 49       	[r4 + 8] |= 8			  ## pmu_analog.c:271:37
    3d84:    00 48             	r0 = [r4 + 0]			  ## pmu_analog.c:177:35
    3d86:    70 b2             	r0 &= 4294967279			  ## pmu_analog.c:177:35
    3d88:    08 48             	[r4 + 0] = r0			  ## pmu_analog.c:177:35
    3d8a:    20 48             	r0 = [r4 + 8]			  ## pmu_analog.c:178:35
    3d8c:    70 b2             	r0 &= 4294967279			  ## pmu_analog.c:178:35
    3d8e:    28 48             	[r4 + 8] = r0			  ## pmu_analog.c:178:35
    3d90:    40 76             	r0 = 100			  ## pmu_analog.c:179:5
    3d92:    7d 17             	call -262 <delay_p11_tmr1_lrc : 3c8e >			  ## pmu_analog.c:179:5
    3d94:    40 48             	r0 = [r4 + 16]			  ## pmu_analog.c:181:34
    3d96:    f0 b1             	r0 &= 4294967287			  ## pmu_analog.c:181:34
    3d98:    48 48             	[r4 + 16] = r0			  ## pmu_analog.c:181:34
    3d9a:    02 f4 10 49       	[r4 + 8] |= 16			  ## pmu_analog.c:183:35
    3d9e:    40 48             	r0 = [r4 + 16]			  ## pmu_analog.c:184:34
    3da0:    70 b2             	r0 &= 4294967279			  ## pmu_analog.c:184:34
    3da2:    48 48             	[r4 + 16] = r0			  ## pmu_analog.c:184:34
    3da4:    50 48             	r0 = [r4 + 20]			  ## pmu_analog.c:185:34
    3da6:    70 b2             	r0 &= 4294967279			  ## pmu_analog.c:185:34
    3da8:    58 48             	[r4 + 20] = r0			  ## pmu_analog.c:185:34
    3daa:    54 01             	{pc, r4} = [sp++]			  ## pmu_analog.c:930:1


power_set_soft_poweroff_advance:
    3dac:    c0 ff 91 4e e1 01 	r0 = 31542929 <update_target_end+0x2009 : 1e14e91 >			  ## power_hw.c:1352:0
    3db2:    b0 f3 8a 59       	call -2051308 <printf : 1e0f0ca >			  ## power_hw.c:1353:5
    3db6:    c0 ff ac 0f 1a 00 	r0 = 1707948 <uECC_vli_cmp_unsafe+0x99FB0 : 1a0fac >			  ## power_hw.c:1356:53
    3dbc:    00 60             	r0 = b[r0 + 0] (u)			  ## power_hw.c:1356:53
    3dbe:    af f3 c3 fc       	call -2098810 <power_set_soft_poweroff_prepare : 1e03748 >			  ## power_hw.c:1361:5
    3dc2:    8f 17             	call -226 <close_flash : 3ce2 >			  ## power_hw.c:1363:5
    3dc4:    10 70             	r0 = 1			  ## power_hw.c:1363:5
    3dc6:    c1 ff d0 18 1a 00 	r1 = 1710288 <uECC_vli_cmp_unsafe+0x9A8D4 : 1a18d0 >			  ## power_hw.c:1363:5
    3dcc:    c2 ff b0 20 00 00 	r2 = 8368 <gatt_client_conn_handle : 20b0 >			  ## power_hw.c:1363:5
    3dd2:    03 70             	r3 = 0			  ## power_hw.c:1363:5
    3dd4:    84 70             	r4 = 8			  ## power_hw.c:1363:5
    3dd6:    08 62             	b[r1 + 0] = r0			  ## power_hw.c:1368:22
    3dd8:    18 62             	b[r1 + 1] = r0			  ## power_hw.c:1369:22
    3dda:    28 62             	b[r1 + 2] = r0			  ## power_hw.c:1370:22
    3ddc:    38 62             	b[r1 + 3] = r0			  ## power_hw.c:1371:22
    3dde:    48 62             	b[r1 + 4] = r0			  ## power_hw.c:1372:22
    3de0:    cb 64             	b[r2 + 12] = r3			  ## power_hw.c:1374:9
    3de2:    14 f9 21 17       	b[r1 + 1825] = r4			  ## power_hw.c:1374:9
    3de6:    14 f9 2a 17       	b[r1 + 1834] = r4			  ## power_hw.c:1374:9
    3dea:    02 00             	idle			  ## power_hw.c:1376:9
    3dec:    f4 1f             	goto -24 <power_set_soft_poweroff_advance+0x2A : 3dd6 >			  ## power_hw.c:1365:5


power_set_soft_poweroff_legacy:
    3dee:    04 08             	r4 = r0			  ## power_hw.c:1284:0
    3df0:    af f3 26 ef       	call -2105780 <power_set_mode : 1e01c40 >			  ## power_hw.c:1285:5
    3df4:    c0 ff 82 4e e1 01 	r0 = 31542914 <update_target_end+0x1FFA : 1e14e82 >			  ## power_hw.c:1287:5
    3dfa:    b0 f3 66 59       	call -2051380 <printf : 1e0f0ca >			  ## power_hw.c:1287:5
    3dfe:    af f3 a3 fc       	call -2098874 <power_set_soft_poweroff_prepare : 1e03748 >			  ## power_hw.c:1288:5
    3e02:    6f 17             	call -290 <close_flash : 3ce2 >			  ## power_hw.c:1292:5
    3e04:    02 70             	r2 = 0			  ## power_hw.c:1295:17
    3e06:    c0 ff 11 18 1a 00 	r0 = 1710097 <uECC_vli_cmp_unsafe+0x9A815 : 1a1811 >			  ## power_hw.c:1295:17
    3e0c:    5a 60             	b[r0 + 5] = r2			  ## power_hw.c:1295:17
    3e0e:    09 fc 81 00       	r9 = r0 + 129			  ## power_hw.c:1295:17
    3e12:    03 f9 00 90       	r3 = b[r9 + 0] (u)			  ## power_hw.c:1298:5
    3e16:    f3 b1             	r3 &= 4294967287			  ## power_hw.c:1298:5
    3e18:    13 f9 00 90       	b[r9 + 0] = r3			  ## power_hw.c:1298:5
    3e1c:    03 60             	r3 = b[r0 + 0] (u)			  ## power_hw.c:1299:5
    3e1e:    73 b0             	r3 &= 4294967294			  ## power_hw.c:1299:5
    3e20:    0b 60             	b[r0 + 0] = r3			  ## power_hw.c:1299:5
    3e22:    2a 60             	b[r0 + 2] = r2			  ## power_hw.c:1302:17
    3e24:    3a 60             	b[r0 + 3] = r2			  ## power_hw.c:1303:17
    3e26:    02 fc 31 00       	r2 = r0 + 49			  ## power_hw.c:1303:17
    3e2a:    14 e0 07 10       	if (r4 != 1) goto 14 <power_set_soft_poweroff_legacy+0x4E : 3e3c >			  ## power_hw.c:1303:17
    3e2e:    03 f9 0b 90       	r3 = b[r9 + 11] (u)			  ## power_hw.c:1307:9
    3e32:    13 b3             	r3 |= 64			  ## power_hw.c:1307:9
    3e34:    13 f9 0b 90       	b[r9 + 11] = r3			  ## power_hw.c:1307:9
    3e38:    43 70             	r3 = 4			  ## power_hw.c:1308:20
    3e3a:    0b 64             	b[r2 + 0] = r3			  ## power_hw.c:1308:20
    3e3c:    13 70             	r3 = 1
    3e3e:    04 fc bf 00       	r4 = r0 + 191
    3e42:    88 7a             	r8 = 168
    3e44:    f6 7f             	r6 = 255
    3e46:    0a fc 56 00       	r10 = r0 + 86
    3e4a:    15 70             	r5 = 1
    3e4c:    13 f9 12 90       	b[r9 + 18] = r3			  ## power_hw.c:1316:21
    3e50:    0b 68             	b[r4 + 0] = r3			  ## power_hw.c:1317:22
    3e52:    1b 68             	b[r4 + 1] = r3			  ## power_hw.c:1318:22
    3e54:    2b 68             	b[r4 + 2] = r3			  ## power_hw.c:1319:22
    3e56:    3b 68             	b[r4 + 3] = r3			  ## power_hw.c:1320:22
    3e58:    4b 68             	b[r4 + 4] = r3			  ## power_hw.c:1321:22
    3e5a:    61 60             	r1 = b[r0 + 6] (u)			  ## power_hw.c:1323:21
    3e5c:    71 b1             	r1 &= 4294967291			  ## power_hw.c:1323:21
    3e5e:    69 60             	b[r0 + 6] = r1			  ## power_hw.c:1323:21
    3e60:    18 f9 00 20       	b[r2 + 0] = r8			  ## power_hw.c:1326:20
    3e64:    6e 65             	b[r2 + 22] = r6			  ## power_hw.c:1329:23
    3e66:    7e 65             	b[r2 + 23] = r6			  ## power_hw.c:1330:23
    3e68:    16 f9 00 a0       	b[r10 + 0] = r6			  ## power_hw.c:1331:25
    3e6c:    16 f9 01 a0       	b[r10 + 1] = r6			  ## power_hw.c:1332:25
    3e70:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:1333:21
    3e72:    11 b3             	r1 |= 64			  ## power_hw.c:1333:21
    3e74:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:1333:21
    3e76:    71 64             	r1 = b[r2 + 7] (u)			  ## power_hw.c:1334:21
    3e78:    11 b3             	r1 |= 64			  ## power_hw.c:1334:21
    3e7a:    47 05             	r7 = r5.b0 (u)			  ## power_hw.c:1340:32
    3e7c:    79 64             	b[r2 + 7] = r1			  ## power_hw.c:1334:21
    3e7e:    57 e6 06 30       	if (r7 < 101) goto 12 <power_set_soft_poweroff_legacy+0xA0 : 3e8e >			  ## power_hw.c:1334:21
    3e82:    01 f9 0e 90       	r1 = b[r9 + 14] (u)			  ## power_hw.c:1341:13
    3e86:    01 fd 30 19       	r1 = r1 | 48			  ## power_hw.c:1341:13
    3e8a:    11 f9 0e 90       	b[r9 + 14] = r1			  ## power_hw.c:1341:13
    3e8e:    15 80             	r5 += 1			  ## power_hw.c:1289:8
    3e90:    dd 1f             	goto -70 <power_set_soft_poweroff_legacy+0x5E : 3e4c >			  ## power_hw.c:1289:8


__get_lrc_hz:
    3e92:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## lrc_hw.c:56:0
    3e98:    00 f6 a0 00       	r0 = [r0 + 160]			  ## lrc_hw.c:59:20
    3e9c:    20 00             	rts			  ## lrc_hw.c:59:5


spi_soft_writebyte:
    3e9e:    74 01             	[--sp] = {rets, r4}			  ## vm_sfc.c:124:0
    3ea0:    c1 ff 00 53 1e 00 	r1 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:124:0
    3ea6:    02 42             	r2 = [r1 + 0]			  ## vm_sfc.c:125:19
    3ea8:    23 42             	r3 = [r1 + 8]			  ## vm_sfc.c:126:20
    3eaa:    f3 b0             	r3 &= 4294967293			  ## vm_sfc.c:126:20
    3eac:    2b 42             	[r1 + 8] = r3			  ## vm_sfc.c:126:20
    3eae:    c3 d1             	r3 = r0 >> 7			  ## vm_sfc.c:127:31
    3eb0:    24 08             	r4 = r2			  ## vm_sfc.c:127:31
    3eb2:    c1 fd 08 43       	r4 <= insert(r3, p:1, l:1)			  ## vm_sfc.c:127:31
    3eb6:    0c 42             	[r1 + 0] = r4			  ## vm_sfc.c:127:20
    3eb8:    00 f4 01 19       	[r1 + 0] |= 1			  ## vm_sfc.c:128:21
    3ebc:    03 42             	r3 = [r1 + 0]			  ## vm_sfc.c:129:21
    3ebe:    73 b0             	r3 &= 4294967294			  ## vm_sfc.c:129:21
    3ec0:    0b 42             	[r1 + 0] = r3			  ## vm_sfc.c:129:21
    3ec2:    83 d1             	r3 = r0 >> 6			  ## vm_sfc.c:130:31
    3ec4:    24 08             	r4 = r2			  ## vm_sfc.c:130:31
    3ec6:    c1 fd 08 43       	r4 <= insert(r3, p:1, l:1)			  ## vm_sfc.c:130:31
    3eca:    0c 42             	[r1 + 0] = r4			  ## vm_sfc.c:130:20
    3ecc:    00 f4 01 19       	[r1 + 0] |= 1			  ## vm_sfc.c:131:21
    3ed0:    03 42             	r3 = [r1 + 0]			  ## vm_sfc.c:132:21
    3ed2:    73 b0             	r3 &= 4294967294			  ## vm_sfc.c:132:21
    3ed4:    0b 42             	[r1 + 0] = r3			  ## vm_sfc.c:132:21
    3ed6:    43 d1             	r3 = r0 >> 5			  ## vm_sfc.c:130:55
    3ed8:    24 08             	r4 = r2			  ## vm_sfc.c:133:31
    3eda:    c1 fd 08 43       	r4 <= insert(r3, p:1, l:1)			  ## vm_sfc.c:133:31
    3ede:    0c 42             	[r1 + 0] = r4			  ## vm_sfc.c:133:20
    3ee0:    00 f4 01 19       	[r1 + 0] |= 1			  ## vm_sfc.c:134:21
    3ee4:    03 42             	r3 = [r1 + 0]			  ## vm_sfc.c:135:21
    3ee6:    73 b0             	r3 &= 4294967294			  ## vm_sfc.c:135:21
    3ee8:    0b 42             	[r1 + 0] = r3			  ## vm_sfc.c:135:21
    3eea:    03 d1             	r3 = r0 >> 4			  ## vm_sfc.c:133:54
    3eec:    24 08             	r4 = r2			  ## vm_sfc.c:136:31
    3eee:    c1 fd 08 43       	r4 <= insert(r3, p:1, l:1)			  ## vm_sfc.c:136:31
    3ef2:    0c 42             	[r1 + 0] = r4			  ## vm_sfc.c:136:20
    3ef4:    00 f4 01 19       	[r1 + 0] |= 1			  ## vm_sfc.c:137:21
    3ef8:    03 42             	r3 = [r1 + 0]			  ## vm_sfc.c:138:21
    3efa:    73 b0             	r3 &= 4294967294			  ## vm_sfc.c:138:21
    3efc:    0b 42             	[r1 + 0] = r3			  ## vm_sfc.c:138:21
    3efe:    c3 d0             	r3 = r0 >> 3			  ## vm_sfc.c:136:53
    3f00:    24 08             	r4 = r2			  ## vm_sfc.c:139:31
    3f02:    c1 fd 08 43       	r4 <= insert(r3, p:1, l:1)			  ## vm_sfc.c:139:31
    3f06:    0c 42             	[r1 + 0] = r4			  ## vm_sfc.c:139:20
    3f08:    00 f4 01 19       	[r1 + 0] |= 1			  ## vm_sfc.c:140:21
    3f0c:    03 42             	r3 = [r1 + 0]			  ## vm_sfc.c:141:21
    3f0e:    73 b0             	r3 &= 4294967294			  ## vm_sfc.c:141:21
    3f10:    0b 42             	[r1 + 0] = r3			  ## vm_sfc.c:141:21
    3f12:    83 d0             	r3 = r0 >> 2			  ## vm_sfc.c:139:52
    3f14:    24 08             	r4 = r2			  ## vm_sfc.c:142:31
    3f16:    c1 fd 08 43       	r4 <= insert(r3, p:1, l:1)			  ## vm_sfc.c:142:31
    3f1a:    0c 42             	[r1 + 0] = r4			  ## vm_sfc.c:142:20
    3f1c:    00 f4 01 19       	[r1 + 0] |= 1			  ## vm_sfc.c:143:21
    3f20:    03 42             	r3 = [r1 + 0]			  ## vm_sfc.c:144:21
    3f22:    73 b0             	r3 &= 4294967294			  ## vm_sfc.c:144:21
    3f24:    0b 42             	[r1 + 0] = r3			  ## vm_sfc.c:144:21
    3f26:    43 d0             	r3 = r0 >> 1			  ## vm_sfc.c:142:51
    3f28:    24 08             	r4 = r2			  ## vm_sfc.c:145:31
    3f2a:    c1 fd 08 43       	r4 <= insert(r3, p:1, l:1)			  ## vm_sfc.c:145:31
    3f2e:    0c 42             	[r1 + 0] = r4			  ## vm_sfc.c:145:20
    3f30:    00 f4 01 19       	[r1 + 0] |= 1			  ## vm_sfc.c:146:21
    3f34:    03 42             	r3 = [r1 + 0]			  ## vm_sfc.c:147:21
    3f36:    73 b0             	r3 &= 4294967294			  ## vm_sfc.c:147:21
    3f38:    0b 42             	[r1 + 0] = r3			  ## vm_sfc.c:147:21
    3f3a:    c1 fd 08 20       	r2 <= insert(r0, p:1, l:1)			  ## vm_sfc.c:148:31
    3f3e:    0a 42             	[r1 + 0] = r2			  ## vm_sfc.c:148:20
    3f40:    00 f4 01 19       	[r1 + 0] |= 1			  ## vm_sfc.c:149:21
    3f44:    00 42             	r0 = [r1 + 0]			  ## vm_sfc.c:150:21
    3f46:    70 b0             	r0 &= 4294967294			  ## vm_sfc.c:150:21
    3f48:    08 42             	[r1 + 0] = r0			  ## vm_sfc.c:150:21
    3f4a:    00 42             	r0 = [r1 + 0]			  ## vm_sfc.c:151:20
    3f4c:    f0 b0             	r0 &= 4294967293			  ## vm_sfc.c:151:20
    3f4e:    08 42             	[r1 + 0] = r0			  ## vm_sfc.c:151:20
    3f50:    54 01             	{pc, r4} = [sp++]			  ## vm_sfc.c:152:1


ze_entry_tm:
    3f52:    77 01             	[--sp] = {rets, r7-r4}			  ## vm_sfc.c:1176:0
    3f54:    f4 0b             	sp += -24			  ## vm_sfc.c:1176:0
    3f56:    c4 ff 00 04 1e 00 	r4 = 1967104 <uECC_vli_cmp_unsafe+0xD9404 : 1e0400 >			  ## vm_sfc.c:1176:0
    3f5c:    c0 f4 40 4a       	[r4 + 0] = 16384			  ## vm_sfc.c:1167:20
    3f60:    c1 f4 00 49       	[r4 + 4] = 0			  ## vm_sfc.c:1168:20
    3f64:    c2 f4 28 49       	[r4 + 8] = 40			  ## vm_sfc.c:1169:20
    3f68:    c0 f4 11 49       	[r4 + 0] = 17			  ## vm_sfc.c:1170:20
    3f6c:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:1171:24
    3f6e:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:1171:39
    3f70:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <ze_entry_tm+0x1A : 3f6c >			  ## vm_sfc.c:1171:5
    3f74:    06 fb 00 40       	r6 = 16384 <ze_entry_tm+0xAE : 4000 >			  ## vm_sfc.c:1172:20
    3f78:    0e 48             	[r4 + 0] = r6			  ## vm_sfc.c:1172:20
    3f7a:    45 fc 00 4f       	r5 = r4 + 20224
    3f7e:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    3f80:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3f82:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    3f84:    00 4a             	r0 = [r5 + 0]			  ## vm_sfc.c:104:19
    3f86:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    3f88:    08 4a             	[r5 + 0] = r0			  ## vm_sfc.c:105:53
    3f8a:    a7 70             	r7 = 10			  ## vm_sfc.c:105:53
    3f8c:    1f 02             	[sp+4] = r7
    3f8e:    60 73             	r0 = 54			  ## vm_sfc.c:1180:5
    3f90:    86 17             	call -244 <spi_soft_writebyte : 3e9e >			  ## vm_sfc.c:1180:5
    3f92:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    3f94:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3f96:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    3f98:    00 f4 08 59       	[r5 + 0] |= 8			  ## vm_sfc.c:104:19
    3f9c:    4f 02             	[sp+16] = r7
    3f9e:    0e 48             	[r4 + 0] = r6			  ## vm_sfc.c:1167:20
    3fa0:    c1 f4 00 49       	[r4 + 4] = 0			  ## vm_sfc.c:1168:20
    3fa4:    c2 f4 08 49       	[r4 + 8] = 8			  ## vm_sfc.c:1169:20
    3fa8:    c0 f4 11 49       	[r4 + 0] = 17			  ## vm_sfc.c:1170:20
    3fac:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:1171:24
    3fae:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:1171:39
    3fb0:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <ze_entry_tm+0x5A : 3fac >			  ## vm_sfc.c:1171:5
    3fb4:    0e 48             	[r4 + 0] = r6			  ## vm_sfc.c:1172:20
    3fb6:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    3fb8:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3fba:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    3fbc:    00 4a             	r0 = [r5 + 0]			  ## vm_sfc.c:104:19
    3fbe:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    3fc0:    08 4a             	[r5 + 0] = r0			  ## vm_sfc.c:105:53
    3fc2:    5f 02             	[sp+20] = r7
    3fc4:    70 7d             	r0 = 215			  ## vm_sfc.c:1184:5
    3fc6:    6b 17             	call -298 <spi_soft_writebyte : 3e9e >			  ## vm_sfc.c:1184:5
    3fc8:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    3fca:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3fcc:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    3fce:    00 f4 08 59       	[r5 + 0] |= 8			  ## vm_sfc.c:104:19
    3fd2:    3f 02             	[sp+12] = r7
    3fd4:    0e 48             	[r4 + 0] = r6			  ## vm_sfc.c:1167:20
    3fd6:    c1 f4 00 49       	[r4 + 4] = 0			  ## vm_sfc.c:1168:20
    3fda:    c2 f4 08 49       	[r4 + 8] = 8			  ## vm_sfc.c:1169:20
    3fde:    c0 f4 11 49       	[r4 + 0] = 17			  ## vm_sfc.c:1170:20
    3fe2:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:1171:24
    3fe4:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:1171:39
    3fe6:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <ze_entry_tm+0x90 : 3fe2 >			  ## vm_sfc.c:1171:5
    3fea:    0e 48             	[r4 + 0] = r6			  ## vm_sfc.c:1172:20
    3fec:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    3fee:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3ff0:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    3ff2:    00 4a             	r0 = [r5 + 0]			  ## vm_sfc.c:104:19
    3ff4:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    3ff6:    08 4a             	[r5 + 0] = r0			  ## vm_sfc.c:105:53
    3ff8:    2f 02             	[sp+8] = r7
    3ffa:    00 7a             	r0 = 160			  ## vm_sfc.c:1188:5
    3ffc:    50 17             	call -352 <spi_soft_writebyte : 3e9e >			  ## vm_sfc.c:1188:5
    3ffe:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    4000:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    4002:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    4004:    00 f4 08 59       	[r5 + 0] |= 8			  ## vm_sfc.c:104:19
    4008:    0f 02             	[sp] = r7
    400a:    0e 48             	[r4 + 0] = r6			  ## vm_sfc.c:1167:20
    400c:    c1 f4 00 49       	[r4 + 4] = 0			  ## vm_sfc.c:1168:20
    4010:    c2 f4 08 49       	[r4 + 8] = 8			  ## vm_sfc.c:1169:20
    4014:    c0 f4 11 49       	[r4 + 0] = 17			  ## vm_sfc.c:1170:20
    4018:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:1171:24
    401a:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:1171:39
    401c:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <ze_entry_tm+0xC6 : 4018 >			  ## vm_sfc.c:1171:5
    4020:    c0 f4 40 4a       	[r4 + 0] = 16384			  ## vm_sfc.c:1172:20
    4024:    0c 0a             	sp += 24			  ## vm_sfc.c:1172:20
    4026:    57 01             	{pc, r7-r4} = [sp++]			  ## vm_sfc.c:1191:1


ze_exit_tm:
    4028:    78 01             	[--sp] = {rets, r8-r4}			  ## vm_sfc.c:1194:0
    402a:    f4 0b             	sp += -24			  ## vm_sfc.c:1194:0
    402c:    c4 ff 00 04 1e 00 	r4 = 1967104 <uECC_vli_cmp_unsafe+0xD9404 : 1e0400 >			  ## vm_sfc.c:1194:0
    4032:    c0 f4 40 4a       	[r4 + 0] = 16384			  ## vm_sfc.c:1167:20
    4036:    c1 f4 00 49       	[r4 + 4] = 0			  ## vm_sfc.c:1168:20
    403a:    c2 f4 08 49       	[r4 + 8] = 8			  ## vm_sfc.c:1169:20
    403e:    c0 f4 11 49       	[r4 + 0] = 17			  ## vm_sfc.c:1170:20
    4042:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:1171:24
    4044:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:1171:39
    4046:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <ze_exit_tm+0x1A : 4042 >			  ## vm_sfc.c:1171:5
    404a:    06 fb 00 40       	r6 = 16384 <ze_entry_tm+0xAE : 4000 >			  ## vm_sfc.c:1172:20
    404e:    0e 48             	[r4 + 0] = r6			  ## vm_sfc.c:1172:20
    4050:    45 fc 00 4f       	r5 = r4 + 20224
    4054:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    4056:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    4058:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    405a:    00 4a             	r0 = [r5 + 0]			  ## vm_sfc.c:104:19
    405c:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    405e:    08 4a             	[r5 + 0] = r0			  ## vm_sfc.c:105:53
    4060:    a7 70             	r7 = 10			  ## vm_sfc.c:105:53
    4062:    1f 02             	[sp+4] = r7
    4064:    f0 70             	r0 = 15			  ## vm_sfc.c:1198:5
    4066:    1b 17             	call -458 <spi_soft_writebyte : 3e9e >			  ## vm_sfc.c:1198:5
    4068:    00 70             	r0 = 0			  ## vm_sfc.c:1199:5
    406a:    08 70             	r8 = 0			  ## vm_sfc.c:1199:5
    406c:    18 17             	call -464 <spi_soft_writebyte : 3e9e >			  ## vm_sfc.c:1199:5
    406e:    00 70             	r0 = 0			  ## vm_sfc.c:1200:5
    4070:    16 17             	call -468 <spi_soft_writebyte : 3e9e >			  ## vm_sfc.c:1200:5
    4072:    30 70             	r0 = 3			  ## vm_sfc.c:1201:5
    4074:    14 17             	call -472 <spi_soft_writebyte : 3e9e >			  ## vm_sfc.c:1201:5
    4076:    00 70             	r0 = 0			  ## vm_sfc.c:1202:5
    4078:    12 17             	call -476 <spi_soft_writebyte : 3e9e >			  ## vm_sfc.c:1202:5
    407a:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    407c:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    407e:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    4080:    00 f4 08 59       	[r5 + 0] |= 8			  ## vm_sfc.c:104:19
    4084:    4f 02             	[sp+16] = r7
    4086:    0e 48             	[r4 + 0] = r6			  ## vm_sfc.c:1167:20
    4088:    18 f6 04 40       	[r4 + 4] = r8			  ## vm_sfc.c:1168:20
    408c:    c2 f4 08 49       	[r4 + 8] = 8			  ## vm_sfc.c:1169:20
    4090:    c0 f4 11 49       	[r4 + 0] = 17			  ## vm_sfc.c:1170:20
    4094:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:1171:24
    4096:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:1171:39
    4098:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <ze_exit_tm+0x6C : 4094 >			  ## vm_sfc.c:1171:5
    409c:    0e 48             	[r4 + 0] = r6			  ## vm_sfc.c:1172:20
    409e:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    40a0:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    40a2:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    40a4:    00 4a             	r0 = [r5 + 0]			  ## vm_sfc.c:104:19
    40a6:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    40a8:    08 4a             	[r5 + 0] = r0			  ## vm_sfc.c:105:53
    40aa:    5f 02             	[sp+20] = r7
    40ac:    f0 70             	r0 = 15			  ## vm_sfc.c:1206:5
    40ae:    f7 16             	call -530 <spi_soft_writebyte : 3e9e >			  ## vm_sfc.c:1206:5
    40b0:    00 70             	r0 = 0			  ## vm_sfc.c:1207:5
    40b2:    f5 16             	call -534 <spi_soft_writebyte : 3e9e >			  ## vm_sfc.c:1207:5
    40b4:    00 70             	r0 = 0			  ## vm_sfc.c:1208:5
    40b6:    f3 16             	call -538 <spi_soft_writebyte : 3e9e >			  ## vm_sfc.c:1208:5
    40b8:    10 70             	r0 = 1			  ## vm_sfc.c:1209:5
    40ba:    f1 16             	call -542 <spi_soft_writebyte : 3e9e >			  ## vm_sfc.c:1209:5
    40bc:    00 70             	r0 = 0			  ## vm_sfc.c:1210:5
    40be:    ef 16             	call -546 <spi_soft_writebyte : 3e9e >			  ## vm_sfc.c:1210:5
    40c0:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    40c2:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    40c4:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    40c6:    00 f4 08 59       	[r5 + 0] |= 8			  ## vm_sfc.c:104:19
    40ca:    3f 02             	[sp+12] = r7
    40cc:    0e 48             	[r4 + 0] = r6			  ## vm_sfc.c:1167:20
    40ce:    18 f6 04 40       	[r4 + 4] = r8			  ## vm_sfc.c:1168:20
    40d2:    c2 f4 08 49       	[r4 + 8] = 8			  ## vm_sfc.c:1169:20
    40d6:    c0 f4 11 49       	[r4 + 0] = 17			  ## vm_sfc.c:1170:20
    40da:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:1171:24
    40dc:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:1171:39
    40de:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <ze_exit_tm+0xB2 : 40da >			  ## vm_sfc.c:1171:5
    40e2:    0e 48             	[r4 + 0] = r6			  ## vm_sfc.c:1172:20
    40e4:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    40e6:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    40e8:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    40ea:    00 4a             	r0 = [r5 + 0]			  ## vm_sfc.c:104:19
    40ec:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    40ee:    08 4a             	[r5 + 0] = r0			  ## vm_sfc.c:105:53
    40f0:    2f 02             	[sp+8] = r7
    40f2:    80 71             	r0 = 24			  ## vm_sfc.c:1214:5
    40f4:    d4 16             	call -600 <spi_soft_writebyte : 3e9e >			  ## vm_sfc.c:1214:5
    40f6:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    40f8:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    40fa:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    40fc:    00 f4 08 59       	[r5 + 0] |= 8			  ## vm_sfc.c:104:19
    4100:    0f 02             	[sp] = r7
    4102:    0e 48             	[r4 + 0] = r6			  ## vm_sfc.c:1167:20
    4104:    c1 f4 00 49       	[r4 + 4] = 0			  ## vm_sfc.c:1168:20
    4108:    c2 f4 08 49       	[r4 + 8] = 8			  ## vm_sfc.c:1169:20
    410c:    c0 f4 11 49       	[r4 + 0] = 17			  ## vm_sfc.c:1170:20
    4110:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:1171:24
    4112:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:1171:39
    4114:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <ze_exit_tm+0xE8 : 4110 >			  ## vm_sfc.c:1171:5
    4118:    c0 f4 40 4a       	[r4 + 0] = 16384			  ## vm_sfc.c:1172:20
    411c:    0c 0a             	sp += 24			  ## vm_sfc.c:1172:20
    411e:    58 01             	{pc, r8-r4} = [sp++]			  ## vm_sfc.c:1217:1


spi_soft_readbyte:
    4120:    75 01             	[--sp] = {rets, r5, r4}			  ## vm_sfc.c:195:0
    4122:    c0 ff 00 53 1e 00 	r0 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:195:0
    4128:    02 f4 04 09       	[r0 + 8] |= 4			  ## vm_sfc.c:198:20
    412c:    81 70             	r1 = 8
    412e:    00 f4 01 09       	[r0 + 0] |= 1			  ## vm_sfc.c:200:25
    4132:    13 40             	r3 = [r0 + 4]			  ## vm_sfc.c:202:13
    4134:    04 40             	r4 = [r0 + 0]			  ## vm_sfc.c:205:25
    4136:    25 08             	r5 = r2			  ## vm_sfc.c:205:25
    4138:    32 fd 01 49       	r2 = r4 & 4294967294			  ## vm_sfc.c:205:25
    413c:    0a 40             	[r0 + 0] = r2			  ## vm_sfc.c:205:25
    413e:    81 fd 10 23       	r2 = uextra(r3, p:2, l:1)			  ## vm_sfc.c:202:13
    4142:    f1 8f             	r1 += -1			  ## vm_sfc.c:199:19
    4144:    df fd 08 25       	r2 <= insert(r5, p:1, l:31)			  ## vm_sfc.c:202:13
    4148:    61 ff ff 19 f0 ff 	if ((r1 & 255) != 0) goto -32 <spi_soft_readbyte+0xE : 412e >			  ## vm_sfc.c:199:5
    414e:    80 04             	r0 = r2.b0 (u)			  ## vm_sfc.c:207:5
    4150:    55 01             	{pc, r5, r4} = [sp++]			  ## vm_sfc.c:207:5


ze_flash_cam_patch:
    4152:    7e 01             	[--sp] = {rets, r14-r4}			  ## vm_sfc.c:1221:0
    4154:    f0 0b             	sp += -32			  ## vm_sfc.c:1221:0
    4156:    fd 16             	call -518 <ze_entry_tm : 3f52 >			  ## vm_sfc.c:1224:5
    4158:    c4 ff 00 04 1e 00 	r4 = 1967104 <uECC_vli_cmp_unsafe+0xD9404 : 1e0400 >
    415e:    c0 f4 40 4a       	[r4 + 0] = 16384			  ## vm_sfc.c:1167:20
    4162:    c1 f4 00 49       	[r4 + 4] = 0			  ## vm_sfc.c:1168:20
    4166:    c2 f4 08 49       	[r4 + 8] = 8			  ## vm_sfc.c:1169:20
    416a:    c0 f4 11 49       	[r4 + 0] = 17			  ## vm_sfc.c:1170:20
    416e:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:1171:24
    4170:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:1171:39
    4172:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <ze_flash_cam_patch+0x1C : 416e >			  ## vm_sfc.c:1171:5
    4176:    06 fb 00 40       	r6 = 16384 <ze_entry_tm+0xAE : 4000 >			  ## vm_sfc.c:1172:20
    417a:    0e 48             	[r4 + 0] = r6			  ## vm_sfc.c:1172:20
    417c:    45 fc 00 4f       	r5 = r4 + 20224
    4180:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    4182:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    4184:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    4186:    00 4a             	r0 = [r5 + 0]			  ## vm_sfc.c:104:19
    4188:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    418a:    08 4a             	[r5 + 0] = r0			  ## vm_sfc.c:105:53
    418c:    a7 70             	r7 = 10			  ## vm_sfc.c:105:53
    418e:    1f 02             	[sp+4] = r7
    4190:    f0 70             	r0 = 15			  ## vm_sfc.c:1229:5
    4192:    85 16             	call -758 <spi_soft_writebyte : 3e9e >			  ## vm_sfc.c:1229:5
    4194:    00 70             	r0 = 0			  ## vm_sfc.c:1230:5
    4196:    08 70             	r8 = 0			  ## vm_sfc.c:1230:5
    4198:    82 16             	call -764 <spi_soft_writebyte : 3e9e >			  ## vm_sfc.c:1230:5
    419a:    00 70             	r0 = 0			  ## vm_sfc.c:1231:5
    419c:    80 16             	call -768 <spi_soft_writebyte : 3e9e >			  ## vm_sfc.c:1231:5
    419e:    30 70             	r0 = 3			  ## vm_sfc.c:1232:5
    41a0:    7e 16             	call -772 <spi_soft_writebyte : 3e9e >			  ## vm_sfc.c:1232:5
    41a2:    00 74             	r0 = 64			  ## vm_sfc.c:1233:5
    41a4:    7c 16             	call -776 <spi_soft_writebyte : 3e9e >			  ## vm_sfc.c:1233:5
    41a6:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    41a8:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    41aa:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    41ac:    00 f4 08 59       	[r5 + 0] |= 8			  ## vm_sfc.c:104:19
    41b0:    2f 02             	[sp+8] = r7
    41b2:    0e 48             	[r4 + 0] = r6			  ## vm_sfc.c:1167:20
    41b4:    18 f6 04 40       	[r4 + 4] = r8			  ## vm_sfc.c:1168:20
    41b8:    c2 f4 08 49       	[r4 + 8] = 8			  ## vm_sfc.c:1169:20
    41bc:    c0 f4 11 49       	[r4 + 0] = 17			  ## vm_sfc.c:1170:20
    41c0:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:1171:24
    41c2:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:1171:39
    41c4:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <ze_flash_cam_patch+0x6E : 41c0 >			  ## vm_sfc.c:1171:5
    41c8:    69 08             	r9 = r6			  ## vm_sfc.c:1172:20
    41ca:    19 f6 00 40       	[r4 + 0] = r9			  ## vm_sfc.c:1172:20
    41ce:    c6 ff ff ff 01 00 	r6 = 131071 <_IRQ_MEM_ADDR+0x100FF : 1ffff >
    41d4:    ad 70             	r13 = 10
    41d6:    8a 70             	r10 = 8
    41d8:    1b 71             	r11 = 17
    41da:    cc ff 4c 08 00 00 	r12 = 2124 <def_cam : 84c >
    41e0:    20 fb 1e eb       	r14 = 1966080
    41e4:    07 70             	r7 = 0
    41e6:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    41e8:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    41ea:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    41ec:    00 4a             	r0 = [r5 + 0]			  ## vm_sfc.c:104:19
    41ee:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    41f0:    08 4a             	[r5 + 0] = r0			  ## vm_sfc.c:105:53
    41f2:    1d f5 14 00       	[sp+20] = r13
    41f6:    60 70             	r0 = 6			  ## vm_sfc.c:1239:9
    41f8:    52 16             	call -860 <spi_soft_writebyte : 3e9e >			  ## vm_sfc.c:1239:9
    41fa:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    41fc:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    41fe:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    4200:    00 f4 08 59       	[r5 + 0] |= 8			  ## vm_sfc.c:104:19
    4204:    1d f5 18 00       	[sp+24] = r13
    4208:    19 f6 00 40       	[r4 + 0] = r9			  ## vm_sfc.c:1167:20
    420c:    18 f6 04 40       	[r4 + 4] = r8			  ## vm_sfc.c:1168:20
    4210:    1a f6 08 40       	[r4 + 8] = r10			  ## vm_sfc.c:1169:20
    4214:    1b f6 00 40       	[r4 + 0] = r11			  ## vm_sfc.c:1170:20
    4218:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:1171:24
    421a:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:1171:39
    421c:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <ze_flash_cam_patch+0xC6 : 4218 >			  ## vm_sfc.c:1171:5
    4220:    19 f6 00 40       	[r4 + 0] = r9			  ## vm_sfc.c:1172:20
    4224:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    4226:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    4228:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    422a:    00 4a             	r0 = [r5 + 0]			  ## vm_sfc.c:104:19
    422c:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    422e:    08 4a             	[r5 + 0] = r0			  ## vm_sfc.c:105:53
    4230:    1d f5 1c 00       	[sp+28] = r13
    4234:    20 70             	r0 = 2			  ## vm_sfc.c:1245:9
    4236:    33 16             	call -922 <spi_soft_writebyte : 3e9e >			  ## vm_sfc.c:1245:9
    4238:    00 70             	r0 = 0			  ## vm_sfc.c:1246:9
    423a:    31 16             	call -926 <spi_soft_writebyte : 3e9e >			  ## vm_sfc.c:1246:9
    423c:    00 70             	r0 = 0			  ## vm_sfc.c:1247:9
    423e:    2f 16             	call -930 <spi_soft_writebyte : 3e9e >			  ## vm_sfc.c:1247:9
    4240:    c0 05             	r0 = r7.b0 (u)			  ## vm_sfc.c:1248:9
    4242:    2d 16             	call -934 <spi_soft_writebyte : 3e9e >			  ## vm_sfc.c:1248:9
    4244:    00 fa 00 7c       	r0 = b[r7+r12] (u)			  ## vm_sfc.c:1249:9
    4248:    2a 16             	call -940 <spi_soft_writebyte : 3e9e >			  ## vm_sfc.c:1249:9
    424a:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    424c:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    424e:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    4250:    00 f4 08 59       	[r5 + 0] |= 8			  ## vm_sfc.c:104:19
    4254:    1d f5 10 00       	[sp+16] = r13
    4258:    19 f6 00 40       	[r4 + 0] = r9			  ## vm_sfc.c:1167:20
    425c:    18 f6 04 40       	[r4 + 4] = r8			  ## vm_sfc.c:1168:20
    4260:    1a f6 08 40       	[r4 + 8] = r10			  ## vm_sfc.c:1169:20
    4264:    1b f6 00 40       	[r4 + 0] = r11			  ## vm_sfc.c:1170:20
    4268:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:1171:24
    426a:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:1171:39
    426c:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <ze_flash_cam_patch+0x116 : 4268 >			  ## vm_sfc.c:1171:5
    4270:    19 f6 00 40       	[r4 + 0] = r9			  ## vm_sfc.c:1172:20
    4274:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    4276:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    4278:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    427a:    00 4a             	r0 = [r5 + 0]			  ## vm_sfc.c:104:19
    427c:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    427e:    08 4a             	[r5 + 0] = r0			  ## vm_sfc.c:105:53
    4280:    1d f5 0c 00       	[sp+12] = r13
    4284:    05 18             	goto 10 <ze_flash_cam_patch+0x13E : 4290 >
    4286:    f6 8f             	r6 += -1			  ## vm_sfc.c:1263:34
    4288:    03 3c             	if (r6 != 0) goto 6 <ze_flash_cam_patch+0x13E : 4290 >
    428a:    00 f4 10 e9       	[r14 + 0] |= 16			  ## vm_sfc.c:1265:35
    428e:    06 70             	r6 = 0			  ## vm_sfc.c:1265:35
    4290:    50 70             	r0 = 5
    4292:    05 16             	call -1014 <spi_soft_writebyte : 3e9e >
    4294:    45 17             	call -374 <spi_soft_readbyte : 4120 >
    4296:    f7 31             	if (r0 != 0) goto -18 <ze_flash_cam_patch+0x134 : 4286 >
    4298:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    429a:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    429c:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    429e:    00 f4 08 59       	[r5 + 0] |= 8			  ## vm_sfc.c:104:19
    42a2:    1d f5 00 00       	[sp] = r13
    42a6:    19 f6 00 40       	[r4 + 0] = r9			  ## vm_sfc.c:1167:20
    42aa:    18 f6 04 40       	[r4 + 4] = r8			  ## vm_sfc.c:1168:20
    42ae:    1a f6 08 40       	[r4 + 8] = r10			  ## vm_sfc.c:1169:20
    42b2:    1b f6 00 40       	[r4 + 0] = r11			  ## vm_sfc.c:1170:20
    42b6:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:1171:24
    42b8:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:1171:39
    42ba:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <ze_flash_cam_patch+0x164 : 42b6 >			  ## vm_sfc.c:1171:5
    42be:    17 80             	r7 += 1			  ## vm_sfc.c:1237:28
    42c0:    19 f6 00 40       	[r4 + 0] = r9			  ## vm_sfc.c:1172:20
    42c4:    77 e0 8f 1f       	if (r7 != 7) goto -226 <ze_flash_cam_patch+0x94 : 41e6 >			  ## vm_sfc.c:1172:20
    42c8:    af 16             	call -674 <ze_exit_tm : 4028 >			  ## vm_sfc.c:1273:5
    42ca:    10 0a             	sp += 32			  ## vm_sfc.c:1273:5
    42cc:    5e 01             	{pc, r14-r4} = [sp++]			  ## vm_sfc.c:1275:1


check_flash_type:
    42ce:    78 01             	[--sp] = {rets, r8-r4}			  ## vm_sfc.c:1280:0
    42d0:    f8 0b             	sp += -16			  ## vm_sfc.c:1280:0
    42d2:    c0 ff a0 22 00 00 	r0 = 8864 <_sdfile_handl : 22a0 >			  ## vm_sfc.c:1281:21
    42d8:    00 f6 ec 00       	r0 = [r0 + 236]			  ## vm_sfc.c:1281:21
    42dc:    c1 ff ed cd a1 ff 	r1 = 4288794093 <uECC_vli_cmp_unsafe+0x1915DF1 : 1a1cded >			  ## vm_sfc.c:1281:43
    42e2:    10 09             	r0 += r1			  ## vm_sfc.c:1281:43
    42e4:    10 e0 57 80       	if (r0 > 1) goto 174 <check_flash_type+0xC8 : 4396 >			  ## vm_sfc.c:1281:43
    42e8:    c4 ff 00 04 1e 00 	r4 = 1967104 <uECC_vli_cmp_unsafe+0xD9404 : 1e0400 >
    42ee:    c0 f4 40 4a       	[r4 + 0] = 16384			  ## vm_sfc.c:1167:20
    42f2:    c1 f4 00 49       	[r4 + 4] = 0			  ## vm_sfc.c:1168:20
    42f6:    c2 f4 50 49       	[r4 + 8] = 80			  ## vm_sfc.c:1169:20
    42fa:    c0 f4 11 49       	[r4 + 0] = 17			  ## vm_sfc.c:1170:20
    42fe:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:1171:24
    4300:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:1171:39
    4302:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <check_flash_type+0x30 : 42fe >			  ## vm_sfc.c:1171:5
    4306:    06 fb 00 40       	r6 = 16384 <ze_entry_tm+0xAE : 4000 >			  ## vm_sfc.c:1172:20
    430a:    0e 48             	[r4 + 0] = r6			  ## vm_sfc.c:1172:20
    430c:    22 17             	call -444 <ze_flash_cam_patch : 4152 >			  ## vm_sfc.c:1285:9
    430e:    21 16             	call -958 <ze_entry_tm : 3f52 >			  ## vm_sfc.c:1287:9
    4310:    45 fc 00 4f       	r5 = r4 + 20224
    4314:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    4316:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    4318:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    431a:    00 4a             	r0 = [r5 + 0]			  ## vm_sfc.c:104:19
    431c:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    431e:    08 4a             	[r5 + 0] = r0			  ## vm_sfc.c:105:53
    4320:    a7 70             	r7 = 10			  ## vm_sfc.c:105:53
    4322:    1f 02             	[sp+4] = r7
    4324:    f0 70             	r0 = 15			  ## vm_sfc.c:1290:9
    4326:    bb 15             	call -1162 <spi_soft_writebyte : 3e9e >			  ## vm_sfc.c:1290:9
    4328:    00 70             	r0 = 0			  ## vm_sfc.c:1291:9
    432a:    08 70             	r8 = 0			  ## vm_sfc.c:1291:9
    432c:    b8 15             	call -1168 <spi_soft_writebyte : 3e9e >			  ## vm_sfc.c:1291:9
    432e:    00 70             	r0 = 0			  ## vm_sfc.c:1292:9
    4330:    b6 15             	call -1172 <spi_soft_writebyte : 3e9e >			  ## vm_sfc.c:1292:9
    4332:    20 70             	r0 = 2			  ## vm_sfc.c:1293:9
    4334:    b4 15             	call -1176 <spi_soft_writebyte : 3e9e >			  ## vm_sfc.c:1293:9
    4336:    00 77             	r0 = 112			  ## vm_sfc.c:1294:9
    4338:    b2 15             	call -1180 <spi_soft_writebyte : 3e9e >			  ## vm_sfc.c:1294:9
    433a:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    433c:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    433e:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    4340:    00 f4 08 59       	[r5 + 0] |= 8			  ## vm_sfc.c:104:19
    4344:    3f 02             	[sp+12] = r7
    4346:    0e 48             	[r4 + 0] = r6			  ## vm_sfc.c:1167:20
    4348:    18 f6 04 40       	[r4 + 4] = r8			  ## vm_sfc.c:1168:20
    434c:    c2 f4 10 49       	[r4 + 8] = 16			  ## vm_sfc.c:1169:20
    4350:    c0 f4 11 49       	[r4 + 0] = 17			  ## vm_sfc.c:1170:20
    4354:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:1171:24
    4356:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:1171:39
    4358:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <check_flash_type+0x86 : 4354 >			  ## vm_sfc.c:1171:5
    435c:    0e 48             	[r4 + 0] = r6			  ## vm_sfc.c:1172:20
    435e:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    4360:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    4362:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    4364:    00 4a             	r0 = [r5 + 0]			  ## vm_sfc.c:104:19
    4366:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    4368:    08 4a             	[r5 + 0] = r0			  ## vm_sfc.c:105:53
    436a:    2f 02             	[sp+8] = r7
    436c:    80 71             	r0 = 24			  ## vm_sfc.c:1299:9
    436e:    97 15             	call -1234 <spi_soft_writebyte : 3e9e >			  ## vm_sfc.c:1299:9
    4370:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    4372:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    4374:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    4376:    00 f4 08 59       	[r5 + 0] |= 8			  ## vm_sfc.c:104:19
    437a:    0f 02             	[sp] = r7
    437c:    0e 48             	[r4 + 0] = r6			  ## vm_sfc.c:1167:20
    437e:    c1 f4 00 49       	[r4 + 4] = 0			  ## vm_sfc.c:1168:20
    4382:    c2 f4 10 49       	[r4 + 8] = 16			  ## vm_sfc.c:1169:20
    4386:    c0 f4 11 49       	[r4 + 0] = 17			  ## vm_sfc.c:1170:20
    438a:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:1171:24
    438c:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:1171:39
    438e:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <check_flash_type+0xBC : 438a >			  ## vm_sfc.c:1171:5
    4392:    c0 f4 40 4a       	[r4 + 0] = 16384			  ## vm_sfc.c:1172:20
    4396:    08 0a             	sp += 16
    4398:    58 01             	{pc, r8-r4} = [sp++]			  ## vm_sfc.c:1303:1


check_ze_flash_id:
    439a:    74 01             	[--sp] = {rets, r4}			  ## vm_sfc.c:1308:0
    439c:    c4 ff a0 22 00 00 	r4 = 8864 <_sdfile_handl : 22a0 >			  ## vm_sfc.c:1308:0
    43a2:    00 f6 ec 40       	r0 = [r4 + 236]			  ## vm_sfc.c:1309:20
    43a6:    04 30             	if (r0 != 0) goto 8 <check_ze_flash_id+0x16 : 43b0 >			  ## vm_sfc.c:1309:20
    43a8:    bf f3 8c fa       	call -2792 <read_flash_id : 38c4 >			  ## vm_sfc.c:1310:9
    43ac:    00 f6 ec 40       	r0 = [r4 + 236]			  ## vm_sfc.c:1310:9
    43b0:    c1 ff ed cd a1 ff 	r1 = 4288794093 <uECC_vli_cmp_unsafe+0x1915DF1 : 1a1cded >			  ## vm_sfc.c:1312:43
    43b6:    01 09             	r1 += r0			  ## vm_sfc.c:1312:43
    43b8:    10 70             	r0 = 1			  ## vm_sfc.c:1312:43
    43ba:    21 e0 01 30       	if (r1 < 2) goto 2 <check_ze_flash_id+0x26 : 43c0 >			  ## vm_sfc.c:1312:43
    43be:    00 70             	r0 = 0			  ## vm_sfc.c:1312:43
    43c0:    54 01             	{pc, r4} = [sp++]			  ## vm_sfc.c:1317:1


cpu_addr2flash_addr:
    43c2:    c1 ff a0 22 00 00 	r1 = 8864 <_sdfile_handl : 22a0 >			  ## vm_sfc.c:370:0
    43c8:    02 f6 00 11       	r2 = [r1 + 256]			  ## vm_sfc.c:373:27
    43cc:    01 f6 04 11       	r1 = [r1 + 260]			  ## vm_sfc.c:373:68
    43d0:    20 09             	r0 += r2			  ## vm_sfc.c:373:51
    43d2:    60 b0             	r0 = r0 - r1			  ## vm_sfc.c:373:41
    43d4:    20 00             	rts			  ## vm_sfc.c:373:5


enter_continue_mode:
    43d6:    34 00             	[--sp] = rets			  ## vm_sfc.c:860:0
    43d8:    fe 0b             	sp += -4			  ## vm_sfc.c:860:0
    43da:    00 a0             	r0 = sp + 0			  ## vm_sfc.c:860:0
    43dc:    01 70             	r1 = 0			  ## vm_sfc.c:873:5
    43de:    12 70             	r2 = 1			  ## vm_sfc.c:873:5
    43e0:    13 70             	r3 = 1			  ## vm_sfc.c:873:5
    43e2:    bf f3 f8 f8       	call -3600 <__norflash_read : 35d6 >			  ## vm_sfc.c:873:5
    43e6:    02 0a             	sp += 4			  ## vm_sfc.c:873:5
    43e8:    30 00             	pc = [sp++]			  ## vm_sfc.c:875:1


exit_spi_code:
    43ea:    74 01             	[--sp] = {rets, r4}			  ## vm_sfc.c:496:0
    43ec:    04 08             	r4 = r0			  ## vm_sfc.c:496:0
    43ee:    10 70             	r0 = 1			  ## vm_sfc.c:500:5
    43f0:    88 f3 9a 15       	call 1059636 <sfc_resume : 106f28 >			  ## vm_sfc.c:500:5
    43f4:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## vm_sfc.c:385:17
    43fa:    3c 61             	b[r0 + 19] = r4			  ## vm_sfc.c:385:17
    43fc:    c0 ff 00 02 1f 00 	r0 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >			  ## vm_sfc.c:505:29
    4402:    00 40             	r0 = [r0 + 0]			  ## vm_sfc.c:505:29
    4404:    00 70             	r0 = 0			  ## vm_sfc.c:505:29
    4406:    c1 ff 50 56 1e 00 	r1 = 1988176 <uECC_vli_cmp_unsafe+0xDE654 : 1e5650 >
    440c:    08 42             	[r1 + 0] = r0			  ## vm_sfc.c:517:22
    440e:    18 42             	[r1 + 4] = r0			  ## vm_sfc.c:518:22
    4410:    28 42             	[r1 + 8] = r0			  ## vm_sfc.c:519:22
    4412:    11 fc f4 00       	r1 = r1 + 244			  ## vm_sfc.c:519:22
    4416:    08 42             	[r1 + 0] = r0			  ## vm_sfc.c:520:26
    4418:    18 42             	[r1 + 4] = r0			  ## vm_sfc.c:521:26
    441a:    14 01             	{rets, r4} = [sp++]			  ## vm_sfc.c:530:5
    441c:    c8 f3 bc 14       	goto 1059192 <local_irq_enable : 106d98 >			  ## vm_sfc.c:530:5


flash_enter_2bit_mode_by_spi_soft:
    4420:    74 01             	[--sp] = {rets, r4}			  ## vm_sfc.c:827:0
    4422:    fc 0b             	sp += -8			  ## vm_sfc.c:827:0
    4424:    c4 ff 00 53 1e 00 	r4 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:827:0
    442a:    20 48             	r0 = [r4 + 8]			  ## vm_sfc.c:104:19
    442c:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    442e:    28 48             	[r4 + 8] = r0			  ## vm_sfc.c:104:19
    4430:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:104:19
    4432:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    4434:    08 48             	[r4 + 0] = r0			  ## vm_sfc.c:105:53
    4436:    a0 70             	r0 = 10			  ## vm_sfc.c:105:53
    4438:    08 02             	[sp] = r0
    443a:    b0 7b             	r0 = 187			  ## vm_sfc.c:829:5
    443c:    30 15             	call -1440 <spi_soft_writebyte : 3e9e >			  ## vm_sfc.c:829:5
    443e:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:830:20
    4440:    70 b1             	r0 &= 4294967291			  ## vm_sfc.c:830:20
    4442:    08 48             	[r4 + 0] = r0			  ## vm_sfc.c:830:20
    4444:    20 48             	r0 = [r4 + 8]			  ## vm_sfc.c:831:20
    4446:    70 b1             	r0 &= 4294967291			  ## vm_sfc.c:831:20
    4448:    28 48             	[r4 + 8] = r0			  ## vm_sfc.c:831:20
    444a:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:832:20
    444c:    f0 b0             	r0 &= 4294967293			  ## vm_sfc.c:832:20
    444e:    08 48             	[r4 + 0] = r0			  ## vm_sfc.c:832:20
    4450:    20 48             	r0 = [r4 + 8]			  ## vm_sfc.c:833:20
    4452:    f0 b0             	r0 &= 4294967293			  ## vm_sfc.c:833:20
    4454:    28 48             	[r4 + 8] = r0			  ## vm_sfc.c:833:20
    4456:    01 48             	r1 = [r4 + 0]
    4458:    c0 70             	r0 = 12
    445a:    11 b0             	r1 |= 1			  ## vm_sfc.c:835:25
    445c:    09 48             	[r4 + 0] = r1			  ## vm_sfc.c:835:25
    445e:    01 48             	r1 = [r4 + 0]			  ## vm_sfc.c:836:25
    4460:    71 b0             	r1 &= 4294967294			  ## vm_sfc.c:836:25
    4462:    09 48             	[r4 + 0] = r1			  ## vm_sfc.c:836:25
    4464:    01 48             	r1 = [r4 + 0]			  ## vm_sfc.c:836:25
    4466:    f0 8f             	r0 += -1			  ## vm_sfc.c:834:22
    4468:    61 ff ff 09 f6 ff 	if ((r0 & 255) != 0) goto -20 <flash_enter_2bit_mode_by_spi_soft+0x3A : 445a >			  ## vm_sfc.c:834:5
    446e:    30 fd 02 19       	r0 = r1 & 4294967293			  ## vm_sfc.c:838:20
    4472:    08 48             	[r4 + 0] = r0			  ## vm_sfc.c:838:20
    4474:    00 f4 04 49       	[r4 + 0] |= 4			  ## vm_sfc.c:839:20
    4478:    00 f4 01 49       	[r4 + 0] |= 1			  ## vm_sfc.c:840:21
    447c:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:841:21
    447e:    70 b0             	r0 &= 4294967294			  ## vm_sfc.c:841:21
    4480:    08 48             	[r4 + 0] = r0			  ## vm_sfc.c:841:21
    4482:    00 f4 01 49       	[r4 + 0] |= 1			  ## vm_sfc.c:842:21
    4486:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:843:21
    4488:    70 b0             	r0 &= 4294967294			  ## vm_sfc.c:843:21
    448a:    08 48             	[r4 + 0] = r0			  ## vm_sfc.c:843:21
    448c:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:844:20
    448e:    f0 b0             	r0 &= 4294967293			  ## vm_sfc.c:844:20
    4490:    08 48             	[r4 + 0] = r0			  ## vm_sfc.c:844:20
    4492:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:845:20
    4494:    70 b1             	r0 &= 4294967291			  ## vm_sfc.c:845:20
    4496:    08 48             	[r4 + 0] = r0			  ## vm_sfc.c:845:20
    4498:    00 f4 01 49       	[r4 + 0] |= 1			  ## vm_sfc.c:846:21
    449c:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:847:21
    449e:    70 b0             	r0 &= 4294967294			  ## vm_sfc.c:847:21
    44a0:    08 48             	[r4 + 0] = r0			  ## vm_sfc.c:847:21
    44a2:    00 f4 01 49       	[r4 + 0] |= 1			  ## vm_sfc.c:848:21
    44a6:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:849:21
    44a8:    70 b0             	r0 &= 4294967294			  ## vm_sfc.c:849:21
    44aa:    08 48             	[r4 + 0] = r0			  ## vm_sfc.c:849:21
    44ac:    02 f4 04 49       	[r4 + 8] |= 4			  ## vm_sfc.c:850:20
    44b0:    80 70             	r0 = 8
    44b2:    00 f4 01 49       	[r4 + 0] |= 1			  ## vm_sfc.c:852:25
    44b6:    01 48             	r1 = [r4 + 0]			  ## vm_sfc.c:853:25
    44b8:    71 b0             	r1 &= 4294967294			  ## vm_sfc.c:853:25
    44ba:    f0 8f             	r0 += -1			  ## vm_sfc.c:851:22
    44bc:    09 48             	[r4 + 0] = r1			  ## vm_sfc.c:853:25
    44be:    61 ff ff 09 f7 ff 	if ((r0 & 255) != 0) goto -18 <flash_enter_2bit_mode_by_spi_soft+0x92 : 44b2 >			  ## vm_sfc.c:851:5
    44c4:    20 48             	r0 = [r4 + 8]			  ## vm_sfc.c:104:19
    44c6:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    44c8:    28 48             	[r4 + 8] = r0			  ## vm_sfc.c:104:19
    44ca:    00 f4 08 49       	[r4 + 0] |= 8			  ## vm_sfc.c:104:19
    44ce:    a0 70             	r0 = 10			  ## vm_sfc.c:104:19
    44d0:    18 02             	[sp+4] = r0
    44d2:    04 0a             	sp += 8
    44d4:    54 01             	{pc, r4} = [sp++]			  ## vm_sfc.c:856:1


flash_enter_4bit_mode_by_spi_soft:
    44d6:    74 01             	[--sp] = {rets, r4}			  ## vm_sfc.c:787:0
    44d8:    fc 0b             	sp += -8			  ## vm_sfc.c:787:0
    44da:    c4 ff 00 53 1e 00 	r4 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:787:0
    44e0:    20 48             	r0 = [r4 + 8]			  ## vm_sfc.c:104:19
    44e2:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    44e4:    28 48             	[r4 + 8] = r0			  ## vm_sfc.c:104:19
    44e6:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:104:19
    44e8:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    44ea:    08 48             	[r4 + 0] = r0			  ## vm_sfc.c:105:53
    44ec:    a0 70             	r0 = 10			  ## vm_sfc.c:105:53
    44ee:    08 02             	[sp] = r0
    44f0:    b0 7e             	r0 = 235			  ## vm_sfc.c:789:5
    44f2:    d5 14             	call -1622 <spi_soft_writebyte : 3e9e >			  ## vm_sfc.c:789:5
    44f4:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:790:20
    44f6:    70 b1             	r0 &= 4294967291			  ## vm_sfc.c:790:20
    44f8:    08 48             	[r4 + 0] = r0			  ## vm_sfc.c:790:20
    44fa:    20 48             	r0 = [r4 + 8]			  ## vm_sfc.c:791:20
    44fc:    70 b1             	r0 &= 4294967291			  ## vm_sfc.c:791:20
    44fe:    28 48             	[r4 + 8] = r0			  ## vm_sfc.c:791:20
    4500:    40 fc 00 fe       	r0 = r4 + -512			  ## vm_sfc.c:791:20
    4504:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:792:20
    4506:    f1 b4             	r1 &= 4294966783			  ## vm_sfc.c:792:20
    4508:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:792:20
    450a:    21 40             	r1 = [r0 + 8]			  ## vm_sfc.c:793:20
    450c:    f1 b4             	r1 &= 4294966783			  ## vm_sfc.c:793:20
    450e:    29 40             	[r0 + 8] = r1			  ## vm_sfc.c:793:20
    4510:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:794:20
    4512:    71 b4             	r1 &= 4294967039			  ## vm_sfc.c:794:20
    4514:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:794:20
    4516:    21 40             	r1 = [r0 + 8]			  ## vm_sfc.c:795:20
    4518:    71 b4             	r1 &= 4294967039			  ## vm_sfc.c:795:20
    451a:    29 40             	[r0 + 8] = r1			  ## vm_sfc.c:795:20
    451c:    01 48             	r1 = [r4 + 0]			  ## vm_sfc.c:796:20
    451e:    f1 b0             	r1 &= 4294967293			  ## vm_sfc.c:796:20
    4520:    09 48             	[r4 + 0] = r1			  ## vm_sfc.c:796:20
    4522:    21 48             	r1 = [r4 + 8]			  ## vm_sfc.c:797:20
    4524:    f1 b0             	r1 &= 4294967293			  ## vm_sfc.c:797:20
    4526:    29 48             	[r4 + 8] = r1			  ## vm_sfc.c:797:20
    4528:    02 48             	r2 = [r4 + 0]
    452a:    61 70             	r1 = 6
    452c:    12 b0             	r2 |= 1			  ## vm_sfc.c:799:25
    452e:    0a 48             	[r4 + 0] = r2			  ## vm_sfc.c:799:25
    4530:    02 48             	r2 = [r4 + 0]			  ## vm_sfc.c:800:25
    4532:    72 b0             	r2 &= 4294967294			  ## vm_sfc.c:800:25
    4534:    0a 48             	[r4 + 0] = r2			  ## vm_sfc.c:800:25
    4536:    02 48             	r2 = [r4 + 0]			  ## vm_sfc.c:800:25
    4538:    f1 8f             	r1 += -1			  ## vm_sfc.c:798:22
    453a:    61 ff ff 19 f6 ff 	if ((r1 & 255) != 0) goto -20 <flash_enter_4bit_mode_by_spi_soft+0x56 : 452c >			  ## vm_sfc.c:798:5
    4540:    31 fd 02 29       	r1 = r2 & 4294967293			  ## vm_sfc.c:802:20
    4544:    09 48             	[r4 + 0] = r1			  ## vm_sfc.c:802:20
    4546:    00 f4 04 49       	[r4 + 0] |= 4			  ## vm_sfc.c:803:20
    454a:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:804:20
    454c:    f1 b4             	r1 &= 4294966783			  ## vm_sfc.c:804:20
    454e:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:804:20
    4550:    00 f4 01 0a       	[r0 + 0] |= 256			  ## vm_sfc.c:805:20
    4554:    00 f4 01 49       	[r4 + 0] |= 1			  ## vm_sfc.c:806:21
    4558:    01 48             	r1 = [r4 + 0]			  ## vm_sfc.c:807:21
    455a:    71 b0             	r1 &= 4294967294			  ## vm_sfc.c:807:21
    455c:    09 48             	[r4 + 0] = r1			  ## vm_sfc.c:807:21
    455e:    01 48             	r1 = [r4 + 0]			  ## vm_sfc.c:808:20
    4560:    f1 b0             	r1 &= 4294967293			  ## vm_sfc.c:808:20
    4562:    09 48             	[r4 + 0] = r1			  ## vm_sfc.c:808:20
    4564:    01 48             	r1 = [r4 + 0]			  ## vm_sfc.c:809:20
    4566:    71 b1             	r1 &= 4294967291			  ## vm_sfc.c:809:20
    4568:    09 48             	[r4 + 0] = r1			  ## vm_sfc.c:809:20
    456a:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:810:20
    456c:    f1 b4             	r1 &= 4294966783			  ## vm_sfc.c:810:20
    456e:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:810:20
    4570:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:811:20
    4572:    71 b4             	r1 &= 4294967039			  ## vm_sfc.c:811:20
    4574:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:811:20
    4576:    00 f4 01 49       	[r4 + 0] |= 1			  ## vm_sfc.c:812:21
    457a:    01 48             	r1 = [r4 + 0]			  ## vm_sfc.c:813:21
    457c:    71 b0             	r1 &= 4294967294			  ## vm_sfc.c:813:21
    457e:    09 48             	[r4 + 0] = r1			  ## vm_sfc.c:813:21
    4580:    02 f4 04 49       	[r4 + 8] |= 4			  ## vm_sfc.c:814:20
    4584:    00 f4 02 0a       	[r0 + 0] |= 512			  ## vm_sfc.c:815:20
    4588:    00 f4 01 0a       	[r0 + 0] |= 256			  ## vm_sfc.c:816:20
    458c:    80 70             	r0 = 8
    458e:    00 f4 01 49       	[r4 + 0] |= 1			  ## vm_sfc.c:818:25
    4592:    01 48             	r1 = [r4 + 0]			  ## vm_sfc.c:819:25
    4594:    71 b0             	r1 &= 4294967294			  ## vm_sfc.c:819:25
    4596:    f0 8f             	r0 += -1			  ## vm_sfc.c:817:22
    4598:    09 48             	[r4 + 0] = r1			  ## vm_sfc.c:819:25
    459a:    61 ff ff 09 f7 ff 	if ((r0 & 255) != 0) goto -18 <flash_enter_4bit_mode_by_spi_soft+0xB8 : 458e >			  ## vm_sfc.c:817:5
    45a0:    20 48             	r0 = [r4 + 8]			  ## vm_sfc.c:104:19
    45a2:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    45a4:    28 48             	[r4 + 8] = r0			  ## vm_sfc.c:104:19
    45a6:    00 f4 08 49       	[r4 + 0] |= 8			  ## vm_sfc.c:104:19
    45aa:    a0 70             	r0 = 10			  ## vm_sfc.c:104:19
    45ac:    18 02             	[sp+4] = r0
    45ae:    04 0a             	sp += 8
    45b0:    54 01             	{pc, r4} = [sp++]			  ## vm_sfc.c:822:1


flash_exit_2bit_mode_by_spi_soft:
    45b2:    fc 0b             	sp += -8			  ## vm_sfc.c:740:0
    45b4:    c0 ff 00 53 1e 00 	r0 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:740:0
    45ba:    21 40             	r1 = [r0 + 8]			  ## vm_sfc.c:104:19
    45bc:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:104:19
    45be:    29 40             	[r0 + 8] = r1			  ## vm_sfc.c:104:19
    45c0:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:104:19
    45c2:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:105:53
    45c4:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:105:53
    45c6:    a1 70             	r1 = 10			  ## vm_sfc.c:105:53
    45c8:    09 02             	[sp] = r1
    45ca:    00 f4 04 09       	[r0 + 0] |= 4			  ## vm_sfc.c:742:20
    45ce:    21 40             	r1 = [r0 + 8]			  ## vm_sfc.c:743:20
    45d0:    71 b1             	r1 &= 4294967291			  ## vm_sfc.c:743:20
    45d2:    29 40             	[r0 + 8] = r1			  ## vm_sfc.c:743:20
    45d4:    00 f4 02 09       	[r0 + 0] |= 2			  ## vm_sfc.c:744:20
    45d8:    21 40             	r1 = [r0 + 8]			  ## vm_sfc.c:745:20
    45da:    f1 b0             	r1 &= 4294967293			  ## vm_sfc.c:745:20
    45dc:    29 40             	[r0 + 8] = r1			  ## vm_sfc.c:745:20
    45de:    81 70             	r1 = 8
    45e0:    00 f4 01 09       	[r0 + 0] |= 1			  ## vm_sfc.c:747:25
    45e4:    02 40             	r2 = [r0 + 0]			  ## vm_sfc.c:748:25
    45e6:    72 b0             	r2 &= 4294967294			  ## vm_sfc.c:748:25
    45e8:    f1 8f             	r1 += -1			  ## vm_sfc.c:746:22
    45ea:    0a 40             	[r0 + 0] = r2			  ## vm_sfc.c:748:25
    45ec:    61 ff ff 19 f7 ff 	if ((r1 & 255) != 0) goto -18 <flash_exit_2bit_mode_by_spi_soft+0x2E : 45e0 >			  ## vm_sfc.c:746:5
    45f2:    02 f4 04 09       	[r0 + 8] |= 4			  ## vm_sfc.c:750:20
    45f6:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:751:20
    45f8:    f1 b0             	r1 &= 4294967293			  ## vm_sfc.c:751:20
    45fa:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:751:20
    45fc:    21 40             	r1 = [r0 + 8]			  ## vm_sfc.c:104:19
    45fe:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:104:19
    4600:    29 40             	[r0 + 8] = r1			  ## vm_sfc.c:104:19
    4602:    00 f4 08 09       	[r0 + 0] |= 8			  ## vm_sfc.c:104:19
    4606:    a0 70             	r0 = 10			  ## vm_sfc.c:104:19
    4608:    18 02             	[sp+4] = r0
    460a:    04 0a             	sp += 8
    460c:    20 00             	rts			  ## vm_sfc.c:753:1


flash_exit_4bit_mode_by_spi_soft:
    460e:    fc 0b             	sp += -8			  ## vm_sfc.c:719:0
    4610:    c0 ff 00 53 1e 00 	r0 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:719:0
    4616:    21 40             	r1 = [r0 + 8]			  ## vm_sfc.c:104:19
    4618:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:104:19
    461a:    29 40             	[r0 + 8] = r1			  ## vm_sfc.c:104:19
    461c:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:104:19
    461e:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:105:53
    4620:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:105:53
    4622:    a1 70             	r1 = 10			  ## vm_sfc.c:105:53
    4624:    09 02             	[sp] = r1
    4626:    00 f4 04 09       	[r0 + 0] |= 4			  ## vm_sfc.c:721:20
    462a:    21 40             	r1 = [r0 + 8]			  ## vm_sfc.c:722:20
    462c:    71 b1             	r1 &= 4294967291			  ## vm_sfc.c:722:20
    462e:    29 40             	[r0 + 8] = r1			  ## vm_sfc.c:722:20
    4630:    01 fc 00 fe       	r1 = r0 + -512			  ## vm_sfc.c:722:20
    4634:    00 f4 02 1a       	[r1 + 0] |= 512			  ## vm_sfc.c:723:20
    4638:    22 42             	r2 = [r1 + 8]			  ## vm_sfc.c:724:20
    463a:    f2 b4             	r2 &= 4294966783			  ## vm_sfc.c:724:20
    463c:    2a 42             	[r1 + 8] = r2			  ## vm_sfc.c:724:20
    463e:    00 f4 01 1a       	[r1 + 0] |= 256			  ## vm_sfc.c:725:20
    4642:    22 42             	r2 = [r1 + 8]			  ## vm_sfc.c:726:20
    4644:    72 b4             	r2 &= 4294967039			  ## vm_sfc.c:726:20
    4646:    2a 42             	[r1 + 8] = r2			  ## vm_sfc.c:726:20
    4648:    00 f4 02 09       	[r0 + 0] |= 2			  ## vm_sfc.c:727:20
    464c:    21 40             	r1 = [r0 + 8]			  ## vm_sfc.c:728:20
    464e:    f1 b0             	r1 &= 4294967293			  ## vm_sfc.c:728:20
    4650:    29 40             	[r0 + 8] = r1			  ## vm_sfc.c:728:20
    4652:    21 70             	r1 = 2
    4654:    00 f4 01 09       	[r0 + 0] |= 1			  ## vm_sfc.c:730:25
    4658:    02 40             	r2 = [r0 + 0]			  ## vm_sfc.c:731:25
    465a:    72 b0             	r2 &= 4294967294			  ## vm_sfc.c:731:25
    465c:    f1 8f             	r1 += -1			  ## vm_sfc.c:729:22
    465e:    0a 40             	[r0 + 0] = r2			  ## vm_sfc.c:731:25
    4660:    61 ff ff 19 f7 ff 	if ((r1 & 255) != 0) goto -18 <flash_exit_4bit_mode_by_spi_soft+0x46 : 4654 >			  ## vm_sfc.c:729:5
    4666:    02 f4 04 09       	[r0 + 8] |= 4			  ## vm_sfc.c:733:20
    466a:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:734:20
    466c:    f1 b0             	r1 &= 4294967293			  ## vm_sfc.c:734:20
    466e:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:734:20
    4670:    21 40             	r1 = [r0 + 8]			  ## vm_sfc.c:104:19
    4672:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:104:19
    4674:    29 40             	[r0 + 8] = r1			  ## vm_sfc.c:104:19
    4676:    00 f4 08 09       	[r0 + 0] |= 8			  ## vm_sfc.c:104:19
    467a:    a0 70             	r0 = 10			  ## vm_sfc.c:104:19
    467c:    18 02             	[sp+4] = r0
    467e:    04 0a             	sp += 8
    4680:    20 00             	rts			  ## vm_sfc.c:736:1


load_spi_code2cache:
    4682:    20 00             	rts			  ## vm_sfc.c:398:0


norflash_entry_sleep:
    4684:    75 01             	[--sp] = {rets, r5, r4}			  ## vm_sfc.c:1323:0
    4686:    fa 0b             	sp += -12			  ## vm_sfc.c:1323:0
    4688:    bf f3 de f6       	call -4676 <enter_spi_code : 3448 >			  ## vm_sfc.c:1324:5
    468c:    bf f3 e4 f8       	call -3640 <exit_continue_mode : 3858 >			  ## vm_sfc.c:1325:21
    4690:    c4 ff 00 53 1e 00 	r4 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:1325:21
    4696:    21 48             	r1 = [r4 + 8]			  ## vm_sfc.c:104:19
    4698:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:104:19
    469a:    29 48             	[r4 + 8] = r1			  ## vm_sfc.c:104:19
    469c:    01 48             	r1 = [r4 + 0]			  ## vm_sfc.c:104:19
    469e:    03 08             	r3 = r0			  ## vm_sfc.c:1325:21
    46a0:    30 fd 08 19       	r0 = r1 & 4294967287			  ## vm_sfc.c:105:53
    46a4:    08 48             	[r4 + 0] = r0			  ## vm_sfc.c:105:53
    46a6:    a5 70             	r5 = 10			  ## vm_sfc.c:105:53
    46a8:    0d 02             	[sp] = r5
    46aa:    90 7b             	r0 = 185			  ## vm_sfc.c:1328:5
    46ac:    bf f3 eb f6       	call -4650 <spi_writebyte : 3486 >			  ## vm_sfc.c:1328:5
    46b0:    20 48             	r0 = [r4 + 8]			  ## vm_sfc.c:104:19
    46b2:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    46b4:    28 48             	[r4 + 8] = r0			  ## vm_sfc.c:104:19
    46b6:    00 f4 08 49       	[r4 + 0] |= 8			  ## vm_sfc.c:104:19
    46ba:    1d 02             	[sp+4] = r5
    46bc:    06 26             	if (r3 == 0) goto 12 <norflash_entry_sleep+0x46 : 46ca >
    46be:    80 a0             	r0 = sp + 8
    46c0:    01 70             	r1 = 0			  ## vm_sfc.c:873:5
    46c2:    12 70             	r2 = 1			  ## vm_sfc.c:873:5
    46c4:    13 70             	r3 = 1			  ## vm_sfc.c:873:5
    46c6:    bf f3 86 f7       	call -4340 <__norflash_read : 35d6 >			  ## vm_sfc.c:873:5
    46ca:    10 70             	r0 = 1			  ## vm_sfc.c:500:5
    46cc:    88 f3 2c 14       	call 1058904 <sfc_resume : 106f28 >			  ## vm_sfc.c:500:5
    46d0:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## vm_sfc.c:385:17
    46d6:    01 70             	r1 = 0			  ## vm_sfc.c:385:17
    46d8:    39 61             	b[r0 + 19] = r1			  ## vm_sfc.c:385:17
    46da:    40 fb af 4a       	r0 = r4 + 44800			  ## vm_sfc.c:505:29
    46de:    00 40             	r0 = [r0 + 0]			  ## vm_sfc.c:505:29
    46e0:    40 fc 50 03       	r0 = r4 + 848
    46e4:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:517:22
    46e6:    19 40             	[r0 + 4] = r1			  ## vm_sfc.c:518:22
    46e8:    29 40             	[r0 + 8] = r1			  ## vm_sfc.c:519:22
    46ea:    00 fc f4 00       	r0 = r0 + 244			  ## vm_sfc.c:519:22
    46ee:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:520:26
    46f0:    19 40             	[r0 + 4] = r1			  ## vm_sfc.c:521:26
    46f2:    88 f3 51 13       	call 1058466 <local_irq_enable : 106d98 >			  ## vm_sfc.c:530:5
    46f6:    06 0a             	sp += 12			  ## vm_sfc.c:530:5
    46f8:    55 01             	{pc, r5, r4} = [sp++]			  ## vm_sfc.c:1335:1


norflash_exit_sleep:
    46fa:    75 01             	[--sp] = {rets, r5, r4}			  ## vm_sfc.c:1338:0
    46fc:    fa 0b             	sp += -12			  ## vm_sfc.c:1338:0
    46fe:    bf f3 a3 f6       	call -4794 <enter_spi_code : 3448 >			  ## vm_sfc.c:1339:5
    4702:    bf f3 a9 f8       	call -3758 <exit_continue_mode : 3858 >			  ## vm_sfc.c:1340:21
    4706:    c4 ff 00 53 1e 00 	r4 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:1340:21
    470c:    21 48             	r1 = [r4 + 8]			  ## vm_sfc.c:104:19
    470e:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:104:19
    4710:    29 48             	[r4 + 8] = r1			  ## vm_sfc.c:104:19
    4712:    01 48             	r1 = [r4 + 0]			  ## vm_sfc.c:104:19
    4714:    03 08             	r3 = r0			  ## vm_sfc.c:1340:21
    4716:    30 fd 08 19       	r0 = r1 & 4294967287			  ## vm_sfc.c:105:53
    471a:    08 48             	[r4 + 0] = r0			  ## vm_sfc.c:105:53
    471c:    a5 70             	r5 = 10			  ## vm_sfc.c:105:53
    471e:    0d 02             	[sp] = r5
    4720:    b0 7a             	r0 = 171			  ## vm_sfc.c:1342:5
    4722:    bf f3 b0 f6       	call -4768 <spi_writebyte : 3486 >			  ## vm_sfc.c:1342:5
    4726:    20 48             	r0 = [r4 + 8]			  ## vm_sfc.c:104:19
    4728:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    472a:    28 48             	[r4 + 8] = r0			  ## vm_sfc.c:104:19
    472c:    00 f4 08 49       	[r4 + 0] |= 8			  ## vm_sfc.c:104:19
    4730:    1d 02             	[sp+4] = r5
    4732:    06 26             	if (r3 == 0) goto 12 <norflash_exit_sleep+0x46 : 4740 >
    4734:    80 a0             	r0 = sp + 8
    4736:    01 70             	r1 = 0			  ## vm_sfc.c:873:5
    4738:    12 70             	r2 = 1			  ## vm_sfc.c:873:5
    473a:    13 70             	r3 = 1			  ## vm_sfc.c:873:5
    473c:    bf f3 4b f7       	call -4458 <__norflash_read : 35d6 >			  ## vm_sfc.c:873:5
    4740:    10 70             	r0 = 1			  ## vm_sfc.c:500:5
    4742:    88 f3 f1 13       	call 1058786 <sfc_resume : 106f28 >			  ## vm_sfc.c:500:5
    4746:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## vm_sfc.c:385:17
    474c:    01 70             	r1 = 0			  ## vm_sfc.c:385:17
    474e:    39 61             	b[r0 + 19] = r1			  ## vm_sfc.c:385:17
    4750:    40 fb af 4a       	r0 = r4 + 44800			  ## vm_sfc.c:505:29
    4754:    00 40             	r0 = [r0 + 0]			  ## vm_sfc.c:505:29
    4756:    40 fc 50 03       	r0 = r4 + 848
    475a:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:517:22
    475c:    19 40             	[r0 + 4] = r1			  ## vm_sfc.c:518:22
    475e:    29 40             	[r0 + 8] = r1			  ## vm_sfc.c:519:22
    4760:    00 fc f4 00       	r0 = r0 + 244			  ## vm_sfc.c:519:22
    4764:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:520:26
    4766:    19 40             	[r0 + 4] = r1			  ## vm_sfc.c:521:26
    4768:    88 f3 16 13       	call 1058348 <local_irq_enable : 106d98 >			  ## vm_sfc.c:530:5
    476c:    06 0a             	sp += 12			  ## vm_sfc.c:530:5
    476e:    55 01             	{pc, r5, r4} = [sp++]			  ## vm_sfc.c:1348:1


norflash_is_busy:
    4770:    74 01             	[--sp] = {rets, r4}			  ## vm_sfc.c:553:0
    4772:    fc 0b             	sp += -8			  ## vm_sfc.c:553:0
    4774:    c3 ff 00 53 1e 00 	r3 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:553:0
    477a:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:104:19
    477c:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    477e:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:104:19
    4780:    00 46             	r0 = [r3 + 0]			  ## vm_sfc.c:104:19
    4782:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    4784:    08 46             	[r3 + 0] = r0			  ## vm_sfc.c:105:53
    4786:    a4 70             	r4 = 10			  ## vm_sfc.c:105:53
    4788:    0c 02             	[sp] = r4
    478a:    50 70             	r0 = 5			  ## vm_sfc.c:555:5
    478c:    bf f3 7b f6       	call -4874 <spi_writebyte : 3486 >			  ## vm_sfc.c:555:5
    4790:    bf f3 d6 f6       	call -4692 <spi_readbyte : 3540 >			  ## vm_sfc.c:556:14
    4794:    21 46             	r1 = [r3 + 8]			  ## vm_sfc.c:104:19
    4796:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:104:19
    4798:    29 46             	[r3 + 8] = r1			  ## vm_sfc.c:104:19
    479a:    00 f4 08 39       	[r3 + 0] |= 8			  ## vm_sfc.c:104:19
    479e:    20 fd 01 09       	r0 = r0 & 1			  ## vm_sfc.c:558:15
    47a2:    1c 02             	[sp+4] = r4			  ## vm_sfc.c:558:15
    47a4:    04 0a             	sp += 8			  ## vm_sfc.c:558:15
    47a6:    54 01             	{pc, r4} = [sp++]			  ## vm_sfc.c:558:5


norflash_resume:
    47a8:    74 01             	[--sp] = {rets, r4}			  ## vm_sfc.c:571:0
    47aa:    fc 0b             	sp += -8			  ## vm_sfc.c:571:0
    47ac:    c3 ff 00 53 1e 00 	r3 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:571:0
    47b2:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:104:19
    47b4:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    47b6:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:104:19
    47b8:    00 46             	r0 = [r3 + 0]			  ## vm_sfc.c:104:19
    47ba:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    47bc:    08 46             	[r3 + 0] = r0			  ## vm_sfc.c:105:53
    47be:    a4 70             	r4 = 10			  ## vm_sfc.c:105:53
    47c0:    0c 02             	[sp] = r4
    47c2:    a0 77             	r0 = 122			  ## vm_sfc.c:573:5
    47c4:    bf f3 5f f6       	call -4930 <spi_writebyte : 3486 >			  ## vm_sfc.c:573:5
    47c8:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:104:19
    47ca:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    47cc:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:104:19
    47ce:    00 f4 08 39       	[r3 + 0] |= 8			  ## vm_sfc.c:104:19
    47d2:    1c 02             	[sp+4] = r4
    47d4:    04 0a             	sp += 8
    47d6:    54 01             	{pc, r4} = [sp++]			  ## vm_sfc.c:575:1


norflash_suspend:
    47d8:    74 01             	[--sp] = {rets, r4}			  ## vm_sfc.c:563:0
    47da:    fc 0b             	sp += -8			  ## vm_sfc.c:563:0
    47dc:    c3 ff 00 53 1e 00 	r3 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:563:0
    47e2:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:104:19
    47e4:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    47e6:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:104:19
    47e8:    00 46             	r0 = [r3 + 0]			  ## vm_sfc.c:104:19
    47ea:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    47ec:    08 46             	[r3 + 0] = r0			  ## vm_sfc.c:105:53
    47ee:    a4 70             	r4 = 10			  ## vm_sfc.c:105:53
    47f0:    0c 02             	[sp] = r4
    47f2:    50 77             	r0 = 117			  ## vm_sfc.c:565:5
    47f4:    bf f3 47 f6       	call -4978 <spi_writebyte : 3486 >			  ## vm_sfc.c:565:5
    47f8:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:104:19
    47fa:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    47fc:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:104:19
    47fe:    00 f4 08 39       	[r3 + 0] |= 8			  ## vm_sfc.c:104:19
    4802:    1c 02             	[sp+4] = r4
    4804:    04 0a             	sp += 8
    4806:    54 01             	{pc, r4} = [sp++]			  ## vm_sfc.c:567:1


sfc_nop_delay:
    4808:    fe 0b             	sp += -4			  ## vm_sfc.c:95:0
    480a:    08 02             	[sp] = r0			  ## vm_sfc.c:95:0
    480c:    02 0a             	sp += 4			  ## vm_sfc.c:95:0
    480e:    20 00             	rts			  ## vm_sfc.c:99:1


spi_cs:
    4810:    fe 0b             	sp += -4			  ## vm_sfc.c:103:0
    4812:    c1 ff 00 53 1e 00 	r1 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:103:0
    4818:    22 42             	r2 = [r1 + 8]			  ## vm_sfc.c:104:19
    481a:    f2 b1             	r2 &= 4294967287			  ## vm_sfc.c:104:19
    481c:    2a 42             	[r1 + 8] = r2			  ## vm_sfc.c:104:19
    481e:    02 42             	r2 = [r1 + 0]			  ## vm_sfc.c:104:19
    4820:    03 fd 08 29       	r3 = r2 | 8			  ## vm_sfc.c:105:25
    4824:    f2 b1             	r2 &= 4294967287			  ## vm_sfc.c:105:53
    4826:    01 20             	if (r0 == 0) goto 2 <spi_cs+0x1A : 482a >			  ## vm_sfc.c:105:53
    4828:    32 08             	r2 = r3			  ## vm_sfc.c:105:5
    482a:    0a 42             	[r1 + 0] = r2
    482c:    a0 70             	r0 = 10
    482e:    08 02             	[sp] = r0
    4830:    02 0a             	sp += 4
    4832:    20 00             	rts			  ## vm_sfc.c:107:1


spi_wait_ok:
    4834:    08 00             	csync			  ## vm_sfc.c:111:0
    4836:    c0 ff 00 1c 1e 00 	r0 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >			  ## vm_sfc.c:114:5
    483c:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:115:23
    483e:    71 04             	r1 = r1.l (s)			  ## vm_sfc.c:115:12
    4840:    f1 ef fc cf       	ifs (r1 > -1) goto -8 <spi_wait_ok+0x8 : 483c >			  ## vm_sfc.c:115:5
    4844:    00 f4 40 0a       	[r0 + 0] |= 16384			  ## vm_sfc.c:116:18
    4848:    20 00             	rts			  ## vm_sfc.c:119:1


spi_write_dma_1bit:
    484a:    c2 ff 00 1c 1e 00 	r2 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >			  ## vm_sfc.c:181:0
    4850:    38 44             	[r2 + 12] = r0			  ## vm_sfc.c:187:18
    4852:    49 44             	[r2 + 16] = r1			  ## vm_sfc.c:188:18
    4854:    08 00             	csync			  ## vm_sfc.c:114:5
    4856:    00 44             	r0 = [r2 + 0]			  ## vm_sfc.c:115:23
    4858:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:115:12
    485a:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <spi_write_dma_1bit+0xC : 4856 >			  ## vm_sfc.c:115:5
    485e:    00 f4 40 2a       	[r2 + 0] |= 16384			  ## vm_sfc.c:116:18
    4862:    20 00             	rts			  ## vm_sfc.c:191:1


spi_writebyte_dma:
    4864:    c1 ff 00 1c 1e 00 	r1 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >			  ## vm_sfc.c:170:0
    486a:    28 42             	[r1 + 8] = r0			  ## vm_sfc.c:174:18
    486c:    08 00             	csync			  ## vm_sfc.c:114:5
    486e:    00 42             	r0 = [r1 + 0]			  ## vm_sfc.c:115:23
    4870:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:115:12
    4872:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <spi_writebyte_dma+0xA : 486e >			  ## vm_sfc.c:115:5
    4876:    00 f4 40 1a       	[r1 + 0] |= 16384			  ## vm_sfc.c:116:18
    487a:    20 00             	rts			  ## vm_sfc.c:177:1


tmp_udelay:
    487c:    c1 ff 00 04 1e 00 	r1 = 1967104 <uECC_vli_cmp_unsafe+0xD9404 : 1e0400 >			  ## vm_sfc.c:1166:0
    4882:    c0 f4 40 1a       	[r1 + 0] = 16384			  ## vm_sfc.c:1167:20
    4886:    c1 f4 00 19       	[r1 + 4] = 0			  ## vm_sfc.c:1168:20
    488a:    80 c0             	r0 = r0 << 2			  ## vm_sfc.c:1169:24
    488c:    28 42             	[r1 + 8] = r0			  ## vm_sfc.c:1169:20
    488e:    c0 f4 11 19       	[r1 + 0] = 17			  ## vm_sfc.c:1170:20
    4892:    00 42             	r0 = [r1 + 0]			  ## vm_sfc.c:1171:24
    4894:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:1171:39
    4896:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <tmp_udelay+0x16 : 4892 >			  ## vm_sfc.c:1171:5
    489a:    c0 f4 40 1a       	[r1 + 0] = 16384			  ## vm_sfc.c:1172:20
    489e:    20 00             	rts			  ## vm_sfc.c:1173:1


vm_enter_deepsleep:
    48a0:    c0 ff 00 1c 1e 00 	r0 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >			  ## vm_sfc.c:1451:0
    48a6:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:1452:46
    48a8:    c2 ff b0 20 00 00 	r2 = 8368 <gatt_client_conn_handle : 20b0 >			  ## vm_sfc.c:1453:35
    48ae:    11 f6 20 21       	[r2 + 288] = r1			  ## vm_sfc.c:1452:35
    48b2:    00 f6 00 01       	r0 = [r0 + 256]			  ## vm_sfc.c:1453:46
    48b6:    10 f6 24 21       	[r2 + 292] = r0			  ## vm_sfc.c:1453:35
    48ba:    20 00             	rts			  ## vm_sfc.c:1454:1


vm_exit_deepsleep:
    48bc:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## vm_sfc.c:1458:0
    48c2:    01 f6 20 01       	r1 = [r0 + 288]			  ## vm_sfc.c:1459:41
    48c6:    c2 ff 00 1c 1e 00 	r2 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >			  ## vm_sfc.c:1459:41
    48cc:    09 44             	[r2 + 0] = r1			  ## vm_sfc.c:1459:18
    48ce:    00 f6 24 01       	r0 = [r0 + 292]			  ## vm_sfc.c:1460:41
    48d2:    21 fc 00 01       	r1 = r2 + 256			  ## vm_sfc.c:1460:41
    48d6:    08 42             	[r1 + 0] = r0			  ## vm_sfc.c:1460:18
    48d8:    00 f4 40 2a       	[r2 + 0] |= 16384			  ## vm_sfc.c:1461:18
    48dc:    00 f4 40 1a       	[r1 + 0] |= 16384			  ## vm_sfc.c:1462:18
    48e0:    c0 ff 94 23 00 00 	r0 = 9108 <flash_info+0x24 : 2394 >			  ## vm_sfc.c:1462:18
    48e6:    31 40             	r1 = [r0 + 12]			  ## vm_sfc.c:363:30
    48e8:    02 40             	r2 = [r0 + 0]			  ## vm_sfc.c:1463:60
    48ea:    40 40             	r0 = [r0 + 16]			  ## vm_sfc.c:365:27
    48ec:    61 b4             	r1 = r2 - r1			  ## vm_sfc.c:363:12
    48ee:    10 09             	r0 += r1			  ## vm_sfc.c:365:36
    48f0:    c1 ff 1c 02 1f 00 	r1 = 2032156 <uECC_vli_cmp_unsafe+0xE9220 : 1f021c >			  ## vm_sfc.c:365:36
    48f6:    18 42             	[r1 + 4] = r0			  ## vm_sfc.c:1463:24
    48f8:    c0 ff ff ff ff 01 	r0 = 33554431 <bank_code_load_addr+0x1DCA07 : 1ffffff >			  ## vm_sfc.c:1464:24
    48fe:    08 42             	[r1 + 0] = r0			  ## vm_sfc.c:1464:24
    4900:    20 00             	rts			  ## vm_sfc.c:1466:1


__hw_pdown_clock_recover:
    4902:    78 01             	[--sp] = {rets, r8-r4}			  ## pmu_analog.c:796:0
    4904:    c4 ff 20 19 1e 00 	r4 = 1972512 <uECC_vli_cmp_unsafe+0xDA924 : 1e1920 >			  ## pmu_analog.c:796:0
    490a:    00 48             	r0 = [r4 + 0]			  ## pmu_analog.c:797:19
    490c:    20 f3 52 00       	if ((r0 & 1) != 0) goto 164 <__hw_pdown_clock_recover+0xB2 : 49b4 >			  ## pmu_analog.c:797:19
    4910:    00 f4 01 49       	[r4 + 0] |= 1			  ## pmu_analog.c:798:27
    4914:    c0 ff 00 50 00 00 	r0 = 20480 <nvbss_begin : 5000 >			  ## pmu_analog.c:800:57
    491a:    06 f6 28 03       	r6 = [r0 + 808]			  ## pmu_analog.c:800:57
    491e:    08 f6 00 40       	r8 = [r4 + 0]			  ## xosc_fsck.c:362:28
    4922:    00 48             	r0 = [r4 + 0]			  ## xosc_fsck.c:363:5
    4924:    01 fb c0 07       	r1 = 1984 <DRIVER_CODE_TOTAL+0x3A : 7c0 >			  ## xosc_fsck.c:363:5
    4928:    50 b2             	r0 |= r1			  ## xosc_fsck.c:363:5
    492a:    08 48             	[r4 + 0] = r0			  ## xosc_fsck.c:363:5
    492c:    17 48             	r7 = [r4 + 4]			  ## xosc_fsck.c:370:28
    492e:    01 f4 10 4b       	[r4 + 4] |= 1048576			  ## xosc_fsck.c:371:5
    4932:    00 48             	r0 = [r4 + 0]			  ## xosc_fsck.c:373:22
    4934:    00 48             	r0 = [r4 + 0]			  ## xosc_fsck.c:375:5
    4936:    30 fd 1c 09       	r0 = r0 & 4294967267			  ## xosc_fsck.c:375:5
    493a:    90 b1             	r0 |= 8			  ## xosc_fsck.c:375:5
    493c:    08 48             	[r4 + 0] = r0			  ## xosc_fsck.c:375:5
    493e:    10 48             	r0 = [r4 + 4]			  ## xosc_fsck.c:377:15
    4940:    10 48             	r0 = [r4 + 4]			  ## xosc_fsck.c:378:15
    4942:    01 f4 08 4a       	[r4 + 4] |= 2048			  ## xosc_fsck.c:380:5
    4946:    01 f4 08 49       	[r4 + 4] |= 8			  ## xosc_fsck.c:382:5
    494a:    25 fd 07 09       	r5 = r0 & 7			  ## xosc_fsck.c:385:9
    494e:    75 e0 03 00       	if (r5 == 7) goto 6 <__hw_pdown_clock_recover+0x56 : 4958 >			  ## xosc_fsck.c:385:9
    4952:    03 3a             	if (r5 != 0) goto 6 <__hw_pdown_clock_recover+0x58 : 495a >
    4954:    15 70             	r5 = 1
    4956:    01 18             	goto 2 <__hw_pdown_clock_recover+0x58 : 495a >
    4958:    65 70             	r5 = 6
    495a:    10 48             	r0 = [r4 + 4]			  ## xosc_fsck.c:397:5
    495c:    71 9a             	r1 = r5 + 7			  ## xosc_fsck.c:397:5
    495e:    c0 d0             	r0 = r0 >> 3			  ## xosc_fsck.c:397:5
    4960:    dd fd 18 10       	r1 <= insert(r0, p:3, l:29)			  ## xosc_fsck.c:397:5
    4964:    19 48             	[r4 + 4] = r1			  ## xosc_fsck.c:397:5
    4966:    00 fb 2c 01       	r0 = 300 <DRIVER_RAM_TOTAL+0x3A : 12c >			  ## xosc_fsck.c:398:5
    496a:    bf f3 90 f9       	call -3296 <delay_p11_tmr1_lrc : 3c8e >			  ## xosc_fsck.c:398:5
    496e:    10 48             	r0 = [r4 + 4]			  ## xosc_fsck.c:399:5
    4970:    30 fd 07 09       	r0 = r0 & 4294967288			  ## xosc_fsck.c:399:5
    4974:    50 ba             	r0 |= r5			  ## xosc_fsck.c:399:5
    4976:    18 48             	[r4 + 4] = r0			  ## xosc_fsck.c:399:5
    4978:    00 fb 2c 01       	r0 = 300 <DRIVER_RAM_TOTAL+0x3A : 12c >			  ## xosc_fsck.c:400:5
    497c:    bf f3 87 f9       	call -3314 <delay_p11_tmr1_lrc : 3c8e >			  ## xosc_fsck.c:400:5
    4980:    10 48             	r0 = [r4 + 4]			  ## xosc_fsck.c:401:5
    4982:    11 9a             	r1 = r5 + 1			  ## xosc_fsck.c:401:5
    4984:    c0 d0             	r0 = r0 >> 3			  ## xosc_fsck.c:401:5
    4986:    dd fd 18 10       	r1 <= insert(r0, p:3, l:29)			  ## xosc_fsck.c:401:5
    498a:    19 48             	[r4 + 4] = r1			  ## xosc_fsck.c:401:5
    498c:    00 fb 2c 01       	r0 = 300 <DRIVER_RAM_TOTAL+0x3A : 12c >			  ## xosc_fsck.c:402:5
    4990:    bf f3 7d f9       	call -3334 <delay_p11_tmr1_lrc : 3c8e >			  ## xosc_fsck.c:402:5
    4994:    10 48             	r0 = [r4 + 4]			  ## xosc_fsck.c:406:5
    4996:    f0 b5             	r0 &= 4294965247			  ## xosc_fsck.c:406:5
    4998:    18 48             	[r4 + 4] = r0			  ## xosc_fsck.c:406:5
    499a:    10 48             	r0 = [r4 + 4]			  ## xosc_fsck.c:408:5
    499c:    f0 b1             	r0 &= 4294967287			  ## xosc_fsck.c:408:5
    499e:    18 48             	[r4 + 4] = r0			  ## xosc_fsck.c:408:5
    49a0:    80 7c             	r0 = 200			  ## xosc_fsck.c:409:5
    49a2:    bf f3 74 f9       	call -3352 <delay_p11_tmr1_lrc : 3c8e >			  ## xosc_fsck.c:409:5
    49a6:    1f 48             	[r4 + 4] = r7			  ## xosc_fsck.c:414:22
    49a8:    03 2c             	if (r6 == 0) goto 6 <__hw_pdown_clock_recover+0xAE : 49b0 >			  ## xosc_fsck.c:414:22
    49aa:    a0 05             	r0 = r6.l (u)			  ## xosc_fsck.c:432:9
    49ac:    bf f3 6f f9       	call -3362 <delay_p11_tmr1_lrc : 3c8e >			  ## xosc_fsck.c:432:9
    49b0:    18 f6 00 40       	[r4 + 0] = r8			  ## xosc_fsck.c:436:22
    49b4:    45 fc e0 2d       	r5 = r4 + 11744
    49b8:    00 4a             	r0 = [r5 + 0]			  ## pmu_analog.c:803:20
    49ba:    20 f3 0c 00       	if ((r0 & 1) != 0) goto 24 <__hw_pdown_clock_recover+0xD4 : 49d6 >			  ## pmu_analog.c:803:20
    49be:    00 f4 02 4c       	[r4 + 0] |= 33554432			  ## pmu_analog.c:804:26
    49c2:    00 f4 01 59       	[r5 + 0] |= 1			  ## pmu_analog.c:805:28
    49c6:    a0 70             	r0 = 10			  ## pmu_analog.c:807:9
    49c8:    bf f3 61 f9       	call -3390 <delay_p11_tmr1_lrc : 3c8e >			  ## pmu_analog.c:807:9
    49cc:    00 f4 02 59       	[r5 + 0] |= 2			  ## pmu_analog.c:808:28
    49d0:    80 7c             	r0 = 200			  ## pmu_analog.c:810:9
    49d2:    bf f3 5c f9       	call -3400 <delay_p11_tmr1_lrc : 3c8e >			  ## pmu_analog.c:810:9
    49d6:    c0 ff b0 20 00 00 	r0 = 8368 <gatt_client_conn_handle : 20b0 >			  ## pmu_analog.c:816:25
    49dc:    00 f6 94 00       	r0 = [r0 + 148]			  ## pmu_analog.c:816:25
    49e0:    41 fc e8 e6       	r1 = r4 + -6424			  ## pmu_analog.c:816:25
    49e4:    08 42             	[r1 + 0] = r0			  ## pmu_analog.c:816:23
    49e6:    20 42             	r0 = [r1 + 8]			  ## pmu_analog.c:817:5
    49e8:    30 fd 07 0a       	r0 = r0 & 4294965503			  ## pmu_analog.c:817:5
    49ec:    00 fd 06 0a       	r0 = r0 | 1536			  ## pmu_analog.c:817:5
    49f0:    28 42             	[r1 + 8] = r0			  ## pmu_analog.c:817:5
    49f2:    08 00             	csync			  ## pmu_analog.c:818:5
    49f4:    58 01             	{pc, r8-r4} = [sp++]			  ## pmu_analog.c:819:1


low_power_system_down:
    49f6:    7f 01             	[--sp] = {rets, r15-r4}			  ## power_hw.c:942:0
    49f8:    c8 ff 20 19 1e 00 	r8 = 1972512 <uECC_vli_cmp_unsafe+0xDA924 : 1e1920 >			  ## power_hw.c:942:0
    49fe:    00 f6 00 80       	r0 = [r8 + 0]			  ## power_hw.c:945:20
    4a02:    c9 ff b0 20 00 00 	r9 = 8368 <gatt_client_conn_handle : 20b0 >			  ## power_hw.c:945:20
    4a08:    8e fc e0 39       	r14 = r8 + 14816			  ## power_hw.c:945:20
    4a0c:    4d fb af ea       	r13 = r14 + 44800			  ## power_hw.c:945:20
    4a10:    20 f3 4a 00       	if ((r0 & 1) != 0) goto 148 <low_power_system_down+0xB2 : 4aa8 >			  ## power_hw.c:945:9
    4a14:    00 70             	r0 = 0			  ## pmu_analog.c:306:5
    4a16:    bf f3 eb f4       	call -5674 <sfc_suspend : 33f0 >			  ## pmu_analog.c:306:5
    4a1a:    08 00             	csync			  ## pmu_analog.c:308:5
    4a1c:    00 f6 0c e0       	r0 = [r14 + 12]			  ## pmu_analog.c:311:31
    4a20:    10 f9 0d 90       	b[r9 + 13] = r0			  ## pmu_analog.c:311:19
    4a24:    00 f6 20 e0       	r0 = [r14 + 32]			  ## pmu_analog.c:312:31
    4a28:    10 f9 0e 90       	b[r9 + 14] = r0			  ## pmu_analog.c:312:19
    4a2c:    00 f6 10 e0       	r0 = [r14 + 16]			  ## pmu_analog.c:313:31
    4a30:    10 f9 0f 90       	b[r9 + 15] = r0			  ## pmu_analog.c:313:19
    4a34:    00 f6 14 e0       	r0 = [r14 + 20]			  ## pmu_analog.c:314:31
    4a38:    10 f9 10 90       	b[r9 + 16] = r0			  ## pmu_analog.c:314:19
    4a3c:    00 f6 00 e0       	r0 = [r14 + 0]			  ## pmu_analog.c:315:31
    4a40:    10 f9 11 90       	b[r9 + 17] = r0			  ## pmu_analog.c:315:19
    4a44:    00 f6 08 e0       	r0 = [r14 + 8]			  ## pmu_analog.c:316:31
    4a48:    10 f9 12 90       	b[r9 + 18] = r0			  ## pmu_analog.c:316:19
    4a4c:    00 f6 10 e0       	r0 = [r14 + 16]			  ## pmu_analog.c:318:5
    4a50:    30 fd 1f 09       	r0 = r0 & 4294967264			  ## pmu_analog.c:318:5
    4a54:    10 f6 10 e0       	[r14 + 16] = r0			  ## pmu_analog.c:318:5
    4a58:    00 f6 14 e0       	r0 = [r14 + 20]			  ## pmu_analog.c:319:5
    4a5c:    30 fd 1f 09       	r0 = r0 & 4294967264			  ## pmu_analog.c:319:5
    4a60:    10 f6 14 e0       	[r14 + 20] = r0			  ## pmu_analog.c:319:5
    4a64:    00 f6 00 e0       	r0 = [r14 + 0]			  ## pmu_analog.c:320:5
    4a68:    30 fd 1f 09       	r0 = r0 & 4294967264			  ## pmu_analog.c:320:5
    4a6c:    90 b1             	r0 |= 8			  ## pmu_analog.c:320:5
    4a6e:    10 f6 00 e0       	[r14 + 0] = r0			  ## pmu_analog.c:320:5
    4a72:    00 f6 08 e0       	r0 = [r14 + 8]			  ## pmu_analog.c:321:5
    4a76:    30 fd 1f 09       	r0 = r0 & 4294967264			  ## pmu_analog.c:321:5
    4a7a:    00 fd 07 09       	r0 = r0 | 7			  ## pmu_analog.c:321:5
    4a7e:    10 f6 08 e0       	[r14 + 8] = r0			  ## pmu_analog.c:321:5
    4a82:    00 f6 00 e0       	r0 = [r14 + 0]			  ## pmu_analog.c:322:5
    4a86:    30 fd 1f 09       	r0 = r0 & 4294967264			  ## pmu_analog.c:322:5
    4a8a:    10 f6 00 e0       	[r14 + 0] = r0			  ## pmu_analog.c:322:5
    4a8e:    00 f6 0c e0       	r0 = [r14 + 12]			  ## pmu_analog.c:323:5
    4a92:    30 fd 1f 09       	r0 = r0 & 4294967264			  ## pmu_analog.c:323:5
    4a96:    10 f6 0c e0       	[r14 + 12] = r0			  ## pmu_analog.c:323:5
    4a9a:    00 f6 20 e0       	r0 = [r14 + 32]			  ## pmu_analog.c:324:5
    4a9e:    30 fd 1f 09       	r0 = r0 & 4294967264			  ## pmu_analog.c:324:5
    4aa2:    10 f6 20 e0       	[r14 + 32] = r0			  ## pmu_analog.c:324:5
    4aa6:    11 18             	goto 34 <low_power_system_down+0xD4 : 4aca >			  ## pmu_analog.c:324:5
    4aa8:    08 00             	csync			  ## power_hw.c:948:9
    4aaa:    c0 ff 00 05 1b 00 	r0 = 1770752 <uECC_vli_cmp_unsafe+0xA9504 : 1b0500 >			  ## power_hw.c:948:9
    4ab0:    01 40             	r1 = [r0 + 0]			  ## power_hw.c:948:9
    4ab2:    f1 ef fd cf       	ifs (r1 > -1) goto -6 <low_power_system_down+0xBA : 4ab0 >			  ## power_hw.c:948:9
    4ab6:    08 00             	csync			  ## power_hw.c:949:9
    4ab8:    40 fb df 0a       	r0 = r0 + 57088			  ## power_hw.c:949:9
    4abc:    01 40             	r1 = [r0 + 0]			  ## power_hw.c:949:9
    4abe:    f1 ef fd cf       	ifs (r1 > -1) goto -6 <low_power_system_down+0xC6 : 4abc >			  ## power_hw.c:949:9
    4ac2:    00 f6 00 d0       	r0 = [r13 + 0]			  ## power_hw.c:950:24
    4ac6:    00 e0 fc bf       	ifs (r0 < 0) goto -8 <low_power_system_down+0xCC : 4ac2 >			  ## power_hw.c:950:24
    4aca:    c0 ff d2 1f 1a 00 	r0 = 1712082 <uECC_vli_cmp_unsafe+0x9AFD6 : 1a1fd2 >
    4ad0:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:953:27
    4ad2:    00 60             	r0 = b[r0 + 0] (u)			  ## power_hw.c:953:49
    4ad4:    21 fd 20 19       	r1 = r1 & 32			  ## power_hw.c:953:27
    4ad8:    20 fd 80 09       	r0 = r0 & 128			  ## power_hw.c:953:49
    4adc:    50 b2             	r0 |= r1			  ## power_hw.c:953:47
    4ade:    ca ff 00 50 00 00 	r10 = 20480 <nvbss_begin : 5000 >			  ## power_hw.c:953:47
    4ae4:    10 f9 31 a0       	b[r10 + 49] = r0			  ## power_hw.c:953:25
    4ae8:    20 fb 1e cb       	r12 = 1966080			  ## power_hw.c:953:25
    4aec:    00 f4 08 c9       	[r12 + 0] |= 8			  ## power_hw.c:956:23
    4af0:    00 f6 1c a0       	r0 = [r10 + 28]			  ## power_hw.c:856:17
    4af4:    cf ff 6f 0f 1a 00 	r15 = 1707887 <uECC_vli_cmp_unsafe+0x99F73 : 1a0f6f >			  ## power_hw.c:856:17
    4afa:    fb fc 44 00       	r11 = r15 + 68			  ## power_hw.c:856:17
    4afe:    b7 fc 3e 10       	r7 = r11 + 4158			  ## power_hw.c:856:17
    4b02:    10 e0 19 10       	if (r0 != 1) goto 50 <low_power_system_down+0x142 : 4b38 >			  ## power_hw.c:856:9
    4b06:    00 6e             	r0 = b[r7 + 0] (u)			  ## power_hw.c:857:18
    4b08:    10 f9 0c 90       	b[r9 + 12] = r0			  ## power_hw.c:857:16
    4b0c:    10 70             	r0 = 1			  ## power_hw.c:858:24
    4b0e:    08 6e             	b[r7 + 0] = r0			  ## power_hw.c:858:24
    4b10:    88 f3 44 11       	call 1057416 <local_irq_disable : 106d9c >			  ## power_hw.c:861:9
    4b14:    20 70             	r0 = 2			  ## power_hw.c:861:9
    4b16:    10 f9 00 b0       	b[r11 + 0] = r0			  ## power_hw.c:861:9
    4b1a:    00 71             	r0 = 16			  ## power_hw.c:861:9
    4b1c:    98 6e             	b[r7 + 9] = r0			  ## power_hw.c:861:9
    4b1e:    08 00             	csync			  ## power_hw.c:861:9
    4b20:    30 6e             	r0 = b[r7 + 3] (u)			  ## power_hw.c:861:9
    4b22:    04 f3 fc 0f       	if ((r0 & 16) == 0) goto -8 <low_power_system_down+0x128 : 4b1e >			  ## power_hw.c:861:9
    4b26:    00 f9 00 f0       	r0 = b[r15 + 0] (u)			  ## power_hw.c:861:9
    4b2a:    20 e0 f8 1f       	if (r0 != 2) goto -16 <low_power_system_down+0x128 : 4b1e >			  ## power_hw.c:861:9
    4b2e:    00 71             	r0 = 16			  ## power_hw.c:861:9
    4b30:    28 6e             	b[r7 + 2] = r0			  ## power_hw.c:861:9
    4b32:    88 f3 31 11       	call 1057378 <local_irq_enable : 106d98 >			  ## power_hw.c:861:9
    4b36:    09 18             	goto 18 <low_power_system_down+0x154 : 4b4a >			  ## power_hw.c:861:9
    4b38:    70 6e             	r0 = b[r7 + 7] (u)			  ## power_hw.c:867:9
    4b3a:    10 b1             	r0 |= 4			  ## power_hw.c:867:9
    4b3c:    78 6e             	b[r7 + 7] = r0			  ## power_hw.c:867:9
    4b3e:    00 6e             	r0 = b[r7 + 0] (u)			  ## power_hw.c:870:9
    4b40:    10 f9 0c 90       	b[r9 + 12] = r0			  ## power_hw.c:870:9
    4b44:    10 70             	r0 = 1			  ## power_hw.c:870:9
    4b46:    08 6e             	b[r7 + 0] = r0			  ## power_hw.c:870:9
    4b48:    98 6e             	b[r7 + 9] = r0			  ## power_hw.c:870:9
    4b4a:    08 00             	csync			  ## power_hw.c:875:5
    4b4c:    00 f4 04 c9       	[r12 + 0] |= 4			  ## power_hw.c:877:23
    4b50:    08 00             	csync			  ## power_hw.c:878:5
    4b52:    fc 7f             	r12 = 255			  ## power_hw.c:878:5
    4b54:    71 fc 8f ff       	r1 = r7 + -113			  ## power_hw.c:878:5
    4b58:    e2 7e             	r2 = 238			  ## power_hw.c:878:5
    4b5a:    b3 7a             	r3 = 171			  ## power_hw.c:878:5
    4b5c:    e4 70             	r4 = 14			  ## power_hw.c:878:5
    4b5e:    55 75             	r5 = 85			  ## power_hw.c:878:5
    4b60:    86 fc e4 24       	r6 = r8 + 9444			  ## power_hw.c:878:5
    4b64:    1c f9 00 10       	b[r1 + 0] = r12			  ## power_hw.c:969:20
    4b68:    0a 62             	b[r1 + 0] = r2			  ## power_hw.c:970:20
    4b6a:    0b 62             	b[r1 + 0] = r3			  ## power_hw.c:971:20
    4b6c:    0c 62             	b[r1 + 0] = r4			  ## power_hw.c:972:20
    4b6e:    0d 62             	b[r1 + 0] = r5			  ## power_hw.c:973:20
    4b70:    00 4c             	r0 = [r6 + 0]			  ## power_hw.c:974:15
    4b72:    00 f3 f7 0f       	if ((r0 & 1) == 0) goto -18 <low_power_system_down+0x16E : 4b64 >			  ## power_hw.c:974:5
    4b76:    30 6e             	r0 = b[r7 + 3] (u)			  ## power_hw.c:981:5
    4b78:    00 f3 fd 0f       	if ((r0 & 1) == 0) goto -6 <low_power_system_down+0x180 : 4b76 >			  ## power_hw.c:981:5
    4b7c:    14 70             	r4 = 1
    4b7e:    2c 6e             	b[r7 + 2] = r4			  ## power_hw.c:981:5
    4b80:    80 70             	r0 = 8			  ## power_hw.c:981:5
    4b82:    08 6e             	b[r7 + 0] = r0			  ## power_hw.c:981:5
    4b84:    00 f6 1c a0       	r0 = [r10 + 28]			  ## power_hw.c:984:17
    4b88:    10 e0 12 10       	if (r0 != 1) goto 36 <low_power_system_down+0x1BA : 4bb0 >			  ## power_hw.c:984:17
    4b8c:    88 f3 06 11       	call 1057292 <local_irq_disable : 106d9c >			  ## power_hw.c:986:9
    4b90:    14 f9 00 b0       	b[r11 + 0] = r4			  ## power_hw.c:986:9
    4b94:    00 71             	r0 = 16			  ## power_hw.c:986:9
    4b96:    98 6e             	b[r7 + 9] = r0			  ## power_hw.c:986:9
    4b98:    08 00             	csync			  ## power_hw.c:986:9
    4b9a:    30 6e             	r0 = b[r7 + 3] (u)			  ## power_hw.c:986:9
    4b9c:    04 f3 fc 0f       	if ((r0 & 16) == 0) goto -8 <low_power_system_down+0x1A2 : 4b98 >			  ## power_hw.c:986:9
    4ba0:    00 f9 00 f0       	r0 = b[r15 + 0] (u)			  ## power_hw.c:986:9
    4ba4:    10 e0 f8 1f       	if (r0 != 1) goto -16 <low_power_system_down+0x1A2 : 4b98 >			  ## power_hw.c:986:9
    4ba8:    00 71             	r0 = 16			  ## power_hw.c:986:9
    4baa:    28 6e             	b[r7 + 2] = r0			  ## power_hw.c:986:9
    4bac:    88 f3 f4 10       	call 1057256 <local_irq_enable : 106d98 >			  ## power_hw.c:986:9
    4bb0:    01 f6 00 80       	r1 = [r8 + 0]			  ## power_hw.c:991:20
    4bb4:    70 fc a4 f8       	r0 = r7 + -1884			  ## power_hw.c:991:20
    4bb8:    20 f3 36 10       	if ((r1 & 1) != 0) goto 108 <low_power_system_down+0x232 : 4c28 >			  ## power_hw.c:991:9
    4bbc:    01 f6 1c e0       	r1 = [r14 + 28]			  ## pmu_analog.c:277:20
    4bc0:    71 b2             	r1 &= 4294967279			  ## pmu_analog.c:277:20
    4bc2:    11 f6 1c e0       	[r14 + 28] = r1			  ## pmu_analog.c:277:20
    4bc6:    01 f6 18 e0       	r1 = [r14 + 24]			  ## pmu_analog.c:278:20
    4bca:    71 b2             	r1 &= 4294967279			  ## pmu_analog.c:278:20
    4bcc:    11 f6 18 e0       	[r14 + 24] = r1			  ## pmu_analog.c:278:20
    4bd0:    01 f9 11 90       	r1 = b[r9 + 17] (u)			  ## pmu_analog.c:280:22
    4bd4:    11 f6 00 e0       	[r14 + 0] = r1			  ## pmu_analog.c:280:20
    4bd8:    01 f9 12 90       	r1 = b[r9 + 18] (u)			  ## pmu_analog.c:281:22
    4bdc:    11 f6 08 e0       	[r14 + 8] = r1			  ## pmu_analog.c:281:20
    4be0:    01 f9 0f 90       	r1 = b[r9 + 15] (u)			  ## pmu_analog.c:282:22
    4be4:    11 f6 10 e0       	[r14 + 16] = r1			  ## pmu_analog.c:282:20
    4be8:    01 f9 10 90       	r1 = b[r9 + 16] (u)			  ## pmu_analog.c:283:22
    4bec:    11 f6 14 e0       	[r14 + 20] = r1			  ## pmu_analog.c:283:20
    4bf0:    01 f9 0d 90       	r1 = b[r9 + 13] (u)			  ## pmu_analog.c:284:22
    4bf4:    11 f6 0c e0       	[r14 + 12] = r1			  ## pmu_analog.c:284:20
    4bf8:    01 f9 0e 90       	r1 = b[r9 + 14] (u)			  ## pmu_analog.c:285:22
    4bfc:    11 f6 20 e0       	[r14 + 32] = r1			  ## pmu_analog.c:285:20
    4c00:    61 07             	r1 = -10
    4c02:    11 80             	r1 += 1			  ## power_hw.c:190:5
    4c04:    00 00             	nop			  ## power_hw.c:191:9
    4c06:    fd 33             	if (r1 != 0) goto -6 <low_power_system_down+0x20C : 4c02 >			  ## power_hw.c:190:5
    4c08:    06 f4 10 e9       	[r14 + 24] |= 16			  ## pmu_analog.c:288:20
    4c0c:    61 07             	r1 = -10
    4c0e:    11 80             	r1 += 1			  ## power_hw.c:190:5
    4c10:    00 00             	nop			  ## power_hw.c:191:9
    4c12:    fd 33             	if (r1 != 0) goto -6 <low_power_system_down+0x218 : 4c0e >			  ## power_hw.c:190:5
    4c14:    07 f4 10 e9       	[r14 + 28] |= 16			  ## pmu_analog.c:290:20
    4c18:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:999:5
    4c1a:    21 fd c7 19       	r1 = r1 & 199			  ## power_hw.c:999:5
    4c1e:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:999:5
    4c20:    70 16             	call -800 <__hw_pdown_clock_recover : 4902 >			  ## power_hw.c:1002:5
    4c22:    bf f3 54 fb       	call -2392 <check_flash_type : 42ce >			  ## power_hw.c:1006:9
    4c26:    05 18             	goto 10 <low_power_system_down+0x23C : 4c32 >			  ## power_hw.c:1006:9
    4c28:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:999:5
    4c2a:    21 fd c7 19       	r1 = r1 & 199			  ## power_hw.c:999:5
    4c2e:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:999:5
    4c30:    68 16             	call -816 <__hw_pdown_clock_recover : 4902 >			  ## power_hw.c:1002:5
    4c32:    00 f4 01 d9       	[r13 + 0] |= 1			  ## pmu_analog.c:345:17
    4c36:    08 00             	csync			  ## pmu_analog.c:347:5
    4c38:    c4 ff 00 64 e1 01 	r4 = 31548416 <flash_powerup_ok_flash : 1e16400 >			  ## pmu_analog.c:347:5
    4c3e:    c5 ff 80 4c 00 00 	r5 = 19584 <flash_powerup_ok_ram : 4c80 >			  ## pmu_analog.c:347:5
    4c44:    01 72             	r1 = 32			  ## power_hw.c:1014:9
    4c46:    40 08             	r0 = r4			  ## power_hw.c:1014:9
    4c48:    88 f3 70 11       	call 1057504 <sfc_drop_cache : 106f2c >			  ## power_hw.c:1014:9
    4c4c:    40 08             	r0 = r4			  ## power_hw.c:1015:14
    4c4e:    51 08             	r1 = r5			  ## power_hw.c:1015:14
    4c50:    88 f3 50 11       	call 1057440 <strcmp : 106ef4 >			  ## power_hw.c:1015:14
    4c54:    f7 31             	if (r0 != 0) goto -18 <low_power_system_down+0x24E : 4c44 >			  ## power_hw.c:1015:5
    4c56:    5f 01             	{pc, r15-r4} = [sp++]			  ## power_hw.c:1019:1


delay:
    4c58:    03 20             	if (r0 == 0) goto 6 <delay+0x8 : 4c60 >			  ## uart.c:22:0
    4c5a:    f0 8f             	r0 += -1			  ## uart.c:23:15
    4c5c:    00 00             	nop			  ## uart.c:24:9
    4c5e:    fd 31             	if (r0 != 0) goto -6 <delay+0x2 : 4c5a >			  ## uart.c:24:9
    4c60:    20 00             	rts			  ## uart.c:26:1
    4c62:    00 00             	nop
    4c64:    00 00             	nop
    4c66:    00 00             	nop
    4c68:    00 00             	nop
    4c6a:    00 00             	nop
    4c6c:    00 00             	nop
    4c6e:    00 00             	nop
    4c70:    00 00             	nop
    4c72:    00 00             	nop
    4c74:    00 00             	nop
    4c76:    00 00             	nop
    4c78:    00 00             	nop
    4c7a:    00 00             	nop
    4c7c:    00 00             	nop
    4c7e:    00 00             	nop


flash_powerup_ok_ram:
    4c80:    66 6c             	r6 = b[r6 + 6] (u)
    4c82:    61 73             	r1 = 54
    4c84:    68 5f             	h[r7 + 44] = r0
    4c86:    70 6f             	r0 = b[r7 + 23] (u)
    4c88:    77 65             	r7 = b[r2 + 23] (u)
    4c8a:    72 75             	r2 = 87
    4c8c:    70 5f             	r0 = h[r7 + 46] (u)
    4c8e:    6f 6b             	b[r5 + 22] = r7
    4c90:    00 00             	nop
    4c92:    00 00             	nop
    4c94:    00 00             	nop
    4c96:    00 00             	nop
    4c98:    00 00             	nop
    4c9a:    00 00             	nop
    4c9c:    00 00             	nop
    4c9e:    00 00             	nop


exception_irq_handler:
    4ca0:    7e f3 2f 38       	[--sp] = {ssp, usp, icfg, psr, rets, retx, rete, reti}			  ## startup.S:157:0
    4ca4:    78 f3 ff ff       	[--sp] = {r15-r0}			  ## startup.S:158:0
    4ca8:    28 fb 00 0e       	r0 = sp			  ## startup.S:160:0
    4cac:    af f3 43 f5       	call -2102650 <exception_analyze : 1e03736 >			  ## startup.S:161:0
    4cb0:    ff 1f             	goto -2 <exception_irq_handler+0x10 : 4cb0 >			  ## startup.S:164:0
    4cb2:    00 00             	nop


lmp_conn_for_link:
    4cb4:    c2 ff 38 2e 00 00 	r2 = 11832 <lmp_acl_link : 2e38 >			  ## lmp.c:661:0
    4cba:    01 08             	r1 = r0			  ## lmp.c:661:0
    4cbc:    20 08             	r0 = r2			  ## lmp.c:661:0
    4cbe:    03 f6 dc 00       	r3 = [r0 + 220]			  ## lmp.c:665:27
    4cc2:    13 f2 07 00       	if (r3 == r1) goto 14 <lmp_conn_for_link+0x20 : 4cd4 >			  ## lmp.c:665:27
    4cc6:    00 fc 18 01       	r0 = r0 + 280			  ## lmp.c:664:5
    4cca:    23 fc 18 01       	r3 = r2 + 280
    4cce:    30 f2 f6 3f       	if (r0 < r3) goto -20 <lmp_conn_for_link+0xA : 4cbe >
    4cd2:    00 70             	r0 = 0
    4cd4:    20 00             	rts			  ## lmp.c:670:1


lmp_conn_for_address:
    4cd6:    76 01             	[--sp] = {rets, r6-r4}			  ## lmp.c:547:0
    4cd8:    05 08             	r5 = r0			  ## lmp.c:547:0
    4cda:    88 f3 5f 10       	call 1056958 <local_irq_disable : 106d9c >			  ## lmp.c:550:5
    4cde:    c6 ff ed 2e 00 00 	r6 = 12013 <lmp_acl_link+0xB5 : 2eed >			  ## lmp.c:550:5
    4ce4:    64 08             	r4 = r6			  ## lmp.c:550:5
    4ce6:    00 f7 1f 40       	r0 = h[r4 + 31] (u)			  ## lmp.c:552:26
    4cea:    0a 20             	if (r0 == 0) goto 20 <lmp_conn_for_address+0x2A : 4d00 >			  ## lmp.c:552:26
    4cec:    00 f6 27 40       	r0 = [r4 + 39]			  ## lmp.c:552:42
    4cf0:    07 20             	if (r0 == 0) goto 14 <lmp_conn_for_address+0x2A : 4d00 >			  ## lmp.c:552:42
    4cf2:    12 2a             	if (r5 == 0) goto 36 <lmp_conn_for_address+0x42 : 4d18 >
    4cf4:    62 70             	r2 = 6			  ## lmp.c:557:18
    4cf6:    40 08             	r0 = r4			  ## lmp.c:557:18
    4cf8:    51 08             	r1 = r5			  ## lmp.c:557:18
    4cfa:    88 f3 f7 10       	call 1057262 <memcmp : 106eec >			  ## lmp.c:557:18
    4cfe:    0c 20             	if (r0 == 0) goto 24 <lmp_conn_for_address+0x42 : 4d18 >			  ## lmp.c:557:18
    4d00:    40 fc 63 00       	r0 = r4 + 99			  ## lmp.c:551:5
    4d04:    44 fc 18 01       	r4 = r4 + 280			  ## lmp.c:551:5
    4d08:    61 fc 63 00       	r1 = r6 + 99			  ## lmp.c:551:5
    4d0c:    10 f2 eb 3f       	if (r0 < r1) goto -42 <lmp_conn_for_address+0x10 : 4ce6 >			  ## lmp.c:551:5
    4d10:    88 f3 42 10       	call 1056900 <local_irq_enable : 106d98 >			  ## lmp.c:563:5
    4d14:    00 70             	r0 = 0			  ## lmp.c:563:5
    4d16:    56 01             	{pc, r6-r4} = [sp++]			  ## lmp.c:565:1
    4d18:    88 f3 3e 10       	call 1056892 <local_irq_enable : 106d98 >
    4d1c:    40 fc 4b ff       	r0 = r4 + -181
    4d20:    56 01             	{pc, r6-r4} = [sp++]			  ## lmp.c:565:1
    4d22:    00 00             	nop


connection_tx_handler:
    4d24:    7f 01             	[--sp] = {rets, r15-r4}			  ## bredr_link.c:2425:0
    4d26:    f2 0b             	sp += -28			  ## bredr_link.c:2425:0
    4d28:    07 08             	r7 = r0			  ## bredr_link.c:2425:0
    4d2a:    7e fc a4 00       	r14 = r7 + 164			  ## bredr_link.c:2425:0
    4d2e:    00 f6 2c e0       	r0 = [r14 + 44]			  ## bredr_link.c:2429:36
    4d32:    c1 ff ff ff 00 00 	r1 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## bredr_link.c:2431:8
    4d38:    91 f5 1a 00       	h[sp+26] = r1			  ## bredr_link.c:2431:8
    4d3c:    44 9f             	r4 = r7 + 20			  ## bredr_link.c:2431:8
    4d3e:    71 69             	r1 = b[r4 + 23] (u)			  ## bredr_link.c:2433:13
    4d40:    20 f3 45 11       	if ((r1 & 1) != 0) goto 650 <connection_tx_handler+0x2AA : 4fce >			  ## bredr_link.c:2433:13
    4d44:    11 b0             	r1 |= 1			  ## bredr_link.c:2436:23
    4d46:    79 69             	b[r4 + 23] = r1			  ## bredr_link.c:2436:23
    4d48:    a1 a1             	r1 = sp + 26			  ## bredr_link.c:2436:23
    4d4a:    b0 f3 a3 cf       	call -1990842 <bredr_frame_get_empty_txbuf_index : 1e1ec94 >			  ## bredr_link.c:2438:5
    4d4e:    c0 98             	r0 = r4 + 12
    4d50:    28 02             	[sp+8] = r0
    4d52:    e0 fc 40 00       	r0 = r14 + 64
    4d56:    38 02             	[sp+12] = r0
    4d58:    ef fc 38 00       	r15 = r14 + 56
    4d5c:    e9 fc 50 00       	r9 = r14 + 80
    4d60:    0a 70             	r10 = 0
    4d62:    0d 70             	r13 = 0
    4d64:    5f 02             	[sp+20] = r7
    4d66:    4c 02             	[sp+16] = r4
    4d68:    a0 a1             	r0 = sp + 26
    4d6a:    05 fa 00 0a       	r5 = b[r0+r10] (u)			  ## bredr_link.c:2475:17
    4d6e:    00 ff ff 50 27 01 	if (r5 == 255) goto 590 <connection_tx_handler+0x29E : 4fc2 >
    4d74:    a8 c0             	r0 = r5 << 2			  ## bredr_link.c:2479:19
    4d76:    80 fb 00 89       	r8 = r9 + r0			  ## bredr_link.c:2479:19
    4d7a:    06 f6 00 80       	r6 = [r8 + 0]			  ## bredr_link.c:2479:19
    4d7e:    64 2c             	if (r6 == 0) goto 200 <connection_tx_handler+0x124 : 4e48 >
    4d80:    10 70             	r0 = 1			  ## bredr_link.c:2480:47
    4d82:    01 2a             	if (r5 == 0) goto 2 <connection_tx_handler+0x62 : 4d86 >			  ## bredr_link.c:2480:47
    4d84:    00 70             	r0 = 0			  ## bredr_link.c:2480:47
    4d86:    a0 f6 00 90       	r0 = [r9+r0<<2]			  ## bredr_link.c:2480:35
    4d8a:    06 f2 5d 00       	if (r6 == r0) goto 186 <connection_tx_handler+0x124 : 4e48 >			  ## bredr_link.c:2480:35
    4d8e:    50 5c             	r0 = h[r6 + 10] (u)			  ## bredr_link.c:2485:54
    4d90:    61 5c             	r1 = h[r6 + 12] (u)			  ## bredr_link.c:2485:35
    4d92:    01 f2 59 10       	if (r1 != r0) goto 178 <connection_tx_handler+0x124 : 4e48 >			  ## bredr_link.c:2485:35
    4d96:    00 70             	r0 = 0			  ## bredr_link.c:2487:32
    4d98:    10 f6 00 80       	[r8 + 0] = r0			  ## bredr_link.c:2487:32
    4d9c:    60 6c             	r0 = b[r6 + 6] (u)			  ## bredr_link.c:2489:26
    4d9e:    30 e0 0d 10       	if (r0 != 3) goto 26 <connection_tx_handler+0x98 : 4dbc >			  ## bredr_link.c:2489:26
    4da2:    c0 6d             	r0 = b[r6 + 28] (u)			  ## bredr_link.c:2490:30
    4da4:    e0 ef 0a 30       	if (r0 < 254) goto 20 <connection_tx_handler+0x98 : 4dbc >			  ## bredr_link.c:2490:30
    4da8:    d0 6d             	r0 = b[r6 + 29] (u)			  ## bredr_link.c:2492:25
    4daa:    10 e0 07 10       	if (r0 != 1) goto 14 <connection_tx_handler+0x98 : 4dbc >			  ## bredr_link.c:2492:25
    4dae:    f0 6d             	r0 = b[r6 + 31] (u)			  ## bredr_link.c:2493:29
    4db0:    b0 e0 04 10       	if (r0 != 11) goto 8 <connection_tx_handler+0x98 : 4dbc >			  ## bredr_link.c:2493:29
    4db4:    00 f6 2c e0       	r0 = [r14 + 44]
    4db8:    b0 f3 a0 cf       	call -1990848 <link_conn_set_ptt : 1e1ecfc >			  ## bredr_link.c:2494:29
    4dbc:    51 6c             	r1 = b[r6 + 5] (u)			  ## bredr_link.c:2500:26
    4dbe:    70 fc 40 00       	r0 = r7 + 64			  ## bredr_link.c:2500:26
    4dc2:    00 f3 04 10       	if ((r1 & 1) == 0) goto 8 <connection_tx_handler+0xAA : 4dce >			  ## bredr_link.c:2500:26
    4dc6:    c1 61             	r1 = b[r0 + 28] (u)			  ## bredr_link.c:2501:44
    4dc8:    71 b1             	r1 &= 4294967291			  ## bredr_link.c:2501:44
    4dca:    c9 61             	b[r0 + 28] = r1			  ## bredr_link.c:2501:44
    4dcc:    51 6c             	r1 = b[r6 + 5] (u)			  ## bredr_link.c:2501:44
    4dce:    02 f3 09 10       	if ((r1 & 4) == 0) goto 18 <connection_tx_handler+0xC0 : 4de4 >
    4dd2:    11 60             	r1 = b[r0 + 1] (u)			  ## bredr_link.c:2505:33
    4dd4:    11 b1             	r1 |= 4			  ## bredr_link.c:2505:33
    4dd6:    19 60             	b[r0 + 1] = r1			  ## bredr_link.c:2505:33
    4dd8:    c0 ff 6a 58 e1 01 	r0 = 31545450 <update_target_end+0x29E2 : 1e1586a >			  ## bredr_link.c:2506:17
    4dde:    b0 f3 ca 52       	call -2054764 <puts : 1e0f376 >			  ## bredr_link.c:2506:17
    4de2:    51 6c             	r1 = b[r6 + 5] (u)			  ## bredr_link.c:2506:17
    4de4:    03 f3 05 10       	if ((r1 & 8) == 0) goto 10 <connection_tx_handler+0xCE : 4df2 >
    4de8:    c0 ff 79 58 e1 01 	r0 = 31545465 <update_target_end+0x29F1 : 1e15879 >			  ## bredr_link.c:2510:17
    4dee:    b0 f3 c2 52       	call -2054780 <puts : 1e0f376 >			  ## bredr_link.c:2510:17
    4df2:    12 6c             	r2 = b[r6 + 1] (u)			  ## bredr_link.c:2513:26
    4df4:    02 f3 0d 20       	if ((r2 & 4) == 0) goto 26 <connection_tx_handler+0xEE : 4e12 >			  ## bredr_link.c:2513:26
    4df8:    00 f6 2c e0       	r0 = [r14 + 44]
    4dfc:    81 fd 08 12       	r1 = uextra(r2, p:1, l:1)			  ## bredr_link.c:2514:43
    4e00:    22 fd 01 29       	r2 = r2 & 1			  ## bredr_link.c:2514:17
    4e04:    b0 f3 7e cf       	call -1990916 <link_conn_set_encrypt : 1e1ed04 >			  ## bredr_link.c:2514:17
    4e08:    c0 ff 8a 58 e1 01 	r0 = 31545482 <update_target_end+0x2A02 : 1e1588a >			  ## bredr_link.c:2516:17
    4e0e:    b0 f3 b2 52       	call -2054812 <puts : 1e0f376 >			  ## bredr_link.c:2516:17
    4e12:    50 6c             	r0 = b[r6 + 5] (u)			  ## bredr_link.c:2519:26
    4e14:    04 f3 08 00       	if ((r0 & 16) == 0) goto 16 <connection_tx_handler+0x104 : 4e28 >			  ## bredr_link.c:2519:26
    4e18:    02 f9 00 71       	r2 = b[r7 + 256] (u)			  ## bredr_link.c:2520:17
    4e1c:    01 f6 e0 72       	r1 = [r7 + 736]			  ## bredr_link.c:2520:48
    4e20:    70 08             	r0 = r7			  ## bredr_link.c:2520:17
    4e22:    23 02             	r3 = [sp+8]			  ## bredr_link.c:2520:17
    4e24:    b0 f3 f4 d0       	call -1990168 <bredr_link_set_afh : 1e1f010 >			  ## bredr_link.c:2520:17
    4e28:    40 6c             	r0 = b[r6 + 4] (u)			  ## bredr_link.c:2523:26
    4e2a:    02 20             	if (r0 == 0) goto 4 <connection_tx_handler+0x10C : 4e30 >			  ## bredr_link.c:2523:26
    4e2c:    10 f9 01 e0       	b[r14 + 1] = r0			  ## bredr_link.c:2524:35
    4e30:    32 6c             	r2 = b[r6 + 3] (u)			  ## bredr_link.c:2527:26
    4e32:    07 24             	if (r2 == 0) goto 14 <connection_tx_handler+0x11E : 4e42 >			  ## bredr_link.c:2527:26
    4e34:    70 69             	r0 = b[r4 + 23] (u)			  ## bredr_link.c:2528:26
    4e36:    22 f3 04 00       	if ((r0 & 4) != 0) goto 8 <connection_tx_handler+0x11E : 4e42 >			  ## bredr_link.c:2528:26
    4e3a:    11 70             	r1 = 1			  ## bredr_link.c:2529:21
    4e3c:    70 08             	r0 = r7			  ## bredr_link.c:2529:21
    4e3e:    b0 f3 63 a1       	call -2014522 <bredr_link_event : 1e19108 >			  ## bredr_link.c:2529:21
    4e42:    60 08             	r0 = r6			  ## bredr_link.c:2536:13
    4e44:    b0 f3 05 0a       	call -2092022 <bredr_tx_bulk_free : 1e06252 >			  ## bredr_link.c:2536:13
    4e48:    0c 70             	r12 = 0
    4e4a:    0d e0 02 10       	if (r13 != 0) goto 4 <connection_tx_handler+0x12E : 4e52 >
    4e4e:    0a e0 b5 10       	if (r10 != 0) goto 362 <connection_tx_handler+0x298 : 4fbc >
    4e52:    f0 08             	r0 = r15			  ## bredr_link.c:2540:18
    4e54:    b0 f3 20 0a       	call -2091968 <bredr_tx_bulk_pop : 1e06298 >			  ## bredr_link.c:2540:18
    4e58:    a0 20             	if (r0 == 0) goto 320 <connection_tx_handler+0x276 : 4f9a >
    4e5a:    0c 08             	r12 = r0
    4e5c:    20 70             	r0 = 2			  ## bredr_link.c:2555:44
    4e5e:    88 69             	b[r4 + 24] = r0			  ## bredr_link.c:2555:44
    4e60:    00 f9 00 c0       	r0 = b[r12 + 0] (u)			  ## bredr_link.c:2346:13
    4e64:    0b f6 2c e0       	r11 = [r14 + 44]			  ## bredr_link.c:2344:36
    4e68:    02 f3 0c 00       	if ((r0 & 4) == 0) goto 24 <connection_tx_handler+0x160 : 4e84 >
    4e6c:    81 fd 08 10       	r1 = uextra(r0, p:1, l:1)			  ## bredr_link.c:2347:35
    4e70:    22 fd 01 09       	r2 = r0 & 1			  ## bredr_link.c:2347:9
    4e74:    b0 08             	r0 = r11			  ## bredr_link.c:2347:9
    4e76:    b0 f3 45 cf       	call -1991030 <link_conn_set_encrypt : 1e1ed04 >			  ## bredr_link.c:2347:9
    4e7a:    c0 ff 94 58 e1 01 	r0 = 31545492 <update_target_end+0x2A0C : 1e15894 >			  ## bredr_link.c:2348:9
    4e80:    b0 f3 79 52       	call -2054926 <puts : 1e0f376 >			  ## bredr_link.c:2348:9
    4e84:    02 f9 02 c0       	r2 = b[r12 + 2] (u)			  ## bredr_link.c:2351:13
    4e88:    04 24             	if (r2 == 0) goto 8 <connection_tx_handler+0x16E : 4e92 >			  ## bredr_link.c:2351:13
    4e8a:    11 70             	r1 = 1			  ## bredr_link.c:2359:13
    4e8c:    70 08             	r0 = r7			  ## bredr_link.c:2359:13
    4e8e:    b0 f3 3b a1       	call -2014602 <bredr_link_event : 1e19108 >			  ## bredr_link.c:2359:13
    4e92:    00 f9 06 c0       	r0 = b[r12 + 6] (u)
    4e96:    01 fc ff ff       	r1 = r0 + -1			  ## bredr_link.c:2363:9
    4e9a:    21 e0 57 20       	if (r1 >= 2) goto 174 <connection_tx_handler+0x228 : 4f4c >			  ## bredr_link.c:2363:9
    4e9e:    f6 08             	r6 = r15
    4ea0:    0d f7 0c c0       	r13 = h[r12 + 12] (u)			  ## bredr_link.c:2374:25
    4ea4:    e0 08             	r0 = r14			  ## bredr_link.c:2374:25
    4ea6:    07 f7 0a c0       	r7 = h[r12 + 10] (u)			  ## bredr_link.c:2374:15
    4eaa:    0f f7 16 b0       	r15 = h[r11 + 22] (u)			  ## bredr_frame.h:142:22
    4eae:    12 60             	r2 = b[r0 + 1] (u)			  ## bredr_frame.h:142:22
    4eb0:    73 69             	r3 = b[r4 + 23] (u)			  ## bredr_link.c:2376:62
    4eb2:    02 34             	if (r2 != 0) goto 4 <connection_tx_handler+0x194 : 4eb8 >			  ## bredr_link.c:2376:62
    4eb4:    bf f3 94 f2       	call -6872 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
    4eb8:    34 70             	r4 = 3
    4eba:    c1 ff 0a ea e1 01 	r1 = 31582730 <packet_2M_table : 1e1ea0a >
    4ec0:    23 f3 0c f0       	if ((r15 & 8) != 0) goto 24 <connection_tx_handler+0x1B8 : 4edc >
    4ec4:    20 fd 04 39       	r0 = r3 & 4			  ## bredr_link.c:2376:62
    4ec8:    c1 ff c2 e9 e1 01 	r1 = 31582658 <packet_1M_table : 1e1e9c2 >			  ## bredr_link.c:2376:62
    4ece:    03 20             	if (r0 == 0) goto 6 <connection_tx_handler+0x1B2 : 4ed6 >			  ## bredr_link.c:2376:62
    4ed0:    c1 ff f2 e9 e1 01 	r1 = 31582706 <packet_1M_table_tws : 1e1e9f2 >
    4ed6:    64 70             	r4 = 6
    4ed8:    01 20             	if (r0 == 0) goto 2 <connection_tx_handler+0x1B8 : 4edc >
    4eda:    34 70             	r4 = 3
    4edc:    90 fb d0 07       	r0 = r7 - r13			  ## bredr_link.c:2374:23
    4ee0:    03 70             	r3 = 0
    4ee2:    17 08             	r7 = r1
    4ee4:    6f 08             	r15 = r6
    4ee6:    36 5e             	r6 = h[r7 + 6] (u)			  ## bredr_link.c:2293:13
    4ee8:    26 f2 07 80       	if (r6 > r2) goto 14 <connection_tx_handler+0x1D6 : 4efa >			  ## bredr_link.c:2293:13
    4eec:    06 5e             	r6 = h[r7 + 0] (u)			  ## bredr_link.c:2297:20
    4eee:    06 f2 08 a0       	ifs (r6 >= r0) goto 16 <connection_tx_handler+0x1DE : 4f02 >			  ## bredr_link.c:2297:20
    4ef2:    13 80             	r3 += 1			  ## bredr_link.c:2292:31
    4ef4:    87 80             	r7 += 8			  ## bredr_link.c:2292:19
    4ef6:    43 f2 f6 3f       	if (r3 < r4) goto -20 <connection_tx_handler+0x1C2 : 4ee6 >			  ## bredr_link.c:2292:19
    4efa:    da c0             	r2 = r3 << 3			  ## bredr_link.c:2302:24
    4efc:    21 09             	r1 += r2			  ## bredr_link.c:2302:12
    4efe:    17 fc f8 ff       	r7 = r1 + -8			  ## bredr_link.c:2302:12
    4f02:    13 5e             	r3 = h[r7 + 2] (u)			  ## bredr_link.c:2377:19
    4f04:    02 f9 06 c0       	r2 = b[r12 + 6] (u)			  ## bredr_link.c:2381:17
    4f08:    01 f7 0c c0       	r1 = h[r12 + 12] (u)			  ## bredr_link.c:2387:53
    4f0c:    24 5e             	r4 = h[r7 + 4] (u)			  ## bredr_link.c:2388:31
    4f0e:    1c 02             	[sp+4] = r4			  ## bredr_link.c:2387:9
    4f10:    24 70             	r4 = 2			  ## bredr_link.c:2387:9
    4f12:    01 22             	if (r1 == 0) goto 2 <connection_tx_handler+0x1F2 : 4f16 >			  ## bredr_link.c:2387:9
    4f14:    14 70             	r4 = 1			  ## bredr_link.c:2381:13
    4f16:    22 e0 01 00       	if (r2 == 2) goto 2 <connection_tx_handler+0x1F8 : 4f1c >
    4f1a:    14 70             	r4 = 1			  ## bredr_link.c:2381:13
    4f1c:    0c 02             	[sp] = r4			  ## bredr_link.c:2387:9
    4f1e:    44 02             	r4 = [sp+16]			  ## bredr_link.c:2387:9
    4f20:    30 f2 01 c0       	ifs (r0 > r3) goto 2 <connection_tx_handler+0x202 : 4f26 >
    4f24:    03 08             	r3 = r0			  ## bredr_link.c:2377:13
    4f26:    80 fb 10 0c       	r0 = r12 + r1			  ## bredr_link.c:2387:51
    4f2a:    c2 91             	r2 = r0 + 28			  ## bredr_link.c:2387:51
    4f2c:    b0 08             	r0 = r11			  ## bredr_link.c:2387:9
    4f2e:    51 08             	r1 = r5			  ## bredr_link.c:2387:9
    4f30:    b0 f3 ca d0       	call -1990252 <__write_reg_txinfo : 1e1f0c8 >			  ## bredr_link.c:2387:9
    4f34:    00 f7 0c c0       	r0 = h[r12 + 12] (u)			  ## bredr_link.c:2390:20
    4f38:    30 09             	r0 += r3			  ## bredr_link.c:2390:20
    4f3a:    10 f7 0c c0       	h[r12 + 12] = r0			  ## bredr_link.c:2390:20
    4f3e:    01 f7 0a c0       	r1 = h[r12 + 10] (u)			  ## bredr_link.c:2391:31
    4f42:    20 04             	r0 = r0.l (u)			  ## bredr_link.c:2390:20
    4f44:    57 02             	r7 = [sp+20]			  ## bredr_link.c:2390:20
    4f46:    01 f2 1b 00       	if (r1 == r0) goto 54 <connection_tx_handler+0x25C : 4f80 >			  ## bredr_link.c:2390:20
    4f4a:    30 18             	goto 96 <connection_tx_handler+0x288 : 4fac >			  ## bredr_link.c:2390:20
    4f4c:    30 e0 2c 10       	if (r0 != 3) goto 88 <connection_tx_handler+0x284 : 4fa8 >
    4f50:    71 69             	r1 = b[r4 + 23] (u)			  ## bredr_link.c:2364:17
    4f52:    30 70             	r0 = 3			  ## bredr_link.c:2364:17
    4f54:    02 f3 04 10       	if ((r1 & 4) == 0) goto 8 <connection_tx_handler+0x23C : 4f60 >			  ## bredr_link.c:2364:17
    4f58:    bf f3 42 f2       	call -7036 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
    4f5c:    00 f9 06 c0       	r0 = b[r12 + 6] (u)			  ## cpu.h:148:5
    4f60:    03 f7 0a c0       	r3 = h[r12 + 10] (u)			  ## bredr_link.c:2367:52
    4f64:    01 f9 07 c0       	r1 = b[r12 + 7] (u)			  ## bredr_link.c:2368:31
    4f68:    19 02             	[sp+4] = r1			  ## bredr_link.c:2367:9
    4f6a:    c2 fc 1c 00       	r2 = r12 + 28			  ## bredr_link.c:2367:42
    4f6e:    08 02             	[sp] = r0			  ## bredr_link.c:2367:9
    4f70:    b0 08             	r0 = r11			  ## bredr_link.c:2367:9
    4f72:    51 08             	r1 = r5			  ## bredr_link.c:2367:9
    4f74:    b0 f3 a8 d0       	call -1990320 <__write_reg_txinfo : 1e1f0c8 >			  ## bredr_link.c:2367:9
    4f78:    00 f7 0a c0       	r0 = h[r12 + 10] (u)			  ## bredr_link.c:2369:26
    4f7c:    10 f7 0c c0       	h[r12 + 12] = r0			  ## bredr_link.c:2369:20
    4f80:    00 f6 10 c0       	r0 = [r12 + 16]
    4f84:    01 f6 14 c0       	r1 = [r12 + 20]
    4f88:    19 40             	[r0 + 4] = r1
    4f8a:    08 42             	[r1 + 0] = r0
    4f8c:    c0 fc 10 00       	r0 = r12 + 16
    4f90:    10 f6 10 c0       	[r12 + 16] = r0
    4f94:    10 f6 14 c0       	[r12 + 20] = r0
    4f98:    09 18             	goto 18 <connection_tx_handler+0x288 : 4fac >
    4f9a:    20 68             	r0 = b[r4 + 2] (u)			  ## bredr_link.c:2546:32
    4f9c:    0f 20             	if (r0 == 0) goto 30 <connection_tx_handler+0x298 : 4fbc >
    4f9e:    30 02             	r0 = [sp+12]			  ## bredr_link.c:2543:26
    4fa0:    b0 f3 7a 09       	call -2092300 <bredr_tx_bulk_pop : 1e06298 >			  ## bredr_link.c:2543:26
    4fa4:    5a 31             	if (r0 != 0) goto -332 <connection_tx_handler+0x136 : 4e5a >
    4fa6:    0a 18             	goto 20 <connection_tx_handler+0x298 : 4fbc >
    4fa8:    bf f3 1a f2       	call -7116 <p33_soft_reset : 33e0 >			  ## cpu.h:148:5
    4fac:    88 f3 f6 0e       	call 1056236 <local_irq_disable : 106d9c >			  ## bredr_link.c:2401:5
    4fb0:    b0 08             	r0 = r11			  ## bredr_link.c:2405:5
    4fb2:    51 08             	r1 = r5			  ## bredr_link.c:2405:5
    4fb4:    b0 f3 a7 d0       	call -1990322 <__clean_reg_txempty : 1e1f106 >			  ## bredr_link.c:2405:5
    4fb8:    88 f3 ee 0e       	call 1056220 <local_irq_enable : 106d98 >			  ## bredr_link.c:2406:5
    4fbc:    1c f6 00 80       	[r8 + 0] = r12			  ## bredr_link.c:2559:28
    4fc0:    cd 08             	r13 = r12			  ## bredr_link.c:2559:28
    4fc2:    1a 80             	r10 += 1			  ## bredr_link.c:2474:25
    4fc4:    2a e0 d0 1e       	if (r10 != 2) goto -608 <connection_tx_handler+0x44 : 4d68 >
    4fc8:    70 69             	r0 = b[r4 + 23] (u)
    4fca:    70 b0             	r0 &= 4294967294
    4fcc:    78 69             	b[r4 + 23] = r0
    4fce:    0e 0a             	sp += 28
    4fd0:    5f 01             	{pc, r15-r4} = [sp++]			  ## bredr_link.c:2563:1
    4fd2:    00 00             	nop


tws_sync_call_begin:
    4fd4:    51 8e             	r1 += -27
    4fd6:    3b 12             	call 1142 <report_overlay_end+0x106 : 544e >
    4fd8:    d6 be             	r6 ^= r7
    4fda:    e0 01             	[--sp] = {psr}
    4fdc:    03 58             	r3 = h[r4 + 0] (u)
    4fde:    e1 01             	[--sp] = {psr, reti}


tws_sync_call_end:
    4fe0:    44 32             	if (r1 != 0) goto 136 <nvbss_begin+0x6A : 506a >
    4fe2:    41 43             	r1 = [r1 + 80]
    4fe4:    42 e9 e1 01       	if (r2 == -108) goto 962 <report_overlay_end+0x62 : 53aa >

Disassembly of section .nv_bss:
nvbss_begin:
    5000:    00 00 00 00     "\0\0\0\0"
    5004:    00 00 00 00     "\0\0\0\0"
    5008:    00 00 00 00     "\0\0\0\0"
    500c:    00 00 00 00     "\0\0\0\0"
    5010:    00 00 00 00     "\0\0\0\0"
    5014:    00 00 00 00     "\0\0\0\0"
    5018:    00 00 00 00     "\0\0\0\0"
    501c:    00 00 00 00     "\0\0\0\0"
    5020:    00 00 00 00     "\0\0\0\0"
    5024:    00 00 00 00     "\0\0\0\0"
    5028:    00 00 00 00     "\0\0\0\0"
    502c:    00 00 00 00     "\0\0\0\0"
    5030:    00 00 00 00     "\0\0\0\0"
    5034:    00 00 00 00     "\0\0\0\0"
    5038:    00 00 00 00     "\0\0\0\0"
    503c:    00 00 00 00     "\0\0\0\0"
    5040:    00 00 00 00     "\0\0\0\0"
    5044:    00 00 00 00     "\0\0\0\0"
    5048:    00 00 00 00     "\0\0\0\0"
    504c:    00 00 00 00     "\0\0\0\0"
    5050:    00 00 00 00     "\0\0\0\0"
    5054:    00 00 00 00     "\0\0\0\0"
    5058:    00 00 00 00     "\0\0\0\0"
    505c:    00 00 00 00     "\0\0\0\0"
    5060:    00 00 00 00     "\0\0\0\0"
    5064:    00 00 00 00     "\0\0\0\0"
    5068:    00 00 00 00     "\0\0\0\0"
    506c:    00 00 00 00     "\0\0\0\0"
    5070:    00 00 00 00     "\0\0\0\0"
    5074:    00 00 00 00     "\0\0\0\0"
    5078:    00 00 00 00     "\0\0\0\0"
    507c:    00 00 00 00     "\0\0\0\0"
    5080:    00 00 00 00     "\0\0\0\0"
    5084:    00 00 00 00     "\0\0\0\0"
    5088:    00 00 00 00     "\0\0\0\0"
    508c:    00 00 00 00     "\0\0\0\0"
    5090:    00 00 00 00     "\0\0\0\0"
    5094:    00 00 00 00     "\0\0\0\0"
    5098:    00 00 00 00     "\0\0\0\0"
    509c:    00 00 00 00     "\0\0\0\0"
    50a0:    00 00 00 00     "\0\0\0\0"
    50a4:    00 00 00 00     "\0\0\0\0"
    50a8:    00 00 00 00     "\0\0\0\0"
    50ac:    00 00 00 00     "\0\0\0\0"
    50b0:    00 00 00 00     "\0\0\0\0"
    50b4:    00 00 00 00     "\0\0\0\0"
    50b8:    00 00 00 00     "\0\0\0\0"
    50bc:    00 00 00 00     "\0\0\0\0"
    50c0:    00 00 00 00     "\0\0\0\0"
    50c4:    00 00 00 00     "\0\0\0\0"
    50c8:    00 00 00 00     "\0\0\0\0"
    50cc:    00 00 00 00     "\0\0\0\0"
    50d0:    00 00 00 00     "\0\0\0\0"
    50d4:    00 00 00 00     "\0\0\0\0"
    50d8:    00 00 00 00     "\0\0\0\0"
    50dc:    00 00 00 00     "\0\0\0\0"
    50e0:    00 00 00 00     "\0\0\0\0"
    50e4:    00 00 00 00     "\0\0\0\0"
    50e8:    00 00 00 00     "\0\0\0\0"
    50ec:    00 00 00 00     "\0\0\0\0"
    50f0:    00 00 00 00     "\0\0\0\0"
    50f4:    00 00 00 00     "\0\0\0\0"
    50f8:    00 00 00 00     "\0\0\0\0"
    50fc:    00 00 00 00     "\0\0\0\0"
    5100:    00 00 00 00     "\0\0\0\0"
    5104:    00 00 00 00     "\0\0\0\0"
    5108:    00 00 00 00     "\0\0\0\0"
    510c:    00 00 00 00     "\0\0\0\0"
    5110:    00 00 00 00     "\0\0\0\0"
    5114:    00 00 00 00     "\0\0\0\0"
    5118:    00 00 00 00     "\0\0\0\0"
    511c:    00 00 00 00     "\0\0\0\0"
    5120:    00 00 00 00     "\0\0\0\0"
    5124:    00 00 00 00     "\0\0\0\0"
    5128:    00 00 00 00     "\0\0\0\0"
    512c:    00 00 00 00     "\0\0\0\0"
    5130:    00 00 00 00     "\0\0\0\0"
    5134:    00 00 00 00     "\0\0\0\0"
    5138:    00 00 00 00     "\0\0\0\0"
    513c:    00 00 00 00     "\0\0\0\0"
    5140:    00 00 00 00     "\0\0\0\0"
    5144:    00 00 00 00     "\0\0\0\0"
    5148:    00 00 00 00     "\0\0\0\0"
    514c:    00 00 00 00     "\0\0\0\0"
    5150:    00 00 00 00     "\0\0\0\0"
    5154:    00 00 00 00     "\0\0\0\0"
    5158:    00 00 00 00     "\0\0\0\0"
    515c:    00 00 00 00     "\0\0\0\0"
    5160:    00 00 00 00     "\0\0\0\0"
    5164:    00 00 00 00     "\0\0\0\0"
    5168:    00 00 00 00     "\0\0\0\0"
    516c:    00 00 00 00     "\0\0\0\0"
    5170:    00 00 00 00     "\0\0\0\0"
    5174:    00 00 00 00     "\0\0\0\0"
    5178:    00 00 00 00     "\0\0\0\0"
    517c:    00 00 00 00     "\0\0\0\0"
    5180:    00 00 00 00     "\0\0\0\0"
    5184:    00 00 00 00     "\0\0\0\0"
    5188:    00 00 00 00     "\0\0\0\0"
    518c:    00 00 00 00     "\0\0\0\0"
    5190:    00 00 00 00     "\0\0\0\0"
    5194:    00 00 00 00     "\0\0\0\0"
    5198:    00 00 00 00     "\0\0\0\0"
    519c:    00 00 00 00     "\0\0\0\0"
    51a0:    00 00 00 00     "\0\0\0\0"
    51a4:    00 00 00 00     "\0\0\0\0"
    51a8:    00 00 00 00     "\0\0\0\0"
    51ac:    00 00 00 00     "\0\0\0\0"
    51b0:    00 00 00 00     "\0\0\0\0"
    51b4:    00 00 00 00     "\0\0\0\0"
    51b8:    00 00 00 00     "\0\0\0\0"
    51bc:    00 00 00 00     "\0\0\0\0"
    51c0:    00 00 00 00     "\0\0\0\0"
    51c4:    00 00 00 00     "\0\0\0\0"
    51c8:    00 00 00 00     "\0\0\0\0"
    51cc:    00 00 00 00     "\0\0\0\0"
    51d0:    00 00 00 00     "\0\0\0\0"
    51d4:    00 00 00 00     "\0\0\0\0"
    51d8:    00 00 00 00     "\0\0\0\0"
    51dc:    00 00 00 00     "\0\0\0\0"
    51e0:    00 00 00 00     "\0\0\0\0"
    51e4:    00 00 00 00     "\0\0\0\0"
    51e8:    00 00 00 00     "\0\0\0\0"
    51ec:    00 00 00 00     "\0\0\0\0"
    51f0:    00 00 00 00     "\0\0\0\0"
    51f4:    00 00 00 00     "\0\0\0\0"
    51f8:    00 00 00 00     "\0\0\0\0"
    51fc:    00 00 00 00     "\0\0\0\0"
    5200:    00 00 00 00     "\0\0\0\0"
    5204:    00 00 00 00     "\0\0\0\0"
    5208:    00 00 00 00     "\0\0\0\0"
    520c:    00 00 00 00     "\0\0\0\0"
    5210:    00 00 00 00     "\0\0\0\0"
    5214:    00 00 00 00     "\0\0\0\0"
    5218:    00 00 00 00     "\0\0\0\0"
    521c:    00 00 00 00     "\0\0\0\0"
    5220:    00 00 00 00     "\0\0\0\0"
    5224:    00 00 00 00     "\0\0\0\0"
    5228:    00 00 00 00     "\0\0\0\0"
    522c:    00 00 00 00     "\0\0\0\0"
    5230:    00 00 00 00     "\0\0\0\0"
    5234:    00 00 00 00     "\0\0\0\0"
    5238:    00 00 00 00     "\0\0\0\0"
    523c:    00 00 00 00     "\0\0\0\0"
    5240:    00 00 00 00     "\0\0\0\0"
    5244:    00 00 00 00     "\0\0\0\0"
    5248:    00 00 00 00     "\0\0\0\0"
    524c:    00 00 00 00     "\0\0\0\0"
    5250:    00 00 00 00     "\0\0\0\0"
    5254:    00 00 00 00     "\0\0\0\0"
    5258:    00 00 00 00     "\0\0\0\0"
    525c:    00 00 00 00     "\0\0\0\0"
    5260:    00 00 00 00     "\0\0\0\0"
    5264:    00 00 00 00     "\0\0\0\0"
    5268:    00 00 00 00     "\0\0\0\0"
    526c:    00 00 00 00     "\0\0\0\0"
    5270:    00 00 00 00     "\0\0\0\0"
    5274:    00 00 00 00     "\0\0\0\0"
    5278:    00 00 00 00     "\0\0\0\0"
    527c:    00 00 00 00     "\0\0\0\0"
    5280:    00 00 00 00     "\0\0\0\0"
    5284:    00 00 00 00     "\0\0\0\0"
    5288:    00 00 00 00     "\0\0\0\0"
    528c:    00 00 00 00     "\0\0\0\0"
    5290:    00 00 00 00     "\0\0\0\0"
    5294:    00 00 00 00     "\0\0\0\0"
    5298:    00 00 00 00     "\0\0\0\0"
    529c:    00 00 00 00     "\0\0\0\0"
    52a0:    00 00 00 00     "\0\0\0\0"
    52a4:    00 00 00 00     "\0\0\0\0"
    52a8:    00 00 00 00     "\0\0\0\0"
    52ac:    00 00 00 00     "\0\0\0\0"
    52b0:    00 00 00 00     "\0\0\0\0"
    52b4:    00 00 00 00     "\0\0\0\0"
    52b8:    00 00 00 00     "\0\0\0\0"
    52bc:    00 00 00 00     "\0\0\0\0"
    52c0:    00 00 00 00     "\0\0\0\0"
    52c4:    00 00 00 00     "\0\0\0\0"
    52c8:    00 00 00 00     "\0\0\0\0"
    52cc:    00 00 00 00     "\0\0\0\0"
    52d0:    00 00 00 00     "\0\0\0\0"
    52d4:    00 00 00 00     "\0\0\0\0"
    52d8:    00 00 00 00     "\0\0\0\0"
    52dc:    00 00 00 00     "\0\0\0\0"
    52e0:    00 00 00 00     "\0\0\0\0"
    52e4:    00 00 00 00     "\0\0\0\0"
    52e8:    00 00 00 00     "\0\0\0\0"
    52ec:    00 00 00 00     "\0\0\0\0"
    52f0:    00 00 00 00     "\0\0\0\0"
    52f4:    00 00 00 00     "\0\0\0\0"
    52f8:    00 00 00 00     "\0\0\0\0"
    52fc:    00 00 00 00     "\0\0\0\0"
    5300:    00 00 00 00     "\0\0\0\0"
    5304:    00 00 00 00     "\0\0\0\0"
    5308:    00 00 00 00     "\0\0\0\0"
    530c:    00 00 00 00     "\0\0\0\0"
    5310:    00 00 00 00     "\0\0\0\0"
    5314:    00 00 00 00     "\0\0\0\0"
    5318:    00 00 00 00     "\0\0\0\0"
    531c:    00 00 00 00     "\0\0\0\0"
    5320:    00 00 00 00     "\0\0\0\0"
    5324:    00 00 00 00     "\0\0\0\0"
    5328:    00 00 00 00     "\0\0\0\0"
    532c:    00 00 00 00     "\0\0\0\0"
    5330:    00 00 00 00     "\0\0\0\0"
    5334:    00 00 00 00     "\0\0\0\0"
    5338:    00 00 00 00     "\0\0\0\0"
    533c:    00 00 00 00     "\0\0\0\0"
    5340:    00 00 00 00     "\0\0\0\0"
Disassembly of section .ram0_empty0:
.ram0_empty0:
Disassembly of section .debug_str:
.debug_str:
Disassembly of section .debug_loc:
.debug_loc:
Disassembly of section .debug_abbrev:
.debug_abbrev:
Disassembly of section .debug_info:
.debug_info:
Disassembly of section .debug_ranges:
.debug_ranges:
Disassembly of section .debug_macinfo:
.debug_macinfo:
Disassembly of section .debug_pubnames:
.debug_pubnames:
Disassembly of section .debug_pubtypes:
.debug_pubtypes:
Disassembly of section .debug_frame:
.debug_frame:
Disassembly of section .debug_line:
.debug_line:
Disassembly of section .debug_aranges:
.debug_aranges:
Disassembly of section .shstrtab:
.shstrtab:
Disassembly of section .symtab:
.symtab:
Disassembly of section .strtab:
.strtab:
