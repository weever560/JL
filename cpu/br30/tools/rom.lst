
rom.exe:	file format ELF32-pi32v2

Disassembly of section .rom_code:
_start:
  100000:    c0 ea 04 20       	goto 0x4008 <usb_code_end : 10400c >			  ## startup.S:25:0


exception_irq_handler:
  100004:    58 e9 2f 38       	[--sp] = {ssp, usp, icfg, psr, rets, retx, rete, reti}			  ## startup.S:83:0
  100008:    d8 e8 ff ff       	[--sp] = {r15-r0}			  ## startup.S:84:0
  10000c:    64 e0 00 0e       	r0 = sp			  ## startup.S:85:0
  100010:    80 ea f4 6f       	call 0xdfe8 <exception_analyze : 10dffc >			  ## startup.S:86:0
  100014:    f7 9f             	goto -0x2 <exception_irq_handler+0x10 : 100014 >			  ## startup.S:88:0


the_debug_isr:
  100016:    d8 e8 01 00       	[--sp] = {r0}			  ## debug_stub.S:16:0
  10001a:    64 e0 00 0e       	r0 = sp			  ## debug_stub.S:17:0
  10001e:    ee ff 8c bc 02 00 	sp = 0x2bc8c			  ## debug_stub.S:18:0
  100024:    58 e9 ff 7f       	[--sp] = {sp, ssp, usp, icfg, sr10, sr9, sr8, sr7, cnum, psr, sr4, rets, retx, rete, reti}			  ## debug_stub.S:20:0
  100028:    d8 e8 ff ff       	[--sp] = {r15-r0}			  ## debug_stub.S:21:0
  10002c:    01 60             	r1 = [r0+0x0] 			  ## debug_stub.S:41:0
  10002e:    81 20             	[sp] = r1			  ## debug_stub.S:42:0
  100030:    08 84             	r0 = r0 + 0x4			  ## debug_stub.S:44:0
  100032:    80 3e             	[sp+120] = r0			  ## debug_stub.S:45:0
  100034:    64 e0 00 0e       	r0 = sp			  ## debug_stub.S:46:0
  100038:    c1 ff 80 e0 1b 00 	r1 = 0x1be080 <__stub_LZ4_decompress_safe_usingDict+0xAE084 : 1be080 >			  ## debug_stub.S:47:0
  10003e:    90 61             	[r1+0x4] = r0			  ## debug_stub.S:48:0
  100040:    12 60             	r2 = [r1+0x0] 			  ## debug_stub.S:50:0
  100042:    ba 3f             	r2 &= 0x7fffffff			  ## debug_stub.S:51:0
  100044:    92 60             	[r1+0x0] = r2			  ## debug_stub.S:52:0
  100046:    4a 20             	r2 = 0x20			  ## debug_stub.S:55:0
  100048:    00 00             	nop			  ## debug_stub.S:57:0
  10004a:    02 ea fd ff       	if (--r2 != 0) goto -0x6 <the_debug_isr+0x32 : 100048 >			  ## debug_stub.S:58:0
  10004e:    10 60             	r0 = [r1+0x0] 			  ## debug_stub.S:59:0
  100050:    50 e8 f9 f9       	if ((r0 & 0x80000000) == 0) goto -0xe <the_debug_isr+0x30 : 100046 >			  ## debug_stub.S:61:0
  100054:    d4 e8 ff ff       	{r15-r0} = [sp++]			  ## debug_stub.S:64:0
  100058:    50 e9 ff 7f       	{sp, ssp, usp, icfg, sr10, sr9, sr8, sr7, cnum, psr, sr4, rets, retx, rete, reti} = [sp++]			  ## debug_stub.S:65:0
  10005c:    83 00             	rte			  ## debug_stub.S:67:0
  10005e:    00 00             	nop


bsinc_tab_6:
  100060:	 00 00 00 00 fa ff ff ff         ........
  100068:	 d3 ff ff ff 89 ff ff ff         ........
  100070:	 45 ff ff ff 54 ff ff ff         E...T...
  100078:	 00 00 00 00 61 01 00 00         ....a...
  100080:	 32 03 00 00 cc 04 00 00         2.......
  100088:	 45 05 00 00 ca 03 00 00         E.......
  100090:	 00 00 00 00 61 fa ff ff         ....a...
  100098:	 59 f4 ff ff 0c f0 ff ff         Y.......
  1000a0:	 c1 ef ff ff 0c f5 ff ff         ........
  1000a8:	 00 00 00 00 a8 0e 00 00         ........
  1000b0:	 23 1d 00 00 6f 26 00 00         #...o&..
  1000b8:	 dd 25 00 00 c5 18 00 00         .%......
  1000c0:	 00 00 00 00 88 e0 ff ff         ........
  1000c8:	 da c2 ff ff 06 b1 ff ff         ........
  1000d0:	 b3 b3 ff ff fc ce ff ff         ........
  1000d8:	 00 00 00 00 43 3c 00 00         ....C<..
  1000e0:	 5c 73 00 00 ee 92 00 00         \s......
  1000e8:	 16 8c 00 00 e3 58 00 00         .....X..
  1000f0:	 00 00 00 00 2a 95 ff ff         ....*...
  1000f8:	 96 35 ff ff ac 00 ff ff         .5......
  100100:	 bf 0e ff ff 34 68 ff ff         ....4h..
  100108:	 00 00 00 00 c1 b3 00 00         ........
  100110:	 5e 52 01 00 58 a8 01 00         ^R..X...
  100118:	 e7 8e 01 00 e3 f9 00 00         ........
  100120:	 00 00 00 00 01 da fe ff         ........
  100128:	 a6 d7 fd ff fb 4b fd ff         .....K..
  100130:	 6c 75 fd ff f2 67 fe ff         lu...g..
  100138:	 00 00 00 00 44 e3 01 00         ....D...
  100140:	 2c 91 03 00 eb 80 04 00         ,.......
  100148:	 c1 46 04 00 6d b7 02 00         .F..m...
  100150:	 00 00 00 00 53 aa fc ff         ....S...
  100158:	 5e 8a f9 ff 6c 96 f7 ff         ^...l...
  100160:	 99 b1 f7 ff 53 74 fa ff         ....St..
  100168:	 00 00 00 00 42 e9 07 00         ....B...
  100170:	 c9 3f 11 00 d6 b3 1a 00         .?......
  100178:	 c2 d2 22 00 04 4e 28 00         .."..N(.
  100180:	 71 3d 2a 00 04 4e 28 00         q=*..N(.
  100188:	 c2 d2 22 00 d6 b3 1a 00         ..".....
  100190:	 c9 3f 11 00 42 e9 07 00         .?..B...
  100198:	 00 00 00 00 53 74 fa ff         ....St..
  1001a0:	 99 b1 f7 ff 6c 96 f7 ff         ....l...
  1001a8:	 5e 8a f9 ff 53 aa fc ff         ^...S...
  1001b0:	 00 00 00 00 6d b7 02 00         ....m...
  1001b8:	 c1 46 04 00 eb 80 04 00         .F......
  1001c0:	 2c 91 03 00 44 e3 01 00         ,...D...
  1001c8:	 00 00 00 00 f2 67 fe ff         .....g..
  1001d0:	 6c 75 fd ff fb 4b fd ff         lu...K..
  1001d8:	 a6 d7 fd ff 01 da fe ff         ........
  1001e0:	 00 00 00 00 e3 f9 00 00         ........
  1001e8:	 e7 8e 01 00 58 a8 01 00         ....X...
  1001f0:	 5e 52 01 00 c1 b3 00 00         ^R......
  1001f8:	 00 00 00 00 34 68 ff ff         ....4h..
  100200:	 bf 0e ff ff ac 00 ff ff         ........
  100208:	 96 35 ff ff 2a 95 ff ff         .5..*...
  100210:	 00 00 00 00 e3 58 00 00         .....X..
  100218:	 16 8c 00 00 ee 92 00 00         ........
  100220:	 5c 73 00 00 43 3c 00 00         \s..C<..
  100228:	 00 00 00 00 fc ce ff ff         ........
  100230:	 b3 b3 ff ff 06 b1 ff ff         ........
  100238:	 da c2 ff ff 88 e0 ff ff         ........
  100240:	 00 00 00 00 c5 18 00 00         ........
  100248:	 dd 25 00 00 6f 26 00 00         .%..o&..
  100250:	 23 1d 00 00 a8 0e 00 00         #.......
  100258:	 00 00 00 00 0c f5 ff ff         ........
  100260:	 c1 ef ff ff 0c f0 ff ff         ........
  100268:	 59 f4 ff ff 61 fa ff ff         Y...a...
  100270:	 00 00 00 00 ca 03 00 00         ........
  100278:	 45 05 00 00 cc 04 00 00         E.......
  100280:	 32 03 00 00 61 01 00 00         2...a...
  100288:	 00 00 00 00 54 ff ff ff         ....T...
  100290:	 45 ff ff ff 89 ff ff ff         E.......
  100298:	 d3 ff ff ff fa ff ff ff         ........
  1002a0:	 00 00 00 00                     ....


bsinc_tab_6_l:
  1002a4:	 00 00 00 00 5a 00 00 00         ....Z...
  1002ac:	 90 02 00 00 08 07 00 00         ........
  1002b4:	 87 0b 00 00 26 0b 00 00         ....&...
  1002bc:	 00 00 00 00 81 e6 ff ff         ........
  1002c4:	 58 c1 ff ff 4b 9c ff ff         X...K...
  1002cc:	 bf 8b ff ff 5c a7 ff ff         ....\...
  1002d4:	 00 00 00 00 94 93 00 00         ........
  1002dc:	 98 43 01 00 1e d4 01 00         .C......
  1002e4:	 5c f7 01 00 22 66 01 00         \..."f..
  1002ec:	 00 00 00 00 13 e9 fd ff         ........
  1002f4:	 3a 99 fb ff 92 d2 f9 ff         :.......
  1002fc:	 be 7b f9 ff f9 63 fb ff         .{...c..
  100304:	 00 00 00 00 43 34 07 00         ....C4..
  10030c:	 af 3f 10 00 68 d2 19 00         .?..h...
  100314:	 15 4f 22 00 bd 27 28 00         .O"..'(.
  10031c:	 71 3d 2a 00 bd 27 28 00         q=*..'(.
  100324:	 15 4f 22 00 68 d2 19 00         .O".h...
  10032c:	 af 3f 10 00 43 34 07 00         .?..C4..
  100334:	 00 00 00 00 f9 63 fb ff         .....c..
  10033c:	 be 7b f9 ff 92 d2 f9 ff         .{......
  100344:	 3a 99 fb ff 13 e9 fd ff         :.......
  10034c:	 00 00 00 00 22 66 01 00         ...."f..
  100354:	 5c f7 01 00 1e d4 01 00         \.......
  10035c:	 98 43 01 00 94 93 00 00         .C......
  100364:	 00 00 00 00 5c a7 ff ff         ....\...
  10036c:	 bf 8b ff ff 4b 9c ff ff         ....K...
  100374:	 58 c1 ff ff 81 e6 ff ff         X.......
  10037c:	 00 00 00 00 26 0b 00 00         ....&...
  100384:	 87 0b 00 00 08 07 00 00         ........
  10038c:	 90 02 00 00 5a 00 00 00         ....Z...
  100394:	 00 00 00 00                     ....


memmove:
  100398:    76 04             	[--sp] = {rets, r6-r4}
  10039a:    00 ec 03 10       	if (r1 > r0) goto 0x6 <memmove+0xC : 1003a4 >
  10039e:    93 1c             	r3 = r1 + r2
  1003a0:    00 ec 29 30       	if (r3 > r0) goto 0x52 <memmove+0x5E : 1003f6 >
  1003a4:    03 16             	r3 = r0
  1003a6:    82 f9 14 10       	if (r2 < 0x8) goto 0x28 <memmove+0x3A : 1003d2 >
  1003aa:    65 e1 03 10       	r5 = r1 & 0x3
  1003ae:    64 e1 03 30       	r4 = r3 & 0x3
  1003b2:    04 46             	if (r4 == 0) goto 0xc <memmove+0x28 : 1003c0 >
  1003b4:    a6 e0 04 40       	r6 = 0x4 - r4
  1003b8:    a2 1f             	r2 = r2 - r6
  1003ba:    16 03             	rep 0x4 r6 {
  1003bc:    16 07             		r6 = b[r1++=0x1] (u)
  1003be:    b6 07             		b[r3++=0x1] = r6
                               	}
  1003c0:    5c 19             	r4 ^= r5
  1003c2:    a5 a2             	r5 = r2 >> 0x2
  1003c4:    84 4a             	if (r4 != 0) goto 0x14 <memmove+0x42 : 1003da >
  1003c6:    15 03             	rep 0x4 r5 {
  1003c8:    16 05             		r6 = [r1++=0x4] 
  1003ca:    b6 05             		[r3++=0x4] = r6
                               	}
  1003cc:    f5 5c             	if (r5 != 0) goto -0x8 <memmove+0x2E : 1003c6 >
  1003ce:    62 e1 03 20       	r2 = r2 & 0x3
  1003d2:    12 03             	rep 0x4 r2 {
  1003d4:    12 07             		r2 = b[r1++=0x1] (u)
  1003d6:    b2 07             		b[r3++=0x1] = r2
                               	}
  1003d8:    56 04             	{pc, r6-r4} = [sp++]
  1003da:    a5 03             	rep 0x16 r5 {
  1003dc:    16 07             		r6 = b[r1++=0x1] (u)
  1003de:    14 07             		r4 = b[r1++=0x1] (u)
  1003e0:    a6 f1 20 44       		r6 <= insert(r4, p:0x8, l:0x8)  #
  1003e4:    14 07             			 r4 = b[r1++=0x1] (u)
  1003e6:    a6 f1 20 48       		r6 <= insert(r4, p:0x10, l:0x8)  #
  1003ea:    14 07             			 r4 = b[r1++=0x1] (u)
  1003ec:    a6 e1 20 4c       		r6 <= insert(r4, p:0x18, l:0x8)
  1003f0:    b6 05             		[r3++=0x4] = r6
                               	}
  1003f2:    f5 53             	if (r5 != 0) goto -0x1a <memmove+0x42 : 1003da >
  1003f4:    f7 8c             	goto -0x28 <memmove+0x36 : 1003ce >
  1003f6:    83 1c             	r3 = r0 + r2
  1003f8:    91 1c             	r1 = r1 + r2
  1003fa:    82 f9 17 10       	if (r2 < 0x8) goto 0x2e <memmove+0x94 : 10042c >
  1003fe:    65 e1 03 10       	r5 = r1 & 0x3
  100402:    64 e1 03 30       	r4 = r3 & 0x3
  100406:    04 47             	if (r4 == 0) goto 0xe <memmove+0x7E : 100416 >
  100408:    22 1f             	r2 = r2 - r4
  10040a:    46 16             	r6 = r4
  10040c:    36 03             	rep 0x8 r6 {
  10040e:    59 ee 1f 6f       		r6 = b[++r1=-0x1] (u)
  100412:    5b ee 3f 6f       		b[++r3=-0x1] = r6
                               	}
  100416:    5c 19             	r4 ^= r5
  100418:    a5 a2             	r5 = r2 >> 0x2
  10041a:    84 4e             	if (r4 != 0) goto 0x1c <memmove+0xA0 : 100438 >
  10041c:    35 03             	rep 0x8 r5 {
  10041e:    d7 ec 1e 6f       		r6 = [++r1=-0x4]
  100422:    d7 ec 3f 6f       		[++r3=-0x4] = r6
                               	}
  100426:    f5 5a             	if (r5 != 0) goto -0xc <memmove+0x84 : 10041c >
  100428:    62 e1 03 20       	r2 = r2 & 0x3
  10042c:    32 03             	rep 0x8 r2 {
  10042e:    59 ee 1f 6f       		r6 = b[++r1=-0x1] (u)
  100432:    5b ee 3f 6f       		b[++r3=-0x1] = r6
                               	}
  100436:    56 04             	{pc, r6-r4} = [sp++]
  100438:    f9 3f             	r1 += -0x1
  10043a:    b5 03             	rep 0x18 r5 {
  10043c:    1e 07             		r6 = b[r1++=-0x1] (u)
  10043e:    66 b8             		r6 = r6 << 0x18
  100440:    1c 07             		r4 = b[r1++=-0x1] (u)
  100442:    a6 f1 20 48       		r6 <= insert(r4, p:0x10, l:0x8)  #
  100446:    1c 07             			 r4 = b[r1++=-0x1] (u)
  100448:    a6 f1 20 44       		r6 <= insert(r4, p:0x8, l:0x8)  #
  10044c:    1c 07             			 r4 = b[r1++=-0x1] (u)
  10044e:    46 19             		r6 |= r4
  100450:    d7 ec 3f 6f       		[++r3=-0x4] = r6
                               	}
  100454:    f5 52             	if (r5 != 0) goto -0x1c <memmove+0xA2 : 10043a >
  100456:    19 81             	r1 = r1 + 0x1
  100458:    f7 87             	goto -0x32 <memmove+0x90 : 100428 >


memset:
  10045a:    74 04             	[--sp] = {rets, r4}
  10045c:    03 16             	r3 = r0
  10045e:    02 52             	if (r2 == 0) goto 0x24 <memset+0x2A : 100484 >
  100460:    33 ea 03 40       	if ((r3 & 0x3) != 0) {
  100464:    f2 f0 01 20       		r2 = r2 - 0x1  #
  100468:    b1 07             		  b[r3++=0x1] = r1
  10046a:    f7 99             		goto -0xe
                               	} <memset+0x4 : 10045e >
  10046c:    a4 a2             	r4 = r2 >> 0x2
  10046e:    a1 e1 20 14       	r1 <= insert(r1, p:0x8, l:0x8)
  100472:    a1 e1 40 18       	r1 <= insert(r1, p:0x10, l:0x10)
  100476:    04 03             	rep 0x2 r4 {
  100478:    b1 05             		[r3++=0x4] = r1
                               	}
  10047a:    f4 5d             	if (r4 != 0) goto -0x6 <memset+0x1C : 100476 >
  10047c:    62 e1 03 20       	r2 = r2 & 0x3
  100480:    02 03             	rep 0x2 r2 {
  100482:    b1 07             		b[r3++=0x1] = r1
                               	}
  100484:    54 04             	{pc, r4} = [sp++]


memcmp:
  100486:    74 04             	[--sp] = {rets, r4}
  100488:    82 f9 05 08       	if (r2 < 0x4) goto 0xa <memcmp+0x10 : 100496 >
  10048c:    90 e1 10 30       	r3 = r1 | r0
  100490:    60 ff 03 30 0b 00 	if ((r3 & 0x3) == 0) goto 0x16 <memcmp+0x26 : 1004ac >
  100496:    02 51             	if (r2 == 0) goto 0x22 <memcmp+0x34 : 1004ba >
  100498:    13 07             	r3 = b[r1++=0x1] (u)
  10049a:    04 07             	r4 = b[r0++=0x1] (u)
  10049c:    fa 3f             	r2 += -0x1
  10049e:    03 e8 fa 41       	if (r4 == r3) goto -0xc <memcmp+0x10 : 100496 >
  1004a2:    c8 1e             	r0 = r4 - r3
  1004a4:    54 04             	{pc, r4} = [sp++]
  1004a6:    fa 3c             	r2 += -0x4
  1004a8:    c1 24             	r1 += 0x4
  1004aa:    c0 24             	r0 += 0x4
  1004ac:    82 f9 f3 09       	if (r2 < 0x4) goto -0x1a <memcmp+0x10 : 100496 >
  1004b0:    13 60             	r3 = [r1+0x0] 
  1004b2:    04 60             	r4 = [r0+0x0] 
  1004b4:    03 e8 f7 41       	if (r4 == r3) goto -0x12 <memcmp+0x20 : 1004a6 >
  1004b8:    f7 8e             	goto -0x24 <memcmp+0x10 : 100496 >
  1004ba:    40 20             	r0 = 0x0
  1004bc:    54 04             	{pc, r4} = [sp++]


memmem:
  1004be:    77 04             	[--sp] = {rets, r7-r4}
  1004c0:    35 16             	r5 = r3
  1004c2:    26 16             	r6 = r2
  1004c4:    17 16             	r7 = r1
  1004c6:    04 16             	r4 = r0
  1004c8:    85 49             	if (r5 != 0) goto 0x12 <memmem+0x1E : 1004dc >
  1004ca:    04 8b             	goto 0x16 <memmem+0x24 : 1004e2 >
  1004cc:    40 16             	r0 = r4
  1004ce:    61 16             	r1 = r6
  1004d0:    52 16             	r2 = r5
  1004d2:    bf ea d8 ff       	call -0x50 <memcmp : 100486 >
  1004d6:    00 45             	if (r0 == 0) goto 0xa <memmem+0x24 : 1004e2 >
  1004d8:    ff 3f             	r7 += -0x1
  1004da:    c4 21             	r4 += 0x1
  1004dc:    05 e9 f6 71       	if (r7 >= r5) goto -0x14 <memmem+0xE : 1004cc >
  1004e0:    44 20             	r4 = 0x0
  1004e2:    40 16             	r0 = r4
  1004e4:    57 04             	{pc, r7-r4} = [sp++]


strcmp:
  1004e6:    77 04             	[--sp] = {rets, r7-r4}
  1004e8:    64 e1 03 00       	r4 = r0 & 0x3
  1004ec:    04 4b             	if (r4 == 0) goto 0x16 <strcmp+0x1E : 100504 >
  1004ee:    a4 e0 04 40       	r4 = 0x4 - r4
  1004f2:    0a 40             	r2 = b[r0+0x0] (u)
  1004f4:    22 41             	if (r2 == 0) goto 0x82 <strcmp+0x92 : 100578 >
  1004f6:    1b 40             	r3 = b[r1+0x0] (u)
  1004f8:    83 e8 3f 20       	if (r2 != r3) goto 0x7e <strcmp+0x94 : 10057a >
  1004fc:    08 81             	r0 = r0 + 0x1
  1004fe:    19 81             	r1 = r1 + 0x1
  100500:    04 ea f7 ff       	if (--r4 != 0) goto -0x12 <strcmp+0xC : 1004f2 >
  100504:    90 e1 10 20       	r2 = r1 | r0
  100508:    c6 ff ff fe fe fe 	r6 = 0xfefefeff <__stub_LZ4_decompress_safe_usingDict+0xFEEDFF02 : fefefefe >
  10050e:    61 ff 03 20 13 00 	if ((r2 & 0x3) != 0) goto 0x26 <strcmp+0x54 : 10053a >
  100514:    02 60             	r2 = [r0+0x0] 
  100516:    13 60             	r3 = [r1+0x0] 
  100518:    83 e8 26 20       	if (r2 != r3) goto 0x4c <strcmp+0x82 : 100568 >
  10051c:    14 16             	r4 = r1
  10051e:    a1 1d             	r1 = r2 + r6
  100520:    90 e1 13 12       	r1 = r1 & ~r2
  100524:    61 ff 80 13 2c 00 	if ((r1 & 0x80808080) != 0) goto 0x58 <strcmp+0x9C : 100582 >
  10052a:    02 61             	r2 = [r0+0x4] 
  10052c:    45 61             	r5 = [r4+0x4] 
  10052e:    49 84             	r1 = r4 + 0x4
  100530:    08 84             	r0 = r0 + 0x4
  100532:    14 16             	r4 = r1
  100534:    05 e8 f3 21       	if (r2 == r5) goto -0x1a <strcmp+0x38 : 10051e >
  100538:    04 97             	goto 0x2e <strcmp+0x82 : 100568 >
  10053a:    14 16             	r4 = r1
  10053c:    02 60             	r2 = [r0+0x0] 
  10053e:    43 07             	r3 = b[r4++=0x1] (u)
  100540:    45 07             	r5 = b[r4++=0x1] (u)
  100542:    a3 e1 20 54       	r3 <= insert(r5, p:0x8, l:0x8)
  100546:    45 07             	r5 = b[r4++=0x1] (u)
  100548:    a3 e1 20 58       	r3 <= insert(r5, p:0x10, l:0x8)
  10054c:    45 07             	r5 = b[r4++=0x1] (u)
  10054e:    a3 e1 20 5c       	r3 <= insert(r5, p:0x18, l:0x8)
  100552:    83 e8 09 20       	if (r2 != r3) goto 0x12 <strcmp+0x82 : 100568 >
  100556:    a5 1d             	r5 = r2 + r6
  100558:    90 e1 53 52       	r5 = r5 & ~r2
  10055c:    61 ff 80 53 10 00 	if ((r5 & 0x80808080) != 0) goto 0x20 <strcmp+0x9C : 100582 >
  100562:    08 84             	r0 = r0 + 0x4
  100564:    19 84             	r1 = r1 + 0x4
  100566:    f7 89             	goto -0x2e <strcmp+0x54 : 10053a >
  100568:    0a 40             	r2 = b[r0+0x0] (u)
  10056a:    02 46             	if (r2 == 0) goto 0xc <strcmp+0x92 : 100578 >
  10056c:    1c 40             	r4 = b[r1+0x0] (u)
  10056e:    84 e8 04 20       	if (r2 != r4) goto 0x8 <strcmp+0x94 : 10057a >
  100572:    08 81             	r0 = r0 + 0x1
  100574:    19 81             	r1 = r1 + 0x1
  100576:    f7 98             	goto -0x10 <strcmp+0x82 : 100568 >
  100578:    42 20             	r2 = 0x0
  10057a:    13 16             	r3 = r1
  10057c:    38 40             	r0 = b[r3+0x0] (u)
  10057e:    20 1e             	r0 = r2 - r0
  100580:    57 04             	{pc, r7-r4} = [sp++]
  100582:    40 20             	r0 = 0x0
  100584:    57 04             	{pc, r7-r4} = [sp++]


strcpy:
  100586:    77 04             	[--sp] = {rets, r7-r4}
  100588:    07 16             	r7 = r0
  10058a:    64 e1 03 00       	r4 = r0 & 0x3
  10058e:    04 47             	if (r4 == 0) goto 0xe <strcpy+0x18 : 10059e >
  100590:    a4 e0 04 40       	r4 = 0x4 - r4
  100594:    12 07             	r2 = b[r1++=0x1] (u)
  100596:    82 07             	b[r0++=0x1] = r2
  100598:    12 4b             	if (r2 == 0) goto 0x56 <strcpy+0x6A : 1005f0 >
  10059a:    04 ea fb ff       	if (--r4 != 0) goto -0xa <strcpy+0xE : 100594 >
  10059e:    90 e1 10 20       	r2 = r1 | r0
  1005a2:    c6 ff ff fe fe fe 	r6 = 0xfefefeff <__stub_LZ4_decompress_safe_usingDict+0xFEEDFF02 : fefefefe >
  1005a8:    61 ff 03 20 0a 00 	if ((r2 & 0x3) != 0) goto 0x14 <strcpy+0x3C : 1005c2 >
  1005ae:    12 60             	r2 = [r1+0x0] 
  1005b0:    a3 1d             	r3 = r2 + r6
  1005b2:    90 e1 33 32       	r3 = r3 & ~r2
  1005b6:    61 ff 80 33 17 00 	if ((r3 & 0x80808080) != 0) goto 0x2e <strcpy+0x64 : 1005ea >
  1005bc:    19 84             	r1 = r1 + 0x4
  1005be:    82 05             	[r0++=0x4] = r2
  1005c0:    f7 96             	goto -0x14 <strcpy+0x28 : 1005ae >
  1005c2:    14 16             	r4 = r1
  1005c4:    42 07             	r2 = b[r4++=0x1] (u)
  1005c6:    45 07             	r5 = b[r4++=0x1] (u)
  1005c8:    a2 e1 20 54       	r2 <= insert(r5, p:0x8, l:0x8)
  1005cc:    45 07             	r5 = b[r4++=0x1] (u)
  1005ce:    a2 e1 20 58       	r2 <= insert(r5, p:0x10, l:0x8)
  1005d2:    45 07             	r5 = b[r4++=0x1] (u)
  1005d4:    a2 e1 20 5c       	r2 <= insert(r5, p:0x18, l:0x8)
  1005d8:    a5 1d             	r5 = r2 + r6
  1005da:    90 e1 53 52       	r5 = r5 & ~r2
  1005de:    61 ff 80 53 03 00 	if ((r5 & 0x80808080) != 0) goto 0x6 <strcpy+0x64 : 1005ea >
  1005e4:    82 05             	[r0++=0x4] = r2
  1005e6:    41 16             	r1 = r4
  1005e8:    f7 8c             	goto -0x28 <strcpy+0x3C : 1005c2 >
  1005ea:    12 07             	r2 = b[r1++=0x1] (u)
  1005ec:    82 07             	b[r0++=0x1] = r2
  1005ee:    f2 5d             	if (r2 != 0) goto -0x6 <strcpy+0x64 : 1005ea >
  1005f0:    70 16             	r0 = r7
  1005f2:    57 04             	{pc, r7-r4} = [sp++]


strlen:
  1005f4:    01 16             	r1 = r0
  1005f6:    12 07             	r2 = b[r1++=0x1] (u)
  1005f8:    f2 5e             	if (r2 != 0) goto -0x4 <strlen+0x2 : 1005f6 >
  1005fa:    f9 3f             	r1 += -0x1
  1005fc:    10 1e             	r0 = r1 - r0
  1005fe:    80 00             	rts


nvram_uart_tag:
  100600:	 75 61 72 74 d9 c4 05 a8         


nvram_usb_tag:
  100608:	 75 73 62 ed 63 81 67 ef         


chip_reset:
  100610:    c0 ff a0 18 1a 00 	r0 = 0x1a18a0 <__stub_LZ4_decompress_safe_usingDict+0x918A4 : 1a18a0 >			  ## main.c:71:0
  100616:    09 40             	r1 = b[r0+0x0] (u)			  ## main.c:72:15
  100618:    31 24             	r1 |= 0x10			  ## main.c:72:15
  10061a:    89 40             	b[r0+0x0] = r1			  ## main.c:72:15
  10061c:    f7 9f             	goto -0x2 <chip_reset+0xC : 10061c >			  ## main.c:73:5


nvram_boot_state:
  10061e:    74 04             	[--sp] = {rets, r4}			  ## boot_nvram.c:49:0
  100620:    c4 ff 00 88 02 00 	r4 = 0x28800 <nvram_list : 28800 >			  ## boot_nvram.c:49:0
  100626:    c1 ff 08 06 10 00 	r1 = 0x100608 <nvram_usb_tag : 100608 >			  ## boot_nvram.c:50:9
  10062c:    42 28             	r2 = 0x8			  ## boot_nvram.c:50:9
  10062e:    40 16             	r0 = r4			  ## boot_nvram.c:50:9
  100630:    bf ea 29 ff       	call -0x1ae <memcmp : 100486 >			  ## boot_nvram.c:50:9
  100634:    00 4c             	if (r0 == 0) goto 0x18 <nvram_boot_state+0x30 : 10064e >			  ## boot_nvram.c:50:9
  100636:    c1 ff 00 06 10 00 	r1 = 0x100600 <nvram_uart_tag : 100600 >			  ## boot_nvram.c:53:16
  10063c:    42 28             	r2 = 0x8			  ## boot_nvram.c:53:16
  10063e:    40 16             	r0 = r4			  ## boot_nvram.c:53:16
  100640:    bf ea 21 ff       	call -0x1be <memcmp : 100486 >			  ## boot_nvram.c:53:16
  100644:    01 16             	r1 = r0			  ## boot_nvram.c:53:16
  100646:    40 20             	r0 = 0x0			  ## boot_nvram.c:53:16
  100648:    81 4c             	if (r1 != 0) goto 0x18 <nvram_boot_state+0x44 : 100662 >			  ## boot_nvram.c:53:16
  10064a:    40 23             	r0 = 0x3
  10064c:    04 81             	goto 0x2 <nvram_boot_state+0x32 : 100650 >
  10064e:    40 22             	r0 = 0x2
  100650:    41 20             	r1 = 0x0			  ## boot_nvram.c:46:5
  100652:    c9 47             	b[r4+0x7] = r1			  ## boot_nvram.c:46:5
  100654:    c9 46             	b[r4+0x6] = r1			  ## boot_nvram.c:46:5
  100656:    c9 45             	b[r4+0x5] = r1			  ## boot_nvram.c:46:5
  100658:    c9 44             	b[r4+0x4] = r1			  ## boot_nvram.c:46:5
  10065a:    c9 43             	b[r4+0x3] = r1			  ## boot_nvram.c:46:5
  10065c:    c9 42             	b[r4+0x2] = r1			  ## boot_nvram.c:46:5
  10065e:    c9 41             	b[r4+0x1] = r1			  ## boot_nvram.c:46:5
  100660:    c9 40             	b[r4+0x0] = r1			  ## boot_nvram.c:46:5
  100662:    54 04             	{pc, r4} = [sp++]			  ## boot_nvram.c:58:1


nvram_set_boot_state:
  100664:    75 04             	[--sp] = {rets, r5, r4}			  ## boot_nvram.c:60:0
  100666:    00 f8 09 04       	if (r0 == 0x2) goto 0x12 <nvram_set_boot_state+0x18 : 10067c >			  ## boot_nvram.c:60:0
  10066a:    80 f8 27 06       	if (r0 != 0x3) goto 0x4e <nvram_set_boot_state+0x58 : 1006bc >			  ## boot_nvram.c:60:0
  10066e:    c0 ff 75 61 72 74 	r0 = 0x74726175 <__stub_LZ4_decompress_safe_usingDict+0x74616178 : 74726174 >			  ## boot_nvram.c:60:0
  100674:    c1 ff d9 c4 05 a8 	r1 = 0xa805c4d9 <__stub_LZ4_decompress_safe_usingDict+0xA7F4C4DC : a805c4d8 >			  ## boot_nvram.c:60:0
  10067a:    04 86             	goto 0xc <nvram_set_boot_state+0x24 : 100688 >			  ## boot_nvram.c:60:0
  10067c:    c0 ff 75 73 62 ed 	r0 = 0xed627375 <__stub_LZ4_decompress_safe_usingDict+0xED517378 : ed627374 >			  ## boot_nvram.c:60:0
  100682:    c1 ff 63 81 67 ef 	r1 = 0xef678163 <__stub_LZ4_decompress_safe_usingDict+0xEF568166 : ef678162 >			  ## boot_nvram.c:60:0
  100688:    c2 ff 00 88 02 00 	r2 = 0x28800 <nvram_list : 28800 >			  ## boot_nvram.c:60:0
  10068e:    04 d5             	r5_r4 = r1_r0  #			  ## boot_nvram.c:60:0
  100690:    a8 40             		 b[r2+0x0] = r0			  ## boot_nvram.c:60:0
  100692:    d0 e1 08 4b       	r5_r4 >>= 0x38			  ## boot_nvram.c:60:0
  100696:    04 d5             	r5_r4 = r1_r0  #			  ## boot_nvram.c:60:0
  100698:    ac 47             		 b[r2+0x7] = r4			  ## boot_nvram.c:60:0
  10069a:    d0 e1 00 4b       	r5_r4 >>= 0x30			  ## boot_nvram.c:60:0
  10069e:    04 d5             	r5_r4 = r1_r0  #			  ## boot_nvram.c:60:0
  1006a0:    ac 46             		 b[r2+0x6] = r4			  ## boot_nvram.c:60:0
  1006a2:    d0 e1 08 4a       	r5_r4 >>= 0x28			  ## boot_nvram.c:60:0
  1006a6:    04 d5             	r5_r4 = r1_r0  #			  ## boot_nvram.c:60:0
  1006a8:    ac 45             		 b[r2+0x5] = r4			  ## boot_nvram.c:60:0
  1006aa:    d0 e1 00 4a       	r5_r4 >>= 0x20			  ## boot_nvram.c:60:0
  1006ae:    ac 44             	b[r2+0x4] = r4			  ## boot_nvram.c:60:0
  1006b0:    83 b8             	r3 = r0 >> 0x18			  ## boot_nvram.c:60:0
  1006b2:    ab 43             	b[r2+0x3] = r3			  ## boot_nvram.c:60:0
  1006b4:    83 b0             	r3 = r0 >> 0x10			  ## boot_nvram.c:60:0
  1006b6:    ab 42             	b[r2+0x2] = r3			  ## boot_nvram.c:60:0
  1006b8:    80 a8             	r0 = r0 >> 0x8			  ## boot_nvram.c:60:0
  1006ba:    a8 41             	b[r2+0x1] = r0			  ## boot_nvram.c:60:0
  1006bc:    55 04             	{pc, r5, r4} = [sp++]			  ## boot_nvram.c:71:1


btcvsd_need_buf:
  1006be:    68 24             	r0 = 0xa4			  ## cvsd_codec.c:29:0
  1006c0:    80 00             	rts			  ## cvsd_codec.c:30:5


btcvsd_init:
  1006c2:    75 04             	[--sp] = {rets, r5, r4}			  ## cvsd_codec.c:34:0
  1006c4:    04 16             	r4 = r0			  ## cvsd_codec.c:34:0
  1006c6:    41 20             	r1 = 0x0			  ## cvsd_codec.c:36:5
  1006c8:    6a 24             	r2 = 0xa4			  ## cvsd_codec.c:36:5
  1006ca:    45 20             	r5 = 0x0			  ## cvsd_codec.c:36:5
  1006cc:    bf ea c5 fe       	call -0x276 <memset : 10045a >			  ## cvsd_codec.c:36:5
  1006d0:    40 e0 00 28       	r0 = 0x2800			  ## cvsd_codec.c:38:35
  1006d4:    01 e1 40 40       	r1 = r4 + 0x40			  ## cvsd_codec.c:38:35
  1006d8:    90 62             	[r1+0x8] = r0			  ## cvsd_codec.c:38:35
  1006da:    42 21             	r2 = 0x1			  ## cvsd_codec.c:39:33
  1006dc:    9a 41             	b[r1+0x1] = r2			  ## cvsd_codec.c:39:33
  1006de:    95 61             	[r1+0x4] = r5			  ## cvsd_codec.c:40:34
  1006e0:    90 65             	[r1+0x14] = r0			  ## cvsd_codec.c:42:35
  1006e2:    9a 4d             	b[r1+0xd] = r2			  ## cvsd_codec.c:43:33
  1006e4:    40 20             	r0 = 0x0			  ## cvsd_codec.c:46:5
  1006e6:    95 64             	[r1+0x10] = r5			  ## cvsd_codec.c:44:34
  1006e8:    55 04             	{pc, r5, r4} = [sp++]			  ## cvsd_codec.c:46:5


CVSD_StudentEncode:
  1006ea:    78 04             	[--sp] = {rets, r8-r4}			  ## cvsd_codec.c:235:0
  1006ec:    42 20             	r2 = 0x0			  ## cvsd_codec.c:235:0
  1006ee:    48 f0 ff 03       	r8 = 0x3ff  #			  ## cvsd_codec.c:235:0
  1006f2:    9a 40             		 b[r1+0x0] = r2			  ## cvsd_codec.c:240:26
  1006f4:    43 21             	r3 = 0x1
  1006f6:    24 8a             	goto 0x94 <CVSD_StudentEncode+0xA2 : 10078c >
  1006f8:    1c 41             	r4 = b[r1+0x1] (u)			  ## cvsd_codec.c:242:43
  1006fa:    44 a1             	r4 = r4 << 0x1			  ## cvsd_codec.c:242:50
  1006fc:    66 e1 0e 40       	r6 = r4 & 0xE			  ## cvsd_codec.c:242:56
  100700:    9e 41             	b[r1+0x1] = r6			  ## cvsd_codec.c:242:28
  100702:    d8 ec 0a 42       	r4 = [r0+r2<<2]			  ## cvsd_codec.c:243:14
  100706:    15 61             	r5 = [r1+0x4] 			  ## cvsd_codec.c:243:53
  100708:    44 aa             	r4 = r4 << 0xa			  ## cvsd_codec.c:243:24
  10070a:    05 ed 10 40       	ifs (r4 >= r5) goto 0x20 <CVSD_StudentEncode+0x44 : 10072e >			  ## cvsd_codec.c:243:24
  10070e:    36 20             	r6 |= 0x1			  ## cvsd_codec.c:259:53
  100710:    9e 41             	b[r1+0x1] = r6			  ## cvsd_codec.c:259:32
  100712:    1c 40             	r4 = b[r1+0x0] (u)			  ## cvsd_codec.c:260:36
  100714:    34 19             	r4 |= r3			  ## cvsd_codec.c:260:57
  100716:    9c 40             	b[r1+0x0] = r4			  ## cvsd_codec.c:260:34
  100718:    14 62             	r4 = [r1+0x8] 			  ## cvsd_codec.c:260:34
  10071a:    86 f8 16 1e       	if (r6 != 0xf) goto 0x2c <CVSD_StudentEncode+0x60 : 10074a >			  ## cvsd_codec.c:261:17
  10071e:    e6 e0 20 4d       	r6 = r4 + 0x2800			  ## cvsd_codec.c:262:61
  100722:    96 62             	[r1+0x8] = r6			  ## cvsd_codec.c:262:38
  100724:    26 e9 a0 09       	if (r6 >= 0x140000) {			  ## cvsd_codec.c:262:38
  100728:    60 e0 a0 69       		r6 = 0x140000
                               	}			  ## cvsd_codec.c:263:21
  10072c:    04 99             	goto 0x32 <CVSD_StudentEncode+0x76 : 100760 >			  ## cvsd_codec.c:263:21
  10072e:    14 62             	r4 = [r1+0x8] 
  100730:    06 5a             	if (r6 == 0) goto 0x34 <CVSD_StudentEncode+0x7C : 100766 >
  100732:    36 e1 01 8e       	r6 = r8 + -0x1ff			  ## cvsd_codec.c:251:23
  100736:    47 20             	r7 = 0x0			  ## cvsd_codec.c:251:23
  100738:    fc e1 40 68       	r7_r6 += r4 * r8 (u)			  ## cvsd_codec.c:251:23
  10073c:    d0 e1 0a 68       	r7_r6 >>= 0xa			  ## cvsd_codec.c:252:46
  100740:    a6 ec 20 0d       	if (r6 <= 0x2800) {
  100744:    46 e0 00 28       		r6 = 0x2800
                               	}			  ## cvsd_codec.c:253:21
  100748:    04 95             	goto 0x2a <CVSD_StudentEncode+0x8A : 100774 >			  ## cvsd_codec.c:253:21
  10074a:    36 e1 01 8e       	r6 = r8 + -0x1ff			  ## cvsd_codec.c:268:23
  10074e:    47 20             	r7 = 0x0			  ## cvsd_codec.c:268:23
  100750:    fc e1 40 68       	r7_r6 += r4 * r8 (u)			  ## cvsd_codec.c:268:23
  100754:    d0 e1 0a 68       	r7_r6 >>= 0xa			  ## cvsd_codec.c:269:46
  100758:    a6 ec 20 0d       	if (r6 <= 0x2800) {
  10075c:    46 e0 00 28       		r6 = 0x2800
                               	}			  ## cvsd_codec.c:270:21
  100760:    d5 df             	r5 = r5 - r6  #			  ## cvsd_codec.c:274:55
  100762:    96 62             		 [r1+0x8] = r6			  ## cvsd_codec.c:274:55
  100764:    04 89             	goto 0x12 <CVSD_StudentEncode+0x8E : 100778 >			  ## cvsd_codec.c:274:55
  100766:    e6 e0 20 4d       	r6 = r4 + 0x2800			  ## cvsd_codec.c:245:61
  10076a:    96 62             	[r1+0x8] = r6			  ## cvsd_codec.c:245:38
  10076c:    26 e9 a0 09       	if (r6 >= 0x140000) {			  ## cvsd_codec.c:245:38
  100770:    60 e0 a0 69       		r6 = 0x140000
                               	}			  ## cvsd_codec.c:246:21
  100774:    65 d8             	r5 += r6  #			  ## cvsd_codec.c:257:55
  100776:    96 62             		 [r1+0x8] = r6			  ## cvsd_codec.c:257:55
  100778:    95 61             	[r1+0x4] = r5
  10077a:    5d a6             	r5 = r5 <<< 0x6			  ## cvsd_codec.c:285:13
  10077c:    dd a6             	r5 = r5 >>> 0x6			  ## cvsd_codec.c:285:13
  10077e:    e4 e1 1f 50       	r4 = r5 * 0x1F			  ## cvsd_codec.c:297:52
  100782:    c4 30             	r4 += 0x10			  ## cvsd_codec.c:297:57
  100784:    cc a5             	r4 = r4 >>> 0x5			  ## cvsd_codec.c:297:63
  100786:    94 61             	[r1+0x4] = r4			  ## cvsd_codec.c:297:29
  100788:    c2 21             	r2 += 0x1			  ## cvsd_codec.c:241:35
  10078a:    33 a1             	r3 = r3 << 0x1			  ## cvsd_codec.c:298:19
  10078c:    82 f8 b4 11       	if (r2 != 0x8) goto -0x98 <CVSD_StudentEncode+0xE : 1006f8 >
  100790:    58 04             	{pc, r8-r4} = [sp++]			  ## cvsd_codec.c:302:1


cvsd_encode:
  100792:    7e 04             	[--sp] = {rets, r14-r4}			  ## cvsd_codec.c:373:0
  100794:    04 e1 40 00       	r4 = r0 + 0x40			  ## cvsd_codec.c:377:23
  100798:    3c d6             	r12 = r3  #			  ## cvsd_codec.c:377:23
  10079a:    4e 61             		 r6 = h[r4+0x2] (u)			  ## cvsd_codec.c:377:30
  10079c:    2a 16             	r10 = r2
  10079e:    1b 16             	r11 = r1
  1007a0:    86 f8 9c 02       	if (r6 != 0x1) goto 0x138 <cvsd_encode+0x14A : 1008dc >
  1007a4:    08 e1 18 00       	r8 = r0 + 0x18			  ## cvsd_codec.c:374:9
  1007a8:    09 e1 08 00       	r9 = r0 + 0x8			  ## cvsd_codec.c:374:9
  1007ac:    c6 14             	r14 = 0			  ## cvsd_codec.c:374:9
  1007ae:    c5 14             	r13 = 0			  ## cvsd_codec.c:374:9
  1007b0:    44 92             	goto 0x124 <cvsd_encode+0x144 : 1008d6 >			  ## cvsd_codec.c:374:9
  1007b2:    d8 ed ba 2d       	r2 = h[r11+r13<<1] (s)			  ## cvsd_codec.c:118:30
  1007b6:    41 20             	r1 = 0x0			  ## cvsd_codec.c:118:30
  1007b8:    20 eb 06 00       	[r0+] = {r2, r1}			  ## cvsd_codec.c:117:28
  1007bc:    14 83             	goto 0x46 <cvsd_encode+0x72 : 100804 >
  1007be:    d8 ec 0a 21       	r2 = [r0+r1<<2]			  ## cvsd_codec.c:55:27
  1007c2:    43 67             	r3 = [r4+0x1c] 			  ## cvsd_codec.c:55:15
  1007c4:    b2 1e             	r2 = r3 - r2			  ## cvsd_codec.c:55:25
  1007c6:    e5 e1 54 20       	r5 = r2 * 0x54			  ## cvsd_codec.c:56:27
  1007ca:    cd 20             	r5 += 0x20			  ## cvsd_codec.c:56:37
  1007cc:    dd a6             	r5 = r5 >>> 0x6			  ## cvsd_codec.c:56:43
  1007ce:    db 1e             	r3 = r5 - r3			  ## cvsd_codec.c:56:49
  1007d0:    c3 67             	[r4+0x1c] = r3			  ## cvsd_codec.c:56:19
  1007d2:    45 69             	r5 = [r4+0x24] 			  ## cvsd_codec.c:59:27
  1007d4:    47 68             	r7 = [r4+0x20] 			  ## cvsd_codec.c:59:15
  1007d6:    7d 1f             	r5 = r7 - r5			  ## cvsd_codec.c:59:25
  1007d8:    e6 e1 4d 50       	r6 = r5 * 0x4D			  ## cvsd_codec.c:60:27
  1007dc:    ce 20             	r6 += 0x20			  ## cvsd_codec.c:60:37
  1007de:    ee a6             	r6 = r6 >>> 0x6			  ## cvsd_codec.c:60:43
  1007e0:    ee 1f             	r6 = r6 - r7			  ## cvsd_codec.c:60:49
  1007e2:    6d df             	r5 = r6 - r5  #			  ## cvsd_codec.c:61:26
  1007e4:    c6 68             		 [r4+0x20] = r6			  ## cvsd_codec.c:60:19
  1007e6:    d8 ec 0a 71       	r7 = [r0+r1<<2]			  ## cvsd_codec.c:63:22
  1007ea:    de 1f             	r6 = r5 - r7			  ## cvsd_codec.c:63:20
  1007ec:    e7 e1 18 60       	r7 = r6 * 0x18			  ## cvsd_codec.c:64:27
  1007f0:    cf 20             	r7 += 0x20			  ## cvsd_codec.c:64:37
  1007f2:    ff a6             	r7 = r7 >>> 0x6			  ## cvsd_codec.c:64:43
  1007f4:    7d 1f             	r5 = r7 - r5			  ## cvsd_codec.c:64:49
  1007f6:    b2 de             	r2 = r3 - r2  #			  ## cvsd_codec.c:65:26
  1007f8:    c5 69             		 [r4+0x24] = r5			  ## cvsd_codec.c:64:19
  1007fa:    a2 1f             	r2 = r2 - r6			  ## cvsd_codec.c:57:26
  1007fc:    52 18             	r2 += r5			  ## cvsd_codec.c:67:27
  1007fe:    d8 ec 0b 21       	[r0+r1<<2] = r2			  ## cvsd_codec.c:67:20
  100802:    c1 21             	r1 += 0x1			  ## cvsd_codec.c:54:27
  100804:    81 f8 db 05       	if (r1 != 0x2) goto -0x4a <cvsd_encode+0x2C : 1007be >			  ## cvsd_codec.c:54:5
  100808:    41 21             	r1 = 0x1
  10080a:    92 16             	r2 = r9
  10080c:    04 86             	goto 0xc <cvsd_encode+0x88 : 10081a >
  10080e:    d8 ec 0a 31       	r3 = [r0+r1<<2]			  ## cvsd_codec.c:121:42
  100812:    a3 61             	[r2+0x4] = r3			  ## cvsd_codec.c:121:40
  100814:    df ec 29 ef       	[r2++=-0x8] = r14			  ## cvsd_codec.c:122:36
  100818:    f9 3f             	r1 += -0x1			  ## cvsd_codec.c:120:26
  10081a:    71 fe f8 ff       	ifs (r1 > -0x1) goto -0x10 <cvsd_encode+0x7C : 10080e >			  ## cvsd_codec.c:120:5
  10081e:    41 20             	r1 = 0x0
  100820:    14 82             	goto 0x44 <cvsd_encode+0xD4 : 100866 >
  100822:    d8 ec 0a 21       	r2 = [r0+r1<<2]			  ## cvsd_codec.c:55:27
  100826:    43 6a             	r3 = [r4+0x28] 			  ## cvsd_codec.c:55:15
  100828:    b2 1e             	r2 = r3 - r2			  ## cvsd_codec.c:55:25
  10082a:    e5 e1 60 20       	r5 = r2 * 0x60			  ## cvsd_codec.c:56:27
  10082e:    cd 20             	r5 += 0x20			  ## cvsd_codec.c:56:37
  100830:    dd a6             	r5 = r5 >>> 0x6			  ## cvsd_codec.c:56:43
  100832:    db 1e             	r3 = r5 - r3			  ## cvsd_codec.c:56:49
  100834:    c3 6a             	[r4+0x28] = r3			  ## cvsd_codec.c:56:19
  100836:    45 6c             	r5 = [r4+0x30] 			  ## cvsd_codec.c:59:27
  100838:    46 6b             	r6 = [r4+0x2c] 			  ## cvsd_codec.c:59:15
  10083a:    6d 1f             	r5 = r6 - r5			  ## cvsd_codec.c:59:25
  10083c:    e7 e1 60 50       	r7 = r5 * 0x60			  ## cvsd_codec.c:60:27
  100840:    cf 20             	r7 += 0x20			  ## cvsd_codec.c:60:37
  100842:    ff a6             	r7 = r7 >>> 0x6			  ## cvsd_codec.c:60:43
  100844:    f6 1f             	r6 = r7 - r6			  ## cvsd_codec.c:60:49
  100846:    6d df             	r5 = r6 - r5  #			  ## cvsd_codec.c:61:26
  100848:    c6 6b             		 [r4+0x2c] = r6			  ## cvsd_codec.c:60:19
  10084a:    d8 ec 0a 71       	r7 = [r0+r1<<2]			  ## cvsd_codec.c:63:22
  10084e:    de 1f             	r6 = r5 - r7			  ## cvsd_codec.c:63:20
  100850:    67 a5             	r7 = r6 << 0x5			  ## cvsd_codec.c:64:27
  100852:    cf 20             	r7 += 0x20			  ## cvsd_codec.c:64:37
  100854:    ff a6             	r7 = r7 >>> 0x6			  ## cvsd_codec.c:64:43
  100856:    7d 1f             	r5 = r7 - r5			  ## cvsd_codec.c:64:49
  100858:    b2 de             	r2 = r3 - r2  #			  ## cvsd_codec.c:65:26
  10085a:    c5 6c             		 [r4+0x30] = r5			  ## cvsd_codec.c:64:19
  10085c:    a2 1f             	r2 = r2 - r6			  ## cvsd_codec.c:57:26
  10085e:    52 18             	r2 += r5			  ## cvsd_codec.c:67:27
  100860:    d8 ec 0b 21       	[r0+r1<<2] = r2			  ## cvsd_codec.c:67:20
  100864:    c1 21             	r1 += 0x1			  ## cvsd_codec.c:54:27
  100866:    81 f8 dc 09       	if (r1 != 0x4) goto -0x48 <cvsd_encode+0x90 : 100822 >			  ## cvsd_codec.c:54:5
  10086a:    41 23             	r1 = 0x3
  10086c:    82 16             	r2 = r8
  10086e:    04 86             	goto 0xc <cvsd_encode+0xEA : 10087c >
  100870:    d8 ec 0a 31       	r3 = [r0+r1<<2]			  ## cvsd_codec.c:126:42
  100874:    a3 61             	[r2+0x4] = r3			  ## cvsd_codec.c:126:40
  100876:    df ec 29 ef       	[r2++=-0x8] = r14			  ## cvsd_codec.c:127:36
  10087a:    f9 3f             	r1 += -0x1			  ## cvsd_codec.c:125:26
  10087c:    71 fe f8 ff       	ifs (r1 > -0x1) goto -0x10 <cvsd_encode+0xDE : 100870 >			  ## cvsd_codec.c:125:5
  100880:    41 20             	r1 = 0x0
  100882:    04 99             	goto 0x32 <cvsd_encode+0x124 : 1008b6 >
  100884:    d8 ec 0a 21       	r2 = [r0+r1<<2]			  ## cvsd_codec.c:55:27
  100888:    a2 f0 00 20       	r2 = 0x0 - r2  #			  ## cvsd_codec.c:56:49
  10088c:    43 6d             		 r3 = [r4+0x34] 			  ## cvsd_codec.c:55:15
  10088e:    c2 6d             	[r4+0x34] = r2			  ## cvsd_codec.c:56:19
  100890:    42 6f             	r2 = [r4+0x3c] 			  ## cvsd_codec.c:59:27
  100892:    a2 f0 00 20       	r2 = 0x0 - r2  #			  ## cvsd_codec.c:60:49
  100896:    45 6e             		 r5 = [r4+0x38] 			  ## cvsd_codec.c:59:15
  100898:    c2 6e             	[r4+0x38] = r2			  ## cvsd_codec.c:60:19
  10089a:    d8 ec 0a 21       	r2 = [r0+r1<<2]			  ## cvsd_codec.c:63:22
  10089e:    52 18             	r2 += r5			  ## cvsd_codec.c:63:20
  1008a0:    26 a5             	r6 = r2 << 0x5			  ## cvsd_codec.c:64:37
  1008a2:    a6 e0 20 60       	r6 = 0x20 - r6			  ## cvsd_codec.c:64:37
  1008a6:    ee a6             	r6 = r6 >>> 0x6			  ## cvsd_codec.c:64:43
  1008a8:    65 18             	r5 += r6			  ## cvsd_codec.c:64:49
  1008aa:    aa de             	r2 = r2 - r3  #			  ## cvsd_codec.c:57:26
  1008ac:    c5 6f             		 [r4+0x3c] = r5			  ## cvsd_codec.c:64:19
  1008ae:    52 18             	r2 += r5			  ## cvsd_codec.c:67:27
  1008b0:    d8 ec 0b 21       	[r0+r1<<2] = r2			  ## cvsd_codec.c:67:20
  1008b4:    c1 21             	r1 += 0x1			  ## cvsd_codec.c:54:27
  1008b6:    81 f8 e5 11       	if (r1 != 0x8) goto -0x36 <cvsd_encode+0xF2 : 100884 >
  1008ba:    01 16             	r1 = r0			  ## cvsd_codec.c:142:9
  1008bc:    30 87             	rep 0x8 0x8 {			  ## cvsd_codec.c:142:9
  1008be:    12 60             		r2 = [r1+0x0] 			  ## cvsd_codec.c:142:9
  1008c0:    78 e0 01 22       		r2 = sat16(r2) (s)			  ## cvsd_codec.c:142:9
  1008c4:    92 05             		[r1++=0x4] = r2
                               	}			  ## cvsd_codec.c:142:9
  1008c6:    41 16             	r1 = r4			  ## cvsd_codec.c:380:13
  1008c8:    bf ea 0f ff       	call -0x1e2 <CVSD_StudentEncode : 1006ea >			  ## cvsd_codec.c:380:13
  1008cc:    49 40             	r1 = b[r4+0x0] (u)			  ## cvsd_codec.c:381:47
  1008ce:    d8 ee a1 1d       	b[r10+r13] = r1			  ## cvsd_codec.c:381:24
  1008d2:    0d e1 01 d0       	r13 = r13 + 0x1			  ## cvsd_codec.c:378:31
  1008d6:    8c ed 6c d1       	ifs (r13 < r12) goto -0x128 <cvsd_encode+0x20 : 1007b2 >
  1008da:    04 9c             	goto 0x38 <cvsd_encode+0x182 : 100914 >
  1008dc:    46 20             	r6 = 0x0
  1008de:    04 98             	goto 0x30 <cvsd_encode+0x17E : 100910 >
  1008e0:    d8 ed ba 16       	r1 = h[r11+r6<<1] (s)			  ## cvsd_codec.c:89:14
  1008e4:    54 ed 08 25       	r2 = h[r0+0x58] (s)			  ## cvsd_codec.c:89:23
  1008e8:    97 1e             	r7 = r1 - r2			  ## cvsd_codec.c:89:21
  1008ea:    7b 87             	r3 = r7 + 0x7			  ## cvsd_codec.c:91:15
  1008ec:    37 ed 00 00       	ifs (r7 >= 0x0) {
  1008f0:    73 16             		r3 = r7
                               	}			  ## cvsd_codec.c:90:9
  1008f2:    bb a3             	r3 = r3 >>> 0x3			  ## cvsd_codec.c:93:11
  1008f4:    05 16             	r5 = r0			  ## cvsd_codec.c:94:5
  1008f6:    af 1c             	r7 = r2 + r3			  ## cvsd_codec.c:94:5
  1008f8:    10 86             	rep 0x4 0x7 {			  ## cvsd_codec.c:94:5
  1008fa:    ff dc             		r7 = r7 + r3  #			  ## cvsd_codec.c:94:5
  1008fc:    d7 05             			 [r5++=0x4] = r7
                               	}			  ## cvsd_codec.c:94:5
  1008fe:    d7 05             	[r5++=0x4] = r7			  ## cvsd_codec.c:94:5
  100900:    41 d6             	r1 = r4  #			  ## cvsd_codec.c:386:13
  100902:    c9 6c             		 h[r4+0x18] = r1			  ## cvsd_codec.c:107:28
  100904:    bf ea f1 fe       	call -0x21e <CVSD_StudentEncode : 1006ea >			  ## cvsd_codec.c:386:13
  100908:    49 40             	r1 = b[r4+0x0] (u)			  ## cvsd_codec.c:387:47
  10090a:    d8 ee a1 16       	b[r10+r6] = r1			  ## cvsd_codec.c:387:24
  10090e:    c6 21             	r6 += 0x1			  ## cvsd_codec.c:384:31
  100910:    8c ed e6 61       	ifs (r6 < r12) goto -0x34 <cvsd_encode+0x14E : 1008e0 >
  100914:    40 20             	r0 = 0x0			  ## cvsd_codec.c:391:5
  100916:    5e 04             	{pc, r14-r4} = [sp++]			  ## cvsd_codec.c:391:5


CVSD_StudentDecode:
  100918:    78 04             	[--sp] = {rets, r8-r4}			  ## cvsd_codec.c:305:0
  10091a:    42 20             	r2 = 0x0			  ## cvsd_codec.c:305:0
  10091c:    48 e0 ff 03       	r8 = 0x3ff			  ## cvsd_codec.c:305:0
  100920:    04 e1 00 22       	r4 = r2 + 0x200			  ## cvsd_codec.c:305:0
  100924:    45 20             	r5 = 0x0			  ## cvsd_codec.c:305:0
  100926:    24 8a             	goto 0x94 <CVSD_StudentDecode+0xA4 : 1009bc >			  ## cvsd_codec.c:305:0
  100928:    1b 40             	r3 = b[r1+0x0] (u)			  ## cvsd_codec.c:312:16
  10092a:    a3 da             	r3 >>= r2  #			  ## cvsd_codec.c:312:37
  10092c:    1e 41             		 r6 = b[r1+0x1] (u)			  ## cvsd_codec.c:313:32
  10092e:    67 e1 01 30       	r7 = r3 & 0x1			  ## cvsd_codec.c:312:15
  100932:    66 a1             	r6 = r6 << 0x1			  ## cvsd_codec.c:313:51
  100934:    66 e1 0e 60       	r6 = r6 & 0xE			  ## cvsd_codec.c:313:57
  100938:    76 19             	r6 |= r7			  ## cvsd_codec.c:313:65
  10093a:    9e 41             	b[r1+0x1] = r6			  ## cvsd_codec.c:313:28
  10093c:    53 e8 0d 02       	if ((r3 & 0x1) != 0) goto 0x1a <CVSD_StudentDecode+0x42 : 10095a >			  ## cvsd_codec.c:314:13
  100940:    13 62             	r3 = [r1+0x8] 
  100942:    16 44             	if (r6 == 0) goto 0x48 <CVSD_StudentDecode+0x74 : 10098c >
  100944:    46 16             	r6 = r4			  ## cvsd_codec.c:322:23
  100946:    47 20             	r7 = 0x0			  ## cvsd_codec.c:322:23
  100948:    fc e1 30 68       	r7_r6 += r3 * r8 (u)			  ## cvsd_codec.c:322:23
  10094c:    d0 e1 0a 68       	r7_r6 >>= 0xa			  ## cvsd_codec.c:323:46
  100950:    a6 ec 20 0d       	if (r6 <= 0x2800) {
  100954:    46 e0 00 28       		r6 = 0x2800
                               	}			  ## cvsd_codec.c:324:21
  100958:    14 80             	goto 0x40 <CVSD_StudentDecode+0x82 : 10099a >			  ## cvsd_codec.c:324:21
  10095a:    13 62             	r3 = [r1+0x8] 
  10095c:    86 f8 08 1e       	if (r6 != 0xf) goto 0x10 <CVSD_StudentDecode+0x58 : 100970 >			  ## cvsd_codec.c:331:17
  100960:    e6 e0 20 3d       	r6 = r3 + 0x2800			  ## cvsd_codec.c:332:61
  100964:    96 62             	[r1+0x8] = r6			  ## cvsd_codec.c:332:38
  100966:    26 e9 a0 09       	if (r6 >= 0x140000) {			  ## cvsd_codec.c:332:38
  10096a:    60 e0 a0 69       		r6 = 0x140000
                               	}			  ## cvsd_codec.c:333:21
  10096e:    04 8a             	goto 0x14 <CVSD_StudentDecode+0x6C : 100984 >			  ## cvsd_codec.c:333:21
  100970:    46 16             	r6 = r4			  ## cvsd_codec.c:338:23
  100972:    47 20             	r7 = 0x0			  ## cvsd_codec.c:338:23
  100974:    fc e1 30 68       	r7_r6 += r3 * r8 (u)			  ## cvsd_codec.c:338:23
  100978:    d0 e1 0a 68       	r7_r6 >>= 0xa			  ## cvsd_codec.c:339:46
  10097c:    a6 ec 20 0d       	if (r6 <= 0x2800) {
  100980:    46 e0 00 28       		r6 = 0x2800
                               	}			  ## cvsd_codec.c:340:21
  100984:    96 62             	[r1+0x8] = r6
  100986:    13 61             	r3 = [r1+0x4] 			  ## cvsd_codec.c:344:48
  100988:    b6 1f             	r6 = r3 - r6			  ## cvsd_codec.c:344:56
  10098a:    04 8a             	goto 0x14 <CVSD_StudentDecode+0x88 : 1009a0 >			  ## cvsd_codec.c:344:56
  10098c:    e6 e0 20 3d       	r6 = r3 + 0x2800			  ## cvsd_codec.c:316:61
  100990:    96 62             	[r1+0x8] = r6			  ## cvsd_codec.c:316:38
  100992:    26 e9 a0 09       	if (r6 >= 0x140000) {			  ## cvsd_codec.c:316:38
  100996:    60 e0 a0 69       		r6 = 0x140000
                               	}			  ## cvsd_codec.c:317:21
  10099a:    96 62             	[r1+0x8] = r6
  10099c:    13 61             	r3 = [r1+0x4] 			  ## cvsd_codec.c:329:47
  10099e:    36 18             	r6 += r3			  ## cvsd_codec.c:329:55
  1009a0:    96 61             	[r1+0x4] = r6
  1009a2:    6e a6             	r6 = r6 <<< 0x6			  ## cvsd_codec.c:354:13
  1009a4:    ee a6             	r6 = r6 >>> 0x6			  ## cvsd_codec.c:354:13
  1009a6:    e3 e1 1f 60       	r3 = r6 * 0x1F			  ## cvsd_codec.c:366:52
  1009aa:    c3 30             	r3 += 0x10			  ## cvsd_codec.c:366:57
  1009ac:    bb a5             	r3 = r3 >>> 0x5			  ## cvsd_codec.c:366:63
  1009ae:    03 f1 00 32       	r3 = r3 + 0x200  #			  ## cvsd_codec.c:367:42
  1009b2:    93 61             		 [r1+0x4] = r3			  ## cvsd_codec.c:366:29
  1009b4:    bb aa             	r3 = r3 >>> 0xa			  ## cvsd_codec.c:367:68
  1009b6:    d8 ec 0b 32       	[r0+r2<<2] = r3			  ## cvsd_codec.c:367:19
  1009ba:    c2 21             	r2 += 0x1			  ## cvsd_codec.c:311:35
  1009bc:    82 f8 b4 11       	if (r2 != 0x8) goto -0x98 <CVSD_StudentDecode+0x10 : 100928 >
  1009c0:    58 04             	{pc, r8-r4} = [sp++]			  ## cvsd_codec.c:370:1


cvsd_decode:
  1009c2:    7e 04             	[--sp] = {rets, r14-r4}			  ## cvsd_codec.c:395:0
  1009c4:    0d 16             	r13 = r0			  ## cvsd_codec.c:395:0
  1009c6:    0e e1 4c 00       	r14 = r0 + 0x4c			  ## cvsd_codec.c:399:23
  1009ca:    50 ed e2 50       	r5 = h[r14+0x2] (u)			  ## cvsd_codec.c:399:30
  1009ce:    3a 16             	r10 = r3
  1009d0:    28 16             	r8 = r2
  1009d2:    19 16             	r9 = r1
  1009d4:    c8 20             	r0 += 0x20
  1009d6:    85 f8 a8 02       	if (r5 != 0x1) goto 0x150 <cvsd_decode+0x168 : 100b2a >
  1009da:    c3 14             	r11 = 0
  1009dc:    4c e0 02 00       	r12 = 0x2
  1009e0:    54 81             	goto 0x142 <cvsd_decode+0x162 : 100b24 >
  1009e2:    d8 ee 90 1b       	r1 = b[r9+r11] (u)			  ## cvsd_codec.c:401:45
  1009e6:    52 ee e0 10       	b[r14+0x0] = r1			  ## cvsd_codec.c:401:43
  1009ea:    e1 16             	r1 = r14			  ## cvsd_codec.c:402:13
  1009ec:    41 95             	call -0xd6 <CVSD_StudentDecode : 100918 >			  ## cvsd_codec.c:402:13
  1009ee:    42 20             	r2 = 0x0
  1009f0:    04 99             	goto 0x32 <cvsd_decode+0x62 : 100a24 >
  1009f2:    d8 ec 0a 32       	r3 = [r0+r2<<2]			  ## cvsd_codec.c:55:27
  1009f6:    a3 f0 00 30       	r3 = 0x0 - r3  #			  ## cvsd_codec.c:56:49
  1009fa:    17 63             		 r7 = [r1+0xc] 			  ## cvsd_codec.c:55:15
  1009fc:    93 63             	[r1+0xc] = r3			  ## cvsd_codec.c:56:19
  1009fe:    13 65             	r3 = [r1+0x14] 			  ## cvsd_codec.c:59:27
  100a00:    a3 f0 00 30       	r3 = 0x0 - r3  #			  ## cvsd_codec.c:60:49
  100a04:    15 64             		 r5 = [r1+0x10] 			  ## cvsd_codec.c:59:15
  100a06:    93 64             	[r1+0x10] = r3			  ## cvsd_codec.c:60:19
  100a08:    d8 ec 0a 32       	r3 = [r0+r2<<2]			  ## cvsd_codec.c:63:22
  100a0c:    53 18             	r3 += r5			  ## cvsd_codec.c:63:20
  100a0e:    36 a5             	r6 = r3 << 0x5			  ## cvsd_codec.c:64:37
  100a10:    a6 e0 20 60       	r6 = 0x20 - r6			  ## cvsd_codec.c:64:37
  100a14:    ee a6             	r6 = r6 >>> 0x6			  ## cvsd_codec.c:64:43
  100a16:    65 18             	r5 += r6			  ## cvsd_codec.c:64:49
  100a18:    b9 df             	r1 = r3 - r7  #			  ## cvsd_codec.c:57:26
  100a1a:    95 65             		 [r1+0x14] = r5			  ## cvsd_codec.c:64:19
  100a1c:    51 18             	r1 += r5			  ## cvsd_codec.c:67:27
  100a1e:    d8 ec 0b 12       	[r0+r2<<2] = r1			  ## cvsd_codec.c:67:20
  100a22:    c2 21             	r2 += 0x1			  ## cvsd_codec.c:54:27
  100a24:    01 e1 8c d0       	r1 = r13 + 0x8c
  100a28:    82 f8 e3 11       	if (r2 != 0x8) goto -0x3a <cvsd_decode+0x30 : 1009f2 >			  ## cvsd_codec.c:54:5
  100a2c:    82 14             	r3_r2 = 0
  100a2e:    04 88             	goto 0x10 <cvsd_decode+0x7E : 100a40 >
  100a30:    d8 ec 02 52       	r5 = [r0+r2]			  ## cvsd_codec.c:196:35
  100a34:    f4 e1 51 5c       	r5 = r5 / r12 (s)			  ## cvsd_codec.c:196:63
  100a38:    d8 ec 0b 53       	[r0+r3<<2] = r5			  ## cvsd_codec.c:196:33
  100a3c:    c2 28             	r2 += 0x8			  ## cvsd_codec.c:195:5
  100a3e:    c3 21             	r3 += 0x1			  ## cvsd_codec.c:195:25
  100a40:    83 f8 f6 09       	if (r3 != 0x4) goto -0x14 <cvsd_decode+0x6E : 100a30 >			  ## cvsd_codec.c:195:5
  100a44:    42 20             	r2 = 0x0
  100a46:    14 82             	goto 0x44 <cvsd_decode+0xCA : 100a8c >
  100a48:    d8 ec 0a 32       	r3 = [r0+r2<<2]			  ## cvsd_codec.c:55:27
  100a4c:    15 60             	r5 = [r1+0x0] 			  ## cvsd_codec.c:55:15
  100a4e:    db 1e             	r3 = r5 - r3			  ## cvsd_codec.c:55:25
  100a50:    e6 e1 60 30       	r6 = r3 * 0x60			  ## cvsd_codec.c:56:27
  100a54:    ce 20             	r6 += 0x20			  ## cvsd_codec.c:56:37
  100a56:    ee a6             	r6 = r6 >>> 0x6			  ## cvsd_codec.c:56:43
  100a58:    6d 1f             	r5 = r6 - r5			  ## cvsd_codec.c:56:49
  100a5a:    95 60             	[r1+0x0] = r5			  ## cvsd_codec.c:56:19
  100a5c:    16 62             	r6 = [r1+0x8] 			  ## cvsd_codec.c:59:27
  100a5e:    17 61             	r7 = [r1+0x4] 			  ## cvsd_codec.c:59:15
  100a60:    f6 1f             	r6 = r7 - r6			  ## cvsd_codec.c:59:25
  100a62:    e4 e1 60 60       	r4 = r6 * 0x60			  ## cvsd_codec.c:60:27
  100a66:    cc 20             	r4 += 0x20			  ## cvsd_codec.c:60:37
  100a68:    cc a6             	r4 = r4 >>> 0x6			  ## cvsd_codec.c:60:43
  100a6a:    cc 1f             	r4 = r4 - r7			  ## cvsd_codec.c:60:49
  100a6c:    c4 df             	r4 = r4 - r6  #			  ## cvsd_codec.c:61:26
  100a6e:    94 61             		 [r1+0x4] = r4			  ## cvsd_codec.c:60:19
  100a70:    d8 ec 0a 72       	r7 = [r0+r2<<2]			  ## cvsd_codec.c:63:22
  100a74:    ce 1f             	r6 = r4 - r7			  ## cvsd_codec.c:63:20
  100a76:    67 a5             	r7 = r6 << 0x5			  ## cvsd_codec.c:64:27
  100a78:    cf 20             	r7 += 0x20			  ## cvsd_codec.c:64:37
  100a7a:    ff a6             	r7 = r7 >>> 0x6			  ## cvsd_codec.c:64:43
  100a7c:    74 1f             	r4 = r7 - r4			  ## cvsd_codec.c:64:49
  100a7e:    db de             	r3 = r5 - r3  #			  ## cvsd_codec.c:65:26
  100a80:    94 62             		 [r1+0x8] = r4			  ## cvsd_codec.c:64:19
  100a82:    b3 1f             	r3 = r3 - r6			  ## cvsd_codec.c:57:26
  100a84:    43 18             	r3 += r4			  ## cvsd_codec.c:67:27
  100a86:    d8 ec 0b 32       	[r0+r2<<2] = r3			  ## cvsd_codec.c:67:20
  100a8a:    c2 21             	r2 += 0x1			  ## cvsd_codec.c:54:27
  100a8c:    82 f8 dc 09       	if (r2 != 0x4) goto -0x48 <cvsd_decode+0x86 : 100a48 >			  ## cvsd_codec.c:54:5
  100a90:    41 20             	r1 = 0x0
  100a92:    42 20             	r2 = 0x0
  100a94:    04 88             	goto 0x10 <cvsd_decode+0xE4 : 100aa6 >
  100a96:    d8 ec 02 31       	r3 = [r0+r1]			  ## cvsd_codec.c:200:35
  100a9a:    f4 e1 31 3c       	r3 = r3 / r12 (s)			  ## cvsd_codec.c:200:63
  100a9e:    d8 ec 0b 32       	[r0+r2<<2] = r3			  ## cvsd_codec.c:200:33
  100aa2:    c1 28             	r1 += 0x8			  ## cvsd_codec.c:199:5
  100aa4:    c2 21             	r2 += 0x1			  ## cvsd_codec.c:199:25
  100aa6:    82 f8 f6 05       	if (r2 != 0x2) goto -0x14 <cvsd_decode+0xD4 : 100a96 >			  ## cvsd_codec.c:199:5
  100aaa:    41 20             	r1 = 0x0
  100aac:    14 89             	goto 0x52 <cvsd_decode+0x13E : 100b00 >
  100aae:    d8 ec 0a 21       	r2 = [r0+r1<<2]			  ## cvsd_codec.c:55:27
  100ab2:    d0 ec e4 33       	r3 = [r14+0x34]			  ## cvsd_codec.c:55:15
  100ab6:    b2 1e             	r2 = r3 - r2			  ## cvsd_codec.c:55:25
  100ab8:    e4 e1 54 20       	r4 = r2 * 0x54			  ## cvsd_codec.c:56:27
  100abc:    cc 20             	r4 += 0x20			  ## cvsd_codec.c:56:37
  100abe:    cc a6             	r4 = r4 >>> 0x6			  ## cvsd_codec.c:56:43
  100ac0:    cb 1e             	r3 = r4 - r3			  ## cvsd_codec.c:56:49
  100ac2:    d0 ec e5 33       	[r14+0x34] = r3			  ## cvsd_codec.c:56:19
  100ac6:    d0 ec ec 43       	r4 = [r14+0x3c]			  ## cvsd_codec.c:59:27
  100aca:    d0 ec e8 53       	r5 = [r14+0x38]			  ## cvsd_codec.c:59:15
  100ace:    54 1f             	r4 = r5 - r4			  ## cvsd_codec.c:59:25
  100ad0:    e6 e1 4d 40       	r6 = r4 * 0x4D			  ## cvsd_codec.c:60:27
  100ad4:    ce 20             	r6 += 0x20			  ## cvsd_codec.c:60:37
  100ad6:    ee a6             	r6 = r6 >>> 0x6			  ## cvsd_codec.c:60:43
  100ad8:    6d 1f             	r5 = r6 - r5			  ## cvsd_codec.c:60:49
  100ada:    d0 ec e9 53       	[r14+0x38] = r5			  ## cvsd_codec.c:60:19
  100ade:    d8 ec 0a 61       	r6 = [r0+r1<<2]			  ## cvsd_codec.c:63:22
  100ae2:    54 1f             	r4 = r5 - r4			  ## cvsd_codec.c:61:26
  100ae4:    c5 1f             	r5 = r4 - r6			  ## cvsd_codec.c:63:20
  100ae6:    e6 e1 18 50       	r6 = r5 * 0x18			  ## cvsd_codec.c:64:27
  100aea:    ce 20             	r6 += 0x20			  ## cvsd_codec.c:64:37
  100aec:    ee a6             	r6 = r6 >>> 0x6			  ## cvsd_codec.c:64:43
  100aee:    64 1f             	r4 = r6 - r4			  ## cvsd_codec.c:64:49
  100af0:    d0 ec ed 43       	[r14+0x3c] = r4			  ## cvsd_codec.c:64:19
  100af4:    b2 1e             	r2 = r3 - r2			  ## cvsd_codec.c:65:26
  100af6:    2a 1f             	r2 = r2 - r5			  ## cvsd_codec.c:57:26
  100af8:    42 18             	r2 += r4			  ## cvsd_codec.c:67:27
  100afa:    d8 ec 0b 21       	[r0+r1<<2] = r2			  ## cvsd_codec.c:67:20
  100afe:    c1 21             	r1 += 0x1			  ## cvsd_codec.c:54:27
  100b00:    81 f8 d5 05       	if (r1 != 0x2) goto -0x56 <cvsd_decode+0xEC : 100aae >
  100b04:    d0 ec d0 12       	r1 = [r13+0x20]			  ## cvsd_codec.c:224:17
  100b08:    12 16             	r2 = r1			  ## cvsd_codec.c:214:9
  100b0a:    ab bf             	r3 = r2 >>> 0x1f			  ## cvsd_codec.c:214:9
  100b0c:    d2 e1              <unkown instruction>			  ## cvsd_codec.c:214:9
  100b0e:    31 2c             	r1 |= 0x1000			  ## cvsd_codec.c:214:9
  100b10:    78 e0 01 12       	r1 = sat16(r2) (s)			  ## cvsd_codec.c:214:9
  100b14:    d0 ec d1 12       	[r13+0x20] = r1			  ## cvsd_codec.c:214:9
  100b18:    50 ed ef 10       	h[r14+0xe] = r1			  ## cvsd_codec.c:230:28
  100b1c:    d8 ed 89 1b       	h[r8+r11<<1] = r1			  ## cvsd_codec.c:404:24
  100b20:    0b e1 01 b0       	r11 = r11 + 0x1			  ## cvsd_codec.c:400:31
  100b24:    8a ed 5d b1       	ifs (r11 < r10) goto -0x146 <cvsd_decode+0x20 : 1009e2 >
  100b28:    04 97             	goto 0x2e <cvsd_decode+0x196 : 100b58 >
  100b2a:    45 20             	r5 = 0x0
  100b2c:    04 93             	goto 0x26 <cvsd_decode+0x192 : 100b54 >
  100b2e:    d8 ee 90 15       	r1 = b[r9+r5] (u)			  ## cvsd_codec.c:408:45
  100b32:    52 ee e0 10       	b[r14+0x0] = r1			  ## cvsd_codec.c:408:43
  100b36:    e1 16             	r1 = r14			  ## cvsd_codec.c:409:13
  100b38:    bf ea ee fe       	call -0x224 <CVSD_StudentDecode : 100918 >			  ## cvsd_codec.c:409:13
  100b3c:    41 20             	r1 = 0x0			  ## cvsd_codec.c:170:9
  100b3e:    02 16             	r2 = r0			  ## cvsd_codec.c:170:9
  100b40:    23 05             	r3 = [r2++=0x4] 			  ## cvsd_codec.c:170:9
  100b42:    10 87             	rep 0x4 0x8 {			  ## cvsd_codec.c:170:9
  100b44:    99 dc             		r1 = r1 + r3  #			  ## cvsd_codec.c:170:9
  100b46:    23 05             			 r3 = [r2++=0x4] 
                               	}			  ## cvsd_codec.c:170:9
  100b48:    91 a3             	r1 = r1 >> 0x3			  ## cvsd_codec.c:181:19
  100b4a:    50 ed ef 10       	h[r14+0xe] = r1			  ## cvsd_codec.c:184:28
  100b4e:    d8 ed 89 15       	h[r8+r5<<1] = r1			  ## cvsd_codec.c:411:24
  100b52:    c5 21             	r5 += 0x1			  ## cvsd_codec.c:407:31
  100b54:    8a ed eb 51       	ifs (r5 < r10) goto -0x2a <cvsd_decode+0x16C : 100b2e >
  100b58:    40 20             	r0 = 0x0			  ## cvsd_codec.c:415:5
  100b5a:    5e 04             	{pc, r14-r4} = [sp++]			  ## cvsd_codec.c:415:5


cvsd_set:
  100b5c:    81 48             	if (r1 != 0) goto 0x10 <cvsd_set+0x12 : 100b6e >			  ## cvsd_codec.c:419:0
  100b5e:    54 ee 20 10       	r1 = b[r2+0x0] (s)			  ## cvsd_codec.c:425:40
  100b62:    50 ed 03 14       	h[r0+0x42] = r1			  ## cvsd_codec.c:425:38
  100b66:    54 ee 21 10       	r1 = b[r2+0x1] (s)			  ## cvsd_codec.c:426:40
  100b6a:    50 ed 0f 14       	h[r0+0x4e] = r1			  ## cvsd_codec.c:426:38
  100b6e:    80 00             	rts			  ## cvsd_codec.c:432:1


get_cvsd_codec_ops:
  100b70:    c0 ff 78 0b 10 00 	r0 = 0x100b78 <bt_esco_cvsd_codec : 100b78 >			  ## cvsd_codec.c:443:0
  100b76:    80 00             	rts			  ## cvsd_codec.c:444:5


bt_esco_cvsd_codec:
  100b78:	 be 06 10 00 c2 06 10 00         ........
  100b80:	 92 07 10 00 c2 09 10 00         ........
  100b88:	 5c 0b 10 00                     \...


B_iircal:
  100b8c:    7b 04             	[--sp] = {rets, r11-r4}			  ## B_filter.c:107:0
  100b8e:    50 ec 00 80       	r9_r8 = d[r0+0x0]			  ## B_filter.c:133:24
  100b92:    c0 28             	r0 += 0x8			  ## B_filter.c:134:27


biir_i_outter_loop:
  100b94:    d4 ed 12 60       	r6 = h[r1++=0x2] (s)			  ## B_filter.c:139:2
  100b98:    07 16             	r7 = r0			  ## B_filter.c:139:2
  100b9a:    84 16             	r4 = r8			  ## B_filter.c:139:2
  100b9c:    e0 ee 41 b6       	r11_r10 = [r4 ++= 0x4]*r6 (s)			  ## B_filter.c:139:2
  100ba0:    10 83             	rep 0x4 0x4 {			  ## B_filter.c:139:2
  100ba2:    e1 e9 71 b4       		r11_r10 += [r7 ++= 0x4]*[r4 ++= 0x4] (s)
                               	}			  ## B_filter.c:139:2
  100ba6:    05 60             	r5 = [r0+0x0] 			  ## B_filter.c:139:2
  100ba8:    86 60             	[r0+0x0] = r6			  ## B_filter.c:139:2
  100baa:    85 61             	[r0+0x4] = r5			  ## B_filter.c:139:2
  100bac:    df e1 a1 59       	r5 = r11_r10 >> r9 (s)			  ## B_filter.c:139:2
  100bb0:    06 62             	r6 = [r0+0x8] 			  ## B_filter.c:139:2
  100bb2:    85 62             	[r0+0x8] = r5			  ## B_filter.c:139:2
  100bb4:    86 63             	[r0+0xc] = r6			  ## B_filter.c:139:2
  100bb6:    78 e0 01 55       	r5 = sat16(r5) (s)			  ## B_filter.c:139:2
  100bba:    a5 06             	h[r2++=0x2] = r5			  ## B_filter.c:139:2
  100bbc:    03 ea ea ff       	if (--r3 != 0) goto -0x2c <biir_i_outter_loop : 100b94 >			  ## B_filter.c:139:2
  100bc0:    5b 04             	{pc, r11-r4} = [sp++]			  ## B_filter.c:180:1


B_comput_correlataionS:
  100bc2:    76 04             	[--sp] = {rets, r6-r4}			  ## B_filter.c:295:0
  100bc4:    44 20             	r4 = 0x0			  ## B_filter.c:313:3
  100bc6:    45 20             	r5 = 0x0			  ## B_filter.c:313:3


bccs:
  100bc8:    32 03             	rep 0x8 r2 {			  ## B_filter.c:313:3
  100bca:    d4 ed 12 60       		r6 = h[r1++=0x2] (s)			  ## B_filter.c:313:3
  100bce:    ec ee 01 56       		r5_r4 += h[r0 ++= 0x2]*r6 (s)
                               	}			  ## B_filter.c:313:3
  100bd2:    f2 5a             	if (r2 != 0) goto -0xc <bccs : 100bc8 >			  ## B_filter.c:313:3
  100bd4:    df e1 41 03       	r0 = r5_r4 >> r3 (s)			  ## B_filter.c:336:2
  100bd8:    56 04             	{pc, r6-r4} = [sp++]			  ## B_filter.c:337:2


B_fir_cal_s:
  100bda:    d9 e8 f0 df       	[--sp] = {rets, r15, r14, r12-r4}			  ## B_filter.c:351:0
  100bde:    50 ed 06 c0       	r12 = h[r0+0x6] (u)			  ## B_filter.c:390:2
  100be2:    54 ed 04 80       	r8 = h[r0+0x4] (s)			  ## B_filter.c:382:16
  100be6:    d0 ec 0c 90       	r9 = [r0+0xc]			  ## B_filter.c:383:24
  100bea:    54 ed 08 a0       	r10 = h[r0+0x8] (s)			  ## B_filter.c:388:32
  100bee:    d0 ec 00 b0       	r11 = [r0+0x0]			  ## B_filter.c:380:25
  100bf2:    38 e1 ff 8f       	r8 = r8 + -0x1			  ## B_filter.c:382:33
  100bf6:    c0 e1 91 90       	r9 = r9 << 0x1			  ## B_filter.c:383:30
  100bfa:    c0 e1 a2 50       	r5 = r10 << 0x2			  ## B_filter.c:388:51
  100bfe:    35 31             	r5 |= 0x20000			  ## B_filter.c:388:29


fir_s_outter_loop:
  100c00:    b7 16             	r7 = r11			  ## B_filter.c:390:2
  100c02:    14 16             	r4 = r1			  ## B_filter.c:390:2
  100c04:    e8 e8 45 f7       	r15_r14 = h[r4 ++= r5.h]*[r7 ++= r5.l] (s)			  ## B_filter.c:390:2
  100c08:    86 16             	r6 = r8			  ## B_filter.c:390:2


bccs1:
  100c0a:    16 03             	rep 0x4 r6 {			  ## B_filter.c:390:2
  100c0c:    ec e8 45 f7       		r15_r14 += h[r4 ++= r5.h]*[r7 ++= r5.l] (s)
                               	}			  ## B_filter.c:390:2
  100c10:    f6 5c             	if (r6 != 0) goto -0x8 <bccs1 : 100c0a >			  ## B_filter.c:390:2
  100c12:    df e1 e1 ac       	r10 = r15_r14 >> r12 (s)			  ## B_filter.c:390:2
  100c16:    78 e0 01 aa       	r10 = sat16(r10) (s)			  ## B_filter.c:390:2
  100c1a:    d0 ed 23 a0       	h[r2++=0x2] = r10			  ## B_filter.c:390:2
  100c1e:    91 18             	r1 += r9			  ## B_filter.c:390:2
  100c20:    03 ea ee ff       	if (--r3 != 0) goto -0x24 <fir_s_outter_loop : 100c00 >			  ## B_filter.c:390:2
  100c24:    50 ed 07 c0       	h[r0+0x6] = r12			  ## B_filter.c:390:2
  100c28:    d5 e8 f0 df       	{pc, r15, r14, r12-r4} = [sp++]			  ## B_filter.c:429:1


B_array_vol:
  100c2c:    42 03             	rep 0xa r2 {			  ## B_filter.c:433:0
  100c2e:    54 ed 00 30       		r3 = h[r0+0x0] (s)			  ## B_filter.c:444:3
  100c32:    13 1b             		r3 *= r1			  ## B_filter.c:444:3
  100c34:    bb ad             		r3 = r3 >>> 0xd			  ## B_filter.c:444:3
  100c36:    83 06             		h[r0++=0x2] = r3
                               	}			  ## B_filter.c:444:3
  100c38:    f2 59             	if (r2 != 0) goto -0xe <B_array_vol : 100c2c >			  ## B_filter.c:444:3
  100c3a:    80 00             	rts			  ## B_filter.c:463:1


B_Syn_filt:
  100c3c:    7b 04             	[--sp] = {rets, r11-r4}			  ## B_filter.c:556:0
  100c3e:    d0 e9 24 80       	r9_r8 = d[sp+36]			  ## B_filter.c:556:0


bsy1_s_outter_loop:
  100c42:    f7 e0 02 20       	r7 = r2 - 0x2			  ## B_filter.c:587:2
  100c46:    04 16             	r4 = r0			  ## B_filter.c:587:2
  100c48:    d4 ed 12 50       	r5 = h[r1++=0x2] (s)			  ## B_filter.c:587:2
  100c4c:    e8 ee 41 b5       	r11_r10 = h[r4 ++= 0x2]*r5 (s)			  ## B_filter.c:587:2
  100c50:    86 16             	r6 = r8			  ## B_filter.c:587:2


bsy1:
  100c52:    36 03             	rep 0x8 r6 {			  ## B_filter.c:587:2
  100c54:    d7 ed 7e 5f       		r5 = h[r7++=-0x2] (s)			  ## B_filter.c:587:2
  100c58:    ee ee 41 b5       		r11_r10 -= h[r4 ++= 0x2]*r5 (s)
                               	}			  ## B_filter.c:587:2
  100c5c:    f6 5a             	if (r6 != 0) goto -0xc <bsy1 : 100c52 >			  ## B_filter.c:587:2
  100c5e:    df e1 a1 59       	r5 = r11_r10 >> r9 (s)			  ## B_filter.c:587:2
  100c62:    78 e0 01 55       	r5 = sat16(r5) (s)			  ## B_filter.c:587:2
  100c66:    a5 06             	h[r2++=0x2] = r5			  ## B_filter.c:587:2
  100c68:    03 ea eb ff       	if (--r3 != 0) goto -0x2a <bsy1_s_outter_loop : 100c42 >			  ## B_filter.c:587:2
  100c6c:    5b 04             	{pc, r11-r4} = [sp++]			  ## B_filter.c:625:1


B_Residu:
  100c6e:    7b 04             	[--sp] = {rets, r11-r4}			  ## B_filter.c:641:0
  100c70:    d0 e9 24 80       	r9_r8 = d[sp+36]			  ## B_filter.c:641:0


brs1_s_outter_loop:
  100c74:    f7 e0 02 10       	r7 = r1 - 0x2			  ## B_filter.c:669:2
  100c78:    04 16             	r4 = r0			  ## B_filter.c:669:2
  100c7a:    d4 ed 12 50       	r5 = h[r1++=0x2] (s)			  ## B_filter.c:669:2
  100c7e:    e8 ee 41 b5       	r11_r10 = h[r4 ++= 0x2]*r5 (s)			  ## B_filter.c:669:2
  100c82:    86 16             	r6 = r8			  ## B_filter.c:669:2


brsy1:
  100c84:    36 03             	rep 0x8 r6 {			  ## B_filter.c:669:2
  100c86:    d7 ed 7e 5f       		r5 = h[r7++=-0x2] (s)			  ## B_filter.c:669:2
  100c8a:    ec ee 41 b5       		r11_r10 += h[r4 ++= 0x2]*r5 (s)
                               	}			  ## B_filter.c:669:2
  100c8e:    f6 5a             	if (r6 != 0) goto -0xc <brsy1 : 100c84 >			  ## B_filter.c:669:2
  100c90:    df e1 a1 59       	r5 = r11_r10 >> r9 (s)			  ## B_filter.c:669:2
  100c94:    78 e0 01 55       	r5 = sat16(r5) (s)			  ## B_filter.c:669:2
  100c98:    a5 06             	h[r2++=0x2] = r5			  ## B_filter.c:669:2
  100c9a:    03 ea eb ff       	if (--r3 != 0) goto -0x2a <brs1_s_outter_loop : 100c74 >			  ## B_filter.c:669:2
  100c9e:    5b 04             	{pc, r11-r4} = [sp++]			  ## B_filter.c:707:1


os_code_begin:
  100ca0:    c0 ff 8c bc 02 00 	r0 = 0x2bc8c <the_debug_isr_stack : 2bc8c >			  ## mask_export.c:81:0
  100ca6:    40 ea 00 00       	[r0+0x0] = 0x0			  ## mask_export.c:82:5
  100caa:    80 00             	rts			  ## mask_export.c:83:1


local_irq_disable:
  100cac:    60 00             	cli			  ## mask_export.c:74:0
  100cae:    c0 ff 8c bc 02 00 	r0 = 0x2bc8c <the_debug_isr_stack : 2bc8c >			  ## mask_export.c:76:35
  100cb4:    c0 eb 01 00       	[r0+0x0] += 0x1			  ## mask_export.c:76:35
  100cb8:    80 00             	rts			  ## mask_export.c:77:1


local_irq_enable:
  100cba:    c0 ff 8c bc 02 00 	r0 = 0x2bc8c <the_debug_isr_stack : 2bc8c >			  ## mask_export.c:85:0
  100cc0:    01 60             	r1 = [r0+0x0] 			  ## mask_export.c:86:9
  100cc2:    f9 3f             	r1 += -0x1			  ## mask_export.c:86:9
  100cc4:    81 60             	[r0+0x0] = r1			  ## mask_export.c:86:9
  100cc6:    81 41             	if (r1 != 0) goto 0x2 <local_irq_enable+0x10 : 100cca >			  ## mask_export.c:86:9
  100cc8:    61 00             	sti			  ## mask_export.c:87:9
  100cca:    80 00             	rts			  ## mask_export.c:89:1


free:
  100ccc:    c1 ff cc bc 02 00 	r1 = 0x2bccc <mask_free : 2bccc >			  ## mask_export.c:22:0
  100cd2:    11 60             	r1 = [r1+0x0] 			  ## mask_export.c:23:5
  100cd4:    d1 00             	goto r1			  ## mask_export.c:23:5


malloc:
  100cd6:    c1 ff d0 bc 02 00 	r1 = 0x2bcd0 <mask_malloc : 2bcd0 >			  ## mask_export.c:26:0
  100cdc:    11 60             	r1 = [r1+0x0] 			  ## mask_export.c:27:12
  100cde:    d1 00             	goto r1			  ## mask_export.c:27:12


mask_init:
  100ce0:    77 04             	[--sp] = {rets, r7-r4}			  ## mask_export.c:57:0
  100ce2:    25 16             	r5 = r2			  ## mask_export.c:57:0
  100ce4:    16 16             	r6 = r1			  ## mask_export.c:57:0
  100ce6:    07 16             	r7 = r0			  ## mask_export.c:57:0
  100ce8:    c0 ff 8c bc 02 00 	r0 = 0x2bc8c <the_debug_isr_stack : 2bc8c >			  ## mask_export.c:82:5
  100cee:    41 20             	r1 = 0x0			  ## mask_export.c:82:5
  100cf0:    34 d6             	r4 = r3  #			  ## mask_export.c:82:5
  100cf2:    81 60             		 [r0+0x0] = r1			  ## mask_export.c:82:5
  100cf4:    c0 ff 8c bc 02 00 	r0 = 0x2bc8c <the_debug_isr_stack : 2bc8c >			  ## mask_export.c:59:5
  100cfa:    c2 ff 5c 02 00 00 	r2 = 0x25c <os_bss_size : 25c >			  ## mask_export.c:59:5
  100d00:    bf ea ab fb       	call -0x8aa <memset : 10045a >			  ## mask_export.c:59:5
  100d04:    c0 ff cc bc 02 00 	r0 = 0x2bccc <mask_free : 2bccc >			  ## mask_export.c:60:15
  100d0a:    87 60             	[r0+0x0] = r7			  ## mask_export.c:60:15
  100d0c:    c0 ff d0 bc 02 00 	r0 = 0x2bcd0 <mask_malloc : 2bcd0 >			  ## mask_export.c:61:17
  100d12:    86 60             	[r0+0x0] = r6			  ## mask_export.c:61:17
  100d14:    c0 ff d8 bc 02 00 	r0 = 0x2bcd8 <mask_stack_free : 2bcd8 >			  ## mask_export.c:62:21
  100d1a:    85 60             	[r0+0x0] = r5			  ## mask_export.c:62:21
  100d1c:    c0 ff d4 bc 02 00 	r0 = 0x2bcd4 <mask_stack_malloc : 2bcd4 >			  ## mask_export.c:63:23
  100d22:    01 26             	r1 = [sp+24]			  ## mask_export.c:63:23
  100d24:    84 60             	[r0+0x0] = r4			  ## mask_export.c:63:23
  100d26:    c0 ff dc bc 02 00 	r0 = 0x2bcdc <vPortStartFirstTask : 2bcdc >			  ## mask_export.c:64:25
  100d2c:    02 25             	r2 = [sp+20]			  ## mask_export.c:64:25
  100d2e:    81 60             	[r0+0x0] = r1			  ## mask_export.c:64:25
  100d30:    c0 ff e0 bc 02 00 	r0 = 0x2bce0 <mask_portSUPPRESS_TICKS_AND_SLEEP : 2bce0 >			  ## mask_export.c:65:39
  100d36:    01 29             	r1 = [sp+36]			  ## mask_export.c:65:39
  100d38:    82 60             	[r0+0x0] = r2			  ## mask_export.c:65:39
  100d3a:    c0 ff e4 bc 02 00 	r0 = 0x2bce4 <mask_putchar : 2bce4 >			  ## mask_export.c:67:18
  100d40:    02 2a             	r2 = [sp+40]			  ## mask_export.c:67:18
  100d42:    81 60             	[r0+0x0] = r1			  ## mask_export.c:67:18
  100d44:    c0 ff e8 bc 02 00 	r0 = 0x2bce8 <mask_log_e : 2bce8 >			  ## mask_export.c:68:16
  100d4a:    01 27             	r1 = [sp+28]			  ## mask_export.c:68:16
  100d4c:    82 60             	[r0+0x0] = r2			  ## mask_export.c:68:16
  100d4e:    00 28             	r0 = [sp+32]			  ## mask_export.c:68:16
  100d50:    c2 ff ec bc 02 00 	r2 = 0x2bcec <exception_irq_hook : 2bcec >			  ## mask_export.c:69:24
  100d56:    a1 60             	[r2+0x0] = r1			  ## mask_export.c:69:24
  100d58:    c1 ff f0 bc 02 00 	r1 = 0x2bcf0 <idle_hook : 2bcf0 >			  ## mask_export.c:70:15
  100d5e:    90 60             	[r1+0x0] = r0			  ## mask_export.c:70:15
  100d60:    57 04             	{pc, r7-r4} = [sp++]			  ## mask_export.c:71:1


uxListRemove:
  100d62:    10 04             	[--sp] = rets			  ## list.c:218:0
  100d64:    01 16             	r1 = r0			  ## list.c:218:0
  100d66:    51 82             	call -0xbc <local_irq_disable : 100cac >			  ## list.c:221:5
  100d68:    20 00             	csync			  ## list.c:221:5
  100d6a:    13 61             	r3 = [r1+0x4] 			  ## list.c:224:21
  100d6c:    10 62             	r0 = [r1+0x8] 			  ## list.c:224:58
  100d6e:    12 64             	r2 = [r1+0x10] 			  ## list.c:222:55
  100d70:    b0 62             	[r3+0x8] = r0			  ## list.c:224:40
  100d72:    10 62             	r0 = [r1+0x8] 			  ## list.c:225:21
  100d74:    83 61             	[r0+0x4] = r3			  ## list.c:225:40
  100d76:    23 61             	r3 = [r2+0x4] 			  ## list.c:231:17
  100d78:    13 e8 00 01       	if (r3 == r1) {			  ## list.c:231:17
  100d7c:    a0 61             		[r2+0x4] = r0
                               	}			  ## list.c:232:25
  100d7e:    44 ea 00 10       	[r1+0x10] = 0x0			  ## list.c:237:33
  100d82:    c0 eb ff 2f       	[r2+0x0] += -0x1			  ## list.c:238:30
  100d86:    41 99             	call -0xce <local_irq_enable : 100cba >			  ## list.c:239:5
  100d88:    20 60             	r0 = [r2+0x0] 			  ## list.c:240:20
  100d8a:    00 04             	pc = [sp++]			  ## list.c:240:5


vListInsertEnd:
  100d8c:    02 61             	r2 = [r0+0x4] 			  ## list.c:124:0
  100d8e:    92 61             	[r1+0x4] = r2			  ## list.c:136:27
  100d90:    23 62             	r3 = [r2+0x8] 			  ## list.c:137:42
  100d92:    93 62             	[r1+0x8] = r3			  ## list.c:137:31
  100d94:    23 62             	r3 = [r2+0x8] 			  ## list.c:142:14
  100d96:    b1 61             	[r3+0x4] = r1			  ## list.c:142:33
  100d98:    a1 62             	[r2+0x8] = r1			  ## list.c:143:25
  100d9a:    90 64             	[r1+0x10] = r0			  ## list.c:146:32
  100d9c:    c0 eb 01 00       	[r0+0x0] += 0x1			  ## list.c:148:30
  100da0:    80 00             	rts			  ## list.c:151:1


prvResetNextTaskUnblockTime:
  100da2:    c0 ff f8 bd 02 00 	r0 = 0x2bdf8 <pxDelayedTaskList : 2bdf8 >			  ## tasks.c:3479:0
  100da8:    01 60             	r1 = [r0+0x0] 			  ## tasks.c:3482:9
  100daa:    11 60             	r1 = [r1+0x0] 			  ## tasks.c:3482:9
  100dac:    b1 e8 00 d0       	if (r1 != 0x0) {			  ## tasks.c:3482:9
  100db0:    00 60             		r0 = [r0+0x0] 			  ## tasks.c:3493:29
  100db2:    00 63             		r0 = [r0+0xc] 			  ## tasks.c:3493:29
  100db4:    00 63             		r0 = [r0+0xc] 			  ## tasks.c:3493:29
  100db6:    00 65             		r0 = [r0+0x14] 
                               	} else {			  ## tasks.c:3494:32
  100db8:    10 3f             		r0 = -0x1
                               	}
  100dba:    c1 ff ac bc 02 00 	r1 = 0x2bcac <xNextTaskUnblockTime : 2bcac >
  100dc0:    90 60             	[r1+0x0] = r0
  100dc2:    80 00             	rts			  ## tasks.c:3496:1


xTaskRemoveFromEventList:
  100dc4:    75 04             	[--sp] = {rets, r5, r4}			  ## tasks.c:2788:0
  100dc6:    01 16             	r1 = r0			  ## tasks.c:2788:0
  100dc8:    bf ea 70 ff       	call -0x120 <local_irq_disable : 100cac >			  ## tasks.c:2805:5
  100dcc:    20 00             	csync			  ## tasks.c:2805:5
  100dce:    10 63             	r0 = [r1+0xc] 			  ## tasks.c:2806:32
  100dd0:    05 63             	r5 = [r0+0xc] 			  ## tasks.c:2806:32
  100dd2:    85 4d             	if (r5 != 0) goto 0x1a <xTaskRemoveFromEventList+0x2A : 100dee >
  100dd4:    c0 ff e8 bc 02 00 	r0 = 0x2bce8 <mask_log_e : 2bce8 >			  ## FreeRTOSConfig.h:181:5
  100dda:    42 f0 f7 0a       	r2 = 0xaf7  #			  ## FreeRTOSConfig.h:181:5
  100dde:    03 60             		 r3 = [r0+0x0] 			  ## FreeRTOSConfig.h:181:5
  100de0:    c0 ff 69 2c 10 00 	r0 = 0x102c69 <vTickISR+0x17C : 102c68 >			  ## FreeRTOSConfig.h:181:5
  100de6:    c1 ff 27 2d 10 00 	r1 = 0x102d27 <vTickISR+0x23A : 102d26 >			  ## FreeRTOSConfig.h:181:5
  100dec:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  100dee:    04 e1 28 50       	r4 = r5 + 0x28			  ## tasks.c:2808:43
  100df2:    40 16             	r0 = r4			  ## tasks.c:2808:12
  100df4:    51 96             	call -0x94 <uxListRemove : 100d62 >			  ## tasks.c:2808:12
  100df6:    c0 ff a8 bc 02 00 	r0 = 0x2bca8 <uxSchedulerSuspended : 2bca8 >			  ## tasks.c:2810:9
  100dfc:    00 60             	r0 = [r0+0x0] 			  ## tasks.c:2810:9
  100dfe:    00 47             	if (r0 == 0) goto 0xe <xTaskRemoveFromEventList+0x4A : 100e0e >			  ## tasks.c:2810:9
  100e00:    c0 ff bc bd 02 00 	r0 = 0x2bdbc <xPendingReadyList : 2bdbc >			  ## tasks.c:2816:9
  100e06:    41 16             	r1 = r4			  ## tasks.c:2816:9
  100e08:    61 81             	call -0x7e <vListInsertEnd : 100d8c >			  ## tasks.c:2816:9
  100e0a:    cd 3c             	r5 += 0x3c			  ## tasks.c:2819:25
  100e0c:    04 92             	goto 0x24 <xTaskRemoveFromEventList+0x6E : 100e32 >
  100e0e:    5c 94             	r4 = r5 + 0x14			  ## tasks.c:2811:47
  100e10:    40 16             	r0 = r4			  ## tasks.c:2811:16
  100e12:    51 87             	call -0xb2 <uxListRemove : 100d62 >			  ## tasks.c:2811:16
  100e14:    d0 ec 5e 03       	r0 = [++r5=0x3c]			  ## tasks.c:2812:9
  100e18:    c1 ff a0 bc 02 00 	r1 = 0x2bca0 <uxTopReadyPriority : 2bca0 >			  ## tasks.c:2812:9
  100e1e:    66 e8 00 10       	[r1+0x0] |= 1 << r0			  ## tasks.c:2812:9
  100e22:    e0 e1 14 00       	r0 = r0 * 0x14			  ## tasks.c:2812:9
  100e26:    c1 ff f4 bc 02 00 	r1 = 0x2bcf4 <pxReadyTasksLists : 2bcf4 >			  ## tasks.c:2812:9
  100e2c:    10 18             	r0 += r1			  ## tasks.c:2812:9
  100e2e:    41 16             	r1 = r4			  ## tasks.c:2812:9
  100e30:    51 8d             	call -0xa6 <vListInsertEnd : 100d8c >			  ## tasks.c:2812:9
  100e32:    bf ea 42 ff       	call -0x17c <local_irq_enable : 100cba >			  ## tasks.c:2818:5
  100e36:    53 60             	r3 = [r5+0x0] 			  ## tasks.c:2819:25
  100e38:    bf ea 38 ff       	call -0x190 <local_irq_disable : 100cac >			  ## tasks.c:2819:38
  100e3c:    20 00             	csync			  ## tasks.c:2819:38
  100e3e:    c0 ff 94 bc 02 00 	r0 = 0x2bc94 <CurrentTCB : 2bc94 >			  ## tasks.c:2819:38
  100e44:    02 60             	r2 = [r0+0x0] 			  ## tasks.c:2819:38
  100e46:    bf ea 38 ff       	call -0x190 <local_irq_enable : 100cba >			  ## tasks.c:2819:38
  100e4a:    20 6f             	r0 = [r2+0x3c] 			  ## tasks.c:2819:52
  100e4c:    42 20             	r2 = 0x0			  ## tasks.c:2819:52
  100e4e:    13 ec 00 80       	if (r3 > r0) {
  100e52:    c0 ff b4 bc 02 00 		r0 = 0x2bcb4 <xYieldPending : 2bcb4 >			  ## tasks.c:2827:23
  100e58:    42 21             		r2 = 0x1			  ## tasks.c:2827:23
  100e5a:    82 60             		[r0+0x0] = r2
                               	}			  ## tasks.c:2827:23
  100e5c:    51 82             	call -0xbc <prvResetNextTaskUnblockTime : 100da2 >			  ## tasks.c:2842:9
  100e5e:    20 16             	r0 = r2			  ## tasks.c:2846:5
  100e60:    55 04             	{pc, r5, r4} = [sp++]			  ## tasks.c:2846:5


xTaskSwitchContext:
  100e62:    75 04             	[--sp] = {rets, r5, r4}			  ## tasks.c:2653:0
  100e64:    c0 ff a8 bc 02 00 	r0 = 0x2bca8 <uxSchedulerSuspended : 2bca8 >			  ## tasks.c:2655:9
  100e6a:    01 60             	r1 = [r0+0x0] 			  ## tasks.c:2655:9
  100e6c:    c0 ff b4 bc 02 00 	r0 = 0x2bcb4 <xYieldPending : 2bcb4 >			  ## tasks.c:2655:9
  100e72:    01 44             	if (r1 == 0) goto 0x8 <xTaskSwitchContext+0x1A : 100e7c >			  ## tasks.c:2655:9
  100e74:    40 ea 01 00       	[r0+0x0] = 0x1			  ## tasks.c:2658:23
  100e78:    40 20             	r0 = 0x0			  ## tasks.c:2658:23
  100e7a:    55 04             	{pc, r5, r4} = [sp++]			  ## tasks.c:2711:1
  100e7c:    40 ea 00 00       	[r0+0x0] = 0x0			  ## tasks.c:2661:23
  100e80:    bf ea 14 ff       	call -0x1d8 <local_irq_disable : 100cac >			  ## tasks.c:2596:5
  100e84:    20 00             	csync			  ## tasks.c:2596:5
  100e86:    c0 ff a0 bc 02 00 	r0 = 0x2bca0 <uxTopReadyPriority : 2bca0 >			  ## tasks.c:2598:5
  100e8c:    00 60             	r0 = [r0+0x0] 			  ## tasks.c:2598:5
  100e8e:    80 e1 00 00       	r0 = clz(r0)			  ## tasks.c:2598:5
  100e92:    a0 e0 1f 00       	r0 = 0x1F - r0			  ## tasks.c:2598:5
  100e96:    e4 e1 14 00       	r4 = r0 * 0x14			  ## tasks.c:2616:5
  100e9a:    c5 ff f4 bc 02 00 	r5 = 0x2bcf4 <pxReadyTasksLists : 2bcf4 >			  ## tasks.c:2616:5
  100ea0:    d8 ec 42 05       	r0 = [r4+r5]			  ## tasks.c:2616:5
  100ea4:    80 4d             	if (r0 != 0) goto 0x1a <xTaskSwitchContext+0x5E : 100ec0 >
  100ea6:    c0 ff e8 bc 02 00 	r0 = 0x2bce8 <mask_log_e : 2bce8 >			  ## FreeRTOSConfig.h:181:5
  100eac:    42 f0 38 0a       	r2 = 0xa38  #			  ## FreeRTOSConfig.h:181:5
  100eb0:    03 60             		 r3 = [r0+0x0] 			  ## FreeRTOSConfig.h:181:5
  100eb2:    c0 ff 69 2c 10 00 	r0 = 0x102c69 <vTickISR+0x17C : 102c68 >			  ## FreeRTOSConfig.h:181:5
  100eb8:    c1 ff ab 2c 10 00 	r1 = 0x102cab <vTickISR+0x1BE : 102caa >			  ## FreeRTOSConfig.h:181:5
  100ebe:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  100ec0:    49 1d             	r1 = r4 + r5			  ## tasks.c:2618:5
  100ec2:    10 61             	r0 = [r1+0x4] 			  ## tasks.c:2618:5
  100ec4:    00 61             	r0 = [r0+0x4] 			  ## tasks.c:2618:5
  100ec6:    1a 88             	r2 = r1 + 0x8			  ## tasks.c:2618:5
  100ec8:    90 61             	[r1+0x4] = r0			  ## tasks.c:2618:5
  100eca:    10 e8 00 42       	if (r0 == r2) {			  ## tasks.c:2618:5
  100ece:    00 61             		r0 = [r0+0x4] 			  ## tasks.c:2618:5
  100ed0:    90 61             		[r1+0x4] = r0
                               	}			  ## tasks.c:2618:5
  100ed2:    00 63             	r0 = [r0+0xc] 			  ## tasks.c:2618:5
  100ed4:    c1 ff c0 bc 02 00 	r1 = 0x2bcc0 <highCurrentTCB : 2bcc0 >			  ## tasks.c:2618:5
  100eda:    90 60             	[r1+0x0] = r0			  ## tasks.c:2618:5
  100edc:    bf ea ed fe       	call -0x226 <local_irq_enable : 100cba >			  ## tasks.c:2649:5
  100ee0:    40 21             	r0 = 0x1			  ## tasks.c:2649:5
  100ee2:    55 04             	{pc, r5, r4} = [sp++]			  ## tasks.c:2711:1


vPortYield:
  100ee4:    75 04             	[--sp] = {rets, r5, r4}			  ## port.c:310:0
  100ee6:    bf ea e1 fe       	call -0x23e <local_irq_disable : 100cac >			  ## port.c:324:5
  100eea:    20 00             	csync			  ## port.c:324:5
  100eec:    51 9a             	call -0x8c <xTaskSwitchContext : 100e62 >			  ## port.c:326:9
  100eee:    00 56             	if (r0 == 0) goto 0x2c <vPortYield+0x38 : 100f1c >			  ## port.c:326:9
  100ef0:    40 20             	r0 = 0x0
  100ef2:    c1 ff c0 bc 02 00 	r1 = 0x2bcc0 <highCurrentTCB : 2bcc0 >
  100ef8:    c2 ff 94 bc 02 00 	r2 = 0x2bc94 <CurrentTCB : 2bc94 >
  100efe:    c3 ff a0 e1 1b 00 	r3 = 0x1be1a0 <__stub_LZ4_decompress_safe_usingDict+0xAE1A4 : 1be1a0 >
  100f04:    04 89             	goto 0x12 <vPortYield+0x34 : 100f18 >
  100f06:    d8 ec 1a 40       	r4 = [r1+r0<<2]			  ## port.c:349:30
  100f0a:    d8 ec 2a 50       	r5 = [r2+r0<<2]			  ## port.c:349:13
  100f0e:    95 e8 00 04       	if (r5 != r4) {			  ## port.c:349:13
  100f12:    00 ef 08 30       		[r3+0x0] |= 0x8
                               	}			  ## port.c:356:33
  100f16:    c0 21             	r0 += 0x1			  ## port.c:347:36
  100f18:    80 f8 f5 03       	if (r0 != 0x1) goto -0x16 <vPortYield+0x22 : 100f06 >
  100f1c:    35 04             	{rets, r5, r4} = [sp++]
  100f1e:    67 8d             	goto -0x266 <local_irq_enable : 100cba >


vListInitialise:
  100f20:    09 88             	r1 = r0 + 0x8			  ## list.c:87:0
  100f22:    81 61             	[r0+0x4] = r1			  ## list.c:91:21
  100f24:    42 ea ff 03       	[r0+0x8] = 0xFFFFFFFF			  ## list.c:95:33
  100f28:    81 63             	[r0+0xc] = r1			  ## list.c:99:29
  100f2a:    81 64             	[r0+0x10] = r1			  ## list.c:100:33
  100f2c:    40 ea 00 00       	[r0+0x0] = 0x0			  ## list.c:102:29
  100f30:    80 00             	rts			  ## list.c:108:1


xQueueGenericReset:
  100f32:    76 04             	[--sp] = {rets, r6-r4}			  ## queue.c:284:0
  100f34:    04 15             	r5_r4 = r1_r0			  ## queue.c:284:0
  100f36:    84 4d             	if (r4 != 0) goto 0x1a <xQueueGenericReset+0x20 : 100f52 >			  ## queue.c:284:0
  100f38:    c0 ff e8 bc 02 00 	r0 = 0x2bce8 <mask_log_e : 2bce8 >			  ## FreeRTOSConfig.h:181:5
  100f3e:    42 f0 1f 01       	r2 = 0x11f  #			  ## FreeRTOSConfig.h:181:5
  100f42:    03 60             		 r3 = [r0+0x0] 			  ## FreeRTOSConfig.h:181:5
  100f44:    c0 ff 1f 2b 10 00 	r0 = 0x102b1f <vTickISR+0x32 : 102b1e >			  ## FreeRTOSConfig.h:181:5
  100f4a:    c1 ff 0c 2b 10 00 	r1 = 0x102b0c <vTickISR+0x20 : 102b0c >			  ## FreeRTOSConfig.h:181:5
  100f50:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  100f52:    bf ea ab fe       	call -0x2aa <local_irq_disable : 100cac >			  ## queue.c:289:5
  100f56:    20 00             	csync			  ## queue.c:289:5
  100f58:    01 f1 40 40       	r1 = r4 + 0x40  #			  ## queue.c:289:5
  100f5c:    40 6f             		 r0 = [r4+0x3c] 			  ## queue.c:291:55
  100f5e:    12 60             	r2 = [r1+0x0] 			  ## queue.c:291:75
  100f60:    f0 f1 20 60       	r6 = r2 * r0  #			  ## queue.c:291:64
  100f64:    43 60             		 r3 = [r4+0x0] 			  ## queue.c:291:36
  100f66:    36 18             	r6 += r3			  ## queue.c:291:43
  100f68:    c6 61             	[r4+0x4] = r6			  ## queue.c:291:25
  100f6a:    4e ea 00 40       	[r4+0x38] = 0x0			  ## queue.c:292:36
  100f6e:    f8 3f             	r0 += -0x1			  ## queue.c:294:71
  100f70:    20 db             	r0 *= r2  #			  ## queue.c:294:91
  100f72:    c3 62             		 [r4+0x8] = r3			  ## queue.c:293:28
  100f74:    30 18             	r0 += r3			  ## queue.c:294:49
  100f76:    c0 63             	[r4+0xc] = r0			  ## queue.c:294:31
  100f78:    78 3f             	r0 = 0xff			  ## queue.c:294:31
  100f7a:    98 44             	b[r1+0x4] = r0			  ## queue.c:295:26
  100f7c:    98 45             	b[r1+0x5] = r0			  ## queue.c:296:26
  100f7e:    48 90             	r0 = r4 + 0x10			  ## queue.c:296:26
  100f80:    05 45             	if (r5 == 0) goto 0xa <xQueueGenericReset+0x5A : 100f8c >			  ## queue.c:296:26
  100f82:    61 8e             	call -0x64 <vListInitialise : 100f20 >			  ## queue.c:315:13
  100f84:    00 e1 24 40       	r0 = r4 + 0x24			  ## queue.c:316:40
  100f88:    61 8b             	call -0x6a <vListInitialise : 100f20 >			  ## queue.c:316:13
  100f8a:    04 86             	goto 0xc <xQueueGenericReset+0x66 : 100f98 >			  ## queue.c:316:13
  100f8c:    41 64             	r1 = [r4+0x10] 			  ## queue.c:304:17
  100f8e:    01 44             	if (r1 == 0) goto 0x8 <xQueueGenericReset+0x66 : 100f98 >			  ## queue.c:304:17
  100f90:    bf ea 18 ff       	call -0x1d0 <xTaskRemoveFromEventList : 100dc4 >			  ## queue.c:305:21
  100f94:    00 41             	if (r0 == 0) goto 0x2 <xQueueGenericReset+0x66 : 100f98 >			  ## queue.c:305:21
  100f96:    51 86             	call -0xb4 <vPortYield : 100ee4 >			  ## queue.c:306:21
  100f98:    bf ea 8f fe       	call -0x2e2 <local_irq_enable : 100cba >			  ## queue.c:319:5
  100f9c:    40 21             	r0 = 0x1			  ## queue.c:323:5
  100f9e:    56 04             	{pc, r6-r4} = [sp++]			  ## queue.c:323:5


xQueueGenericCreateStatic:
  100fa0:    7c 04             	[--sp] = {rets, r12-r4}			  ## queue.c:330:0
  100fa2:    e2 9f             	sp += -0x4			  ## queue.c:330:0
  100fa4:    34 16             	r4 = r3			  ## queue.c:330:0
  100fa6:    2c 16             	r12 = r2			  ## queue.c:330:0
  100fa8:    15 16             	r5 = r1			  ## queue.c:330:0
  100faa:    0b 16             	r11 = r0			  ## queue.c:330:0
  100fac:    ca ff e8 bc 02 00 	r10 = 0x2bce8 <mask_log_e : 2bce8 >			  ## queue.c:330:0
  100fb2:    c8 ff 1f 2b 10 00 	r8 = 0x102b1f <vTickISR+0x32 : 102b1e >			  ## queue.c:330:0
  100fb8:    c9 ff 26 2b 10 00 	r9 = 0x102b26 <vTickISR+0x3A : 102b26 >			  ## queue.c:330:0
  100fbe:    80 46             	if (r0 != 0) goto 0xc <xQueueGenericCreateStatic+0x2C : 100fcc >			  ## queue.c:330:0
  100fc0:    d0 ec a0 30       	r3 = [r10+0x0]			  ## FreeRTOSConfig.h:181:5
  100fc4:    42 e0 4d 01       	r2 = 0x14d			  ## FreeRTOSConfig.h:181:5
  100fc8:    80 15             	r1_r0 = r9_r8			  ## FreeRTOSConfig.h:181:5
  100fca:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  100fcc:    84 46             	if (r4 != 0) goto 0xc <xQueueGenericCreateStatic+0x3A : 100fda >
  100fce:    d0 ec a0 30       	r3 = [r10+0x0]			  ## FreeRTOSConfig.h:181:5
  100fd2:    42 e0 51 01       	r2 = 0x151			  ## FreeRTOSConfig.h:181:5
  100fd6:    80 15             	r1_r0 = r9_r8			  ## FreeRTOSConfig.h:181:5
  100fd8:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  100fda:    85 48             	if (r5 != 0) goto 0x10 <xQueueGenericCreateStatic+0x4C : 100fec >
  100fdc:    bc e8 00 c0       	if (r12 != 0x0) {
  100fe0:    d0 ec a0 30       		r3 = [r10+0x0]			  ## FreeRTOSConfig.h:181:5
  100fe4:    42 e0 55 01       		r2 = 0x155			  ## FreeRTOSConfig.h:181:5
  100fe8:    80 15             		r1_r0 = r9_r8			  ## FreeRTOSConfig.h:181:5
  100fea:    c3 00             		call r3
                               	}			  ## FreeRTOSConfig.h:181:5
  100fec:    05 48             	if (r5 == 0) goto 0x10 <xQueueGenericCreateStatic+0x5E : 100ffe >
  100fee:    3c e8 00 c0       	if (r12 == 0x0) {
  100ff2:    d0 ec a0 30       		r3 = [r10+0x0]			  ## FreeRTOSConfig.h:181:5
  100ff6:    42 e0 56 01       		r2 = 0x156			  ## FreeRTOSConfig.h:181:5
  100ffa:    80 15             		r1_r0 = r9_r8			  ## FreeRTOSConfig.h:181:5
  100ffc:    c3 00             		call r3
                               	}			  ## FreeRTOSConfig.h:181:5
  100ffe:    50 30             	r0 = 0x50			  ## queue.c:349:25
  101000:    80 20             	[sp] = r0			  ## queue.c:349:25
  101002:    00 20             	r0 = [sp]			  ## queue.c:350:9
  101004:    b0 e8 50 c0       	if (r0 != 0x50) {
  101008:    d0 ec a0 30       		r3 = [r10+0x0]			  ## FreeRTOSConfig.h:181:5
  10100c:    42 e0 5e 01       		r2 = 0x15e			  ## FreeRTOSConfig.h:181:5
  101010:    80 15             		r1_r0 = r9_r8			  ## FreeRTOSConfig.h:181:5
  101012:    c3 00             		call r3
                               	}			  ## FreeRTOSConfig.h:181:5
  101014:    04 52             	if (r4 == 0) goto 0x24 <xQueueGenericCreateStatic+0x9A : 10103a >			  ## FreeRTOSConfig.h:181:5
  101016:    07 f1 40 40       	r7 = r4 + 0x40  #
  10101a:    06 2b             		 r6 = [sp+44]
  10101c:    40 21             	r0 = 0x1
  10101e:    40 d6             	r0 = r4  #			  ## queue.c:428:9
  101020:    f8 46             		 b[r7+0x6] = r0			  ## queue.c:365:47
  101022:    b5 e8 00 00       	if (r5 != 0x0) {			  ## queue.c:365:47
  101026:    c0 16             		r0 = r12
                               	}			  ## queue.c:428:9
  101028:    40 d6             	r0 = r4  #			  ## queue.c:443:12
  10102a:    c0 60             		 [r4+0x0] = r0			  ## queue.c:443:12
  10102c:    d0 ec 4d b3       	[r4+0x3c] = r11			  ## queue.c:441:26
  101030:    f5 60             	[r7+0x0] = r5			  ## queue.c:442:28
  101032:    41 21             	r1 = 0x1			  ## queue.c:443:12
  101034:    bf ea 7d ff       	call -0x106 <xQueueGenericReset : 100f32 >			  ## queue.c:443:12
  101038:    fe 4c             	b[r7+0xc] = r6			  ## queue.c:447:33
  10103a:    40 16             	r0 = r4			  ## queue.c:372:5
  10103c:    02 81             	sp += 0x4			  ## queue.c:372:5
  10103e:    5c 04             	{pc, r12-r4} = [sp++]			  ## queue.c:372:5


prvCopyDataToQueue:
  101040:    7a 04             	[--sp] = {rets, r10-r4}			  ## queue.c:1526:0
  101042:    04 16             	r4 = r0			  ## queue.c:1526:0
  101044:    07 f1 40 40       	r7 = r4 + 0x40  #			  ## queue.c:1526:0
  101048:    46 6e             		 r6 = [r4+0x38] 			  ## queue.c:1532:34
  10104a:    25 d6             	r5 = r2  #
  10104c:    73 60             		 r3 = [r7+0x0] 			  ## queue.c:1534:18
  10104e:    03 5d             	if (r3 == 0) goto 0x3a <prvCopyDataToQueue+0x4A : 10108a >
  101050:    35 58             	if (r5 == 0) goto 0xf0 <prvCopyDataToQueue+0x102 : 101142 >
  101052:    32 d6             	r2 = r3  #			  ## queue.c:1557:16
  101054:    40 63             		 r0 = [r4+0xc] 			  ## queue.c:1557:43
  101056:    bf ea 9f f9       	call -0xcc2 <memmove : 100398 >			  ## queue.c:1557:16
  10105a:    70 60             	r0 = [r7+0x0] 			  ## queue.c:1558:43
  10105c:    41 63             	r1 = [r4+0xc] 			  ## queue.c:1558:31
  10105e:    11 1e             	r1 = r1 - r0			  ## queue.c:1558:31
  101060:    c1 63             	[r4+0xc] = r1			  ## queue.c:1558:31
  101062:    42 60             	r2 = [r4+0x0] 			  ## queue.c:1559:46
  101064:    91 e9 00 c2       	if (r1 < r2) {			  ## queue.c:1559:46
  101068:    41 61             		r1 = [r4+0x4] 			  ## queue.c:1560:47
  10106a:    a0 e0 00 00       		r0 = 0x0 - r0			  ## queue.c:1558:31
  10106e:    10 18             		r0 += r1			  ## queue.c:1560:54
  101070:    c0 63             		[r4+0xc] = r0
                               	}			  ## queue.c:1560:35
  101072:    40 20             	r0 = 0x0			  ## queue.c:1560:35
  101074:    41 21             	r1 = 0x1			  ## queue.c:1560:35
  101076:    42 21             	r2 = 0x1			  ## queue.c:1565:23
  101078:    b5 e8 02 00       	if (r5 != 0x2) {			  ## queue.c:1565:23
  10107c:    42 20             		r2 = 0x0
                               	}			  ## queue.c:1565:23
  10107e:    36 e8 00 00       	if (r6 == 0x0) {			  ## queue.c:1565:23
  101082:    61 16             		r1 = r6
                               	}			  ## queue.c:1566:35
  101084:    a1 19             	r1 &= r2			  ## queue.c:1565:13
  101086:    6e 1e             	r6 = r6 - r1			  ## queue.c:1565:13
  101088:    34 8a             	goto 0xd4 <prvCopyDataToQueue+0x11E : 10115e >
  10108a:    41 60             	r1 = [r4+0x0] 			  ## queue.c:1537:26
  10108c:    40 20             	r0 = 0x0
  10108e:    b1 47             	if (r1 != 0) goto 0xce <prvCopyDataToQueue+0x11E : 10115e >
  101090:    c1 d4             	r9 = 0  #
  101092:    45 61             		 r5 = [r4+0x4] 			  ## queue.c:1540:69
  101094:    25 53             	if (r5 == 0) goto 0xa6 <prvCopyDataToQueue+0xFC : 10113c >
  101096:    bf ea 09 fe       	call -0x3ee <local_irq_disable : 100cac >			  ## tasks.c:3603:9
  10109a:    20 00             	csync			  ## tasks.c:3603:9
  10109c:    c0 ff 94 bc 02 00 	r0 = 0x2bc94 <CurrentTCB : 2bc94 >			  ## tasks.c:3603:9
  1010a2:    02 60             	r2 = [r0+0x0] 			  ## tasks.c:3603:9
  1010a4:    bf ea 09 fe       	call -0x3ee <local_irq_enable : 100cba >			  ## tasks.c:3603:9
  1010a8:    c7 ff e8 bc 02 00 	r7 = 0x2bce8 <mask_log_e : 2bce8 >			  ## tasks.c:3603:9
  1010ae:    c8 ff 69 2c 10 00 	r8 = 0x102c69 <vTickISR+0x17C : 102c68 >			  ## tasks.c:3603:9
  1010b4:    ca ff 6a 2d 10 00 	r10 = 0x102d6a <vTickISR+0x27E : 102d6a >			  ## tasks.c:3603:9
  1010ba:    02 e8 06 50       	if (r5 == r2) goto 0xc <prvCopyDataToQueue+0x8A : 1010ca >			  ## tasks.c:3603:9
  1010be:    42 f0 13 0e       	r2 = 0xe13  #			  ## FreeRTOSConfig.h:181:5
  1010c2:    73 60             		 r3 = [r7+0x0] 			  ## FreeRTOSConfig.h:181:5
  1010c4:    80 16             	r0 = r8			  ## FreeRTOSConfig.h:181:5
  1010c6:    a1 16             	r1 = r10			  ## FreeRTOSConfig.h:181:5
  1010c8:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  1010ca:    c5 34             	r5 += 0x14
  1010cc:    50 6f             	r0 = [r5+0x3c] 			  ## tasks.c:3605:9
  1010ce:    80 47             	if (r0 != 0) goto 0xe <prvCopyDataToQueue+0x9E : 1010de >			  ## tasks.c:3605:9
  1010d0:    42 f0 15 0e       	r2 = 0xe15  #			  ## FreeRTOSConfig.h:181:5
  1010d4:    73 60             		 r3 = [r7+0x0] 			  ## FreeRTOSConfig.h:181:5
  1010d6:    80 16             	r0 = r8			  ## FreeRTOSConfig.h:181:5
  1010d8:    a1 16             	r1 = r10			  ## FreeRTOSConfig.h:181:5
  1010da:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  1010dc:    50 6f             	r0 = [r5+0x3c] 			  ## FreeRTOSConfig.h:181:5
  1010de:    31 e1 ff 0f       	r1 = r0 + -0x1			  ## tasks.c:3606:31
  1010e2:    d1 6f             	[r5+0x3c] = r1			  ## tasks.c:3606:31
  1010e4:    40 20             	r0 = 0x0			  ## tasks.c:3606:31
  1010e6:    91 4a             	if (r1 != 0) goto 0x54 <prvCopyDataToQueue+0xFC : 10113c >			  ## tasks.c:3606:31
  1010e8:    51 6e             	r1 = [r5+0x38] 			  ## tasks.c:3610:41
  1010ea:    52 6a             	r2 = [r5+0x28] 			  ## tasks.c:3610:20
  1010ec:    01 e8 26 20       	if (r2 == r1) goto 0x4c <prvCopyDataToQueue+0xFC : 10113c >			  ## tasks.c:3610:20
  1010f0:    bf ea dc fd       	call -0x448 <local_irq_disable : 100cac >			  ## tasks.c:3618:17
  1010f4:    20 00             	csync			  ## tasks.c:3618:17
  1010f6:    50 16             	r0 = r5			  ## tasks.c:3619:21
  1010f8:    bf ea 33 fe       	call -0x39a <uxListRemove : 100d62 >			  ## tasks.c:3619:21
  1010fc:    c1 ff f4 bc 02 00 	r1 = 0x2bcf4 <pxReadyTasksLists : 2bcf4 >			  ## tasks.c:3619:21
  101102:    c2 ff a0 bc 02 00 	r2 = 0x2bca0 <uxTopReadyPriority : 2bca0 >			  ## tasks.c:3619:21
  101108:    80 49             	if (r0 != 0) goto 0x12 <prvCopyDataToQueue+0xDC : 10111c >			  ## tasks.c:3619:21
  10110a:    50 6a             	r0 = [r5+0x28] 			  ## tasks.c:3620:21
  10110c:    e3 e1 14 00       	r3 = r0 * 0x14			  ## tasks.c:3620:21
  101110:    d8 ec 32 31       	r3 = [r3+r1]			  ## tasks.c:3620:21
  101114:    33 e8 00 00       	if (r3 == 0x0) {			  ## tasks.c:3620:21
  101118:    66 e8 03 20       		[r2+0x0] &= ~(1 << r0)
                               	}			  ## tasks.c:3620:21
  10111c:    50 6e             	r0 = [r5+0x38] 			  ## tasks.c:3628:44
  10111e:    a3 f0 08 00       	r3 = 0x8 - r0  #			  ## tasks.c:3633:17
  101122:    d0 6a             		 [r5+0x28] = r0			  ## tasks.c:3628:35
  101124:    d3 65             	[r5+0x14] = r3			  ## tasks.c:3633:17
  101126:    66 e8 00 20       	[r2+0x0] |= 1 << r0			  ## tasks.c:3634:17
  10112a:    e0 e1 14 00       	r0 = r0 * 0x14			  ## tasks.c:3634:17
  10112e:    10 18             	r0 += r1			  ## tasks.c:3634:17
  101130:    51 16             	r1 = r5			  ## tasks.c:3634:17
  101132:    bf ea 2b fe       	call -0x3aa <vListInsertEnd : 100d8c >			  ## tasks.c:3634:17
  101136:    bf ea c0 fd       	call -0x480 <local_irq_enable : 100cba >			  ## tasks.c:3635:17
  10113a:    40 21             	r0 = 0x1
  10113c:    d0 ec 45 90       	[r4+0x4] = r9			  ## queue.c:1541:40
  101140:    04 8e             	goto 0x1c <prvCopyDataToQueue+0x11E : 10115e >			  ## queue.c:1541:40
  101142:    32 d6             	r2 = r3  #			  ## queue.c:1549:16
  101144:    40 62             		 r0 = [r4+0x8] 			  ## queue.c:1549:41
  101146:    bf ea 27 f9       	call -0xdb2 <memmove : 100398 >			  ## queue.c:1549:16
  10114a:    70 60             	r0 = [r7+0x0] 			  ## queue.c:1550:40
  10114c:    41 62             	r1 = [r4+0x8] 			  ## queue.c:1550:28
  10114e:    01 18             	r1 += r0			  ## queue.c:1550:28
  101150:    c1 62             	[r4+0x8] = r1			  ## queue.c:1550:28
  101152:    42 61             	r2 = [r4+0x4] 			  ## queue.c:1551:44
  101154:    40 20             	r0 = 0x0			  ## queue.c:1551:44
  101156:    11 e9 00 42       	if (r1 >= r2) {			  ## queue.c:1551:44
  10115a:    41 60             		r1 = [r4+0x0] 			  ## queue.c:1552:43
  10115c:    c1 62             		[r4+0x8] = r1
                               	}			  ## queue.c:1552:32
  10115e:    69 81             	r1 = r6 + 0x1			  ## queue.c:1580:52
  101160:    c1 6e             	[r4+0x38] = r1			  ## queue.c:1580:32
  101162:    5a 04             	{pc, r10-r4} = [sp++]			  ## queue.c:1582:5


vTaskSuspendAll:
  101164:    10 04             	[--sp] = rets			  ## tasks.c:1854:0
  101166:    bf ea a1 fd       	call -0x4be <local_irq_disable : 100cac >			  ## tasks.c:1860:5
  10116a:    20 00             	csync			  ## tasks.c:1860:5
  10116c:    c0 ff a8 bc 02 00 	r0 = 0x2bca8 <uxSchedulerSuspended : 2bca8 >			  ## tasks.c:1862:5
  101172:    c0 eb 01 00       	[r0+0x0] += 0x1			  ## tasks.c:1862:5
  101176:    00 04             	pc = [sp++]			  ## tasks.c:1866:1


vTaskSetTimeOutState:
  101178:    74 04             	[--sp] = {rets, r4}			  ## tasks.c:2894:0
  10117a:    04 16             	r4 = r0			  ## tasks.c:2894:0
  10117c:    84 4d             	if (r4 != 0) goto 0x1a <vTaskSetTimeOutState+0x20 : 101198 >			  ## tasks.c:2894:0
  10117e:    c0 ff e8 bc 02 00 	r0 = 0x2bce8 <mask_log_e : 2bce8 >			  ## FreeRTOSConfig.h:181:5
  101184:    42 f0 4f 0b       	r2 = 0xb4f  #			  ## FreeRTOSConfig.h:181:5
  101188:    03 60             		 r3 = [r0+0x0] 			  ## FreeRTOSConfig.h:181:5
  10118a:    c0 ff 69 2c 10 00 	r0 = 0x102c69 <vTickISR+0x17C : 102c68 >			  ## FreeRTOSConfig.h:181:5
  101190:    c1 ff 40 2d 10 00 	r1 = 0x102d40 <vTickISR+0x254 : 102d40 >			  ## FreeRTOSConfig.h:181:5
  101196:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  101198:    c0 ff bc bc 02 00 	r0 = 0x2bcbc <xNumOfOverflows : 2bcbc >			  ## tasks.c:2896:33
  10119e:    00 60             	r0 = [r0+0x0] 			  ## tasks.c:2896:33
  1011a0:    c0 60             	[r4+0x0] = r0			  ## tasks.c:2896:31
  1011a2:    c0 ff b0 bc 02 00 	r0 = 0x2bcb0 <xTickCount : 2bcb0 >			  ## tasks.c:2897:34
  1011a8:    00 60             	r0 = [r0+0x0] 			  ## tasks.c:2897:34
  1011aa:    c0 61             	[r4+0x4] = r0			  ## tasks.c:2897:32
  1011ac:    54 04             	{pc, r4} = [sp++]			  ## tasks.c:2898:1


xTaskCheckForTimeOut:
  1011ae:    78 04             	[--sp] = {rets, r8-r4}			  ## tasks.c:2902:0
  1011b0:    04 15             	r5_r4 = r1_r0			  ## tasks.c:2902:0
  1011b2:    c6 ff e8 bc 02 00 	r6 = 0x2bce8 <mask_log_e : 2bce8 >			  ## tasks.c:2902:0
  1011b8:    c8 ff 69 2c 10 00 	r8 = 0x102c69 <vTickISR+0x17C : 102c68 >			  ## tasks.c:2902:0
  1011be:    c7 ff 55 2d 10 00 	r7 = 0x102d55 <vTickISR+0x268 : 102d54 >			  ## tasks.c:2902:0
  1011c4:    84 46             	if (r4 != 0) goto 0xc <xTaskCheckForTimeOut+0x24 : 1011d2 >			  ## tasks.c:2902:0
  1011c6:    42 f0 59 0b       	r2 = 0xb59  #			  ## FreeRTOSConfig.h:181:5
  1011ca:    63 60             		 r3 = [r6+0x0] 			  ## FreeRTOSConfig.h:181:5
  1011cc:    80 16             	r0 = r8			  ## FreeRTOSConfig.h:181:5
  1011ce:    71 16             	r1 = r7			  ## FreeRTOSConfig.h:181:5
  1011d0:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  1011d2:    85 46             	if (r5 != 0) goto 0xc <xTaskCheckForTimeOut+0x32 : 1011e0 >
  1011d4:    42 f0 5a 0b       	r2 = 0xb5a  #			  ## FreeRTOSConfig.h:181:5
  1011d8:    63 60             		 r3 = [r6+0x0] 			  ## FreeRTOSConfig.h:181:5
  1011da:    80 16             	r0 = r8			  ## FreeRTOSConfig.h:181:5
  1011dc:    71 16             	r1 = r7			  ## FreeRTOSConfig.h:181:5
  1011de:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  1011e0:    bf ea 64 fd       	call -0x538 <local_irq_disable : 100cac >			  ## tasks.c:2908:5
  1011e4:    20 00             	csync			  ## tasks.c:2908:5
  1011e6:    c0 ff b0 bc 02 00 	r0 = 0x2bcb0 <xTickCount : 2bcb0 >			  ## tasks.c:2911:44
  1011ec:    03 60             	r3 = [r0+0x0] 			  ## tasks.c:2911:44
  1011ee:    bf ea 5d fd       	call -0x546 <local_irq_disable : 100cac >			  ## tasks.c:2914:13
  1011f2:    20 00             	csync			  ## tasks.c:2914:13
  1011f4:    c2 ff 94 bc 02 00 	r2 = 0x2bc94 <CurrentTCB : 2bc94 >			  ## tasks.c:2914:13
  1011fa:    26 60             	r6 = [r2+0x0] 			  ## tasks.c:2914:13
  1011fc:    bf ea 5d fd       	call -0x546 <local_irq_enable : 100cba >			  ## tasks.c:2914:13
  101200:    50 ee 69 05       	r0 = b[r6+0x59] (u)			  ## tasks.c:2914:27
  101204:    00 4e             	if (r0 == 0) goto 0x1c <xTaskCheckForTimeOut+0x74 : 101222 >			  ## tasks.c:2914:13
  101206:    bf ea 51 fd       	call -0x55e <local_irq_disable : 100cac >			  ## tasks.c:2917:13
  10120a:    20 00             	csync			  ## tasks.c:2917:13
  10120c:    22 60             	r2 = [r2+0x0] 			  ## tasks.c:2917:13
  10120e:    bf ea 54 fd       	call -0x558 <local_irq_enable : 100cba >			  ## tasks.c:2917:13
  101212:    40 20             	r0 = 0x0			  ## tasks.c:2917:42
  101214:    52 ee 29 05       	b[r2+0x59] = r0			  ## tasks.c:2917:42
  101218:    42 21             	r2 = 0x1
  10121a:    bf ea 4e fd       	call -0x564 <local_irq_enable : 100cba >			  ## tasks.c:2947:5
  10121e:    20 16             	r0 = r2			  ## tasks.c:2949:5
  101220:    58 04             	{pc, r8-r4} = [sp++]			  ## tasks.c:2949:5
  101222:    50 60             	r0 = [r5+0x0] 			  ## tasks.c:2923:17
  101224:    42 20             	r2 = 0x0			  ## tasks.c:2923:17
  101226:    70 f8 f8 ff       	if (r0 == -0x1) goto -0x10 <xTaskCheckForTimeOut+0x6C : 10121a >			  ## tasks.c:2923:17
  10122a:    c1 ff bc bc 02 00 	r1 = 0x2bcbc <xNumOfOverflows : 2bcbc >			  ## tasks.c:2931:22
  101230:    16 60             	r6 = [r1+0x0] 			  ## tasks.c:2931:22
  101232:    47 60             	r7 = [r4+0x0] 			  ## tasks.c:2931:52
  101234:    41 61             	r1 = [r4+0x4] 			  ## tasks.c:2931:52
  101236:    42 21             	r2 = 0x1			  ## tasks.c:2931:52
  101238:    07 e8 02 60       	if (r6 == r7) goto 0x4 <xTaskCheckForTimeOut+0x92 : 101240 >			  ## tasks.c:2931:52
  10123c:    01 e9 ed 31       	if (r3 >= r1) goto -0x26 <xTaskCheckForTimeOut+0x6C : 10121a >
  101240:    39 1e             	r1 = r3 - r1			  ## tasks.c:2938:58
  101242:    81 ec ea 01       	if (r0 <= r1) goto -0x2c <xTaskCheckForTimeOut+0x6C : 10121a >			  ## tasks.c:2938:58
  101246:    08 1e             	r0 = r0 - r1			  ## tasks.c:2940:36
  101248:    40 d6             	r0 = r4  #			  ## tasks.c:2941:21
  10124a:    d0 60             		 [r5+0x0] = r0			  ## tasks.c:2940:36
  10124c:    41 95             	call -0xd6 <vTaskSetTimeOutState : 101178 >			  ## tasks.c:2941:21
  10124e:    42 20             	r2 = 0x0
  101250:    f7 84             	goto -0x38 <xTaskCheckForTimeOut+0x6C : 10121a >


vListInsert:
  101252:    75 04             	[--sp] = {rets, r5, r4}			  ## list.c:155:0
  101254:    14 60             	r4 = [r1+0x0] 			  ## list.c:157:57
  101256:    74 f8 07 fe       	if (r4 == -0x1) goto 0xe <vListInsert+0x16 : 101268 >
  10125a:    0b 88             	r3 = r0 + 0x8
  10125c:    32 16             	r2 = r3
  10125e:    23 61             	r3 = [r2+0x4] 			  ## list.c:198:76
  101260:    35 60             	r5 = [r3+0x0] 			  ## list.c:198:84
  101262:    84 ec fb 51       	if (r5 <= r4) goto -0xa <vListInsert+0xA : 10125c >			  ## list.c:198:84
  101266:    04 82             	goto 0x4 <vListInsert+0x1A : 10126c >			  ## list.c:198:84
  101268:    02 64             	r2 = [r0+0x10] 			  ## list.c:174:39
  10126a:    23 61             	r3 = [r2+0x4] 
  10126c:    93 61             	[r1+0x4] = r3			  ## list.c:204:27
  10126e:    b1 62             	[r3+0x8] = r1			  ## list.c:205:39
  101270:    92 62             	[r1+0x8] = r2			  ## list.c:206:31
  101272:    a1 61             	[r2+0x4] = r1			  ## list.c:207:24
  101274:    90 64             	[r1+0x10] = r0			  ## list.c:211:32
  101276:    c0 eb 01 00       	[r0+0x0] += 0x1			  ## list.c:213:30
  10127a:    55 04             	{pc, r5, r4} = [sp++]			  ## list.c:214:1


prvAddCurrentTaskToDelayedList:
  10127c:    77 04             	[--sp] = {rets, r7-r4}			  ## tasks.c:4419:0
  10127e:    c2 ff b0 bc 02 00 	r2 = 0x2bcb0 <xTickCount : 2bcb0 >			  ## tasks.c:4421:40
  101284:    04 d5             	r5_r4 = r1_r0  #			  ## tasks.c:4421:40
  101286:    27 60             		 r7 = [r2+0x0] 			  ## tasks.c:4421:40
  101288:    bf ea 10 fd       	call -0x5e0 <local_irq_disable : 100cac >			  ## tasks.c:4431:9
  10128c:    20 00             	csync			  ## tasks.c:4431:9
  10128e:    c6 ff 94 bc 02 00 	r6 = 0x2bc94 <CurrentTCB : 2bc94 >			  ## tasks.c:4431:9
  101294:    62 60             	r2 = [r6+0x0] 			  ## tasks.c:4431:9
  101296:    bf ea 10 fd       	call -0x5e0 <local_irq_enable : 100cba >			  ## tasks.c:4431:9
  10129a:    40 20             	r0 = 0x0			  ## tasks.c:4431:9
  10129c:    52 ee 29 05       	b[r2+0x59] = r0			  ## tasks.c:4431:38
  1012a0:    bf ea 04 fd       	call -0x5f8 <local_irq_disable : 100cac >			  ## tasks.c:4434:5
  1012a4:    20 00             	csync			  ## tasks.c:4434:5
  1012a6:    bf ea 01 fd       	call -0x5fe <local_irq_disable : 100cac >			  ## tasks.c:4437:24
  1012aa:    20 00             	csync			  ## tasks.c:4437:24
  1012ac:    62 60             	r2 = [r6+0x0] 			  ## tasks.c:4437:24
  1012ae:    bf ea 04 fd       	call -0x5f8 <local_irq_enable : 100cba >			  ## tasks.c:4437:24
  1012b2:    28 94             	r0 = r2 + 0x14			  ## tasks.c:4437:38
  1012b4:    bf ea 55 fd       	call -0x556 <uxListRemove : 100d62 >			  ## tasks.c:4437:9
  1012b8:    80 4c             	if (r0 != 0) goto 0x18 <prvAddCurrentTaskToDelayedList+0x56 : 1012d2 >
  1012ba:    bf ea f7 fc       	call -0x612 <local_irq_disable : 100cac >			  ## tasks.c:4442:9
  1012be:    20 00             	csync			  ## tasks.c:4442:9
  1012c0:    62 60             	r2 = [r6+0x0] 			  ## tasks.c:4442:9
  1012c2:    bf ea fa fc       	call -0x60c <local_irq_enable : 100cba >			  ## tasks.c:4442:9
  1012c6:    20 6f             	r0 = [r2+0x3c] 			  ## tasks.c:4442:9
  1012c8:    c1 ff a0 bc 02 00 	r1 = 0x2bca0 <uxTopReadyPriority : 2bca0 >			  ## tasks.c:4442:9
  1012ce:    66 e8 03 10       	[r1+0x0] &= ~(1 << r0)			  ## tasks.c:4442:9
  1012d2:    bf ea f2 fc       	call -0x61c <local_irq_enable : 100cba >			  ## tasks.c:4446:5
  1012d6:    f4 f8 0d fe       	if (r4 != -0x1) goto 0x1a <prvAddCurrentTaskToDelayedList+0x78 : 1012f4 >			  ## tasks.c:4446:5
  1012da:    05 4c             	if (r5 == 0) goto 0x18 <prvAddCurrentTaskToDelayedList+0x78 : 1012f4 >
  1012dc:    bf ea e6 fc       	call -0x634 <local_irq_disable : 100cac >			  ## tasks.c:4453:51
  1012e0:    20 00             	csync			  ## tasks.c:4453:51
  1012e2:    62 60             	r2 = [r6+0x0] 			  ## tasks.c:4453:51
  1012e4:    bf ea e9 fc       	call -0x62e <local_irq_enable : 100cba >			  ## tasks.c:4453:51
  1012e8:    29 94             	r1 = r2 + 0x14			  ## tasks.c:4453:65
  1012ea:    c0 ff e4 bd 02 00 	r0 = 0x2bde4 <xSuspendedTaskList : 2bde4 >			  ## tasks.c:4453:13
  1012f0:    37 04             	{rets, r7-r4} = [sp++]			  ## tasks.c:4453:13
  1012f2:    a6 8c             	goto -0x568 <vListInsertEnd : 100d8c >			  ## tasks.c:4453:13
  1012f4:    74 18             	r4 += r7
  1012f6:    bf ea d9 fc       	call -0x64e <local_irq_disable : 100cac >			  ## tasks.c:4461:13
  1012fa:    20 00             	csync			  ## tasks.c:4461:13
  1012fc:    62 60             	r2 = [r6+0x0] 			  ## tasks.c:4461:13
  1012fe:    bf ea dc fc       	call -0x648 <local_irq_enable : 100cba >			  ## tasks.c:4461:13
  101302:    a4 65             	[r2+0x14] = r4			  ## tasks.c:4461:13
  101304:    40 21             	r0 = 0x1			  ## tasks.c:4461:13
  101306:    14 e9 00 07       	if (r4 >= r7) {			  ## tasks.c:4461:13
  10130a:    40 20             		r0 = 0x0
                               	}			  ## tasks.c:4461:13
  10130c:    80 f8 0e 02       	if (r0 != 0x1) goto 0x1c <prvAddCurrentTaskToDelayedList+0xB0 : 10132c >			  ## tasks.c:4461:13
  101310:    c0 ff fc bd 02 00 	r0 = 0x2bdfc <pxOverflowDelayedTaskList : 2bdfc >			  ## tasks.c:4466:29
  101316:    02 60             	r2 = [r0+0x0] 			  ## tasks.c:4466:29
  101318:    bf ea c8 fc       	call -0x670 <local_irq_disable : 100cac >			  ## tasks.c:4466:58
  10131c:    20 00             	csync			  ## tasks.c:4466:58
  10131e:    63 60             	r3 = [r6+0x0] 			  ## tasks.c:4466:58
  101320:    bf ea cb fc       	call -0x66a <local_irq_enable : 100cba >			  ## tasks.c:4466:58
  101324:    39 94             	r1 = r3 + 0x14			  ## tasks.c:4466:72
  101326:    20 16             	r0 = r2			  ## tasks.c:4466:17
  101328:    37 04             	{rets, r7-r4} = [sp++]			  ## tasks.c:4466:17
  10132a:    c7 93             	goto -0xda <vListInsert : 101252 >			  ## tasks.c:4466:17
  10132c:    c0 ff f8 bd 02 00 	r0 = 0x2bdf8 <pxDelayedTaskList : 2bdf8 >			  ## tasks.c:4470:29
  101332:    02 60             	r2 = [r0+0x0] 			  ## tasks.c:4470:29
  101334:    bf ea ba fc       	call -0x68c <local_irq_disable : 100cac >			  ## tasks.c:4470:50
  101338:    20 00             	csync			  ## tasks.c:4470:50
  10133a:    63 60             	r3 = [r6+0x0] 			  ## tasks.c:4470:50
  10133c:    bf ea bd fc       	call -0x686 <local_irq_enable : 100cba >			  ## tasks.c:4470:50
  101340:    39 94             	r1 = r3 + 0x14			  ## tasks.c:4470:64
  101342:    20 16             	r0 = r2			  ## tasks.c:4470:17
  101344:    41 86             	call -0xf4 <vListInsert : 101252 >			  ## tasks.c:4470:17
  101346:    c0 ff ac bc 02 00 	r0 = 0x2bcac <xNextTaskUnblockTime : 2bcac >
  10134c:    01 60             	r1 = [r0+0x0] 			  ## tasks.c:4475:35
  10134e:    94 e9 00 01       	if (r4 < r1) {			  ## tasks.c:4475:35
  101352:    84 60             		[r0+0x0] = r4
                               	}			  ## tasks.c:4476:42
  101354:    57 04             	{pc, r7-r4} = [sp++]			  ## tasks.c:4514:1


vTaskPlaceOnEventList:
  101356:    75 04             	[--sp] = {rets, r5, r4}			  ## tasks.c:2715:0
  101358:    14 16             	r4 = r1			  ## tasks.c:2715:0
  10135a:    05 16             	r5 = r0			  ## tasks.c:2715:0
  10135c:    85 4d             	if (r5 != 0) goto 0x1a <vTaskPlaceOnEventList+0x22 : 101378 >			  ## tasks.c:2715:0
  10135e:    c0 ff e8 bc 02 00 	r0 = 0x2bce8 <mask_log_e : 2bce8 >			  ## FreeRTOSConfig.h:181:5
  101364:    42 f0 9c 0a       	r2 = 0xa9c  #			  ## FreeRTOSConfig.h:181:5
  101368:    03 60             		 r3 = [r0+0x0] 			  ## FreeRTOSConfig.h:181:5
  10136a:    c0 ff 69 2c 10 00 	r0 = 0x102c69 <vTickISR+0x17C : 102c68 >			  ## FreeRTOSConfig.h:181:5
  101370:    c1 ff 11 2d 10 00 	r1 = 0x102d11 <vTickISR+0x224 : 102d10 >			  ## FreeRTOSConfig.h:181:5
  101376:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  101378:    bf ea 98 fc       	call -0x6d0 <local_irq_disable : 100cac >			  ## tasks.c:2725:32
  10137c:    20 00             	csync			  ## tasks.c:2725:32
  10137e:    c0 ff 94 bc 02 00 	r0 = 0x2bc94 <CurrentTCB : 2bc94 >			  ## tasks.c:2725:32
  101384:    02 60             	r2 = [r0+0x0] 			  ## tasks.c:2725:32
  101386:    bf ea 98 fc       	call -0x6d0 <local_irq_enable : 100cba >			  ## tasks.c:2725:32
  10138a:    01 e1 28 20       	r1 = r2 + 0x28			  ## tasks.c:2725:46
  10138e:    50 16             	r0 = r5			  ## tasks.c:2725:5
  101390:    bf ea 5f ff       	call -0x142 <vListInsert : 101252 >			  ## tasks.c:2725:5
  101394:    41 21             	r1 = 0x1			  ## tasks.c:2727:5
  101396:    40 16             	r0 = r4			  ## tasks.c:2727:5
  101398:    35 04             	{rets, r5, r4} = [sp++]			  ## tasks.c:2727:5
  10139a:    b7 90             	goto -0x120 <prvAddCurrentTaskToDelayedList : 10127c >			  ## tasks.c:2727:5


prvUnlockQueue:
  10139c:    77 04             	[--sp] = {rets, r7-r4}			  ## queue.c:1601:0
  10139e:    04 16             	r4 = r0			  ## queue.c:1601:0
  1013a0:    bf ea 84 fc       	call -0x6f8 <local_irq_disable : 100cac >			  ## queue.c:1608:5
  1013a4:    20 00             	csync			  ## queue.c:1608:5
  1013a6:    05 e1 44 40       	r5 = r4 + 0x44			  ## queue.c:1608:5
  1013aa:    5f 41             	r7 = b[r5+0x1] (u)			  ## queue.c:1610:35
  1013ac:    c6 ff b4 bc 02 00 	r6 = 0x2bcb4 <xYieldPending : 2bcb4 >			  ## queue.c:1610:35
  1013b2:    04 8b             	goto 0x16 <prvUnlockQueue+0x2E : 1013ca >			  ## queue.c:1610:35
  1013b4:    40 16             	r0 = r4			  ## queue.c:1648:21
  1013b6:    d0 ec 06 12       	r1 = [++r0=0x24]			  ## queue.c:1648:21
  1013ba:    01 4a             	if (r1 == 0) goto 0x14 <prvUnlockQueue+0x34 : 1013d0 >			  ## queue.c:1648:21
  1013bc:    bf ea 02 fd       	call -0x5fc <xTaskRemoveFromEventList : 100dc4 >			  ## queue.c:1649:25
  1013c0:    b0 e8 00 00       	if (r0 != 0x0) {			  ## queue.c:1649:25
  1013c4:    40 ea 01 60       		[r6+0x0] = 0x1
                               	}			  ## tasks.c:2955:19
  1013c8:    ff 3f             	r7 += -0x1			  ## queue.c:1662:13
  1013ca:    78 17             	r0 = r7.b0 (s)			  ## queue.c:1613:24
  1013cc:    00 fd f2 03       	ifs (r0 >= 0x1) goto -0x1c <prvUnlockQueue+0x18 : 1013b4 >			  ## queue.c:1613:24
  1013d0:    78 3f             	r0 = 0xff			  ## queue.c:1665:26
  1013d2:    d8 41             	b[r5+0x1] = r0			  ## queue.c:1665:26
  1013d4:    bf ea 71 fc       	call -0x71e <local_irq_enable : 100cba >			  ## queue.c:1667:5
  1013d8:    bf ea 68 fc       	call -0x730 <local_irq_disable : 100cac >			  ## queue.c:1670:5
  1013dc:    20 00             	csync			  ## queue.c:1670:5
  1013de:    5f 40             	r7 = b[r5+0x0] (u)			  ## queue.c:1672:35
  1013e0:    04 8b             	goto 0x16 <prvUnlockQueue+0x5C : 1013f8 >			  ## queue.c:1672:35
  1013e2:    40 16             	r0 = r4			  ## queue.c:1675:17
  1013e4:    d0 ec 02 11       	r1 = [++r0=0x10]			  ## queue.c:1675:17
  1013e8:    01 4a             	if (r1 == 0) goto 0x14 <prvUnlockQueue+0x62 : 1013fe >			  ## queue.c:1675:17
  1013ea:    bf ea eb fc       	call -0x62a <xTaskRemoveFromEventList : 100dc4 >			  ## queue.c:1676:21
  1013ee:    b0 e8 00 00       	if (r0 != 0x0) {			  ## queue.c:1676:21
  1013f2:    40 ea 01 60       		[r6+0x0] = 0x1
                               	}			  ## tasks.c:2955:19
  1013f6:    ff 3f             	r7 += -0x1			  ## queue.c:1682:17
  1013f8:    78 17             	r0 = r7.b0 (s)			  ## queue.c:1674:24
  1013fa:    00 fd f2 03       	ifs (r0 >= 0x1) goto -0x1c <prvUnlockQueue+0x46 : 1013e2 >			  ## queue.c:1674:24
  1013fe:    78 3f             	r0 = 0xff			  ## queue.c:1688:26
  101400:    d8 40             	b[r5+0x0] = r0			  ## queue.c:1688:26
  101402:    37 04             	{rets, r7-r4} = [sp++]			  ## queue.c:1690:5
  101404:    26 9a             	goto -0x74c <local_irq_enable : 100cba >			  ## queue.c:1690:5


xTaskIncrementTick:
  101406:    7c 04             	[--sp] = {rets, r12-r4}			  ## tasks.c:2362:0
  101408:    c0 ff a8 bc 02 00 	r0 = 0x2bca8 <uxSchedulerSuspended : 2bca8 >			  ## tasks.c:2370:9
  10140e:    00 60             	r0 = [r0+0x0] 			  ## tasks.c:2370:9
  101410:    00 47             	if (r0 == 0) goto 0xe <xTaskIncrementTick+0x1A : 101420 >			  ## tasks.c:2370:9
  101412:    c0 ff b8 bc 02 00 	r0 = 0x2bcb8 <uxPendedTicks : 2bcb8 >			  ## tasks.c:2491:9
  101418:    c0 eb 01 00       	[r0+0x0] += 0x1			  ## tasks.c:2491:9
  10141c:    40 20             	r0 = 0x0			  ## tasks.c:2491:9
  10141e:    34 97             	goto 0xee <xTaskIncrementTick+0x108 : 10150e >			  ## tasks.c:2491:9
  101420:    c0 ff b0 bc 02 00 	r0 = 0x2bcb0 <xTickCount : 2bcb0 >			  ## tasks.c:2373:44
  101426:    01 60             	r1 = [r0+0x0] 			  ## tasks.c:2373:44
  101428:    1d 81             	r5 = r1 + 0x1			  ## tasks.c:2373:55
  10142a:    85 60             	[r0+0x0] = r5			  ## tasks.c:2377:20
  10142c:    c6 ff f8 bd 02 00 	r6 = 0x2bdf8 <pxDelayedTaskList : 2bdf8 >			  ## tasks.c:2377:20
  101432:    85 5e             	if (r5 != 0) goto 0x3c <xTaskIncrementTick+0x6A : 101470 >			  ## tasks.c:2377:20
  101434:    60 60             	r0 = [r6+0x0] 			  ## tasks.c:2380:13
  101436:    00 60             	r0 = [r0+0x0] 			  ## tasks.c:2380:13
  101438:    00 4d             	if (r0 == 0) goto 0x1a <xTaskIncrementTick+0x4E : 101454 >			  ## tasks.c:2380:13
  10143a:    c0 ff e8 bc 02 00 	r0 = 0x2bce8 <mask_log_e : 2bce8 >			  ## FreeRTOSConfig.h:181:5
  101440:    42 f0 4c 09       	r2 = 0x94c  #			  ## FreeRTOSConfig.h:181:5
  101444:    03 60             		 r3 = [r0+0x0] 			  ## FreeRTOSConfig.h:181:5
  101446:    c0 ff 69 2c 10 00 	r0 = 0x102c69 <vTickISR+0x17C : 102c68 >			  ## FreeRTOSConfig.h:181:5
  10144c:    c1 ff 98 2c 10 00 	r1 = 0x102c98 <vTickISR+0x1AC : 102c98 >			  ## FreeRTOSConfig.h:181:5
  101452:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  101454:    60 60             	r0 = [r6+0x0] 			  ## tasks.c:2380:13
  101456:    c1 ff fc bd 02 00 	r1 = 0x2bdfc <pxOverflowDelayedTaskList : 2bdfc >			  ## tasks.c:2380:13
  10145c:    12 60             	r2 = [r1+0x0] 			  ## tasks.c:2380:13
  10145e:    e2 60             	[r6+0x0] = r2			  ## tasks.c:2380:13
  101460:    90 60             	[r1+0x0] = r0			  ## tasks.c:2380:13
  101462:    c0 ff bc bc 02 00 	r0 = 0x2bcbc <xNumOfOverflows : 2bcbc >			  ## tasks.c:2380:13
  101468:    c0 eb 01 00       	[r0+0x0] += 0x1			  ## tasks.c:2380:13
  10146c:    bf ea 99 fc       	call -0x6ce <prvResetNextTaskUnblockTime : 100da2 >			  ## tasks.c:2380:13
  101470:    ca ff ac bc 02 00 	r10 = 0x2bcac <xNextTaskUnblockTime : 2bcac >
  101476:    d0 ec a0 00       	r0 = [r10+0x0]			  ## tasks.c:2390:32
  10147a:    c3 14             	r11 = 0			  ## tasks.c:2390:32
  10147c:    c8 ff f4 bc 02 00 	r8 = 0x2bcf4 <pxReadyTasksLists : 2bcf4 >			  ## tasks.c:2390:32
  101482:    c9 ff 94 bc 02 00 	r9 = 0x2bc94 <CurrentTCB : 2bc94 >			  ## tasks.c:2390:32
  101488:    80 e9 31 50       	if (r5 < r0) goto 0x62 <xTaskIncrementTick+0xE8 : 1014ee >			  ## tasks.c:2390:32
  10148c:    bf ea 0e fc       	call -0x7e4 <local_irq_disable : 100cac >			  ## tasks.c:2391:13
  101490:    20 00             	csync			  ## tasks.c:2391:13
  101492:    cc ff a0 bc 02 00 	r12 = 0x2bca0 <uxTopReadyPriority : 2bca0 >			  ## tasks.c:2391:13
  101498:    14 82             	goto 0x44 <xTaskIncrementTick+0xD8 : 1014de >			  ## tasks.c:2391:13
  10149a:    60 60             	r0 = [r6+0x0] 			  ## tasks.c:2406:39
  10149c:    00 63             	r0 = [r0+0xc] 			  ## tasks.c:2406:39
  10149e:    07 63             	r7 = [r0+0xc] 			  ## tasks.c:2406:39
  1014a0:    70 65             	r0 = [r7+0x14] 			  ## tasks.c:2407:34
  1014a2:    80 e9 20 50       	if (r5 < r0) goto 0x40 <xTaskIncrementTick+0xE0 : 1014e6 >
  1014a6:    7c 94             	r4 = r7 + 0x14			  ## tasks.c:2407:34
  1014a8:    40 16             	r0 = r4			  ## tasks.c:2422:28
  1014aa:    bf ea 5a fc       	call -0x74c <uxListRemove : 100d62 >			  ## tasks.c:2422:28
  1014ae:    70 6e             	r0 = [r7+0x38] 			  ## tasks.c:2426:25
  1014b0:    b0 e8 00 40       	if (r0 != 0x0) {			  ## tasks.c:2426:25
  1014b4:    00 e1 28 70       		r0 = r7 + 0x28			  ## tasks.c:2426:25
  1014b8:    bf ea 53 fc       		call -0x75a
                               	} <uxListRemove : 100d62 >			  ## tasks.c:2427:32
  1014bc:    70 6f             	r0 = [r7+0x3c] 			  ## tasks.c:2434:21
  1014be:    66 e8 00 c0       	[r12+0x0] |= 1 << r0			  ## tasks.c:2434:21
  1014c2:    e0 e1 14 00       	r0 = r0 * 0x14			  ## tasks.c:2434:21
  1014c6:    80 18             	r0 += r8			  ## tasks.c:2434:21
  1014c8:    41 16             	r1 = r4			  ## tasks.c:2434:21
  1014ca:    bf ea 5f fc       	call -0x742 <vListInsertEnd : 100d8c >			  ## tasks.c:2434:21
  1014ce:    70 6f             	r0 = [r7+0x3c] 			  ## tasks.c:2446:37
  1014d0:    d0 ec 90 10       	r1 = [r9+0x0]			  ## tasks.c:2446:51
  1014d4:    11 6f             	r1 = [r1+0x3c] 			  ## tasks.c:2446:66
  1014d6:    10 e9 00 01       	if (r0 >= r1) {
  1014da:    4b e0 01 00       		r11 = 0x1
                               	}			  ## tasks.c:2434:21
  1014de:    60 60             	r0 = [r6+0x0] 			  ## tasks.c:2393:21
  1014e0:    00 60             	r0 = [r0+0x0] 			  ## tasks.c:2393:21
  1014e2:    e0 5b             	if (r0 != 0) goto -0x4a <xTaskIncrementTick+0x94 : 10149a >			  ## tasks.c:2393:21
  1014e4:    10 3f             	r0 = -0x1
  1014e6:    d0 ec a1 00       	[r10+0x0] = r0
  1014ea:    bf ea e6 fb       	call -0x834 <local_irq_enable : 100cba >			  ## tasks.c:2463:13
  1014ee:    bf ea dd fb       	call -0x846 <local_irq_disable : 100cac >			  ## tasks.c:2471:17
  1014f2:    20 00             	csync			  ## tasks.c:2471:17
  1014f4:    d0 ec 90 20       	r2 = [r9+0x0]			  ## tasks.c:2471:17
  1014f8:    bf ea df fb       	call -0x842 <local_irq_enable : 100cba >			  ## tasks.c:2471:17
  1014fc:    20 6f             	r0 = [r2+0x3c] 			  ## tasks.c:2471:17
  1014fe:    e0 e1 14 00       	r0 = r0 * 0x14			  ## tasks.c:2471:17
  101502:    d8 ec 02 18       	r1 = [r0+r8]			  ## tasks.c:2471:17
  101506:    40 21             	r0 = 0x1			  ## tasks.c:2471:91
  101508:    b1 ec 01 00       	if (r1 <= 0x1) {			  ## tasks.c:2471:91
  10150c:    b0 16             		r0 = r11
                               	}			  ## tasks.c:2471:17
  10150e:    c1 ff b4 bc 02 00 	r1 = 0x2bcb4 <xYieldPending : 2bcb4 >			  ## tasks.c:2503:13
  101514:    11 60             	r1 = [r1+0x0] 			  ## tasks.c:2503:13
  101516:    b1 e8 00 00       	if (r1 != 0x0) {			  ## tasks.c:2503:13
  10151a:    40 21             		r0 = 0x1
                               	}			  ## tasks.c:2503:13
  10151c:    5c 04             	{pc, r12-r4} = [sp++]			  ## tasks.c:2511:5


xTaskResumeAll:
  10151e:    7a 04             	[--sp] = {rets, r10-r4}			  ## tasks.c:1924:0
  101520:    c4 ff a8 bc 02 00 	r4 = 0x2bca8 <uxSchedulerSuspended : 2bca8 >			  ## tasks.c:1924:0
  101526:    40 60             	r0 = [r4+0x0] 			  ## tasks.c:1930:5
  101528:    80 4d             	if (r0 != 0) goto 0x1a <xTaskResumeAll+0x26 : 101544 >			  ## tasks.c:1930:5
  10152a:    c0 ff e8 bc 02 00 	r0 = 0x2bce8 <mask_log_e : 2bce8 >			  ## FreeRTOSConfig.h:181:5
  101530:    42 f0 8a 07       	r2 = 0x78a  #			  ## FreeRTOSConfig.h:181:5
  101534:    03 60             		 r3 = [r0+0x0] 			  ## FreeRTOSConfig.h:181:5
  101536:    c0 ff 69 2c 10 00 	r0 = 0x102c69 <vTickISR+0x17C : 102c68 >			  ## FreeRTOSConfig.h:181:5
  10153c:    c1 ff 89 2c 10 00 	r1 = 0x102c89 <vTickISR+0x19C : 102c88 >			  ## FreeRTOSConfig.h:181:5
  101542:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  101544:    c0 eb ff 4f       	[r4+0x0] += -0x1			  ## tasks.c:1940:9
  101548:    40 60             	r0 = [r4+0x0] 			  ## tasks.c:1942:13
  10154a:    42 20             	r2 = 0x0			  ## tasks.c:1942:13
  10154c:    00 44             	if (r0 == 0) goto 0x8 <xTaskResumeAll+0x38 : 101556 >			  ## tasks.c:1942:13
  10154e:    bf ea b4 fb       	call -0x898 <local_irq_enable : 100cba >			  ## tasks.c:2015:5
  101552:    20 16             	r0 = r2			  ## tasks.c:2017:5
  101554:    5a 04             	{pc, r10-r4} = [sp++]			  ## tasks.c:2017:5
  101556:    c0 ff 90 bc 02 00 	r0 = 0x2bc90 <uxCurrentNumberOfTasks : 2bc90 >			  ## tasks.c:1943:17
  10155c:    00 60             	r0 = [r0+0x0] 			  ## tasks.c:1943:17
  10155e:    70 57             	if (r0 == 0) goto -0x12 <xTaskResumeAll+0x30 : 10154e >			  ## tasks.c:1943:17
  101560:    47 20             	r7 = 0x0
  101562:    c6 ff bc bd 02 00 	r6 = 0x2bdbc <xPendingReadyList : 2bdbc >
  101568:    c8 ff b4 bc 02 00 	r8 = 0x2bcb4 <xYieldPending : 2bcb4 >
  10156e:    c9 ff a0 bc 02 00 	r9 = 0x2bca0 <uxTopReadyPriority : 2bca0 >
  101574:    ca ff f4 bc 02 00 	r10 = 0x2bcf4 <pxReadyTasksLists : 2bcf4 >
  10157a:    c5 ff 94 bc 02 00 	r5 = 0x2bc94 <CurrentTCB : 2bc94 >
  101580:    04 9a             	goto 0x34 <xTaskResumeAll+0x98 : 1015b6 >
  101582:    60 63             	r0 = [r6+0xc] 			  ## tasks.c:1947:39
  101584:    07 63             	r7 = [r0+0xc] 			  ## tasks.c:1947:39
  101586:    00 e1 28 70       	r0 = r7 + 0x28			  ## tasks.c:1948:50
  10158a:    bf ea ea fb       	call -0x82c <uxListRemove : 100d62 >			  ## tasks.c:1948:28
  10158e:    7c 94             	r4 = r7 + 0x14			  ## tasks.c:1949:50
  101590:    40 16             	r0 = r4			  ## tasks.c:1949:28
  101592:    bf ea e6 fb       	call -0x834 <uxListRemove : 100d62 >			  ## tasks.c:1949:28
  101596:    70 6f             	r0 = [r7+0x3c] 			  ## tasks.c:1950:21
  101598:    66 e8 00 90       	[r9+0x0] |= 1 << r0			  ## tasks.c:1950:21
  10159c:    e0 e1 14 00       	r0 = r0 * 0x14			  ## tasks.c:1950:21
  1015a0:    a0 18             	r0 += r10			  ## tasks.c:1950:21
  1015a2:    41 16             	r1 = r4			  ## tasks.c:1950:21
  1015a4:    bf ea f2 fb       	call -0x81c <vListInsertEnd : 100d8c >			  ## tasks.c:1950:21
  1015a8:    70 6f             	r0 = [r7+0x3c] 			  ## tasks.c:1955:33
  1015aa:    51 60             	r1 = [r5+0x0] 			  ## tasks.c:1955:47
  1015ac:    11 6f             	r1 = [r1+0x3c] 			  ## tasks.c:1955:62
  1015ae:    10 e9 00 01       	if (r0 >= r1) {			  ## tasks.c:1955:62
  1015b2:    40 ea 01 80       		[r8+0x0] = 0x1
                               	}			  ## tasks.c:1960:39
  1015b6:    60 60             	r0 = [r6+0x0] 			  ## tasks.c:1946:24
  1015b8:    f0 44             	if (r0 != 0) goto -0x38 <xTaskResumeAll+0x64 : 101582 >			  ## tasks.c:1946:24
  1015ba:    b7 e8 00 00       	if (r7 != 0x0) {
  1015be:    bf ea f0 fb       		call -0x820
                               	} <prvResetNextTaskUnblockTime : 100da2 >			  ## tasks.c:1973:21
  1015c2:    c4 ff b8 bc 02 00 	r4 = 0x2bcb8 <uxPendedTicks : 2bcb8 >			  ## tasks.c:1973:21
  1015c8:    45 60             	r5 = [r4+0x0] 			  ## tasks.c:1981:50
  1015ca:    05 4a             	if (r5 == 0) goto 0x14 <xTaskResumeAll+0xC2 : 1015e0 >
  1015cc:    bf ea 1b ff       	call -0x1ca <xTaskIncrementTick : 101406 >			  ## tasks.c:1985:33
  1015d0:    b0 e8 00 00       	if (r0 != 0x0) {			  ## tasks.c:1985:33
  1015d4:    40 ea 01 80       		[r8+0x0] = 0x1
                               	}			  ## tasks.c:1986:47
  1015d8:    fd 3f             	r5 += -0x1			  ## tasks.c:1990:29
  1015da:    f5 58             	if (r5 != 0) goto -0x10 <xTaskResumeAll+0xAE : 1015cc >
  1015dc:    40 ea 00 40       	[r4+0x0] = 0x0			  ## tasks.c:1993:39
  1015e0:    d0 ec 80 00       	r0 = [r8+0x0]			  ## tasks.c:1999:21
  1015e4:    00 44             	if (r0 == 0) goto 0x8 <xTaskResumeAll+0xD0 : 1015ee >			  ## tasks.c:1999:21
  1015e6:    bf ea 7d fc       	call -0x706 <vPortYield : 100ee4 >			  ## tasks.c:2005:21
  1015ea:    42 21             	r2 = 0x1			  ## tasks.c:2005:21
  1015ec:    d7 90             	goto -0xa0 <xTaskResumeAll+0x30 : 10154e >			  ## tasks.c:2005:21
  1015ee:    42 20             	r2 = 0x0
  1015f0:    d7 8e             	goto -0xa4 <xTaskResumeAll+0x30 : 10154e >


xQueueGenericSend:
  1015f2:    7d 04             	[--sp] = {rets, r13-r4}			  ## queue.c:699:0
  1015f4:    e2 9d             	sp += -0xc			  ## queue.c:699:0
  1015f6:    27 16             	r7 = r2			  ## queue.c:699:0
  1015f8:    18 16             	r8 = r1			  ## queue.c:699:0
  1015fa:    04 16             	r4 = r0			  ## queue.c:699:0
  1015fc:    35 d6             	r5 = r3  #			  ## queue.c:699:0
  1015fe:    87 22             		 [sp+8] = r7			  ## queue.c:699:0
  101600:    cb ff e8 bc 02 00 	r11 = 0x2bce8 <mask_log_e : 2bce8 >			  ## queue.c:699:0
  101606:    c9 ff 1f 2b 10 00 	r9 = 0x102b1f <vTickISR+0x32 : 102b1e >			  ## queue.c:699:0
  10160c:    ca ff 40 2b 10 00 	r10 = 0x102b40 <vTickISR+0x54 : 102b40 >			  ## queue.c:699:0
  101612:    84 47             	if (r4 != 0) goto 0xe <xQueueGenericSend+0x30 : 101622 >			  ## queue.c:699:0
  101614:    d0 ec b0 30       	r3 = [r11+0x0]			  ## FreeRTOSConfig.h:181:5
  101618:    42 e0 c0 02       	r2 = 0x2c0			  ## FreeRTOSConfig.h:181:5
  10161c:    90 16             	r0 = r9			  ## FreeRTOSConfig.h:181:5
  10161e:    a1 16             	r1 = r10			  ## FreeRTOSConfig.h:181:5
  101620:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  101622:    06 e1 40 40       	r6 = r4 + 0x40
  101626:    88 f8 09 00       	if (r8 != 0x0) goto 0x12 <xQueueGenericSend+0x4A : 10163c >
  10162a:    60 60             	r0 = [r6+0x0] 			  ## queue.c:705:5
  10162c:    00 47             	if (r0 == 0) goto 0xe <xQueueGenericSend+0x4A : 10163c >			  ## queue.c:705:5
  10162e:    d0 ec b0 30       	r3 = [r11+0x0]			  ## FreeRTOSConfig.h:181:5
  101632:    42 e0 c1 02       	r2 = 0x2c1			  ## FreeRTOSConfig.h:181:5
  101636:    90 16             	r0 = r9			  ## FreeRTOSConfig.h:181:5
  101638:    a1 16             	r1 = r10			  ## FreeRTOSConfig.h:181:5
  10163a:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  10163c:    85 f8 0a 04       	if (r5 != 0x2) goto 0x14 <xQueueGenericSend+0x62 : 101654 >
  101640:    40 6f             	r0 = [r4+0x3c] 			  ## queue.c:706:5
  101642:    00 f8 07 02       	if (r0 == 0x1) goto 0xe <xQueueGenericSend+0x62 : 101654 >			  ## queue.c:706:5
  101646:    d0 ec b0 30       	r3 = [r11+0x0]			  ## FreeRTOSConfig.h:181:5
  10164a:    42 e0 c2 02       	r2 = 0x2c2			  ## FreeRTOSConfig.h:181:5
  10164e:    90 16             	r0 = r9			  ## FreeRTOSConfig.h:181:5
  101650:    a1 16             	r1 = r10			  ## FreeRTOSConfig.h:181:5
  101652:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  101654:    c0 ff 98 bc 02 00 	r0 = 0x2bc98 <xSchedulerRunning : 2bc98 >			  ## tasks.c:3522:9
  10165a:    00 60             	r0 = [r0+0x0] 			  ## tasks.c:3522:9
  10165c:    00 4d             	if (r0 == 0) goto 0x1a <xQueueGenericSend+0x86 : 101678 >			  ## tasks.c:3522:9
  10165e:    c0 ff a8 bc 02 00 	r0 = 0x2bca8 <uxSchedulerSuspended : 2bca8 >			  ## tasks.c:3525:13
  101664:    00 60             	r0 = [r0+0x0] 			  ## tasks.c:3525:13
  101666:    00 48             	if (r0 == 0) goto 0x10 <xQueueGenericSend+0x86 : 101678 >			  ## tasks.c:3525:13
  101668:    07 47             	if (r7 == 0) goto 0xe <xQueueGenericSend+0x86 : 101678 >
  10166a:    d0 ec b0 30       	r3 = [r11+0x0]			  ## FreeRTOSConfig.h:181:5
  10166e:    42 e0 c5 02       	r2 = 0x2c5			  ## FreeRTOSConfig.h:181:5
  101672:    90 16             	r0 = r9			  ## FreeRTOSConfig.h:181:5
  101674:    a1 16             	r1 = r10			  ## FreeRTOSConfig.h:181:5
  101676:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  101678:    f8 e8 00 90       	r9 = sp + 0
  10167c:    0d e1 10 40       	r13 = r4 + 0x10
  101680:    c2 14             	r10 = 0
  101682:    cb ff bc bc 02 00 	r11 = 0x2bcbc <xNumOfOverflows : 2bcbc >
  101688:    cc ff b0 bc 02 00 	r12 = 0x2bcb0 <xTickCount : 2bcb0 >
  10168e:    47 20             	r7 = 0x0
  101690:    14 9c             	goto 0x78 <xQueueGenericSend+0x118 : 10170a >
  101692:    87 48             	if (r7 != 0) goto 0x10 <xQueueGenericSend+0xB2 : 1016a4 >
  101694:    d0 ec b0 00       	r0 = [r11+0x0]			  ## tasks.c:2896:33
  101698:    80 20             	[sp] = r0			  ## tasks.c:2896:31
  10169a:    d0 ec c0 00       	r0 = [r12+0x0]			  ## tasks.c:2897:34
  10169e:    d0 ec 95 00       	[r9+0x4] = r0			  ## tasks.c:2897:32
  1016a2:    47 21             	r7 = 0x1
  1016a4:    bf ea 09 fb       	call -0x9ee <local_irq_enable : 100cba >			  ## queue.c:812:9
  1016a8:    bf ea 5c fd       	call -0x548 <vTaskSuspendAll : 101164 >			  ## queue.c:817:9
  1016ac:    bf ea fe fa       	call -0xa04 <local_irq_disable : 100cac >			  ## queue.c:818:9
  1016b0:    20 00             	csync			  ## queue.c:818:9
  1016b2:    68 44             	r0 = b[r6+0x4] (u)			  ## queue.c:818:9
  1016b4:    30 e8 ff 00       	if (r0 == 0xff) {			  ## queue.c:818:9
  1016b8:    52 ee 64 a0       		b[r6+0x4] = r10
                               	}			  ## queue.c:818:9
  1016bc:    68 45             	r0 = b[r6+0x5] (u)			  ## queue.c:818:9
  1016be:    30 e8 ff 00       	if (r0 == 0xff) {			  ## queue.c:818:9
  1016c2:    52 ee 65 a0       		b[r6+0x5] = r10
                               	}			  ## queue.c:818:9
  1016c6:    bf ea f8 fa       	call -0xa10 <local_irq_enable : 100cba >			  ## queue.c:818:9
  1016ca:    88 80             	r0 = sp + 0			  ## queue.c:818:9
  1016cc:    89 88             	r1 = sp + 8
  1016ce:    bf ea 6e fd       	call -0x524 <xTaskCheckForTimeOut : 1011ae >			  ## queue.c:821:13
  1016d2:    90 49             	if (r0 != 0) goto 0x52 <xQueueGenericSend+0x134 : 101726 >			  ## queue.c:821:13
  1016d4:    bf ea ea fa       	call -0xa2c <local_irq_disable : 100cac >			  ## queue.c:1731:5
  1016d8:    20 00             	csync			  ## queue.c:1731:5
  1016da:    50 ec 48 23       	r3_r2 = d[r4+0x38]			  ## queue.c:1733:22
  1016de:    bf ea ec fa       	call -0xa28 <local_irq_enable : 100cba >			  ## queue.c:1739:5
  1016e2:    83 e8 0d 20       	if (r2 != r3) goto 0x1a <xQueueGenericSend+0x10E : 101700 >			  ## queue.c:822:17
  1016e6:    d0 d6             	r0 = r13  #			  ## queue.c:824:17
  1016e8:    01 22             		 r1 = [sp+8]			  ## queue.c:824:72
  1016ea:    bf ea 34 fe       	call -0x398 <vTaskPlaceOnEventList : 101356 >			  ## queue.c:824:17
  1016ee:    40 16             	r0 = r4			  ## queue.c:831:17
  1016f0:    bf ea 54 fe       	call -0x358 <prvUnlockQueue : 10139c >			  ## queue.c:831:17
  1016f4:    bf ea 13 ff       	call -0x1da <xTaskResumeAll : 10151e >			  ## queue.c:838:21
  1016f8:    80 48             	if (r0 != 0) goto 0x10 <xQueueGenericSend+0x118 : 10170a >			  ## queue.c:838:21
  1016fa:    bf ea f3 fb       	call -0x81a <vPortYield : 100ee4 >			  ## queue.c:839:21
  1016fe:    04 85             	goto 0xa <xQueueGenericSend+0x118 : 10170a >			  ## queue.c:839:21
  101700:    40 16             	r0 = r4			  ## queue.c:843:17
  101702:    bf ea 4b fe       	call -0x36a <prvUnlockQueue : 10139c >			  ## queue.c:843:17
  101706:    bf ea 0a ff       	call -0x1ec <xTaskResumeAll : 10151e >			  ## queue.c:844:24
  10170a:    bf ea cf fa       	call -0xa62 <local_irq_disable : 100cac >			  ## queue.c:718:9
  10170e:    20 00             	csync			  ## queue.c:718:9
  101710:    40 6e             	r0 = [r4+0x38] 			  ## queue.c:724:27
  101712:    05 f8 0f 04       	if (r5 == 0x2) goto 0x1e <xQueueGenericSend+0x142 : 101734 >			  ## queue.c:724:27
  101716:    41 6f             	r1 = [r4+0x3c] 			  ## queue.c:724:56
  101718:    81 e9 0c 00       	if (r0 < r1) goto 0x18 <xQueueGenericSend+0x142 : 101734 >			  ## queue.c:724:56
  10171c:    00 22             	r0 = [sp+8]			  ## queue.c:792:21
  10171e:    d0 59             	if (r0 != 0) goto -0x8e <xQueueGenericSend+0xA0 : 101692 >			  ## queue.c:792:21
  101720:    bf ea cb fa       	call -0xa6a <local_irq_enable : 100cba >			  ## queue.c:795:21
  101724:    04 85             	goto 0xa <xQueueGenericSend+0x13E : 101730 >
  101726:    40 16             	r0 = r4			  ## queue.c:848:13
  101728:    bf ea 38 fe       	call -0x390 <prvUnlockQueue : 10139c >			  ## queue.c:848:13
  10172c:    bf ea f7 fe       	call -0x212 <xTaskResumeAll : 10151e >			  ## queue.c:849:20
  101730:    40 20             	r0 = 0x0
  101732:    04 93             	goto 0x26 <xQueueGenericSend+0x168 : 10175a >
  101734:    40 16             	r0 = r4			  ## queue.c:726:34
  101736:    81 16             	r1 = r8			  ## queue.c:726:34
  101738:    52 16             	r2 = r5			  ## queue.c:726:34
  10173a:    bf ea 81 fc       	call -0x6fe <prvCopyDataToQueue : 101040 >			  ## queue.c:726:34
  10173e:    d0 ec 46 12       	r1 = [++r4=0x24]			  ## queue.c:767:25
  101742:    b1 e8 00 40       	if (r1 != 0x0) {
  101746:    40 16             		r0 = r4			  ## queue.c:768:29
  101748:    bf ea 3c fb       		call -0x988
                               	} <xTaskRemoveFromEventList : 100dc4 >			  ## queue.c:768:29
  10174c:    b0 e8 00 00       	if (r0 != 0x0) {			  ## queue.c:768:29
  101750:    bf ea c8 fb       		call -0x870
                               	} <vPortYield : 100ee4 >			  ## queue.c:768:29
  101754:    bf ea b1 fa       	call -0xa9e <local_irq_enable : 100cba >			  ## queue.c:789:17
  101758:    40 21             	r0 = 0x1			  ## queue.c:789:17
  10175a:    02 83             	sp += 0xc
  10175c:    5d 04             	{pc, r13-r4} = [sp++]			  ## queue.c:855:1


prvCopyDataFromQueue:
  10175e:    74 04             	[--sp] = {rets, r4}			  ## queue.c:1587:0
  101760:    d0 ec 00 24       	r2 = [r0+0x40]			  ## queue.c:1588:18
  101764:    02 4c             	if (r2 == 0) goto 0x18 <prvCopyDataFromQueue+0x20 : 10177e >			  ## queue.c:1588:18
  101766:    03 63             	r3 = [r0+0xc] 			  ## queue.c:1589:31
  101768:    23 18             	r3 += r2			  ## queue.c:1589:31
  10176a:    83 63             	[r0+0xc] = r3			  ## queue.c:1589:31
  10176c:    04 61             	r4 = [r0+0x4] 			  ## queue.c:1590:47
  10176e:    13 e9 00 44       	if (r3 >= r4) {			  ## queue.c:1590:47
  101772:    03 60             		r3 = [r0+0x0] 			  ## queue.c:1591:46
  101774:    83 63             		[r0+0xc] = r3
                               	}			  ## queue.c:1591:35
  101776:    10 16             	r0 = r1			  ## queue.c:1595:16
  101778:    31 16             	r1 = r3			  ## queue.c:1595:16
  10177a:    bf ea 0d f6       	call -0x13e6 <memmove : 100398 >			  ## queue.c:1595:16
  10177e:    54 04             	{pc, r4} = [sp++]			  ## queue.c:1597:1


prvIsQueueEmpty:
  101780:    10 04             	[--sp] = rets			  ## queue.c:1695:0
  101782:    01 16             	r1 = r0			  ## queue.c:1695:0
  101784:    bf ea 92 fa       	call -0xadc <local_irq_disable : 100cac >			  ## queue.c:1698:5
  101788:    20 00             	csync			  ## queue.c:1698:5
  10178a:    10 6e             	r0 = [r1+0x38] 			  ## queue.c:1700:22
  10178c:    42 21             	r2 = 0x1			  ## queue.c:1700:40
  10178e:    b0 e8 00 00       	if (r0 != 0x0) {			  ## queue.c:1700:40
  101792:    42 20             		r2 = 0x0
                               	}			  ## queue.c:1700:40
  101794:    bf ea 91 fa       	call -0xade <local_irq_enable : 100cba >			  ## queue.c:1706:5
  101798:    20 16             	r0 = r2			  ## queue.c:1708:5
  10179a:    00 04             	pc = [sp++]			  ## queue.c:1708:5


xQueueGenericReceive:
  10179c:    7f 04             	[--sp] = {rets, r15-r4}			  ## queue.c:1125:0
  10179e:    e2 9d             	sp += -0xc			  ## queue.c:1125:0
  1017a0:    3b d6             	r11 = r3  #			  ## queue.c:1125:0
  1017a2:    82 22             		 [sp+8] = r2			  ## queue.c:1125:0
  1017a4:    1a 16             	r10 = r1			  ## queue.c:1125:0
  1017a6:    04 16             	r4 = r0			  ## queue.c:1125:0
  1017a8:    c5 ff e8 bc 02 00 	r5 = 0x2bce8 <mask_log_e : 2bce8 >			  ## queue.c:1125:0
  1017ae:    c9 ff 1f 2b 10 00 	r9 = 0x102b1f <vTickISR+0x32 : 102b1e >			  ## queue.c:1125:0
  1017b4:    c7 ff 84 2b 10 00 	r7 = 0x102b84 <vTickISR+0x98 : 102b84 >			  ## queue.c:1125:0
  1017ba:    84 46             	if (r4 != 0) goto 0xc <xQueueGenericReceive+0x2C : 1017c8 >			  ## queue.c:1125:0
  1017bc:    42 f0 6b 04       	r2 = 0x46b  #			  ## FreeRTOSConfig.h:181:5
  1017c0:    53 60             		 r3 = [r5+0x0] 			  ## FreeRTOSConfig.h:181:5
  1017c2:    90 16             	r0 = r9			  ## FreeRTOSConfig.h:181:5
  1017c4:    71 16             	r1 = r7			  ## FreeRTOSConfig.h:181:5
  1017c6:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  1017c8:    06 e1 40 40       	r6 = r4 + 0x40
  1017cc:    8a f8 08 00       	if (r10 != 0x0) goto 0x10 <xQueueGenericReceive+0x44 : 1017e0 >
  1017d0:    60 60             	r0 = [r6+0x0] 			  ## queue.c:1132:5
  1017d2:    00 46             	if (r0 == 0) goto 0xc <xQueueGenericReceive+0x44 : 1017e0 >			  ## queue.c:1132:5
  1017d4:    42 f0 6c 04       	r2 = 0x46c  #			  ## FreeRTOSConfig.h:181:5
  1017d8:    53 60             		 r3 = [r5+0x0] 			  ## FreeRTOSConfig.h:181:5
  1017da:    90 16             	r0 = r9			  ## FreeRTOSConfig.h:181:5
  1017dc:    71 16             	r1 = r7			  ## FreeRTOSConfig.h:181:5
  1017de:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  1017e0:    8d 80             	r5 = sp + 0
  1017e2:    0c e1 24 40       	r12 = r4 + 0x24
  1017e6:    c0 14             	r8 = 0
  1017e8:    cd ff bc bc 02 00 	r13 = 0x2bcbc <xNumOfOverflows : 2bcbc >
  1017ee:    ce ff b0 bc 02 00 	r14 = 0x2bcb0 <xTickCount : 2bcb0 >
  1017f4:    c7 14             	r15 = 0
  1017f6:    54 97             	goto 0x16e <xQueueGenericReceive+0x1CA : 101966 >
  1017f8:    00 22             	r0 = [sp+8]			  ## queue.c:1210:21
  1017fa:    00 f8 c6 00       	if (r0 == 0x0) goto 0x18c <xQueueGenericReceive+0x1EE : 10198a >
  1017fe:    8f f8 08 00       	if (r15 != 0x0) goto 0x10 <xQueueGenericReceive+0x76 : 101812 >
  101802:    d0 ec d0 00       	r0 = [r13+0x0]			  ## tasks.c:2896:33
  101806:    80 20             	[sp] = r0			  ## tasks.c:2896:31
  101808:    d0 ec e0 00       	r0 = [r14+0x0]			  ## tasks.c:2897:34
  10180c:    4f f0 01 00       	r15 = 0x1  #			  ## tasks.c:2897:34
  101810:    d0 61             		 [r5+0x4] = r0			  ## tasks.c:2897:32
  101812:    bf ea 52 fa       	call -0xb5c <local_irq_enable : 100cba >			  ## queue.c:1227:9
  101816:    bf ea a5 fc       	call -0x6b6 <vTaskSuspendAll : 101164 >			  ## queue.c:1232:9
  10181a:    bf ea 47 fa       	call -0xb72 <local_irq_disable : 100cac >			  ## queue.c:1233:9
  10181e:    20 00             	csync			  ## queue.c:1233:9
  101820:    68 44             	r0 = b[r6+0x4] (u)			  ## queue.c:1233:9
  101822:    30 e8 ff 00       	if (r0 == 0xff) {			  ## queue.c:1233:9
  101826:    52 ee 64 80       		b[r6+0x4] = r8
                               	}			  ## queue.c:1233:9
  10182a:    68 45             	r0 = b[r6+0x5] (u)			  ## queue.c:1233:9
  10182c:    30 e8 ff 00       	if (r0 == 0xff) {			  ## queue.c:1233:9
  101830:    52 ee 65 80       		b[r6+0x5] = r8
                               	}			  ## queue.c:1233:9
  101834:    bf ea 41 fa       	call -0xb7e <local_irq_enable : 100cba >			  ## queue.c:1233:9
  101838:    88 80             	r0 = sp + 0			  ## queue.c:1233:9
  10183a:    89 88             	r1 = sp + 8
  10183c:    bf ea b7 fc       	call -0x692 <xTaskCheckForTimeOut : 1011ae >			  ## queue.c:1236:13
  101840:    00 4a             	if (r0 == 0) goto 0x14 <xQueueGenericReceive+0xBA : 101856 >
  101842:    40 16             	r0 = r4			  ## queue.c:1267:13
  101844:    bf ea aa fd       	call -0x4ac <prvUnlockQueue : 10139c >			  ## queue.c:1267:13
  101848:    bf ea 69 fe       	call -0x32e <xTaskResumeAll : 10151e >			  ## queue.c:1268:20
  10184c:    40 16             	r0 = r4			  ## queue.c:1270:17
  10184e:    41 98             	call -0xd0 <prvIsQueueEmpty : 101780 >			  ## queue.c:1270:17
  101850:    00 f8 89 00       	if (r0 == 0x0) goto 0x112 <xQueueGenericReceive+0x1CA : 101966 >			  ## queue.c:1270:17
  101854:    44 9c             	goto 0x138 <xQueueGenericReceive+0x1F2 : 10198e >			  ## queue.c:1270:17
  101856:    40 16             	r0 = r4			  ## queue.c:1237:17
  101858:    41 93             	call -0xda <prvIsQueueEmpty : 101780 >			  ## queue.c:1237:17
  10185a:    10 5f             	if (r0 == 0) goto 0x7e <xQueueGenericReceive+0x13E : 1018da >			  ## queue.c:1237:17
  10185c:    40 60             	r0 = [r4+0x0] 			  ## queue.c:1242:34
  10185e:    b0 57             	if (r0 != 0) goto 0xee <xQueueGenericReceive+0x1B2 : 10194e >			  ## queue.c:1242:34
  101860:    d0 ec 44 90       	r9 = [r4+0x4]			  ## queue.c:1245:68
  101864:    bf ea 22 fa       	call -0xbbc <local_irq_disable : 100cac >			  ## tasks.c:3542:5
  101868:    20 00             	csync			  ## tasks.c:3542:5
  10186a:    09 f8 6e 00       	if (r9 == 0x0) goto 0xdc <xQueueGenericReceive+0x1AE : 10194a >			  ## tasks.c:3542:5
  10186e:    d0 ec 9c 23       	r2 = [r9+0x3c]			  ## tasks.c:3551:20
  101872:    bf ea 1b fa       	call -0xbca <local_irq_disable : 100cac >			  ## tasks.c:3551:33
  101876:    20 00             	csync			  ## tasks.c:3551:33
  101878:    c0 ff 94 bc 02 00 	r0 = 0x2bc94 <CurrentTCB : 2bc94 >			  ## tasks.c:3551:33
  10187e:    03 60             	r3 = [r0+0x0] 			  ## tasks.c:3551:33
  101880:    bf ea 1b fa       	call -0xbca <local_irq_enable : 100cba >			  ## tasks.c:3551:33
  101884:    30 6f             	r0 = [r3+0x3c] 			  ## tasks.c:3551:47
  101886:    00 e9 60 20       	if (r2 >= r0) goto 0xc0 <xQueueGenericReceive+0x1AE : 10194a >			  ## tasks.c:3551:47
  10188a:    d0 ec 98 02       	r0 = [r9+0x28]			  ## tasks.c:3555:18
  10188e:    c3 ff 94 bc 02 00 	r3 = 0x2bc94 <CurrentTCB : 2bc94 >			  ## tasks.c:3555:18
  101894:    80 fd 0b 00       	ifs (r0 < 0x0) goto 0x16 <xQueueGenericReceive+0x112 : 1018ae >			  ## tasks.c:3555:18
  101898:    bf ea 08 fa       	call -0xbf0 <local_irq_disable : 100cac >			  ## tasks.c:3556:17
  10189c:    20 00             	csync			  ## tasks.c:3556:17
  10189e:    32 60             	r2 = [r3+0x0] 			  ## tasks.c:3556:17
  1018a0:    bf ea 0b fa       	call -0xbea <local_irq_enable : 100cba >			  ## tasks.c:3556:17
  1018a4:    20 6f             	r0 = [r2+0x3c] 			  ## tasks.c:3556:17
  1018a6:    a0 e0 08 00       	r0 = 0x8 - r0			  ## tasks.c:3556:17
  1018aa:    d0 ec 99 02       	[r9+0x28] = r0			  ## tasks.c:3556:17
  1018ae:    d0 ec 9c 03       	r0 = [r9+0x3c]			  ## tasks.c:3563:17
  1018b2:    d0 ec 94 12       	r1 = [r9+0x24]			  ## tasks.c:3563:17
  1018b6:    e0 e1 14 00       	r0 = r0 * 0x14			  ## tasks.c:3563:17
  1018ba:    c2 ff f4 bc 02 00 	r2 = 0x2bcf4 <pxReadyTasksLists : 2bcf4 >			  ## tasks.c:3563:17
  1018c0:    20 18             	r0 += r2			  ## tasks.c:3563:17
  1018c2:    00 e8 10 10       	if (r1 == r0) goto 0x20 <xQueueGenericReceive+0x14A : 1018e6 >			  ## tasks.c:3563:17
  1018c6:    bf ea f1 f9       	call -0xc1e <local_irq_disable : 100cac >			  ## tasks.c:3575:37
  1018ca:    20 00             	csync			  ## tasks.c:3575:37
  1018cc:    32 60             	r2 = [r3+0x0] 			  ## tasks.c:3575:37
  1018ce:    bf ea f4 f9       	call -0xc18 <local_irq_enable : 100cba >			  ## tasks.c:3575:37
  1018d2:    20 6f             	r0 = [r2+0x3c] 			  ## tasks.c:3575:51
  1018d4:    d0 ec 9d 03       	[r9+0x3c] = r0			  ## tasks.c:3575:35
  1018d8:    14 98             	goto 0x70 <xQueueGenericReceive+0x1AE : 10194a >			  ## tasks.c:3575:35
  1018da:    40 16             	r0 = r4			  ## queue.c:1263:17
  1018dc:    bf ea 5e fd       	call -0x544 <prvUnlockQueue : 10139c >			  ## queue.c:1263:17
  1018e0:    bf ea 1d fe       	call -0x3c6 <xTaskResumeAll : 10151e >			  ## queue.c:1264:24
  1018e4:    24 80             	goto 0x80 <xQueueGenericReceive+0x1CA : 101966 >			  ## queue.c:1264:24
  1018e6:    b7 16             	r7 = r11
  1018e8:    0b e1 14 90       	r11 = r9 + 0x14			  ## tasks.c:3563:17
  1018ec:    b0 16             	r0 = r11			  ## tasks.c:3564:21
  1018ee:    bf ea 38 fa       	call -0xb90 <uxListRemove : 100d62 >			  ## tasks.c:3564:21
  1018f2:    80 50             	if (r0 != 0) goto 0x20 <xQueueGenericReceive+0x178 : 101914 >			  ## tasks.c:3564:21
  1018f4:    d0 ec 9c 03       	r0 = [r9+0x3c]			  ## tasks.c:3565:21
  1018f8:    e1 e1 14 00       	r1 = r0 * 0x14			  ## tasks.c:3565:21
  1018fc:    c2 ff f4 bc 02 00 	r2 = 0x2bcf4 <pxReadyTasksLists : 2bcf4 >			  ## tasks.c:3565:21
  101902:    d8 ec 12 12       	r1 = [r1+r2]			  ## tasks.c:3565:21
  101906:    31 e8 00 40       	if (r1 == 0x0) {			  ## tasks.c:3565:21
  10190a:    c1 ff a0 bc 02 00 		r1 = 0x2bca0 <uxTopReadyPriority : 2bca0 >			  ## tasks.c:3565:21
  101910:    66 e8 03 10       		[r1+0x0] &= ~(1 << r0)
                               	}			  ## tasks.c:3565:21
  101914:    bf ea ca f9       	call -0xc6c <local_irq_disable : 100cac >			  ## tasks.c:3571:37
  101918:    20 00             	csync			  ## tasks.c:3571:37
  10191a:    c0 ff 94 bc 02 00 	r0 = 0x2bc94 <CurrentTCB : 2bc94 >			  ## tasks.c:3571:37
  101920:    02 60             	r2 = [r0+0x0] 			  ## tasks.c:3571:37
  101922:    bf ea ca f9       	call -0xc6c <local_irq_enable : 100cba >			  ## tasks.c:3571:37
  101926:    20 6f             	r0 = [r2+0x3c] 			  ## tasks.c:3571:51
  101928:    d0 ec 9d 03       	[r9+0x3c] = r0			  ## tasks.c:3571:35
  10192c:    c1 ff a0 bc 02 00 	r1 = 0x2bca0 <uxTopReadyPriority : 2bca0 >			  ## tasks.c:3572:17
  101932:    66 e8 00 10       	[r1+0x0] |= 1 << r0			  ## tasks.c:3572:17
  101936:    e0 e1 14 00       	r0 = r0 * 0x14			  ## tasks.c:3572:17
  10193a:    c1 ff f4 bc 02 00 	r1 = 0x2bcf4 <pxReadyTasksLists : 2bcf4 >			  ## tasks.c:3572:17
  101940:    10 18             	r0 += r1			  ## tasks.c:3572:17
  101942:    b1 16             	r1 = r11			  ## tasks.c:3572:17
  101944:    bf ea 22 fa       	call -0xbbc <vListInsertEnd : 100d8c >			  ## tasks.c:3572:17
  101948:    7b 16             	r11 = r7
  10194a:    bf ea b6 f9       	call -0xc94 <local_irq_enable : 100cba >			  ## tasks.c:3585:5
  10194e:    c0 d6             	r0 = r12  #			  ## queue.c:1254:17
  101950:    01 22             		 r1 = [sp+8]			  ## queue.c:1254:75
  101952:    bf ea 00 fd       	call -0x600 <vTaskPlaceOnEventList : 101356 >			  ## queue.c:1254:17
  101956:    40 16             	r0 = r4			  ## queue.c:1255:17
  101958:    bf ea 20 fd       	call -0x5c0 <prvUnlockQueue : 10139c >			  ## queue.c:1255:17
  10195c:    bf ea df fd       	call -0x442 <xTaskResumeAll : 10151e >			  ## queue.c:1256:21
  101960:    80 42             	if (r0 != 0) goto 0x4 <xQueueGenericReceive+0x1CA : 101966 >			  ## queue.c:1256:21
  101962:    bf ea bf fa       	call -0xa82 <vPortYield : 100ee4 >			  ## queue.c:1257:21
  101966:    bf ea a1 f9       	call -0xcbe <local_irq_disable : 100cac >			  ## queue.c:1146:9
  10196a:    20 00             	csync			  ## queue.c:1146:9
  10196c:    47 6e             	r7 = [r4+0x38] 			  ## queue.c:1148:60
  10196e:    07 f8 43 01       	if (r7 == 0x0) goto -0x17a <xQueueGenericReceive+0x5C : 1017f8 >			  ## queue.c:1152:17
  101972:    40 d6             	r0 = r4  #			  ## queue.c:1157:17
  101974:    45 63             		 r5 = [r4+0xc] 			  ## queue.c:1155:53
  101976:    a1 16             	r1 = r10			  ## queue.c:1157:17
  101978:    bf ea f1 fe       	call -0x21e <prvCopyDataFromQueue : 10175e >			  ## queue.c:1157:17
  10197c:    0b f8 09 00       	if (r11 == 0x0) goto 0x12 <xQueueGenericReceive+0x1F6 : 101992 >			  ## queue.c:1157:17
  101980:    c5 63             	[r4+0xc] = r5			  ## queue.c:1191:43
  101982:    40 69             	r0 = [r4+0x24] 			  ## queue.c:1195:25
  101984:    10 4e             	if (r0 == 0) goto 0x5c <xQueueGenericReceive+0x246 : 1019e2 >			  ## queue.c:1195:25
  101986:    c0 16             	r0 = r12			  ## queue.c:1196:29
  101988:    14 86             	goto 0x4c <xQueueGenericReceive+0x23A : 1019d6 >			  ## queue.c:1196:29
  10198a:    bf ea 96 f9       	call -0xcd4 <local_irq_enable : 100cba >			  ## queue.c:1213:21
  10198e:    40 20             	r0 = 0x0
  101990:    14 8b             	goto 0x56 <xQueueGenericReceive+0x24C : 1019e8 >
  101992:    30 e1 ff 7f       	r0 = r7 + -0x1			  ## queue.c:1163:68
  101996:    c0 6e             	[r4+0x38] = r0			  ## queue.c:1163:48
  101998:    40 60             	r0 = [r4+0x0] 			  ## queue.c:1167:38
  10199a:    80 59             	if (r0 != 0) goto 0x32 <xQueueGenericReceive+0x232 : 1019ce >			  ## queue.c:1167:38
  10199c:    bf ea 86 f9       	call -0xcf4 <local_irq_disable : 100cac >			  ## tasks.c:3967:9
  1019a0:    20 00             	csync			  ## tasks.c:3967:9
  1019a2:    c3 ff 94 bc 02 00 	r3 = 0x2bc94 <CurrentTCB : 2bc94 >			  ## tasks.c:3967:9
  1019a8:    32 60             	r2 = [r3+0x0] 			  ## tasks.c:3967:9
  1019aa:    bf ea 86 f9       	call -0xcf4 <local_irq_enable : 100cba >			  ## tasks.c:3967:9
  1019ae:    02 48             	if (r2 == 0) goto 0x10 <xQueueGenericReceive+0x224 : 1019c0 >			  ## tasks.c:3967:9
  1019b0:    bf ea 7c f9       	call -0xd08 <local_irq_disable : 100cac >			  ## tasks.c:3968:10
  1019b4:    20 00             	csync			  ## tasks.c:3968:10
  1019b6:    32 60             	r2 = [r3+0x0] 			  ## tasks.c:3968:10
  1019b8:    bf ea 7f f9       	call -0xd02 <local_irq_enable : 100cba >			  ## tasks.c:3968:10
  1019bc:    d4 eb 01 20       	[r2+0x50] += 0x1			  ## tasks.c:3968:38
  1019c0:    bf ea 74 f9       	call -0xd18 <local_irq_disable : 100cac >			  ## tasks.c:3971:12
  1019c4:    20 00             	csync			  ## tasks.c:3971:12
  1019c6:    32 60             	r2 = [r3+0x0] 			  ## tasks.c:3971:12
  1019c8:    bf ea 77 f9       	call -0xd12 <local_irq_enable : 100cba >			  ## tasks.c:3971:12
  1019cc:    c2 61             	[r4+0x4] = r2			  ## queue.c:1170:52
  1019ce:    d0 ec 42 01       	r0 = [++r4=0x10]			  ## queue.c:1177:25
  1019d2:    00 47             	if (r0 == 0) goto 0xe <xQueueGenericReceive+0x246 : 1019e2 >
  1019d4:    40 16             	r0 = r4			  ## queue.c:1178:29
  1019d6:    bf ea f5 f9       	call -0xc16 <xTaskRemoveFromEventList : 100dc4 >
  1019da:    b0 e8 00 00       	if (r0 != 0x0) {
  1019de:    bf ea 81 fa       		call -0xafe
                               	} <vPortYield : 100ee4 >
  1019e2:    bf ea 6a f9       	call -0xd2c <local_irq_enable : 100cba >			  ## queue.c:1207:17
  1019e6:    40 21             	r0 = 0x1			  ## queue.c:1207:17
  1019e8:    02 83             	sp += 0xc
  1019ea:    5f 04             	{pc, r15-r4} = [sp++]			  ## queue.c:1278:1


xQueueGenericSendFromISR:
  1019ec:    7b 04             	[--sp] = {rets, r11-r4}			  ## queue.c:859:0
  1019ee:    36 16             	r6 = r3			  ## queue.c:859:0
  1019f0:    28 16             	r8 = r2			  ## queue.c:859:0
  1019f2:    17 16             	r7 = r1			  ## queue.c:859:0
  1019f4:    05 16             	r5 = r0			  ## queue.c:859:0
  1019f6:    c4 ff e8 bc 02 00 	r4 = 0x2bce8 <mask_log_e : 2bce8 >			  ## queue.c:859:0
  1019fc:    c9 ff 1f 2b 10 00 	r9 = 0x102b1f <vTickISR+0x32 : 102b1e >			  ## queue.c:859:0
  101a02:    cb ff bd 2b 10 00 	r11 = 0x102bbd <vTickISR+0xD0 : 102bbc >			  ## queue.c:859:0
  101a08:    85 46             	if (r5 != 0) goto 0xc <xQueueGenericSendFromISR+0x2A : 101a16 >			  ## queue.c:859:0
  101a0a:    42 f0 60 03       	r2 = 0x360  #			  ## FreeRTOSConfig.h:181:5
  101a0e:    43 60             		 r3 = [r4+0x0] 			  ## FreeRTOSConfig.h:181:5
  101a10:    90 16             	r0 = r9			  ## FreeRTOSConfig.h:181:5
  101a12:    b1 16             	r1 = r11			  ## FreeRTOSConfig.h:181:5
  101a14:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  101a16:    0a e1 40 50       	r10 = r5 + 0x40
  101a1a:    87 49             	if (r7 != 0) goto 0x12 <xQueueGenericSendFromISR+0x42 : 101a2e >
  101a1c:    d0 ec a0 00       	r0 = [r10+0x0]			  ## queue.c:865:5
  101a20:    00 46             	if (r0 == 0) goto 0xc <xQueueGenericSendFromISR+0x42 : 101a2e >			  ## queue.c:865:5
  101a22:    42 f0 61 03       	r2 = 0x361  #			  ## FreeRTOSConfig.h:181:5
  101a26:    43 60             		 r3 = [r4+0x0] 			  ## FreeRTOSConfig.h:181:5
  101a28:    90 16             	r0 = r9			  ## FreeRTOSConfig.h:181:5
  101a2a:    b1 16             	r1 = r11			  ## FreeRTOSConfig.h:181:5
  101a2c:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  101a2e:    86 f8 09 04       	if (r6 != 0x2) goto 0x12 <xQueueGenericSendFromISR+0x58 : 101a44 >
  101a32:    50 6f             	r0 = [r5+0x3c] 			  ## queue.c:866:5
  101a34:    00 f8 06 02       	if (r0 == 0x1) goto 0xc <xQueueGenericSendFromISR+0x58 : 101a44 >			  ## queue.c:866:5
  101a38:    42 f0 62 03       	r2 = 0x362  #			  ## FreeRTOSConfig.h:181:5
  101a3c:    43 60             		 r3 = [r4+0x0] 			  ## FreeRTOSConfig.h:181:5
  101a3e:    90 16             	r0 = r9			  ## FreeRTOSConfig.h:181:5
  101a40:    b1 16             	r1 = r11			  ## FreeRTOSConfig.h:181:5
  101a42:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  101a44:    bf ea 32 f9       	call -0xd9c <local_irq_disable : 100cac >			  ## queue.c:889:5
  101a48:    20 00             	csync			  ## queue.c:889:5
  101a4a:    50 6e             	r0 = [r5+0x38] 			  ## queue.c:893:23
  101a4c:    06 f8 04 04       	if (r6 == 0x2) goto 0x8 <xQueueGenericSendFromISR+0x6C : 101a58 >			  ## queue.c:893:23
  101a50:    51 6f             	r1 = [r5+0x3c] 			  ## queue.c:893:52
  101a52:    44 20             	r4 = 0x0			  ## queue.c:893:52
  101a54:    01 e9 1b 00       	if (r0 >= r1) goto 0x36 <xQueueGenericSendFromISR+0xA2 : 101a8e >			  ## queue.c:893:52
  101a58:    50 ee a5 40       	r4 = b[r10+0x5] (u)			  ## queue.c:894:45
  101a5c:    50 16             	r0 = r5			  ## queue.c:903:20
  101a5e:    71 16             	r1 = r7			  ## queue.c:903:20
  101a60:    62 16             	r2 = r6			  ## queue.c:903:20
  101a62:    bf ea ed fa       	call -0xa26 <prvCopyDataToQueue : 101040 >			  ## queue.c:903:20
  101a66:    14 f8 05 fe       	if (r4 == 0xff) goto 0xa <xQueueGenericSendFromISR+0x88 : 101a74 >			  ## queue.c:903:20
  101a6a:    48 81             	r0 = r4 + 0x1			  ## queue.c:967:53
  101a6c:    52 ee a5 00       	b[r10+0x5] = r0			  ## queue.c:967:34
  101a70:    44 21             	r4 = 0x1			  ## queue.c:967:34
  101a72:    04 8d             	goto 0x1a <xQueueGenericSendFromISR+0xA2 : 101a8e >			  ## queue.c:967:34
  101a74:    d0 ec 56 02       	r0 = [++r5=0x24]			  ## queue.c:945:25
  101a78:    44 21             	r4 = 0x1
  101a7a:    00 49             	if (r0 == 0) goto 0x12 <xQueueGenericSendFromISR+0xA2 : 101a8e >
  101a7c:    50 16             	r0 = r5			  ## queue.c:947:29
  101a7e:    bf ea a1 f9       	call -0xcbe <xTaskRemoveFromEventList : 100dc4 >			  ## queue.c:947:29
  101a82:    08 f8 04 00       	if (r8 == 0x0) goto 0x8 <xQueueGenericSendFromISR+0xA2 : 101a8e >			  ## queue.c:947:29
  101a86:    b0 e8 00 00       	if (r0 != 0x0) {
  101a8a:    d0 ec 81 40       		[r8+0x0] = r4
                               	}			  ## queue.c:951:60
  101a8e:    bf ea 14 f9       	call -0xdd8 <local_irq_enable : 100cba >			  ## queue.c:978:5
  101a92:    40 16             	r0 = r4			  ## queue.c:980:5
  101a94:    5b 04             	{pc, r11-r4} = [sp++]			  ## queue.c:980:5


xQueueReceiveFromISR:
  101a96:    7b 04             	[--sp] = {rets, r11-r4}			  ## queue.c:1282:0
  101a98:    28 16             	r8 = r2			  ## queue.c:1282:0
  101a9a:    1b 16             	r11 = r1			  ## queue.c:1282:0
  101a9c:    05 16             	r5 = r0			  ## queue.c:1282:0
  101a9e:    c4 ff e8 bc 02 00 	r4 = 0x2bce8 <mask_log_e : 2bce8 >			  ## queue.c:1282:0
  101aa4:    c9 ff 1f 2b 10 00 	r9 = 0x102b1f <vTickISR+0x32 : 102b1e >			  ## queue.c:1282:0
  101aaa:    ca ff e8 2b 10 00 	r10 = 0x102be8 <vTickISR+0xFC : 102be8 >			  ## queue.c:1282:0
  101ab0:    85 46             	if (r5 != 0) goto 0xc <xQueueReceiveFromISR+0x28 : 101abe >			  ## queue.c:1282:0
  101ab2:    42 f0 07 05       	r2 = 0x507  #			  ## FreeRTOSConfig.h:181:5
  101ab6:    43 60             		 r3 = [r4+0x0] 			  ## FreeRTOSConfig.h:181:5
  101ab8:    90 16             	r0 = r9			  ## FreeRTOSConfig.h:181:5
  101aba:    a1 16             	r1 = r10			  ## FreeRTOSConfig.h:181:5
  101abc:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  101abe:    07 e1 40 50       	r7 = r5 + 0x40
  101ac2:    8b f8 08 00       	if (r11 != 0x0) goto 0x10 <xQueueReceiveFromISR+0x40 : 101ad6 >
  101ac6:    70 60             	r0 = [r7+0x0] 			  ## queue.c:1288:5
  101ac8:    00 46             	if (r0 == 0) goto 0xc <xQueueReceiveFromISR+0x40 : 101ad6 >			  ## queue.c:1288:5
  101aca:    42 f0 08 05       	r2 = 0x508  #			  ## FreeRTOSConfig.h:181:5
  101ace:    43 60             		 r3 = [r4+0x0] 			  ## FreeRTOSConfig.h:181:5
  101ad0:    90 16             	r0 = r9			  ## FreeRTOSConfig.h:181:5
  101ad2:    a1 16             	r1 = r10			  ## FreeRTOSConfig.h:181:5
  101ad4:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  101ad6:    56 6e             	r6 = [r5+0x38] 			  ## queue.c:1308:56
  101ad8:    06 4e             	if (r6 == 0) goto 0x1c <xQueueReceiveFromISR+0x60 : 101af6 >
  101ada:    50 d6             	r0 = r5  #			  ## queue.c:1316:13
  101adc:    7c 44             		 r4 = b[r7+0x4] (u)			  ## queue.c:1312:45
  101ade:    b1 16             	r1 = r11			  ## queue.c:1316:13
  101ae0:    bf ea 3d fe       	call -0x386 <prvCopyDataFromQueue : 10175e >			  ## queue.c:1316:13
  101ae4:    30 e1 ff 6f       	r0 = r6 + -0x1			  ## queue.c:1317:60
  101ae8:    d0 6e             	[r5+0x38] = r0			  ## queue.c:1317:40
  101aea:    14 f8 06 fe       	if (r4 == 0xff) goto 0xc <xQueueReceiveFromISR+0x64 : 101afa >			  ## queue.c:1317:40
  101aee:    48 81             	r0 = r4 + 0x1			  ## queue.c:1342:53
  101af0:    f8 44             	b[r7+0x4] = r0			  ## queue.c:1342:34
  101af2:    44 21             	r4 = 0x1			  ## queue.c:1342:34
  101af4:    04 8f             	goto 0x1e <xQueueReceiveFromISR+0x7E : 101b14 >			  ## queue.c:1342:34
  101af6:    44 20             	r4 = 0x0
  101af8:    04 8d             	goto 0x1a <xQueueReceiveFromISR+0x7E : 101b14 >
  101afa:    d0 ec 52 01       	r0 = [++r5=0x10]			  ## queue.c:1324:21
  101afe:    44 21             	r4 = 0x1
  101b00:    00 49             	if (r0 == 0) goto 0x12 <xQueueReceiveFromISR+0x7E : 101b14 >
  101b02:    50 16             	r0 = r5			  ## queue.c:1325:25
  101b04:    bf ea 5e f9       	call -0xd44 <xTaskRemoveFromEventList : 100dc4 >			  ## queue.c:1325:25
  101b08:    08 f8 04 00       	if (r8 == 0x0) goto 0x8 <xQueueReceiveFromISR+0x7E : 101b14 >			  ## queue.c:1325:25
  101b0c:    b0 e8 00 00       	if (r0 != 0x0) {
  101b10:    d0 ec 81 40       		[r8+0x0] = r4
                               	}			  ## queue.c:1329:56
  101b14:    40 16             	r0 = r4			  ## queue.c:1353:5
  101b16:    5b 04             	{pc, r11-r4} = [sp++]			  ## queue.c:1353:5


uxQueueMessagesWaiting:
  101b18:    74 04             	[--sp] = {rets, r4}			  ## queue.c:1409:0
  101b1a:    04 16             	r4 = r0			  ## queue.c:1409:0
  101b1c:    84 4d             	if (r4 != 0) goto 0x1a <uxQueueMessagesWaiting+0x20 : 101b38 >			  ## queue.c:1409:0
  101b1e:    c0 ff e8 bc 02 00 	r0 = 0x2bce8 <mask_log_e : 2bce8 >			  ## FreeRTOSConfig.h:181:5
  101b24:    42 f0 84 05       	r2 = 0x584  #			  ## FreeRTOSConfig.h:181:5
  101b28:    03 60             		 r3 = [r0+0x0] 			  ## FreeRTOSConfig.h:181:5
  101b2a:    c0 ff 1f 2b 10 00 	r0 = 0x102b1f <vTickISR+0x32 : 102b1e >			  ## FreeRTOSConfig.h:181:5
  101b30:    c1 ff fd 2b 10 00 	r1 = 0x102bfd <vTickISR+0x110 : 102bfc >			  ## FreeRTOSConfig.h:181:5
  101b36:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  101b38:    bf ea b8 f8       	call -0xe90 <local_irq_disable : 100cac >			  ## queue.c:1414:5
  101b3c:    20 00             	csync			  ## queue.c:1414:5
  101b3e:    42 6e             	r2 = [r4+0x38] 			  ## queue.c:1416:42
  101b40:    bf ea bb f8       	call -0xe8a <local_irq_enable : 100cba >			  ## queue.c:1418:5
  101b44:    20 16             	r0 = r2			  ## queue.c:1420:5
  101b46:    54 04             	{pc, r4} = [sp++]			  ## queue.c:1420:5


uxQueueSpacesAvailable:
  101b48:    74 04             	[--sp] = {rets, r4}			  ## queue.c:1425:0
  101b4a:    04 16             	r4 = r0			  ## queue.c:1425:0
  101b4c:    84 4d             	if (r4 != 0) goto 0x1a <uxQueueSpacesAvailable+0x20 : 101b68 >			  ## queue.c:1425:0
  101b4e:    c0 ff e8 bc 02 00 	r0 = 0x2bce8 <mask_log_e : 2bce8 >			  ## FreeRTOSConfig.h:181:5
  101b54:    42 f0 96 05       	r2 = 0x596  #			  ## FreeRTOSConfig.h:181:5
  101b58:    03 60             		 r3 = [r0+0x0] 			  ## FreeRTOSConfig.h:181:5
  101b5a:    c0 ff 1f 2b 10 00 	r0 = 0x102b1f <vTickISR+0x32 : 102b1e >			  ## FreeRTOSConfig.h:181:5
  101b60:    c1 ff 14 2c 10 00 	r1 = 0x102c14 <vTickISR+0x128 : 102c14 >			  ## FreeRTOSConfig.h:181:5
  101b66:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  101b68:    bf ea a0 f8       	call -0xec0 <local_irq_disable : 100cac >			  ## queue.c:1432:5
  101b6c:    20 00             	csync			  ## queue.c:1432:5
  101b6e:    40 6f             	r0 = [r4+0x3c] 			  ## queue.c:1434:29
  101b70:    41 6e             	r1 = [r4+0x38] 			  ## queue.c:1434:49
  101b72:    0a 1e             	r2 = r0 - r1			  ## queue.c:1434:38
  101b74:    bf ea a1 f8       	call -0xebe <local_irq_enable : 100cba >			  ## queue.c:1436:5
  101b78:    20 16             	r0 = r2			  ## queue.c:1438:5
  101b7a:    54 04             	{pc, r4} = [sp++]			  ## queue.c:1438:5


uxQueueMessagesWaitingFromISR:
  101b7c:    74 04             	[--sp] = {rets, r4}			  ## queue.c:1443:0
  101b7e:    04 16             	r4 = r0			  ## queue.c:1443:0
  101b80:    84 4d             	if (r4 != 0) goto 0x1a <uxQueueMessagesWaitingFromISR+0x20 : 101b9c >			  ## queue.c:1443:0
  101b82:    c0 ff e8 bc 02 00 	r0 = 0x2bce8 <mask_log_e : 2bce8 >			  ## FreeRTOSConfig.h:181:5
  101b88:    42 f0 a6 05       	r2 = 0x5a6  #			  ## FreeRTOSConfig.h:181:5
  101b8c:    03 60             		 r3 = [r0+0x0] 			  ## FreeRTOSConfig.h:181:5
  101b8e:    c0 ff 1f 2b 10 00 	r0 = 0x102b1f <vTickISR+0x32 : 102b1e >			  ## FreeRTOSConfig.h:181:5
  101b94:    c1 ff 2b 2c 10 00 	r1 = 0x102c2b <vTickISR+0x13E : 102c2a >			  ## FreeRTOSConfig.h:181:5
  101b9a:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  101b9c:    40 6e             	r0 = [r4+0x38] 			  ## queue.c:1448:38
  101b9e:    54 04             	{pc, r4} = [sp++]			  ## queue.c:1450:5


vQueueDelete:
  101ba0:    74 04             	[--sp] = {rets, r4}			  ## queue.c:1455:0
  101ba2:    04 16             	r4 = r0			  ## queue.c:1455:0
  101ba4:    84 4d             	if (r4 != 0) goto 0x1a <vQueueDelete+0x20 : 101bc0 >			  ## queue.c:1455:0
  101ba6:    c0 ff e8 bc 02 00 	r0 = 0x2bce8 <mask_log_e : 2bce8 >			  ## FreeRTOSConfig.h:181:5
  101bac:    42 f0 b2 05       	r2 = 0x5b2  #			  ## FreeRTOSConfig.h:181:5
  101bb0:    03 60             		 r3 = [r0+0x0] 			  ## FreeRTOSConfig.h:181:5
  101bb2:    c0 ff 1f 2b 10 00 	r0 = 0x102b1f <vTickISR+0x32 : 102b1e >			  ## FreeRTOSConfig.h:181:5
  101bb8:    c1 ff 49 2c 10 00 	r1 = 0x102c49 <vTickISR+0x15C : 102c48 >			  ## FreeRTOSConfig.h:181:5
  101bbe:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  101bc0:    40 20             	r0 = 0x0			  ## queue.c:1461:26
  101bc2:    52 ee 4c 04       	b[r4+0x4c] = r0			  ## queue.c:1461:26
  101bc6:    50 ee 46 04       	r0 = b[r4+0x46] (u)			  ## queue.c:1479:22
  101bca:    80 46             	if (r0 != 0) goto 0xc <vQueueDelete+0x38 : 101bd8 >			  ## queue.c:1479:22
  101bcc:    c0 ff cc bc 02 00 	r0 = 0x2bccc <mask_free : 2bccc >			  ## mask_export.c:23:5
  101bd2:    40 d6             	r0 = r4  #			  ## mask_export.c:23:5
  101bd4:    01 60             		 r1 = [r0+0x0] 			  ## mask_export.c:23:5
  101bd6:    c1 00             	call r1			  ## mask_export.c:23:5
  101bd8:    54 04             	{pc, r4} = [sp++]			  ## queue.c:1492:1


xTaskCreate:
  101bda:    7c 04             	[--sp] = {rets, r12-r4}			  ## tasks.c:720:0
  101bdc:    c4 ff d4 bc 02 00 	r4 = 0x2bcd4 <mask_stack_malloc : 2bcd4 >			  ## mask_export.c:32:12
  101be2:    39 d6             	r9 = r3  #			  ## mask_export.c:32:12
  101be4:    44 60             		 r4 = [r4+0x0] 			  ## mask_export.c:32:12
  101be6:    2b 16             	r11 = r2
  101be8:    15 16             	r5 = r1
  101bea:    08 16             	r8 = r0
  101bec:    26 a2             	r6 = r2 << 0x2			  ## tasks.c:752:78
  101bee:    60 16             	r0 = r6			  ## mask_export.c:32:12
  101bf0:    c4 00             	call r4			  ## mask_export.c:32:12
  101bf2:    07 16             	r7 = r0			  ## mask_export.c:32:12
  101bf4:    4a e0 ff ff       	r10 = -0x1
  101bf8:    07 f8 c6 00       	if (r7 == 0x0) goto 0x18c <xTaskCreate+0x1AE : 101d88 >
  101bfc:    c0 ff d0 bc 02 00 	r0 = 0x2bcd0 <mask_malloc : 2bcd0 >			  ## mask_export.c:27:12
  101c02:    01 60             	r1 = [r0+0x0] 			  ## mask_export.c:27:12
  101c04:    50 3c             	r0 = 0x5c			  ## mask_export.c:27:12
  101c06:    c1 00             	call r1			  ## mask_export.c:27:12
  101c08:    04 16             	r4 = r0			  ## mask_export.c:27:12
  101c0a:    34 41             	if (r4 == 0) goto 0xc2 <xTaskCreate+0xF4 : 101cce >			  ## tasks.c:758:17
  101c0c:    d4 e9 2c c0       	r12 = [sp+44]
  101c10:    0a f1 10 40       	r10 = r4 + 0x10  #
  101c14:    03 2a             		 r3 = [sp+40]
  101c16:    d0 ec a1 73       	[r10+0x30] = r7			  ## tasks.c:760:35
  101c1a:    42 20             	r2 = 0x0			  ## tasks.c:760:35
  101c1c:    01 e1 50 40       	r1 = r4 + 0x50			  ## tasks.c:760:35
  101c20:    76 d8             	r6 += r7  #			  ## tasks.c:760:35
  101c22:    9a 48             		 b[r1+0x8] = r2			  ## tasks.c:777:45
  101c24:    d0 ec 45 b0       	[r4+0x4] = r11			  ## tasks.c:830:30
  101c28:    fe 3c             	r6 += -0x4			  ## tasks.c:831:42
  101c2a:    76 e1 03 60       	r6 = r6 & 0xFFFFFFFC			  ## tasks.c:832:79
  101c2e:    02 fc 08 16       	if (r2 > 0xb) goto 0x10 <xTaskCreate+0x68 : 101c42 >
  101c32:    d8 ee 50 72       	r7 = b[r5+r2] (u)			  ## tasks.c:852:37
  101c36:    c0 1c             	r0 = r4 + r2			  ## tasks.c:852:35
  101c38:    8f 48             	b[r0+0x8] = r7			  ## tasks.c:852:35
  101c3a:    d8 ee 50 02       	r0 = b[r5+r2] (u)			  ## tasks.c:857:13
  101c3e:    c2 21             	r2 += 0x1			  ## tasks.c:851:75
  101c40:    f0 56             	if (r0 != 0) goto -0x14 <xTaskCreate+0x54 : 101c2e >
  101c42:    45 20             	r5 = 0x0
  101c44:    52 ee a3 50       	b[r10+0x3] = r5			  ## tasks.c:865:57
  101c48:    33 e9 07 00       	if (r3 >= 0x7) {
  101c4c:    43 27             		r3 = 0x7
                               	}			  ## tasks.c:869:9
  101c4e:    a0 f0 08 30       	r0 = 0x8 - r3  #			  ## tasks.c:891:5
  101c52:    c3 6f             		 [r4+0x3c] = r3			  ## tasks.c:875:26
  101c54:    d0 ec ad 33       	[r10+0x3c] = r3			  ## tasks.c:878:34
  101c58:    95 60             	[r1+0x0] = r5			  ## tasks.c:879:33
  101c5a:    c5 69             	[r4+0x24] = r5			  ## list.c:114:25
  101c5c:    c5 6e             	[r4+0x38] = r5			  ## list.c:114:25
  101c5e:    c4 68             	[r4+0x20] = r4			  ## tasks.c:888:5
  101c60:    30 f1 b4 6f       	r0 = r6 + -0x4c  #			  ## tasks.c:888:5
  101c64:    c0 6a             		 [r4+0x28] = r0			  ## tasks.c:891:5
  101c66:    c4 6d             	[r4+0x34] = r4			  ## tasks.c:892:5
  101c68:    95 61             	[r1+0x4] = r5			  ## tasks.c:902:29
  101c6a:    9d 49             	b[r1+0x9] = r5			  ## tasks.c:947:34
  101c6c:    d0 ec 0d 90       	[r0+0xc] = r9			  ## port.c:156:12
  101c70:    85 62             	[r0+0x8] = r5			  ## port.c:158:12
  101c72:    85 61             	[r0+0x4] = r5			  ## port.c:159:12
  101c74:    d0 ec 01 80       	[r0+0x0] = r8			  ## port.c:162:12
  101c78:    c0 60             	[r4+0x0] = r0			  ## tasks.c:961:32
  101c7a:    bc e8 00 00       	if (r12 != 0x0) {
  101c7e:    d0 ec c1 40       		[r12+0x0] = r4
                               	}			  ## tasks.c:968:24
  101c82:    bf ea 13 f8       	call -0xfda <local_irq_disable : 100cac >			  ## tasks.c:979:5
  101c86:    20 00             	csync			  ## tasks.c:979:5
  101c88:    c3 ff 90 bc 02 00 	r3 = 0x2bc90 <uxCurrentNumberOfTasks : 2bc90 >			  ## tasks.c:979:5
  101c8e:    c0 eb 01 30       	[r3+0x0] += 0x1			  ## tasks.c:981:31
  101c92:    bf ea 0b f8       	call -0xfea <local_irq_disable : 100cac >			  ## tasks.c:982:13
  101c96:    20 00             	csync			  ## tasks.c:982:13
  101c98:    c6 ff 94 bc 02 00 	r6 = 0x2bc94 <CurrentTCB : 2bc94 >			  ## tasks.c:982:13
  101c9e:    62 60             	r2 = [r6+0x0] 			  ## tasks.c:982:13
  101ca0:    bf ea 0b f8       	call -0xfea <local_irq_enable : 100cba >			  ## tasks.c:982:13
  101ca4:    c5 ff f4 bc 02 00 	r5 = 0x2bcf4 <pxReadyTasksLists : 2bcf4 >			  ## tasks.c:982:13
  101caa:    c7 ff 98 bc 02 00 	r7 = 0x2bc98 <xSchedulerRunning : 2bc98 >			  ## tasks.c:982:13
  101cb0:    02 55             	if (r2 == 0) goto 0x2a <xTaskCreate+0x102 : 101cdc >			  ## tasks.c:982:13
  101cb2:    70 60             	r0 = [r7+0x0] 			  ## tasks.c:999:17
  101cb4:    a0 43             	if (r0 != 0) goto 0x86 <xTaskCreate+0x162 : 101d3c >			  ## tasks.c:999:17
  101cb6:    bf ea f9 f7       	call -0x100e <local_irq_disable : 100cac >			  ## tasks.c:1000:21
  101cba:    20 00             	csync			  ## tasks.c:1000:21
  101cbc:    62 60             	r2 = [r6+0x0] 			  ## tasks.c:1000:21
  101cbe:    bf ea fc f7       	call -0x1008 <local_irq_enable : 100cba >			  ## tasks.c:1000:21
  101cc2:    40 6f             	r0 = [r4+0x3c] 			  ## tasks.c:1000:59
  101cc4:    21 6f             	r1 = [r2+0x3c] 			  ## tasks.c:1000:35
  101cc6:    91 ec 00 00       	if (r1 <= r0) {			  ## tasks.c:1000:35
  101cca:    e4 60             		[r6+0x0] = r4
                               	}			  ## tasks.c:1001:43
  101ccc:    14 97             	goto 0x6e <xTaskCreate+0x162 : 101d3c >			  ## tasks.c:1001:43
  101cce:    c0 ff d8 bc 02 00 	r0 = 0x2bcd8 <mask_stack_free : 2bcd8 >			  ## mask_export.c:36:5
  101cd4:    70 d6             	r0 = r7  #			  ## mask_export.c:36:5
  101cd6:    01 60             		 r1 = [r0+0x0] 			  ## mask_export.c:36:5
  101cd8:    c1 00             	call r1			  ## mask_export.c:36:5
  101cda:    24 96             	goto 0xac <xTaskCreate+0x1AE : 101d88 >			  ## mask_export.c:36:5
  101cdc:    e4 60             	[r6+0x0] = r4			  ## tasks.c:985:35
  101cde:    30 60             	r0 = [r3+0x0] 			  ## tasks.c:987:17
  101ce0:    80 f8 2c 02       	if (r0 != 0x1) goto 0x58 <xTaskCreate+0x162 : 101d3c >			  ## tasks.c:987:17
  101ce4:    42 20             	r2 = 0x0
  101ce6:    04 84             	goto 0x8 <xTaskCreate+0x116 : 101cf0 >
  101ce8:    28 1d             	r0 = r2 + r5			  ## tasks.c:3200:9
  101cea:    bf ea 19 f9       	call -0xdce <vListInitialise : 100f20 >			  ## tasks.c:3200:9
  101cee:    c2 34             	r2 += 0x14			  ## tasks.c:3199:5
  101cf0:    92 f8 fa 41       	if (r2 != 0xa0) goto -0xc <xTaskCreate+0x10E : 101ce8 >
  101cf4:    c8 ff 94 bd 02 00 	r8 = 0x2bd94 <xDelayedTaskList1 : 2bd94 >			  ## tasks.c:3203:5
  101cfa:    80 16             	r0 = r8			  ## tasks.c:3203:5
  101cfc:    bf ea 10 f9       	call -0xde0 <vListInitialise : 100f20 >			  ## tasks.c:3203:5
  101d00:    c3 ff a8 bd 02 00 	r3 = 0x2bda8 <xDelayedTaskList2 : 2bda8 >			  ## tasks.c:3204:5
  101d06:    30 16             	r0 = r3			  ## tasks.c:3204:5
  101d08:    bf ea 0a f9       	call -0xdec <vListInitialise : 100f20 >			  ## tasks.c:3204:5
  101d0c:    c0 ff bc bd 02 00 	r0 = 0x2bdbc <xPendingReadyList : 2bdbc >			  ## tasks.c:3205:5
  101d12:    bf ea 05 f9       	call -0xdf6 <vListInitialise : 100f20 >			  ## tasks.c:3205:5
  101d16:    c0 ff d0 bd 02 00 	r0 = 0x2bdd0 <xTasksWaitingTermination : 2bdd0 >			  ## tasks.c:3209:9
  101d1c:    bf ea 00 f9       	call -0xe00 <vListInitialise : 100f20 >			  ## tasks.c:3209:9
  101d20:    c0 ff e4 bd 02 00 	r0 = 0x2bde4 <xSuspendedTaskList : 2bde4 >			  ## tasks.c:3215:9
  101d26:    bf ea fb f8       	call -0xe0a <vListInitialise : 100f20 >			  ## tasks.c:3215:9
  101d2a:    c0 ff f8 bd 02 00 	r0 = 0x2bdf8 <pxDelayedTaskList : 2bdf8 >			  ## tasks.c:3221:23
  101d30:    d0 ec 01 80       	[r0+0x0] = r8			  ## tasks.c:3221:23
  101d34:    c0 ff fc bd 02 00 	r0 = 0x2bdfc <pxOverflowDelayedTaskList : 2bdfc >			  ## tasks.c:3222:31
  101d3a:    83 60             	[r0+0x0] = r3			  ## tasks.c:3222:31
  101d3c:    c0 ff 9c bc 02 00 	r0 = 0x2bc9c <uxTaskNumber : 2bc9c >			  ## tasks.c:1010:21
  101d42:    01 60             	r1 = [r0+0x0] 			  ## tasks.c:1010:21
  101d44:    c1 21             	r1 += 0x1			  ## tasks.c:1010:21
  101d46:    81 60             	[r0+0x0] = r1			  ## tasks.c:1010:21
  101d48:    d0 ec a5 13       	[r10+0x34] = r1			  ## tasks.c:1015:35
  101d4c:    40 6f             	r0 = [r4+0x3c] 			  ## tasks.c:1020:9
  101d4e:    c1 ff a0 bc 02 00 	r1 = 0x2bca0 <uxTopReadyPriority : 2bca0 >			  ## tasks.c:1020:9
  101d54:    66 e8 00 10       	[r1+0x0] |= 1 << r0			  ## tasks.c:1020:9
  101d58:    e0 e1 14 00       	r0 = r0 * 0x14			  ## tasks.c:1020:9
  101d5c:    50 18             	r0 += r5			  ## tasks.c:1020:9
  101d5e:    49 94             	r1 = r4 + 0x14			  ## tasks.c:1020:9
  101d60:    bf ea 14 f8       	call -0xfd8 <vListInsertEnd : 100d8c >			  ## tasks.c:1020:9
  101d64:    bf ea a9 f7       	call -0x10ae <local_irq_enable : 100cba >			  ## tasks.c:1028:5
  101d68:    4a f0 01 00       	r10 = 0x1  #			  ## tasks.c:1028:5
  101d6c:    70 60             		 r0 = [r7+0x0] 			  ## tasks.c:1032:9
  101d6e:    00 4c             	if (r0 == 0) goto 0x18 <xTaskCreate+0x1AE : 101d88 >			  ## tasks.c:1032:9
  101d70:    bf ea 9c f7       	call -0x10c8 <local_irq_disable : 100cac >			  ## tasks.c:1035:13
  101d74:    20 00             	csync			  ## tasks.c:1035:13
  101d76:    62 60             	r2 = [r6+0x0] 			  ## tasks.c:1035:13
  101d78:    bf ea 9f f7       	call -0x10c2 <local_irq_enable : 100cba >			  ## tasks.c:1035:13
  101d7c:    40 6f             	r0 = [r4+0x3c] 			  ## tasks.c:1035:50
  101d7e:    21 6f             	r1 = [r2+0x3c] 			  ## tasks.c:1035:27
  101d80:    00 e9 02 10       	if (r1 >= r0) goto 0x4 <xTaskCreate+0x1AE : 101d88 >			  ## tasks.c:1035:27
  101d84:    bf ea ae f8       	call -0xea4 <vPortYield : 100ee4 >			  ## tasks.c:1036:13
  101d88:    a0 16             	r0 = r10			  ## tasks.c:787:5
  101d8a:    5c 04             	{pc, r12-r4} = [sp++]			  ## tasks.c:787:5


prvDeleteTCB:
  101d8c:    75 04             	[--sp] = {rets, r5, r4}			  ## tasks.c:3431:0
  101d8e:    04 16             	r4 = r0			  ## tasks.c:3431:0
  101d90:    50 ee 48 05       	r0 = b[r4+0x58] (u)			  ## tasks.c:3456:20
  101d94:    00 f8 1e 04       	if (r0 == 0x2) goto 0x3c <prvDeleteTCB+0x48 : 101dd4 >			  ## tasks.c:3456:20
  101d98:    c5 ff cc bc 02 00 	r5 = 0x2bccc <mask_free : 2bccc >
  101d9e:    00 f8 08 02       	if (r0 == 0x1) goto 0x10 <prvDeleteTCB+0x26 : 101db2 >
  101da2:    80 4b             	if (r0 != 0) goto 0x16 <prvDeleteTCB+0x2E : 101dba >
  101da4:    c0 ff d8 bc 02 00 	r0 = 0x2bcd8 <mask_stack_free : 2bcd8 >			  ## mask_export.c:36:5
  101daa:    01 60             	r1 = [r0+0x0] 			  ## mask_export.c:36:5
  101dac:    d0 ec 40 04       	r0 = [r4+0x40]			  ## tasks.c:3459:35
  101db0:    c1 00             	call r1			  ## mask_export.c:36:5
  101db2:    40 d6             	r0 = r4  #
  101db4:    51 60             		 r1 = [r5+0x0] 
  101db6:    35 04             	{rets, r5, r4} = [sp++]
  101db8:    d1 00             	goto r1
  101dba:    c0 ff e8 bc 02 00 	r0 = 0x2bce8 <mask_log_e : 2bce8 >			  ## FreeRTOSConfig.h:181:5
  101dc0:    42 f0 8c 0d       	r2 = 0xd8c  #			  ## FreeRTOSConfig.h:181:5
  101dc4:    03 60             		 r3 = [r0+0x0] 			  ## FreeRTOSConfig.h:181:5
  101dc6:    c0 ff 69 2c 10 00 	r0 = 0x102c69 <vTickISR+0x17C : 102c68 >			  ## FreeRTOSConfig.h:181:5
  101dcc:    c1 ff 7c 2c 10 00 	r1 = 0x102c7c <vTickISR+0x190 : 102c7c >			  ## FreeRTOSConfig.h:181:5
  101dd2:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  101dd4:    55 04             	{pc, r5, r4} = [sp++]			  ## tasks.c:3473:1


vTaskDelete:
  101dd6:    76 04             	[--sp] = {rets, r6-r4}			  ## tasks.c:1050:0
  101dd8:    04 16             	r4 = r0			  ## tasks.c:1050:0
  101dda:    bf ea 67 f7       	call -0x1132 <local_irq_disable : 100cac >			  ## tasks.c:1053:5
  101dde:    20 00             	csync			  ## tasks.c:1053:5
  101de0:    c6 ff 94 bc 02 00 	r6 = 0x2bc94 <CurrentTCB : 2bc94 >			  ## tasks.c:1053:5
  101de6:    84 46             	if (r4 != 0) goto 0xc <vTaskDelete+0x1E : 101df4 >			  ## tasks.c:1053:5
  101de8:    bf ea 60 f7       	call -0x1140 <local_irq_disable : 100cac >			  ## tasks.c:1057:17
  101dec:    20 00             	csync			  ## tasks.c:1057:17
  101dee:    64 60             	r4 = [r6+0x0] 			  ## tasks.c:1057:17
  101df0:    bf ea 63 f7       	call -0x113a <local_irq_enable : 100cba >			  ## tasks.c:1057:17
  101df4:    4d 94             	r5 = r4 + 0x14			  ## tasks.c:1068:35
  101df6:    50 16             	r0 = r5			  ## tasks.c:1068:13
  101df8:    bf ea b3 f7       	call -0x109a <uxListRemove : 100d62 >			  ## tasks.c:1068:13
  101dfc:    80 4f             	if (r0 != 0) goto 0x1e <vTaskDelete+0x46 : 101e1c >			  ## tasks.c:1068:13
  101dfe:    40 6f             	r0 = [r4+0x3c] 			  ## tasks.c:1069:13
  101e00:    e1 e1 14 00       	r1 = r0 * 0x14			  ## tasks.c:1069:13
  101e04:    c2 ff f4 bc 02 00 	r2 = 0x2bcf4 <pxReadyTasksLists : 2bcf4 >			  ## tasks.c:1069:13
  101e0a:    d8 ec 12 12       	r1 = [r1+r2]			  ## tasks.c:1069:13
  101e0e:    31 e8 00 40       	if (r1 == 0x0) {			  ## tasks.c:1069:13
  101e12:    c1 ff a0 bc 02 00 		r1 = 0x2bca0 <uxTopReadyPriority : 2bca0 >			  ## tasks.c:1069:13
  101e18:    66 e8 03 10       		[r1+0x0] &= ~(1 << r0)
                               	}			  ## tasks.c:1069:13
  101e1c:    40 6e             	r0 = [r4+0x38] 			  ## tasks.c:1074:13
  101e1e:    b0 e8 00 40       	if (r0 != 0x0) {			  ## tasks.c:1074:13
  101e22:    00 e1 28 40       		r0 = r4 + 0x28			  ## tasks.c:1074:13
  101e26:    bf ea 9c f7       		call -0x10c8
                               	} <uxListRemove : 100d62 >			  ## tasks.c:1075:20
  101e2a:    c0 ff 9c bc 02 00 	r0 = 0x2bc9c <uxTaskNumber : 2bc9c >			  ## tasks.c:1084:21
  101e30:    c0 eb 01 00       	[r0+0x0] += 0x1			  ## tasks.c:1084:21
  101e34:    60 60             	r0 = [r6+0x0] 			  ## tasks.c:1088:22
  101e36:    00 e8 0a 40       	if (r4 == r0) goto 0x14 <vTaskDelete+0x78 : 101e4e >			  ## tasks.c:1088:22
  101e3a:    c0 ff 90 bc 02 00 	r0 = 0x2bc90 <uxCurrentNumberOfTasks : 2bc90 >			  ## tasks.c:1112:13
  101e40:    c0 eb ff 0f       	[r0+0x0] += -0x1			  ## tasks.c:1112:13
  101e44:    40 16             	r0 = r4			  ## tasks.c:1113:13
  101e46:    51 82             	call -0xbc <prvDeleteTCB : 101d8c >			  ## tasks.c:1113:13
  101e48:    bf ea ab f7       	call -0x10aa <prvResetNextTaskUnblockTime : 100da2 >			  ## tasks.c:1117:13
  101e4c:    04 8b             	goto 0x16 <vTaskDelete+0x8E : 101e64 >			  ## tasks.c:1117:13
  101e4e:    c0 ff d0 bd 02 00 	r0 = 0x2bdd0 <xTasksWaitingTermination : 2bdd0 >			  ## tasks.c:1098:13
  101e54:    51 16             	r1 = r5			  ## tasks.c:1098:13
  101e56:    bf ea 99 f7       	call -0x10ce <vListInsertEnd : 100d8c >			  ## tasks.c:1098:13
  101e5a:    c0 ff a4 bc 02 00 	r0 = 0x2bca4 <uxDeletedTasksWaitingCleanUp : 2bca4 >			  ## tasks.c:1103:13
  101e60:    c0 eb 01 00       	[r0+0x0] += 0x1			  ## tasks.c:1103:13
  101e64:    c0 ff 98 bc 02 00 	r0 = 0x2bc98 <xSchedulerRunning : 2bc98 >			  ## tasks.c:1125:9
  101e6a:    00 60             	r0 = [r0+0x0] 			  ## tasks.c:1125:9
  101e6c:    00 57             	if (r0 == 0) goto 0x2e <vTaskDelete+0xC6 : 101e9c >			  ## tasks.c:1125:9
  101e6e:    60 60             	r0 = [r6+0x0] 			  ## tasks.c:1127:22
  101e70:    80 e8 14 40       	if (r4 != r0) goto 0x28 <vTaskDelete+0xC6 : 101e9c >			  ## tasks.c:1127:22
  101e74:    c0 ff a8 bc 02 00 	r0 = 0x2bca8 <uxSchedulerSuspended : 2bca8 >			  ## tasks.c:1132:13
  101e7a:    00 60             	r0 = [r0+0x0] 			  ## tasks.c:1132:13
  101e7c:    00 4d             	if (r0 == 0) goto 0x1a <vTaskDelete+0xC2 : 101e98 >			  ## tasks.c:1132:13
  101e7e:    c0 ff e8 bc 02 00 	r0 = 0x2bce8 <mask_log_e : 2bce8 >			  ## FreeRTOSConfig.h:181:5
  101e84:    42 f0 6c 04       	r2 = 0x46c  #			  ## FreeRTOSConfig.h:181:5
  101e88:    03 60             		 r3 = [r0+0x0] 			  ## FreeRTOSConfig.h:181:5
  101e8a:    c0 ff 69 2c 10 00 	r0 = 0x102c69 <vTickISR+0x17C : 102c68 >			  ## FreeRTOSConfig.h:181:5
  101e90:    c1 ff 70 2c 10 00 	r1 = 0x102c70 <vTickISR+0x184 : 102c70 >			  ## FreeRTOSConfig.h:181:5
  101e96:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  101e98:    bf ea 24 f8       	call -0xfb8 <vPortYield : 100ee4 >			  ## tasks.c:1133:13
  101e9c:    36 04             	{rets, r6-r4} = [sp++]			  ## tasks.c:1138:5
  101e9e:    ff ea 0c f7       	goto -0x11e8 <local_irq_enable : 100cba >			  ## tasks.c:1138:5


prvGetExpectedIdleTime:
  101ea2:    10 04             	[--sp] = rets			  ## tasks.c:1872:0
  101ea4:    c0 ff a0 bc 02 00 	r0 = 0x2bca0 <uxTopReadyPriority : 2bca0 >			  ## tasks.c:1895:13
  101eaa:    02 60             	r2 = [r0+0x0] 			  ## tasks.c:1895:13
  101eac:    bf ea fe f6       	call -0x1204 <local_irq_disable : 100cac >			  ## tasks.c:1901:9
  101eb0:    20 00             	csync			  ## tasks.c:1901:9
  101eb2:    c0 ff 94 bc 02 00 	r0 = 0x2bc94 <CurrentTCB : 2bc94 >			  ## tasks.c:1901:9
  101eb8:    03 60             	r3 = [r0+0x0] 			  ## tasks.c:1901:9
  101eba:    bf ea fe f6       	call -0x1204 <local_irq_enable : 100cba >			  ## tasks.c:1901:9
  101ebe:    c0 ff f4 bc 02 00 	r0 = 0x2bcf4 <pxReadyTasksLists : 2bcf4 >			  ## tasks.c:1903:16
  101ec4:    00 60             	r0 = [r0+0x0] 			  ## tasks.c:1903:16
  101ec6:    20 d9             	r0 |= r2  #			  ## tasks.c:1901:9
  101ec8:    31 6f             		 r1 = [r3+0x3c] 			  ## tasks.c:1901:23
  101eca:    b8 20             	r0 &= 0xfffffffe			  ## tasks.c:1901:9
  101ecc:    01 19             	r1 |= r0			  ## tasks.c:1901:9
  101ece:    40 20             	r0 = 0x0			  ## tasks.c:1901:9
  101ed0:    81 49             	if (r1 != 0) goto 0x12 <prvGetExpectedIdleTime+0x42 : 101ee4 >			  ## tasks.c:1901:9
  101ed2:    c0 ff ac bc 02 00 	r0 = 0x2bcac <xNextTaskUnblockTime : 2bcac >			  ## tasks.c:1914:19
  101ed8:    00 60             	r0 = [r0+0x0] 			  ## tasks.c:1914:19
  101eda:    c1 ff b0 bc 02 00 	r1 = 0x2bcb0 <xTickCount : 2bcb0 >			  ## tasks.c:1914:42
  101ee0:    11 60             	r1 = [r1+0x0] 			  ## tasks.c:1914:42
  101ee2:    08 1e             	r0 = r0 - r1			  ## tasks.c:1914:40
  101ee4:    00 04             	pc = [sp++]			  ## tasks.c:1917:5


prvIdleTask:
  101ee6:    c7 ff a4 bc 02 00 	r7 = 0x2bca4 <uxDeletedTasksWaitingCleanUp : 2bca4 >			  ## tasks.c:3005:0
  101eec:    ce ff f4 bc 02 00 	r14 = 0x2bcf4 <pxReadyTasksLists : 2bcf4 >			  ## tasks.c:3005:0
  101ef2:    cf ff f0 bc 02 00 	r15 = 0x2bcf0 <idle_hook : 2bcf0 >			  ## tasks.c:3005:0
  101ef8:    ca ff ac bc 02 00 	r10 = 0x2bcac <xNextTaskUnblockTime : 2bcac >			  ## tasks.c:3005:0
  101efe:    cb ff b0 bc 02 00 	r11 = 0x2bcb0 <xTickCount : 2bcb0 >			  ## tasks.c:3005:0
  101f04:    cc ff e8 bc 02 00 	r12 = 0x2bce8 <mask_log_e : 2bce8 >			  ## tasks.c:3005:0
  101f0a:    c8 ff 69 2c 10 00 	r8 = 0x102c69 <vTickISR+0x17C : 102c68 >			  ## tasks.c:3005:0
  101f10:    c9 ff da 2c 10 00 	r9 = 0x102cda <vTickISR+0x1EE : 102cda >			  ## tasks.c:3005:0
  101f16:    cd ff e0 bc 02 00 	r13 = 0x2bce0 <mask_portSUPPRESS_TICKS_AND_SLEEP : 2bce0 >			  ## tasks.c:3005:0
  101f1c:    c4 ff d0 bd 02 00 	r4 = 0x2bdd0 <xTasksWaitingTermination : 2bdd0 >			  ## tasks.c:3005:0
  101f22:    c5 ff 90 bc 02 00 	r5 = 0x2bc90 <uxCurrentNumberOfTasks : 2bc90 >			  ## tasks.c:3005:0
  101f28:    70 60             	r0 = [r7+0x0] 			  ## tasks.c:3239:16
  101f2a:    00 58             	if (r0 == 0) goto 0x30 <prvIdleTask+0x76 : 101f5c >			  ## tasks.c:3239:9
  101f2c:    bf ea 1a f9       	call -0xdcc <vTaskSuspendAll : 101164 >			  ## tasks.c:3240:13
  101f30:    40 60             	r0 = [r4+0x0] 			  ## tasks.c:3242:32
  101f32:    00 51             	if (r0 == 0) goto 0x22 <prvIdleTask+0x70 : 101f56 >			  ## tasks.c:3242:32
  101f34:    bf ea ba f6       	call -0x128c <local_irq_disable : 100cac >			  ## tasks.c:3249:17
  101f38:    20 00             	csync			  ## tasks.c:3249:17
  101f3a:    40 63             	r0 = [r4+0xc] 			  ## tasks.c:3251:39
  101f3c:    06 63             	r6 = [r0+0xc] 			  ## tasks.c:3251:39
  101f3e:    68 94             	r0 = r6 + 0x14			  ## tasks.c:3253:50
  101f40:    bf ea 0f f7       	call -0x11e2 <uxListRemove : 100d62 >			  ## tasks.c:3253:28
  101f44:    c0 eb ff 5f       	[r5+0x0] += -0x1			  ## tasks.c:3254:21
  101f48:    c0 eb ff 7f       	[r7+0x0] += -0x1			  ## tasks.c:3255:21
  101f4c:    bf ea b5 f6       	call -0x1296 <local_irq_enable : 100cba >			  ## tasks.c:3257:17
  101f50:    60 16             	r0 = r6			  ## tasks.c:3259:17
  101f52:    bf ea 1b ff       	call -0x1ca <prvDeleteTCB : 101d8c >			  ## tasks.c:3259:17
  101f56:    bf ea e2 fa       	call -0xa3c <xTaskResumeAll : 10151e >
  101f5a:    f7 86             	goto -0x34 <prvIdleTask+0x42 : 101f28 >
  101f5c:    d0 ec e0 00       	r0 = [r14+0x0]			  ## tasks.c:3050:17
  101f60:    30 e9 02 00       	if (r0 >= 0x2) {			  ## tasks.c:3050:17
  101f64:    bf ea be f7       		call -0x1084
                               	} <vPortYield : 100ee4 >			  ## tasks.c:3051:17
  101f68:    d0 ec f0 00       	r0 = [r15+0x0]			  ## main.c:252:9
  101f6c:    b0 e8 00 00       	if (r0 != 0x0) {			  ## main.c:252:9
  101f70:    c0 00             		call r0
                               	}			  ## main.c:253:9
  101f72:    01 00             	idle			  ## main.c:255:5
  101f74:    41 96             	call -0xd4 <prvGetExpectedIdleTime : 101ea2 >			  ## tasks.c:3083:33
  101f76:    80 f9 d7 05       	if (r0 < 0x2) goto -0x52 <prvIdleTask+0x42 : 101f28 >
  101f7a:    bf ea f3 f8       	call -0xe1a <vTaskSuspendAll : 101164 >			  ## tasks.c:3086:17
  101f7e:    d0 ec a0 00       	r0 = [r10+0x0]			  ## tasks.c:3091:21
  101f82:    d0 ec b0 10       	r1 = [r11+0x0]			  ## tasks.c:3091:21
  101f86:    90 e9 00 c1       	if (r0 < r1) {			  ## tasks.c:3091:21
  101f8a:    d0 ec c0 30       		r3 = [r12+0x0]			  ## FreeRTOSConfig.h:181:5
  101f8e:    42 e0 13 0c       		r2 = 0xc13			  ## FreeRTOSConfig.h:181:5
  101f92:    80 15             		r1_r0 = r9_r8			  ## FreeRTOSConfig.h:181:5
  101f94:    c3 00             		call r3
                               	}			  ## FreeRTOSConfig.h:181:5
  101f96:    41 85             	call -0xf6 <prvGetExpectedIdleTime : 101ea2 >			  ## tasks.c:3092:41
  101f98:    80 f9 dd 05       	if (r0 < 0x2) goto -0x46 <prvIdleTask+0x70 : 101f56 >
  101f9c:    d0 ec d0 10       	r1 = [r13+0x0]			  ## tasks.c:3096:25
  101fa0:    c1 00             	call r1			  ## tasks.c:3096:25
  101fa2:    e7 99             	goto -0x4e <prvIdleTask+0x70 : 101f56 >


xTaskGetTickCount:
  101fa4:    c0 ff b0 bc 02 00 	r0 = 0x2bcb0 <xTickCount : 2bcb0 >			  ## tasks.c:2022:0
  101faa:    00 60             	r0 = [r0+0x0] 			  ## tasks.c:2028:18
  101fac:    80 00             	rts			  ## tasks.c:2032:5


pcTaskGetName:
  101fae:    74 04             	[--sp] = {rets, r4}			  ## tasks.c:2076:0
  101fb0:    04 16             	r4 = r0			  ## tasks.c:2076:0
  101fb2:    84 49             	if (r4 != 0) goto 0x12 <pcTaskGetName+0x18 : 101fc6 >			  ## tasks.c:2076:0
  101fb4:    bf ea 7a f6       	call -0x130c <local_irq_disable : 100cac >			  ## tasks.c:2081:13
  101fb8:    20 00             	csync			  ## tasks.c:2081:13
  101fba:    c0 ff 94 bc 02 00 	r0 = 0x2bc94 <CurrentTCB : 2bc94 >			  ## tasks.c:2081:13
  101fc0:    04 60             	r4 = [r0+0x0] 			  ## tasks.c:2081:13
  101fc2:    bf ea 7a f6       	call -0x130c <local_irq_enable : 100cba >			  ## tasks.c:2081:13
  101fc6:    84 4d             	if (r4 != 0) goto 0x1a <pcTaskGetName+0x34 : 101fe2 >
  101fc8:    c0 ff e8 bc 02 00 	r0 = 0x2bce8 <mask_log_e : 2bce8 >			  ## FreeRTOSConfig.h:181:5
  101fce:    42 f0 22 08       	r2 = 0x822  #			  ## FreeRTOSConfig.h:181:5
  101fd2:    03 60             		 r3 = [r0+0x0] 			  ## FreeRTOSConfig.h:181:5
  101fd4:    c0 ff 69 2c 10 00 	r0 = 0x102c69 <vTickISR+0x17C : 102c68 >			  ## FreeRTOSConfig.h:181:5
  101fda:    c1 ff e6 2c 10 00 	r1 = 0x102ce6 <vTickISR+0x1FA : 102ce6 >			  ## FreeRTOSConfig.h:181:5
  101fe0:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  101fe2:    48 88             	r0 = r4 + 0x8			  ## tasks.c:2083:14
  101fe4:    54 04             	{pc, r4} = [sp++]			  ## tasks.c:2083:5


prvSearchForNameWithinSingleList:
  101fe6:    79 04             	[--sp] = {rets, r9-r4}			  ## tasks.c:2090:0
  101fe8:    02 60             	r2 = [r0+0x0] 			  ## tasks.c:2097:9
  101fea:    12 42             	if (r2 == 0) goto 0x44 <prvSearchForNameWithinSingleList+0x4A : 102030 >			  ## tasks.c:2097:9
  101fec:    02 61             	r2 = [r0+0x4] 			  ## tasks.c:2098:9
  101fee:    23 61             	r3 = [r2+0x4] 			  ## tasks.c:2098:9
  101ff0:    0c 88             	r4 = r0 + 0x8			  ## tasks.c:2098:9
  101ff2:    08 f1 04 00       	r8 = r0 + 0x4  #			  ## tasks.c:2098:9
  101ff6:    83 61             		 [r0+0x4] = r3			  ## tasks.c:2098:9
  101ff8:    13 e8 00 44       	if (r3 == r4) {			  ## tasks.c:2098:9
  101ffc:    33 61             		r3 = [r3+0x4] 			  ## tasks.c:2098:9
  101ffe:    83 61             		[r0+0x4] = r3
                               	}			  ## tasks.c:2098:9
  102000:    d0 ec 3c 90       	r9 = [r3+0xc]			  ## tasks.c:2098:9
  102004:    33 61             	r3 = [r3+0x4] 			  ## tasks.c:2101:13
  102006:    83 61             	[r0+0x4] = r3			  ## tasks.c:2101:13
  102008:    13 e8 00 44       	if (r3 == r4) {			  ## tasks.c:2101:13
  10200c:    03 63             		r3 = [r0+0xc] 			  ## tasks.c:2101:13
  10200e:    d0 ec 81 30       		[r8+0x0] = r3
                               	}			  ## tasks.c:2101:13
  102012:    32 63             	r2 = [r3+0xc] 			  ## tasks.c:2101:13
  102014:    47 20             	r7 = 0x0
  102016:    07 fc 09 16       	if (r7 > 0xb) goto 0x12 <prvSearchForNameWithinSingleList+0x46 : 10202c >
  10201a:    d8 ee 10 67       	r6 = b[r1+r7] (u)			  ## tasks.c:2108:34
  10201e:    ad 1d             	r5 = r2 + r7			  ## tasks.c:2106:29
  102020:    5d 48             	r5 = b[r5+0x8] (u)			  ## tasks.c:2106:29
  102022:    86 e8 03 50       	if (r5 != r6) goto 0x6 <prvSearchForNameWithinSingleList+0x46 : 10202c >			  ## tasks.c:2106:29
  102026:    c7 21             	r7 += 0x1			  ## tasks.c:2105:83
  102028:    f5 56             	if (r5 != 0) goto -0x14 <prvSearchForNameWithinSingleList+0x30 : 102016 >
  10202a:    04 83             	goto 0x6 <prvSearchForNameWithinSingleList+0x4C : 102032 >
  10202c:    89 e8 ea 21       	if (r2 != r9) goto -0x2c <prvSearchForNameWithinSingleList+0x1E : 102004 >
  102030:    42 20             	r2 = 0x0
  102032:    20 16             	r0 = r2			  ## tasks.c:2131:5
  102034:    59 04             	{pc, r9-r4} = [sp++]			  ## tasks.c:2131:5


xTaskGetHandle:
  102036:    77 04             	[--sp] = {rets, r7-r4}			  ## tasks.c:2140:0
  102038:    04 16             	r4 = r0			  ## tasks.c:2140:0
  10203a:    bf ea db f2       	call -0x1a4a <strlen : 1005f4 >			  ## tasks.c:2145:5
  10203e:    80 f9 0d 18       	if (r0 < 0xc) goto 0x1a <xTaskGetHandle+0x26 : 10205c >			  ## tasks.c:2145:5
  102042:    c0 ff e8 bc 02 00 	r0 = 0x2bce8 <mask_log_e : 2bce8 >			  ## FreeRTOSConfig.h:181:5
  102048:    42 f0 61 08       	r2 = 0x861  #			  ## FreeRTOSConfig.h:181:5
  10204c:    03 60             		 r3 = [r0+0x0] 			  ## FreeRTOSConfig.h:181:5
  10204e:    c0 ff 69 2c 10 00 	r0 = 0x102c69 <vTickISR+0x17C : 102c68 >			  ## FreeRTOSConfig.h:181:5
  102054:    c1 ff f4 2c 10 00 	r1 = 0x102cf4 <vTickISR+0x208 : 102cf4 >			  ## FreeRTOSConfig.h:181:5
  10205a:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  10205c:    bf ea 82 f8       	call -0xefc <vTaskSuspendAll : 101164 >			  ## tasks.c:2147:5
  102060:    60 2c             	r0 = 0x8c			  ## tasks.c:2147:5
  102062:    c6 ff f4 bc 02 00 	r6 = 0x2bcf4 <pxReadyTasksLists : 2bcf4 >			  ## tasks.c:2147:5
  102068:    07 16             	r7 = r0
  10206a:    f0 1d             	r0 = r7 + r6			  ## tasks.c:2152:21
  10206c:    41 16             	r1 = r4			  ## tasks.c:2152:21
  10206e:    51 9b             	call -0x8a <prvSearchForNameWithinSingleList : 101fe6 >			  ## tasks.c:2152:21
  102070:    05 16             	r5 = r0			  ## tasks.c:2152:21
  102072:    85 43             	if (r5 != 0) goto 0x6 <xTaskGetHandle+0x44 : 10207a >
  102074:    30 e1 ec 7f       	r0 = r7 + -0x14			  ## tasks.c:2154:17
  102078:    f7 57             	if (r7 != 0) goto -0x12 <xTaskGetHandle+0x32 : 102068 >			  ## tasks.c:2154:17
  10207a:    85 59             	if (r5 != 0) goto 0x32 <xTaskGetHandle+0x78 : 1020ae >
  10207c:    c0 ff f8 bd 02 00 	r0 = 0x2bdf8 <pxDelayedTaskList : 2bdf8 >			  ## tasks.c:2163:65
  102082:    00 60             	r0 = [r0+0x0] 			  ## tasks.c:2163:65
  102084:    51 90             	call -0xa0 <prvSearchForNameWithinSingleList : 101fe6 >			  ## tasks.c:2163:21
  102086:    05 16             	r5 = r0			  ## tasks.c:2163:21
  102088:    85 52             	if (r5 != 0) goto 0x24 <xTaskGetHandle+0x78 : 1020ae >
  10208a:    c0 ff fc bd 02 00 	r0 = 0x2bdfc <pxOverflowDelayedTaskList : 2bdfc >			  ## tasks.c:2167:65
  102090:    00 60             	r0 = [r0+0x0] 			  ## tasks.c:2167:65
  102092:    51 89             	call -0xae <prvSearchForNameWithinSingleList : 101fe6 >			  ## tasks.c:2167:21
  102094:    05 16             	r5 = r0			  ## tasks.c:2167:21
  102096:    85 4b             	if (r5 != 0) goto 0x16 <xTaskGetHandle+0x78 : 1020ae >
  102098:    c0 ff e4 bd 02 00 	r0 = 0x2bde4 <xSuspendedTaskList : 2bde4 >			  ## tasks.c:2174:25
  10209e:    51 83             	call -0xba <prvSearchForNameWithinSingleList : 101fe6 >			  ## tasks.c:2174:25
  1020a0:    05 16             	r5 = r0			  ## tasks.c:2174:25
  1020a2:    85 45             	if (r5 != 0) goto 0xa <xTaskGetHandle+0x78 : 1020ae >
  1020a4:    c0 ff d0 bd 02 00 	r0 = 0x2bdd0 <xTasksWaitingTermination : 2bdd0 >			  ## tasks.c:2183:25
  1020aa:    41 9d             	call -0xc6 <prvSearchForNameWithinSingleList : 101fe6 >			  ## tasks.c:2183:25
  1020ac:    05 16             	r5 = r0			  ## tasks.c:2183:25
  1020ae:    bf ea 36 fa       	call -0xb94 <xTaskResumeAll : 10151e >			  ## tasks.c:2188:12
  1020b2:    50 16             	r0 = r5			  ## tasks.c:2190:5
  1020b4:    57 04             	{pc, r7-r4} = [sp++]			  ## tasks.c:2190:5


vTaskStepTick:
  1020b6:    75 04             	[--sp] = {rets, r5, r4}			  ## tasks.c:2284:0
  1020b8:    c5 ff b0 bc 02 00 	r5 = 0x2bcb0 <xTickCount : 2bcb0 >			  ## tasks.c:2284:0
  1020be:    51 60             	r1 = [r5+0x0] 			  ## tasks.c:2288:5
  1020c0:    c2 ff ac bc 02 00 	r2 = 0x2bcac <xNextTaskUnblockTime : 2bcac >			  ## tasks.c:2288:5
  1020c6:    04 d6             	r4 = r0  #			  ## tasks.c:2288:5
  1020c8:    22 60             		 r2 = [r2+0x0] 			  ## tasks.c:2288:5
  1020ca:    10 1d             	r0 = r1 + r4			  ## tasks.c:2288:5
  1020cc:    82 ec 0d 00       	if (r0 <= r2) goto 0x1a <vTaskStepTick+0x34 : 1020ea >			  ## tasks.c:2288:5
  1020d0:    c0 ff e8 bc 02 00 	r0 = 0x2bce8 <mask_log_e : 2bce8 >			  ## FreeRTOSConfig.h:181:5
  1020d6:    42 f0 f0 08       	r2 = 0x8f0  #			  ## FreeRTOSConfig.h:181:5
  1020da:    03 60             		 r3 = [r0+0x0] 			  ## FreeRTOSConfig.h:181:5
  1020dc:    c0 ff 69 2c 10 00 	r0 = 0x102c69 <vTickISR+0x17C : 102c68 >			  ## FreeRTOSConfig.h:181:5
  1020e2:    c1 ff 03 2d 10 00 	r1 = 0x102d03 <vTickISR+0x216 : 102d02 >			  ## FreeRTOSConfig.h:181:5
  1020e8:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  1020ea:    68 e8 00 54       	[r5+0x0] += r4			  ## tasks.c:2289:16
  1020ee:    55 04             	{pc, r5, r4} = [sp++]			  ## tasks.c:2291:1


vTaskSetApplicationTaskTag:
  1020f0:    10 04             	[--sp] = rets			  ## tasks.c:2518:0
  1020f2:    12 16             	r2 = r1			  ## tasks.c:2518:0
  1020f4:    03 16             	r3 = r0			  ## tasks.c:2518:0
  1020f6:    83 49             	if (r3 != 0) goto 0x12 <vTaskSetApplicationTaskTag+0x1A : 10210a >			  ## tasks.c:2518:0
  1020f8:    bf ea d8 f5       	call -0x1450 <local_irq_disable : 100cac >			  ## tasks.c:2524:26
  1020fc:    20 00             	csync			  ## tasks.c:2524:26
  1020fe:    c0 ff 94 bc 02 00 	r0 = 0x2bc94 <CurrentTCB : 2bc94 >			  ## tasks.c:2524:26
  102104:    03 60             	r3 = [r0+0x0] 			  ## tasks.c:2524:26
  102106:    bf ea d8 f5       	call -0x1450 <local_irq_enable : 100cba >			  ## tasks.c:2524:26
  10210a:    bf ea cf f5       	call -0x1462 <local_irq_disable : 100cac >			  ## tasks.c:2531:5
  10210e:    20 00             	csync			  ## tasks.c:2531:5
  102110:    d0 ec 35 25       	[r3+0x54] = r2			  ## tasks.c:2532:21
  102114:    88 04             	{rets} = [sp++]			  ## tasks.c:2533:5
  102116:    ff ea d0 f5       	goto -0x1460 <local_irq_enable : 100cba >			  ## tasks.c:2533:5


xTaskGetApplicationTaskTag:
  10211a:    10 04             	[--sp] = rets			  ## tasks.c:2542:0
  10211c:    02 16             	r2 = r0			  ## tasks.c:2542:0
  10211e:    82 49             	if (r2 != 0) goto 0x12 <xTaskGetApplicationTaskTag+0x18 : 102132 >			  ## tasks.c:2542:0
  102120:    bf ea c4 f5       	call -0x1478 <local_irq_disable : 100cac >			  ## tasks.c:2548:26
  102124:    20 00             	csync			  ## tasks.c:2548:26
  102126:    c0 ff 94 bc 02 00 	r0 = 0x2bc94 <CurrentTCB : 2bc94 >			  ## tasks.c:2548:26
  10212c:    02 60             	r2 = [r0+0x0] 			  ## tasks.c:2548:26
  10212e:    bf ea c4 f5       	call -0x1478 <local_irq_enable : 100cba >			  ## tasks.c:2548:26
  102132:    bf ea bb f5       	call -0x148a <local_irq_disable : 100cac >			  ## tasks.c:2555:5
  102136:    20 00             	csync			  ## tasks.c:2555:5
  102138:    d0 ec 24 25       	r2 = [r2+0x54]			  ## tasks.c:2557:25
  10213c:    bf ea bd f5       	call -0x1486 <local_irq_enable : 100cba >			  ## tasks.c:2559:5
  102140:    20 16             	r0 = r2			  ## tasks.c:2561:5
  102142:    00 04             	pc = [sp++]			  ## tasks.c:2561:5


eTaskConfirmSleepModeStatus:
  102144:    c0 ff bc bd 02 00 	r0 = 0x2bdbc <xPendingReadyList : 2bdbc >			  ## tasks.c:3115:0
  10214a:    00 60             	r0 = [r0+0x0] 			  ## tasks.c:3120:9
  10214c:    80 45             	if (r0 != 0) goto 0xa <eTaskConfirmSleepModeStatus+0x14 : 102158 >			  ## tasks.c:3120:9
  10214e:    c0 ff b4 bc 02 00 	r0 = 0x2bcb4 <xYieldPending : 2bcb4 >			  ## tasks.c:3123:16
  102154:    00 60             	r0 = [r0+0x0] 			  ## tasks.c:3123:16
  102156:    00 42             	if (r0 == 0) goto 0x4 <eTaskConfirmSleepModeStatus+0x18 : 10215c >			  ## tasks.c:3123:16
  102158:    40 20             	r0 = 0x0			  ## tasks.c:3138:5
  10215a:    80 00             	rts			  ## tasks.c:3138:5
  10215c:    c0 ff e4 bd 02 00 	r0 = 0x2bde4 <xSuspendedTaskList : 2bde4 >			  ## tasks.c:3131:13
  102162:    01 60             	r1 = [r0+0x0] 			  ## tasks.c:3131:13
  102164:    c0 ff 90 bc 02 00 	r0 = 0x2bc90 <uxCurrentNumberOfTasks : 2bc90 >			  ## tasks.c:3131:62
  10216a:    00 60             	r0 = [r0+0x0] 			  ## tasks.c:3131:62
  10216c:    32 e1 ff 0f       	r2 = r0 + -0x1			  ## tasks.c:3131:85
  102170:    40 22             	r0 = 0x2			  ## tasks.c:3131:13
  102172:    91 e8 00 02       	if (r1 != r2) {
  102176:    40 21             		r0 = 0x1
                               	}			  ## tasks.c:3131:13
  102178:    80 00             	rts			  ## tasks.c:3131:13


xTaskGetCurrentTaskHandle:
  10217a:    10 04             	[--sp] = rets			  ## tasks.c:3502:0
  10217c:    bf ea 96 f5       	call -0x14d4 <local_irq_disable : 100cac >			  ## tasks.c:3508:15
  102180:    20 00             	csync			  ## tasks.c:3508:15
  102182:    c0 ff 94 bc 02 00 	r0 = 0x2bc94 <CurrentTCB : 2bc94 >			  ## tasks.c:3508:15
  102188:    02 60             	r2 = [r0+0x0] 			  ## tasks.c:3508:15
  10218a:    bf ea 96 f5       	call -0x14d4 <local_irq_enable : 100cba >			  ## tasks.c:3508:15
  10218e:    20 16             	r0 = r2			  ## tasks.c:3510:5
  102190:    00 04             	pc = [sp++]			  ## tasks.c:3510:5


os_init:
  102192:    c0 ff 00 be 02 00 	r0 = 0x2be00 <head : 2be00 >			  ## os_api.c:125:0
  102198:    80 60             	[r0+0x0] = r0			  ## list.h:188:16
  10219a:    80 61             	[r0+0x4] = r0			  ## list.h:189:16
  10219c:    80 00             	rts			  ## os_api.c:128:5


os_get_curr_tcb_var:
  10219e:    c2 ff 94 bc 02 00 	r2 = 0x2bc94 <CurrentTCB : 2bc94 >			  ## os_api.c:132:0
  1021a4:    82 60             	[r0+0x0] = r2			  ## os_api.c:136:17
  1021a6:    c0 ff c0 bc 02 00 	r0 = 0x2bcc0 <highCurrentTCB : 2bcc0 >			  ## os_api.c:137:14
  1021ac:    90 60             	[r1+0x0] = r0			  ## os_api.c:137:14
  1021ae:    80 00             	rts			  ## os_api.c:138:1


xPortStartScheduler:
  1021b0:    10 04             	[--sp] = rets			  ## port.c:267:0
  1021b2:    c0 ff 94 bc 02 00 	r0 = 0x2bc94 <CurrentTCB : 2bc94 >			  ## port.c:272:9
  1021b8:    00 60             	r0 = [r0+0x0] 			  ## port.c:272:9
  1021ba:    00 4a             	if (r0 == 0) goto 0x14 <xPortStartScheduler+0x20 : 1021d0 >			  ## port.c:272:9
  1021bc:    c0 ff c8 bc 02 00 	r0 = 0x2bcc8 <uxCriticalNesting : 2bcc8 >			  ## port.c:283:31
  1021c2:    40 ea 00 00       	[r0+0x0] = 0x0			  ## port.c:283:31
  1021c6:    c0 ff dc bc 02 00 	r0 = 0x2bcdc <vPortStartFirstTask : 2bcdc >			  ## port.c:287:9
  1021cc:    00 60             	r0 = [r0+0x0] 			  ## port.c:287:9
  1021ce:    c0 00             	call r0			  ## port.c:287:9
  1021d0:    40 20             	r0 = 0x0			  ## port.c:298:5
  1021d2:    00 04             	pc = [sp++]			  ## port.c:298:5


os_start:
  1021d4:    74 04             	[--sp] = {rets, r4}			  ## os_api.c:141:0
  1021d6:    e2 9e             	sp += -0x8			  ## os_api.c:141:0
  1021d8:    c0 ff c4 bc 02 00 	r0 = 0x2bcc4 <xIdleTaskHandle : 2bcc4 >			  ## tasks.c:1776:23
  1021de:    42 f0 00 01       	r2 = 0x100  #			  ## tasks.c:1776:23
  1021e2:    80 21             		 [sp+4] = r0			  ## tasks.c:1776:23
  1021e4:    44 20             	r4 = 0x0			  ## tasks.c:1776:23
  1021e6:    c0 ff e6 1e 10 00 	r0 = 0x101ee6 <prvIdleTask : 101ee6 >			  ## tasks.c:1776:23
  1021ec:    c1 ff c1 2c 10 00 	r1 = 0x102cc1 <vTickISR+0x1D4 : 102cc0 >			  ## tasks.c:1776:23
  1021f2:    43 20             	r3 = 0x0			  ## tasks.c:1776:23
  1021f4:    84 20             	[sp] = r4			  ## tasks.c:1776:23
  1021f6:    bf ea f0 fc       	call -0x620 <xTaskCreate : 101bda >			  ## tasks.c:1776:23
  1021fa:    70 f8 17 fe       	if (r0 == -0x1) goto 0x2e <os_start+0x58 : 10222c >			  ## tasks.c:1795:9
  1021fe:    80 f8 22 02       	if (r0 != 0x1) goto 0x44 <os_start+0x72 : 102246 >
  102202:    c0 ff ac bc 02 00 	r0 = 0x2bcac <xNextTaskUnblockTime : 2bcac >			  ## tasks.c:1811:30
  102208:    40 ea ff 03       	[r0+0x0] = 0xFFFFFFFF			  ## tasks.c:1811:30
  10220c:    c0 ff 98 bc 02 00 	r0 = 0x2bc98 <xSchedulerRunning : 2bc98 >			  ## tasks.c:1812:27
  102212:    40 ea 01 00       	[r0+0x0] = 0x1			  ## tasks.c:1812:27
  102216:    c0 ff b0 bc 02 00 	r0 = 0x2bcb0 <xTickCount : 2bcb0 >			  ## tasks.c:1813:20
  10221c:    41 20             	r1 = 0x0			  ## tasks.c:1813:20
  10221e:    81 60             	[r0+0x0] = r1			  ## tasks.c:1813:20
  102220:    c0 ff a8 bc 02 00 	r0 = 0x2bca8 <uxSchedulerSuspended : 2bca8 >			  ## tasks.c:1814:30
  102226:    81 60             	[r0+0x0] = r1			  ## tasks.c:1814:30
  102228:    61 83             	call -0x7a <xPortStartScheduler : 1021b0 >			  ## tasks.c:1824:13
  10222a:    04 8d             	goto 0x1a <os_start+0x72 : 102246 >			  ## tasks.c:1824:13
  10222c:    c0 ff e8 bc 02 00 	r0 = 0x2bce8 <mask_log_e : 2bce8 >			  ## FreeRTOSConfig.h:181:5
  102232:    42 f0 2a 07       	r2 = 0x72a  #			  ## FreeRTOSConfig.h:181:5
  102236:    03 60             		 r3 = [r0+0x0] 			  ## FreeRTOSConfig.h:181:5
  102238:    c0 ff 69 2c 10 00 	r0 = 0x102c69 <vTickISR+0x17C : 102c68 >			  ## FreeRTOSConfig.h:181:5
  10223e:    c1 ff c6 2c 10 00 	r1 = 0x102cc6 <vTickISR+0x1DA : 102cc6 >			  ## FreeRTOSConfig.h:181:5
  102244:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  102246:    02 82             	sp += 0x8
  102248:    54 04             	{pc, r4} = [sp++]			  ## os_api.c:143:1


os_task_create:
  10224a:    77 04             	[--sp] = {rets, r7-r4}			  ## os_api.c:151:0
  10224c:    e2 9d             	sp += -0xc			  ## os_api.c:151:0
  10224e:    14 d6             	r4 = r1  #			  ## os_api.c:151:0
  102250:    01 29             		 r1 = [sp+36]			  ## os_api.c:151:0
  102252:    8d 88             	r5 = sp + 8			  ## os_api.c:151:0
  102254:    b3 d7             	r3 = r3.l (u)  #			  ## os_api.c:156:11
  102256:    85 21             		 [sp+4] = r5			  ## os_api.c:156:11
  102258:    32 d6             	r2 = r3  #			  ## os_api.c:156:11
  10225a:    82 20             		 [sp] = r2			  ## os_api.c:156:11
  10225c:    43 16             	r3 = r4			  ## os_api.c:156:11
  10225e:    bf ea bc fc       	call -0x688 <xTaskCreate : 101bda >			  ## os_api.c:156:11
  102262:    04 16             	r4 = r0			  ## os_api.c:156:11
  102264:    84 f8 25 02       	if (r4 != 0x1) goto 0x4a <os_task_create+0x68 : 1022b2 >
  102268:    06 28             	r6 = [sp+32]
  10226a:    44 20             	r4 = 0x0
  10226c:    16 42             	if (r6 == 0) goto 0x44 <os_task_create+0x68 : 1022b2 >
  10226e:    c0 ff d0 bc 02 00 	r0 = 0x2bcd0 <mask_malloc : 2bcd0 >			  ## mask_export.c:27:12
  102274:    00 f1 5c 60       	r0 = r6 + 0x5c  #			  ## os_api.c:162:66
  102278:    01 60             		 r1 = [r0+0x0] 			  ## mask_export.c:27:12
  10227a:    c1 00             	call r1			  ## mask_export.c:27:12
  10227c:    05 d6             	r5 = r0  #			  ## mask_export.c:27:12
  10227e:    01 22             		 r1 = [sp+8]			  ## os_api.c:163:20
  102280:    47 25             	r7 = 0x5			  ## os_api.c:164:9
  102282:    40 24             	r0 = 0x4			  ## os_api.c:164:9
  102284:    f4 f1 61 00       	r0 = r6 / r0 (s)  #			  ## os_api.c:164:9
  102288:    d1 62             		 [r5+0x8] = r1			  ## os_api.c:163:18
  10228a:    02 f1 5c 50       	r2 = r5 + 0x5c  #			  ## os_api.c:164:9
  10228e:    87 20             		 [sp] = r7			  ## os_api.c:164:9
  102290:    5b 8c             	r3 = r5 + 0xc			  ## os_api.c:164:9
  102292:    41 24             	r1 = 0x4			  ## os_api.c:164:9
  102294:    bf ea 84 f6       	call -0x12f8 <xQueueGenericCreateStatic : 100fa0 >			  ## os_api.c:164:9
  102298:    bf ea 08 f5       	call -0x15f0 <local_irq_disable : 100cac >			  ## os_api.c:46:5
  10229c:    20 00             	csync			  ## os_api.c:46:5
  10229e:    c0 ff 00 be 02 00 	r0 = 0x2be00 <head : 2be00 >			  ## list.h:219:33
  1022a4:    01 60             	r1 = [r0+0x0] 			  ## list.h:219:33
  1022a6:    95 61             	[r1+0x4] = r5			  ## list.h:137:16
  1022a8:    d1 60             	[r5+0x0] = r1			  ## list.h:138:16
  1022aa:    d0 61             	[r5+0x4] = r0			  ## list.h:139:16
  1022ac:    85 60             	[r0+0x0] = r5			  ## list.h:140:16
  1022ae:    bf ea 04 f5       	call -0x15f8 <local_irq_enable : 100cba >			  ## os_api.c:50:5
  1022b2:    40 16             	r0 = r4			  ## os_api.c:169:1
  1022b4:    02 83             	sp += 0xc			  ## os_api.c:169:1
  1022b6:    57 04             	{pc, r7-r4} = [sp++]			  ## os_api.c:169:1


os_current_task:
  1022b8:    10 04             	[--sp] = rets			  ## os_api.c:173:0
  1022ba:    bf ea 5e ff       	call -0x144 <xTaskGetCurrentTaskHandle : 10217a >			  ## os_api.c:174:25
  1022be:    bf ea 76 fe       	call -0x314 <pcTaskGetName : 101fae >			  ## os_api.c:175:24
  1022c2:    00 04             	pc = [sp++]			  ## os_api.c:177:5


os_time_dly:
  1022c4:    10 04             	[--sp] = rets			  ## os_api.c:182:0
  1022c6:    02 16             	r2 = r0			  ## os_api.c:182:0
  1022c8:    02 49             	if (r2 == 0) goto 0x12 <os_time_dly+0x18 : 1022dc >			  ## os_api.c:182:0
  1022ca:    bf ea 4b f7       	call -0x116a <vTaskSuspendAll : 101164 >			  ## tasks.c:1234:9
  1022ce:    41 20             	r1 = 0x0			  ## tasks.c:1245:13
  1022d0:    20 16             	r0 = r2			  ## tasks.c:1245:13
  1022d2:    bf ea d3 f7       	call -0x105a <prvAddCurrentTaskToDelayedList : 10127c >			  ## tasks.c:1245:13
  1022d6:    bf ea 22 f9       	call -0xdbc <xTaskResumeAll : 10151e >			  ## tasks.c:1247:27
  1022da:    80 42             	if (r0 != 0) goto 0x4 <os_time_dly+0x1C : 1022e0 >
  1022dc:    bf ea 02 f6       	call -0x13fc <vPortYield : 100ee4 >			  ## tasks.c:1256:9
  1022e0:    00 04             	pc = [sp++]			  ## os_api.c:184:1


os_time_get:
  1022e2:    c0 ff b0 bc 02 00 	r0 = 0x2bcb0 <xTickCount : 2bcb0 >			  ## os_api.c:188:0
  1022e8:    00 60             	r0 = [r0+0x0] 			  ## tasks.c:2028:18
  1022ea:    80 00             	rts			  ## os_api.c:190:5


get_taskq:
  1022ec:    10 04             	[--sp] = rets			  ## os_api.c:54:0
  1022ee:    01 16             	r1 = r0			  ## os_api.c:54:0
  1022f0:    bf ea dc f4       	call -0x1648 <local_irq_disable : 100cac >			  ## os_api.c:57:5
  1022f4:    c0 ff 00 be 02 00 	r0 = 0x2be00 <head : 2be00 >			  ## os_api.c:57:5
  1022fa:    20 00             	csync			  ## os_api.c:57:5
  1022fc:    02 16             	r2 = r0			  ## os_api.c:57:5
  1022fe:    22 60             	r2 = [r2+0x0] 
  102300:    00 e8 07 20       	if (r2 == r0) goto 0xe <get_taskq+0x26 : 102312 >			  ## os_api.c:58:5
  102304:    23 62             	r3 = [r2+0x8] 			  ## os_api.c:59:16
  102306:    81 e8 fa 31       	if (r3 != r1) goto -0xc <get_taskq+0x12 : 1022fe >			  ## os_api.c:59:16
  10230a:    bf ea d6 f4       	call -0x1654 <local_irq_enable : 100cba >			  ## os_api.c:60:13
  10230e:    28 8c             	r0 = r2 + 0xc			  ## os_api.c:61:32
  102310:    00 04             	pc = [sp++]			  ## os_api.c:67:1
  102312:    bf ea d2 f4       	call -0x165c <local_irq_enable : 100cba >			  ## os_api.c:64:5
  102316:    40 20             	r0 = 0x0
  102318:    00 04             	pc = [sp++]			  ## os_api.c:67:1


free_taskq:
  10231a:    10 04             	[--sp] = rets			  ## os_api.c:70:0
  10231c:    01 16             	r1 = r0			  ## os_api.c:70:0
  10231e:    bf ea c5 f4       	call -0x1676 <local_irq_disable : 100cac >			  ## os_api.c:73:5
  102322:    c0 ff 00 be 02 00 	r0 = 0x2be00 <head : 2be00 >			  ## os_api.c:73:5
  102328:    20 00             	csync			  ## os_api.c:73:5
  10232a:    02 16             	r2 = r0			  ## os_api.c:73:5
  10232c:    22 60             	r2 = [r2+0x0] 
  10232e:    00 e8 12 20       	if (r2 == r0) goto 0x24 <free_taskq+0x3C : 102356 >			  ## os_api.c:74:5
  102332:    23 62             	r3 = [r2+0x8] 			  ## os_api.c:75:16
  102334:    81 e8 fa 31       	if (r3 != r1) goto -0xc <free_taskq+0x12 : 10232c >			  ## os_api.c:75:16
  102338:    50 ec 20 00       	r1_r0 = d[r2+0x0]			  ## list.h:171:36
  10233c:    81 61             	[r0+0x4] = r1			  ## list.h:159:16
  10233e:    90 60             	[r1+0x0] = r0			  ## list.h:160:16
  102340:    a2 60             	[r2+0x0] = r2			  ## list.h:172:17
  102342:    a2 61             	[r2+0x4] = r2			  ## list.h:173:17
  102344:    bf ea b9 f4       	call -0x168e <local_irq_enable : 100cba >			  ## os_api.c:77:13
  102348:    c0 ff cc bc 02 00 	r0 = 0x2bccc <mask_free : 2bccc >			  ## mask_export.c:23:5
  10234e:    20 d6             	r0 = r2  #			  ## mask_export.c:23:5
  102350:    01 60             		 r1 = [r0+0x0] 			  ## mask_export.c:23:5
  102352:    88 04             	{rets} = [sp++]			  ## mask_export.c:23:5
  102354:    d1 00             	goto r1			  ## mask_export.c:23:5
  102356:    88 04             	{rets} = [sp++]			  ## os_api.c:82:5
  102358:    ff ea af f4       	goto -0x16a2 <local_irq_enable : 100cba >			  ## os_api.c:82:5


os_task_del_req:
  10235c:    76 04             	[--sp] = {rets, r6-r4}			  ## os_api.c:194:0
  10235e:    06 16             	r6 = r0			  ## os_api.c:194:0
  102360:    06 f8 03 02       	if (r6 == 0x1) goto 0x6 <os_task_del_req+0xE : 10236a >			  ## os_api.c:194:0
  102364:    bf ea 67 fe       	call -0x332 <xTaskGetHandle : 102036 >			  ## os_api.c:203:16
  102368:    04 82             	goto 0x4 <os_task_del_req+0x12 : 10236e >			  ## os_api.c:203:16
  10236a:    bf ea 06 ff       	call -0x1f4 <xTaskGetCurrentTaskHandle : 10217a >			  ## os_api.c:201:16
  10236e:    04 16             	r4 = r0
  102370:    04 4e             	if (r4 == 0) goto 0x1c <os_task_del_req+0x32 : 10238e >
  102372:    bf ea d2 fe       	call -0x25c <xTaskGetApplicationTaskTag : 10211a >			  ## os_api.c:206:15
  102376:    05 16             	r5 = r0			  ## os_api.c:206:15
  102378:    05 f8 0b 04       	if (r5 == 0x2) goto 0x16 <os_task_del_req+0x36 : 102392 >
  10237c:    06 f8 14 02       	if (r6 == 0x1) goto 0x28 <os_task_del_req+0x4C : 1023a8 >
  102380:    b5 e8 01 80       	if (r5 != 0x1) {
  102384:    41 21             		r1 = 0x1			  ## os_api.c:219:13
  102386:    40 16             		r0 = r4			  ## os_api.c:219:13
  102388:    bf ea b2 fe       		call -0x29c
                               	} <vTaskSetApplicationTaskTag : 1020f0 >			  ## os_api.c:219:13
  10238c:    04 8d             	goto 0x1a <os_task_del_req+0x4C : 1023a8 >			  ## os_api.c:219:13
  10238e:    45 20             	r5 = 0x0
  102390:    04 8b             	goto 0x16 <os_task_del_req+0x4C : 1023a8 >
  102392:    40 16             	r0 = r4			  ## os_api.c:208:21
  102394:    51 8b             	call -0xaa <get_taskq : 1022ec >			  ## os_api.c:208:21
  102396:    00 44             	if (r0 == 0) goto 0x8 <os_task_del_req+0x44 : 1023a0 >
  102398:    bf ea 02 fc       	call -0x7fc <vQueueDelete : 101ba0 >			  ## os_api.c:210:17
  10239c:    40 16             	r0 = r4			  ## os_api.c:211:17
  10239e:    51 9d             	call -0x86 <free_taskq : 10231a >			  ## os_api.c:211:17
  1023a0:    40 16             	r0 = r4			  ## os_api.c:214:13
  1023a2:    bf ea 18 fd       	call -0x5d0 <vTaskDelete : 101dd6 >			  ## os_api.c:214:13
  1023a6:    45 2e             	r5 = 0xe			  ## os_api.c:214:13
  1023a8:    50 16             	r0 = r5			  ## os_api.c:223:1
  1023aa:    56 04             	{pc, r6-r4} = [sp++]			  ## os_api.c:223:1


os_task_del_res:
  1023ac:    10 04             	[--sp] = rets			  ## os_api.c:226:0
  1023ae:    bf ea e4 fe       	call -0x238 <xTaskGetCurrentTaskHandle : 10217a >			  ## os_api.c:231:12
  1023b2:    41 22             	r1 = 0x2			  ## os_api.c:232:5
  1023b4:    bf ea 9c fe       	call -0x2c8 <vTaskSetApplicationTaskTag : 1020f0 >			  ## os_api.c:232:5
  1023b8:    10 3f             	r0 = -0x1			  ## os_api.c:233:5
  1023ba:    41 84             	call -0xf8 <os_time_dly : 1022c4 >			  ## os_api.c:233:5
  1023bc:    40 20             	r0 = 0x0			  ## os_api.c:235:5
  1023be:    00 04             	pc = [sp++]			  ## os_api.c:235:5


os_task_del:
  1023c0:    75 04             	[--sp] = {rets, r5, r4}			  ## os_api.c:239:0
  1023c2:    bf ea 38 fe       	call -0x390 <xTaskGetHandle : 102036 >			  ## os_api.c:245:12
  1023c6:    04 16             	r4 = r0			  ## os_api.c:245:12
  1023c8:    04 4b             	if (r4 == 0) goto 0x16 <os_task_del+0x20 : 1023e0 >
  1023ca:    41 90             	call -0xe0 <get_taskq : 1022ec >			  ## os_api.c:247:17
  1023cc:    05 16             	r5 = r0			  ## os_api.c:247:17
  1023ce:    40 16             	r0 = r4			  ## os_api.c:248:9
  1023d0:    bf ea 01 fd       	call -0x5fe <vTaskDelete : 101dd6 >			  ## os_api.c:248:9
  1023d4:    05 45             	if (r5 == 0) goto 0xa <os_task_del+0x20 : 1023e0 >			  ## os_api.c:248:9
  1023d6:    50 16             	r0 = r5			  ## os_api.c:250:13
  1023d8:    bf ea e2 fb       	call -0x83c <vQueueDelete : 101ba0 >			  ## os_api.c:250:13
  1023dc:    40 16             	r0 = r4			  ## os_api.c:251:13
  1023de:    41 9d             	call -0xc6 <free_taskq : 10231a >			  ## os_api.c:251:13
  1023e0:    40 20             	r0 = 0x0			  ## os_api.c:254:5
  1023e2:    55 04             	{pc, r5, r4} = [sp++]			  ## os_api.c:254:5


os_sem_post:
  1023e4:    78 04             	[--sp] = {rets, r8-r4}			  ## os_api.c:571:0
  1023e6:    64 e0 00 1b       	r1 = icfg			  ## cpu.h:73:5
  1023ea:    04 16             	r4 = r0
  1023ec:    60 ff ff 10 35 00 	if ((r1 & 0xFF) == 0) goto 0x6a <os_sem_post+0x78 : 10245c >			  ## os_api.c:574:9
  1023f2:    c5 ff e8 bc 02 00 	r5 = 0x2bce8 <mask_log_e : 2bce8 >
  1023f8:    c8 ff 1f 2b 10 00 	r8 = 0x102b1f <vTickISR+0x32 : 102b1e >
  1023fe:    c6 ff d6 2b 10 00 	r6 = 0x102bd6 <vTickISR+0xEA : 102bd6 >
  102404:    84 46             	if (r4 != 0) goto 0xc <os_sem_post+0x2E : 102412 >
  102406:    42 f0 e4 03       	r2 = 0x3e4  #			  ## FreeRTOSConfig.h:181:5
  10240a:    53 60             		 r3 = [r5+0x0] 			  ## FreeRTOSConfig.h:181:5
  10240c:    80 16             	r0 = r8			  ## FreeRTOSConfig.h:181:5
  10240e:    61 16             	r1 = r6			  ## FreeRTOSConfig.h:181:5
  102410:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  102412:    07 e1 40 40       	r7 = r4 + 0x40
  102416:    70 60             	r0 = [r7+0x0] 			  ## queue.c:1000:5
  102418:    00 46             	if (r0 == 0) goto 0xc <os_sem_post+0x42 : 102426 >			  ## queue.c:1000:5
  10241a:    42 f0 e8 03       	r2 = 0x3e8  #			  ## FreeRTOSConfig.h:181:5
  10241e:    53 60             		 r3 = [r5+0x0] 			  ## FreeRTOSConfig.h:181:5
  102420:    80 16             	r0 = r8			  ## FreeRTOSConfig.h:181:5
  102422:    61 16             	r1 = r6			  ## FreeRTOSConfig.h:181:5
  102424:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  102426:    40 60             	r0 = [r4+0x0] 			  ## queue.c:1005:5
  102428:    80 48             	if (r0 != 0) goto 0x10 <os_sem_post+0x56 : 10243a >			  ## queue.c:1005:5
  10242a:    40 61             	r0 = [r4+0x4] 			  ## queue.c:1005:5
  10242c:    00 46             	if (r0 == 0) goto 0xc <os_sem_post+0x56 : 10243a >			  ## queue.c:1005:5
  10242e:    42 f0 ed 03       	r2 = 0x3ed  #			  ## FreeRTOSConfig.h:181:5
  102432:    53 60             		 r3 = [r5+0x0] 			  ## FreeRTOSConfig.h:181:5
  102434:    80 16             	r0 = r8			  ## FreeRTOSConfig.h:181:5
  102436:    61 16             	r1 = r6			  ## FreeRTOSConfig.h:181:5
  102438:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  10243a:    bf ea 37 f4       	call -0x1792 <local_irq_disable : 100cac >			  ## queue.c:1023:5
  10243e:    20 00             	csync			  ## queue.c:1023:5
  102440:    50 ec 48 03       	r1_r0 = d[r4+0x38]			  ## queue.c:1027:56
  102444:    45 20             	r5 = 0x0
  102446:    01 e9 16 00       	if (r0 >= r1) goto 0x2c <os_sem_post+0x92 : 102476 >
  10244a:    79 45             	r1 = b[r7+0x5] (u)			  ## queue.c:1033:45
  10244c:    c0 21             	r0 += 0x1			  ## queue.c:1043:60
  10244e:    c0 6e             	[r4+0x38] = r0			  ## queue.c:1043:40
  102450:    11 f8 0a fe       	if (r1 == 0xff) goto 0x14 <os_sem_post+0x84 : 102468 >			  ## queue.c:1043:40
  102454:    18 81             	r0 = r1 + 0x1			  ## queue.c:1107:53
  102456:    f8 45             	b[r7+0x5] = r0			  ## queue.c:1107:34
  102458:    45 21             	r5 = 0x1			  ## queue.c:1107:34
  10245a:    04 8d             	goto 0x1a <os_sem_post+0x92 : 102476 >			  ## queue.c:1107:34
  10245c:    41 20             	r1 = 0x0			  ## os_api.c:578:15
  10245e:    82 14             	r3_r2 = 0			  ## os_api.c:578:15
  102460:    bf ea c7 f8       	call -0xe72 <xQueueGenericSend : 1015f2 >			  ## os_api.c:578:15
  102464:    05 16             	r5 = r0			  ## os_api.c:578:15
  102466:    04 8b             	goto 0x16 <os_sem_post+0x9A : 10247e >
  102468:    d0 ec 46 02       	r0 = [++r4=0x24]			  ## queue.c:1085:25
  10246c:    45 21             	r5 = 0x1
  10246e:    00 43             	if (r0 == 0) goto 0x6 <os_sem_post+0x92 : 102476 >
  102470:    40 16             	r0 = r4			  ## queue.c:1087:29
  102472:    bf ea a7 f4       	call -0x16b2 <xTaskRemoveFromEventList : 100dc4 >			  ## queue.c:1087:29
  102476:    bf ea 20 f4       	call -0x17c0 <local_irq_enable : 100cba >			  ## queue.c:1118:5
  10247a:    bf ea 33 f5       	call -0x159a <vPortYield : 100ee4 >			  ## os_api.c:576:9
  10247e:    40 20             	r0 = 0x0			  ## os_api.c:581:12
  102480:    b5 e8 01 00       	if (r5 != 0x1) {			  ## os_api.c:581:12
  102484:    10 32             		r0 = -0xe
                               	}			  ## os_api.c:581:12
  102486:    58 04             	{pc, r8-r4} = [sp++]			  ## os_api.c:581:5


__os_taskq_pend:
  102488:    7a 04             	[--sp] = {rets, r10-r4}			  ## os_api.c:263:0
  10248a:    e2 9f             	sp += -0x4			  ## os_api.c:263:0
  10248c:    29 16             	r9 = r2			  ## os_api.c:263:0
  10248e:    05 16             	r5 = r0			  ## os_api.c:263:0
  102490:    bf ea 73 fe       	call -0x31a <xTaskGetCurrentTaskHandle : 10217a >			  ## os_api.c:267:25
  102494:    07 16             	r7 = r0			  ## os_api.c:267:25
  102496:    04 83             	goto 0x6 <__os_taskq_pend+0x16 : 10249e >
  102498:    40 22             	r0 = 0x2			  ## os_api.c:273:9
  10249a:    bf ea 13 ff       	call -0x1da <os_time_dly : 1022c4 >			  ## os_api.c:273:9
  10249e:    70 16             	r0 = r7			  ## os_api.c:270:17
  1024a0:    bf ea 24 ff       	call -0x1b8 <get_taskq : 1022ec >			  ## os_api.c:270:17
  1024a4:    06 16             	r6 = r0			  ## os_api.c:270:17
  1024a6:    76 58             	if (r6 == 0) goto -0x10 <__os_taskq_pend+0x10 : 102498 >			  ## os_api.c:272:9
  1024a8:    0a e1 04 50       	r10 = r5 + 0x4
  1024ac:    08 e1 10 50       	r8 = r5 + 0x10
  1024b0:    34 81             	goto 0xc2 <__os_taskq_pend+0xEC : 102574 >
  1024b2:    bf ea fb f3       	call -0x180a <local_irq_disable : 100cac >			  ## os_api.c:289:9
  1024b6:    20 00             	csync			  ## os_api.c:289:9
  1024b8:    60 16             	r0 = r6			  ## os_api.c:291:13
  1024ba:    bf ea 2d fb       	call -0x9a6 <uxQueueMessagesWaiting : 101b18 >			  ## os_api.c:291:13
  1024be:    10 58             	if (r0 == 0) goto 0x70 <__os_taskq_pend+0xA8 : 102530 >			  ## os_api.c:291:13
  1024c0:    89 80             	r1 = sp + 0
  1024c2:    42 20             	r2 = 0x0			  ## os_api.c:296:15
  1024c4:    44 20             	r4 = 0x0			  ## os_api.c:296:15
  1024c6:    60 16             	r0 = r6			  ## os_api.c:296:15
  1024c8:    bf ea e5 fa       	call -0xa36 <xQueueReceiveFromISR : 101a96 >			  ## os_api.c:296:15
  1024cc:    a7 d6             	r7 = r10  #			  ## os_api.c:302:34
  1024ce:    00 20             		 r0 = [sp]			  ## os_api.c:300:24
  1024d0:    81 a8             	r1 = r0 >> 0x8			  ## os_api.c:300:24
  1024d2:    d1 60             	[r5+0x0] = r1			  ## os_api.c:300:17
  1024d4:    04 88             	goto 0x10 <__os_taskq_pend+0x5E : 1024e6 >			  ## os_api.c:300:17
  1024d6:    42 20             	r2 = 0x0			  ## os_api.c:303:19
  1024d8:    60 15             	r1_r0 = r7_r6			  ## os_api.c:303:19
  1024da:    bf ea dc fa       	call -0xa48 <xQueueReceiveFromISR : 101a96 >			  ## os_api.c:303:19
  1024de:    dc e9 00 00       	r0 = b[sp] (u)			  ## os_api.c:303:19
  1024e2:    c7 24             	r7 += 0x4			  ## os_api.c:302:9
  1024e4:    c4 21             	r4 += 0x1			  ## os_api.c:302:41
  1024e6:    00 17             	r0 = r0.b0 (u)			  ## os_api.c:302:34
  1024e8:    80 ed f5 41       	ifs (r4 < r0) goto -0x16 <__os_taskq_pend+0x4E : 1024d6 >			  ## os_api.c:302:9
  1024ec:    bf ea e5 f3       	call -0x1836 <local_irq_enable : 100cba >			  ## os_api.c:307:9
  1024f0:    50 60             	r0 = [r5+0x0] 			  ## os_api.c:309:14
  1024f2:    60 e1 70 08       	r0 = r0 & 0xF00000			  ## os_api.c:309:22
  1024f6:    21 ff 40 09 45 00 	if (r0 != 0x300000) goto 0x8a <__os_taskq_pend+0xFE : 102586 >			  ## os_api.c:309:22
  1024fc:    50 62             	r0 = [r5+0x8] 			  ## os_api.c:88:19
  1024fe:    04 17             	r4 = r0.b0 (u)			  ## os_api.c:88:27
  102500:    4f 81             	r7 = r4 + 0x1			  ## os_api.c:92:18
  102502:    41 16             	r1 = r4			  ## os_api.c:91:9
  102504:    30 ea 80 0f       	if ((r0 & 0x100) != 0) {			  ## os_api.c:91:9
  102508:    71 16             		r1 = r7
                               	}			  ## os_api.c:91:9
  10250a:    dc e9 00 20       	r2 = b[sp] (u)			  ## os_api.c:312:32
  10250e:    b3 e1 84 04       	r3 = uextra(r0, p:0x9, l:0x1)			  ## os_api.c:94:9
  102512:    33 21             	r3 |= 0x2			  ## os_api.c:94:9
  102514:    31 18             	r1 += r3			  ## os_api.c:100:26
  102516:    c2 21             	r2 += 0x1			  ## os_api.c:312:37
  102518:    02 e9 2c 10       	if (r1 >= r2) goto 0x58 <__os_taskq_pend+0xEC : 102574 >			  ## os_api.c:312:37
  10251c:    01 17             	r1 = r0.b0 (u)			  ## os_api.c:101:13
  10251e:    01 f8 0a 04       	if (r1 == 0x2) goto 0x14 <__os_taskq_pend+0xAE : 102536 >			  ## os_api.c:101:13
  102522:    81 f8 10 02       	if (r1 != 0x1) goto 0x20 <__os_taskq_pend+0xBE : 102546 >
  102526:    50 63             	r0 = [r5+0xc] 			  ## os_api.c:102:43
  102528:    d0 ec a0 10       	r1 = [r10+0x0]			  ## os_api.c:102:34
  10252c:    c1 00             	call r1			  ## os_api.c:102:19
  10252e:    04 92             	goto 0x24 <__os_taskq_pend+0xCC : 102554 >
  102530:    bf ea c3 f3       	call -0x187a <local_irq_enable : 100cba >			  ## os_api.c:292:13
  102534:    04 9f             	goto 0x3e <__os_taskq_pend+0xEC : 102574 >			  ## os_api.c:292:13
  102536:    50 e8 06 52       	if ((r0 & 0x400) != 0) goto 0xc <__os_taskq_pend+0xBE : 102546 >
  10253a:    50 ec 5c 00       	r1_r0 = d[r5+0xc]			  ## os_api.c:104:57
  10253e:    d0 ec a0 20       	r2 = [r10+0x0]			  ## os_api.c:104:39
  102542:    c2 00             	call r2			  ## os_api.c:104:19
  102544:    04 87             	goto 0xe <__os_taskq_pend+0xCC : 102554 >
  102546:    31 f1 ff 4f       	r1 = r4 + -0x1  #			  ## os_api.c:106:72
  10254a:    50 63             		 r0 = [r5+0xc] 			  ## os_api.c:106:55
  10254c:    d0 ec a0 30       	r3 = [r10+0x0]			  ## os_api.c:106:46
  102550:    82 16             	r2 = r8			  ## os_api.c:106:19
  102552:    c3 00             	call r3			  ## os_api.c:106:19
  102554:    51 62             	r1 = [r5+0x8] 			  ## os_api.c:108:13
  102556:    31 ea 80 df       	if ((r1 & 0x100) != 0) {			  ## os_api.c:108:13
  10255a:    59 8c             		r1 = r5 + 0xc			  ## os_api.c:110:21
  10255c:    d8 ec 1a 14       		r1 = [r1+r4<<2]			  ## os_api.c:110:21
  102560:    90 60             		[r1+0x0] = r0			  ## os_api.c:110:39
  102562:    51 62             		r1 = [r5+0x8] 
                               	} else {			  ## os_api.c:110:39
  102564:    47 16             		r7 = r4
                               	}			  ## os_api.c:110:39
  102566:    51 e8 05 48       	if ((r1 & 0x200) == 0) goto 0xa <__os_taskq_pend+0xEC : 102574 >			  ## os_api.c:110:39
  10256a:    58 8c             	r0 = r5 + 0xc			  ## os_api.c:114:35
  10256c:    d8 ec 0a 07       	r0 = [r0+r7<<2]			  ## os_api.c:114:35
  102570:    bf ea 38 ff       	call -0x190 <os_sem_post : 1023e4 >			  ## os_api.c:114:13
  102574:    89 80             	r1 = sp + 0
  102576:    43 21             	r3 = 0x1			  ## os_api.c:284:15
  102578:    60 16             	r0 = r6			  ## os_api.c:284:15
  10257a:    92 16             	r2 = r9			  ## os_api.c:284:15
  10257c:    bf ea 0e f9       	call -0xde4 <xQueueGenericReceive : 10179c >			  ## os_api.c:284:15
  102580:    c0 58             	if (r0 != 0) goto -0xd0 <__os_taskq_pend+0x2A : 1024b2 >
  102582:    40 36             	r0 = 0x16
  102584:    04 81             	goto 0x2 <__os_taskq_pend+0x100 : 102588 >
  102586:    40 2d             	r0 = 0xd
  102588:    02 81             	sp += 0x4
  10258a:    5a 04             	{pc, r10-r4} = [sp++]			  ## os_api.c:316:1


os_taskq_pend:
  10258c:    12 3f             	r2 = -0x1			  ## os_api.c:319:0
  10258e:    10 16             	r0 = r1			  ## os_api.c:320:12
  102590:    b7 9b             	goto -0x10a <__os_taskq_pend : 102488 >			  ## os_api.c:320:12


os_task_pend:
  102592:    12 3f             	r2 = -0x1			  ## os_api.c:324:0
  102594:    10 16             	r0 = r1			  ## os_api.c:325:12
  102596:    b7 98             	goto -0x110 <__os_taskq_pend : 102488 >			  ## os_api.c:325:12


__os_taskq_post:
  102598:    77 04             	[--sp] = {rets, r7-r4}			  ## os_api.c:329:0
  10259a:    e2 9e             	sp += -0x8			  ## os_api.c:329:0
  10259c:    34 16             	r4 = r3			  ## os_api.c:329:0
  10259e:    25 16             	r5 = r2			  ## os_api.c:329:0
  1025a0:    17 16             	r7 = r1			  ## os_api.c:329:0
  1025a2:    bf ea 48 fd       	call -0x570 <xTaskGetHandle : 102036 >			  ## os_api.c:336:12
  1025a6:    00 55             	if (r0 == 0) goto 0x2a <__os_taskq_post+0x3A : 1025d2 >
  1025a8:    bf ea a0 fe       	call -0x2c0 <get_taskq : 1022ec >			  ## os_api.c:342:13
  1025ac:    06 16             	r6 = r0			  ## os_api.c:342:13
  1025ae:    06 53             	if (r6 == 0) goto 0x26 <__os_taskq_post+0x3E : 1025d6 >
  1025b0:    50 17             	r0 = r5.b0 (u)			  ## os_api.c:346:15
  1025b2:    a0 e1 60 74       	r0 <= insert(r7, p:0x8, l:0x18)			  ## os_api.c:347:15
  1025b6:    80 21             	[sp+4] = r0			  ## os_api.c:347:15
  1025b8:    bf ea 78 f3       	call -0x1910 <local_irq_disable : 100cac >			  ## os_api.c:349:5
  1025bc:    20 00             	csync			  ## os_api.c:349:5
  1025be:    60 16             	r0 = r6			  ## os_api.c:351:9
  1025c0:    bf ea c2 fa       	call -0xa7c <uxQueueSpacesAvailable : 101b48 >			  ## os_api.c:351:9
  1025c4:    59 81             	r1 = r5 + 0x1			  ## os_api.c:351:46
  1025c6:    01 e9 08 00       	if (r0 >= r1) goto 0x10 <__os_taskq_post+0x42 : 1025da >			  ## os_api.c:351:9
  1025ca:    bf ea 76 f3       	call -0x1914 <local_irq_enable : 100cba >			  ## os_api.c:352:9
  1025ce:    40 35             	r0 = 0x15			  ## os_api.c:352:9
  1025d0:    04 9b             	goto 0x36 <__os_taskq_post+0x70 : 102608 >			  ## os_api.c:352:9
  1025d2:    40 2e             	r0 = 0xe
  1025d4:    04 99             	goto 0x32 <__os_taskq_post+0x70 : 102608 >
  1025d6:    40 24             	r0 = 0x4
  1025d8:    04 97             	goto 0x2e <__os_taskq_post+0x70 : 102608 >
  1025da:    89 84             	r1 = sp + 4
  1025dc:    8a 80             	r2 = sp + 0
  1025de:    43 20             	r3 = 0x0			  ## os_api.c:357:11
  1025e0:    47 20             	r7 = 0x0			  ## os_api.c:357:11
  1025e2:    60 16             	r0 = r6			  ## os_api.c:357:11
  1025e4:    bf ea 02 fa       	call -0xbfc <xQueueGenericSendFromISR : 1019ec >			  ## os_api.c:357:11
  1025e8:    04 88             	goto 0x10 <__os_taskq_post+0x62 : 1025fa >
  1025ea:    8a 80             	r2 = sp + 0
  1025ec:    43 20             	r3 = 0x0			  ## os_api.c:359:15
  1025ee:    60 16             	r0 = r6			  ## os_api.c:359:15
  1025f0:    41 16             	r1 = r4			  ## os_api.c:359:15
  1025f2:    bf ea fb f9       	call -0xc0a <xQueueGenericSendFromISR : 1019ec >			  ## os_api.c:359:15
  1025f6:    c4 24             	r4 += 0x4			  ## os_api.c:358:5
  1025f8:    c7 21             	r7 += 0x1			  ## os_api.c:358:32
  1025fa:    85 ed f6 71       	ifs (r7 < r5) goto -0x14 <__os_taskq_post+0x52 : 1025ea >			  ## os_api.c:358:5
  1025fe:    bf ea 5c f3       	call -0x1948 <local_irq_enable : 100cba >			  ## os_api.c:362:5
  102602:    bf ea 6f f4       	call -0x1722 <vPortYield : 100ee4 >			  ## os_api.c:364:5
  102606:    40 20             	r0 = 0x0			  ## os_api.c:364:5
  102608:    02 82             	sp += 0x8
  10260a:    57 04             	{pc, r7-r4} = [sp++]			  ## os_api.c:367:1


os_taskq_post:
  10260c:    62 04             	[--sp] = {r3, r2}			  ## os_api.c:370:0
  10260e:    74 04             	[--sp] = {rets, r4}			  ## os_api.c:370:0
  102610:    e2 97             	sp += -0x24			  ## os_api.c:370:0
  102612:    14 16             	r4 = r1			  ## os_api.c:370:0
  102614:    a9 8c             	r1 = sp + 44			  ## os_api.c:370:0
  102616:    81 20             	[sp] = r1			  ## os_api.c:374:5
  102618:    41 20             	r1 = 0x0
  10261a:    04 88             	goto 0x10 <os_taskq_post+0x20 : 10262c >
  10261c:    02 20             	r2 = [sp]			  ## os_api.c:376:19
  10261e:    2b 84             	r3 = r2 + 0x4			  ## os_api.c:376:19
  102620:    83 20             	[sp] = r3			  ## os_api.c:376:19
  102622:    22 60             	r2 = [r2+0x0] 			  ## os_api.c:376:19
  102624:    8b 84             	r3 = sp + 4			  ## os_api.c:376:19
  102626:    d8 ec 3b 21       	[r3+r1<<2] = r2			  ## os_api.c:376:17
  10262a:    c1 21             	r1 += 0x1			  ## os_api.c:375:32
  10262c:    84 ed f6 11       	ifs (r1 < r4) goto -0x14 <os_taskq_post+0x10 : 10261c >			  ## os_api.c:375:5
  102630:    8b 84             	r3 = sp + 4
  102632:    60 e0 80 18       	r1 = 0x400000			  ## os_api.c:379:12
  102636:    42 16             	r2 = r4			  ## os_api.c:379:12
  102638:    51 8f             	call -0xa2 <__os_taskq_post : 102598 >			  ## os_api.c:379:12
  10263a:    02 89             	sp += 0x24
  10263c:    34 04             	{rets, r4} = [sp++]			  ## os_api.c:379:5
  10263e:    02 82             	sp += 0x8			  ## os_api.c:379:5
  102640:    80 00             	rts			  ## os_api.c:379:5


os_taskq_post_type:
  102642:    d7 8a             	goto -0xac <__os_taskq_post : 102598 >			  ## os_api.c:383:0


os_taskq_flush:
  102644:    7b 04             	[--sp] = {rets, r11-r4}			  ## os_api.c:388:0
  102646:    e2 93             	sp += -0x34			  ## os_api.c:388:0
  102648:    bf ea 97 fd       	call -0x4d2 <xTaskGetCurrentTaskHandle : 10217a >			  ## os_api.c:395:12
  10264c:    20 57             	if (r0 == 0) goto 0xae <os_taskq_flush+0xB8 : 1026fc >
  10264e:    bf ea 4d fe       	call -0x366 <get_taskq : 1022ec >			  ## os_api.c:399:13
  102652:    04 16             	r4 = r0			  ## os_api.c:399:13
  102654:    24 51             	if (r4 == 0) goto 0xa2 <os_taskq_flush+0xB4 : 1026f8 >
  102656:    bf ea 29 f3       	call -0x19ae <local_irq_disable : 100cac >			  ## os_api.c:404:5
  10265a:    20 00             	csync			  ## os_api.c:404:5
  10265c:    40 16             	r0 = r4			  ## os_api.c:406:20
  10265e:    bf ea 5b fa       	call -0xb4a <uxQueueMessagesWaiting : 101b18 >			  ## os_api.c:406:20
  102662:    05 16             	r5 = r0			  ## os_api.c:406:20
  102664:    f8 e8 04 b0       	r11 = sp + 4
  102668:    49 e0 f2 ff       	r9 = -0xe
  10266c:    ca ff e8 bc 02 00 	r10 = 0x2bce8 <mask_log_e : 2bce8 >
  102672:    c8 ff 82 2d 10 00 	r8 = 0x102d82 <vTickISR+0x296 : 102d82 >
  102678:    14 9c             	goto 0x78 <os_taskq_flush+0xAE : 1026f2 >
  10267a:    89 80             	r1 = sp + 0
  10267c:    82 14             	r3_r2 = 0			  ## os_api.c:409:9
  10267e:    46 20             	r6 = 0x0			  ## os_api.c:409:9
  102680:    40 16             	r0 = r4			  ## os_api.c:409:9
  102682:    bf ea 8b f8       	call -0xeea <xQueueGenericReceive : 10179c >			  ## os_api.c:409:9
  102686:    8f 84             	r7 = sp + 4
  102688:    04 87             	goto 0xe <os_taskq_flush+0x54 : 102698 >
  10268a:    82 14             	r3_r2 = 0			  ## os_api.c:411:13
  10268c:    40 16             	r0 = r4			  ## os_api.c:411:13
  10268e:    71 16             	r1 = r7			  ## os_api.c:411:13
  102690:    bf ea 84 f8       	call -0xef8 <xQueueGenericReceive : 10179c >			  ## os_api.c:411:13
  102694:    c7 24             	r7 += 0x4			  ## os_api.c:410:9
  102696:    c6 21             	r6 += 0x1			  ## os_api.c:410:65
  102698:    00 20             	r0 = [sp]			  ## os_api.c:410:34
  10269a:    02 17             	r2 = r0.b0 (u)			  ## os_api.c:410:34
  10269c:    06 fc 02 16       	if (r6 > 0xb) goto 0x4 <os_taskq_flush+0x60 : 1026a4 >			  ## os_api.c:410:34
  1026a0:    82 ed f3 61       	ifs (r6 < r2) goto -0x1a <os_taskq_flush+0x46 : 10268a >
  1026a4:    02 ee 06 50       	ifs (r5 > r2) goto 0xc <os_taskq_flush+0x70 : 1026b4 >
  1026a8:    d0 ec a0 30       	r3 = [r10+0x0]			  ## os_api.c:413:9
  1026ac:    80 16             	r0 = r8			  ## os_api.c:413:9
  1026ae:    51 16             	r1 = r5			  ## os_api.c:413:9
  1026b0:    c3 00             	call r3			  ## os_api.c:413:9
  1026b2:    00 20             	r0 = [sp]			  ## os_api.c:413:9
  1026b4:    01 17             	r1 = r0.b0 (u)			  ## os_api.c:414:26
  1026b6:    32 e1 ff 5f       	r2 = r5 + -0x1			  ## os_api.c:414:31
  1026ba:    60 e1 70 04       	r0 = r0 & 0xF0000000			  ## os_api.c:416:24
  1026be:    2d 1e             	r5 = r2 - r1			  ## os_api.c:414:18
  1026c0:    21 ff 40 05 16 00 	if (r0 != 0x30000000) goto 0x2c <os_taskq_flush+0xAE : 1026f2 >
  1026c6:    d0 ec b4 10       	r1 = [r11+0x4]			  ## os_api.c:417:27
  1026ca:    10 17             	r0 = r1.b0 (u)			  ## os_api.c:417:35
  1026cc:    51 e8 09 40       	if ((r1 & 0x100) == 0) goto 0x12 <os_taskq_flush+0x9E : 1026e2 >
  1026d0:    89 84             	r1 = sp + 4
  1026d2:    c1 28             	r1 += 0x8			  ## os_api.c:421:25
  1026d4:    d8 ec 1a 10       	r1 = [r1+r0<<2]			  ## os_api.c:421:25
  1026d8:    d0 ec 11 90       	[r1+0x0] = r9			  ## os_api.c:421:43
  1026dc:    d0 ec b4 10       	r1 = [r11+0x4]			  ## os_api.c:421:43
  1026e0:    c0 21             	r0 += 0x1			  ## os_api.c:420:24
  1026e2:    51 e8 06 48       	if ((r1 & 0x200) == 0) goto 0xc <os_taskq_flush+0xAE : 1026f2 >
  1026e6:    89 84             	r1 = sp + 4
  1026e8:    c1 28             	r1 += 0x8			  ## os_api.c:425:39
  1026ea:    d8 ec 1a 00       	r0 = [r1+r0<<2]			  ## os_api.c:425:39
  1026ee:    bf ea 79 fe       	call -0x30e <os_sem_post : 1023e4 >			  ## os_api.c:425:17
  1026f2:    e5 43             	if (r5 != 0) goto -0x7a <os_taskq_flush+0x36 : 10267a >
  1026f4:    bf ea e1 f2       	call -0x1a3e <local_irq_enable : 100cba >			  ## os_api.c:430:5
  1026f8:    40 20             	r0 = 0x0
  1026fa:    04 81             	goto 0x2 <os_taskq_flush+0xBA : 1026fe >
  1026fc:    10 2a             	r0 = -0x16
  1026fe:    02 8d             	sp += 0x34
  102700:    5b 04             	{pc, r11-r4} = [sp++]			  ## os_api.c:433:1


task_queue_post_event:
  102702:    13 16             	r3 = r1			  ## os_api.c:440:0
  102704:    60 e0 00 19       	r1 = 0x200000			  ## os_api.c:441:12
  102708:    a7 87             	goto -0x172 <__os_taskq_post : 102598 >			  ## os_api.c:441:12


os_taskq_post_msg:
  10270a:    62 04             	[--sp] = {r3, r2}			  ## os_api.c:445:0
  10270c:    74 04             	[--sp] = {rets, r4}			  ## os_api.c:445:0
  10270e:    e2 97             	sp += -0x24			  ## os_api.c:445:0
  102710:    14 16             	r4 = r1			  ## os_api.c:445:0
  102712:    a9 8c             	r1 = sp + 44			  ## os_api.c:445:0
  102714:    81 20             	[sp] = r1			  ## os_api.c:449:5
  102716:    41 20             	r1 = 0x0
  102718:    04 88             	goto 0x10 <os_taskq_post_msg+0x20 : 10272a >
  10271a:    02 20             	r2 = [sp]			  ## os_api.c:451:19
  10271c:    2b 84             	r3 = r2 + 0x4			  ## os_api.c:451:19
  10271e:    83 20             	[sp] = r3			  ## os_api.c:451:19
  102720:    22 60             	r2 = [r2+0x0] 			  ## os_api.c:451:19
  102722:    8b 84             	r3 = sp + 4			  ## os_api.c:451:19
  102724:    d8 ec 3b 21       	[r3+r1<<2] = r2			  ## os_api.c:451:17
  102728:    c1 21             	r1 += 0x1			  ## os_api.c:450:32
  10272a:    84 ed f6 11       	ifs (r1 < r4) goto -0x14 <os_taskq_post_msg+0x10 : 10271a >			  ## os_api.c:450:5
  10272e:    8b 84             	r3 = sp + 4
  102730:    60 e0 80 19       	r1 = 0x100000			  ## os_api.c:455:12
  102734:    42 16             	r2 = r4			  ## os_api.c:455:12
  102736:    bf ea 2f ff       	call -0x1a2 <__os_taskq_post : 102598 >			  ## os_api.c:455:12
  10273a:    02 89             	sp += 0x24
  10273c:    34 04             	{rets, r4} = [sp++]			  ## os_api.c:455:5
  10273e:    02 82             	sp += 0x8			  ## os_api.c:455:5
  102740:    80 00             	rts			  ## os_api.c:455:5


os_taskq_post_event:
  102742:    62 04             	[--sp] = {r3, r2}			  ## os_api.c:459:0
  102744:    74 04             	[--sp] = {rets, r4}			  ## os_api.c:459:0
  102746:    e2 97             	sp += -0x24			  ## os_api.c:459:0
  102748:    14 16             	r4 = r1			  ## os_api.c:459:0
  10274a:    a9 8c             	r1 = sp + 44			  ## os_api.c:459:0
  10274c:    81 20             	[sp] = r1			  ## os_api.c:463:5
  10274e:    41 20             	r1 = 0x0
  102750:    04 88             	goto 0x10 <os_taskq_post_event+0x20 : 102762 >
  102752:    02 20             	r2 = [sp]			  ## os_api.c:465:19
  102754:    2b 84             	r3 = r2 + 0x4			  ## os_api.c:465:19
  102756:    83 20             	[sp] = r3			  ## os_api.c:465:19
  102758:    22 60             	r2 = [r2+0x0] 			  ## os_api.c:465:19
  10275a:    8b 84             	r3 = sp + 4			  ## os_api.c:465:19
  10275c:    d8 ec 3b 21       	[r3+r1<<2] = r2			  ## os_api.c:465:17
  102760:    c1 21             	r1 += 0x1			  ## os_api.c:464:32
  102762:    84 ed f6 11       	ifs (r1 < r4) goto -0x14 <os_taskq_post_event+0x10 : 102752 >			  ## os_api.c:464:5
  102766:    8b 84             	r3 = sp + 4
  102768:    60 e0 00 19       	r1 = 0x200000			  ## os_api.c:469:12
  10276c:    42 16             	r2 = r4			  ## os_api.c:469:12
  10276e:    bf ea 13 ff       	call -0x1da <__os_taskq_post : 102598 >			  ## os_api.c:469:12
  102772:    02 89             	sp += 0x24
  102774:    34 04             	{rets, r4} = [sp++]			  ## os_api.c:469:5
  102776:    02 82             	sp += 0x8			  ## os_api.c:469:5
  102778:    80 00             	rts			  ## os_api.c:469:5


os_taskq_accept:
  10277a:    42 20             	r2 = 0x0			  ## os_api.c:473:0
  10277c:    10 16             	r0 = r1			  ## os_api.c:474:12
  10277e:    47 84             	goto -0x2f8 <__os_taskq_pend : 102488 >			  ## os_api.c:474:12


os_taskq_del:
  102780:    7c 04             	[--sp] = {rets, r12-r4}			  ## os_api.c:479:0
  102782:    e2 93             	sp += -0x34			  ## os_api.c:479:0
  102784:    1c 16             	r12 = r1			  ## os_api.c:479:0
  102786:    bf ea 56 fc       	call -0x754 <xTaskGetHandle : 102036 >			  ## os_api.c:488:12
  10278a:    bf ea af fd       	call -0x4a2 <get_taskq : 1022ec >			  ## os_api.c:490:13
  10278e:    05 16             	r5 = r0			  ## os_api.c:490:13
  102790:    25 5d             	if (r5 == 0) goto 0xba <os_taskq_del+0xCC : 10284c >
  102792:    bf ea 8b f2       	call -0x1aea <local_irq_disable : 100cac >			  ## os_api.c:495:5
  102796:    20 00             	csync			  ## os_api.c:495:5
  102798:    50 16             	r0 = r5			  ## os_api.c:497:20
  10279a:    bf ea bd f9       	call -0xc86 <uxQueueMessagesWaiting : 101b18 >			  ## os_api.c:497:20
  10279e:    07 16             	r7 = r0			  ## os_api.c:497:20
  1027a0:    69 e1 70 c8       	r9 = r12 & 0xF00000
  1027a4:    f8 e8 04 a0       	r10 = sp + 4
  1027a8:    48 e0 17 00       	r8 = 0x17
  1027ac:    4b e0 f2 ff       	r11 = -0xe
  1027b0:    24 89             	goto 0x92 <os_taskq_del+0xC4 : 102844 >
  1027b2:    89 80             	r1 = sp + 0
  1027b4:    82 14             	r3_r2 = 0			  ## os_api.c:502:9
  1027b6:    44 20             	r4 = 0x0			  ## os_api.c:502:9
  1027b8:    50 16             	r0 = r5			  ## os_api.c:502:9
  1027ba:    bf ea ef f7       	call -0x1022 <xQueueGenericReceive : 10179c >			  ## os_api.c:502:9
  1027be:    8e 84             	r6 = sp + 4
  1027c0:    04 87             	goto 0xe <os_taskq_del+0x50 : 1027d0 >
  1027c2:    82 14             	r3_r2 = 0			  ## os_api.c:504:13
  1027c4:    50 16             	r0 = r5			  ## os_api.c:504:13
  1027c6:    61 16             	r1 = r6			  ## os_api.c:504:13
  1027c8:    bf ea e8 f7       	call -0x1030 <xQueueGenericReceive : 10179c >			  ## os_api.c:504:13
  1027cc:    c6 24             	r6 += 0x4			  ## os_api.c:503:9
  1027ce:    c4 21             	r4 += 0x1			  ## os_api.c:503:65
  1027d0:    00 20             	r0 = [sp]			  ## os_api.c:503:34
  1027d2:    01 17             	r1 = r0.b0 (u)			  ## os_api.c:503:34
  1027d4:    04 fc 02 16       	if (r4 > 0xb) goto 0x4 <os_taskq_del+0x5C : 1027dc >			  ## os_api.c:503:34
  1027d8:    81 ed f3 41       	ifs (r4 < r1) goto -0x1a <os_taskq_del+0x42 : 1027c2 >
  1027dc:    32 e1 ff 7f       	r2 = r7 + -0x1			  ## os_api.c:506:31
  1027e0:    80 a8             	r0 = r0 >> 0x8			  ## os_api.c:508:18
  1027e2:    2f 1e             	r7 = r2 - r1			  ## os_api.c:506:18
  1027e4:    0c e8 14 00       	if (r0 == r12) goto 0x28 <os_taskq_del+0x90 : 102810 >
  1027e8:    89 80             	r1 = sp + 0
  1027ea:    82 14             	r3_r2 = 0			  ## os_api.c:523:13
  1027ec:    44 20             	r4 = 0x0			  ## os_api.c:523:13
  1027ee:    50 16             	r0 = r5			  ## os_api.c:523:13
  1027f0:    bf ea ff f6       	call -0x1202 <xQueueGenericSend : 1015f2 >			  ## os_api.c:523:13
  1027f4:    8e 84             	r6 = sp + 4
  1027f6:    04 87             	goto 0xe <os_taskq_del+0x86 : 102806 >
  1027f8:    82 14             	r3_r2 = 0			  ## os_api.c:525:17
  1027fa:    50 16             	r0 = r5			  ## os_api.c:525:17
  1027fc:    61 16             	r1 = r6			  ## os_api.c:525:17
  1027fe:    bf ea f8 f6       	call -0x1210 <xQueueGenericSend : 1015f2 >			  ## os_api.c:525:17
  102802:    c6 24             	r6 += 0x4			  ## os_api.c:524:13
  102804:    c4 21             	r4 += 0x1			  ## os_api.c:524:45
  102806:    dc e9 00 00       	r0 = b[sp] (u)			  ## os_api.c:524:38
  10280a:    80 ed f5 41       	ifs (r4 < r0) goto -0x16 <os_taskq_del+0x78 : 1027f8 >			  ## os_api.c:524:38
  10280e:    04 9a             	goto 0x34 <os_taskq_del+0xC4 : 102844 >			  ## os_api.c:524:38
  102810:    c0 14             	r8 = 0
  102812:    21 ff 40 99 16 00 	if (r9 != 0x300000) goto 0x2c <os_taskq_del+0xC4 : 102844 >
  102818:    d0 ec a4 10       	r1 = [r10+0x4]			  ## os_api.c:510:31
  10281c:    10 17             	r0 = r1.b0 (u)			  ## os_api.c:510:39
  10281e:    51 e8 09 40       	if ((r1 & 0x100) == 0) goto 0x12 <os_taskq_del+0xB4 : 102834 >
  102822:    89 84             	r1 = sp + 4
  102824:    c1 28             	r1 += 0x8			  ## os_api.c:514:29
  102826:    d8 ec 1a 10       	r1 = [r1+r0<<2]			  ## os_api.c:514:29
  10282a:    d0 ec 11 b0       	[r1+0x0] = r11			  ## os_api.c:514:47
  10282e:    d0 ec a4 10       	r1 = [r10+0x4]			  ## os_api.c:514:47
  102832:    c0 21             	r0 += 0x1			  ## os_api.c:513:28
  102834:    51 e8 06 48       	if ((r1 & 0x200) == 0) goto 0xc <os_taskq_del+0xC4 : 102844 >
  102838:    89 84             	r1 = sp + 4
  10283a:    c1 28             	r1 += 0x8			  ## os_api.c:518:43
  10283c:    d8 ec 1a 00       	r0 = [r1+r0<<2]			  ## os_api.c:518:43
  102840:    bf ea d0 fd       	call -0x460 <os_sem_post : 1023e4 >			  ## os_api.c:518:21
  102844:    d7 56             	if (r7 != 0) goto -0x94 <os_taskq_del+0x32 : 1027b2 >
  102846:    bf ea 38 f2       	call -0x1b90 <local_irq_enable : 100cba >			  ## os_api.c:531:5
  10284a:    04 82             	goto 0x4 <os_taskq_del+0xD0 : 102850 >			  ## os_api.c:531:5
  10284c:    48 e0 18 00       	r8 = 0x18
  102850:    80 16             	r0 = r8			  ## os_api.c:534:1
  102852:    02 8d             	sp += 0x34			  ## os_api.c:534:1
  102854:    5c 04             	{pc, r12-r4} = [sp++]			  ## os_api.c:534:1


os_taskq_del_type:
  102856:    c7 94             	goto -0xd8 <os_taskq_del : 102780 >			  ## os_api.c:537:0


os_sem_create:
  102858:    75 04             	[--sp] = {rets, r5, r4}			  ## os_api.c:542:0
  10285a:    e2 9f             	sp += -0x4			  ## os_api.c:542:0
  10285c:    14 16             	r4 = r1			  ## os_api.c:542:0
  10285e:    05 16             	r5 = r0			  ## os_api.c:542:0
  102860:    a4 f9 0d 00       	if (r4 < 0x100) goto 0x1a <os_sem_create+0x26 : 10287e >			  ## os_api.c:542:0
  102864:    c0 ff e8 bc 02 00 	r0 = 0x2bce8 <mask_log_e : 2bce8 >			  ## FreeRTOSConfig.h:181:5
  10286a:    42 f0 8f 02       	r2 = 0x28f  #			  ## FreeRTOSConfig.h:181:5
  10286e:    03 60             		 r3 = [r0+0x0] 			  ## FreeRTOSConfig.h:181:5
  102870:    c0 ff 1f 2b 10 00 	r0 = 0x102b1f <vTickISR+0x32 : 102b1e >			  ## FreeRTOSConfig.h:181:5
  102876:    c1 ff 99 2b 10 00 	r1 = 0x102b99 <vTickISR+0xAC : 102b98 >			  ## FreeRTOSConfig.h:181:5
  10287c:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  10287e:    43 22             	r3 = 0x2			  ## queue.c:657:15
  102880:    78 3f             	r0 = 0xff			  ## queue.c:657:15
  102882:    41 20             	r1 = 0x0			  ## queue.c:657:15
  102884:    42 20             	r2 = 0x0			  ## queue.c:657:15
  102886:    53 d6             	r3 = r5  #			  ## queue.c:657:15
  102888:    83 20             		 [sp] = r3			  ## queue.c:657:15
  10288a:    bf ea 89 f3       	call -0x18ee <xQueueGenericCreateStatic : 100fa0 >			  ## queue.c:657:15
  10288e:    b0 e8 00 00       	if (r0 != 0x0) {
  102892:    84 6e             		[r0+0x38] = r4
                               	}			  ## queue.c:660:50
  102894:    40 20             	r0 = 0x0			  ## os_api.c:545:5
  102896:    02 81             	sp += 0x4
  102898:    55 04             	{pc, r5, r4} = [sp++]			  ## os_api.c:545:5


os_sem_del:
  10289a:    10 04             	[--sp] = rets			  ## os_api.c:549:0
  10289c:    bf ea 80 f9       	call -0xd00 <vQueueDelete : 101ba0 >			  ## os_api.c:550:5
  1028a0:    40 20             	r0 = 0x0			  ## os_api.c:552:5
  1028a2:    00 04             	pc = [sp++]			  ## os_api.c:552:5


os_sem_pend:
  1028a4:    74 04             	[--sp] = {rets, r4}			  ## os_api.c:556:0
  1028a6:    64 e0 00 2b       	r2 = icfg			  ## cpu.h:73:5
  1028aa:    44 23             	r4 = 0x3
  1028ac:    61 ff ff 20 0c 00 	if ((r2 & 0xFF) != 0) goto 0x18 <os_sem_pend+0x26 : 1028ca >
  1028b2:    12 3f             	r2 = -0x1			  ## os_api.c:562:9
  1028b4:    b1 e8 00 00       	if (r1 != 0x0) {
  1028b8:    12 16             		r2 = r1
                               	}			  ## os_api.c:562:9
  1028ba:    41 20             	r1 = 0x0			  ## os_api.c:565:11
  1028bc:    43 20             	r3 = 0x0			  ## os_api.c:565:11
  1028be:    44 20             	r4 = 0x0			  ## os_api.c:565:11
  1028c0:    bf ea 6c f7       	call -0x1128 <xQueueGenericReceive : 10179c >			  ## os_api.c:565:11
  1028c4:    b0 e8 01 00       	if (r0 != 0x1) {
  1028c8:    44 2b             		r4 = 0xb
                               	}			  ## os_api.c:567:12
  1028ca:    40 16             	r0 = r4			  ## os_api.c:568:1
  1028cc:    54 04             	{pc, r4} = [sp++]			  ## os_api.c:568:1


os_sem_set:
  1028ce:    75 04             	[--sp] = {rets, r5, r4}			  ## os_api.c:585:0
  1028d0:    14 16             	r4 = r1			  ## os_api.c:585:0
  1028d2:    05 16             	r5 = r0			  ## os_api.c:585:0
  1028d4:    85 4d             	if (r5 != 0) goto 0x1a <os_sem_set+0x22 : 1028f0 >			  ## os_api.c:585:0
  1028d6:    c0 ff e8 bc 02 00 	r0 = 0x2bce8 <mask_log_e : 2bce8 >			  ## FreeRTOSConfig.h:181:5
  1028dc:    42 f0 b9 08       	r2 = 0x8b9  #			  ## FreeRTOSConfig.h:181:5
  1028e0:    03 60             		 r3 = [r0+0x0] 			  ## FreeRTOSConfig.h:181:5
  1028e2:    c0 ff 1f 2b 10 00 	r0 = 0x102b1f <vTickISR+0x32 : 102b1e >			  ## FreeRTOSConfig.h:181:5
  1028e8:    c1 ff 56 2c 10 00 	r1 = 0x102c56 <vTickISR+0x16A : 102c56 >			  ## FreeRTOSConfig.h:181:5
  1028ee:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  1028f0:    bf ea dc f1       	call -0x1c48 <local_irq_disable : 100cac >			  ## queue.c:2235:5
  1028f4:    20 00             	csync			  ## queue.c:2235:5
  1028f6:    d4 6e             	[r5+0x38] = r4			  ## queue.c:2237:49
  1028f8:    bf ea df f1       	call -0x1c42 <local_irq_enable : 100cba >			  ## queue.c:2239:5
  1028fc:    40 20             	r0 = 0x0			  ## os_api.c:590:5
  1028fe:    55 04             	{pc, r5, r4} = [sp++]			  ## os_api.c:590:5


os_sem_valid:
  102900:    50 ee 0c 14       	r1 = b[r0+0x4c] (u)			  ## os_api.c:594:0
  102904:    40 21             	r0 = 0x1			  ## os_api.c:597:17
  102906:    b1 e8 02 00       	if (r1 != 0x2) {
  10290a:    40 20             		r0 = 0x0
                               	}			  ## os_api.c:597:17
  10290c:    80 00             	rts			  ## os_api.c:597:5


os_sem_query:
  10290e:    10 04             	[--sp] = rets			  ## os_api.c:601:0
  102910:    64 e0 00 1b       	r1 = icfg			  ## cpu.h:73:5
  102914:    60 ff ff 10 03 00 	if ((r1 & 0xFF) == 0) goto 0x6 <os_sem_query+0x12 : 102920 >			  ## os_api.c:603:9
  10291a:    bf ea 2f f9       	call -0xda2 <uxQueueMessagesWaitingFromISR : 101b7c >			  ## os_api.c:604:15
  10291e:    00 04             	pc = [sp++]			  ## os_api.c:608:5
  102920:    bf ea fa f8       	call -0xe0c <uxQueueMessagesWaiting : 101b18 >			  ## os_api.c:606:15
  102924:    00 04             	pc = [sp++]			  ## os_api.c:608:5


os_mutex_create:
  102926:    74 04             	[--sp] = {rets, r4}			  ## os_api.c:612:0
  102928:    e2 9f             	sp += -0x4			  ## os_api.c:612:0
  10292a:    03 16             	r3 = r0			  ## os_api.c:612:0
  10292c:    40 21             	r0 = 0x1			  ## queue.c:515:30
  10292e:    80 20             	[sp] = r0			  ## queue.c:515:30
  102930:    41 20             	r1 = 0x0			  ## queue.c:515:30
  102932:    42 20             	r2 = 0x0			  ## queue.c:515:30
  102934:    44 20             	r4 = 0x0			  ## queue.c:515:30
  102936:    bf ea 33 f3       	call -0x199a <xQueueGenericCreateStatic : 100fa0 >			  ## queue.c:515:30
  10293a:    00 48             	if (r0 == 0) goto 0x10 <os_mutex_create+0x26 : 10294c >
  10293c:    42 20             	r2 = 0x0			  ## queue.c:471:33
  10293e:    43 20             	r3 = 0x0			  ## queue.c:471:33
  102940:    50 ec 01 20       	d[r0+0x0] = r3_r2			  ## queue.c:471:33
  102944:    84 63             	[r0+0xc] = r4			  ## queue.c:474:44
  102946:    41 20             	r1 = 0x0			  ## queue.c:479:16
  102948:    bf ea 53 f6       	call -0x135a <xQueueGenericSend : 1015f2 >			  ## queue.c:479:16
  10294c:    40 20             	r0 = 0x0			  ## os_api.c:615:5
  10294e:    02 81             	sp += 0x4			  ## os_api.c:615:5
  102950:    54 04             	{pc, r4} = [sp++]			  ## os_api.c:615:5


os_mutex_del:
  102952:    10 04             	[--sp] = rets			  ## os_api.c:619:0
  102954:    bf ea 24 f9       	call -0xdb8 <vQueueDelete : 101ba0 >			  ## os_api.c:620:5
  102958:    40 20             	r0 = 0x0			  ## os_api.c:622:5
  10295a:    00 04             	pc = [sp++]			  ## os_api.c:622:5


cpu_irq_disabled:
  10295c:    64 e0 00 0b       	r0 = icfg			  ## cpu.h:78:0
  102960:    61 e1 40 0f       	r1 = r0 & 0x300			  ## cpu.h:81:18
  102964:    40 21             	r0 = 0x1			  ## cpu.h:81:27
  102966:    31 e8 00 03       	if (r1 == 0x300) {
  10296a:    40 20             		r0 = 0x0
                               	}			  ## cpu.h:81:27
  10296c:    80 00             	rts			  ## cpu.h:81:5


os_mutex_pend:
  10296e:    76 04             	[--sp] = {rets, r6-r4}			  ## os_api.c:626:0
  102970:    13 16             	r3 = r1			  ## os_api.c:626:0
  102972:    04 16             	r4 = r0			  ## os_api.c:626:0
  102974:    64 e0 00 0b       	r0 = icfg			  ## cpu.h:73:5
  102978:    42 23             	r2 = 0x3
  10297a:    61 ff ff 00 35 00 	if ((r0 & 0xFF) != 0) goto 0x6a <os_mutex_pend+0x7C : 1029ea >
  102980:    71 8d             	call -0x26 <cpu_irq_disabled : 10295c >			  ## os_api.c:629:25
  102982:    90 53             	if (r0 != 0) goto 0x66 <os_mutex_pend+0x7C : 1029ea >			  ## os_api.c:629:25
  102984:    15 3f             	r5 = -0x1			  ## os_api.c:633:9
  102986:    b3 e8 00 00       	if (r3 != 0x0) {
  10298a:    35 16             		r5 = r3
                               	}			  ## os_api.c:633:9
  10298c:    84 4d             	if (r4 != 0) goto 0x1a <os_mutex_pend+0x3A : 1029a8 >
  10298e:    c0 ff e8 bc 02 00 	r0 = 0x2bce8 <mask_log_e : 2bce8 >			  ## FreeRTOSConfig.h:181:5
  102994:    42 f0 65 02       	r2 = 0x265  #			  ## FreeRTOSConfig.h:181:5
  102998:    03 60             		 r3 = [r0+0x0] 			  ## FreeRTOSConfig.h:181:5
  10299a:    c0 ff 1f 2b 10 00 	r0 = 0x102b1f <vTickISR+0x32 : 102b1e >			  ## FreeRTOSConfig.h:181:5
  1029a0:    c1 ff 6b 2b 10 00 	r1 = 0x102b6b <vTickISR+0x7E : 102b6a >			  ## FreeRTOSConfig.h:181:5
  1029a6:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  1029a8:    bf ea 80 f1       	call -0x1d00 <local_irq_disable : 100cac >			  ## queue.c:620:5
  1029ac:    20 00             	csync			  ## queue.c:620:5
  1029ae:    43 61             	r3 = [r4+0x4] 			  ## queue.c:622:18
  1029b0:    bf ea e3 fb       	call -0x83a <xTaskGetCurrentTaskHandle : 10217a >			  ## queue.c:622:44
  1029b4:    00 e8 0f 30       	if (r3 == r0) goto 0x1e <os_mutex_pend+0x68 : 1029d6 >			  ## queue.c:622:44
  1029b8:    bf ea 7f f1       	call -0x1d02 <local_irq_enable : 100cba >			  ## queue.c:626:9
  1029bc:    41 20             	r1 = 0x0			  ## queue.c:628:19
  1029be:    43 20             	r3 = 0x0			  ## queue.c:628:19
  1029c0:    46 20             	r6 = 0x0			  ## queue.c:628:19
  1029c2:    40 16             	r0 = r4			  ## queue.c:628:19
  1029c4:    52 16             	r2 = r5			  ## queue.c:628:19
  1029c6:    bf ea e9 f6       	call -0x122e <xQueueGenericReceive : 10179c >			  ## queue.c:628:19
  1029ca:    01 16             	r1 = r0			  ## queue.c:628:19
  1029cc:    bf ea 6e f1       	call -0x1d24 <local_irq_disable : 100cac >			  ## queue.c:630:9
  1029d0:    20 00             	csync			  ## queue.c:630:9
  1029d2:    81 42             	if (r1 != 0) goto 0x4 <os_mutex_pend+0x6A : 1029d8 >			  ## queue.c:630:9
  1029d4:    04 84             	goto 0x8 <os_mutex_pend+0x70 : 1029de >			  ## queue.c:630:9
  1029d6:    41 21             	r1 = 0x1
  1029d8:    c3 eb 01 40       	[r4+0xc] += 0x1
  1029dc:    16 16             	r6 = r1
  1029de:    42 20             	r2 = 0x0			  ## os_api.c:638:12
  1029e0:    b6 e8 01 00       	if (r6 != 0x1) {			  ## os_api.c:638:12
  1029e4:    42 2b             		r2 = 0xb
                               	}			  ## os_api.c:638:12
  1029e6:    bf ea 68 f1       	call -0x1d30 <local_irq_enable : 100cba >			  ## queue.c:640:5
  1029ea:    20 16             	r0 = r2			  ## os_api.c:639:1
  1029ec:    56 04             	{pc, r6-r4} = [sp++]			  ## os_api.c:639:1


os_mutex_post:
  1029ee:    75 04             	[--sp] = {rets, r5, r4}			  ## os_api.c:642:0
  1029f0:    04 16             	r4 = r0			  ## os_api.c:642:0
  1029f2:    64 e0 00 0b       	r0 = icfg			  ## cpu.h:73:5
  1029f6:    45 23             	r5 = 0x3
  1029f8:    61 ff ff 00 29 00 	if ((r0 & 0xFF) != 0) goto 0x52 <os_mutex_post+0x62 : 102a50 >
  1029fe:    51 8e             	call -0xa4 <cpu_irq_disabled : 10295c >			  ## os_api.c:645:25
  102a00:    90 47             	if (r0 != 0) goto 0x4e <os_mutex_post+0x62 : 102a50 >			  ## os_api.c:645:25
  102a02:    84 4d             	if (r4 != 0) goto 0x1a <os_mutex_post+0x30 : 102a1e >
  102a04:    c0 ff e8 bc 02 00 	r0 = 0x2bce8 <mask_log_e : 2bce8 >			  ## FreeRTOSConfig.h:181:5
  102a0a:    42 f0 2e 02       	r2 = 0x22e  #			  ## FreeRTOSConfig.h:181:5
  102a0e:    03 60             		 r3 = [r0+0x0] 			  ## FreeRTOSConfig.h:181:5
  102a10:    c0 ff 1f 2b 10 00 	r0 = 0x102b1f <vTickISR+0x32 : 102b1e >			  ## FreeRTOSConfig.h:181:5
  102a16:    c1 ff 52 2b 10 00 	r1 = 0x102b52 <vTickISR+0x66 : 102b52 >			  ## FreeRTOSConfig.h:181:5
  102a1c:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  102a1e:    bf ea 45 f1       	call -0x1d76 <local_irq_disable : 100cac >			  ## queue.c:560:5
  102a22:    20 00             	csync			  ## queue.c:560:5
  102a24:    43 61             	r3 = [r4+0x4] 			  ## queue.c:568:18
  102a26:    bf ea a8 fb       	call -0x8b0 <xTaskGetCurrentTaskHandle : 10217a >			  ## queue.c:568:44
  102a2a:    00 e8 04 30       	if (r3 == r0) goto 0x8 <os_mutex_post+0x48 : 102a36 >			  ## queue.c:568:44
  102a2e:    bf ea 44 f1       	call -0x1d78 <local_irq_enable : 100cba >			  ## queue.c:595:9
  102a32:    45 20             	r5 = 0x0			  ## queue.c:595:9
  102a34:    04 8d             	goto 0x1a <os_mutex_post+0x62 : 102a50 >			  ## queue.c:595:9
  102a36:    40 63             	r0 = [r4+0xc] 			  ## queue.c:576:42
  102a38:    32 e1 ff 0f       	r2 = r0 + -0x1			  ## queue.c:576:42
  102a3c:    c2 63             	[r4+0xc] = r2			  ## queue.c:576:42
  102a3e:    bf ea 3c f1       	call -0x1d88 <local_irq_enable : 100cba >			  ## queue.c:582:13
  102a42:    45 20             	r5 = 0x0			  ## queue.c:582:13
  102a44:    82 45             	if (r2 != 0) goto 0xa <os_mutex_post+0x62 : 102a50 >			  ## queue.c:582:13
  102a46:    41 20             	r1 = 0x0			  ## queue.c:583:20
  102a48:    82 14             	r3_r2 = 0			  ## queue.c:583:20
  102a4a:    40 16             	r0 = r4			  ## queue.c:583:20
  102a4c:    bf ea d1 f5       	call -0x145e <xQueueGenericSend : 1015f2 >			  ## queue.c:583:20
  102a50:    50 16             	r0 = r5			  ## os_api.c:653:1
  102a52:    55 04             	{pc, r5, r4} = [sp++]			  ## os_api.c:653:1


os_mutex_valid:
  102a54:    50 ee 0c 04       	r0 = b[r0+0x4c] (u)			  ## os_api.c:655:0
  102a58:    b0 e8 01 00       	if (r0 != 0x1) {
  102a5c:    40 20             		r0 = 0x0
                               	}			  ## os_api.c:657:17
  102a5e:    80 00             	rts			  ## os_api.c:657:5


pxPortInitialiseStack:
  102a60:    e8 34             	r0 += -0x4c			  ## port.c:144:0
  102a62:    82 63             	[r0+0xc] = r2			  ## port.c:156:12
  102a64:    42 20             	r2 = 0x0			  ## port.c:156:12
  102a66:    82 62             	[r0+0x8] = r2			  ## port.c:158:12
  102a68:    20 eb 06 00       	[r0+] = {r2, r1}			  ## port.c:159:12
  102a6c:    80 00             	rts			  ## port.c:168:5


vPortEndScheduler:
  102a6e:    10 04             	[--sp] = rets			  ## port.c:303:0
  102a70:    c0 ff c8 bc 02 00 	r0 = 0x2bcc8 <uxCriticalNesting : 2bcc8 >			  ## port.c:306:5
  102a76:    00 60             	r0 = [r0+0x0] 			  ## port.c:306:5
  102a78:    00 ff e8 03 0d 00 	if (r0 == 0x3e8) goto 0x1a <vPortEndScheduler+0x2A : 102a98 >			  ## port.c:306:5
  102a7e:    c0 ff e8 bc 02 00 	r0 = 0x2bce8 <mask_log_e : 2bce8 >			  ## FreeRTOSConfig.h:181:5
  102a84:    42 f0 32 01       	r2 = 0x132  #			  ## FreeRTOSConfig.h:181:5
  102a88:    03 60             		 r3 = [r0+0x0] 			  ## FreeRTOSConfig.h:181:5
  102a8a:    c0 ff be 2d 10 00 	r0 = 0x102dbe <vTickISR+0x2D2 : 102dbe >			  ## FreeRTOSConfig.h:181:5
  102a90:    c1 ff ac 2d 10 00 	r1 = 0x102dac <vTickISR+0x2C0 : 102dac >			  ## FreeRTOSConfig.h:181:5
  102a96:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  102a98:    00 04             	pc = [sp++]			  ## port.c:307:1


vPortExitCritical:
  102a9a:    74 04             	[--sp] = {rets, r4}			  ## port.c:377:0
  102a9c:    c4 ff c8 bc 02 00 	r4 = 0x2bcc8 <uxCriticalNesting : 2bcc8 >			  ## port.c:377:0
  102aa2:    40 60             	r0 = [r4+0x0] 			  ## port.c:378:5
  102aa4:    80 4e             	if (r0 != 0) goto 0x1c <vPortExitCritical+0x28 : 102ac2 >			  ## port.c:378:5
  102aa6:    c0 ff e8 bc 02 00 	r0 = 0x2bce8 <mask_log_e : 2bce8 >			  ## FreeRTOSConfig.h:181:5
  102aac:    42 f0 7a 01       	r2 = 0x17a  #			  ## FreeRTOSConfig.h:181:5
  102ab0:    03 60             		 r3 = [r0+0x0] 			  ## FreeRTOSConfig.h:181:5
  102ab2:    c0 ff be 2d 10 00 	r0 = 0x102dbe <vTickISR+0x2D2 : 102dbe >			  ## FreeRTOSConfig.h:181:5
  102ab8:    c1 ff c5 2d 10 00 	r1 = 0x102dc5 <vTickISR+0x2D8 : 102dc4 >			  ## FreeRTOSConfig.h:181:5
  102abe:    c3 00             	call r3			  ## FreeRTOSConfig.h:181:5
  102ac0:    40 60             	r0 = [r4+0x0] 
  102ac2:    f8 3f             	r0 += -0x1			  ## port.c:379:22
  102ac4:    c0 60             	[r4+0x0] = r0			  ## port.c:379:22
  102ac6:    30 e8 00 00       	if (r0 == 0x0) {			  ## port.c:379:22
  102aca:    bf ea f6 f0       		call -0x1e14
                               	} <local_irq_enable : 100cba >			  ## port.c:381:9
  102ace:    54 04             	{pc, r4} = [sp++]			  ## port.c:383:1


OS_ClrPending:
  102ad0:    c0 ff c0 bc 02 00 	r0 = 0x2bcc0 <highCurrentTCB : 2bcc0 >			  ## port.c:390:0
  102ad6:    00 60             	r0 = [r0+0x0] 			  ## port.c:392:29
  102ad8:    c1 ff 94 bc 02 00 	r1 = 0x2bc94 <CurrentTCB : 2bc94 >			  ## port.c:392:27
  102ade:    90 60             	[r1+0x0] = r0			  ## port.c:392:27
  102ae0:    c0 ff a4 e1 1b 00 	r0 = 0x1be1a4 <__stub_LZ4_decompress_safe_usingDict+0xAE1A8 : 1be1a4 >			  ## port.c:393:25
  102ae6:    40 ea 08 00       	[r0+0x0] = 0x8			  ## port.c:393:25
  102aea:    80 00             	rts			  ## port.c:395:1


vTickISR:
  102aec:    e9 04             	[--sp] = {psr, rets, reti}			  ## port.c:454:0
  102aee:    60 04             	[--sp] = {r3-r0}			  ## port.c:456:25
  102af0:    c0 ff ec e0 1b 00 	r0 = 0x1be0ec <__stub_LZ4_decompress_safe_usingDict+0xAE0F0 : 1be0ec >			  ## port.c:456:25
  102af6:    00 ef 40 00       	[r0+0x0] |= 0x40			  ## port.c:456:25
  102afa:    bf ea 84 f4       	call -0x16f8 <xTaskIncrementTick : 101406 >			  ## port.c:464:13
  102afe:    b0 e8 00 00       	if (r0 != 0x0) {			  ## port.c:464:13
  102b02:    bf ea ef f1       		call -0x1c22
                               	} <vPortYield : 100ee4 >			  ## port.c:466:13
  102b06:    40 04             	{r3-r0} = [sp++]			  ## port.c:471:1
  102b08:    a9 04             	{psr, rets, reti} = [sp++]			  ## port.c:471:1
  102b0a:    81 00             	rti			  ## port.c:471:1
  102b0c:    78 51             	r0 = b[r7+-0xf] (u)
  102b0e:    75 65             	r5 = [r7+0x14] 
  102b10:    75 65             	r5 = [r7+0x14] 
  102b12:    47 65             	r7 = [r4+0x14] 
  102b14:    6e 65             	r6 = h[r6+0xa] (u)
  102b16:    72 69             	r2 = [r7+0x24] 
  102b18:    63 52             	if (r3 == 0) goto -0x5c <vPortExitCritical+0x24 : 102abe >
  102b1a:    65 73             	r5 = [r6+-0x34] 
  102b1c:    65 74             	r5 = [r6+-0x30] 
  102b1e:    00 25             	r0 = [sp+20]
  102b20:    73 20             	r3 = 0xc0
  102b22:    25 64             	r5 = [r2+0x10] 
  102b24:    0a 00              <unkown instruction>
  102b26:    78 51             	r0 = b[r7+-0xf] (u)
  102b28:    75 65             	r5 = [r7+0x14] 
  102b2a:    75 65             	r5 = [r7+0x14] 
  102b2c:    47 65             	r7 = [r4+0x14] 
  102b2e:    6e 65             	r6 = h[r6+0xa] (u)
  102b30:    72 69             	r2 = [r7+0x24] 
  102b32:    63 43             	if (r3 == 0) goto -0x7a <vPortExitCritical+0x20 : 102aba >
  102b34:    72 65             	r2 = [r7+0x14] 
  102b36:    61 74             	r1 = [r6+-0x30] 
  102b38:    65 53             	if (r5 == 0) goto -0x5a <OS_ClrPending+0x10 : 102ae0 >
  102b3a:    74 61             	r4 = [r7+0x4] 
  102b3c:    74 69             	r4 = [r7+0x24] 
  102b3e:    63 00              <unkown instruction>
  102b40:    78 51             	r0 = b[r7+-0xf] (u)
  102b42:    75 65             	r5 = [r7+0x14] 
  102b44:    75 65             	r5 = [r7+0x14] 
  102b46:    47 65             	r7 = [r4+0x14] 
  102b48:    6e 65             	r6 = h[r6+0xa] (u)
  102b4a:    72 69             	r2 = [r7+0x24] 
  102b4c:    63 53             	if (r3 == 0) goto -0x5a <vTickISR+0x8 : 102af4 >
  102b4e:    65 6e             	r5 = [r6+0x38] 
  102b50:    64 00              <unkown instruction>
  102b52:    78 51             	r0 = b[r7+-0xf] (u)
  102b54:    75 65             	r5 = [r7+0x14] 
  102b56:    75 65             	r5 = [r7+0x14] 
  102b58:    47 69             	r7 = [r4+0x24] 
  102b5a:    76 65             	r6 = [r7+0x14] 
  102b5c:    4d 75             	r5 = h[r4+-0x16] (u)
  102b5e:    74 65             	r4 = [r7+0x14] 
  102b60:    78 52             	r0 = b[r7+-0xe] (u)
  102b62:    65 63             	r5 = [r6+0xc] 
  102b64:    75 72             	r5 = [r7+-0x38] 
  102b66:    73 69             	r3 = [r7+0x24] 
  102b68:    76 65             	r6 = [r7+0x14] 
  102b6a:    00 78             	r0 = [r0+-0x20] 
  102b6c:    51 75             	r1 = [r5+-0x2c] 
  102b6e:    65 75             	r5 = [r6+-0x2c] 
  102b70:    65 54             	if (r5 == 0) goto -0x58 <vTickISR+0x2E : 102b1a >
  102b72:    61 6b             	r1 = [r6+0x2c] 
  102b74:    65 4d             	if (r5 == 0) goto -0x66 <vTickISR+0x24 : 102b10 >
  102b76:    75 74             	r5 = [r7+-0x30] 
  102b78:    65 78             	r5 = [r6+-0x20] 
  102b7a:    52 65             	r2 = [r5+0x14] 
  102b7c:    63 75             	r3 = [r6+-0x2c] 
  102b7e:    72 73             	r2 = [r7+-0x34] 
  102b80:    69 76             	r1 = h[r6+-0x14] (u)
  102b82:    65 00              <unkown instruction>
  102b84:    78 51             	r0 = b[r7+-0xf] (u)
  102b86:    75 65             	r5 = [r7+0x14] 
  102b88:    75 65             	r5 = [r7+0x14] 
  102b8a:    47 65             	r7 = [r4+0x14] 
  102b8c:    6e 65             	r6 = h[r6+0xa] (u)
  102b8e:    72 69             	r2 = [r7+0x24] 
  102b90:    63 52             	if (r3 == 0) goto -0x5c <vTickISR+0x4A : 102b36 >
  102b92:    65 63             	r5 = [r6+0xc] 
  102b94:    65 69             	r5 = [r6+0x24] 
  102b96:    76 65             	r6 = [r7+0x14] 
  102b98:    00 78             	r0 = [r0+-0x20] 
  102b9a:    51 75             	r1 = [r5+-0x2c] 
  102b9c:    65 75             	r5 = [r6+-0x2c] 
  102b9e:    65 43             	if (r5 == 0) goto -0x7a <vTickISR+0x3A : 102b26 >
  102ba0:    72 65             	r2 = [r7+0x14] 
  102ba2:    61 74             	r1 = [r6+-0x30] 
  102ba4:    65 43             	if (r5 == 0) goto -0x7a <vTickISR+0x40 : 102b2c >
  102ba6:    6f 75             	r7 = h[r6+-0x16] (u)
  102ba8:    6e 74             	r6 = h[r6+-0x18] (u)
  102baa:    69 6e             	r1 = h[r6+0x1c] (u)
  102bac:    67 53             	if (r7 == 0) goto -0x5a <vTickISR+0x68 : 102b54 >
  102bae:    65 6d             	r5 = [r6+0x34] 
  102bb0:    61 70             	r1 = [r6+-0x40] 
  102bb2:    68 6f             	r0 = h[r6+0x1e] (u)
  102bb4:    72 65             	r2 = [r7+0x14] 
  102bb6:    53 74             	r3 = [r5+-0x30] 
  102bb8:    61 74             	r1 = [r6+-0x30] 
  102bba:    69 63             	r1 = h[r6+0x6] (u)
  102bbc:    00 78             	r0 = [r0+-0x20] 
  102bbe:    51 75             	r1 = [r5+-0x2c] 
  102bc0:    65 75             	r5 = [r6+-0x2c] 
  102bc2:    65 47             	if (r5 == 0) goto -0x72 <vTickISR+0x66 : 102b52 >
  102bc4:    65 6e             	r5 = [r6+0x38] 
  102bc6:    65 72             	r5 = [r6+-0x38] 
  102bc8:    69 63             	r1 = h[r6+0x6] (u)
  102bca:    53 65             	r3 = [r5+0x14] 
  102bcc:    6e 64             	r6 = h[r6+0x8] (u)
  102bce:    46 72             	r6 = [r4+-0x38] 
  102bd0:    6f 6d             	r7 = h[r6+0x1a] (u)
  102bd2:    49 53             	r1 = b[r4+-0xd] (u)
  102bd4:    52 00              <unkown instruction>
  102bd6:    78 51             	r0 = b[r7+-0xf] (u)
  102bd8:    75 65             	r5 = [r7+0x14] 
  102bda:    75 65             	r5 = [r7+0x14] 
  102bdc:    47 69             	r7 = [r4+0x24] 
  102bde:    76 65             	r6 = [r7+0x14] 
  102be0:    46 72             	r6 = [r4+-0x38] 
  102be2:    6f 6d             	r7 = h[r6+0x1a] (u)
  102be4:    49 53             	r1 = b[r4+-0xd] (u)
  102be6:    52 00              <unkown instruction>
  102be8:    78 51             	r0 = b[r7+-0xf] (u)
  102bea:    75 65             	r5 = [r7+0x14] 
  102bec:    75 65             	r5 = [r7+0x14] 
  102bee:    52 65             	r2 = [r5+0x14] 
  102bf0:    63 65             	r3 = [r6+0x14] 
  102bf2:    69 76             	r1 = h[r6+-0x14] (u)
  102bf4:    65 46             	if (r5 == 0) goto -0x74 <vTickISR+0x96 : 102b82 >
  102bf6:    72 6f             	r2 = [r7+0x3c] 
  102bf8:    6d 49             	r5 = b[r6+0x9] (u)
  102bfa:    53 52             	if (r3 == 0) goto -0x9c <vTickISR+0x74 : 102b60 >
  102bfc:    00 75             	r0 = [r0+-0x2c] 
  102bfe:    78 51             	r0 = b[r7+-0xf] (u)
  102c00:    75 65             	r5 = [r7+0x14] 
  102c02:    75 65             	r5 = [r7+0x14] 
  102c04:    4d 65             	r5 = h[r4+0xa] (u)
  102c06:    73 73             	r3 = [r7+-0x34] 
  102c08:    61 67             	r1 = [r6+0x1c] 
  102c0a:    65 73             	r5 = [r6+-0x34] 
  102c0c:    57 61             	r7 = [r5+0x4] 
  102c0e:    69 74             	r1 = h[r6+-0x18] (u)
  102c10:    69 6e             	r1 = h[r6+0x1c] (u)
  102c12:    67 00              <unkown instruction>
  102c14:    75 78             	r5 = [r7+-0x20] 
  102c16:    51 75             	r1 = [r5+-0x2c] 
  102c18:    65 75             	r5 = [r6+-0x2c] 
  102c1a:    65 53             	if (r5 == 0) goto -0x5a <vTickISR+0xD6 : 102bc2 >
  102c1c:    70 61             	r0 = [r7+0x4] 
  102c1e:    63 65             	r3 = [r6+0x14] 
  102c20:    73 41             	if (r3 == 0) goto -0x3e <vTickISR+0xF8 : 102be4 >
  102c22:    76 61             	r6 = [r7+0x4] 
  102c24:    69 6c             	r1 = h[r6+0x18] (u)
  102c26:    61 62             	r1 = [r6+0x8] 
  102c28:    6c 65             	r4 = h[r6+0xa] (u)
  102c2a:    00 75             	r0 = [r0+-0x2c] 
  102c2c:    78 51             	r0 = b[r7+-0xf] (u)
  102c2e:    75 65             	r5 = [r7+0x14] 
  102c30:    75 65             	r5 = [r7+0x14] 
  102c32:    4d 65             	r5 = h[r4+0xa] (u)
  102c34:    73 73             	r3 = [r7+-0x34] 
  102c36:    61 67             	r1 = [r6+0x1c] 
  102c38:    65 73             	r5 = [r6+-0x34] 
  102c3a:    57 61             	r7 = [r5+0x4] 
  102c3c:    69 74             	r1 = h[r6+-0x18] (u)
  102c3e:    69 6e             	r1 = h[r6+0x1c] (u)
  102c40:    67 46             	if (r7 == 0) goto -0x74 <vTickISR+0xE2 : 102bce >
  102c42:    72 6f             	r2 = [r7+0x3c] 
  102c44:    6d 49             	r5 = b[r6+0x9] (u)
  102c46:    53 52             	if (r3 == 0) goto -0x9c <vTickISR+0xC0 : 102bac >
  102c48:    00 76             	r0 = [r0+-0x28] 
  102c4a:    51 75             	r1 = [r5+-0x2c] 
  102c4c:    65 75             	r5 = [r6+-0x2c] 
  102c4e:    65 44             	if (r5 == 0) goto -0x78 <vTickISR+0xEC : 102bd8 >
  102c50:    65 6c             	r5 = [r6+0x30] 
  102c52:    65 74             	r5 = [r6+-0x30] 
  102c54:    65 00              <unkown instruction>
  102c56:    75 78             	r5 = [r7+-0x20] 
  102c58:    51 75             	r1 = [r5+-0x2c] 
  102c5a:    65 75             	r5 = [r6+-0x2c] 
  102c5c:    65 4d             	if (r5 == 0) goto -0x66 <vTickISR+0x10C : 102bf8 >
  102c5e:    65 73             	r5 = [r6+-0x34] 
  102c60:    73 61             	r3 = [r7+0x4] 
  102c62:    67 65             	r7 = [r6+0x14] 
  102c64:    73 53             	if (r3 == 0) goto -0x1a <vTickISR+0x160 : 102c4c >
  102c66:    65 74             	r5 = [r6+-0x30] 
  102c68:    00 25             	r0 = [sp+20]
  102c6a:    73 20             	r3 = 0xc0
  102c6c:    25 64             	r5 = [r2+0x10] 
  102c6e:    0a 00              <unkown instruction>
  102c70:    76 54             	if (r6 == 0) goto -0x18 <vTickISR+0x16E : 102c5a >
  102c72:    61 73             	r1 = [r6+-0x34] 
  102c74:    6b 44             	r3 = b[r6+0x4] (u)
  102c76:    65 6c             	r5 = [r6+0x30] 
  102c78:    65 74             	r5 = [r6+-0x30] 
  102c7a:    65 00              <unkown instruction>
  102c7c:    70 72             	r0 = [r7+-0x38] 
  102c7e:    76 44             	if (r6 == 0) goto -0x38 <vTickISR+0x15C : 102c48 >
  102c80:    65 6c             	r5 = [r6+0x30] 
  102c82:    65 74             	r5 = [r6+-0x30] 
  102c84:    65 54             	if (r5 == 0) goto -0x58 <vTickISR+0x142 : 102c2e >
  102c86:    43 42             	if (r3 == 0) goto -0xfc <vTickISR+0xA0 : 102b8c >
  102c88:    00 78             	r0 = [r0+-0x20] 
  102c8a:    54 61             	r4 = [r5+0x4] 
  102c8c:    73 6b             	r3 = [r7+0x2c] 
  102c8e:    52 65             	r2 = [r5+0x14] 
  102c90:    73 75             	r3 = [r7+-0x2c] 
  102c92:    6d 65             	r5 = h[r6+0xa] (u)
  102c94:    41 6c             	r1 = [r4+0x30] 
  102c96:    6c 00              <unkown instruction>
  102c98:    78 54             	r0 = b[r7+-0xc] (u)
  102c9a:    61 73             	r1 = [r6+-0x34] 
  102c9c:    6b 49             	r3 = b[r6+0x9] (u)
  102c9e:    6e 63             	r6 = h[r6+0x6] (u)
  102ca0:    72 65             	r2 = [r7+0x14] 
  102ca2:    6d 65             	r5 = h[r6+0xa] (u)
  102ca4:    6e 74             	r6 = h[r6+-0x18] (u)
  102ca6:    54 69             	r4 = [r5+0x24] 
  102ca8:    63 6b             	r3 = [r6+0x2c] 
  102caa:    00 76             	r0 = [r0+-0x28] 
  102cac:    54 61             	r4 = [r5+0x4] 
  102cae:    73 6b             	r3 = [r7+0x2c] 
  102cb0:    46 69             	r6 = [r4+0x24] 
  102cb2:    6e 64             	r6 = h[r6+0x8] (u)
  102cb4:    48 69             	r0 = h[r4+0x12] (u)
  102cb6:    67 68             	r7 = [r6+0x20] 
  102cb8:    74 65             	r4 = [r7+0x14] 
  102cba:    73 74             	r3 = [r7+-0x30] 
  102cbc:    54 61             	r4 = [r5+0x4] 
  102cbe:    73 6b             	r3 = [r7+0x2c] 
  102cc0:    00 49             	if (r0 == 0) goto 0x12 <vTickISR+0x1E8 : 102cd4 >
  102cc2:    44 4c             	if (r4 == 0) goto -0xe8 <vTickISR+0xF0 : 102bdc >
  102cc4:    45 00              <unkown instruction>
  102cc6:    76 54             	if (r6 == 0) goto -0x18 <vTickISR+0x1C4 : 102cb0 >
  102cc8:    61 73             	r1 = [r6+-0x34] 
  102cca:    6b 53             	r3 = b[r6+-0xd] (u)
  102ccc:    74 61             	r4 = [r7+0x4] 
  102cce:    72 74             	r2 = [r7+-0x30] 
  102cd0:    53 63             	r3 = [r5+0xc] 
  102cd2:    68 65             	r0 = h[r6+0xa] (u)
  102cd4:    64 75             	r4 = [r6+-0x2c] 
  102cd6:    6c 65             	r4 = h[r6+0xa] (u)
  102cd8:    72 00              <unkown instruction>
  102cda:    70 72             	r0 = [r7+-0x38] 
  102cdc:    76 49             	if (r6 == 0) goto -0x2e <vTickISR+0x1C4 : 102cb0 >
  102cde:    64 6c             	r4 = [r6+0x30] 
  102ce0:    65 54             	if (r5 == 0) goto -0x58 <vTickISR+0x19E : 102c8a >
  102ce2:    61 73             	r1 = [r6+-0x34] 
  102ce4:    6b 00              <unkown instruction>
  102ce6:    70 63             	r0 = [r7+0xc] 
  102ce8:    54 61             	r4 = [r5+0x4] 
  102cea:    73 6b             	r3 = [r7+0x2c] 
  102cec:    47 65             	r7 = [r4+0x14] 
  102cee:    74 4e             	if (r4 == 0) goto -0x24 <vTickISR+0x1E0 : 102ccc >
  102cf0:    61 6d             	r1 = [r6+0x34] 
  102cf2:    65 00              <unkown instruction>
  102cf4:    78 54             	r0 = b[r7+-0xc] (u)
  102cf6:    61 73             	r1 = [r6+-0x34] 
  102cf8:    6b 47             	r3 = b[r6+0x7] (u)
  102cfa:    65 74             	r5 = [r6+-0x30] 
  102cfc:    48 61             	r0 = h[r4+0x2] (u)
  102cfe:    6e 64             	r6 = h[r6+0x8] (u)
  102d00:    6c 65             	r4 = h[r6+0xa] (u)
  102d02:    00 76             	r0 = [r0+-0x28] 
  102d04:    54 61             	r4 = [r5+0x4] 
  102d06:    73 6b             	r3 = [r7+0x2c] 
  102d08:    53 74             	r3 = [r5+-0x30] 
  102d0a:    65 70             	r5 = [r6+-0x40] 
  102d0c:    54 69             	r4 = [r5+0x24] 
  102d0e:    63 6b             	r3 = [r6+0x2c] 
  102d10:    00 76             	r0 = [r0+-0x28] 
  102d12:    54 61             	r4 = [r5+0x4] 
  102d14:    73 6b             	r3 = [r7+0x2c] 
  102d16:    50 6c             	r0 = [r5+0x30] 
  102d18:    61 63             	r1 = [r6+0xc] 
  102d1a:    65 4f             	if (r5 == 0) goto -0x62 <vTickISR+0x1CE : 102cba >
  102d1c:    6e 45             	r6 = b[r6+0x5] (u)
  102d1e:    76 65             	r6 = [r7+0x14] 
  102d20:    6e 74             	r6 = h[r6+-0x18] (u)
  102d22:    4c 69             	r4 = h[r4+0x12] (u)
  102d24:    73 74             	r3 = [r7+-0x30] 
  102d26:    00 78             	r0 = [r0+-0x20] 
  102d28:    54 61             	r4 = [r5+0x4] 
  102d2a:    73 6b             	r3 = [r7+0x2c] 
  102d2c:    52 65             	r2 = [r5+0x14] 
  102d2e:    6d 6f             	r5 = h[r6+0x1e] (u)
  102d30:    76 65             	r6 = [r7+0x14] 
  102d32:    46 72             	r6 = [r4+-0x38] 
  102d34:    6f 6d             	r7 = h[r6+0x1a] (u)
  102d36:    45 76             	r5 = [r4+-0x28] 
  102d38:    65 6e             	r5 = [r6+0x38] 
  102d3a:    74 4c             	if (r4 == 0) goto -0x28 <vTickISR+0x228 : 102d14 >
  102d3c:    69 73             	r1 = h[r6+-0x1a] (u)
  102d3e:    74 00              <unkown instruction>
  102d40:    76 54             	if (r6 == 0) goto -0x18 <vTickISR+0x23E : 102d2a >
  102d42:    61 73             	r1 = [r6+-0x34] 
  102d44:    6b 53             	r3 = b[r6+-0xd] (u)
  102d46:    65 74             	r5 = [r6+-0x30] 
  102d48:    54 69             	r4 = [r5+0x24] 
  102d4a:    6d 65             	r5 = h[r6+0xa] (u)
  102d4c:    4f 75             	r7 = h[r4+-0x16] (u)
  102d4e:    74 53             	if (r4 == 0) goto -0x1a <vTickISR+0x24A : 102d36 >
  102d50:    74 61             	r4 = [r7+0x4] 
  102d52:    74 65             	r4 = [r7+0x14] 
  102d54:    00 78             	r0 = [r0+-0x20] 
  102d56:    54 61             	r4 = [r5+0x4] 
  102d58:    73 6b             	r3 = [r7+0x2c] 
  102d5a:    43 68             	r3 = [r4+0x20] 
  102d5c:    65 63             	r5 = [r6+0xc] 
  102d5e:    6b 46             	r3 = b[r6+0x6] (u)
  102d60:    6f 72             	r7 = h[r6+-0x1c] (u)
  102d62:    54 69             	r4 = [r5+0x24] 
  102d64:    6d 65             	r5 = h[r6+0xa] (u)
  102d66:    4f 75             	r7 = h[r4+-0x16] (u)
  102d68:    74 00              <unkown instruction>
  102d6a:    78 54             	r0 = b[r7+-0xc] (u)
  102d6c:    61 73             	r1 = [r6+-0x34] 
  102d6e:    6b 50             	r3 = b[r6+-0x10] (u)
  102d70:    72 69             	r2 = [r7+0x24] 
  102d72:    6f 72             	r7 = h[r6+-0x1c] (u)
  102d74:    69 74             	r1 = h[r6+-0x18] (u)
  102d76:    79 44             	r1 = b[r7+0x4] (u)
  102d78:    69 73             	r1 = h[r6+-0x1a] (u)
  102d7a:    69 6e             	r1 = h[r6+0x1c] (u)
  102d7c:    68 65             	r0 = h[r6+0xa] (u)
  102d7e:    72 69             	r2 = [r7+0x24] 
  102d80:    74 00              <unkown instruction>
  102d82:    41 53             	if (r1 == 0) goto -0xda <vTickISR+0x1BE : 102caa >
  102d84:    53 45             	if (r3 == 0) goto -0xb6 <vTickISR+0x1E4 : 102cd0 >
  102d86:    52 54             	if (r2 == 0) goto -0x98 <vTickISR+0x204 : 102cf0 >
  102d88:    3a 20             	r2 ^= 0x1
  102d8a:    6d 65             	r5 = h[r6+0xa] (u)
  102d8c:    73 73             	r3 = [r7+-0x34] 
  102d8e:    61 67             	r1 = [r6+0x1c] 
  102d90:    65 73             	r5 = [r6+-0x34] 
  102d92:    20 3e             	r0 = [sp+248]
  102d94:    3d 20             	r5 ^= 0x1
  102d96:    68 65             	r0 = h[r6+0xa] (u)
  102d98:    61 64             	r1 = [r6+0x10] 
  102d9a:    2e 61             	r6 = h[r2+0x2] (u)
  102d9c:    72 67             	r2 = [r7+0x1c] 
  102d9e:    63 20             	r3 = 0x80
  102da0:    2b 20             	r11 = [sp+128]
  102da2:    31 20             	r1 |= 0x1
  102da4:    25 64             	r5 = [r2+0x10] 
  102da6:    2c 20             	r12 = [sp+128]
  102da8:    25 64             	r5 = [r2+0x10] 
  102daa:    0a 00              <unkown instruction>
  102dac:    76 50             	if (r6 == 0) goto -0x20 <vTickISR+0x2A2 : 102d8e >
  102dae:    6f 72             	r7 = h[r6+-0x1c] (u)
  102db0:    74 45             	if (r4 == 0) goto -0x36 <vTickISR+0x290 : 102d7c >
  102db2:    6e 64             	r6 = h[r6+0x8] (u)
  102db4:    53 63             	r3 = [r5+0xc] 
  102db6:    68 65             	r0 = h[r6+0xa] (u)
  102db8:    64 75             	r4 = [r6+-0x2c] 
  102dba:    6c 65             	r4 = h[r6+0xa] (u)
  102dbc:    72 00              <unkown instruction>
  102dbe:    25 73             	r5 = [r2+-0x34] 
  102dc0:    20 25             	r0 = [sp+148]
  102dc2:    64 0a             	r4 = [r6++=r12] 
  102dc4:    00 76             	r0 = [r0+-0x28] 
  102dc6:    50 6f             	r0 = [r5+0x3c] 
  102dc8:    72 74             	r2 = [r7+-0x30] 
  102dca:    45 78             	r5 = [r4+-0x20] 
  102dcc:    69 74             	r1 = h[r6+-0x18] (u)
  102dce:    43 72             	r3 = [r4+-0x38] 
  102dd0:    69 74             	r1 = h[r6+-0x18] (u)
  102dd2:    69 63             	r1 = h[r6+0x6] (u)
  102dd4:    61 6c             	r1 = [r6+0x30] 
  102dd6:    00 00             	nop


os_code_end:
  102dd7:    00 76             	r0 = [r0+-0x28] 


pmalloc_init:
  102dd8:    76 04             	[--sp] = {rets, r6-r4}			  ## pmalloc.c:73:0
  102dda:    15 16             	r5 = r1			  ## pmalloc.c:73:0
  102ddc:    06 16             	r6 = r0			  ## pmalloc.c:73:0
  102dde:    c4 ff 08 be 02 00 	r4 = 0x2be08 <physics_mem : 2be08 >			  ## pmalloc.c:73:0
  102de4:    41 20             	r1 = 0x0			  ## pmalloc.c:75:5
  102de6:    72 2c             	r2 = 0xcc			  ## pmalloc.c:75:5
  102de8:    40 16             	r0 = r4			  ## pmalloc.c:75:5
  102dea:    bf ea 36 eb       	call -0x2994 <memset : 10045a >			  ## pmalloc.c:75:5
  102dee:    00 e1 7f 60       	r0 = r6 + 0x7f			  ## pmalloc.c:76:30
  102df2:    71 e1 7f 00       	r1 = r0 & 0xFFFFFF80			  ## pmalloc.c:76:30
  102df6:    42 16             	r2 = r4			  ## pmalloc.c:76:23
  102df8:    d0 ec 2b 1b       	[++r2=0xb8] = r1			  ## pmalloc.c:76:23
  102dfc:    73 e1 7f 50       	r3 = r5 & 0xFFFFFF80			  ## pmalloc.c:77:34
  102e00:    39 de             	r1 = r3 - r1  #			  ## pmalloc.c:78:40
  102e02:    a3 61             		 [r2+0x4] = r3			  ## pmalloc.c:77:21
  102e04:    a1 62             	[r2+0x8] = r1			  ## pmalloc.c:78:22
  102e06:    91 a7             	r1 = r1 >> 0x7			  ## pmalloc.c:79:48
  102e08:    a9 69             	h[r2+0x12] = r1			  ## pmalloc.c:79:29
  102e0a:    80 a7             	r0 = r0 >> 0x7			  ## pmalloc.c:84:70
  102e0c:    a8 66             	h[r2+0xc] = r0			  ## pmalloc.c:84:29
  102e0e:    d1 a7             	r1 = r5 >> 0x7			  ## pmalloc.c:85:66
  102e10:    80 d7             	r0 = r0.l (u)  #			  ## pmalloc.c:90:18
  102e12:    a9 67             		 h[r2+0xe] = r1			  ## pmalloc.c:85:27
  102e14:    04 93             	goto 0x26 <pmalloc_init+0x64 : 102e3c >
  102e16:    81 a5             	r1 = r0 >> 0x5			  ## pmalloc.c:91:27
  102e18:    12 a2             	r2 = r1 << 0x2			  ## pmalloc.c:91:9
  102e1a:    42 18             	r2 += r4			  ## pmalloc.c:91:9
  102e1c:    63 e1 1f 00       	r3 = r0 & 0x1F			  ## pmalloc.c:91:42
  102e20:    66 e8 00 23       	[r2+0x0] |= 1 << r3			  ## pmalloc.c:91:39
  102e24:    82 aa             	r2 = r0 >> 0xa			  ## pmalloc.c:92:9
  102e26:    22 a2             	r2 = r2 << 0x2			  ## pmalloc.c:92:41
  102e28:    42 18             	r2 += r4			  ## pmalloc.c:92:41
  102e2a:    02 e1 b0 20       	r2 = r2 + 0xb0			  ## pmalloc.c:92:9
  102e2e:    61 e1 1f 10       	r1 = r1 & 0x1F			  ## pmalloc.c:92:56
  102e32:    66 e8 00 21       	[r2+0x0] |= 1 << r1			  ## pmalloc.c:92:53
  102e36:    50 ed 46 1c       	r1 = h[r4+0xc6] (u)			  ## pmalloc.c:92:53
  102e3a:    c0 21             	r0 += 0x1			  ## pmalloc.c:90:71
  102e3c:    91 17             	r1 = r1.l (u)			  ## pmalloc.c:90:47
  102e3e:    81 e9 ea 01       	if (r0 < r1) goto -0x2c <pmalloc_init+0x3E : 102e16 >			  ## pmalloc.c:90:5
  102e42:    56 04             	{pc, r6-r4} = [sp++]			  ## pmalloc.c:100:1


pmm_get_var:
  102e44:    c0 ff 08 be 02 00 	r0 = 0x2be08 <physics_mem : 2be08 >			  ## pmalloc.c:103:0
  102e4a:    80 00             	rts			  ## pmalloc.c:104:5


pmalloc_get_unused_pages:
  102e4c:    c0 ff 08 be 02 00 	r0 = 0x2be08 <physics_mem : 2be08 >			  ## pmalloc.c:136:0
  102e52:    50 ed 08 1c       	r1 = h[r0+0xc8] (u)			  ## pmalloc.c:137:38
  102e56:    50 ed 0a 0c       	r0 = h[r0+0xca] (u)			  ## pmalloc.c:137:12
  102e5a:    08 1e             	r0 = r0 - r1			  ## pmalloc.c:137:36
  102e5c:    80 00             	rts			  ## pmalloc.c:137:5


pmalloc:
  102e5e:    75 04             	[--sp] = {rets, r5, r4}			  ## pmalloc.c:169:0
  102e60:    c0 ff 08 be 02 00 	r0 = 0x2be08 <physics_mem : 2be08 >			  ## pmalloc.c:169:0
  102e66:    d0 ec 00 1b       	r1 = [r0+0xb0]			  ## pmalloc.c:171:14
  102e6a:    d0 ec 04 3b       	r3 = [r0+0xb4]			  ## pmalloc.c:172:14
  102e6e:    90 e1 30 21       	r2 = r3 | r1			  ## pmalloc.c:173:19
  102e72:    12 4a             	if (r2 == 0) goto 0x54 <pmalloc+0x6A : 102ec8 >
  102e74:    b3 e8 00 50       	if (r3 != 0x0) {
  102e78:    4a 3f             		r2 = 0x3f
  102e7a:    31 16             		r1 = r3
                               	} else {			  ## pmalloc.c:180:13
  102e7c:    42 3f             		r2 = 0x1f
                               	}
  102e7e:    80 e1 00 11       	r1 = clz(r1)			  ## pmalloc.c:143:5
  102e82:    29 1e             	r1 = r2 - r1			  ## pmalloc.c:187:29
  102e84:    d8 ec 0a 21       	r2 = [r0+r1<<2]			  ## pmalloc.c:191:9
  102e88:    80 e1 00 22       	r2 = clz(r2)			  ## pmalloc.c:143:5
  102e8c:    d8 ec 0a 31       	r3 = [r0+r1<<2]			  ## pmalloc.c:194:34
  102e90:    a2 e0 1f 20       	r2 = 0x1F - r2			  ## pmalloc.c:191:9
  102e94:    94 e1 33 42       	r4 = r3 & ~(1 << r2)			  ## pmalloc.c:194:34
  102e98:    15 3f             	r5 = -0x1			  ## pmalloc.c:194:37
  102e9a:    94 e1 51 52       	r5 = r5 ^ (1 << r2)			  ## pmalloc.c:194:37
  102e9e:    d8 ec 0b 41       	[r0+r1<<2] = r4			  ## pmalloc.c:194:34
  102ea2:    53 fb 09 00       	if ((r3 & r5) != 0) goto 0x12 <pmalloc+0x5A : 102eb8 >			  ## pmalloc.c:194:34
  102ea6:    93 a5             	r3 = r1 >> 0x5			  ## pmalloc.c:196:13
  102ea8:    33 a2             	r3 = r3 << 0x2			  ## pmalloc.c:196:40
  102eaa:    03 18             	r3 += r0			  ## pmalloc.c:196:40
  102eac:    03 e1 b0 30       	r3 = r3 + 0xb0			  ## pmalloc.c:196:13
  102eb0:    64 e1 1f 10       	r4 = r1 & 0x1F			  ## pmalloc.c:196:56
  102eb4:    66 e8 03 34       	[r3+0x0] &= ~(1 << r4)			  ## pmalloc.c:196:52
  102eb8:    50 ed 08 3c       	r3 = h[r0+0xc8] (u)			  ## pmalloc.c:198:31
  102ebc:    c3 21             	r3 += 0x1			  ## pmalloc.c:198:31
  102ebe:    50 ed 09 3c       	h[r0+0xc8] = r3			  ## pmalloc.c:198:31
  102ec2:    10 a5             	r0 = r1 << 0x5			  ## pmalloc.c:205:24
  102ec4:    20 18             	r0 += r2			  ## pmalloc.c:205:35
  102ec6:    04 83             	goto 0x6 <pmalloc+0x70 : 102ece >			  ## pmalloc.c:205:35
  102ec8:    c0 ff ff ff 00 00 	r0 = 0xffff <os_code_size+0xDEC7 : fffe >
  102ece:    80 17             	r0 = r0.l (u)			  ## pmalloc.c:210:1
  102ed0:    55 04             	{pc, r5, r4} = [sp++]			  ## pmalloc.c:210:1


get_physic_address:
  102ed2:    c1 ff 08 be 02 00 	r1 = 0x2be08 <physics_mem : 2be08 >			  ## pmalloc.c:213:0
  102ed8:    50 ed 14 2c       	r2 = h[r1+0xc4] (u)			  ## pmalloc.c:214:29
  102edc:    d0 ec 18 1b       	r1 = [r1+0xb8]			  ## pmalloc.c:214:80
  102ee0:    80 1e             	r0 = r0 - r2			  ## pmalloc.c:214:27
  102ee2:    00 a7             	r0 = r0 << 0x7			  ## pmalloc.c:214:54
  102ee4:    10 18             	r0 += r1			  ## pmalloc.c:214:66
  102ee6:    80 00             	rts			  ## pmalloc.c:214:5


pfree:
  102ee8:    78 04             	[--sp] = {rets, r8-r4}			  ## pmalloc.c:222:0
  102eea:    04 16             	r4 = r0			  ## pmalloc.c:222:0
  102eec:    c7 a5             	r7 = r4 >> 0x5			  ## pmalloc.c:223:5
  102eee:    c5 ff 08 be 02 00 	r5 = 0x2be08 <physics_mem : 2be08 >			  ## pmalloc.c:223:5
  102ef4:    d8 ec 5a 07       	r0 = [r5+r7<<2]			  ## pmalloc.c:223:5
  102ef8:    61 e1 1f 40       	r1 = r4 & 0x1F			  ## pmalloc.c:223:5
  102efc:    42 21             	r2 = 0x1			  ## pmalloc.c:223:5
  102efe:    c8 e1 20 61       	r6 = r2 << r1			  ## pmalloc.c:223:5
  102f02:    c8 ff e8 bc 02 00 	r8 = 0x2bce8 <mask_log_e : 2bce8 >			  ## pmalloc.c:223:5
  102f08:    60 fa 08 00       	if ((r0 & r6) == 0) goto 0x10 <pfree+0x34 : 102f1c >			  ## pmalloc.c:223:5
  102f0c:    d0 ec 80 10       	r1 = [r8+0x0]			  ## pmalloc.c:223:5
  102f10:    c0 ff c0 33 10 00 	r0 = 0x1033c0 <vmem_end+0xA : 1033c0 >			  ## pmalloc.c:223:5
  102f16:    c1 00             	call r1			  ## pmalloc.c:223:5
  102f18:    d8 ec 5a 07       	r0 = [r5+r7<<2]			  ## pmalloc.c:223:5
  102f1c:    60 19             	r0 |= r6			  ## pmalloc.c:224:38
  102f1e:    d8 ec 5b 07       	[r5+r7<<2] = r0			  ## pmalloc.c:224:38
  102f22:    c0 a8             	r0 = r4 >> 0x8			  ## pmalloc.c:225:5
  102f24:    60 e1 fc 00       	r0 = r0 & 0xFC			  ## pmalloc.c:225:40
  102f28:    50 18             	r0 += r5			  ## pmalloc.c:225:40
  102f2a:    00 e1 b0 00       	r0 = r0 + 0xb0			  ## pmalloc.c:225:5
  102f2e:    61 e1 1f 70       	r1 = r7 & 0x1F			  ## pmalloc.c:225:55
  102f32:    66 e8 00 01       	[r0+0x0] |= 1 << r1			  ## pmalloc.c:225:52
  102f36:    50 ed 58 0c       	r0 = h[r5+0xc8] (u)			  ## pmalloc.c:226:5
  102f3a:    80 48             	if (r0 != 0) goto 0x10 <pfree+0x64 : 102f4c >			  ## pmalloc.c:226:5
  102f3c:    d0 ec 80 10       	r1 = [r8+0x0]			  ## pmalloc.c:226:5
  102f40:    c0 ff 0d 34 10 00 	r0 = 0x10340d <vmem_end+0x56 : 10340c >			  ## pmalloc.c:226:5
  102f46:    c1 00             	call r1			  ## pmalloc.c:226:5
  102f48:    50 ed 58 0c       	r0 = h[r5+0xc8] (u)			  ## pmalloc.c:226:5
  102f4c:    f8 3f             	r0 += -0x1			  ## pmalloc.c:227:27
  102f4e:    50 ed 59 0c       	h[r5+0xc8] = r0			  ## pmalloc.c:227:27
  102f52:    58 04             	{pc, r8-r4} = [sp++]			  ## pmalloc.c:230:1


vmm_init_:
  102f54:    76 04             	[--sp] = {rets, r6-r4}			  ## vmalloc.c:73:0
  102f56:    14 16             	r4 = r1			  ## vmalloc.c:73:0
  102f58:    05 16             	r5 = r0			  ## vmalloc.c:73:0
  102f5a:    c6 ff 00 04 1b 00 	r6 = 0x1b0400 <__stub_LZ4_decompress_safe_usingDict+0xA0404 : 1b0400 >			  ## vmalloc.c:73:0
  102f60:    00 ef 01 60       	[r6+0x0] |= 0x1			  ## vmalloc.c:59:5
  102f64:    48 dd             	r0 = r4 + r5  #			  ## vmalloc.c:61:38
  102f66:    e5 61             		 [r6+0x4] = r5			  ## vmalloc.c:60:22
  102f68:    f8 3f             	r0 += -0x1			  ## vmalloc.c:61:45
  102f6a:    e0 62             	[r6+0x8] = r0			  ## vmalloc.c:61:22
  102f6c:    00 ef 10 60       	[r6+0x0] |= 0x10			  ## vmalloc.c:63:5
  102f70:    41 20             	r1 = 0x0			  ## vmalloc.c:64:5
  102f72:    50 16             	r0 = r5			  ## vmalloc.c:64:5
  102f74:    42 16             	r2 = r4			  ## vmalloc.c:64:5
  102f76:    bf ea 70 ea       	call -0x2b20 <memset : 10045a >			  ## vmalloc.c:64:5
  102f7a:    c0 ef 10 60       	[r6+0x0] &= 0xFFFFFFEF			  ## vmalloc.c:65:5
  102f7e:    c0 ff d4 be 02 00 	r0 = 0x2bed4 <v_mems : 2bed4 >			  ## vmalloc.c:86:21
  102f84:    85 60             	[r0+0x0] = r5			  ## vmalloc.c:78:24
  102f86:    41 ea 00 09       	[r0+0x4] = 0x200000			  ## vmalloc.c:83:21
  102f8a:    c1 a1             	r1 = r4 >> 0x1			  ## vmalloc.c:80:28
  102f8c:    12 a7             	r2 = r1 << 0x7			  ## vmalloc.c:81:32
  102f8e:    e2 f0 00 29       	r2 = r2 + 0x200000  #			  ## vmalloc.c:85:35
  102f92:    82 63             		 [r0+0xc] = r2			  ## vmalloc.c:84:21
  102f94:    82 62             	[r0+0x8] = r2			  ## vmalloc.c:85:21
  102f96:    89 69             	h[r0+0x12] = r1			  ## vmalloc.c:86:21
  102f98:    56 04             	{pc, r6-r4} = [sp++]			  ## vmalloc.c:92:1


vmm_get_var:
  102f9a:    c0 ff d4 be 02 00 	r0 = 0x2bed4 <v_mems : 2bed4 >			  ## vmalloc.c:95:0
  102fa0:    80 00             	rts			  ## vmalloc.c:96:5


vmalloc_:
  102fa2:    7f 04             	[--sp] = {rets, r15-r4}			  ## vmalloc.c:121:0
  102fa4:    e2 9f             	sp += -0x4			  ## vmalloc.c:121:0
  102fa6:    02 e1 7f 10       	r2 = r1 + 0x7f			  ## vmalloc.c:122:22
  102faa:    a4 a7             	r4 = r2 >> 0x7			  ## vmalloc.c:122:22
  102fac:    ca ff e8 bc 02 00 	r10 = 0x2bce8 <mask_log_e : 2bce8 >
  102fb2:    04 51             	if (r4 == 0) goto 0x22 <vmalloc_+0x34 : 102fd6 >
  102fb4:    c6 ff 08 be 02 00 	r6 = 0x2be08 <physics_mem : 2be08 >
  102fba:    50 ed 68 2c       	r2 = h[r6+0xc8] (u)			  ## pmalloc.c:137:38
  102fbe:    50 ed 6a 1c       	r1 = h[r6+0xca] (u)			  ## pmalloc.c:137:12
  102fc2:    91 1e             	r1 = r1 - r2			  ## pmalloc.c:137:36
  102fc4:    04 e9 0f 10       	if (r1 >= r4) goto 0x1e <vmalloc_+0x44 : 102fe6 >			  ## pmalloc.c:137:36
  102fc8:    d0 ec a0 10       	r1 = [r10+0x0]			  ## vmalloc.c:133:9
  102fcc:    c0 ff 49 34 10 00 	r0 = 0x103449 <vmem_end+0x92 : 103448 >			  ## vmalloc.c:133:9
  102fd2:    c1 00             	call r1			  ## vmalloc.c:133:9
  102fd4:    04 86             	goto 0xc <vmalloc_+0x40 : 102fe2 >			  ## vmalloc.c:133:9
  102fd6:    d0 ec a0 20       	r2 = [r10+0x0]			  ## vmalloc.c:129:9
  102fda:    c0 ff 31 34 10 00 	r0 = 0x103431 <vmem_end+0x7A : 103430 >			  ## vmalloc.c:129:9
  102fe0:    c2 00             	call r2			  ## vmalloc.c:129:9
  102fe2:    10 3f             	r0 = -0x1
  102fe4:    34 96             	goto 0xec <vmalloc_+0x130 : 1030d2 >
  102fe6:    cb ff d4 be 02 00 	r11 = 0x2bed4 <v_mems : 2bed4 >
  102fec:    d0 ec b4 10       	r1 = [r11+0x4]			  ## vmalloc.c:123:41
  102ff0:    08 de             	r0 = r0 - r1  #			  ## vmalloc.c:123:32
  102ff2:    80 20             		 [sp] = r0
  102ff4:    85 a7             	r5 = r0 >> 0x7			  ## vmalloc.c:123:48
  102ff6:    57 a1             	r7 = r5 << 0x1			  ## vmalloc.c:136:14
  102ff8:    cc ff 00 04 1b 00 	r12 = 0x1b0400 <__stub_LZ4_decompress_safe_usingDict+0xA0404 : 1b0400 >			  ## vmalloc.c:136:14
  102ffe:    cd ff ff ff 00 00 	r13 = 0xffff <os_code_size+0xDEC7 : fffe >			  ## vmalloc.c:136:14
  103004:    4e e0 ff 1f       	r14 = 0x1fff			  ## vmalloc.c:136:14
  103008:    4f e0 ff ff       	r15 = -0x1			  ## vmalloc.c:136:14
  10300c:    c9 ff 70 34 10 00 	r9 = 0x103470 <vmem_end+0xBA : 103470 >			  ## vmalloc.c:136:14
  103012:    24 9d             	goto 0xba <vmalloc_+0x12C : 1030ce >			  ## vmalloc.c:136:14
  103014:    d0 ec b0 00       	r0 = [r11+0x0]			  ## vmalloc.c:138:9
  103018:    8a 1d             	r2 = r0 + r7			  ## vmalloc.c:138:9
  10301a:    28 41             	r0 = b[r2+0x1] (u)			  ## vmalloc.c:138:9
  10301c:    30 ea 20 c0       	if ((r0 & 0x20) != 0) {			  ## vmalloc.c:138:9
  103020:    d0 ec a0 30       		r3 = [r10+0x0]			  ## vmalloc.c:138:9
  103024:    90 16             		r0 = r9			  ## vmalloc.c:138:9
  103026:    51 16             		r1 = r5			  ## vmalloc.c:138:9
  103028:    c3 00             		call r3
                               	}			  ## vmalloc.c:138:9
  10302a:    00 ef 10 c0       	[r12+0x0] |= 0x10			  ## vmalloc.c:139:9
  10302e:    d0 ec 60 0b       	r0 = [r6+0xb0]			  ## pmalloc.c:171:14
  103032:    d0 ec 64 2b       	r2 = [r6+0xb4]			  ## pmalloc.c:172:14
  103036:    90 e1 20 30       	r3 = r2 | r0			  ## pmalloc.c:173:19
  10303a:    d1 16             	r1 = r13
  10303c:    13 48             	if (r3 == 0) goto 0x50 <vmalloc_+0xEC : 10308e >
  10303e:    b2 e8 00 50       	if (r2 != 0x0) {
  103042:    49 3f             		r1 = 0x3f
  103044:    20 16             		r0 = r2
                               	} else {			  ## pmalloc.c:180:13
  103046:    41 3f             		r1 = 0x1f
                               	}
  103048:    80 e1 00 00       	r0 = clz(r0)			  ## pmalloc.c:143:5
  10304c:    10 1e             	r0 = r1 - r0			  ## pmalloc.c:187:29
  10304e:    d8 ec 6a 10       	r1 = [r6+r0<<2]			  ## pmalloc.c:191:9
  103052:    80 e1 00 11       	r1 = clz(r1)			  ## pmalloc.c:143:5
  103056:    d8 ec 6a 20       	r2 = [r6+r0<<2]			  ## pmalloc.c:194:34
  10305a:    a1 e0 1f 10       	r1 = 0x1F - r1			  ## pmalloc.c:191:9
  10305e:    94 e1 23 31       	r3 = r2 & ~(1 << r1)			  ## pmalloc.c:194:34
  103062:    94 e1 f1 81       	r8 = r15 ^ (1 << r1)			  ## pmalloc.c:194:37
  103066:    d8 ec 6b 30       	[r6+r0<<2] = r3			  ## pmalloc.c:194:34
  10306a:    82 fb 09 00       	if ((r2 & r8) != 0) goto 0x12 <vmalloc_+0xDE : 103080 >			  ## pmalloc.c:194:34
  10306e:    82 a5             	r2 = r0 >> 0x5			  ## pmalloc.c:196:13
  103070:    22 a2             	r2 = r2 << 0x2			  ## pmalloc.c:196:40
  103072:    62 18             	r2 += r6			  ## pmalloc.c:196:40
  103074:    02 e1 b0 20       	r2 = r2 + 0xb0			  ## pmalloc.c:196:13
  103078:    63 e1 1f 00       	r3 = r0 & 0x1F			  ## pmalloc.c:196:56
  10307c:    66 e8 03 23       	[r2+0x0] &= ~(1 << r3)			  ## pmalloc.c:196:52
  103080:    50 ed 68 2c       	r2 = h[r6+0xc8] (u)			  ## pmalloc.c:198:31
  103084:    c2 21             	r2 += 0x1			  ## pmalloc.c:198:31
  103086:    50 ed 69 2c       	h[r6+0xc8] = r2			  ## pmalloc.c:198:31
  10308a:    00 a5             	r0 = r0 << 0x5			  ## pmalloc.c:205:24
  10308c:    01 18             	r1 += r0			  ## pmalloc.c:205:35
  10308e:    d0 ec b0 00       	r0 = [r11+0x0]			  ## vmalloc.c:140:16
  103092:    70 18             	r0 += r7			  ## vmalloc.c:140:47
  103094:    90 f1 12 1e       	r1 = r1 & r14  #			  ## vmalloc.c:140:47
  103098:    0a 41             		 r2 = b[r0+0x1] (u)			  ## vmalloc.c:140:47
  10309a:    0b 40             	r3 = b[r0+0x0] (u)			  ## vmalloc.c:140:47
  10309c:    a3 f1 20 24       	r3 <= insert(r2, p:0x8, l:0x8)  #			  ## vmalloc.c:140:47
  1030a0:    89 40             		 b[r0+0x0] = r1			  ## vmalloc.c:140:47
  1030a2:    62 e1 60 3c       	r2 = r3 & 0xE000			  ## vmalloc.c:140:47
  1030a6:    21 19             	r1 |= r2			  ## vmalloc.c:140:47
  1030a8:    91 a8             	r1 = r1 >> 0x8			  ## vmalloc.c:140:47
  1030aa:    89 41             	b[r0+0x1] = r1			  ## vmalloc.c:140:47
  1030ac:    d0 ec b0 00       	r0 = [r11+0x0]			  ## vmalloc.c:141:16
  1030b0:    70 18             	r0 += r7			  ## vmalloc.c:141:47
  1030b2:    09 41             	r1 = b[r0+0x1] (u)			  ## vmalloc.c:141:47
  1030b4:    0a 40             	r2 = b[r0+0x0] (u)			  ## vmalloc.c:141:47
  1030b6:    a2 e1 60 14       	r2 <= insert(r1, p:0x8, l:0x18)			  ## vmalloc.c:141:47
  1030ba:    41 f1 00 2d       	r1 = r2 | 0x2000  #			  ## vmalloc.c:141:47
  1030be:    8a 40             		 b[r0+0x0] = r2			  ## vmalloc.c:141:47
  1030c0:    91 a8             	r1 = r1 >> 0x8			  ## vmalloc.c:141:47
  1030c2:    89 41             	b[r0+0x1] = r1			  ## vmalloc.c:141:47
  1030c4:    c0 ef 10 c0       	[r12+0x0] &= 0xFFFFFFEF			  ## vmalloc.c:143:9
  1030c8:    fc 3f             	r4 += -0x1			  ## vmalloc.c:136:5
  1030ca:    c7 22             	r7 += 0x2			  ## vmalloc.c:136:5
  1030cc:    c5 21             	r5 += 0x1			  ## vmalloc.c:142:18
  1030ce:    d4 42             	if (r4 != 0) goto -0xbc <vmalloc_+0x72 : 103014 >
  1030d0:    00 20             	r0 = [sp]
  1030d2:    02 81             	sp += 0x4
  1030d4:    5f 04             	{pc, r15-r4} = [sp++]			  ## vmalloc.c:147:1


vfree_:
  1030d6:    7f 04             	[--sp] = {rets, r15-r4}			  ## vmalloc.c:150:0
  1030d8:    ce ff d4 be 02 00 	r14 = 0x2bed4 <v_mems : 2bed4 >			  ## vmalloc.c:150:0
  1030de:    d0 ec e4 20       	r2 = [r14+0x4]			  ## vmalloc.c:152:41
  1030e2:    80 1e             	r0 = r0 - r2			  ## vmalloc.c:152:32
  1030e4:    80 a7             	r0 = r0 >> 0x7			  ## vmalloc.c:154:10
  1030e6:    07 a1             	r7 = r0 << 0x1			  ## vmalloc.c:152:48
  1030e8:    00 e1 7f 10       	r0 = r1 + 0x7f			  ## vmalloc.c:151:22
  1030ec:    84 a7             	r4 = r0 >> 0x7			  ## vmalloc.c:151:22
  1030ee:    4a e0 01 00       	r10 = 0x1
  1030f2:    cf ff 08 be 02 00 	r15 = 0x2be08 <physics_mem : 2be08 >
  1030f8:    cb ff e8 bc 02 00 	r11 = 0x2bce8 <mask_log_e : 2bce8 >
  1030fe:    cc ff 00 04 1b 00 	r12 = 0x1b0400 <__stub_LZ4_decompress_safe_usingDict+0xA0404 : 1b0400 >
  103104:    cd ff ff df 00 00 	r13 = 0xdfff <os_code_size+0xBEC7 : dffe >
  10310a:    c9 ff c0 33 10 00 	r9 = 0x1033c0 <vmem_end+0xA : 1033c0 >
  103110:    24 89             	goto 0x92 <vfree_+0xCE : 1031a4 >
  103112:    d0 ec e0 00       	r0 = [r14+0x0]			  ## vmalloc.c:156:20
  103116:    70 18             	r0 += r7			  ## vmalloc.c:156:43
  103118:    09 41             	r1 = b[r0+0x1] (u)			  ## vmalloc.c:156:43
  10311a:    08 40             	r0 = b[r0+0x0] (u)			  ## vmalloc.c:156:43
  10311c:    a0 e1 20 14       	r0 <= insert(r1, p:0x8, l:0x8)			  ## vmalloc.c:156:43
  103120:    50 e8 3e 68       	if ((r0 & 0x2000) == 0) goto 0x7c <vfree_+0xCA : 1031a0 >			  ## vmalloc.c:156:43
  103124:    b6 e1 a0 02       	r6 = uextra(r0, p:0x5, l:0x8)			  ## pmalloc.c:223:5
  103128:    d8 ec fa 16       	r1 = [r15+r6<<2]			  ## pmalloc.c:223:5
  10312c:    62 e1 1f 00       	r2 = r0 & 0x1F			  ## pmalloc.c:223:5
  103130:    c8 e1 a0 82       	r8 = r10 << r2			  ## pmalloc.c:223:5
  103134:    75 e1 60 0c       	r5 = r0 & 0xFFFF1FFF			  ## vmalloc.c:158:49
  103138:    81 fa 06 00       	if ((r1 & r8) == 0) goto 0xc <vfree_+0x72 : 103148 >			  ## vmalloc.c:158:49
  10313c:    d0 ec b0 10       	r1 = [r11+0x0]			  ## pmalloc.c:223:5
  103140:    90 16             	r0 = r9			  ## pmalloc.c:223:5
  103142:    c1 00             	call r1			  ## pmalloc.c:223:5
  103144:    d8 ec fa 16       	r1 = [r15+r6<<2]			  ## pmalloc.c:223:5
  103148:    90 e1 10 08       	r0 = r1 | r8			  ## pmalloc.c:224:38
  10314c:    d8 ec fb 06       	[r15+r6<<2] = r0			  ## pmalloc.c:224:38
  103150:    60 e1 7c 5c       	r0 = r5 & 0xFC00			  ## pmalloc.c:225:40
  103154:    80 a8             	r0 = r0 >> 0x8			  ## pmalloc.c:225:5
  103156:    f0 18             	r0 += r15			  ## pmalloc.c:225:5
  103158:    00 e1 b0 00       	r0 = r0 + 0xb0			  ## pmalloc.c:225:5
  10315c:    71 e1 e0 60       	r1 = r6 & 0xFFFFFF1F			  ## pmalloc.c:225:55
  103160:    66 e8 00 01       	[r0+0x0] |= 1 << r1			  ## pmalloc.c:225:52
  103164:    50 ed f8 0c       	r0 = h[r15+0xc8] (u)			  ## pmalloc.c:226:5
  103168:    80 48             	if (r0 != 0) goto 0x10 <vfree_+0xA4 : 10317a >			  ## pmalloc.c:226:5
  10316a:    d0 ec b0 10       	r1 = [r11+0x0]			  ## pmalloc.c:226:5
  10316e:    c0 ff 0d 34 10 00 	r0 = 0x10340d <vmem_end+0x56 : 10340c >			  ## pmalloc.c:226:5
  103174:    c1 00             	call r1			  ## pmalloc.c:226:5
  103176:    50 ed f8 0c       	r0 = h[r15+0xc8] (u)			  ## pmalloc.c:226:5
  10317a:    f8 3f             	r0 += -0x1			  ## pmalloc.c:227:27
  10317c:    50 ed f9 0c       	h[r15+0xc8] = r0			  ## pmalloc.c:227:27
  103180:    00 ef 10 c0       	[r12+0x0] |= 0x10			  ## vmalloc.c:159:13
  103184:    d0 ec e0 00       	r0 = [r14+0x0]			  ## vmalloc.c:160:20
  103188:    70 18             	r0 += r7			  ## vmalloc.c:160:51
  10318a:    09 41             	r1 = b[r0+0x1] (u)			  ## vmalloc.c:160:51
  10318c:    0a 40             	r2 = b[r0+0x0] (u)			  ## vmalloc.c:160:51
  10318e:    a2 e1 20 14       	r2 <= insert(r1, p:0x8, l:0x8)			  ## vmalloc.c:160:51
  103192:    90 e1 22 1d       	r1 = r2 & r13			  ## vmalloc.c:160:51
  103196:    89 40             	b[r0+0x0] = r1			  ## vmalloc.c:160:51
  103198:    91 a8             	r1 = r1 >> 0x8			  ## vmalloc.c:160:51
  10319a:    89 41             	b[r0+0x1] = r1			  ## vmalloc.c:160:51
  10319c:    c0 ef 10 c0       	[r12+0x0] &= 0xFFFFFFEF			  ## vmalloc.c:161:13
  1031a0:    fc 3f             	r4 += -0x1			  ## vmalloc.c:154:5
  1031a2:    c7 22             	r7 += 0x2			  ## vmalloc.c:154:5
  1031a4:    d4 56             	if (r4 != 0) goto -0x94 <vfree_+0x3C : 103112 >
  1031a6:    5f 04             	{pc, r15-r4} = [sp++]			  ## vmalloc.c:164:1


vmalloc_v2:
  1031a8:    7b 04             	[--sp] = {rets, r11-r4}			  ## vmalloc.c:166:0
  1031aa:    02 e1 7f 10       	r2 = r1 + 0x7f			  ## vmalloc.c:167:22
  1031ae:    a2 a7             	r2 = r2 >> 0x7			  ## vmalloc.c:167:22
  1031b0:    c3 ff e8 bc 02 00 	r3 = 0x2bce8 <mask_log_e : 2bce8 >
  1031b6:    02 51             	if (r2 == 0) goto 0x22 <vmalloc_v2+0x32 : 1031da >			  ## vmalloc.c:172:9
  1031b8:    cb ff 08 be 02 00 	r11 = 0x2be08 <physics_mem : 2be08 >
  1031be:    50 ed b8 4c       	r4 = h[r11+0xc8] (u)			  ## pmalloc.c:137:38
  1031c2:    50 ed ba 5c       	r5 = h[r11+0xca] (u)			  ## pmalloc.c:137:12
  1031c6:    54 1f             	r4 = r5 - r4			  ## pmalloc.c:137:36
  1031c8:    02 e9 0e 40       	if (r4 >= r2) goto 0x1c <vmalloc_v2+0x40 : 1031e8 >			  ## pmalloc.c:137:36
  1031cc:    31 60             	r1 = [r3+0x0] 			  ## vmalloc.c:179:9
  1031ce:    c0 ff ae 34 10 00 	r0 = 0x1034ae <vmem_end+0xF8 : 1034ae >			  ## vmalloc.c:179:9
  1031d4:    c1 00             	call r1			  ## vmalloc.c:179:9
  1031d6:    10 3f             	r0 = -0x1
  1031d8:    5b 04             	{pc, r11-r4} = [sp++]			  ## vmalloc.c:195:1
  1031da:    32 60             	r2 = [r3+0x0] 			  ## vmalloc.c:174:9
  1031dc:    c0 ff 31 34 10 00 	r0 = 0x103431 <vmem_end+0x7A : 103430 >			  ## vmalloc.c:174:9
  1031e2:    c2 00             	call r2			  ## vmalloc.c:174:9
  1031e4:    10 3f             	r0 = -0x1
  1031e6:    5b 04             	{pc, r11-r4} = [sp++]			  ## vmalloc.c:195:1
  1031e8:    c3 ff d4 be 02 00 	r3 = 0x2bed4 <v_mems : 2bed4 >
  1031ee:    03 eb 18 00       	{r4, r3} = [r3+]			  ## vmalloc.c:168:41
  1031f2:    04 1f             	r4 = r0 - r4			  ## vmalloc.c:168:32
  1031f4:    c4 a7             	r4 = r4 >> 0x7			  ## vmalloc.c:168:48
  1031f6:    c8 ff 00 04 1b 00 	r8 = 0x1b0400 <__stub_LZ4_decompress_safe_usingDict+0xA0404 : 1b0400 >
  1031fc:    00 ef 10 80       	[r8+0x0] |= 0x10			  ## vmalloc.c:185:5
  103200:    44 a1             	r4 = r4 << 0x1			  ## vmalloc.c:183:18
  103202:    34 18             	r4 += r3			  ## vmalloc.c:183:18
  103204:    ca ff ff ff 00 00 	r10 = 0xffff <os_code_size+0xDEC7 : fffe >
  10320a:    49 e0 ff ff       	r9 = -0x1
  10320e:    14 95             	goto 0x6a <vmalloc_v2+0xD2 : 10327a >
  103210:    d0 ec b0 6b       	r6 = [r11+0xb0]			  ## pmalloc.c:171:14
  103214:    d0 ec b4 3b       	r3 = [r11+0xb4]			  ## pmalloc.c:172:14
  103218:    90 e1 30 56       	r5 = r3 | r6			  ## pmalloc.c:173:19
  10321c:    a7 16             	r7 = r10
  10321e:    15 48             	if (r5 == 0) goto 0x50 <vmalloc_v2+0xC8 : 103270 >
  103220:    b3 e8 00 50       	if (r3 != 0x0) {
  103224:    4f 3f             		r7 = 0x3f
  103226:    36 16             		r6 = r3
                               	} else {			  ## pmalloc.c:180:13
  103228:    47 3f             		r7 = 0x1f
                               	}
  10322a:    80 e1 00 36       	r3 = clz(r6)			  ## pmalloc.c:143:5
  10322e:    ff 1e             	r7 = r7 - r3			  ## pmalloc.c:187:29
  103230:    d8 ec ba 37       	r3 = [r11+r7<<2]			  ## pmalloc.c:191:9
  103234:    80 e1 00 33       	r3 = clz(r3)			  ## pmalloc.c:143:5
  103238:    d8 ec ba 57       	r5 = [r11+r7<<2]			  ## pmalloc.c:194:34
  10323c:    a3 e0 1f 30       	r3 = 0x1F - r3			  ## pmalloc.c:191:9
  103240:    94 e1 53 63       	r6 = r5 & ~(1 << r3)			  ## pmalloc.c:194:34
  103244:    94 e1 91 13       	r1 = r9 ^ (1 << r3)			  ## pmalloc.c:194:37
  103248:    d8 ec bb 67       	[r11+r7<<2] = r6			  ## pmalloc.c:194:34
  10324c:    15 fb 09 00       	if ((r5 & r1) != 0) goto 0x12 <vmalloc_v2+0xBA : 103262 >			  ## pmalloc.c:194:34
  103250:    f1 a5             	r1 = r7 >> 0x5			  ## pmalloc.c:196:13
  103252:    11 a2             	r1 = r1 << 0x2			  ## pmalloc.c:196:40
  103254:    b1 18             	r1 += r11			  ## pmalloc.c:196:40
  103256:    01 e1 b0 10       	r1 = r1 + 0xb0			  ## pmalloc.c:196:13
  10325a:    65 e1 1f 70       	r5 = r7 & 0x1F			  ## pmalloc.c:196:56
  10325e:    66 e8 03 15       	[r1+0x0] &= ~(1 << r5)			  ## pmalloc.c:196:52
  103262:    50 ed b8 1c       	r1 = h[r11+0xc8] (u)			  ## pmalloc.c:198:31
  103266:    c1 21             	r1 += 0x1			  ## pmalloc.c:198:31
  103268:    50 ed b9 1c       	h[r11+0xc8] = r1			  ## pmalloc.c:198:31
  10326c:    71 a5             	r1 = r7 << 0x5			  ## pmalloc.c:205:24
  10326e:    3f 1c             	r7 = r3 + r1			  ## pmalloc.c:205:35
  103270:    41 e1 00 7d       	r1 = r7 | 0x2000			  ## vmalloc.c:190:28
  103274:    c9 60             	h[r4+0x0] = r1			  ## vmalloc.c:190:16
  103276:    fa 3f             	r2 += -0x1			  ## vmalloc.c:186:5
  103278:    c4 22             	r4 += 0x2			  ## vmalloc.c:191:14
  10327a:    e2 4a             	if (r2 != 0) goto -0x6c <vmalloc_v2+0x68 : 103210 >
  10327c:    c0 ef 10 80       	[r8+0x0] &= 0xFFFFFFEF			  ## vmalloc.c:193:5
  103280:    5b 04             	{pc, r11-r4} = [sp++]			  ## vmalloc.c:195:1


vfree_v2:
  103282:    7f 04             	[--sp] = {rets, r15-r4}			  ## vmalloc.c:198:0
  103284:    c2 ff d4 be 02 00 	r2 = 0x2bed4 <v_mems : 2bed4 >			  ## vmalloc.c:200:41
  10328a:    50 ec 20 20       	r3_r2 = d[r2+0x0]			  ## vmalloc.c:200:41
  10328e:    c8 ff 00 04 1b 00 	r8 = 0x1b0400 <__stub_LZ4_decompress_safe_usingDict+0xA0404 : 1b0400 >			  ## vmalloc.c:200:41
  103294:    00 ef 10 80       	[r8+0x0] |= 0x10			  ## vmalloc.c:205:5
  103298:    88 1e             	r0 = r0 - r3			  ## vmalloc.c:200:32
  10329a:    80 a7             	r0 = r0 >> 0x7			  ## vmalloc.c:203:18
  10329c:    00 a1             	r0 = r0 << 0x1			  ## vmalloc.c:200:48
  10329e:    b4 e0 20 f0       	r15 = r2 + r0			  ## vmalloc.c:203:18
  1032a2:    00 e1 7f 10       	r0 = r1 + 0x7f			  ## vmalloc.c:199:22
  1032a6:    86 a7             	r6 = r0 >> 0x7			  ## vmalloc.c:199:22
  1032a8:    4b e0 01 00       	r11 = 0x1
  1032ac:    ce ff 08 be 02 00 	r14 = 0x2be08 <physics_mem : 2be08 >
  1032b2:    cc ff e8 bc 02 00 	r12 = 0x2bce8 <mask_log_e : 2bce8 >
  1032b8:    c9 ff 0d 34 10 00 	r9 = 0x10340d <vmem_end+0x56 : 10340c >
  1032be:    c5 14             	r13 = 0
  1032c0:    ca ff c0 33 10 00 	r10 = 0x1033c0 <vmem_end+0xA : 1033c0 >
  1032c6:    14 92             	goto 0x64 <vfree_v2+0xAA : 10332c >
  1032c8:    50 ed f0 10       	r1 = h[r15+0x0] (u)			  ## vmalloc.c:208:13
  1032cc:    51 e8 2d 68       	if ((r1 & 0x2000) == 0) goto 0x5a <vfree_v2+0xA8 : 10332a >
  1032d0:    b4 e1 a0 12       	r4 = uextra(r1, p:0x5, l:0x8)			  ## pmalloc.c:223:5
  1032d4:    d8 ec ea 04       	r0 = [r14+r4<<2]			  ## pmalloc.c:223:5
  1032d8:    62 e1 1f 10       	r2 = r1 & 0x1F			  ## pmalloc.c:223:5
  1032dc:    c8 e1 b0 72       	r7 = r11 << r2			  ## pmalloc.c:223:5
  1032e0:    75 e1 60 1c       	r5 = r1 & 0xFFFF1FFF			  ## vmalloc.c:211:26
  1032e4:    70 fa 06 00       	if ((r0 & r7) == 0) goto 0xc <vfree_v2+0x72 : 1032f4 >			  ## vmalloc.c:211:26
  1032e8:    d0 ec c0 10       	r1 = [r12+0x0]			  ## pmalloc.c:223:5
  1032ec:    a0 16             	r0 = r10			  ## pmalloc.c:223:5
  1032ee:    c1 00             	call r1			  ## pmalloc.c:223:5
  1032f0:    d8 ec ea 04       	r0 = [r14+r4<<2]			  ## pmalloc.c:223:5
  1032f4:    70 19             	r0 |= r7			  ## pmalloc.c:224:38
  1032f6:    d8 ec eb 04       	[r14+r4<<2] = r0			  ## pmalloc.c:224:38
  1032fa:    60 e1 7c 5c       	r0 = r5 & 0xFC00			  ## pmalloc.c:225:40
  1032fe:    80 a8             	r0 = r0 >> 0x8			  ## pmalloc.c:225:5
  103300:    e0 18             	r0 += r14			  ## pmalloc.c:225:5
  103302:    00 e1 b0 00       	r0 = r0 + 0xb0			  ## pmalloc.c:225:5
  103306:    71 e1 e0 40       	r1 = r4 & 0xFFFFFF1F			  ## pmalloc.c:225:55
  10330a:    66 e8 00 01       	[r0+0x0] |= 1 << r1			  ## pmalloc.c:225:52
  10330e:    50 ed e8 0c       	r0 = h[r14+0xc8] (u)			  ## pmalloc.c:226:5
  103312:    80 46             	if (r0 != 0) goto 0xc <vfree_v2+0x9E : 103320 >			  ## pmalloc.c:226:5
  103314:    d0 ec c0 10       	r1 = [r12+0x0]			  ## pmalloc.c:226:5
  103318:    90 16             	r0 = r9			  ## pmalloc.c:226:5
  10331a:    c1 00             	call r1			  ## pmalloc.c:226:5
  10331c:    50 ed e8 0c       	r0 = h[r14+0xc8] (u)			  ## pmalloc.c:226:5
  103320:    f8 3f             	r0 += -0x1			  ## pmalloc.c:227:27
  103322:    50 ed e9 0c       	h[r14+0xc8] = r0			  ## pmalloc.c:227:27
  103326:    d0 ed f3 d0       	h[r15++=0x2] = r13			  ## vmalloc.c:212:20
  10332a:    fe 3f             	r6 += -0x1			  ## vmalloc.c:206:5
  10332c:    e6 4d             	if (r6 != 0) goto -0x66 <vfree_v2+0x46 : 1032c8 >
  10332e:    c0 ef 10 80       	[r8+0x0] &= 0xFFFFFFEF			  ## vmalloc.c:216:5
  103332:    5f 04             	{pc, r15-r4} = [sp++]			  ## vmalloc.c:217:1


vcopy_:
  103334:    75 04             	[--sp] = {rets, r5, r4}			  ## vmalloc.c:220:0
  103336:    c3 ff d4 be 02 00 	r3 = 0x2bed4 <v_mems : 2bed4 >			  ## vmalloc.c:221:44
  10333c:    03 eb 18 00       	{r4, r3} = [r3+]			  ## vmalloc.c:221:44
  103340:    c5 ff 00 04 1b 00 	r5 = 0x1b0400 <__stub_LZ4_decompress_safe_usingDict+0xA0404 : 1b0400 >
  103346:    00 ef 10 50       	[r5+0x0] |= 0x10			  ## vmalloc.c:231:5
  10334a:    11 1f             	r1 = r1 - r4			  ## vmalloc.c:222:35
  10334c:    91 a7             	r1 = r1 >> 0x7			  ## vmalloc.c:227:18
  10334e:    11 a1             	r1 = r1 << 0x1			  ## vmalloc.c:222:51
  103350:    31 18             	r1 += r3			  ## vmalloc.c:227:18
  103352:    00 1f             	r0 = r0 - r4			  ## vmalloc.c:221:35
  103354:    80 a7             	r0 = r0 >> 0x7			  ## vmalloc.c:226:18
  103356:    00 a1             	r0 = r0 << 0x1			  ## vmalloc.c:221:51
  103358:    30 18             	r0 += r3			  ## vmalloc.c:226:18
  10335a:    da 3f             	r2 += 0x7f			  ## vmalloc.c:224:17
  10335c:    a2 a7             	r2 = r2 >> 0x7			  ## vmalloc.c:224:17
  10335e:    43 20             	r3 = 0x0
  103360:    32 03             	rep 0x8 r2 {			  ## vmalloc.c:232:5
  103362:    d0 ed 10 40       		r4 = h[r1++=0x0] (u)			  ## vmalloc.c:232:5
  103366:    84 06             		h[r0++=0x2] = r4			  ## vmalloc.c:232:5
  103368:    93 06             		h[r1++=0x2] = r3
                               	}			  ## vmalloc.c:232:5
  10336a:    f2 5a             	if (r2 != 0) goto -0xc <vcopy_+0x2C : 103360 >			  ## vmalloc.c:232:5
  10336c:    c0 ef 10 50       	[r5+0x0] &= 0xFFFFFFEF			  ## vmalloc.c:243:5
  103370:    55 04             	{pc, r5, r4} = [sp++]			  ## vmalloc.c:244:1


vmem_get_phy_adr:
  103372:    c1 ff d4 be 02 00 	r1 = 0x2bed4 <v_mems : 2bed4 >			  ## vmalloc.c:248:0
  103378:    01 eb 06 00       	{r2, r1} = [r1+]			  ## vmalloc.c:249:71
  10337c:    80 1e             	r0 = r0 - r2			  ## vmalloc.c:249:62
  10337e:    80 a7             	r0 = r0 >> 0x7			  ## vmalloc.c:249:91
  103380:    00 a1             	r0 = r0 << 0x1			  ## vmalloc.c:249:78
  103382:    10 18             	r0 += r1			  ## vmalloc.c:249:91
  103384:    43 f0 ff 1f       	r3 = 0x1fff  #			  ## vmalloc.c:249:31
  103388:    09 41             		 r1 = b[r0+0x1] (u)			  ## vmalloc.c:249:91
  10338a:    08 40             	r0 = b[r0+0x0] (u)			  ## vmalloc.c:249:91
  10338c:    a0 e1 20 14       	r0 <= insert(r1, p:0x8, l:0x8)			  ## vmalloc.c:249:91
  103390:    c1 ff 08 be 02 00 	r1 = 0x2be08 <physics_mem : 2be08 >			  ## pmalloc.c:214:80
  103396:    50 ed 14 2c       	r2 = h[r1+0xc4] (u)			  ## pmalloc.c:214:29
  10339a:    d0 ec 18 1b       	r1 = [r1+0xb8]			  ## pmalloc.c:214:80
  10339e:    b0 19             	r0 &= r3			  ## vmalloc.c:249:31
  1033a0:    80 1e             	r0 = r0 - r2			  ## pmalloc.c:214:27
  1033a2:    00 a7             	r0 = r0 << 0x7			  ## pmalloc.c:214:54
  1033a4:    10 18             	r0 += r1			  ## pmalloc.c:214:66
  1033a6:    80 00             	rts			  ## vmalloc.c:249:5


vmem_start:
  1033a8:    c0 ff d4 be 02 00 	r0 = 0x2bed4 <v_mems : 2bed4 >			  ## vmalloc.c:253:0
  1033ae:    00 61             	r0 = [r0+0x4] 			  ## vmalloc.c:254:28
  1033b0:    e0 e0 70 0c       	r0 = r0 + 0xF000			  ## vmalloc.c:254:34
  1033b4:    80 00             	rts			  ## vmalloc.c:254:5


vmem_end:
  1033b6:    c0 ff d4 be 02 00 	r0 = 0x2bed4 <v_mems : 2bed4 >			  ## vmalloc.c:258:0
  1033bc:    00 62             	r0 = [r0+0x8] 			  ## vmalloc.c:259:27
  1033be:    80 00             	rts			  ## vmalloc.c:259:5
  1033c0:    41 53             	if (r1 == 0) goto -0xda <vfree_v2+0x66 : 1032e8 >
  1033c2:    53 45             	if (r3 == 0) goto -0xb6 <vfree_v2+0x8C : 10330e >
  1033c4:    52 54             	if (r2 == 0) goto -0x98 <vfree_v2+0xAC : 10332e >
  1033c6:    3a 20             	r2 ^= 0x1
  1033c8:    28 70             	r0 = h[r2+-0x20] (u)
  1033ca:    68 79             	r0 = h[r6+-0xe] (u)
  1033cc:    73 69             	r3 = [r7+0x24] 
  1033ce:    63 73             	r3 = [r6+-0x34] 
  1033d0:    5f 6d             	r7 = h[r5+0x1a] (u)
  1033d2:    65 6d             	r5 = [r6+0x34] 
  1033d4:    2e 6d             	r6 = h[r2+0x1a] (u)
  1033d6:    61 70             	r1 = [r6+-0x40] 
  1033d8:    5b 70             	r3 = h[r5+-0x20] (u)
  1033da:    61 67             	r1 = [r6+0x1c] 
  1033dc:    65 20             	r5 = 0x80
  1033de:    2f 20             	r15 = [sp+128]
  1033e0:    42 49             	if (r2 == 0) goto -0xee <vfree_v2+0x72 : 1032f4 >
  1033e2:    54 5f             	if (r4 == 0) goto -0x82 <vcopy_+0x2E : 103362 >
  1033e4:    53 49             	if (r3 == 0) goto -0xae <vcopy_+0x4 : 103338 >
  1033e6:    5a 45             	r2 = b[r5+0x5] (u)
  1033e8:    5d 20             	r5 = 0x60
  1033ea:    26 20             	r6 = [sp+128]
  1033ec:    42 49             	if (r2 == 0) goto -0xee <vfree_v2+0x7E : 103300 >
  1033ee:    54 28             	r4 = 0x48
  1033f0:    70 61             	r0 = [r7+0x4] 
  1033f2:    67 65             	r7 = [r6+0x14] 
  1033f4:    20 26             	r0 = [sp+152]
  1033f6:    20 42             	if (r0 == 0) goto 0x84 <vmem_end+0xC6 : 10347c >
  1033f8:    49 54             	r1 = b[r4+-0xc] (u)
  1033fa:    5f 53             	r7 = b[r5+-0xd] (u)
  1033fc:    49 5a             	r1 = b[r4+-0x6] (u)
  1033fe:    45 5f             	if (r5 == 0) goto -0xc2 <vcopy_+0xA : 10333e >
  103400:    4d 41             	r5 = b[r4+0x1] (u)
  103402:    53 4b             	if (r3 == 0) goto -0xaa <vcopy_+0x26 : 10335a >
  103404:    29 29             	r9 = [sp+164]
  103406:    20 3d             	r0 = [sp+244]
  103408:    3d 20             	r5 ^= 0x1
  10340a:    30 20             	r0 |= 0x1
  10340c:    00 41             	if (r0 == 0) goto 0x2 <vmem_end+0x5A : 103410 >
  10340e:    53 53             	if (r3 == 0) goto -0x9a <vmem_get_phy_adr+0x4 : 103376 >
  103410:    45 52             	if (r5 == 0) goto -0xdc <vcopy_+0x2 : 103336 >
  103412:    54 3a             	r4 = 0x5a
  103414:    20 70             	r0 = [r2+-0x40] 
  103416:    68 79             	r0 = h[r6+-0xe] (u)
  103418:    73 69             	r3 = [r7+0x24] 
  10341a:    63 73             	r3 = [r6+-0x34] 
  10341c:    5f 6d             	r7 = h[r5+0x1a] (u)
  10341e:    65 6d             	r5 = [r6+0x34] 
  103420:    2e 75             	r6 = h[r2+-0x16] (u)
  103422:    73 65             	r3 = [r7+0x14] 
  103424:    64 5f             	if (r4 == 0) goto -0x42 <vmem_end+0x2E : 1033e4 >
  103426:    70 61             	r0 = [r7+0x4] 
  103428:    67 65             	r7 = [r6+0x14] 
  10342a:    73 20             	r3 = 0xc0
  10342c:    3e 20             	r6 ^= 0x1
  10342e:    30 20             	r0 |= 0x1
  103430:    00 76             	r0 = [r0+-0x28] 
  103432:    6d 61             	r5 = h[r6+0x2] (u)
  103434:    6c 6c             	r4 = h[r6+0x18] (u)
  103436:    6f 63             	r7 = h[r6+0x6] (u)
  103438:    20 6e             	r0 = [r2+0x38] 
  10343a:    6f 74             	r7 = h[r6+-0x18] (u)
  10343c:    20 70             	r0 = [r2+-0x40] 
  10343e:    61 67             	r1 = [r6+0x1c] 
  103440:    65 20             	r5 = 0x80
  103442:    3a 20             	r2 ^= 0x1
  103444:    30 78             	r0 = [r3+-0x20] 
  103446:    25 78             	r5 = [r2+-0x20] 
  103448:    00 41             	if (r0 == 0) goto 0x2 <vmem_end+0x96 : 10344c >
  10344a:    53 53             	if (r3 == 0) goto -0x9a <vmem_start+0xA : 1033b2 >
  10344c:    45 52             	if (r5 == 0) goto -0xdc <vmem_get_phy_adr : 103372 >
  10344e:    54 3a             	r4 = 0x5a
  103450:    20 30             	r0 = [sp+192]
  103452:    20 52             	if (r0 == 0) goto 0xa4 <usb_clr_intr_txe+0x4 : 1034f8 >
  103454:    6f 6d             	r7 = h[r6+0x1a] (u)
  103456:    20 4e             	if (r0 == 0) goto 0x9c <usb_clr_intr_txe : 1034f4 >
  103458:    6f 20             	r7 = 0xa0
  10345a:    65 6e             	r5 = [r6+0x38] 
  10345c:    6f 75             	r7 = h[r6+-0x16] (u)
  10345e:    67 68             	r7 = [r6+0x20] 
  103460:    20 70             	r0 = [r2+-0x40] 
  103462:    68 79             	r0 = h[r6+-0xe] (u)
  103464:    73 69             	r3 = [r7+0x24] 
  103466:    63 73             	r3 = [r6+-0x34] 
  103468:    20 6d             	r0 = [r2+0x34] 
  10346a:    65 6d             	r5 = [r6+0x34] 
  10346c:    6f 72             	r7 = h[r6+-0x1c] (u)
  10346e:    79 00              <unkown instruction>
  103470:    41 53             	if (r1 == 0) goto -0xda <vmem_get_phy_adr+0x26 : 103398 >
  103472:    53 45             	if (r3 == 0) goto -0xb6 <vmem_end+0x8 : 1033be >
  103474:    52 54             	if (r2 == 0) goto -0x98 <vmem_end+0x28 : 1033de >
  103476:    3a 20             	r2 ^= 0x1
  103478:    76 5f             	if (r6 == 0) goto -0x2 <vmem_end+0xC2 : 103478 >
  10347a:    6d 65             	r5 = h[r6+0xa] (u)
  10347c:    6d 73             	r5 = h[r6+-0x1a] (u)
  10347e:    2e 6d             	r6 = h[r2+0x1a] (u)
  103480:    6d 75             	r5 = h[r6+-0x16] (u)
  103482:    5f 74             	r7 = h[r5+-0x18] (u)
  103484:    6c 62             	r4 = h[r6+0x4] (u)
  103486:    5f 74             	r7 = h[r5+-0x18] (u)
  103488:    61 67             	r1 = [r6+0x1c] 
  10348a:    5b 70             	r3 = h[r5+-0x20] (u)
  10348c:    61 67             	r1 = [r6+0x1c] 
  10348e:    65 5f             	if (r5 == 0) goto -0x42 <vmem_end+0x98 : 10344e >
  103490:    61 64             	r1 = [r6+0x10] 
  103492:    64 72             	r4 = [r6+-0x38] 
  103494:    5d 2e             	r5 = 0x6e
  103496:    70 61             	r0 = [r7+0x4] 
  103498:    67 65             	r7 = [r6+0x14] 
  10349a:    5f 65             	r7 = h[r5+0xa] (u)
  10349c:    6e 20             	r6 = 0xa0
  10349e:    3d 3d             	r5 ^= 0x20000000
  1034a0:    20 30             	r0 = [sp+192]
  1034a2:    20 25             	r0 = [sp+148]
  1034a4:    64 20             	r4 = 0x80
  1034a6:    2f 20             	r15 = [sp+128]
  1034a8:    30 78             	r0 = [r3+-0x20] 
  1034aa:    25 78             	r5 = [r2+-0x20] 
  1034ac:    20 00             	csync
  1034ae:    41 53             	if (r1 == 0) goto -0xda <vmem_end+0x20 : 1033d6 >
  1034b0:    53 45             	if (r3 == 0) goto -0xb6 <vmem_end+0x46 : 1033fc >
  1034b2:    52 54             	if (r2 == 0) goto -0x98 <vmem_end+0x66 : 10341c >
  1034b4:    3a 20             	r2 ^= 0x1
  1034b6:    30 20             	r0 |= 0x1
  1034b8:    4e 6f             	r6 = h[r4+0x1e] (u)
  1034ba:    20 65             	r0 = [r2+0x14] 
  1034bc:    6e 6f             	r6 = h[r6+0x1e] (u)
  1034be:    75 67             	r5 = [r7+0x1c] 
  1034c0:    68 20             	r0 = 0xa0
  1034c2:    70 68             	r0 = [r7+0x20] 
  1034c4:    79 73             	r1 = h[r7+-0x1a] (u)
  1034c6:    69 63             	r1 = h[r6+0x6] (u)
  1034c8:    73 20             	r3 = 0xc0
  1034ca:    6d 65             	r5 = h[r6+0xa] (u)
  1034cc:    6d 6f             	r5 = h[r6+0x1e] (u)
  1034ce:    72 79             	r2 = [r7+-0x1c] 
  1034d0:    00 00             	nop


usb_code_begin:
  1034d1:    00 c1              <unkown instruction>


usb_clr_intr_rxe:
  1034d2:    c1 ff 24 4a 1e 00 	r1 = 0x1e4a24 <__stub_LZ4_decompress_safe_usingDict+0xD4A28 : 1e4a24 >			  ## usb_phy.c:168:0
  1034d8:    12 60             	r2 = [r1+0x0] 			  ## usb_phy.c:170:33
  1034da:    13 61             	r3 = [r1+0x4] 			  ## usb_phy.c:170:58
  1034dc:    b0 e8 ff 9f       	if (r0 != -0x1) {			  ## usb_phy.c:170:58
  1034e0:    33 a8             		r3 = r3 << 0x8			  ## usb_phy.c:170:68
  1034e2:    32 19             		r2 |= r3			  ## usb_phy.c:170:43
  1034e4:    94 e1 23 00       		r0 = r2 & ~(1 << r0)
                               	} else {			  ## usb_phy.c:174:18
  1034e8:    40 20             		r0 = 0x0
                               	}
  1034ea:    02 17             	r2 = r0.b0 (u)			  ## usb_phy.c:176:37
  1034ec:    92 60             	[r1+0x0] = r2			  ## usb_phy.c:176:26
  1034ee:    80 a8             	r0 = r0 >> 0x8			  ## usb_phy.c:177:37
  1034f0:    90 61             	[r1+0x4] = r0			  ## usb_phy.c:177:26
  1034f2:    80 00             	rts			  ## usb_phy.c:179:1


usb_clr_intr_txe:
  1034f4:    c1 ff 1c 4a 1e 00 	r1 = 0x1e4a1c <__stub_LZ4_decompress_safe_usingDict+0xD4A20 : 1e4a1c >			  ## usb_phy.c:146:0
  1034fa:    12 60             	r2 = [r1+0x0] 			  ## usb_phy.c:148:33
  1034fc:    13 61             	r3 = [r1+0x4] 			  ## usb_phy.c:148:58
  1034fe:    b0 e8 ff 9f       	if (r0 != -0x1) {			  ## usb_phy.c:148:58
  103502:    33 a8             		r3 = r3 << 0x8			  ## usb_phy.c:148:68
  103504:    32 19             		r2 |= r3			  ## usb_phy.c:148:43
  103506:    94 e1 23 00       		r0 = r2 & ~(1 << r0)
                               	} else {			  ## usb_phy.c:152:18
  10350a:    40 20             		r0 = 0x0
                               	}
  10350c:    02 17             	r2 = r0.b0 (u)			  ## usb_phy.c:154:37
  10350e:    92 60             	[r1+0x0] = r2			  ## usb_phy.c:154:26
  103510:    80 a8             	r0 = r0 >> 0x8			  ## usb_phy.c:155:37
  103512:    90 61             	[r1+0x4] = r0			  ## usb_phy.c:155:26
  103514:    80 00             	rts			  ## usb_phy.c:157:1


usb_read_rxcsr:
  103516:    c0 ff 50 4b 1e 00 	r0 = 0x1e4b50 <__stub_LZ4_decompress_safe_usingDict+0xD4B54 : 1e4b50 >			  ## usb_phy.c:215:0
  10351c:    01 60             	r1 = [r0+0x0] 			  ## usb_phy.c:220:29
  10351e:    11 d7             	r1 = r1.b0 (u)  #			  ## usb_phy.c:220:37
  103520:    00 61             		 r0 = [r0+0x4] 			  ## usb_phy.c:220:62
  103522:    00 a8             	r0 = r0 << 0x8			  ## usb_phy.c:220:71
  103524:    80 17             	r0 = r0.l (u)			  ## usb_phy.c:220:71
  103526:    10 19             	r0 |= r1			  ## usb_phy.c:220:45
  103528:    80 00             	rts			  ## usb_phy.c:222:5


usb_g_bulk_read:
  10352a:    7b 04             	[--sp] = {rets, r11-r4}			  ## usb_phy.c:405:0
  10352c:    14 16             	r4 = r1			  ## usb_phy.c:405:0
  10352e:    07 16             	r7 = r0			  ## usb_phy.c:405:0
  103530:    14 59             	if (r4 == 0) goto 0x72 <usb_g_bulk_read+0x7A : 1035a4 >			  ## usb_phy.c:405:0
  103532:    c0 ff 50 94 02 00 	r0 = 0x29450 <ep_raddr : 29450 >			  ## usb_phy.c:405:0
  103538:    d0 ec 00 80       	r8 = [r0+0x0]			  ## usb_phy.c:405:0
  10353c:    4a e0 01 00       	r10 = 0x1			  ## usb_phy.c:405:0
  103540:    32 e8 00 00       	if (r2 == 0x0) {			  ## usb_phy.c:405:0
  103544:    2a 16             		r10 = r2
                               	}			  ## usb_phy.c:405:0
  103546:    c1 14             	r9 = 0			  ## usb_phy.c:405:0
  103548:    cb ff 50 4b 1e 00 	r11 = 0x1e4b50 <__stub_LZ4_decompress_safe_usingDict+0xD4B54 : 1e4b50 >			  ## usb_phy.c:405:0
  10354e:    d0 ec b0 00       	r0 = [r11+0x0]			  ## usb_phy.c:309:18
  103552:    50 e8 23 00       	if ((r0 & 0x1) == 0) goto 0x46 <usb_g_bulk_read+0x72 : 10359c >			  ## usb_phy.c:309:18
  103556:    d0 ec b8 00       	r0 = [r11+0x8]			  ## usb_phy.c:310:28
  10355a:    d0 ec bc 10       	r1 = [r11+0xc]			  ## usb_phy.c:310:50
  10355e:    11 a8             	r1 = r1 << 0x8			  ## usb_phy.c:310:60
  103560:    90 e1 10 50       	r5 = r1 | r0			  ## usb_phy.c:310:38
  103564:    05 5b             	if (r5 == 0) goto 0x36 <usb_g_bulk_read+0x72 : 10359c >
  103566:    61 97             	call -0x52 <usb_read_rxcsr : 103516 >			  ## usb_phy.c:330:21
  103568:    06 16             	r6 = r0			  ## usb_phy.c:330:21
  10356a:    b7 e8 00 c0       	if (r7 != 0x0) {
  10356e:    70 16             		r0 = r7			  ## usb_phy.c:344:13
  103570:    81 16             		r1 = r8			  ## usb_phy.c:344:13
  103572:    52 16             		r2 = r5			  ## usb_phy.c:344:13
  103574:    bf ea 10 e7       		call -0x31e0
                               	} <memmove : 100398 >			  ## usb_phy.c:344:13
  103578:    60 e1 8b 60       	r0 = r6 & 0x8B			  ## usb_phy.c:210:28
  10357c:    30 24             	r0 |= 0x10			  ## usb_phy.c:210:28
  10357e:    d0 ec b1 00       	[r11+0x0] = r0			  ## usb_phy.c:210:20
  103582:    e0 a9             	r0 = r6 >> 0x9			  ## usb_phy.c:211:28
  103584:    00 a1             	r0 = r0 << 0x1			  ## usb_phy.c:211:28
  103586:    59 18             	r9 += r5			  ## usb_phy.c:348:14
  103588:    4c 1f             	r4 = r4 - r5			  ## usb_phy.c:347:13
  10358a:    79 1d             	r1 = r7 + r5			  ## usb_phy.c:350:17
  10358c:    d0 ec b5 00       	[r11+0x4] = r0			  ## usb_phy.c:211:20
  103590:    37 e8 00 00       	if (r7 == 0x0) {			  ## usb_phy.c:211:20
  103594:    71 16             		r1 = r7
                               	}			  ## usb_phy.c:349:13
  103596:    40 21             	r0 = 0x1
  103598:    17 16             	r7 = r1
  10359a:    04 81             	goto 0x2 <usb_g_bulk_read+0x74 : 10359e >
  10359c:    a0 16             	r0 = r10
  10359e:    04 43             	if (r4 == 0) goto 0x6 <usb_g_bulk_read+0x7C : 1035a6 >
  1035a0:    e0 56             	if (r0 != 0) goto -0x54 <usb_g_bulk_read+0x24 : 10354e >
  1035a2:    04 81             	goto 0x2 <usb_g_bulk_read+0x7C : 1035a6 >
  1035a4:    c1 14             	r9 = 0
  1035a6:    90 16             	r0 = r9			  ## usb_phy.c:406:5
  1035a8:    5b 04             	{pc, r11-r4} = [sp++]			  ## usb_phy.c:406:5


rbc_get_length:
  1035aa:    c0 ff f4 93 02 00 	r0 = 0x293f4 <cbw : 293f4 >			  ## msd_upgrade.c:51:0
  1035b0:    50 ee 05 11       	r1 = b[r0+0x15] (u)			  ## msd_upgrade.c:63:12
  1035b4:    50 ee 06 01       	r0 = b[r0+0x16] (u)			  ## msd_upgrade.c:63:12
  1035b8:    a0 e1 20 14       	r0 <= insert(r1, p:0x8, l:0x8)			  ## msd_upgrade.c:63:12
  1035bc:    80 00             	rts			  ## msd_upgrade.c:63:5


msd_usb2mcu:
  1035be:    42 21             	r2 = 0x1			  ## msd.c:135:0
  1035c0:    d7 94             	goto -0x98 <usb_g_bulk_read : 10352a >			  ## msd.c:136:12


usb_read_txcsr:
  1035c2:    c0 ff 44 4b 1e 00 	r0 = 0x1e4b44 <__stub_LZ4_decompress_safe_usingDict+0xD4B48 : 1e4b44 >			  ## usb_phy.c:196:0
  1035c8:    01 60             	r1 = [r0+0x0] 			  ## usb_phy.c:201:22
  1035ca:    00 61             	r0 = [r0+0x4] 			  ## usb_phy.c:201:42
  1035cc:    00 a8             	r0 = r0 << 0x8			  ## usb_phy.c:201:50
  1035ce:    10 19             	r0 |= r1			  ## usb_phy.c:201:30
  1035d0:    80 00             	rts			  ## usb_phy.c:203:5


msd_mcu2usb:
  1035d2:    7a 04             	[--sp] = {rets, r10-r4}			  ## msd.c:139:0
  1035d4:    c2 ff 40 94 02 00 	r2 = 0x29440 <ep_taddr : 29440 >			  ## msd.c:139:0
  1035da:    d0 ec 20 a0       	r10 = [r2+0x0]			  ## msd.c:139:0
  1035de:    18 16             	r8 = r1			  ## msd.c:139:0
  1035e0:    06 16             	r6 = r0			  ## msd.c:139:0
  1035e2:    c4 ff 44 4b 1e 00 	r4 = 0x1e4b44 <__stub_LZ4_decompress_safe_usingDict+0xD4B48 : 1e4b44 >			  ## msd.c:139:0
  1035e8:    c9 ff 0c 18 1e 00 	r9 = 0x1e180c <__stub_LZ4_decompress_safe_usingDict+0xD1810 : 1e180c >			  ## msd.c:139:0
  1035ee:    85 16             	r5 = r8			  ## msd.c:139:0
  1035f0:    04 84             	goto 0x8 <msd_mcu2usb+0x28 : 1035fa >			  ## msd.c:139:0
  1035f2:    81 19             	r1 &= r0			  ## usb_phy.c:191:28
  1035f4:    c1 60             	[r4+0x0] = r1			  ## usb_phy.c:191:20
  1035f6:    80 a8             	r0 = r0 >> 0x8			  ## usb_phy.c:192:28
  1035f8:    c0 61             	[r4+0x4] = r0			  ## usb_phy.c:192:20
  1035fa:    71 83             	call -0x3a <usb_read_txcsr : 1035c2 >			  ## usb_phy.c:373:21
  1035fc:    50 e8 08 72       	if ((r0 & 0x4000) != 0) goto 0x10 <msd_mcu2usb+0x3E : 103610 >
  103600:    79 3a             	r1 = 0xfa
  103602:    50 e8 f6 13       	if ((r0 & 0x4) != 0) goto -0x14 <msd_mcu2usb+0x20 : 1035f2 >
  103606:    79 3c             	r1 = 0xfc
  103608:    50 e8 f3 0b       	if ((r0 & 0x2) != 0) goto -0x1a <msd_mcu2usb+0x20 : 1035f2 >
  10360c:    50 e8 f5 03       	if ((r0 & 0x1) != 0) goto -0x16 <msd_mcu2usb+0x28 : 1035fa >
  103610:    57 16             	r7 = r5			  ## usb_phy.c:392:24
  103612:    35 e9 40 00       	if (r5 >= 0x40) {			  ## usb_phy.c:392:24
  103616:    57 20             		r7 = 0x40
                               	}			  ## usb_phy.c:392:24
  103618:    b6 e8 00 c0       	if (r6 != 0x0) {
  10361c:    a0 16             		r0 = r10			  ## usb_phy.c:394:13
  10361e:    61 16             		r1 = r6			  ## usb_phy.c:394:13
  103620:    72 16             		r2 = r7			  ## usb_phy.c:394:13
  103622:    bf ea b9 e6       		call -0x328e
                               	} <memmove : 100398 >			  ## usb_phy.c:394:13
  103626:    d0 ec 91 70       	[r9+0x0] = r7			  ## usb_phy.c:360:11
  10362a:    61 8b             	call -0x6a <usb_read_txcsr : 1035c2 >			  ## usb_phy.c:361:17
  10362c:    61 e1 fe 00       	r1 = r0 & 0xFE			  ## usb_phy.c:191:28
  103630:    31 20             	r1 |= 0x1			  ## usb_phy.c:191:28
  103632:    c1 60             	[r4+0x0] = r1			  ## usb_phy.c:191:20
  103634:    81 a8             	r1 = r0 >> 0x8			  ## usb_phy.c:192:28
  103636:    dd 1f             	r5 = r5 - r7			  ## usb_phy.c:397:13
  103638:    e8 1d             	r0 = r6 + r7			  ## usb_phy.c:399:17
  10363a:    c1 61             	[r4+0x4] = r1			  ## usb_phy.c:192:20
  10363c:    36 e8 00 00       	if (r6 == 0x0) {			  ## usb_phy.c:192:20
  103640:    60 16             		r0 = r6
                               	}			  ## usb_phy.c:398:13
  103642:    06 16             	r6 = r0
  103644:    e5 5a             	if (r5 != 0) goto -0x4c <msd_mcu2usb+0x28 : 1035fa >
  103646:    80 16             	r0 = r8			  ## msd.c:140:5
  103648:    5a 04             	{pc, r10-r4} = [sp++]			  ## msd.c:140:5


stall_inep:
  10364a:    10 04             	[--sp] = rets			  ## msd.c:174:0
  10364c:    c0 ff 44 4b 1e 00 	r0 = 0x1e4b44 <__stub_LZ4_decompress_safe_usingDict+0xD4B48 : 1e4b44 >			  ## msd.c:174:0
  103652:    40 ea 10 00       	[r0+0x0] = 0x10			  ## usb_phy.c:191:20
  103656:    41 ea 00 00       	[r0+0x4] = 0x0			  ## usb_phy.c:192:20
  10365a:    51 93             	call -0x9a <usb_read_txcsr : 1035c2 >			  ## msd.c:183:14
  10365c:    50 e8 fd 23       	if ((r0 & 0x10) != 0) goto -0x6 <stall_inep+0x10 : 10365a >			  ## msd.c:183:13
  103660:    00 04             	pc = [sp++]			  ## msd.c:187:1


unknow:
  103662:    10 04             	[--sp] = rets			  ## msd.c:202:0
  103664:    00 4c             	if (r0 == 0) goto 0x18 <unknow+0x1C : 10367e >			  ## msd.c:203:9
  103666:    c0 ff 50 4b 1e 00 	r0 = 0x1e4b50 <__stub_LZ4_decompress_safe_usingDict+0xD4B54 : 1e4b50 >
  10366c:    40 ea 20 00       	[r0+0x0] = 0x20			  ## usb_phy.c:210:20
  103670:    41 ea 00 00       	[r0+0x4] = 0x0			  ## usb_phy.c:211:20
  103674:    bf ea 4f ff       	call -0x162 <usb_read_rxcsr : 103516 >			  ## msd.c:196:14
  103678:    50 e8 fc 2b       	if ((r0 & 0x20) != 0) goto -0x8 <unknow+0x12 : 103674 >			  ## msd.c:196:14
  10367c:    04 81             	goto 0x2 <unknow+0x1E : 103680 >			  ## msd.c:196:14
  10367e:    71 85             	call -0x36 <stall_inep : 10364a >			  ## msd.c:206:9
  103680:    c0 ff 13 94 02 00 	r0 = 0x29413 <cbw+0x1E : 29412 >			  ## msd.c:210:20
  103686:    41 20             	r1 = 0x0			  ## msd.c:210:20
  103688:    89 4b             	b[r0+0xb] = r1			  ## msd.c:209:25
  10368a:    89 4a             	b[r0+0xa] = r1			  ## msd.c:209:25
  10368c:    89 49             	b[r0+0x9] = r1			  ## msd.c:209:25
  10368e:    89 48             	b[r0+0x8] = r1			  ## msd.c:209:25
  103690:    41 21             	r1 = 0x1			  ## msd.c:209:25
  103692:    89 4c             	b[r0+0xc] = r1			  ## msd.c:210:20
  103694:    c0 ff 20 94 02 00 	r0 = 0x29420 <msd_status.0 : 29420 >			  ## msd.c:211:23
  10369a:    41 22             	r1 = 0x2			  ## msd.c:211:23
  10369c:    89 40             	b[r0+0x0] = r1			  ## msd.c:211:23
  10369e:    00 04             	pc = [sp++]			  ## msd.c:212:1


usb_slave_mode:
  1036a0:    e2 94             	sp += -0x30			  ## usb_device.c:15:0
  1036a2:    c0 ff ac 94 02 00 	r0 = 0x294ac <usb_interrupt_rx : 294ac >			  ## usb_onchip.c:89:5
  1036a8:    c4 14             	r12 = 0			  ## usb_onchip.c:89:5
  1036aa:    10 86             	rep 0x4 0x7 {			  ## usb_onchip.c:89:5
  1036ac:    d8 ec 05 c0       		[r0++=0x4] = r12
                               	}			  ## usb_onchip.c:89:5
  1036b0:    c0 ff 90 94 02 00 	r0 = 0x29490 <usb_interrupt_tx : 29490 >			  ## usb_onchip.c:90:5
  1036b6:    10 86             	rep 0x4 0x7 {			  ## usb_onchip.c:90:5
  1036b8:    d8 ec 05 c0       		[r0++=0x4] = r12
                               	}			  ## usb_onchip.c:90:5
  1036bc:    c1 ff 6c 3c 10 00 	r1 = 0x103c6c <usb_device_isr : 103c6c >			  ## usb_onchip.c:93:5
  1036c2:    40 29             	r0 = 0x9			  ## usb_onchip.c:93:5
  1036c4:    42 21             	r2 = 0x1			  ## usb_onchip.c:93:5
  1036c6:    80 ea a2 54       	call 0xa944 <HWI_Install : 10e00e >			  ## usb_onchip.c:93:5
  1036ca:    c0 ff 00 54 1e 00 	r0 = 0x1e5400 <__stub_LZ4_decompress_safe_usingDict+0xD5404 : 1e5400 >			  ## usb_onchip.c:93:5
  1036d0:    c0 ef 80 0d       	[r0+0x0] &= 0xFFFFEFFF			  ## usb_onchip.c:95:21
  1036d4:    00 ef 00 0d       	[r0+0x0] |= 0x2000			  ## usb_onchip.c:96:21
  1036d8:    41 e0 ca bf       	r1 = -0x4036			  ## usb_onchip.c:97:18
  1036dc:    c4 ff 00 18 1e 00 	r4 = 0x1e1800 <__stub_LZ4_decompress_safe_usingDict+0xD1804 : 1e1800 >			  ## usb_onchip.c:97:18
  1036e2:    64 e8 02 41       	[r4+0x0] &= r1			  ## usb_onchip.c:97:18
  1036e6:    d0 ec 45 c0       	[r4+0x4] = r12			  ## usb_onchip.c:98:18
  1036ea:    00 ef 01 40       	[r4+0x0] |= 0x1			  ## usb_onchip.c:100:18
  1036ee:    c0 ef 40 00       	[r0+0x0] &= 0xFFFFFFBF			  ## usb_onchip.c:102:5
  1036f2:    00 ef 80 00       	[r0+0x0] |= 0x80			  ## usb_onchip.c:103:5
  1036f6:    00 ef 10 00       	[r0+0x0] |= 0x10			  ## usb_onchip.c:105:5
  1036fa:    c0 ef 20 00       	[r0+0x0] &= 0xFFFFFFDF			  ## usb_onchip.c:106:5
  1036fe:    00 ef 34 40       	[r4+0x0] |= 0x34			  ## usb_onchip.c:108:18
  103702:    40 24             	r0 = 0x4			  ## usb_phy.c:133:27
  103704:    c5 ff 04 4a 1e 00 	r5 = 0x1e4a04 <__stub_LZ4_decompress_safe_usingDict+0xD4A08 : 1e4a04 >
  10370a:    d0 6a             	[r5+0x28] = r0			  ## usb_phy.c:133:27
  10370c:    10 3f             	r0 = -0x1			  ## usb_onchip.c:111:5
  10370e:    bf ea e0 fe       	call -0x240 <usb_clr_intr_rxe : 1034d2 >			  ## usb_onchip.c:111:5
  103712:    10 3f             	r0 = -0x1			  ## usb_onchip.c:112:5
  103714:    bf ea ee fe       	call -0x224 <usb_clr_intr_txe : 1034f4 >			  ## usb_onchip.c:112:5
  103718:    40 ea 40 50       	[r5+0x0] = 0x40			  ## usb_phy.c:36:23
  10371c:    00 ef 00 4e       	[r4+0x0] |= 0x800			  ## usb_onchip.c:121:18
  103720:    c0 ff 40 90 02 00 	r0 = 0x29040 <ep0_dma_buffer : 29040 >			  ## usb_phy.c:289:25
  103726:    c0 67             	[r4+0x1c] = r0			  ## usb_phy.c:289:25
  103728:    c1 ff 3c 94 02 00 	r1 = 0x2943c <ep0_addr : 2943c >			  ## usb_phy.c:290:18
  10372e:    90 60             	[r1+0x0] = r0			  ## usb_phy.c:290:18
  103730:    c0 ff 80 90 02 00 	r0 = 0x29080 <ep1_dma_buffer : 29080 >
  103736:    c0 68             	[r4+0x20] = r0			  ## usb_phy.c:276:12
  103738:    c1 ff 40 94 02 00 	r1 = 0x29440 <ep_taddr : 29440 >			  ## usb_phy.c:277:22
  10373e:    90 60             	[r1+0x0] = r0			  ## usb_phy.c:277:22
  103740:    d0 20             	r0 += 0x40			  ## usb_phy.c:277:22
  103742:    4a f0 53 00       	r10 = 0x53  #
  103746:    c0 69             		 [r4+0x24] = r0			  ## usb_phy.c:295:12
  103748:    c1 ff 50 94 02 00 	r1 = 0x29450 <ep_raddr : 29450 >			  ## usb_phy.c:296:22
  10374e:    4e f0 42 00       	r14 = 0x42  #			  ## usb_phy.c:296:22
  103752:    90 60             		 [r1+0x0] = r0			  ## usb_phy.c:296:22
  103754:    a8 80             	r0 = sp + 32			  ## usb_phy.c:296:22
  103756:    4f f0 55 00       	r15 = 0x55  #
  10375a:    80 22             		 [sp+8] = r0
  10375c:    88 8e             	r0 = sp + 14
  10375e:    80 21             	[sp+4] = r0
  103760:    c0 21             	r0 += 0x1
  103762:    80 20             	[sp] = r0
  103764:    c4 ff f4 93 02 00 	r4 = 0x293f4 <cbw : 293f4 >
  10376a:    c9 ff 55 53 42 43 	r9 = 0x43425355 <__stub_LZ4_decompress_safe_usingDict+0x43315358 : 43425354 >
  103770:    cb ff 13 94 02 00 	r11 = 0x29413 <cbw+0x1E : 29412 >
  103776:    c8 ff 24 94 02 00 	r8 = 0x29424 <hook_usb_scsi : 29424 >
  10377c:    cd ff 20 94 02 00 	r13 = 0x29420 <msd_status.0 : 29420 >
  103782:    c7 ff 21 94 02 00 	r7 = 0x29421 <msd_status.0 : 29420 >
  103788:    c6 ff 22 94 02 00 	r6 = 0x29422 <msd_status.2 : 29422 >
  10378e:    80 ea fc 56       	call 0xadf8 <wdt_clr : 10e58a >			  ## usb_device.c:23:9
  103792:    52 ee 43 c0       	b[r4+0x3] = r12			  ## msd.c:144:23
  103796:    52 ee 42 c0       	b[r4+0x2] = r12			  ## msd.c:144:23
  10379a:    52 ee 41 c0       	b[r4+0x1] = r12			  ## msd.c:144:23
  10379e:    52 ee 40 c0       	b[r4+0x0] = r12			  ## msd.c:144:23
  1037a2:    41 3f             	r1 = 0x1f			  ## msd.c:145:18
  1037a4:    42 20             	r2 = 0x0			  ## msd.c:145:18
  1037a6:    40 16             	r0 = r4			  ## msd.c:145:18
  1037a8:    bf ea bf fe       	call -0x282 <usb_g_bulk_read : 10352a >			  ## msd.c:145:18
  1037ac:    4a 43             	r2 = b[r4+0x3] (u)			  ## msd.c:149:13
  1037ae:    4b 42             	r3 = b[r4+0x2] (u)			  ## msd.c:149:13
  1037b0:    a3 f1 20 24       	r3 <= insert(r2, p:0x8, l:0x8)  #			  ## msd.c:149:13
  1037b4:    4d 41             		 r5 = b[r4+0x1] (u)			  ## msd.c:149:13
  1037b6:    49 40             	r1 = b[r4+0x0] (u)			  ## msd.c:149:13
  1037b8:    a1 e1 20 54       	r1 <= insert(r5, p:0x8, l:0x8)			  ## msd.c:149:13
  1037bc:    a1 e1 40 38       	r1 <= insert(r3, p:0x10, l:0x10)			  ## msd.c:149:13
  1037c0:    70 46             	if (r0 == 0) goto -0x34 <usb_slave_mode+0xEE : 10378e >			  ## msd.c:146:9
  1037c2:    89 e8 e4 11       	if (r1 != r9) goto -0x38 <usb_slave_mode+0xEE : 10378e >
  1037c6:    00 e1 04 b0       	r0 = r11 + 0x4
  1037ca:    49 84             	r1 = r4 + 0x4			  ## msd.c:155:23
  1037cc:    10 83             	rep 0x4 0x4 {			  ## msd.c:155:17
  1037ce:    12 07             		r2 = b[r1++=0x1] (u)			  ## msd.c:155:17
  1037d0:    82 07             		b[r0++=0x1] = r2
                               	}			  ## msd.c:155:17
  1037d2:    00 e1 08 b0       	r0 = r11 + 0x8			  ## msd.c:155:17
  1037d6:    49 88             	r1 = r4 + 0x8			  ## msd.c:156:31
  1037d8:    10 83             	rep 0x4 0x4 {			  ## msd.c:156:25
  1037da:    12 07             		r2 = b[r1++=0x1] (u)			  ## msd.c:156:25
  1037dc:    82 07             		b[r0++=0x1] = r2
                               	}			  ## msd.c:156:25
  1037de:    d0 ec 80 20       	r2 = [r8+0x0]			  ## msd_upgrade.c:135:9
  1037e2:    02 45             	if (r2 == 0) goto 0xa <usb_slave_mode+0x14E : 1037ee >			  ## msd_upgrade.c:135:9
  1037e4:    a9 80             	r1 = sp + 32
  1037e6:    40 16             	r0 = r4			  ## msd_upgrade.c:135:26
  1037e8:    c2 00             	call r2			  ## msd_upgrade.c:135:26
  1037ea:    80 f8 d6 00       	if (r0 != 0x0) goto 0x1ac <usb_slave_mode+0x2FA : 10399a >			  ## msd_upgrade.c:135:26
  1037ee:    48 4f             	r0 = b[r4+0xf] (u)			  ## msd_upgrade.c:139:18
  1037f0:    10 f8 29 fa       	if (r0 == 0xfd) goto 0x52 <usb_slave_mode+0x1A6 : 103846 >			  ## msd_upgrade.c:139:5
  1037f4:    90 f8 4e f6       	if (r0 != 0xfb) goto 0x9c <usb_slave_mode+0x1F4 : 103894 >
  1037f8:    50 ee 40 01       	r0 = b[r4+0x10] (u)			  ## msd_upgrade.c:143:22
  1037fc:    00 f8 99 10       	if (r0 == 0x8) goto 0x132 <usb_slave_mode+0x292 : 103932 >			  ## msd_upgrade.c:143:9
  103800:    80 f8 91 0c       	if (r0 != 0x6) goto 0x122 <usb_slave_mode+0x286 : 103926 >
  103804:    48 91             	r0 = r4 + 0x11
  103806:    09 43             	r1 = b[r0+0x3] (u)			  ## msd_upgrade.c:43:5
  103808:    0a 42             	r2 = b[r0+0x2] (u)			  ## msd_upgrade.c:43:5
  10380a:    a2 f1 20 14       	r2 <= insert(r1, p:0x8, l:0x8)  #			  ## msd_upgrade.c:43:5
  10380e:    0b 41             		 r3 = b[r0+0x1] (u)			  ## msd_upgrade.c:43:5
  103810:    08 40             	r0 = b[r0+0x0] (u)			  ## msd_upgrade.c:43:5
  103812:    a0 e1 20 34       	r0 <= insert(r3, p:0x8, l:0x8)			  ## msd_upgrade.c:43:5
  103816:    a0 e1 40 28       	r0 <= insert(r2, p:0x10, l:0x10)			  ## msd_upgrade.c:43:5
  10381a:    70 e0 00 70       	r7 = rev8(r0)			  ## msd_upgrade.c:46:12
  10381e:    bf ea c4 fe       	call -0x278 <rbc_get_length : 1035aa >			  ## msd_upgrade.c:82:11
  103822:    06 16             	r6 = r0			  ## msd_upgrade.c:82:11
  103824:    70 16             	r0 = r7			  ## msd_upgrade.c:85:5
  103826:    61 16             	r1 = r6			  ## msd_upgrade.c:85:5
  103828:    bf ea c9 fe       	call -0x26e <msd_usb2mcu : 1035be >			  ## msd_upgrade.c:85:5
  10382c:    e1 17             	r1 = r6.l (u)			  ## msd_upgrade.c:86:5
  10382e:    c6 ff 22 94 02 00 	r6 = 0x29422 <msd_status.2 : 29422 >			  ## msd_upgrade.c:86:5
  103834:    70 16             	r0 = r7			  ## msd_upgrade.c:86:5
  103836:    c7 ff 21 94 02 00 	r7 = 0x29421 <msd_status.0 : 29420 >			  ## msd_upgrade.c:86:5
  10383c:    80 ea 09 57       	call 0xae12 <CrcDecode : 10e652 >			  ## msd_upgrade.c:86:5
  103840:    d0 ec 81 c0       	[r8+0x0] = r12			  ## msd_upgrade.c:146:27
  103844:    54 8a             	goto 0x154 <usb_slave_mode+0x2FA : 10399a >			  ## msd_upgrade.c:146:27
  103846:    50 ee 40 01       	r0 = b[r4+0x10] (u)			  ## msd_upgrade.c:158:22
  10384a:    80 f8 6c 0e       	if (r0 != 0x7) goto 0xd8 <usb_slave_mode+0x286 : 103926 >			  ## msd_upgrade.c:158:22
  10384e:    48 91             	r0 = r4 + 0x11
  103850:    09 43             	r1 = b[r0+0x3] (u)			  ## msd_upgrade.c:43:5
  103852:    0a 42             	r2 = b[r0+0x2] (u)			  ## msd_upgrade.c:43:5
  103854:    a2 f1 20 14       	r2 <= insert(r1, p:0x8, l:0x8)  #			  ## msd_upgrade.c:43:5
  103858:    0b 41             		 r3 = b[r0+0x1] (u)			  ## msd_upgrade.c:43:5
  10385a:    08 40             	r0 = b[r0+0x0] (u)			  ## msd_upgrade.c:43:5
  10385c:    a0 e1 20 34       	r0 <= insert(r3, p:0x8, l:0x8)			  ## msd_upgrade.c:43:5
  103860:    a0 e1 40 28       	r0 <= insert(r2, p:0x10, l:0x10)			  ## msd_upgrade.c:43:5
  103864:    70 e0 00 60       	r6 = rev8(r0)			  ## msd_upgrade.c:46:12
  103868:    bf ea 9f fe       	call -0x2c2 <rbc_get_length : 1035aa >			  ## msd_upgrade.c:95:11
  10386c:    07 16             	r7 = r0			  ## msd_upgrade.c:95:11
  10386e:    f5 17             	r5 = r7.l (u)			  ## msd_upgrade.c:97:5
  103870:    60 16             	r0 = r6			  ## msd_upgrade.c:97:5
  103872:    51 16             	r1 = r5			  ## msd_upgrade.c:97:5
  103874:    80 ea ed 56       	call 0xadda <CrcDecode : 10e652 >			  ## msd_upgrade.c:97:5
  103878:    60 15             	r1_r0 = r7_r6			  ## msd_upgrade.c:98:5
  10387a:    c7 ff 21 94 02 00 	r7 = 0x29421 <msd_status.0 : 29420 >			  ## msd_upgrade.c:98:5
  103880:    bf ea a7 fe       	call -0x2b2 <msd_mcu2usb : 1035d2 >			  ## msd_upgrade.c:98:5
  103884:    60 16             	r0 = r6			  ## msd_upgrade.c:99:5
  103886:    c6 ff 22 94 02 00 	r6 = 0x29422 <msd_status.2 : 29422 >			  ## msd_upgrade.c:99:5
  10388c:    51 16             	r1 = r5			  ## msd_upgrade.c:99:5
  10388e:    80 ea e0 56       	call 0xadc0 <CrcDecode : 10e652 >			  ## msd_upgrade.c:99:5
  103892:    44 83             	goto 0x106 <usb_slave_mode+0x2FA : 10399a >			  ## msd_upgrade.c:99:5
  103894:    00 f8 8e 00       	if (r0 == 0x0) goto 0x11c <usb_slave_mode+0x314 : 1039b4 >			  ## msd.c:286:9
  103898:    00 f8 93 06       	if (r0 == 0x3) goto 0x126 <usb_slave_mode+0x322 : 1039c2 >
  10389c:    00 f8 cc 5e       	if (r0 == 0x2f) goto 0x198 <usb_slave_mode+0x398 : 103a38 >
  1038a0:    00 f8 c4 34       	if (r0 == 0x1a) goto 0x188 <usb_slave_mode+0x38C : 103a2c >
  1038a4:    00 f8 d3 3c       	if (r0 == 0x1e) goto 0x1a6 <usb_slave_mode+0x3AE : 103a4e >
  1038a8:    00 f8 7a 46       	if (r0 == 0x23) goto 0xf4 <usb_slave_mode+0x300 : 1039a0 >
  1038ac:    00 f8 78 4a       	if (r0 == 0x25) goto 0xf0 <usb_slave_mode+0x300 : 1039a0 >
  1038b0:    00 f8 76 50       	if (r0 == 0x28) goto 0xec <usb_slave_mode+0x300 : 1039a0 >
  1038b4:    80 f8 37 24       	if (r0 != 0x12) goto 0x6e <usb_slave_mode+0x286 : 103926 >
  1038b8:    50 ee bb 00       	r0 = b[r11+0xb] (u)			  ## msd.c:162:15
  1038bc:    50 ee ba 10       	r1 = b[r11+0xa] (u)			  ## msd.c:162:15
  1038c0:    50 ee b9 20       	r2 = b[r11+0x9] (u)			  ## msd.c:162:15
  1038c4:    50 ee b8 70       	r7 = b[r11+0x8] (u)			  ## msd.c:162:15
  1038c8:    a1 e1 20 04       	r1 <= insert(r0, p:0x8, l:0x8)			  ## msd.c:162:15
  1038cc:    a7 e1 20 24       	r7 <= insert(r2, p:0x8, l:0x8)			  ## msd.c:162:15
  1038d0:    a7 e1 40 18       	r7 <= insert(r1, p:0x10, l:0x10)			  ## msd.c:162:15
  1038d4:    37 e9 24 00       	if (r7 >= 0x24) {			  ## msd.c:162:15
  1038d8:    4f 24             		r7 = 0x24
                               	}			  ## msd.c:162:15
  1038da:    c0 ff ad 3f 10 00 	r0 = 0x103fad <sMassDescriptor+0x16 : 103fac >			  ## msd.c:164:5
  1038e0:    71 16             	r1 = r7			  ## msd.c:164:5
  1038e2:    bf ea 76 fe       	call -0x314 <msd_mcu2usb : 1035d2 >			  ## msd.c:164:5
  1038e6:    50 ee bb 00       	r0 = b[r11+0xb] (u)			  ## msd.c:165:25
  1038ea:    50 ee ba 10       	r1 = b[r11+0xa] (u)			  ## msd.c:165:25
  1038ee:    50 ee b9 20       	r2 = b[r11+0x9] (u)			  ## msd.c:165:25
  1038f2:    50 ee b8 30       	r3 = b[r11+0x8] (u)			  ## msd.c:165:25
  1038f6:    a1 e1 20 04       	r1 <= insert(r0, p:0x8, l:0x8)			  ## msd.c:165:25
  1038fa:    a3 e1 20 24       	r3 <= insert(r2, p:0x8, l:0x8)			  ## msd.c:165:25
  1038fe:    a3 e1 40 18       	r3 <= insert(r1, p:0x10, l:0x10)			  ## msd.c:165:25
  103902:    b8 1f             	r0 = r3 - r7			  ## msd.c:165:25
  103904:    52 ee b8 00       	b[r11+0x8] = r0			  ## msd.c:165:25
  103908:    81 b8             	r1 = r0 >> 0x18			  ## msd.c:165:25
  10390a:    52 ee bb 10       	b[r11+0xb] = r1			  ## msd.c:165:25
  10390e:    81 b0             	r1 = r0 >> 0x10			  ## msd.c:165:25
  103910:    52 ee ba 10       	b[r11+0xa] = r1			  ## msd.c:165:25
  103914:    80 a8             	r0 = r0 >> 0x8			  ## msd.c:165:25
  103916:    52 ee b9 00       	b[r11+0x9] = r0			  ## msd.c:165:25
  10391a:    52 ee bc c0       	b[r11+0xc] = r12			  ## msd.c:166:20
  10391e:    c7 ff 21 94 02 00 	r7 = 0x29421 <msd_status.0 : 29420 >			  ## msd.c:166:20
  103924:    64 80             	goto 0x180 <usb_slave_mode+0x406 : 103aa6 >
  103926:    48 4c             	r0 = b[r4+0xc] (u)			  ## msd.c:311:26
  103928:    80 a7             	r0 = r0 >> 0x7			  ## msd.c:311:20
  10392a:    38 20             	r0 ^= 0x1			  ## msd.c:311:20
  10392c:    bf ea 99 fe       	call -0x2ce <unknow : 103662 >			  ## msd.c:311:13
  103930:    54 9a             	goto 0x174 <usb_slave_mode+0x406 : 103aa6 >			  ## msd.c:311:13
  103932:    48 91             	r0 = r4 + 0x11
  103934:    50 ee 01 e0       	r14 = b[r0+0x1] (u)			  ## msd_upgrade.c:43:5
  103938:    0b 40             	r3 = b[r0+0x0] (u)			  ## msd_upgrade.c:43:5
  10393a:    0d 43             	r5 = b[r0+0x3] (u)			  ## msd_upgrade.c:43:5
  10393c:    0e 42             	r6 = b[r0+0x2] (u)			  ## msd_upgrade.c:43:5
  10393e:    bf ea 34 fe       	call -0x398 <rbc_get_length : 1035aa >			  ## msd_upgrade.c:109:15
  103942:    01 16             	r1 = r0			  ## msd_upgrade.c:109:15
  103944:    c0 ff 28 94 02 00 	r0 = 0x29428 <arg_list : 29428 >
  10394a:    cf ff d2 35 10 00 	r15 = 0x1035d2 <msd_mcu2usb : 1035d2 >			  ## msd_upgrade.c:110:26
  103950:    d0 ec 01 f0       	[r0+0x0] = r15			  ## msd_upgrade.c:110:26
  103954:    c2 ff be 35 10 00 	r2 = 0x1035be <msd_usb2mcu : 1035be >			  ## msd_upgrade.c:111:26
  10395a:    4f f0 55 00       	r15 = 0x55  #			  ## msd_upgrade.c:111:26
  10395e:    82 61             		 [r0+0x4] = r2			  ## msd_upgrade.c:111:26
  103960:    d0 ec 09 80       	[r0+0x8] = r8			  ## msd_upgrade.c:112:20
  103964:    a6 f1 20 54       	r6 <= insert(r5, p:0x8, l:0x8)  #			  ## msd_upgrade.c:43:5
  103968:    81 63             		 [r0+0xc] = r1			  ## msd_upgrade.c:113:21
  10396a:    d0 ec 01 c1       	[r0+0x10] = r12			  ## msd_upgrade.c:114:23
  10396e:    a3 e1 20 e4       	r3 <= insert(r14, p:0x8, l:0x8)			  ## msd_upgrade.c:43:5
  103972:    4e e0 42 00       	r14 = 0x42			  ## msd_upgrade.c:43:5
  103976:    a3 e1 40 68       	r3 <= insert(r6, p:0x10, l:0x10)			  ## msd_upgrade.c:43:5
  10397a:    c6 ff 22 94 02 00 	r6 = 0x29422 <msd_status.2 : 29422 >
  103980:    70 e0 00 13       	r1 = rev8(r3)			  ## msd_upgrade.c:46:12
  103984:    c1 00             	call r1			  ## msd_upgrade.c:119:5
  103986:    78 3b             	r0 = 0xfb			  ## msd_upgrade.c:121:12
  103988:    de e9 20 00       	b[sp+32] = r0			  ## msd_upgrade.c:121:12
  10398c:    00 22             	r0 = [sp+8]			  ## msd_upgrade.c:122:12
  10398e:    41 28             	r1 = 0x8			  ## msd_upgrade.c:122:12
  103990:    89 41             	b[r0+0x1] = r1			  ## msd_upgrade.c:122:12
  103992:    a8 80             	r0 = sp + 32			  ## msd_upgrade.c:122:12
  103994:    41 30             	r1 = 0x10			  ## msd_upgrade.c:124:5
  103996:    bf ea 1c fe       	call -0x3c8 <msd_mcu2usb : 1035d2 >			  ## msd_upgrade.c:124:5
  10399a:    52 ee d0 c0       	b[r13+0x0] = r12			  ## msd.c:283:27
  10399e:    44 9f             	goto 0x13e <.GJTIE57_0_0_+0x22 : 103ade >			  ## msd.c:283:27
  1039a0:    40 20             	r0 = 0x0			  ## msd.c:215:5
  1039a2:    bf ea 5e fe       	call -0x344 <unknow : 103662 >			  ## msd.c:215:5
  1039a6:    40 25             	r0 = 0x5			  ## msd.c:216:23
  1039a8:    52 ee d0 00       	b[r13+0x0] = r0			  ## msd.c:216:23
  1039ac:    40 21             	r0 = 0x1			  ## msd.c:217:20
  1039ae:    52 ee bc 00       	b[r11+0xc] = r0			  ## msd.c:217:20
  1039b2:    34 99             	goto 0xf2 <usb_slave_mode+0x406 : 103aa6 >			  ## msd.c:217:20
  1039b4:    40 21             	r0 = 0x1			  ## msd.c:221:20
  1039b6:    52 ee bc 00       	b[r11+0xc] = r0			  ## msd.c:221:20
  1039ba:    40 25             	r0 = 0x5			  ## msd.c:222:23
  1039bc:    52 ee d0 00       	b[r13+0x0] = r0			  ## msd.c:222:23
  1039c0:    44 95             	goto 0x12a <.GJTIE57_0_0_+0x30 : 103aec >			  ## msd.c:222:23
  1039c2:    49 4b             	r1 = b[r4+0xb] (u)			  ## msd.c:237:11
  1039c4:    4a 4a             	r2 = b[r4+0xa] (u)			  ## msd.c:237:11
  1039c6:    a2 f1 20 14       	r2 <= insert(r1, p:0x8, l:0x8)  #			  ## msd.c:237:11
  1039ca:    4b 49             		 r3 = b[r4+0x9] (u)			  ## msd.c:237:11
  1039cc:    48 48             	r0 = b[r4+0x8] (u)			  ## msd.c:237:11
  1039ce:    a0 e1 20 34       	r0 <= insert(r3, p:0x8, l:0x8)			  ## msd.c:237:11
  1039d2:    a0 e1 40 28       	r0 <= insert(r2, p:0x10, l:0x10)			  ## msd.c:237:11
  1039d6:    07 16             	r7 = r0			  ## msd.c:237:11
  1039d8:    30 e9 12 00       	if (r0 >= 0x12) {			  ## msd.c:237:11
  1039dc:    47 32             		r7 = 0x12
                               	}			  ## msd.c:237:11
  1039de:    20 4c             	if (r0 == 0) goto 0x98 <usb_slave_mode+0x3D8 : 103a78 >
  1039e0:    45 20             	r5 = 0x0
  1039e2:    00 20             	r0 = [sp]			  ## msd.c:245:9
  1039e4:    00 90             	rep 0x2 0x11 {			  ## msd.c:245:9
  1039e6:    85 07             		b[r0++=0x1] = r5
                               	}			  ## msd.c:245:9
  1039e8:    c0 ff 21 94 02 00 	r0 = 0x29421 <msd_status.0 : 29420 >			  ## msd.c:245:9
  1039ee:    08 40             	r0 = b[r0+0x0] (u)			  ## msd.c:246:36
  1039f0:    69 40             	r1 = b[r6+0x0] (u)			  ## msd.c:247:37
  1039f2:    02 21             	r2 = [sp+4]			  ## msd.c:247:37
  1039f4:    a8 42             	b[r2+0x2] = r0			  ## msd.c:246:23
  1039f6:    71 d6             	r1 = r7  #			  ## msd.c:253:9
  1039f8:    a9 4c             		 b[r2+0xc] = r1			  ## msd.c:247:24
  1039fa:    ad 4d             	b[r2+0xd] = r5			  ## msd.c:248:24
  1039fc:    58 30             	r0 = 0x70			  ## msd.c:249:23
  1039fe:    de e9 0e 00       	b[sp+14] = r0			  ## msd.c:249:23
  103a02:    40 2a             	r0 = 0xa			  ## msd.c:250:23
  103a04:    a8 47             	b[r2+0x7] = r0			  ## msd.c:250:23
  103a06:    88 8e             	r0 = sp + 14			  ## msd.c:250:23
  103a08:    bf ea e3 fd       	call -0x43a <msd_mcu2usb : 1035d2 >			  ## msd.c:253:9
  103a0c:    50 ee bb 00       	r0 = b[r11+0xb] (u)			  ## msd.c:256:25
  103a10:    50 ee ba 10       	r1 = b[r11+0xa] (u)			  ## msd.c:256:25
  103a14:    50 ee b9 20       	r2 = b[r11+0x9] (u)			  ## msd.c:256:25
  103a18:    50 ee b8 30       	r3 = b[r11+0x8] (u)			  ## msd.c:256:25
  103a1c:    a1 e1 20 04       	r1 <= insert(r0, p:0x8, l:0x8)			  ## msd.c:256:25
  103a20:    a3 e1 20 24       	r3 <= insert(r2, p:0x8, l:0x8)			  ## msd.c:256:25
  103a24:    a3 e1 40 18       	r3 <= insert(r1, p:0x10, l:0x10)			  ## msd.c:256:25
  103a28:    b8 1f             	r0 = r3 - r7			  ## msd.c:256:25
  103a2a:    14 8d             	goto 0x5a <usb_slave_mode+0x3E6 : 103a86 >			  ## msd.c:256:25
  103a2c:    41 24             	r1 = 0x4			  ## msd.c:264:5
  103a2e:    c0 ff d1 3f 10 00 	r0 = 0x103fd1 <SCSIInquiryData+0x23 : 103fd0 >			  ## msd.c:264:5
  103a34:    bf ea cd fd       	call -0x466 <msd_mcu2usb : 1035d2 >			  ## msd.c:264:5
  103a38:    52 ee bb c0       	b[r11+0xb] = r12
  103a3c:    52 ee ba c0       	b[r11+0xa] = r12
  103a40:    52 ee b9 c0       	b[r11+0x9] = r12
  103a44:    52 ee b8 c0       	b[r11+0x8] = r12
  103a48:    52 ee bc c0       	b[r11+0xc] = r12
  103a4c:    14 8c             	goto 0x58 <usb_slave_mode+0x406 : 103aa6 >
  103a4e:    52 ee bc c0       	b[r11+0xc] = r12			  ## msd.c:226:20
  103a52:    50 ee 43 01       	r0 = b[r4+0x13] (u)			  ## msd.c:227:9
  103a56:    b0 e8 00 c0       	if (r0 != 0x0) {			  ## msd.c:227:9
  103a5a:    40 22             		r0 = 0x2			  ## msd.c:228:27
  103a5c:    52 ee d0 00       		b[r13+0x0] = r0			  ## msd.c:228:27
  103a60:    40 21             		r0 = 0x1			  ## msd.c:229:24
  103a62:    52 ee bc 00       		b[r11+0xc] = r0
                               	}			  ## msd.c:229:24
  103a66:    52 ee bb c0       	b[r11+0xb] = r12			  ## msd.c:231:25
  103a6a:    52 ee ba c0       	b[r11+0xa] = r12			  ## msd.c:231:25
  103a6e:    52 ee b9 c0       	b[r11+0x9] = r12			  ## msd.c:231:25
  103a72:    52 ee b8 c0       	b[r11+0x8] = r12			  ## msd.c:231:25
  103a76:    04 97             	goto 0x2e <usb_slave_mode+0x406 : 103aa6 >			  ## msd.c:231:25
  103a78:    bf ea e7 fd       	call -0x432 <stall_inep : 10364a >			  ## msd.c:239:9
  103a7c:    40 22             	r0 = 0x2			  ## msd.c:240:27
  103a7e:    52 ee d0 00       	b[r13+0x0] = r0			  ## msd.c:240:27
  103a82:    45 21             	r5 = 0x1			  ## msd.c:240:27
  103a84:    40 20             	r0 = 0x0			  ## msd.c:240:27
  103a86:    c7 ff 21 94 02 00 	r7 = 0x29421 <msd_status.0 : 29420 >
  103a8c:    52 ee b8 00       	b[r11+0x8] = r0
  103a90:    81 b8             	r1 = r0 >> 0x18
  103a92:    52 ee bb 10       	b[r11+0xb] = r1
  103a96:    81 b0             	r1 = r0 >> 0x10
  103a98:    52 ee ba 10       	b[r11+0xa] = r1
  103a9c:    80 a8             	r0 = r0 >> 0x8
  103a9e:    52 ee b9 00       	b[r11+0x9] = r0
  103aa2:    52 ee bc 50       	b[r11+0xc] = r5
  103aa6:    50 ee d0 20       	r2 = b[r13+0x0] (u)			  ## msd.c:315:24
  103aaa:    02 fc 1d 0c       	if (r2 > 0x6) goto 0x3a <.GJTIE57_0_0_+0x2C : 103ae8 >			  ## msd.c:315:24
  103aae:    48 24             	r0 = 0x24
  103ab0:    41 25             	r1 = 0x5
  103ab2:    02 01             	tbb [r2]


.GJTIS57_0_0_:
  103ab4:    15     < 21 : 0x15 >
  103ab5:    04     < 4 : 0x4 >
  103ab6:    12     < 18 : 0x12 >
  103ab7:    04     < 4 : 0x4 >
  103ab8:    04     < 4 : 0x4 >
  103ab9:    1c     < 28 : 0x1C >
  103aba:    17     < 23 : 0x17 >
  103abb:    00     < 0 : 0x0 >
  103abc:    04 80             	goto 0x0 <.GJTIE57_0_0_+0x2 : 103abe >
  103abe:    52 ee b3 a0       	b[r11+0x3] = r10			  ## msd.c:170:23
  103ac2:    52 ee b2 e0       	b[r11+0x2] = r14			  ## msd.c:170:23
  103ac6:    52 ee b1 a0       	b[r11+0x1] = r10			  ## msd.c:170:23
  103aca:    52 ee b0 f0       	b[r11+0x0] = r15			  ## msd.c:170:23
  103ace:    41 2d             	r1 = 0xd			  ## msd.c:171:5
  103ad0:    b0 16             	r0 = r11			  ## msd.c:171:5
  103ad2:    bf ea 7e fd       	call -0x504 <msd_mcu2usb : 1035d2 >			  ## msd.c:171:5
  103ad6:    27 9b             	goto -0x34a <usb_slave_mode+0xEE : 10378e >			  ## msd.c:171:5
  103ad8:    f9 40             	b[r7+0x0] = r1
  103ada:    e8 40             	b[r6+0x0] = r0
  103adc:    f7 90             	goto -0x20 <.GJTIE57_0_0_+0x2 : 103abe >
  103ade:    80 14             	r1_r0 = 0
  103ae0:    f7 9b             	goto -0xa <.GJTIE57_0_0_+0x1C : 103ad8 >
  103ae2:    48 20             	r0 = 0x20
  103ae4:    41 2b             	r1 = 0xb
  103ae6:    f7 98             	goto -0x10 <.GJTIE57_0_0_+0x1C : 103ad8 >
  103ae8:    82 f8 e9 1f       	if (r2 != 0xf) goto -0x2e <.GJTIE57_0_0_+0x2 : 103abe >
  103aec:    48 3a             	r0 = 0x3a
  103aee:    41 22             	r1 = 0x2
  103af0:    f7 93             	goto -0x1a <.GJTIE57_0_0_+0x1C : 103ad8 >


usb_write_txcsr:
  103af2:    00 a8             	r0 = r0 << 0x8			  ## usb_phy.c:187:0
  103af4:    12 17             	r2 = r1.b0 (u)			  ## usb_phy.c:191:28
  103af6:    c3 ff 91 92 07 00 	r3 = 0x79291 <RAM_LIMIT_H+0x4D290 : 79290 >			  ## usb_phy.c:191:13
  103afc:    d8 ec 0b 23       	[r0+r3<<2] = r2			  ## usb_phy.c:191:20
  103b00:    91 a8             	r1 = r1 >> 0x8			  ## usb_phy.c:192:28
  103b02:    3a 81             	r2 = r3 + 0x1			  ## usb_phy.c:192:13
  103b04:    d8 ec 0b 12       	[r0+r2<<2] = r1			  ## usb_phy.c:192:20
  103b08:    80 00             	rts			  ## usb_phy.c:194:1


usb_write_rxcsr:
  103b0a:    00 a8             	r0 = r0 << 0x8			  ## usb_phy.c:206:0
  103b0c:    12 17             	r2 = r1.b0 (u)			  ## usb_phy.c:210:28
  103b0e:    c3 ff 94 92 07 00 	r3 = 0x79294 <RAM_LIMIT_H+0x4D294 : 79294 >			  ## usb_phy.c:210:13
  103b14:    d8 ec 0b 23       	[r0+r3<<2] = r2			  ## usb_phy.c:210:20
  103b18:    91 a8             	r1 = r1 >> 0x8			  ## usb_phy.c:211:28
  103b1a:    3a 81             	r2 = r3 + 0x1			  ## usb_phy.c:211:13
  103b1c:    d8 ec 0b 12       	[r0+r2<<2] = r1			  ## usb_phy.c:211:20
  103b20:    80 00             	rts			  ## usb_phy.c:213:1


usb_g_ep_config:
  103b22:    75 04             	[--sp] = {rets, r5, r4}			  ## usb_phy.c:429:0
  103b24:    04 16             	r4 = r0			  ## usb_phy.c:429:0
  103b26:    c0 ff 3c 94 02 00 	r0 = 0x2943c <ep0_addr : 2943c >			  ## usb_phy.c:429:0
  103b2c:    c2 ff 1c 18 1e 00 	r2 = 0x1e181c <__stub_LZ4_decompress_safe_usingDict+0xD1820 : 1e181c >			  ## usb_phy.c:429:0
  103b32:    54 e8 0f 3a       	if ((r4 & 0x80) != 0) goto 0x1e <usb_g_ep_config+0x32 : 103b54 >			  ## usb_phy.c:429:0
  103b36:    14 41             	if (r4 == 0) goto 0x42 <usb_g_ep_config+0x58 : 103b7a >			  ## usb_phy.c:429:0
  103b38:    30 e1 ff 4f       	r0 = r4 + -0x1			  ## usb_phy.c:294:22
  103b3c:    02 a3             	r2 = r0 << 0x3			  ## usb_phy.c:294:11
  103b3e:    c3 ff 09 86 07 00 	r3 = 0x78609 <RAM_LIMIT_H+0x4C608 : 78608 >			  ## usb_phy.c:294:11
  103b44:    d8 ec 2b 13       	[r2+r3<<2] = r1			  ## usb_phy.c:295:12
  103b48:    c2 ff 50 94 02 00 	r2 = 0x29450 <ep_raddr : 29450 >			  ## usb_phy.c:296:5
  103b4e:    d8 ec 2b 10       	[r2+r0<<2] = r1			  ## usb_phy.c:296:22
  103b52:    04 97             	goto 0x2e <usb_g_ep_config+0x60 : 103b82 >
  103b54:    65 e1 0f 40       	r5 = r4 & 0xF			  ## usb_phy.c:432:12
  103b58:    60 ff 0f 40 20 00 	if ((r4 & 0xF) == 0) goto 0x40 <usb_g_ep_config+0x7C : 103b9e >
  103b5e:    30 e1 ff 5f       	r0 = r5 + -0x1			  ## usb_phy.c:275:22
  103b62:    02 a3             	r2 = r0 << 0x3			  ## usb_phy.c:275:11
  103b64:    c3 ff 08 86 07 00 	r3 = 0x78608 <RAM_LIMIT_H+0x4C608 : 78608 >			  ## usb_phy.c:275:11
  103b6a:    d8 ec 2b 13       	[r2+r3<<2] = r1			  ## usb_phy.c:276:12
  103b6e:    c2 ff 40 94 02 00 	r2 = 0x29440 <ep_taddr : 29440 >			  ## usb_phy.c:277:5
  103b74:    d8 ec 2b 10       	[r2+r0<<2] = r1			  ## usb_phy.c:277:22
  103b78:    04 95             	goto 0x2a <usb_g_ep_config+0x82 : 103ba4 >			  ## usb_phy.c:277:22
  103b7a:    a1 60             	[r2+0x0] = r1			  ## usb_phy.c:289:25
  103b7c:    30 f1 ff 4f       	r0 = r4 + -0x1  #			  ## usb_phy.c:228:19
  103b80:    81 60             		 [r0+0x0] = r1			  ## usb_phy.c:290:18
  103b82:    00 a8             	r0 = r0 << 0x8			  ## usb_phy.c:229:13
  103b84:    c1 ff d3 92 07 00 	r1 = 0x792d3 <RAM_LIMIT_H+0x4D2D2 : 792d2 >			  ## usb_phy.c:229:13
  103b8a:    42 e0 ff 03       	r2 = 0x3ff			  ## usb_phy.c:229:20
  103b8e:    d8 ec 0b 21       	[r0+r1<<2] = r2			  ## usb_phy.c:229:20
  103b92:    61 30             	r1 = 0x90			  ## usb_phy.c:449:9
  103b94:    40 16             	r0 = r4			  ## usb_phy.c:449:9
  103b96:    51 99             	call -0x8e <usb_write_rxcsr : 103b0a >			  ## usb_phy.c:449:9
  103b98:    40 16             	r0 = r4			  ## usb_phy.c:456:13
  103b9a:    35 04             	{rets, r5, r4} = [sp++]			  ## usb_phy.c:456:13
  103b9c:    46 9a             	goto -0x6cc <usb_clr_intr_rxe : 1034d2 >			  ## usb_phy.c:456:13
  103b9e:    a1 60             	[r2+0x0] = r1			  ## usb_phy.c:270:25
  103ba0:    81 60             	[r0+0x0] = r1			  ## usb_phy.c:271:18
  103ba2:    10 3f             	r0 = -0x1			  ## usb_phy.c:271:18
  103ba4:    00 a8             	r0 = r0 << 0x8			  ## usb_phy.c:237:13
  103ba6:    c1 ff d0 92 07 00 	r1 = 0x792d0 <RAM_LIMIT_H+0x4D2D0 : 792d0 >			  ## usb_phy.c:237:13
  103bac:    42 e0 ff 03       	r2 = 0x3ff			  ## usb_phy.c:237:20
  103bb0:    d8 ec 0b 21       	[r0+r1<<2] = r2			  ## usb_phy.c:237:20
  103bb4:    51 28             	r1 = 0x48			  ## usb_phy.c:436:9
  103bb6:    50 16             	r0 = r5			  ## usb_phy.c:436:9
  103bb8:    41 9c             	call -0xc8 <usb_write_txcsr : 103af2 >			  ## usb_phy.c:436:9
  103bba:    50 16             	r0 = r5			  ## usb_phy.c:443:13
  103bbc:    35 04             	{rets, r5, r4} = [sp++]			  ## usb_phy.c:443:13
  103bbe:    46 9a             	goto -0x6cc <usb_clr_intr_txe : 1034f4 >			  ## usb_phy.c:443:13


msd_itf_hander:
  103bc0:    76 04             	[--sp] = {rets, r6-r4}			  ## msd.c:96:0
  103bc2:    c2 ff 24 94 02 00 	r2 = 0x29424 <hook_usb_scsi : 29424 >			  ## msd_upgrade.c:128:19
  103bc8:    40 ea 00 20       	[r2+0x0] = 0x0			  ## msd_upgrade.c:128:19
  103bcc:    04 15             	r5_r4 = r1_r0			  ## msd_upgrade.c:128:19
  103bce:    c6 ff 80 90 02 00 	r6 = 0x29080 <ep1_dma_buffer : 29080 >			  ## msd.c:90:5
  103bd4:    60 21             	r0 = 0x81			  ## msd.c:89:5
  103bd6:    61 16             	r1 = r6			  ## msd.c:89:5
  103bd8:    51 84             	call -0xb8 <usb_g_ep_config : 103b22 >			  ## msd.c:89:5
  103bda:    01 e1 40 60       	r1 = r6 + 0x40			  ## msd.c:90:5
  103bde:    40 21             	r0 = 0x1			  ## msd.c:90:5
  103be0:    51 80             	call -0xc0 <usb_g_ep_config : 103b22 >			  ## msd.c:90:5
  103be2:    58 40             	r0 = b[r5+0x0] (u)			  ## msd.c:98:15
  103be4:    41 23             	r1 = 0x3			  ## msd.c:98:15
  103be6:    10 f8 08 42       	if (r0 == 0xa1) goto 0x10 <msd_itf_hander+0x3A : 103bfa >			  ## msd.c:98:37
  103bea:    80 f8 10 42       	if (r0 != 0x21) goto 0x20 <msd_itf_hander+0x4E : 103c0e >
  103bee:    58 41             	r0 = b[r5+0x1] (u)			  ## msd.c:99:15
  103bf0:    41 20             	r1 = 0x0			  ## msd.c:98:9
  103bf2:    b0 e8 ff 00       	if (r0 != 0xff) {			  ## msd.c:98:9
  103bf6:    41 23             		r1 = 0x3
                               	}			  ## msd.c:98:9
  103bf8:    04 8a             	goto 0x14 <msd_itf_hander+0x4E : 103c0e >			  ## msd.c:98:9
  103bfa:    58 41             	r0 = b[r5+0x1] (u)			  ## msd.c:104:22
  103bfc:    90 f8 07 fc       	if (r0 != 0xfe) goto 0xe <msd_itf_hander+0x4E : 103c0e >			  ## msd.c:104:22
  103c00:    40 62             	r0 = [r4+0x8] 			  ## msd.c:107:21
  103c02:    41 20             	r1 = 0x0			  ## msd.c:107:37
  103c04:    89 40             	b[r0+0x0] = r1			  ## msd.c:107:37
  103c06:    40 62             	r0 = [r4+0x8] 			  ## msd.c:108:45
  103c08:    c0 63             	[r4+0xc] = r0			  ## msd.c:108:31
  103c0a:    41 21             	r1 = 0x1			  ## msd.c:108:31
  103c0c:    c9 61             	h[r4+0x2] = r1			  ## msd.c:109:33
  103c0e:    40 20             	r0 = 0x0			  ## msd.c:114:5
  103c10:    c9 41             	b[r4+0x1] = r1			  ## msd.c:114:5
  103c12:    56 04             	{pc, r6-r4} = [sp++]			  ## msd.c:114:5


ep0_stage_tx:
  103c14:    76 04             	[--sp] = {rets, r6-r4}			  ## usb_setup.c:15:0
  103c16:    c5 ff 44 4a 1e 00 	r5 = 0x1e4a44 <__stub_LZ4_decompress_safe_usingDict+0xD4A48 : 1e4a44 >			  ## usb_setup.c:15:0
  103c1c:    50 60             	r0 = [r5+0x0] 			  ## usb_phy.c:62:28
  103c1e:    50 e8 21 0a       	if ((r0 & 0x2) != 0) goto 0x42 <ep0_stage_tx+0x50 : 103c64 >
  103c22:    c6 ff 7c 94 02 00 	r6 = 0x2947c <usb_device : 2947c >
  103c28:    6c 61             	r4 = h[r6+0x2] (u)			  ## usb_setup.c:20:16
  103c2a:    04 58             	if (r4 == 0) goto 0x30 <ep0_stage_tx+0x48 : 103c5c >			  ## usb_setup.c:20:16
  103c2c:    34 e9 40 00       	if (r4 >= 0x40) {
  103c30:    54 20             		r4 = 0x40
                               	}			  ## usb_setup.c:24:19
  103c32:    c0 ff 3c 94 02 00 	r0 = 0x2943c <ep0_addr : 2943c >			  ## usb_phy.c:96:20
  103c38:    42 d6             	r2 = r4  #			  ## usb_phy.c:96:5
  103c3a:    00 60             		 r0 = [r0+0x0] 			  ## usb_phy.c:96:20
  103c3c:    61 63             	r1 = [r6+0xc] 			  ## usb_setup.c:25:34
  103c3e:    bf ea ab e3       	call -0x38aa <memmove : 100398 >			  ## usb_phy.c:96:5
  103c42:    c0 ff 08 18 1e 00 	r0 = 0x1e1808 <__stub_LZ4_decompress_safe_usingDict+0xD180C : 1e1808 >			  ## usb_phy.c:97:21
  103c48:    84 60             	[r0+0x0] = r4			  ## usb_phy.c:97:21
  103c4a:    68 e8 0c 64       	[r6+0xc] += r4			  ## usb_setup.c:26:30
  103c4e:    68 61             	r0 = h[r6+0x2] (u)			  ## usb_setup.c:27:32
  103c50:    00 1f             	r0 = r0 - r4			  ## usb_setup.c:27:32
  103c52:    e8 61             	h[r6+0x2] = r0			  ## usb_setup.c:27:32
  103c54:    69 46             	r1 = b[r6+0x6] (u)			  ## usb_setup.c:28:50
  103c56:    81 47             	if (r1 != 0) goto 0xe <ep0_stage_tx+0x52 : 103c66 >			  ## usb_setup.c:28:50
  103c58:    80 17             	r0 = r0.l (u)			  ## usb_setup.c:28:13
  103c5a:    80 45             	if (r0 != 0) goto 0xa <ep0_stage_tx+0x52 : 103c66 >			  ## usb_setup.c:28:13
  103c5c:    40 ea 0a 50       	[r5+0x0] = 0xA
  103c60:    40 20             	r0 = 0x0
  103c62:    e8 41             	b[r6+0x1] = r0
  103c64:    56 04             	{pc, r6-r4} = [sp++]			  ## usb_setup.c:35:1
  103c66:    40 ea 02 50       	[r5+0x0] = 0x2			  ## usb_phy.c:70:22
  103c6a:    56 04             	{pc, r6-r4} = [sp++]			  ## usb_setup.c:35:1


usb_device_isr:
  103c6c:    e9 04             	[--sp] = {psr, rets, reti}			  ## usb_onchip.c:30:0
  103c6e:    d8 e8 ff ff       	[--sp] = {r15-r0}			  ## usb_onchip.c:30:0
  103c72:    e2 9e             	sp += -0x8			  ## usb_onchip.c:30:0
  103c74:    c0 ff 00 4a 1e 00 	r0 = 0x1e4a00 <__stub_LZ4_decompress_safe_usingDict+0xD4A04 : 1e4a00 >			  ## usb_onchip.c:30:0
  103c7a:    01 66             	r1 = [r0+0x18] 			  ## usb_phy.c:115:29
  103c7c:    01 62             	r1 = [r0+0x8] 			  ## usb_phy.c:116:29
  103c7e:    02 63             	r2 = [r0+0xc] 			  ## usb_phy.c:116:53
  103c80:    03 64             	r3 = [r0+0x10] 			  ## usb_phy.c:117:29
  103c82:    04 65             	r4 = [r0+0x14] 			  ## usb_phy.c:117:53
  103c84:    05 6b             	r5 = [r0+0x2c] 			  ## usb_phy.c:125:31
  103c86:    05 67             	r5 = [r0+0x1c] 			  ## usb_phy.c:126:30
  103c88:    22 a8             	r2 = r2 << 0x8			  ## usb_phy.c:116:62
  103c8a:    21 d9             	r1 |= r2  #			  ## usb_phy.c:116:38
  103c8c:    06 68             		 r6 = [r0+0x20] 			  ## usb_phy.c:126:55
  103c8e:    62 a8             	r2 = r6 << 0x8			  ## usb_phy.c:126:65
  103c90:    52 19             	r2 |= r5			  ## usb_phy.c:126:40
  103c92:    07 69             	r7 = [r0+0x24] 			  ## usb_phy.c:127:30
  103c94:    90 f1 12 52       	r5 = r1 & r2  #			  ## usb_onchip.c:45:13
  103c98:    06 6a             		 r6 = [r0+0x28] 			  ## usb_phy.c:127:55
  103c9a:    41 a8             	r1 = r4 << 0x8			  ## usb_phy.c:117:62
  103c9c:    90 e1 10 93       	r9 = r1 | r3			  ## usb_phy.c:117:38
  103ca0:    61 a8             	r1 = r6 << 0x8			  ## usb_phy.c:127:65
  103ca2:    17 19             	r7 |= r1			  ## usb_phy.c:127:40
  103ca4:    60 ff 01 50 4d 01 	if ((r5 & 0x1) == 0) goto 0x29a <.GJTIE94_0_0_+0x1C0 : 103f44 >
  103caa:    cf ff 7c 94 02 00 	r15 = 0x2947c <usb_device : 2947c >
  103cb0:    50 ee f0 10       	r1 = b[r15+0x0] (u)			  ## usb_setup.c:220:20
  103cb4:    b1 e8 00 80       	if (r1 != 0x0) {			  ## usb_setup.c:220:20
  103cb8:    81 60             		[r0+0x0] = r1			  ## usb_phy.c:183:23
  103cba:    40 20             		r0 = 0x0			  ## usb_setup.c:222:26
  103cbc:    52 ee f0 00       		b[r15+0x0] = r0
                               	}			  ## usb_setup.c:222:26
  103cc0:    c8 ff 44 4a 1e 00 	r8 = 0x1e4a44 <__stub_LZ4_decompress_safe_usingDict+0xD4A48 : 1e4a44 >			  ## usb_setup.c:222:26
  103cc6:    d0 ec 80 00       	r0 = [r8+0x0]			  ## usb_phy.c:62:28
  103cca:    50 e8 0b 2a       	if ((r0 & 0x20) != 0) goto 0x16 <usb_device_isr+0x78 : 103ce4 >
  103cce:    50 e8 0f 22       	if ((r0 & 0x10) != 0) goto 0x1e <usb_device_isr+0x84 : 103cf0 >
  103cd2:    50 ee f1 10       	r1 = b[r15+0x1] (u)			  ## usb_setup.c:236:24
  103cd6:    01 f8 60 04       	if (r1 == 0x2) goto 0xc0 <.GJTIE94_0_0_+0x16 : 103d9a >			  ## usb_setup.c:236:5
  103cda:    00 ff 01 10 30 01 	if (r1 == 0x1) goto 0x260 <.GJTIE94_0_0_+0x1BC : 103f40 >
  103ce0:    01 4c             	if (r1 == 0) goto 0x18 <usb_device_isr+0x8E : 103cfa >
  103ce2:    94 90             	goto 0x260 <.GJTIE94_0_0_+0x1C0 : 103f44 >
  103ce4:    40 20             	r0 = 0x0
  103ce6:    d0 ec 81 00       	[r8+0x0] = r0			  ## usb_phy.c:70:22
  103cea:    52 ee f1 00       	b[r15+0x1] = r0
  103cee:    94 8a             	goto 0x254 <.GJTIE94_0_0_+0x1C0 : 103f44 >
  103cf0:    40 ea 80 80       	[r8+0x0] = 0x80			  ## usb_phy.c:70:22
  103cf4:    41 20             	r1 = 0x0			  ## usb_setup.c:233:27
  103cf6:    52 ee f1 10       	b[r15+0x1] = r1			  ## usb_setup.c:233:27
  103cfa:    60 ff 01 00 22 01 	if ((r0 & 0x1) == 0) goto 0x244 <.GJTIE94_0_0_+0x1C0 : 103f44 >
  103d00:    c0 ff 3c 94 02 00 	r0 = 0x2943c <ep0_addr : 2943c >			  ## usb_phy.c:108:25
  103d06:    02 60             	r2 = [r0+0x0] 			  ## usb_phy.c:108:25
  103d08:    88 80             	r0 = sp + 0
  103d0a:    21 16             	r1 = r2			  ## usb_phy.c:108:5
  103d0c:    10 87             	rep 0x4 0x8 {			  ## usb_phy.c:108:5
  103d0e:    13 07             		r3 = b[r1++=0x1] (u)			  ## usb_phy.c:108:5
  103d10:    83 07             		b[r0++=0x1] = r3
                               	}			  ## usb_phy.c:108:5
  103d12:    4e e0 01 00       	r14 = 0x1			  ## usb_phy.c:108:5
  103d16:    52 ee f1 e0       	b[r15+0x1] = r14			  ## usb_setup.c:187:23
  103d1a:    c0 ff 40 91 02 00 	r0 = 0x29140 <ep2_dma_buffer : 29140 >			  ## usb_setup.c:187:23
  103d20:    d0 ec f9 00       	[r15+0x8] = r0			  ## usb_setup.c:188:29
  103d24:    2b 47             	r3 = b[r2+0x7] (u)			  ## usb_phy.c:108:5
  103d26:    2e 46             	r6 = b[r2+0x6] (u)			  ## usb_phy.c:108:5
  103d28:    a6 f1 20 34       	r6 <= insert(r3, p:0x8, l:0x8)  #			  ## usb_phy.c:108:5
  103d2c:    2c 45             		 r4 = b[r2+0x5] (u)			  ## usb_phy.c:108:5
  103d2e:    29 44             	r1 = b[r2+0x4] (u)			  ## usb_phy.c:108:5
  103d30:    a1 f1 20 44       	r1 <= insert(r4, p:0x8, l:0x8)  #			  ## usb_phy.c:108:5
  103d34:    2b 43             		 r3 = b[r2+0x3] (u)			  ## usb_phy.c:108:5
  103d36:    a1 f1 40 68       	r1 <= insert(r6, p:0x10, l:0x10)  #			  ## usb_phy.c:108:5
  103d3a:    2c 42             		 r4 = b[r2+0x2] (u)			  ## usb_phy.c:108:5
  103d3c:    a4 f1 20 34       	r4 <= insert(r3, p:0x8, l:0x8)  #			  ## usb_phy.c:108:5
  103d40:    2e 41             		 r6 = b[r2+0x1] (u)			  ## usb_phy.c:108:5
  103d42:    28 40             	r0 = b[r2+0x0] (u)			  ## usb_phy.c:108:5
  103d44:    a0 e1 20 64       	r0 <= insert(r6, p:0x8, l:0x8)			  ## usb_phy.c:108:5
  103d48:    a0 e1 40 48       	r0 <= insert(r4, p:0x10, l:0x10)			  ## usb_phy.c:108:5
  103d4c:    0a 15             	r11_r10 = r1_r0			  ## usb_setup.c:190:5
  103d4e:    d0 e1 00 a9       	r11_r10 >>= 0x10			  ## usb_setup.c:190:5
  103d52:    0c 15             	r13_r12 = r1_r0			  ## usb_setup.c:190:5
  103d54:    62 e1 1f 00       	r2 = r0 & 0x1F			  ## usb_setup.c:190:5
  103d58:    d0 e1 08 c8       	r13_r12 >>= 0x8			  ## usb_setup.c:190:5
  103d5c:    02 f8 20 04       	if (r2 == 0x2) goto 0x40 <.GJTIE94_0_0_+0x1C : 103da0 >			  ## usb_setup.c:190:5
  103d60:    c3 ff 60 94 02 00 	r3 = 0x29460 <interface_hander : 29460 >
  103d66:    02 f8 35 02       	if (r2 == 0x1) goto 0x6a <.GJTIE94_0_0_+0x50 : 103dd4 >
  103d6a:    82 f8 e7 00       	if (r2 != 0x0) goto 0x1ce <.GJTIE94_0_0_+0x1B8 : 103f3c >
  103d6e:    b2 e1 20 c0       	r2 = uextra(r12, p:0x0, l:0x8)
  103d72:    02 fc 39 16       	if (r2 > 0xb) goto 0x72 <.GJTIE94_0_0_+0x64 : 103de8 >
  103d76:    02 01             	tbb [r2]


.GJTIS94_0_0_:
  103d78:    06     < 6 : 0x6 >
  103d79:    89     < 137 : 0x89 >
  103d7a:    38     < 56 : 0x38 >
  103d7b:    38     < 56 : 0x38 >
  103d7c:    38     < 56 : 0x38 >
  103d7d:    5d     < 93 : 0x5D >
  103d7e:    60     < 96 : 0x60 >
  103d7f:    38     < 56 : 0x38 >
  103d80:    79     < 121 : 0x79 >
  103d81:    87     < 135 : 0x87 >
  103d82:    38     < 56 : 0x38 >
  103d83:    89     < 137 : 0x89 >
  103d84:    40 21             	r0 = 0x1
  103d86:    c1 ff 40 91 02 00 	r1 = 0x29140 <ep2_dma_buffer : 29140 >
  103d8c:    98 40             	b[r1+0x0] = r0			  ## usb_setup.c:105:36
  103d8e:    40 20             	r0 = 0x0			  ## usb_setup.c:106:36
  103d90:    98 41             	b[r1+0x1] = r0			  ## usb_setup.c:106:36
  103d92:    40 22             	r0 = 0x2			  ## usb_setup.c:107:32
  103d94:    50 ed f3 00       	h[r15+0x2] = r0			  ## usb_setup.c:107:32
  103d98:    64 91             	goto 0x1a2 <.GJTIE94_0_0_+0x1B8 : 103f3c >			  ## usb_setup.c:107:32
  103d9a:    40 ea 48 80       	[r8+0x0] = 0x48			  ## usb_phy.c:70:22
  103d9e:    14 89             	goto 0x52 <.GJTIE94_0_0_+0x6E : 103df2 >			  ## usb_phy.c:70:22
  103da0:    60 ff ff c0 28 00 	if ((r12 & 0xFF) == 0) goto 0x50 <.GJTIE94_0_0_+0x72 : 103df6 >			  ## usb_setup.c:150:5
  103da6:    b2 e1 20 c0       	r2 = uextra(r12, p:0x0, l:0x8)
  103daa:    02 f8 32 06       	if (r2 == 0x3) goto 0x64 <.GJTIE94_0_0_+0x8E : 103e12 >
  103dae:    82 f8 2e 02       	if (r2 != 0x1) goto 0x5c <.GJTIE94_0_0_+0x8A : 103e0e >
  103db2:    4e e0 03 00       	r14 = 0x3
  103db6:    61 ff ff a0 2b 00 	if ((r10 & 0xFF) != 0) goto 0x56 <.GJTIE94_0_0_+0x8E : 103e12 >
  103dbc:    02 15             	r3_r2 = r1_r0			  ## usb_phy.c:108:5
  103dbe:    d0 e1 00 2a       	r3_r2 >>= 0x20			  ## usb_phy.c:108:5
  103dc2:    60 e1 03 10       	r0 = r1 & 0x3			  ## usb_setup.c:149:34
  103dc6:    52 e8 69 3a       	if ((r2 & 0x80) != 0) goto 0xd2 <.GJTIE94_0_0_+0x118 : 103e9c >
  103dca:    61 20             	r1 = 0x80			  ## usb_setup.c:156:17
  103dcc:    bf ea 9d fe       	call -0x2c6 <usb_write_rxcsr : 103b0a >			  ## usb_setup.c:156:17
  103dd0:    c6 14             	r14 = 0
  103dd2:    04 9f             	goto 0x3e <.GJTIE94_0_0_+0x8E : 103e12 >
  103dd4:    10 17             	r0 = r1.b0 (u)			  ## usb_setup.c:127:19
  103dd6:    00 fc 07 0c       	if (r0 > 0x6) goto 0xe <.GJTIE94_0_0_+0x64 : 103de8 >			  ## usb_setup.c:127:19
  103dda:    d8 ec 3a 20       	r2 = [r3+r0<<2]			  ## usb_setup.c:130:9
  103dde:    02 44             	if (r2 == 0) goto 0x8 <.GJTIE94_0_0_+0x64 : 103de8 >			  ## usb_setup.c:130:9
  103de0:    89 80             	r1 = sp + 0
  103de2:    f0 16             	r0 = r15			  ## usb_setup.c:131:10
  103de4:    c2 00             	call r2			  ## usb_setup.c:131:10
  103de6:    20 57             	if (r0 == 0) goto 0xae <.GJTIE94_0_0_+0x112 : 103e96 >			  ## usb_setup.c:131:10
  103de8:    40 23             	r0 = 0x3
  103dea:    52 ee f1 00       	b[r15+0x1] = r0
  103dee:    40 ea 60 80       	[r8+0x0] = 0x60			  ## usb_phy.c:70:22
  103df2:    40 20             	r0 = 0x0
  103df4:    b7 9a             	goto -0x10c <usb_device_isr+0x7E : 103cea >
  103df6:    40 20             	r0 = 0x0			  ## usb_setup.c:164:36
  103df8:    c1 ff 40 91 02 00 	r1 = 0x29140 <ep2_dma_buffer : 29140 >			  ## usb_setup.c:164:36
  103dfe:    98 40             	b[r1+0x0] = r0			  ## usb_setup.c:164:36
  103e00:    98 41             	b[r1+0x1] = r0			  ## usb_setup.c:165:36
  103e02:    d0 ec fd 10       	[r15+0xc] = r1			  ## usb_setup.c:166:30
  103e06:    40 22             	r0 = 0x2			  ## usb_setup.c:167:32
  103e08:    50 ed f3 00       	h[r15+0x2] = r0			  ## usb_setup.c:167:32
  103e0c:    04 82             	goto 0x4 <.GJTIE94_0_0_+0x8E : 103e12 >			  ## usb_setup.c:167:32
  103e0e:    4e e0 03 00       	r14 = 0x3
  103e12:    52 ee f1 e0       	b[r15+0x1] = r14
  103e16:    30 e1 ff ef       	r0 = r14 + -0x1			  ## usb_setup.c:203:9
  103e1a:    80 f9 05 04       	if (r0 < 0x2) goto 0xa <.GJTIE94_0_0_+0xA4 : 103e28 >			  ## usb_setup.c:203:9
  103e1e:    0e f8 37 00       	if (r14 == 0x0) goto 0x6e <.GJTIE94_0_0_+0x10C : 103e90 >
  103e22:    0e f8 e4 07       	if (r14 == 0x3) goto -0x38 <.GJTIE94_0_0_+0x6A : 103dee >
  103e26:    44 8e             	goto 0x11c <.GJTIE94_0_0_+0x1C0 : 103f44 >
  103e28:    40 ea 40 80       	[r8+0x0] = 0x40			  ## usb_phy.c:70:22
  103e2c:    0e f8 88 02       	if (r14 == 0x1) goto 0x110 <.GJTIE94_0_0_+0x1BC : 103f40 >			  ## usb_phy.c:70:22
  103e30:    44 89             	goto 0x112 <.GJTIE94_0_0_+0x1C0 : 103f44 >			  ## usb_phy.c:70:22
  103e32:    52 ee f0 a0       	b[r15+0x0] = r10			  ## usb_setup.c:47:26
  103e36:    14 89             	goto 0x52 <.GJTIE94_0_0_+0x106 : 103e8a >			  ## usb_setup.c:47:26
  103e38:    0c 15             	r13_r12 = r1_r0			  ## usb_setup.c:64:17
  103e3a:    d0 e1 08 c9       	r13_r12 >>= 0x18			  ## usb_setup.c:64:17
  103e3e:    b2 e1 20 c0       	r2 = uextra(r12, p:0x0, l:0x8)			  ## usb_setup.c:64:9
  103e42:    02 f8 30 06       	if (r2 == 0x3) goto 0x60 <.GJTIE94_0_0_+0x122 : 103ea6 >			  ## usb_setup.c:64:9
  103e46:    02 f8 3d 04       	if (r2 == 0x2) goto 0x7a <.GJTIE94_0_0_+0x140 : 103ec4 >
  103e4a:    82 f8 cd 03       	if (r2 != 0x1) goto -0x66 <.GJTIE94_0_0_+0x64 : 103de8 >
  103e4e:    c2 ff d5 3f 10 00 	r2 = 0x103fd5 <scsi_mode_sense+0x3 : 103fd4 >			  ## descriptor.c:71:5
  103e54:    c3 ff 40 91 02 00 	r3 = 0x29140 <ep2_dma_buffer : 29140 >			  ## descriptor.c:71:5
  103e5a:    36 16             	r6 = r3			  ## descriptor.c:71:5
  103e5c:    10 91             	rep 0x4 0x12 {			  ## descriptor.c:71:5
  103e5e:    24 07             		r4 = b[r2++=0x1] (u)			  ## descriptor.c:71:5
  103e60:    b4 07             		b[r3++=0x1] = r4
                               	}			  ## descriptor.c:71:5
  103e62:    d0 ec fd 60       	[r15+0xc] = r6			  ## usb_setup.c:67:34
  103e66:    43 32             	r3 = 0x12
  103e68:    24 9b             	goto 0xb6 <.GJTIE94_0_0_+0x19C : 103f20 >
  103e6a:    50 ee f5 00       	r0 = b[r15+0x5] (u)			  ## usb_setup.c:57:49
  103e6e:    c1 ff 40 91 02 00 	r1 = 0x29140 <ep2_dma_buffer : 29140 >			  ## usb_setup.c:57:49
  103e74:    98 40             	b[r1+0x0] = r0			  ## usb_setup.c:57:36
  103e76:    d0 ec fd 10       	[r15+0xc] = r1			  ## usb_setup.c:58:30
  103e7a:    40 21             	r0 = 0x1			  ## usb_setup.c:58:30
  103e7c:    50 ed f3 00       	h[r15+0x2] = r0			  ## usb_setup.c:59:32
  103e80:    52 ee f1 00       	b[r15+0x1] = r0			  ## usb_setup.c:60:27
  103e84:    24 9b             	goto 0xb6 <.GJTIE94_0_0_+0x1B8 : 103f3c >			  ## usb_setup.c:60:27
  103e86:    52 ee f5 a0       	b[r15+0x5] = r10			  ## usb_setup.c:100:31
  103e8a:    40 20             	r0 = 0x0
  103e8c:    52 ee f1 00       	b[r15+0x1] = r0
  103e90:    40 ea 48 80       	[r8+0x0] = 0x48			  ## usb_phy.c:70:22
  103e94:    24 97             	goto 0xae <.GJTIE94_0_0_+0x1C0 : 103f44 >			  ## usb_phy.c:70:22
  103e96:    50 ee f1 e0       	r14 = b[r15+0x1] (u)
  103e9a:    d7 9d             	goto -0x86 <.GJTIE94_0_0_+0x92 : 103e16 >
  103e9c:    51 20             	r1 = 0x40			  ## usb_setup.c:154:17
  103e9e:    bf ea 28 fe       	call -0x3b0 <usb_write_txcsr : 103af2 >			  ## usb_setup.c:154:17
  103ea2:    c6 14             	r14 = 0
  103ea4:    d7 96             	goto -0x94 <.GJTIE94_0_0_+0x8E : 103e12 >
  103ea6:    60 ff ff a0 30 00 	if ((r10 & 0xFF) == 0) goto 0x60 <.GJTIE94_0_0_+0x188 : 103f0c >
  103eac:    c2 ff e7 3f 10 00 	r2 = 0x103fe7 <sDeviceDescriptor+0x11 : 103fe6 >			  ## descriptor.c:79:5
  103eb2:    c6 ff 40 91 02 00 	r6 = 0x29140 <ep2_dma_buffer : 29140 >			  ## descriptor.c:79:5
  103eb8:    63 16             	r3 = r6			  ## descriptor.c:79:5
  103eba:    10 9b             	rep 0x4 0x1c {			  ## descriptor.c:79:5
  103ebc:    24 07             		r4 = b[r2++=0x1] (u)			  ## descriptor.c:79:5
  103ebe:    b4 07             		b[r3++=0x1] = r4
                               	}			  ## descriptor.c:79:5
  103ec0:    43 3c             	r3 = 0x1c			  ## descriptor.c:79:5
  103ec2:    14 8c             	goto 0x58 <.GJTIE94_0_0_+0x198 : 103f1c >			  ## descriptor.c:79:5
  103ec4:    c2 ff 03 40 10 00 	r2 = 0x104003 <MANUFACTURE_STR+0x1B : 104002 >			  ## descriptor.c:85:5
  103eca:    c4 ff 40 91 02 00 	r4 = 0x29140 <ep2_dma_buffer : 29140 >			  ## descriptor.c:85:5
  103ed0:    4a 16             	r10 = r4			  ## descriptor.c:85:5
  103ed2:    10 88             	rep 0x4 0x9 {			  ## descriptor.c:85:5
  103ed4:    26 07             		r6 = b[r2++=0x1] (u)			  ## descriptor.c:85:5
  103ed6:    c6 07             		b[r4++=0x1] = r6
                               	}			  ## descriptor.c:85:5
  103ed8:    02 e1 09 a0       	r2 = r10 + 0x9			  ## descriptor.c:85:5
  103edc:    c4 ff 96 3f 10 00 	r4 = 0x103f96 <sMassDescriptor : 103f96 >			  ## msd.c:122:5
  103ee2:    10 96             	rep 0x4 0x17 {			  ## msd.c:122:5
  103ee4:    46 07             		r6 = b[r4++=0x1] (u)			  ## msd.c:122:5
  103ee6:    a6 07             		b[r2++=0x1] = r6
                               	}			  ## msd.c:122:5
  103ee8:    42 20             	r2 = 0x0			  ## msd.c:123:12
  103eea:    52 ee ab 20       	b[r10+0xb] = r2			  ## msd.c:123:12
  103eee:    c4 ff c0 3b 10 00 	r4 = 0x103bc0 <msd_itf_hander : 103bc0 >			  ## usb_setup.c:143:31
  103ef4:    b4 60             	[r3+0x0] = r4			  ## usb_setup.c:143:31
  103ef6:    4b 20             	r3 = 0x20			  ## usb_setup.c:143:31
  103ef8:    52 ee a2 30       	b[r10+0x2] = r3			  ## descriptor.c:99:10
  103efc:    52 ee a3 20       	b[r10+0x3] = r2			  ## descriptor.c:100:10
  103f00:    42 21             	r2 = 0x1			  ## descriptor.c:101:10
  103f02:    52 ee a4 20       	b[r10+0x4] = r2			  ## descriptor.c:101:10
  103f06:    d0 ec fd a0       	[r15+0xc] = r10			  ## usb_setup.c:72:34
  103f0a:    04 8a             	goto 0x14 <.GJTIE94_0_0_+0x19C : 103f20 >			  ## usb_setup.c:72:34
  103f0c:    c2 ff 04 03 09 04 	r2 = 0x4090304 <__stub_LZ4_decompress_safe_usingDict+0x3F80308 : 4090304 >			  ## descriptor.c:75:5
  103f12:    c6 ff 40 91 02 00 	r6 = 0x29140 <ep2_dma_buffer : 29140 >			  ## descriptor.c:75:5
  103f18:    e2 60             	[r6+0x0] = r2			  ## descriptor.c:75:5
  103f1a:    43 24             	r3 = 0x4			  ## descriptor.c:75:5
  103f1c:    d0 ec fd 60       	[r15+0xc] = r6			  ## usb_setup.c:81:34
  103f20:    d0 e1 00 0b       	r1_r0 >>= 0x30			  ## usb_setup.c:190:5
  103f24:    32 16             	r2 = r3			  ## usb_setup.c:90:13
  103f26:    90 ec 00 03       	if (r0 <= r3) {			  ## usb_setup.c:90:13
  103f2a:    02 16             		r2 = r0
                               	}			  ## usb_setup.c:90:13
  103f2c:    50 ed f3 20       	h[r15+0x2] = r2			  ## usb_setup.c:89:32
  103f30:    42 21             	r2 = 0x1			  ## usb_setup.c:90:36
  103f32:    90 ec 00 03       	if (r0 <= r3) {			  ## usb_setup.c:90:36
  103f36:    42 20             		r2 = 0x0
                               	}			  ## usb_setup.c:90:36
  103f38:    52 ee f6 20       	b[r15+0x6] = r2			  ## usb_setup.c:90:36
  103f3c:    40 ea 40 80       	[r8+0x0] = 0x40			  ## usb_phy.c:70:22
  103f40:    bf ea 68 fe       	call -0x330 <ep0_stage_tx : 103c14 >
  103f44:    90 e1 92 67       	r6 = r9 & r7			  ## usb_onchip.c:46:13
  103f48:    44 21             	r4 = 0x1
  103f4a:    c7 ff 90 94 02 00 	r7 = 0x29490 <usb_interrupt_tx : 29490 >
  103f50:    04 8a             	goto 0x14 <.GJTIE94_0_0_+0x1E2 : 103f66 >
  103f52:    94 e1 52 04       	r0 = r5 & (1 << r4)			  ## usb_onchip.c:63:13
  103f56:    00 46             	if (r0 == 0) goto 0xc <.GJTIE94_0_0_+0x1E0 : 103f64 >			  ## usb_onchip.c:63:13
  103f58:    d8 ec 7a 14       	r1 = [r7+r4<<2]			  ## usb_onchip.c:64:17
  103f5c:    b1 e8 00 40       	if (r1 != 0x0) {			  ## usb_onchip.c:64:17
  103f60:    40 16             		r0 = r4			  ## usb_onchip.c:65:17
  103f62:    c1 00             		call r1
                               	}			  ## usb_onchip.c:65:17
  103f64:    c4 21             	r4 += 0x1			  ## usb_onchip.c:62:37
  103f66:    84 f8 f4 0f       	if (r4 != 0x7) goto -0x18 <.GJTIE94_0_0_+0x1CE : 103f52 >			  ## usb_onchip.c:62:5
  103f6a:    44 21             	r4 = 0x1
  103f6c:    c5 ff ac 94 02 00 	r5 = 0x294ac <usb_interrupt_rx : 294ac >
  103f72:    04 8a             	goto 0x14 <.GJTIE94_0_0_+0x204 : 103f88 >
  103f74:    94 e1 62 04       	r0 = r6 & (1 << r4)			  ## usb_onchip.c:70:13
  103f78:    00 46             	if (r0 == 0) goto 0xc <.GJTIE94_0_0_+0x202 : 103f86 >			  ## usb_onchip.c:70:13
  103f7a:    d8 ec 5a 14       	r1 = [r5+r4<<2]			  ## usb_onchip.c:71:17
  103f7e:    b1 e8 00 40       	if (r1 != 0x0) {			  ## usb_onchip.c:71:17
  103f82:    40 16             		r0 = r4			  ## usb_onchip.c:72:17
  103f84:    c1 00             		call r1
                               	}			  ## usb_onchip.c:72:17
  103f86:    c4 21             	r4 += 0x1			  ## usb_onchip.c:69:37
  103f88:    84 f8 f4 0f       	if (r4 != 0x7) goto -0x18 <.GJTIE94_0_0_+0x1F0 : 103f74 >
  103f8c:    02 82             	sp += 0x8
  103f8e:    d4 e8 ff ff       	{r15-r0} = [sp++]			  ## usb_onchip.c:77:1
  103f92:    a9 04             	{psr, rets, reti} = [sp++]			  ## usb_onchip.c:77:1
  103f94:    81 00             	rti			  ## usb_onchip.c:77:1


sMassDescriptor:
  103f96:	 09 04 00 00 02 08 06 50         .......P
  103f9e:	 00 07 05 81 02 40 00 01         .....@..
  103fa6:	 07 05 01 02 40 00 01            .


SCSIInquiryData:
  103fad:	 00 80 02 02 20 00 00 00         .... ...
  103fb5:	 42 52 33 30 20 20 20 20         BR30    
  103fbd:	 55 42 4f 4f 54 31 2e 30         UBOOT1.0
  103fc5:	 30 20 20 20 20 20 20 20         0       
  103fcd:	 31 2e 30 30                     1.00


scsi_mode_sense:
  103fd1:	 03 00 00 00                     ....


sDeviceDescriptor:
  103fd5:	 12 01 10 01 00 00 00 40         .......@
  103fdd:	 4a 4c 42 30 00 03 01 02         JLB0....
  103fe5:	 00 01                           ..B0..


MANUFACTURE_STR:
  103fe7:	 1c 03 42 00 52 00 33 00         ..B.R.3.
  103fef:	 30 00 55 00 42 00 4f 00         0.U.B.O.
  103ff7:	 4f 00 54 00 31 00 2e 00         O.T.1...
  103fff:	 30 00 30 00                     0.0.


sConfigDescriptor:
  104003:	 09 02 20 00 01 01 00 80         .. .....
  10400b:	 c8                              .. ....


usb_code_end:
  10400c:    ed ff 20 8c 02 00 	ssp = 0x28c20			  ## startup.S:31:0
  104012:    41 14             	sp = ssp			  ## startup.S:32:0
  104014:    ec ff 20 90 02 00 	usp = 0x29020			  ## startup.S:33:0
  10401a:    80 14             	r1_r0 = 0			  ## startup.S:34:0
  10401c:    82 14             	r3_r2 = 0			  ## startup.S:35:0
  10401e:    84 14             	r5_r4 = 0			  ## startup.S:36:0
  104020:    86 14             	r7_r6 = 0			  ## startup.S:37:0
  104022:    88 14             	r9_r8 = 0			  ## startup.S:38:0
  104024:    8a 14             	r11_r10 = 0			  ## startup.S:39:0
  104026:    8c 14             	r13_r12 = 0			  ## startup.S:40:0
  104028:    8e 14             	r15_r14 = 0			  ## startup.S:41:0
  10402a:    64 e0 80 05       	psr = r0			  ## startup.S:43:0
  10402e:    64 e0 80 01       	rete = r0			  ## startup.S:44:0
  104032:    64 e0 80 02       	retx = r0			  ## startup.S:45:0
  104036:    64 e0 80 03       	rets = r0			  ## startup.S:46:0
  10403a:    64 e0 80 00       	reti = r0			  ## startup.S:47:0
  10403e:    80 ea ed 59       	call 0xb3da <switch_to_hrc_asm : 10f41c >			  ## startup.S:48:0
  104042:    e0 ff 4a 40 10 00 	reti = 0x10404a			  ## startup.S:50:0
  104048:    81 00             	rti			  ## startup.S:51:0


_user_mode:
  10404a:    80 ea 99 5d       	call 0xbb32 <p11_boot : 10fb80 >			  ## startup.S:54:0
  10404e:    80 ea 82 4f       	call 0x9f04 <boot_poweroff : 10df56 >			  ## startup.S:55:0
  104052:    40 20             	r0 = 0x0			  ## startup.S:56:0
  104054:    c1 ff 20 88 02 00 	r1 = 0x28820 <stack_bss_begin : 28820 >			  ## startup.S:57:0
  10405a:    c2 ff 00 08 00 00 	r2 = 0x800 <stack_bss_size : 800 >			  ## startup.S:58:0
  104060:    a2 a2             	r2 = r2 >> 0x2			  ## startup.S:59:0
  104062:    02 03             	rep 0x2 r2 {			  ## startup.S:61:0
  104064:    90 05             		[r1++=0x4] = r0
                               	}			  ## startup.S:62:0
  104066:    02 fc fc 01       	if (r2 > 0x0) goto -0x8 <_user_mode+0x18 : 104062 >			  ## startup.S:63:0
  10406a:    40 20             	r0 = 0x0			  ## startup.S:66:0
  10406c:    c1 ff c0 93 02 00 	r1 = 0x293c0 <var_bss_begin : 293c0 >			  ## startup.S:67:0
  104072:    c2 ff 08 01 00 00 	r2 = 0x108 <var_bss_size : 108 >			  ## startup.S:68:0
  104078:    a2 a2             	r2 = r2 >> 0x2			  ## startup.S:69:0
  10407a:    02 03             	rep 0x2 r2 {			  ## startup.S:71:0
  10407c:    90 05             		[r1++=0x4] = r0
                               	}			  ## startup.S:72:0
  10407e:    02 fc fc 01       	if (r2 > 0x0) goto -0x8 <_user_mode+0x30 : 10407a >			  ## startup.S:73:0
  104082:    80 ea 99 50       	call 0xa132 <p33_softflag_boot : 10e1b8 >			  ## startup.S:76:0
  104086:    c0 ea 3e 58       	goto 0xb07c <main : 10f106 >			  ## startup.S:77:0
  10408a:    00 00             	nop
  10408c:    00 00             	nop
  10408e:    00 00             	nop


norflash_check_in.spi0_portb_config:
  104090:	 08 00 00 00                     ....


norflash_check_in.spi0_porta_config:
  104094:	 00 00 00 00                     ....


nvram_boot_tag:
  104098:	 bf ec cb d9 c6 f4 b6 af         


STFT_Win_FixHalf_M512_D160:
  1040a0:	 00 00 c9 00 92 01 5b 02         ......[.
  1040a8:	 24 03 ed 03 b6 04 7f 05         $.......
  1040b0:	 48 06 11 07 d9 07 a2 08         H.......
  1040b8:	 6b 09 33 0a fb 0a c4 0b         k.3.....
  1040c0:	 8c 0c 54 0d 1c 0e e4 0e         ..T.....
  1040c8:	 ab 0f 73 10 3a 11 01 12         ..s.:...
  1040d0:	 c8 12 8f 13 55 14 1c 15         ....U...
  1040d8:	 e2 15 a8 16 6e 17 33 18         ....n.3.
  1040e0:	 f9 18 be 19 83 1a 47 1b         ......G.
  1040e8:	 0c 1c d0 1c 93 1d 57 1e         ......W.
  1040f0:	 1a 1f dd 1f 9f 20 62 21         ..... b!
  1040f8:	 24 22 e5 22 a7 23 67 24         $".".#g$
  104100:	 28 25 e8 25 a8 26 68 27         (%.%.&h'
  104108:	 27 28 e5 28 a4 29 62 2a         '(.(.)b*
  104110:	 1f 2b dc 2b 99 2c 55 2d         .+.+.,U-
  104118:	 11 2e cc 2e 87 2f 42 30         ...../B0
  104120:	 fc 30 b5 31 6e 32 27 33         .0.1n2'3
  104128:	 df 33 97 34 4e 35 04 36         .3.4N5.6
  104130:	 ba 36 70 37 25 38 d9 38         .6p7%8.8
  104138:	 8d 39 40 3a f3 3a a5 3b         .9@:.:.;
  104140:	 57 3c 08 3d b8 3d 68 3e         W<.=.=h>
  104148:	 17 3f c6 3f 74 40 21 41         .?.?t@!A
  104150:	 ce 41 7a 42 26 43 d1 43         .AzB&C.C
  104158:	 7b 44 24 45 cd 45 75 46         {D$E.EuF
  104160:	 1d 47 c4 47 6a 48 0f 49         .G.GjH.I
  104168:	 b4 49 58 4a fb 4a 9e 4b         .IXJ.J.K
  104170:	 40 4c e1 4c 81 4d 21 4e         @L.L.M!N
  104178:	 c0 4e 5e 4f fb 4f 98 50         .N^O.O.P
  104180:	 34 51 cf 51 69 52 03 53         4Q.QiR.S
  104188:	 9b 53 33 54 ca 54 60 55         .S3T.T`U
  104190:	 f6 55 8a 56 1e 57 b1 57         .U.V.W.W
  104198:	 43 58 d4 58 64 59 f4 59         CX.XdY.Y
  1041a0:	 82 5a 10 5b 9d 5b 29 5c         .Z.[.[)\
  1041a8:	 b4 5c 3e 5d c8 5d 50 5e         .\>].]P^
  1041b0:	 d7 5e 5e 5f e4 5f 68 60         .^^_._h`
  1041b8:	 ec 60 6f 61 f1 61 72 62         .`oa.arb
  1041c0:	 f2 62 71 63 ef 63 6c 64         .bqc.cld
  1041c8:	 e9 64 64 65 de 65 57 66         .dde.eWf
  1041d0:	 d0 66 47 67 bd 67 32 68         .fGg.g2h
  1041d8:	 a7 68 1a 69 8c 69 fd 69         .h.i.i.i
  1041e0:	 6e 6a dd 6a 4b 6b b8 6b         nj.jKk.k
  1041e8:	 24 6c 8f 6c f9 6c 62 6d         $l.l.lbm
  1041f0:	 ca 6d 31 6e 97 6e fb 6e         .m1n.n.n
  1041f8:	 5f 6f c2 6f 23 70 83 70         _o.o#p.p
  104200:	 e3 70 41 71 9e 71 fa 71         .pAq.q.q
  104208:	 55 72 af 72 08 73 5f 73         Ur.r.s_s
  104210:	 b6 73 0b 74 60 74 b3 74         .s.t`t.t
  104218:	 05 75 56 75 a6 75 f4 75         .uVu.u.u
  104220:	 42 76 8e 76 d9 76 23 77         Bv.v.v#w
  104228:	 6c 77 b4 77 fb 77 40 78         lw.w.w@x
  104230:	 85 78 c8 78 0a 79 4a 79         .x.x.yJy
  104238:	 8a 79 c9 79 06 7a 42 7a         .y.y.zBz
  104240:	 7d 7a b7 7a ef 7a 27 7b         }z.z.z'{
  104248:	 5d 7b 92 7b c6 7b f9 7b         ]{.{.{.{
  104250:	 2a 7c 5a 7c 89 7c b7 7c         *|Z|.|.|
  104258:	 e4 7c 0f 7d 3a 7d 63 7d         .|.}:}c}
  104260:	 8a 7d b1 7d d6 7d fb 7d         .}.}.}.}
  104268:	 1e 7e 3f 7e 60 7e 7f 7e         .~?~`~.~
  104270:	 9d 7e ba 7e d6 7e f0 7e         .~.~.~.~
  104278:	 0a 7f 22 7f 38 7f 4e 7f         ..".8.N.
  104280:	 62 7f 75 7f 87 7f 98 7f         b.u.....
  104288:	 a7 7f b5 7f c2 7f ce 7f         ........
  104290:	 d9 7f e2 7f ea 7f f1 7f         ........
  104298:	 f6 7f fa 7f fe 7f ff 7f         ........
  1042a0:	 ff 7f ff 7f fe 7f fa 7f         ........
  1042a8:	 f6 7f f1 7f ea 7f e2 7f         ........
  1042b0:	 d9 7f ce 7f c2 7f b5 7f         ........
  1042b8:	 a7 7f 98 7f 87 7f 75 7f         ......u.
  1042c0:	 62 7f 4e 7f 38 7f 22 7f         b.N.8.".
  1042c8:	 0a 7f f0 7e d6 7e ba 7e         ...~.~.~
  1042d0:	 9d 7e 7f 7e 60 7e 3f 7e         .~.~`~?~
  1042d8:	 1e 7e fb 7d d6 7d b1 7d         .~.}.}.}
  1042e0:	 8a 7d 63 7d 3a 7d 0f 7d         .}c}:}.}
  1042e8:	 e4 7c b7 7c 89 7c 5a 7c         .|.|.|Z|
  1042f0:	 2a 7c f9 7b c6 7b 92 7b         *|.{.{.{
  1042f8:	 5d 7b 27 7b ef 7a b7 7a         ]{'{.z.z
  104300:	 7d 7a 42 7a 06 7a c9 79         }zBz.z.y
  104308:	 8a 79 4a 79 0a 79 c8 78         .yJy.y.x
  104310:	 85 78 40 78 fb 77 b4 77         .x@x.w.w
  104318:	 6c 77 23 77 d9 76 8e 76         lw#w.v.v
  104320:	 42 76 f4 75 a6 75 56 75         Bv.u.uVu
  104328:	 05 75 b3 74 60 74 0b 74         .u.t`t.t
  104330:	 b6 73 5f 73 08 73 af 72         .s_s.s.r
  104338:	 55 72 fa 71 9e 71 41 71         Ur.q.qAq
  104340:	 e3 70 83 70 23 70 c2 6f         .p.p#p.o
  104348:	 5f 6f fb 6e 97 6e 31 6e         _o.n.n1n
  104350:	 ca 6d 62 6d f9 6c 8f 6c         .mbm.l.l
  104358:	 24 6c b8 6b 4b 6b dd 6a         $l.kKk.j
  104360:	 6e 6a fd 69 8c 69 1a 69         nj.i.i.i
  104368:	 a7 68 32 68 bd 67 47 67         .h2h.gGg
  104370:	 d0 66 57 66 de 65 64 65         .fWf.ede
  104378:	 e9 64 6c 64 ef 63 71 63         .dld.cqc
  104380:	 f2 62 72 62 f1 61 6f 61         .brb.aoa
  104388:	 ec 60 68 60 e4 5f 5e 5f         .`h`._^_
  104390:	 d7 5e 50 5e c8 5d 3e 5d         .^P^.]>]
  104398:	 b4 5c 29 5c 9d 5b 10 5b         .\)\.[.[
  1043a0:	 82 5a f4 59 64 59 d4 58         .Z.YdY.X
  1043a8:	 43 58 b1 57 1e 57 8a 56         CX.W.W.V
  1043b0:	 f6 55 60 55 ca 54 33 54         .U`U.T3T
  1043b8:	 9b 53 03 53 69 52 cf 51         .S.SiR.Q
  1043c0:	 34 51 98 50 fb 4f 5e 4f         4Q.P.O^O
  1043c8:	 c0 4e 21 4e 81 4d e1 4c         .N!N.M.L
  1043d0:	 40 4c 9e 4b fb 4a 58 4a         @L.K.JXJ
  1043d8:	 b4 49 0f 49 6a 48 c4 47         .I.IjH.G
  1043e0:	 1d 47 75 46 cd 45 24 45         .GuF.E$E
  1043e8:	 7b 44 d1 43 26 43 7a 42         {D.C&CzB
  1043f0:	 ce 41 21 41 74 40 c6 3f         .A!At@.?
  1043f8:	 17 3f 68 3e b8 3d 08 3d         .?h>.=.=
  104400:	 57 3c a5 3b f3 3a 40 3a         W<.;.:@:
  104408:	 8d 39 d9 38 25 38 70 37         .9.8%8p7
  104410:	 ba 36 04 36 4e 35 97 34         .6.6N5.4
  104418:	 df 33 27 33 6e 32 b5 31         .3'3n2.1
  104420:	 fc 30 42 30 87 2f cc 2e         .0B0./..
  104428:	 11 2e 55 2d 99 2c dc 2b         ..U-.,.+
  104430:	 1f 2b 62 2a a4 29 e5 28         .+b*.).(
  104438:	 27 28 68 27 a8 26 e8 25         '(h'.&.%
  104440:	 28 25 67 24 a7 23 e5 22         (%g$.#."
  104448:	 24 22 62 21 9f 20 dd 1f         $"b!. ..
  104450:	 1a 1f 57 1e 93 1d d0 1c         ..W.....
  104458:	 0c 1c 47 1b 83 1a be 19         ..G.....
  104460:	 f9 18 33 18 6e 17 a8 16         ..3.n...
  104468:	 e2 15 1c 15 55 14 8f 13         ....U...
  104470:	 c8 12 01 12 3a 11 73 10         ....:.s.
  104478:	 ab 0f e4 0e 1c 0e 54 0d         ......T.
  104480:	 8c 0c c4 0b fb 0a 33 0a         ......3.
  104488:	 6b 09 a2 08 d9 07 11 07         k.......
  104490:	 48 06 7f 05 b6 04 ed 03         H.......
  104498:	 24 03 5b 02 92 01 c9 00         


STFT_Win_FixHalf_M256_D160:
  1044a0:	 00 00 18 02 30 04 48 06         ....0.H.
  1044a8:	 5f 08 76 0a 8c 0c a1 0e         _.v.....
  1044b0:	 b5 10 c8 12 da 14 ea 16         ........
  1044b8:	 f9 18 06 1b 11 1d 1a 1f         ........
  1044c0:	 21 21 26 23 28 25 28 27         !!&#(%('
  1044c8:	 25 29 1f 2b 17 2d 0b 2f         %).+.-./
  1044d0:	 fc 30 e9 32 d4 34 ba 36         .0.2.4.6
  1044d8:	 9d 38 7c 3a 57 3c 2d 3e         .8|:W<->
  1044e0:	 00 40 ce 41 98 43 5d 45         .@.A.C]E
  1044e8:	 1d 47 d8 48 8f 4a 40 4c         .G.H.J@L
  1044f0:	 ec 4d 93 4f 34 51 cf 52         .M.O4Q.R
  1044f8:	 65 54 f6 55 80 57 04 59         eT.U.W.Y
  104500:	 82 5a fa 5b 6c 5d d7 5e         .Z.[l].^
  104508:	 3c 60 9a 61 f2 62 43 64         <`.a.bCd
  104510:	 8d 65 d0 66 0b 68 40 69         .e.f.h@i
  104518:	 6e 6a 94 6b b3 6c ca 6d         nj.k.l.m
  104520:	 da 6e e2 6f e3 70 dc 71         .n.o.p.q
  104528:	 cd 72 b6 73 97 74 70 75         .r.s.tpu
  104530:	 42 76 0b 77 cc 77 85 78         Bv.w.w.x
  104538:	 35 79 dd 79 7d 7a 14 7b         5y.y}z.{
  104540:	 a3 7b 2a 7c a8 7c 1d 7d         .{*|.|.}
  104548:	 8a 7d ef 7d 4a 7e 9d 7e         .}.}J~.~
  104550:	 e8 7e 29 7f 62 7f 92 7f         .~).b...
  104558:	 ba 7f d9 7f ee 7f fc 7f         ........
  104560:	 ff 7f ff 7f ff 7f ff 7f         ........
  104568:	 ff 7f ff 7f ff 7f ff 7f         ........
  104570:	 ff 7f ff 7f ff 7f ff 7f         ........
  104578:	 ff 7f ff 7f ff 7f ff 7f         ........
  104580:	 ff 7f ff 7f ff 7f ff 7f         ........
  104588:	 ff 7f ff 7f ff 7f ff 7f         ........
  104590:	 ff 7f ff 7f ff 7f ff 7f         ........
  104598:	 ff 7f ff 7f ff 7f ff 7f         ........
  1045a0:	 ff 7f ff 7f ff 7f ff 7f         ........
  1045a8:	 ff 7f ff 7f ff 7f ff 7f         ........
  1045b0:	 ff 7f ff 7f ff 7f ff 7f         ........
  1045b8:	 ff 7f ff 7f ff 7f ff 7f         ........
  1045c0:	 ff 7f ff 7f ff 7f ff 7f         ........
  1045c8:	 ff 7f ff 7f ff 7f ff 7f         ........
  1045d0:	 ff 7f ff 7f ff 7f ff 7f         ........
  1045d8:	 ff 7f ff 7f ff 7f ff 7f         ........
  1045e0:	 ff 7f fc 7f ee 7f d9 7f         ........
  1045e8:	 ba 7f 92 7f 62 7f 29 7f         ....b.).
  1045f0:	 e8 7e 9d 7e 4a 7e ef 7d         .~.~J~.}
  1045f8:	 8a 7d 1d 7d a8 7c 2a 7c         .}.}.|*|
  104600:	 a3 7b 14 7b 7d 7a dd 79         .{.{}z.y
  104608:	 35 79 85 78 cc 77 0b 77         5y.x.w.w
  104610:	 42 76 70 75 97 74 b6 73         Bvpu.t.s
  104618:	 cd 72 dc 71 e3 70 e2 6f         .r.q.p.o
  104620:	 da 6e ca 6d b3 6c 94 6b         .n.m.l.k
  104628:	 6e 6a 40 69 0b 68 d0 66         nj@i.h.f
  104630:	 8d 65 43 64 f2 62 9a 61         .eCd.b.a
  104638:	 3c 60 d7 5e 6c 5d fa 5b         <`.^l].[
  104640:	 82 5a 04 59 80 57 f6 55         .Z.Y.W.U
  104648:	 65 54 cf 52 34 51 93 4f         eT.R4Q.O
  104650:	 ec 4d 40 4c 8f 4a d8 48         .M@L.J.H
  104658:	 1d 47 5d 45 98 43 ce 41         .G]E.C.A
  104660:	 00 40 2d 3e 57 3c 7c 3a         .@->W<|:
  104668:	 9d 38 ba 36 d4 34 e9 32         .8.6.4.2
  104670:	 fc 30 0b 2f 17 2d 1f 2b         .0./.-.+
  104678:	 25 29 28 27 28 25 26 23         %)('(%&#
  104680:	 21 21 1a 1f 11 1d 06 1b         !!......
  104688:	 f9 18 ea 16 da 14 c8 12         ........
  104690:	 b5 10 a1 0e 8c 0c 76 0a         ......v.
  104698:	 5f 08 48 06 30 04 18 02         


STFT_Win_FixHalf_M256_D80:
  1046a0:	 00 00 92 01 24 03 b6 04         ....$...
  1046a8:	 48 06 d9 07 6b 09 fb 0a         H...k...
  1046b0:	 8c 0c 1c 0e ab 0f 3a 11         ......:.
  1046b8:	 c8 12 55 14 e2 15 6e 17         ..U...n.
  1046c0:	 f9 18 83 1a 0c 1c 93 1d         ........
  1046c8:	 1a 1f 9f 20 24 22 a7 23         ... $".#
  1046d0:	 28 25 a8 26 27 28 a4 29         (%.&'(.)
  1046d8:	 1f 2b 99 2c 11 2e 87 2f         .+.,.../
  1046e0:	 fc 30 6e 32 df 33 4e 35         .0n2.3N5
  1046e8:	 ba 36 25 38 8d 39 f3 3a         .6%8.9.:
  1046f0:	 57 3c b8 3d 17 3f 74 40         W<.=.?t@
  1046f8:	 ce 41 26 43 7b 44 cd 45         .A&C{D.E
  104700:	 1d 47 6a 48 b4 49 fb 4a         .GjH.I.J
  104708:	 40 4c 81 4d c0 4e fb 4f         @L.M.N.O
  104710:	 34 51 69 52 9b 53 ca 54         4QiR.S.T
  104718:	 f6 55 1e 57 43 58 64 59         .U.WCXdY
  104720:	 82 5a 9d 5b b4 5c c8 5d         .Z.[.\.]
  104728:	 d7 5e e4 5f ec 60 f1 61         .^._.`.a
  104730:	 f2 62 ef 63 e9 64 de 65         .b.c.d.e
  104738:	 d0 66 bd 67 a7 68 8c 69         .f.g.h.i
  104740:	 6e 6a 4b 6b 24 6c f9 6c         njKk$l.l
  104748:	 ca 6d 97 6e 5f 6f 23 70         .m.n_o#p
  104750:	 e3 70 9e 71 55 72 08 73         .p.qUr.s
  104758:	 b6 73 60 74 05 75 a6 75         .s`t.u.u
  104760:	 42 76 d9 76 6c 77 fb 77         Bv.vlw.w
  104768:	 85 78 0a 79 8a 79 06 7a         .x.y.y.z
  104770:	 7d 7a ef 7a 5d 7b c6 7b         }z.z]{.{
  104778:	 2a 7c 89 7c e4 7c 3a 7d         *|.|.|:}
  104780:	 8a 7d d6 7d 1e 7e 60 7e         .}.}.~`~
  104788:	 9d 7e d6 7e 0a 7f 38 7f         .~.~..8.
  104790:	 62 7f 87 7f a7 7f c2 7f         b.......
  104798:	 d9 7f ea 7f f6 7f fe 7f         ........
  1047a0:	 ff 7f fe 7f f6 7f ea 7f         ........
  1047a8:	 d9 7f c2 7f a7 7f 87 7f         ........
  1047b0:	 62 7f 38 7f 0a 7f d6 7e         b.8....~
  1047b8:	 9d 7e 60 7e 1e 7e d6 7d         .~`~.~.}
  1047c0:	 8a 7d 3a 7d e4 7c 89 7c         .}:}.|.|
  1047c8:	 2a 7c c6 7b 5d 7b ef 7a         *|.{]{.z
  1047d0:	 7d 7a 06 7a 8a 79 0a 79         }z.z.y.y
  1047d8:	 85 78 fb 77 6c 77 d9 76         .x.wlw.v
  1047e0:	 42 76 a6 75 05 75 60 74         Bv.u.u`t
  1047e8:	 b6 73 08 73 55 72 9e 71         .s.sUr.q
  1047f0:	 e3 70 23 70 5f 6f 97 6e         .p#p_o.n
  1047f8:	 ca 6d f9 6c 24 6c 4b 6b         .m.l$lKk
  104800:	 6e 6a 8c 69 a7 68 bd 67         nj.i.h.g
  104808:	 d0 66 de 65 e9 64 ef 63         .f.e.d.c
  104810:	 f2 62 f1 61 ec 60 e4 5f         .b.a.`._
  104818:	 d7 5e c8 5d b4 5c 9d 5b         .^.].\.[
  104820:	 82 5a 64 59 43 58 1e 57         .ZdYCX.W
  104828:	 f6 55 ca 54 9b 53 69 52         .U.T.SiR
  104830:	 34 51 fb 4f c0 4e 81 4d         4Q.O.N.M
  104838:	 40 4c fb 4a b4 49 6a 48         @L.J.IjH
  104840:	 1d 47 cd 45 7b 44 26 43         .G.E{D&C
  104848:	 ce 41 74 40 17 3f b8 3d         .At@.?.=
  104850:	 57 3c f3 3a 8d 39 25 38         W<.:.9%8
  104858:	 ba 36 4e 35 df 33 6e 32         .6N5.3n2
  104860:	 fc 30 87 2f 11 2e 99 2c         .0./...,
  104868:	 1f 2b a4 29 27 28 a8 26         .+.)'(.&
  104870:	 28 25 a7 23 24 22 9f 20         (%.#$". 
  104878:	 1a 1f 93 1d 0c 1c 83 1a         ........
  104880:	 f9 18 6e 17 e2 15 55 14         ..n...U.
  104888:	 c8 12 3a 11 ab 0f 1c 0e         ..:.....
  104890:	 8c 0c fb 0a 6b 09 d9 07         ....k...
  104898:	 48 06 b6 04 24 03 92 01         


STFT_Win_FixHalf_M128_D80:
  1048a0:	 00 00 30 04 5f 08 8c 0c         ..0._...
  1048a8:	 b5 10 da 14 f9 18 11 1d         ........
  1048b0:	 21 21 28 25 25 29 17 2d         !!(%%).-
  1048b8:	 fc 30 d4 34 9d 38 57 3c         .0.4.8W<
  1048c0:	 00 40 98 43 1d 47 8f 4a         .@.C.G.J
  1048c8:	 ec 4d 34 51 65 54 80 57         .M4QeT.W
  1048d0:	 82 5a 6c 5d 3c 60 f2 62         .Zl]<`.b
  1048d8:	 8d 65 0b 68 6e 6a b3 6c         .e.hnj.l
  1048e0:	 da 6e e3 70 cd 72 97 74         .n.p.r.t
  1048e8:	 42 76 cc 77 35 79 7d 7a         Bv.w5y}z
  1048f0:	 a3 7b a8 7c 8a 7d 4a 7e         .{.|.}J~
  1048f8:	 e8 7e 62 7f ba 7f ee 7f         .~b.....
  104900:	 ff 7f ff 7f ff 7f ff 7f         ........
  104908:	 ff 7f ff 7f ff 7f ff 7f         ........
  104910:	 ff 7f ff 7f ff 7f ff 7f         ........
  104918:	 ff 7f ff 7f ff 7f ff 7f         ........
  104920:	 ff 7f ff 7f ff 7f ff 7f         ........
  104928:	 ff 7f ff 7f ff 7f ff 7f         ........
  104930:	 ff 7f ff 7f ff 7f ff 7f         ........
  104938:	 ff 7f ff 7f ff 7f ff 7f         ........
  104940:	 ff 7f ee 7f ba 7f 62 7f         ......b.
  104948:	 e8 7e 4a 7e 8a 7d a8 7c         .~J~.}.|
  104950:	 a3 7b 7d 7a 35 79 cc 77         .{}z5y.w
  104958:	 42 76 97 74 cd 72 e3 70         Bv.t.r.p
  104960:	 da 6e b3 6c 6e 6a 0b 68         .n.lnj.h
  104968:	 8d 65 f2 62 3c 60 6c 5d         .e.b<`l]
  104970:	 82 5a 80 57 65 54 34 51         .Z.WeT4Q
  104978:	 ec 4d 8f 4a 1d 47 98 43         .M.J.G.C
  104980:	 00 40 57 3c 9d 38 d4 34         .@W<.8.4
  104988:	 fc 30 17 2d 25 29 28 25         .0.-%)(%
  104990:	 21 21 11 1d f9 18 da 14         !!......
  104998:	 b5 10 8c 0c 5f 08 30 04         


WOLAAnalysisFilter_Float_M64_m4_r1:
  1049a0:	 00 00 00 00 4a 9f c4 38         ....J..8
  1049a8:	 b4 54 06 39 be 55 30 39         .T.9.U09
  1049b0:	 4b cc 60 39 b5 18 8c 39         K.`9...9
  1049b8:	 56 7e ab 39 79 d1 ce 39         V~.9y..9
  1049c0:	 b6 4a f6 39 0f 10 11 3a         .J.9...:
  1049c8:	 57 42 29 3a c2 d3 43 3a         WB):..C:
  1049d0:	 ab d9 60 3a 66 33 80 3a         ..`:f3.:
  1049d8:	 7c 45 91 3a 46 a9 a3 3a         |E.:F..:
  1049e0:	 37 63 b7 3a 98 75 cc 3a         7c.:.u.:
  1049e8:	 9c e0 e2 3a ea a1 fa 3a         ...:...:
  1049f0:	 5b da 09 3b a8 08 17 3b         [..;...;
  1049f8:	 97 d6 24 3b 51 3d 33 3b         ..$;Q=3;
  104a00:	 58 34 42 3b 81 b1 51 3b         X4B;..Q;
  104a08:	 db a8 61 3b 91 0c 72 3b         ..a;..r;
  104a10:	 78 66 81 3b 2c ec 89 3b         xf.;,..;
  104a18:	 92 8d 92 3b d5 3f 9b 3b         ...;.?.;
  104a20:	 18 f7 a3 3b 7a a6 ac 3b         ...;z..;
  104a28:	 13 40 b5 3b ec b4 bd 3b         .@.;...;
  104a30:	 0f f5 c5 3b 82 ef cd 3b         ...;...;
  104a38:	 50 92 d5 3b 8f ca dc 3b         P..;...;
  104a40:	 67 84 e3 3b 1d ab e9 3b         g..;...;
  104a48:	 21 29 ef 3b 18 e8 f3 3b         !).;...;
  104a50:	 ec d0 f7 3b d9 cb fa 3b         ...;...;
  104a58:	 8e c0 fc 3b 2a 96 fd 3b         ...;*..;
  104a60:	 63 33 fd 3b 93 7e fb 3b         c3.;.~.;
  104a68:	 d9 5d f8 3b 29 b7 f3 3b         .].;)..;
  104a70:	 6a 70 ed 3b 93 6f e5 3b         jp.;.o.;
  104a78:	 ca 9a db 3b 7b d8 cf 3b         ...;{..;
  104a80:	 7c 0f c2 3b 29 27 b2 3b         |..;)'.;
  104a88:	 87 07 a0 3b 66 99 8b 3b         ...;f..;
  104a90:	 e6 8c 69 3b e0 f2 36 3b         ..i;..6;
  104a98:	 fd 78 fe 3a 43 88 84 3a         .x.:C..:
  104aa0:	 00 00 00 00 8a f5 8f ba         ........
  104aa8:	 7c 7d 15 bb 18 ba 68 bb         |}....h.
  104ab0:	 de e2 a0 bb c6 58 d0 bb         .....X..
  104ab8:	 a3 62 01 bc 52 16 1c bc         .b..R...
  104ac0:	 71 48 38 bc db f8 55 bc         qH8...U.
  104ac8:	 28 26 75 bc d9 e6 8a bc         (&u.....
  104ad0:	 ca f5 9b bc 42 bd ad bc         ....B...
  104ad8:	 07 3a c0 bc 1c 68 d3 bc         .:...h..
  104ae0:	 e5 42 e7 bc 1d c5 fb bc         .B......
  104ae8:	 63 74 08 bd 9f 53 13 bd         ct...S..
  104af0:	 9b 7c 1e bd 5c eb 29 bd         .|..\.).
  104af8:	 98 9b 35 bd ae 88 41 bd         ..5...A.
  104b00:	 b3 ad 4d bd 72 05 5a bd         ..M.r.Z.
  104b08:	 6e 8a 66 bd df 36 73 bd         n.f..6s.
  104b10:	 61 02 80 bd ec 76 86 bd         a....v..
  104b18:	 d1 f5 8c bd ba 7b 93 bd         .....{..
  104b20:	 37 05 9a bd c6 8e a0 bd         7.......
  104b28:	 d1 14 a7 bd b2 93 ad bd         ........
  104b30:	 ba 07 b4 bd 2a 6d ba bd         ....*m..
  104b38:	 47 c0 c0 bd 4c fd c6 bd         G...L...
  104b40:	 6d 20 cd bd fd 25 d3 bd         m ...%..
  104b48:	 35 0a d9 bd 69 c9 de bd         5...i...
  104b50:	 fc 5f e4 bd 5c ca e9 bd         ._..\...
  104b58:	 13 05 ef bd ad 0c f4 bd         ........
  104b60:	 f5 dd f8 bd ac 75 fd bd         .....u..
  104b68:	 6b e8 00 be 40 f6 02 be         k...@...
  104b70:	 fa e2 04 be 49 ad 06 be         ....I...
  104b78:	 f0 53 08 be de d5 09 be         .S......
  104b80:	 05 32 0b be 75 67 0c be         .2..ug..
  104b88:	 55 75 0d be f2 5a 0e be         Uu...Z..
  104b90:	 a3 17 0f be f6 aa 0f be         ........
  104b98:	 79 14 10 be e3 53 10 be         y....S..
  104ba0:	 0b 69 10 be e3 53 10 be         .i...S..
  104ba8:	 79 14 10 be f6 aa 0f be         y.......
  104bb0:	 a3 17 0f be f2 5a 0e be         .....Z..
  104bb8:	 55 75 0d be 75 67 0c be         Uu..ug..
  104bc0:	 05 32 0b be de d5 09 be         .2......
  104bc8:	 f0 53 08 be 49 ad 06 be         .S..I...
  104bd0:	 fa e2 04 be 40 f6 02 be         ....@...
  104bd8:	 6b e8 00 be ac 75 fd bd         k....u..
  104be0:	 f5 dd f8 bd ad 0c f4 bd         ........
  104be8:	 13 05 ef bd 5c ca e9 bd         ....\...
  104bf0:	 fc 5f e4 bd 69 c9 de bd         ._..i...
  104bf8:	 35 0a d9 bd fd 25 d3 bd         5....%..
  104c00:	 6d 20 cd bd 4c fd c6 bd         m ..L...
  104c08:	 47 c0 c0 bd 2a 6d ba bd         G...*m..
  104c10:	 ba 07 b4 bd b2 93 ad bd         ........
  104c18:	 d1 14 a7 bd c6 8e a0 bd         ........
  104c20:	 37 05 9a bd ba 7b 93 bd         7....{..
  104c28:	 d1 f5 8c bd ec 76 86 bd         .....v..
  104c30:	 61 02 80 bd df 36 73 bd         a....6s.
  104c38:	 6e 8a 66 bd 72 05 5a bd         n.f.r.Z.
  104c40:	 b3 ad 4d bd ae 88 41 bd         ..M...A.
  104c48:	 98 9b 35 bd 5c eb 29 bd         ..5.\.).
  104c50:	 9b 7c 1e bd 9f 53 13 bd         .|...S..
  104c58:	 63 74 08 bd 1d c5 fb bc         ct......
  104c60:	 e5 42 e7 bc 1c 68 d3 bc         .B...h..
  104c68:	 07 3a c0 bc 42 bd ad bc         .:..B...
  104c70:	 ca f5 9b bc d9 e6 8a bc         ........
  104c78:	 28 26 75 bc db f8 55 bc         (&u...U.
  104c80:	 71 48 38 bc 52 16 1c bc         qH8.R...
  104c88:	 a3 62 01 bc c6 58 d0 bb         .b...X..
  104c90:	 de e2 a0 bb 18 ba 68 bb         ......h.
  104c98:	 7c 7d 15 bb 8a f5 8f ba         |}......
  104ca0:	 00 00 00 00 43 88 84 3a         ....C..:
  104ca8:	 fd 78 fe 3a e0 f2 36 3b         .x.:..6;
  104cb0:	 e6 8c 69 3b 66 99 8b 3b         ..i;f..;
  104cb8:	 87 07 a0 3b 29 27 b2 3b         ...;)'.;
  104cc0:	 7c 0f c2 3b 7b d8 cf 3b         |..;{..;
  104cc8:	 ca 9a db 3b 93 6f e5 3b         ...;.o.;
  104cd0:	 6a 70 ed 3b 29 b7 f3 3b         jp.;)..;
  104cd8:	 d9 5d f8 3b 93 7e fb 3b         .].;.~.;
  104ce0:	 63 33 fd 3b 2a 96 fd 3b         c3.;*..;
  104ce8:	 8e c0 fc 3b d9 cb fa 3b         ...;...;
  104cf0:	 ec d0 f7 3b 18 e8 f3 3b         ...;...;
  104cf8:	 21 29 ef 3b 1d ab e9 3b         !).;...;
  104d00:	 67 84 e3 3b 8f ca dc 3b         g..;...;
  104d08:	 50 92 d5 3b 82 ef cd 3b         P..;...;
  104d10:	 0f f5 c5 3b ec b4 bd 3b         ...;...;
  104d18:	 13 40 b5 3b 7a a6 ac 3b         .@.;z..;
  104d20:	 18 f7 a3 3b d5 3f 9b 3b         ...;.?.;
  104d28:	 92 8d 92 3b 2c ec 89 3b         ...;,..;
  104d30:	 78 66 81 3b 91 0c 72 3b         xf.;..r;
  104d38:	 db a8 61 3b 81 b1 51 3b         ..a;..Q;
  104d40:	 58 34 42 3b 51 3d 33 3b         X4B;Q=3;
  104d48:	 97 d6 24 3b a8 08 17 3b         ..$;...;
  104d50:	 5b da 09 3b ea a1 fa 3a         [..;...:
  104d58:	 9c e0 e2 3a 98 75 cc 3a         ...:.u.:
  104d60:	 37 63 b7 3a 46 a9 a3 3a         7c.:F..:
  104d68:	 7c 45 91 3a 66 33 80 3a         |E.:f3.:
  104d70:	 ab d9 60 3a c2 d3 43 3a         ..`:..C:
  104d78:	 57 42 29 3a 0f 10 11 3a         WB):...:
  104d80:	 b6 4a f6 39 79 d1 ce 39         .J.9y..9
  104d88:	 56 7e ab 39 b5 18 8c 39         V~.9...9
  104d90:	 4b cc 60 39 be 55 30 39         K.`9.U09
  104d98:	 b4 54 06 39 4a 9f c4 38         


WOLASynthesisFilter_Float_M64_m4_r1:
  104da0:	 c6 52 a3 3c 7b 1b f6 3c         .R.<{..<
  104da8:	 18 98 22 3d c8 00 48 3d         .."=..H=
  104db0:	 a3 02 6b 3d d3 ad 85 3d         ..k=...=
  104db8:	 c7 66 94 3d 27 8f a1 3d         .f.='..=
  104dc0:	 55 0c ad 3d 64 c6 b6 3d         U..=d..=
  104dc8:	 57 a8 be 3d 4f a0 c4 3d         W..=O..=
  104dd0:	 d4 9f c8 3d 06 9c ca 3d         ...=...=
  104dd8:	 c0 8d ca 3d c4 71 c8 3d         ...=.q.=
  104de0:	 e8 48 c4 3d 21 18 be 3d         .H.=!..=
  104de8:	 a0 e8 b5 3d db c7 ab 3d         ...=...=
  104df0:	 98 c7 9f 3d e4 fd 91 3d         ...=...=
  104df8:	 10 85 82 3d 23 f7 62 3d         ...=#.b=
  104e00:	 eb 07 3e 3d 6f 89 16 3d         ..>=o..=
  104e08:	 60 a0 d9 3c a7 6f 82 3c         `..<.o.<
  104e10:	 2a 15 a1 3b 27 37 d0 bb         *..;'7..
  104e18:	 8d ad 91 bc 91 fb ec bc         ........
  104e20:	 58 8b 9c bd 86 34 df bd         X....4..
  104e28:	 18 d3 0f be d1 ab 2e be         ........
  104e30:	 07 e1 4b be cd 30 67 be         ..K..0g.
  104e38:	 9a 2d 80 be 74 91 8b be         .-..t...
  104e40:	 c2 a6 95 be 23 52 9e be         ....#R..
  104e48:	 43 7a a5 be 00 08 ab be         Cz......
  104e50:	 e0 e6 ae be 01 05 b1 be         ........
  104e58:	 95 53 b1 be d4 c6 af be         .S......
  104e60:	 6a 56 ac be 6c fd a6 be         jV..l...
  104e68:	 96 ba 9f be 76 90 96 be         ....v...
  104e70:	 6f 85 8b be ab 47 7d be         o....G}.
  104e78:	 20 f4 5f be 1a 35 3f be          ._..5?.
  104e80:	 86 37 1b be 12 61 e8 bd         .7...a..
  104e88:	 85 ba 94 bd d8 15 f0 bc         ........
  104e90:	 61 92 84 3c 2f 1b 82 3d         a..</..=
  104e98:	 6f 27 e6 3d 11 76 25 3e         o'.=.v%>
  104ea0:	 ca da 83 3e 42 28 ae 3e         ...>B(.>
  104ea8:	 78 ec d7 3e 20 68 00 3f         x..> h.?
  104eb0:	 8a 3d 14 3f b6 49 27 3f         .=.?.I'?
  104eb8:	 ba 5f 39 3f b3 52 4a 3f         ._9?.RJ?
  104ec0:	 2d f6 59 3f 45 1e 68 3f         -.Y?E.h?
  104ec8:	 08 a0 74 3f bd 51 7f 3f         ..t?.Q.?
  104ed0:	 8a 05 84 3f d2 52 87 3f         ...?.R.?
  104ed8:	 5f 7e 89 3f 25 77 8a 3f         _~.?%w.?
  104ee0:	 49 2d 8a 3f 47 92 88 3f         I-.?G..?
  104ee8:	 35 99 85 3f b5 36 81 3f         5..?.6.?
  104ef0:	 34 c2 76 3f 21 21 68 3f         4.v?!!h?
  104ef8:	 37 7e 56 3f 7a d1 41 3f         7~V?z.A?
  104f00:	 eb 16 2a 3f ba 4e 0f 3f         ..*?.N.?
  104f08:	 9e fa e2 3e bd 56 a1 3e         ...>.V.>
  104f10:	 d0 97 33 3e 4d cf c7 3c         ..3>M..<
  104f18:	 44 d5 0c be a6 29 9e be         D....)..
  104f20:	 59 54 09 bf 17 61 44 bf         YT...aD.
  104f28:	 0d c2 80 bf 89 41 a0 bf         .....A..
  104f30:	 0c 90 c0 bf 37 8d e1 bf         ....7...
  104f38:	 9c 8b 01 c0 90 85 12 c0         ........
  104f40:	 6e a2 23 c0 cc cf 34 c0         n.#...4.
  104f48:	 f0 fa 45 c0 d8 10 57 c0         ..E...W.
  104f50:	 72 fe 67 c0 92 b0 78 c0         r.g...x.
  104f58:	 18 8a 84 c0 31 8b 8c c0         ....1...
  104f60:	 48 52 94 c0 3d d6 9b c0         HR..=...
  104f68:	 2a 0e a3 c0 80 f1 a9 c0         *.......
  104f70:	 f5 77 b0 c0 a6 99 b6 c0         .w......
  104f78:	 22 4f bc c0 5e 91 c1 c0         "O..^...
  104f80:	 e4 59 c6 c0 b8 a2 ca c0         .Y......
  104f88:	 77 66 ce c0 5c a0 d1 c0         wf..\...
  104f90:	 40 4c d4 c0 a1 66 d6 c0         @L...f..
  104f98:	 b3 ec d7 c0 c1 e5 d8 c0         ........
  104fa0:	 48 0b d8 c0 60 77 d6 c0         H...`w..
  104fa8:	 4c 4f d4 c0 f0 95 d1 c0         LO......
  104fb0:	 d7 4e ce c0 3d 7e ca c0         .N..=~..
  104fb8:	 fc 28 c6 c0 7c 54 c1 c0         .(..|T..
  104fc0:	 cb 06 bc c0 6f 46 b6 c0         ....oF..
  104fc8:	 7a 1a b0 c0 70 8a a9 c0         z...p...
  104fd0:	 3a 9e a2 c0 27 5e 9b c0         :...'^..
  104fd8:	 db d2 93 c0 3a 05 8c c0         ....:...
  104fe0:	 6b fe 83 c0 86 8f 77 c0         k.....w.
  104fe8:	 73 d5 66 c0 a8 e1 55 c0         s.f...U.
  104ff0:	 4c c7 44 c0 7c 99 33 c0         L.D.|.3.
  104ff8:	 38 6b 22 c0 2f 4f 11 c0         8k"./O..
  105000:	 c5 57 00 c0 fd 2d df bf         .W...-..
  105008:	 86 3c be bf e3 fc 9d bf         .<......
  105010:	 9d 1e 7d bf 29 25 40 bf         ..}.)%@.
  105018:	 7a 47 05 bf 08 f4 98 be         zG......
  105020:	 26 c5 e7 bd 7b a3 43 3d         &...{.C=
  105028:	 bb 73 4a 3e 60 34 ac 3e         .sJ>`4.>
  105030:	 01 42 ed 3e cb 24 14 3f         .B.>.$.?
  105038:	 44 9d 2e 3f 73 06 46 3f         D..?s.F?
  105040:	 a4 60 5a 3f 39 b0 6b 3f         .`Z?9.k?
  105048:	 a4 fd 79 3f 9f aa 82 3f         ..y?...?
  105050:	 9b e3 86 3f 8d b3 89 3f         ...?...?
  105058:	 0f 26 8b 3f 45 48 8b 3f         .&.?EH.?
  105060:	 cc 28 8a 3f aa d7 87 3f         .(.?...?
  105068:	 23 66 84 3f 3b cd 7f 3f         #f.?;..?
  105070:	 fc d8 74 3f 07 18 68 3f         ..t?..h?
  105078:	 4d b4 59 3f f4 d8 49 3f         M.Y?..I?
  105080:	 fc b1 38 3f 06 6c 26 3f         ..8?.l&?
  105088:	 05 34 13 3f fd 6d fe 3e         .4.?.m.>
  105090:	 79 43 d5 3e 1f 41 ab 3e         yC.>.A.>
  105098:	 0e be 80 3e 80 60 2b 3e         ...>.`+>
  1050a0:	 2a 26 c7 3d c1 b0 45 3d         *&.=..E=
  1050a8:	 a8 86 5f 3a 4f e0 36 bd         .._:O.6.
  1050b0:	 10 0e b4 bd 48 c1 03 be         ....H...
  1050b8:	 86 a2 2a be 5f 6e 4e be         ..*._nN.
  1050c0:	 8d f0 6e be 6f fe 85 be         ..n.o...
  1050c8:	 a7 b7 92 be fb 95 9d be         ........
  1050d0:	 7e 8f a6 be 41 9e ad be         ~...A...
  1050d8:	 25 c0 b2 be d8 f6 b5 be         %.......
  1050e0:	 a6 47 b7 be 6a bb b6 be         .G..j...
  1050e8:	 3a 5e b4 be 5c 3f b0 be         :^..\?..
  1050f0:	 08 71 aa be 21 08 a3 be         .q..!...
  1050f8:	 18 1c 9a be a1 c6 8f be         ........
  105100:	 67 23 84 be cf 9f 6e be         g#....n.
  105108:	 38 d6 52 be 63 2a 35 be         8.R.c*5.
  105110:	 be de 15 be 33 6e ea bd         ....3n..
  105118:	 44 f0 a6 bd c0 f3 41 bd         D.....A.
  105120:	 e6 ea 85 bc 9c de 98 bb         ........
  105128:	 5f 1f e0 3b b9 f7 93 3c         _..;...<
  105130:	 6e c7 ec 3c 71 d9 20 3d         n..<q. =
  105138:	 b9 01 49 3d 7f 88 6e 3d         ..I=..n=
  105140:	 a3 90 88 3d c0 43 98 3d         ...=.C.=
  105148:	 69 3f a6 3d a9 69 b2 3d         i?.=.i.=
  105150:	 cb ac bc 3d 6b f7 c4 3d         ...=k..=
  105158:	 75 3c cb 3d 20 73 cf 3d         u<.= s.=
  105160:	 e6 96 d1 3d 5d a7 d1 3d         ...=]..=
  105168:	 2f a8 cf 3d f4 a0 cb 3d         /..=...=
  105170:	 fb 9c c5 3d 30 ab bd 3d         ...=0..=
  105178:	 d4 dd b3 3d 58 4a a8 3d         ...=XJ.=
  105180:	 15 09 9b 3d 0a 35 8c 3d         ...=.5.=
  105188:	 42 d7 77 3d b1 98 54 3d         B.w=..T=
  105190:	 1c f1 2e 3d 47 26 07 3d         ...=G&.=
  105198:	 13 01 bb 3c 94 d6 46 3c         


WOLAAnalysisFilter_Float_M128_m4_r1:
  1051a0:	 00 00 00 00 6a 43 79 b8         ....jCy.
  1051a8:	 2e b4 93 b8 1f be ac b8         ........
  1051b0:	 df d4 c7 b8 d9 0d e5 b8         ........
  1051b8:	 41 3f 02 b9 24 1e 13 b9         A?..$...
  1051c0:	 43 2e 25 b9 47 7a 38 b9         C.%.Gz8.
  1051c8:	 cc 0c 4d b9 40 f0 62 b9         ..M.@.b.
  1051d0:	 09 2f 7a b9 ad 69 89 b9         ./z..i..
  1051d8:	 9e 73 96 b9 48 3a a4 b9         .s..H:..
  1051e0:	 79 c2 b2 b9 e5 10 c2 b9         y.......
  1051e8:	 13 2a d2 b9 69 12 e3 b9         .*..i...
  1051f0:	 1c ce f4 b9 9f b0 03 ba         ........
  1051f8:	 cf 67 0d ba 6f 8e 17 ba         .g..o...
  105200:	 32 26 22 ba a9 30 2d ba         2&"..0-.
  105208:	 43 af 38 ba 50 a3 44 ba         C.8.P.D.
  105210:	 f7 0d 51 ba 34 f0 5d ba         ..Q.4.].
  105218:	 df 4a 6b ba a1 1e 79 ba         .Jk...y.
  105220:	 fa b5 83 ba 93 19 8b ba         ........
  105228:	 24 ba 92 ba 9b 97 9a ba         $.......
  105230:	 e0 b1 a2 ba 9c 08 ab ba         ........
  105238:	 70 9b b3 ba dc 69 bc ba         p....i..
  105240:	 3c 73 c5 ba d4 b6 ce ba         <s......
  105248:	 bc 33 d8 ba fa e8 e1 ba         .3......
  105250:	 51 d5 eb ba 8b f7 f5 ba         Q.......
  105258:	 13 27 00 bb cb 6b 05 bb         .'...k..
  105260:	 0b c9 0a bb e6 3d 10 bb         .....=..
  105268:	 4d c9 15 bb 29 6a 1b bb         M...)j..
  105270:	 4a 1f 21 bb 6d e7 26 bb         J.!.m.&.
  105278:	 32 c1 2c bb 30 ab 32 bb         2.,.0.2.
  105280:	 d8 a3 38 bb 92 a9 3e bb         ..8...>.
  105288:	 ab ba 44 bb 55 d5 4a bb         ..D.U.J.
  105290:	 b7 f7 50 bb d1 1f 57 bb         ..P...W.
  105298:	 97 4b 5d bb e5 78 63 bb         .K]..xc.
  1052a0:	 7a a5 69 bb 01 cf 6f bb         z.i...o.
  1052a8:	 14 f3 75 bb 2b 0f 7c bb         ..u.+.|.
  1052b0:	 56 10 81 bb 72 12 84 bb         V...r...
  1052b8:	 84 0c 87 bb 20 fd 89 bb         .... ...
  1052c0:	 c7 e2 8c bb f5 bb 8f bb         ........
  1052c8:	 16 87 92 bb 92 42 95 bb         .....B..
  1052d0:	 be ec 97 bb e7 83 9a bb         ........
  1052d8:	 54 06 9d bb 3d 72 9f bb         T...=r..
  1052e0:	 d0 c5 a1 bb 34 ff a3 bb         ....4...
  1052e8:	 88 1c a6 bb d9 1b a8 bb         ........
  1052f0:	 37 fb a9 bb a0 b8 ab bb         7.......
  1052f8:	 11 52 ad bb 79 c5 ae bb         .R..y...
  105300:	 c3 10 b0 bb d1 31 b1 bb         .....1..
  105308:	 81 26 b2 bb a7 ec b2 bb         .&......
  105310:	 16 82 b3 bb 9a e4 b3 bb         ........
  105318:	 f6 11 b4 bb eb 07 b4 bb         ........
  105320:	 3b c4 b3 bb 9d 44 b3 bb         ;....D..
  105328:	 cc 86 b2 bb 7d 88 b1 bb         ....}...
  105330:	 64 47 b0 bb 2f c1 ae bb         dG../...
  105338:	 98 f3 ac bb 4d dc aa bb         ....M...
  105340:	 03 79 a8 bb 6d c7 a5 bb         .y..m...
  105348:	 41 c5 a2 bb 3b 70 9f bb         A...;p..
  105350:	 15 c6 9b bb 93 c4 97 bb         ........
  105358:	 76 69 93 bb 8b b2 8e bb         vi......
  105360:	 a1 9d 89 bb 91 28 84 bb         .....(..
  105368:	 71 a2 7c bb fe 2a 70 bb         q.|..*p.
  105370:	 a6 e6 62 bb 5c d1 54 bb         ..b.\.T.
  105378:	 2f e7 45 bb 2e 24 36 bb         /.E..$6.
  105380:	 9b 84 25 bb bc 04 14 bb         ..%.....
  105388:	 fb a0 01 bb b4 ab dc ba         ........
  105390:	 f4 3f b4 ba 33 f8 89 ba         .?..3...
  105398:	 70 9c 3b ba f0 ef be b9         p.;.....
  1053a0:	 00 00 00 00 5d df c8 39         ....]..9
  1053a8:	 0c 48 4c 3a 9b 0d 9c 3a         .HL:...:
  1053b0:	 2b f9 d3 3a 6c f5 06 3b         +..:l..;
  1053b8:	 4c f3 24 3b f0 f7 43 3b         L.$;..C;
  1053c0:	 f8 04 64 3b e4 8d 82 3b         ..d;...;
  1053c8:	 ce 9e 93 3b c0 35 a5 3b         ...;.5.;
  1053d0:	 24 53 b7 3b 50 f7 c9 3b         $S.;P..;
  1053d8:	 79 22 dd 3b bf d4 f0 3b         y".;...;
  1053e0:	 14 87 02 3c 4d e7 0c 3c         ...<M..<
  1053e8:	 f1 8a 17 3c db 71 22 3c         ...<.q"<
  1053f0:	 da 9b 2d 3c 95 08 39 3c         ..-<..9<
  1053f8:	 d5 b7 44 3c 30 a9 50 3c         ..D<0.P<
  105400:	 2f dc 5c 3c 5b 50 69 3c         /.\<[Pi<
  105408:	 20 05 76 3c f3 7c 81 3c          .v<.|.<
  105410:	 06 17 88 3c 63 d0 8e 3c         ...<c..<
  105418:	 a4 a8 95 3c 68 9f 9c 3c         ...<h..<
  105420:	 2f b4 a3 3c 83 e6 aa 3c         /..<...<
  105428:	 dd 35 b2 3c b7 a1 b9 3c         .5.<...<
  105430:	 7b 29 c1 3c 92 cc c8 3c         {).<...<
  105438:	 51 8a d0 3c 1c 62 d8 3c         Q..<.b.<
  105440:	 37 53 e0 3c f6 5c e8 3c         7S.<.\.<
  105448:	 8d 7e f0 3c 3c b7 f8 3c         .~.<<..<
  105450:	 1d 83 00 3d 54 b5 04 3d         ...=T..=
  105458:	 d9 f1 08 3d 3d 38 0d 3d         ...==8.=
  105460:	 05 88 11 3d c0 e0 15 3d         ...=...=
  105468:	 f0 41 1a 3d 19 ab 1e 3d         .A.=...=
  105470:	 b9 1b 23 3d 4a 93 27 3d         ..#=J.'=
  105478:	 4b 11 2c 3d 2c 95 30 3d         K.,=,.0=
  105480:	 65 1e 35 3d 64 ac 39 3d         e.5=d.9=
  105488:	 9d 3e 3e 3d 76 d4 42 3d         .>>=v.B=
  105490:	 5d 6d 47 3d b7 08 4c 3d         ]mG=..L=
  105498:	 f0 a5 50 3d 63 44 55 3d         ..P=cDU=
  1054a0:	 79 e3 59 3d 8f 82 5e 3d         y.Y=..^=
  1054a8:	 05 21 63 3d 38 be 67 3d         .!c=8.g=
  1054b0:	 82 59 6c 3d 41 f2 70 3d         .Yl=A.p=
  1054b8:	 cc 87 75 3d 7c 19 7a 3d         ..u=|.z=
  1054c0:	 a9 a6 7e 3d 56 97 81 3d         ..~=V..=
  1054c8:	 6d d8 83 3d 43 16 86 3d         m..=C..=
  1054d0:	 85 50 88 3d df 86 8a 3d         .P.=...=
  1054d8:	 fa b8 8c 3d 81 e6 8e 3d         ...=...=
  1054e0:	 20 0f 91 3d 82 32 93 3d          ..=.2.=
  1054e8:	 53 50 95 3d 3f 68 97 3d         SP.=?h.=
  1054f0:	 f3 79 99 3d 1b 85 9b 3d         .y.=...=
  1054f8:	 66 89 9d 3d 82 86 9f 3d         f..=...=
  105500:	 1d 7c a1 3d e9 69 a3 3d         .|.=.i.=
  105508:	 94 4f a5 3d d4 2c a7 3d         .O.=.,.=
  105510:	 57 01 a9 3d d5 cc aa 3d         W..=...=
  105518:	 02 8f ac 3d 92 47 ae 3d         ...=.G.=
  105520:	 41 f6 af 3d c4 9a b1 3d         A..=...=
  105528:	 d7 34 b3 3d 36 c4 b4 3d         .4.=6..=
  105530:	 9f 48 b6 3d d2 c1 b7 3d         .H.=...=
  105538:	 8d 2f b9 3d 95 91 ba 3d         ./.=...=
  105540:	 ae e7 bb 3d 9e 31 bd 3d         ...=.1.=
  105548:	 2d 6f be 3d 26 a0 bf 3d         -o.=&..=
  105550:	 55 c4 c0 3d 87 db c1 3d         U..=...=
  105558:	 8e e5 c2 3d 3c e2 c3 3d         ...=<..=
  105560:	 66 d1 c4 3d e2 b2 c5 3d         f..=...=
  105568:	 8a 86 c6 3d 3a 4c c7 3d         ...=:L.=
  105570:	 d0 03 c8 3d                     ...=


bt_aac_dec_const_size:
  105574:    2c ad             	r4 = r2 <<< 0xd
  105576:    c8 3d             	r0 += 0x3d
  105578:    30 48             	if (r0 == 0) goto 0xd0 <bt_aac_dec_const_size+0xD6 : 10564a >
  10557a:    c9 3d             	r1 += 0x3d
  10557c:    c3 d4             	r11 = 0  #
  10557e:    c9 3d             		 r1 += 0x3d
  105580:    ca 52             	b[r4+-0xe] = r2
  105582:    ca 3d             	r2 += 0x3d
  105584:    32 c2              <unkown instruction>
  105586:    ca 3d             	r2 += 0x3d
  105588:    e6 22             	r6 += -0x7e
  10558a:    cb 3d             	r3 += 0x3d
  10558c:    d7 74             	[r5+-0x30] = r7
  10558e:    cb 3d             	r3 += 0x3d
  105590:    f4 b7             	r4 = r7 >> 0x17
  105592:    cb 3d             	r3 += 0x3d
  105594:    35 ec cb 3d       	if (r5 > 0xdcb) {
  105598:    8d 11             		b[r0++=r11] = r5
                               	} else {
  10559a:    cc 3d             		r4 += 0x3d
  10559c:    f8 27             		r0 += -0x19
  10559e:    cc 3d             		r4 += 0x3d
                               	}
  1055a0:    71 2f             	r1 = 0xcf
  1055a2:    cc 3d             	r4 += 0x3d
  1055a4:    f8 27             	r0 += -0x19
  1055a6:    cc 3d             	r4 += 0x3d
  1055a8:    8d 11             	b[r0++=r11] = r5
  1055aa:    cc 3d             	r4 += 0x3d
  1055ac:    35 ec cb 3d       	if (r5 > 0xdcb) {
  1055b0:    f4 b7             		r4 = r7 >> 0x17
                               	} else {
  1055b2:    cb 3d             		r3 += 0x3d
  1055b4:    d7 74             		[r5+-0x30] = r7
  1055b6:    cb 3d             		r3 += 0x3d
                               	}
  1055b8:    e6 22             	r6 += -0x7e
  1055ba:    cb 3d             	r3 += 0x3d
  1055bc:    32 c2              <unkown instruction>
  1055be:    ca 3d             	r2 += 0x3d
  1055c0:    ca 52             	b[r4+-0xe] = r2
  1055c2:    ca 3d             	r2 += 0x3d
  1055c4:    c3 d4             	r11 = 0  #
  1055c6:    c9 3d             		 r1 += 0x3d
  1055c8:    30 48             	if (r0 == 0) goto 0xd0 <bt_aac_dec_const_size+0x126 : 10569a >
  1055ca:    c9 3d             	r1 += 0x3d
  1055cc:    2c ad             	r4 = r2 <<< 0xd
  1055ce:    c8 3d             	r0 += 0x3d
  1055d0:    d0 03             	rep 0x1c r0 {
  1055d2:    c8 3d             		r0 += 0x3d
  1055d4:    3a 4c             		r2 = b[r3+0xc] (u)
  1055d6:    c7 3d             		r7 += 0x1d
  1055d8:    8a 86             		r2 = sp + 6
  1055da:    c6 3d             		r6 += 0x1d
  1055dc:    e2 b2             		r2 = r6 >> 0x12
  1055de:    c5 3d             		r5 += 0x1d
  1055e0:    66 d1              <unkown instruction>
  1055e2:    c4 3d             		r4 += 0x1d
  1055e4:    3c e2              <unkown instruction>
  1055e6:    c3 3d             		r3 += 0x1d
  1055e8:    8e e5 c2 3d       		r3 += r12.l * 0x7d (usat)
  1055ec:    87 db             		r7 *= r8  #
  1055ee:    c1 3d             			 r1 += 0x1d
  1055f0:    55 c4              <unkown instruction>
  1055f2:    c0 3d             		r0 += 0x1d
                               	}
  1055f4:    26 a0             	r6 = r2 << 0x20
  1055f6:    bf 3d             	r7 &= 0xdfffffff
  1055f8:    2d 6f             	r5 = h[r2+0x1e] (u)
  1055fa:    be 3d             	r6 &= 0xdfffffff
  1055fc:    9e 31              <unkown instruction>
  1055fe:    bd 3d             	r5 &= 0xdfffffff
  105600:    ae e7              <unkown instruction>
  105602:    bb 3d             	r3 &= 0xdfffffff
  105604:    95 91             	goto 0x662 <WOLASynthesisFilter_Float_M128_m4_r1+0x2C8 : 105c68 >
  105606:    ba 3d             	r2 &= 0xdfffffff
  105608:    8d 2f             	[sp+60] = r13
  10560a:    b9 3d             	r1 &= 0xdfffffff
  10560c:    d2 c1              <unkown instruction>
  10560e:    b7 3d              <unkown instruction>
  105610:    9f 48             	b[r1+0x8] = r7
  105612:    b6 3d              <unkown instruction>
  105614:    36 c4              <unkown instruction>
  105616:    b4 3d              <unkown instruction>
  105618:    d7 34             	r7 += 0x54
  10561a:    b3 3d              <unkown instruction>
  10561c:    c4 9a             	goto 0x334 <bt_aac_dec_const_size+0x3DE : 105952 >
  10561e:    b1 3d              <unkown instruction>
  105620:    41 f6              <unkown instruction>
  105622:    af 3d             	[sp+244] = r15
  105624:    92 47             	if (r2 != 0) goto 0x4e <bt_aac_dec_const_size+0x100 : 105674 >
  105626:    ae 3d             	[sp+244] = r14
  105628:    02 8f             	sp += 0x3c
  10562a:    ac 3d             	[sp+244] = r12
  10562c:    d5 cc              <unkown instruction>
  10562e:    aa 3d             	[sp+244] = r10
  105630:    57 01              <unkown instruction>
  105632:    a9 3d             	[sp+244] = r9
  105634:    d4 2c             	r4 += 0x4c
  105636:    a7 3d             	[sp+244] = r7
  105638:    94 4f             	if (r4 != 0) goto 0x5e <bt_aac_dec_const_size+0x124 : 105698 >
  10563a:    a5 3d             	[sp+244] = r5
  10563c:    e9 69             	h[r6+0x12] = r1
  10563e:    a3 3d             	[sp+244] = r3
  105640:    1d 7c             	r5 = h[r1+-0x8] (u)
  105642:    a1 3d             	[sp+244] = r1
  105644:    82 86             	sp += -0x1e8
  105646:    9f 3d              <unkown instruction>
  105648:    66 89             	goto -0x66e <WOLASynthesisFilter_Float_M64_m4_r1+0x23C : 104fdc >
  10564a:    9d 3d              <unkown instruction>
  10564c:    1b 85             	r3 = r1 + 0x5
  10564e:    9b 3d              <unkown instruction>
  105650:    f3 79             	[r7+-0x1c] = r3
  105652:    99 3d              <unkown instruction>
  105654:    3f 68             	r7 = h[r3+0x10] (u)
  105656:    97 3d              <unkown instruction>
  105658:    53 50             	if (r3 == 0) goto -0xa0 <bt_aac_dec_const_size+0x46 : 1055ba >
  10565a:    95 3d              <unkown instruction>
  10565c:    82 32             	[sp+72] = r2
  10565e:    93 3d              <unkown instruction>
  105660:    20 0f             	r0 = h[r2++=r14] (u)
  105662:    91 3d              <unkown instruction>
  105664:    81 e6              <unkown instruction>
  105666:    8e 3d             	[sp+116] = r14
  105668:    fa b8             	r2 = r7 >>> 0x18
  10566a:    8c 3d             	[sp+116] = r12
  10566c:    df 86              <unkown instruction>
  10566e:    8a 3d             	[sp+116] = r10
  105670:    85 50             	if (r5 != 0) goto 0x20 <bt_aac_dec_const_size+0x11E : 105692 >
  105672:    88 3d             	[sp+116] = r8
  105674:    43 16             	r3 = r4
  105676:    86 3d             	[sp+116] = r6
  105678:    6d d8             	r13 += r6  #
  10567a:    83 3d             		 [sp+116] = r3
  10567c:    56 97             	goto -0x692 <WOLASynthesisFilter_Float_M64_m4_r1+0x24C : 104fec >
  10567e:    81 3d             	[sp+116] = r1
  105680:    a9 a6             	r1 = r2 >>> 0x6
  105682:    7e 3d             	r6 = 0xfd
  105684:    7c 19             	r4 ^= r7
  105686:    7a 3d             	r2 = 0xfd
  105688:    cc 87             	r4 = sp + 71
  10568a:    75 3d             	r5 = 0xdd
  10568c:    41 f2              <unkown instruction>
  10568e:    70 3d             	r0 = 0xdd
  105690:    82 59             	if (r2 != 0) goto 0x32 <bt_aac_dec_const_size+0x150 : 1056c4 >
  105692:    6c 3d             	r4 = 0xbd
  105694:    38 be             	r0 = r3 <<< 0x1e
  105696:    67 3d             	r7 = 0x9d
  105698:    05 21             	r5 = [sp+4]
  10569a:    63 3d             	r3 = 0x9d
  10569c:    8f 82             	r7 = sp + 2
  10569e:    5e 3d             	r6 = 0x7d
  1056a0:    79 e3              <unkown instruction>
  1056a2:    59 3d             	r1 = 0x7d
  1056a4:    63 44             	if (r3 == 0) goto -0x78 <bt_aac_dec_const_size+0xBA : 10562e >
  1056a6:    55 3d             	r5 = 0x5d
  1056a8:    f0 a5             	r0 = r7 >> 0x5
  1056aa:    50 3d             	r0 = 0x5d
  1056ac:    b7 08             	r7 = [r3++=r9] 
  1056ae:    4c 3d             	r4 = 0x3d
  1056b0:    5d 6d             	r5 = h[r5+0x1a] (u)
  1056b2:    47 3d             	r7 = 0x1d
  1056b4:    76 d4              <unkown instruction>
  1056b6:    42 3d             	r2 = 0x1d
  1056b8:    9d 3e              <unkown instruction>
  1056ba:    3e 3d             	r6 ^= 0x20000000
  1056bc:    64 ac             	r4 = r6 << 0xc
  1056be:    39 3d             	r1 ^= 0x20000000
  1056c0:    65 1e             	r5 = r6 - r0
  1056c2:    35 3d             	r5 |= 0x20000000
  1056c4:    2c 95             	r4 = r2 + 0x15
  1056c6:    30 3d             	r0 |= 0x20000000
  1056c8:    4b 11             	b[r4++=r10] = r3
  1056ca:    2c 3d             	r12 = [sp+244]
  1056cc:    4a 93             	r2 = r4 + 0x13
  1056ce:    27 3d             	r7 = [sp+244]
  1056d0:    b9 1b             	r9 *= r11
  1056d2:    23 3d             	r3 = [sp+244]
  1056d4:    19 ab             	r1 = r1 <<< 0xb
  1056d6:    1e 3d              <unkown instruction>
  1056d8:    f0 41             	if (r0 != 0) goto -0x3e <bt_aac_dec_const_size+0x128 : 10569c >
  1056da:    1a 3d              <unkown instruction>
  1056dc:    c0 e0              <unkown instruction>
  1056de:    15 3d             	r5 = -0x3
  1056e0:    05 88             	goto 0x410 <WOLASynthesisFilter_Float_M128_m4_r1+0x152 : 105af2 >
  1056e2:    11 3d             	r1 = -0x3
  1056e4:    3d 38             	r5 ^= 0x1000000
  1056e6:    0d 3d             	r13 = [sp+116]
  1056e8:    d9 f1              <unkown instruction>
  1056ea:    08 3d             	r8 = [sp+116]
  1056ec:    54 b5             	r4 = r5 << 0x15
  1056ee:    04 3d             	r4 = [sp+116]
  1056f0:    1d 83             	r5 = r1 + 0x3
  1056f2:    00 3d             	r0 = [sp+116]
  1056f4:    3c b7             	r4 = r3 <<< 0x17
  1056f6:    f8 3c             	r0 += -0x4
  1056f8:    8d 7e             	h[r0+-0x4] = r5
  1056fa:    f0 3c             	r0 += -0x24
  1056fc:    f6 5c             	if (r6 != 0) goto -0x8 <bt_aac_dec_const_size+0x182 : 1056f6 >
  1056fe:    e8 3c             	r0 += -0x44
  105700:    37 53             	if (r7 == 0) goto 0xe6 <bt_aac_dec_const_size+0x274 : 1057e8 >
  105702:    e0 3c             	r0 += -0x64
  105704:    1c 62             	r4 = h[r1+0x4] (u)
  105706:    d8 3c             	r0 += 0x7c
  105708:    51 8a             	call -0xac <bt_aac_dec_const_size+0xEA : 10565e >
  10570a:    d0 3c             	r0 += 0x5c
  10570c:    92 cc              <unkown instruction>
  10570e:    c8 3c             	r0 += 0x3c
  105710:    7b 29             	r3 = 0xe9
  105712:    c1 3c             	r1 += 0x1c
  105714:    b7 a1             	r7 = r3 >> 0x1
  105716:    b9 3c             	r1 &= 0xefffffff
  105718:    dd 35             	r5 += 0x75
  10571a:    b2 3c              <unkown instruction>
  10571c:    83 e6              <unkown instruction>
  10571e:    aa 3c             	[sp+240] = r10
  105720:    2f b4             	r7 = r2 <<< 0x14
  105722:    a3 3c             	[sp+240] = r3
  105724:    68 9f             	r0 = r6 + 0x1f
  105726:    9c 3c              <unkown instruction>
  105728:    a4 a8             	r4 = r2 >> 0x8
  10572a:    95 3c              <unkown instruction>
  10572c:    63 d0              <unkown instruction>
  10572e:    8e 3c             	[sp+112] = r14
  105730:    06 17             	r6 = r0.b0 (u)
  105732:    88 3c             	[sp+112] = r8
  105734:    f3 7c             	[r7+-0x10] = r3
  105736:    81 3c             	[sp+112] = r1
  105738:    20 05             	r0 = [r2++=0x4] 
  10573a:    76 3c             	r6 = 0xdc
  10573c:    5b 50             	r3 = b[r5+-0x10] (u)
  10573e:    69 3c             	r1 = 0xbc
  105740:    2f dc             	r7 = r2 + r1  #
  105742:    5c 3c             		 r4 = 0x7c
  105744:    30 a9             	r0 = r3 << 0x9
  105746:    50 3c             	r0 = 0x5c
  105748:    d5 b7             	r5 = r5 >> 0x17
  10574a:    44 3c             	r4 = 0x1c
  10574c:    95 08             	r5 = [r1++=r9] 
  10574e:    39 3c             	r1 ^= 0x10000000
  105750:    da 9b              <unkown instruction>
  105752:    2d 3c             	r13 = [sp+240]
  105754:    db 71             	h[r5+-0x1e] = r3
  105756:    22 3c             	r2 = [sp+240]
  105758:    f1 8a              <unkown instruction>
  10575a:    17 3c             	r7 = -0x4
  10575c:    4d e7              <unkown instruction>
  10575e:    0c 3c             	r12 = [sp+112]
  105760:    14 87             	goto 0x4e <bt_aac_dec_const_size+0x23C : 1057b0 >
  105762:    02 3c             	r2 = [sp+112]
  105764:    bf d4              <unkown instruction>
  105766:    f0 3b             	r0 += -0x25
  105768:    79 22             	r1 = 0xe2
  10576a:    dd 3b             	r5 += 0x7b
  10576c:    50 f7              <unkown instruction>
  10576e:    c9 3b             	r1 += 0x3b
  105770:    24 53             	if (r4 == 0) goto 0xa6 <bt_aac_dec_const_size+0x2A4 : 105818 >
  105772:    b7 3b              <unkown instruction>
  105774:    c0 35             	r0 += 0x15
  105776:    a5 3b             	[sp+236] = r5
  105778:    ce 9e             	r6 = sp + 94
  10577a:    93 3b              <unkown instruction>
  10577c:    e4 8d             	goto 0x39a <WOLASynthesisFilter_Float_M128_m4_r1+0x178 : 105b18 >
  10577e:    82 3b             	[sp+108] = r2
  105780:    f8 04             	[--sp] = {psr, sr4, rets}
  105782:    64 3b             	r4 = 0x9b
  105784:    f0 f7              <unkown instruction>
  105786:    43 3b             	r3 = 0x1b
  105788:    4c f3              <unkown instruction>
  10578a:    24 3b             	r4 = [sp+236]
  10578c:    6c f5              <unkown instruction>
  10578e:    06 3b             	r6 = [sp+108]
  105790:    2b f9 d3 3a       	if (r11 >= 0x11d) goto 0x1a6 <bt_aac_dec_const_size+0x3C6 : 10593a >
  105794:    9b 0d             	h[r1++=r11] = r3
  105796:    9c 3a              <unkown instruction>
  105798:    0c 48             	r4 = b[r0+0x8] (u)
  10579a:    4c 3a             	r4 = 0x3a
  10579c:    5d df             	r5 = r5 - r5  #
  10579e:    c8 39             		 r0 += 0x39
  1057a0:    00 00             	nop
  1057a2:    00 00             	nop
  1057a4:    f0 ef be b9       	[r11+-0x40] &= 0xFFE83FFF
  1057a8:    70 9c             	rep 0x10 0x1d {
  1057aa:    3b ba             		r3 = r3 <<< 0x1a
  1057ac:    33 f8 89 ba       		if (r3 == 0x1dd) goto 0x112 <bt_aac_dec_const_size+0x34E : 1058c2 >
  1057b0:    f4 3f             		r4 += -0x21
  1057b2:    b4 ba             		r4 = r3 >> 0x1a
  1057b4:    b4 ab             		r4 = r3 >> 0xb
  1057b6:    dc ba             		r4 = r5 >>> 0x1a
  1057b8:    fb a0             		r3 = r7 >>> 0x20
                               	}
  1057ba:    01 bb             	r1 = r0 << 0x1b
  1057bc:    bc 04             	{psr, sr4, rets, retx} = [sp++]
  1057be:    14 bb             	r4 = r1 << 0x1b
  1057c0:    9b 84              <unkown instruction>
  1057c2:    25 bb             	r5 = r2 << 0x1b
  1057c4:    2e 24             	r14 = [sp+144]
  1057c6:    36 bb             	r6 = r3 << 0x1b
  1057c8:    2f e7              <unkown instruction>
  1057ca:    45 bb             	r5 = r4 << 0x1b
  1057cc:    5c d1              <unkown instruction>
  1057ce:    54 bb             	r4 = r5 << 0x1b
  1057d0:    a6 e6              <unkown instruction>
  1057d2:    62 bb             	r2 = r6 << 0x1b
  1057d4:    fe 2a             	r6 += -0x16
  1057d6:    70 bb             	r0 = r7 << 0x1b
  1057d8:    71 a2             	r1 = r7 << 0x2
  1057da:    7c bb             	r4 = r7 <<< 0x1b
  1057dc:    91 28              <unkown instruction>
  1057de:    84 bb             	r4 = r0 >> 0x1b
  1057e0:    a1 9d              <unkown instruction>
  1057e2:    89 bb             	r1 = r0 >>> 0x1b
  1057e4:    8b b2             	r3 = r0 >>> 0x12
  1057e6:    8e bb             	r6 = r0 >>> 0x1b
  1057e8:    76 69             	r6 = [r7+0x24] 
  1057ea:    93 bb             	r3 = r1 >> 0x1b
  1057ec:    93 c4              <unkown instruction>
  1057ee:    97 bb             	r7 = r1 >> 0x1b
  1057f0:    15 c6              <unkown instruction>
  1057f2:    9b bb             	r3 = r1 >>> 0x1b
  1057f4:    3b 70             	r3 = h[r3+-0x20] (u)
  1057f6:    9f bb             	r7 = r1 >>> 0x1b
  1057f8:    41 c5              <unkown instruction>
  1057fa:    a2 bb             	r2 = r2 >> 0x1b
  1057fc:    6d c7              <unkown instruction>
  1057fe:    a5 bb             	r5 = r2 >> 0x1b
  105800:    03 79             	r3 = [r0+-0x1c] 
  105802:    a8 bb             	r0 = r2 >>> 0x1b
  105804:    4d dc             	r5 = r4 + r1  #
  105806:    aa bb             		 r2 = r2 >>> 0x1b
  105808:    98 f3              <unkown instruction>
  10580a:    ac bb             	r4 = r2 >>> 0x1b
  10580c:    2f c1              <unkown instruction>
  10580e:    ae bb             	r6 = r2 >>> 0x1b
  105810:    64 47             	if (r4 == 0) goto -0x72 <bt_aac_dec_const_size+0x22C : 1057a0 >
  105812:    b0 bb             	r0 = r3 >> 0x1b
  105814:    7d 88             	r5 = r7 + 0x8
  105816:    b1 bb             	r1 = r3 >> 0x1b
  105818:    cc 86             	r4 = sp + 70
  10581a:    b2 bb             	r2 = r3 >> 0x1b
  10581c:    9d 44             	b[r1+0x4] = r5
  10581e:    b3 bb             	r3 = r3 >> 0x1b
  105820:    3b c4              <unkown instruction>
  105822:    b3 bb             	r3 = r3 >> 0x1b
  105824:    eb 07             	b[r6++=-0x1] = r3
  105826:    b4 bb             	r4 = r3 >> 0x1b
  105828:    f6 11             	r6 = b[r7++=r11] (u)
  10582a:    b4 bb             	r4 = r3 >> 0x1b
  10582c:    9a e4              <unkown instruction>
  10582e:    b3 bb             	r3 = r3 >> 0x1b
  105830:    16 82             	goto -0x7bc <WOLASynthesisFilter_Float_M64_m4_r1+0x2D6 : 105076 >
  105832:    b3 bb             	r3 = r3 >> 0x1b
  105834:    a7 ec b2 bb       	if (r7 <= 0x16400) {
  105838:    81 26             		[sp+24] = r1
  10583a:    b2 bb             		r2 = r3 >> 0x1b
  10583c:    d1 31             		r1 += 0x51
                               	} else {
  10583e:    b1 bb             		r1 = r3 >> 0x1b
  105840:    c3 10             		r3 = b[r4++=r9] (u)
  105842:    b0 bb             		r0 = r3 >> 0x1b
                               	}
  105844:    79 c5              <unkown instruction>
  105846:    ae bb             	r6 = r2 >>> 0x1b
  105848:    11 52             	if (r1 == 0) goto 0x64 <bt_aac_dec_const_size+0x33A : 1058ae >
  10584a:    ad bb             	r5 = r2 >>> 0x1b
  10584c:    a0 b8             	r0 = r2 >> 0x18
  10584e:    ab bb             	r3 = r2 >>> 0x1b
  105850:    37 fb a9 bb       	if ((r7 & r3) != 0) goto -0x88ae <RAM_LIMIT_H+0xD0FA6 : fcfa6 >
  105854:    d9 1b             	r9 *= r13
  105856:    a8 bb             	r0 = r2 >>> 0x1b
  105858:    88 1c             	r0 = r0 + r3
  10585a:    a6 bb             	r6 = r2 >> 0x1b
  10585c:    34 ff              <unkown instruction>
  10585e:    a3 bb             	r3 = r2 >> 0x1b
  105860:    d0 c5              <unkown instruction>
  105862:    a1 bb             	r1 = r2 >> 0x1b
  105864:    3d 72             	r5 = h[r3+-0x1c] (u)
  105866:    9f bb             	r7 = r1 >>> 0x1b
  105868:    54 06             	r4 = h[r5++=0x2] (u)
  10586a:    9d bb             	r5 = r1 >>> 0x1b
  10586c:    e7 83             	goto -0x7a <bt_aac_dec_const_size+0x280 : 1057f4 >
  10586e:    9a bb             	r2 = r1 >>> 0x1b
  105870:    be ec 97 bb       	if (r14 <= 0xb97) {
  105874:    92 42             		if (r2 != 0) goto 0x44 <bt_aac_dec_const_size+0x346 : 1058ba >
  105876:    95 bb             		r5 = r1 >> 0x1b
  105878:    16 87             		goto -0x7b2
                               	} else { <WOLASynthesisFilter_Float_M64_m4_r1+0x328 : 1050c8 >
  10587a:    92 bb             		r2 = r1 >> 0x1b
  10587c:    f5 bb             		r5 = r7 >> 0x1b
  10587e:    8f bb             		r7 = r0 >>> 0x1b
                               	}
  105880:    c7 e2              <unkown instruction>
  105882:    8c bb             	r4 = r0 >>> 0x1b
  105884:    20 fd 89 bb       	ifs (r0 >= 0x15d) goto -0xee <bt_aac_dec_const_size+0x226 : 10579a >
  105888:    84 0c             	r4 = h[r0++=r9] (u)
  10588a:    87 bb             	r7 = r0 >> 0x1b
  10588c:    72 12             	r2 = b[r7++=r12] (u)
  10588e:    84 bb             	r4 = r0 >> 0x1b
  105890:    56 10             	r6 = b[r5++=r8] (u)
  105892:    81 bb             	r1 = r0 >> 0x1b
  105894:    2b 0f             	h[r2++=r14] = r3
  105896:    7c bb             	r4 = r7 <<< 0x1b
  105898:    14 f3              <unkown instruction>
  10589a:    75 bb             	r5 = r7 << 0x1b
  10589c:    01 cf              <unkown instruction>
  10589e:    6f bb             	r7 = r6 <<< 0x1b
  1058a0:    7a a5             	r2 = r7 <<< 0x5
  1058a2:    69 bb             	r1 = r6 <<< 0x1b
  1058a4:    e5 78             	[r6+-0x20] = r5
  1058a6:    63 bb             	r3 = r6 << 0x1b
  1058a8:    97 4b             	if (r7 != 0) goto 0x56 <bt_aac_dec_const_size+0x38C : 105900 >
  1058aa:    5d bb             	r5 = r5 <<< 0x1b
  1058ac:    d1 1f             	r1 = r5 - r6
  1058ae:    57 bb             	r7 = r5 << 0x1b
  1058b0:    b7 f7              <unkown instruction>
  1058b2:    50 bb             	r0 = r5 << 0x1b
  1058b4:    55 d5              <unkown instruction>
  1058b6:    4a bb             	r2 = r4 <<< 0x1b
  1058b8:    ab ba             	r3 = r2 >>> 0x1a
  1058ba:    44 bb             	r4 = r4 << 0x1b
  1058bc:    92 a9             	r2 = r1 >> 0x9
  1058be:    3e bb             	r6 = r3 <<< 0x1b
  1058c0:    d8 a3             	r0 = r5 >>> 0x3
  1058c2:    38 bb             	r0 = r3 <<< 0x1b
  1058c4:    30 ab             	r0 = r3 << 0xb
  1058c6:    32 bb             	r2 = r3 << 0x1b
  1058c8:    32 c1              <unkown instruction>
  1058ca:    2c bb             	r4 = r2 <<< 0x1b
  1058cc:    6d e7              <unkown instruction>
  1058ce:    26 bb             	r6 = r2 << 0x1b
  1058d0:    4a 1f             	r2 = r4 - r5
  1058d2:    21 bb             	r1 = r2 << 0x1b
  1058d4:    29 6a             	r1 = h[r2+0x14] (u)
  1058d6:    1b bb             	r3 = r1 <<< 0x1b
  1058d8:    4d c9              <unkown instruction>
  1058da:    15 bb             	r5 = r1 << 0x1b
  1058dc:    e6 3d             	r6 += -0x63
  1058de:    10 bb             	r0 = r1 << 0x1b
  1058e0:    0b c9              <unkown instruction>
  1058e2:    0a bb             	r2 = r0 <<< 0x1b
  1058e4:    cb 6b             	h[r4+0x16] = r3
  1058e6:    05 bb             	r5 = r0 << 0x1b
  1058e8:    13 27             	r3 = -0x19
  1058ea:    00 bb             	r0 = r0 << 0x1b
  1058ec:    8b f7              <unkown instruction>
  1058ee:    f5 ba             	r5 = r7 >> 0x1a
  1058f0:    51 d5              <unkown instruction>
  1058f2:    eb ba             	r3 = r6 >>> 0x1a
  1058f4:    fa e8 e1 ba       	r11 = sp + 2785
  1058f8:    bc 33             	r4 &= 0xfff7ffff
  1058fa:    d8 ba             	r0 = r5 >>> 0x1a
  1058fc:    d4 b6             	r4 = r5 >> 0x16
  1058fe:    ce ba             	r6 = r4 >>> 0x1a
  105900:    3c 73             	r4 = h[r3+-0x1a] (u)
  105902:    c5 ba             	r5 = r4 >> 0x1a
  105904:    dc 69             	h[r5+0x12] = r4
  105906:    bc ba             	r4 = r3 >>> 0x1a
  105908:    70 9b             	rep 0x10 0x1c {
  10590a:    b3 ba             		r3 = r3 >> 0x1a
  10590c:    9c 08             		[r1++=r9] = r4
  10590e:    ab ba             		r3 = r2 >>> 0x1a
  105910:    e0 b1             		r0 = r6 >> 0x11
  105912:    a2 ba             		r2 = r2 >> 0x1a
  105914:    9b 97              <unkown instruction>
  105916:    9a ba             		r2 = r1 >>> 0x1a
  105918:    24 ba             		r4 = r2 << 0x1a
  10591a:    92 ba             		r2 = r1 >> 0x1a
                               	}
  10591c:    93 19             	r3 &= r1
  10591e:    8b ba             	r3 = r0 >>> 0x1a
  105920:    fa b5             	r2 = r7 >>> 0x15
  105922:    83 ba             	r3 = r0 >> 0x1a
  105924:    a1 1e             	r1 = r2 - r2
  105926:    79 ba             	r1 = r7 <<< 0x1a
  105928:    df 4a             	b[r5+0xa] = r7
  10592a:    6b ba             	r3 = r6 <<< 0x1a
  10592c:    34 f0              <unkown instruction>
  10592e:    5d ba             	r5 = r5 <<< 0x1a
  105930:    f7 0d             	r7 = h[r7++=r11] (u)
  105932:    51 ba             	r1 = r5 << 0x1a
  105934:    50 a3             	r0 = r5 << 0x3
  105936:    44 ba             	r4 = r4 << 0x1a
  105938:    43 af             	r3 = r4 << 0xf
  10593a:    38 ba             	r0 = r3 <<< 0x1a
  10593c:    a9 30             	[sp+192] = r9
  10593e:    2d ba             	r5 = r2 <<< 0x1a
  105940:    32 26             	r2 |= 0x40
  105942:    22 ba             	r2 = r2 << 0x1a
  105944:    6f 8e             	r7 = r6 + 0xe
  105946:    17 ba             	r7 = r1 << 0x1a
  105948:    cf 67             	h[r4+0xe] = r7
  10594a:    0d ba             	r5 = r0 <<< 0x1a
  10594c:    9f b0             	r7 = r1 >>> 0x10
  10594e:    03 ba             	r3 = r0 << 0x1a
  105950:    1c ce              <unkown instruction>
  105952:    f4 b9             	r4 = r7 >> 0x19
  105954:    69 12             	b[r6++=r12] = r1
  105956:    e3 b9             	r3 = r6 >> 0x19
  105958:    13 2a             	r3 = -0x16
  10595a:    d2 b9             	r2 = r5 >> 0x19
  10595c:    e5 10             	r5 = b[r6++=r9] (u)
  10595e:    c2 b9             	r2 = r4 >> 0x19
  105960:    79 c2              <unkown instruction>
  105962:    b2 b9             	r2 = r3 >> 0x19
  105964:    48 3a             	r0 = 0x3a
  105966:    a4 b9             	r4 = r2 >> 0x19
  105968:    9e 73             	h[r1+-0x1a] = r6
  10596a:    96 b9             	r6 = r1 >> 0x19
  10596c:    ad 69             	h[r2+0x12] = r5
  10596e:    89 b9             	r1 = r0 >>> 0x19
  105970:    09 2f             	r9 = [sp+60]
  105972:    7a b9             	r2 = r7 <<< 0x19
  105974:    40 f0 62 b9       	r0 = -0x469e  #
  105978:    cc 0c             		 h[r4++=r9] = r4
  10597a:    4d b9             	r5 = r4 <<< 0x19
  10597c:    47 7a             	r7 = [r4+-0x18] 
  10597e:    38 b9             	r0 = r3 <<< 0x19
  105980:    43 2e             	r3 = 0xe
  105982:    25 b9             	r5 = r2 << 0x19
  105984:    24 1e             	r4 = r2 - r0
  105986:    13 b9             	r3 = r1 << 0x19
  105988:    41 3f             	r1 = 0x1f
  10598a:    02 b9             	r2 = r0 << 0x19
  10598c:    d9 0d             	h[r5++=r11] = r1
  10598e:    e5 b8             	r5 = r6 >> 0x18
  105990:    df d4              <unkown instruction>
  105992:    c7 b8             	r7 = r4 >> 0x18
  105994:    1f be             	r7 = r1 <<< 0x1e
  105996:    ac b8             	r4 = r2 >>> 0x18
  105998:    2e b4             	r6 = r2 <<< 0x14
  10599a:    93 b8             	r3 = r1 >> 0x18
  10599c:    6a 43             	r2 = b[r6+0x3] (u)
  10599e:    79 b8             	r1 = r7 <<< 0x18


WOLASynthesisFilter_Float_M128_m4_r1:
  1059a0:	 41 cc b0 bc 67 8d ee bc         A...g...
  1059a8:	 05 98 15 bd c6 4c 33 bd         .....L3.
  1059b0:	 c1 57 50 bd f5 ab 6c bd         .WP...l.
  1059b8:	 4a 1e 84 bd 84 7e 91 bd         J....~..
  1059c0:	 7a 70 9e bd 28 ee aa bd         zp..(...
  1059c8:	 a8 f1 b6 bd 4b 75 c2 bd         ....Ku..
  1059d0:	 86 73 cd bd f7 e6 d7 bd         .s......
  1059d8:	 8b ca e1 bd 39 19 eb bd         ....9...
  1059e0:	 64 ce f3 bd 89 e5 fb bd         d.......
  1059e8:	 3c ad 01 be 9a 14 05 be         <.......
  1059f0:	 0f 27 08 be e1 e2 0a be         .'......
  1059f8:	 83 46 0d be 8c 50 0f be         .F...P..
  105a00:	 b2 ff 10 be f6 52 12 be         .....R..
  105a08:	 61 49 13 be 21 e2 13 be         aI..!...
  105a10:	 b1 1c 14 be 9f f8 13 be         ........
  105a18:	 b5 75 13 be e5 93 12 be         .u......
  105a20:	 44 53 11 be 30 b4 0f be         DS..0...
  105a28:	 1b b7 0d be c7 5c 0b be         .....\..
  105a30:	 0b a6 08 be f3 93 05 be         ........
  105a38:	 c9 27 02 be 17 c6 fc bd         .'......
  105a40:	 98 8e f4 bd dc ac eb bd         ........
  105a48:	 ee 24 e2 bd 41 fb d7 bd         .$..A...
  105a50:	 a9 34 cd bd 40 d6 c1 bd         .4..@...
  105a58:	 b1 e5 b5 bd dd 68 a9 bd         .....h..
  105a60:	 15 66 9c bd f5 e3 8e bd         .f......
  105a68:	 7e e9 80 bd 00 fc 64 bd         ~.....d.
  105a70:	 47 52 47 bd c8 e5 28 bd         GRG...(.
  105a78:	 11 c7 09 bd a0 0e d4 bc         ........
  105a80:	 85 70 93 bc dd b0 23 bc         .p....#.
  105a88:	 bc c0 f6 ba eb b7 ce 3b         .......;
  105a90:	 0a 9c 6e 3c 90 4b bb 3c         ..n<.K.<
  105a98:	 43 7d ff 3c 00 bf 1f 3d         C}.<...=
  105aa0:	 7f a3 ad 3d 74 02 df 3d         ...=t..=
  105aa8:	 b5 e5 07 3e d0 f2 1f 3e         ...>...>
  105ab0:	 41 9c 37 3e ae d5 4e 3e         A.7>..N>
  105ab8:	 e7 92 65 3e c2 c7 7b 3e         ..e>..{>
  105ac0:	 14 b4 88 3e 1b 34 93 3e         ...>.4.>
  105ac8:	 15 5e 9d 3e 30 2c a7 3e         .^.>0,.>
  105ad0:	 c0 98 b0 3e 2d 9e b9 3e         ...>-..>
  105ad8:	 fe 36 c2 3e e1 5d ca 3e         .6.>.].>
  105ae0:	 ad 0d d2 3e 53 41 d9 3e         ...>SA.>
  105ae8:	 fe f3 df 3e ff 20 e6 3e         ...>. .>
  105af0:	 e1 c3 eb 3e 52 d8 f0 3e         ...>R..>
  105af8:	 47 5a f5 3e e6 45 f9 3e         GZ.>.E.>
  105b00:	 92 97 fc 3e ef 4b ff 3e         ...>.K.>
  105b08:	 f0 af 00 3f 45 68 01 3f         ...?Eh.?
  105b10:	 ab cd 01 3f fc de 01 3f         ...?...?
  105b18:	 35 9b 01 3f 7c 01 01 3f         5..?|..?
  105b20:	 1d 11 00 3f 0f 93 fd 3e         ...?...>
  105b28:	 b5 54 fa 3e b0 66 f6 3e         .T.>.f.>
  105b30:	 e7 c8 f1 3e 86 7b ec 3e         ...>.{.>
  105b38:	 1b 7f e6 3e 8d d4 df 3e         ...>...>
  105b40:	 15 7d d8 3e 51 7a d0 3e         .}.>Qz.>
  105b48:	 2e ce c7 3e fe 7a be 3e         ...>.z.>
  105b50:	 6d 83 b4 3e 83 ea a9 3e         m..>...>
  105b58:	 9d b3 9e 3e 80 e2 92 3e         ...>...>
  105b60:	 4e 7b 86 3e fc 04 73 3e         N{.>..s>
  105b68:	 d0 f9 57 3e 82 df 3b 3e         ..W>..;>
  105b70:	 27 c1 1e 3e 8d aa 00 3e         '..>...>
  105b78:	 8d 50 c3 3d ed 8e 83 3d         .P.=...=
  105b80:	 1c 58 04 3d fd f3 ba b9         .X.=....
  105b88:	 60 0f 0a bd 6d 9a 8a bd         `...m...
  105b90:	 38 52 d1 bd 71 86 0c be         8R..q...
  105b98:	 79 d3 30 be 44 40 54 be         y.0.D@T.
  105ba0:	 6e 4c 93 be f1 d6 b1 be         nL......
  105ba8:	 ec 51 d0 be 41 ae ee be         .Q..A...
  105bb0:	 54 6e 06 bf d8 66 15 bf         Tn...f..
  105bb8:	 d7 38 24 bf 78 dc 32 bf         .8$.x.2.
  105bc0:	 ca 49 41 bf d8 78 4f bf         .IA..xO.
  105bc8:	 99 61 5d bf 1e fc 6a bf         .a]...j.
  105bd0:	 42 40 78 bf 10 93 82 bf         B@x.....
  105bd8:	 cc d2 88 bf 6a db 8e bf         ....j...
  105be0:	 e3 a8 94 bf 50 37 9a bf         ....P7..
  105be8:	 cb 82 9f bf 77 87 a4 bf         ....w...
  105bf0:	 7d 41 a9 bf 21 ad ad bf         }A..!...
  105bf8:	 a8 c6 b1 bf 76 8a b5 bf         ....v...
  105c00:	 f9 f4 b8 bf b0 02 bc bf         ........
  105c08:	 32 b0 be bf 2f fa c0 bf         2.../...
  105c10:	 72 dd c2 bf d6 56 c4 bf         r....V..
  105c18:	 5e 63 c5 bf 11 00 c6 bf         ^c......
  105c20:	 3d 2a c6 bf 33 df c5 bf         =*..3...
  105c28:	 54 1c c5 bf 55 df c3 bf         T...U...
  105c30:	 ea 25 c2 bf e9 ed bf bf         .%......
  105c38:	 65 35 bd bf 87 fa b9 bf         e5......
  105c40:	 a3 3b b6 bf 38 f7 b1 bf         .;..8...
  105c48:	 ed 2b ad bf 9d d8 a7 bf         .+......
  105c50:	 3b fc a1 bf ff 95 9b bf         ;.......
  105c58:	 2f a5 94 bf 67 29 8d bf         /...g)..
  105c60:	 53 22 85 bf a5 1f 79 bf         S"....y.
  105c68:	 0a e4 66 bf 46 92 53 bf         ..f.F.S.
  105c70:	 51 2b 3f bf 79 b0 29 bf         Q+?.y.).
  105c78:	 6b 23 13 bf 6e 0c f7 be         k#..n...
  105c80:	 a9 b6 c5 be 34 4b 92 be         ....4K..
  105c88:	 19 a1 39 be 9d 37 95 bd         ..9..7..
  105c90:	 8a a5 21 3d ec 5c 1f 3e         ..!=.\.>
  105c98:	 dc 15 8d 3e 47 85 cb 3e         ...>G..>
  105ca0:	 e7 9f 10 3f d7 59 39 3f         ...?.Y9?
  105ca8:	 b1 e6 62 3f 6f 9e 86 3f         ..b?o..?
  105cb0:	 39 29 9c 3f a6 0e b2 3f         9).?...?
  105cb8:	 66 49 c8 3f 1b d4 de 3f         fI.?...?
  105cc0:	 19 a9 f5 3f 63 61 06 40         ...?ca.@
  105cc8:	 a2 0d 12 40 52 d6 1d 40         ...@R..@
  105cd0:	 67 b8 29 40 cd b0 35 40         g.)@..5@
  105cd8:	 62 bc 41 40 f1 d7 4d 40         b.A@..M@
  105ce0:	 4b 00 5a 40 27 32 66 40         K.Z@'2f@
  105ce8:	 38 6a 72 40 2b a5 7e 40         8jr@+.~@
  105cf0:	 d4 6f 85 40 2a 8b 8b 40         .o.@*..@
  105cf8:	 e2 a2 91 40 4a b5 97 40         ...@J..@
  105d00:	 af c0 9d 40 5f c3 a3 40         ...@_..@
  105d08:	 a3 bb a9 40 c6 a7 af 40         ...@...@
  105d10:	 18 86 b5 40 eb 54 bb 40         ...@.T.@
  105d18:	 8e 12 c1 40 5a bd c6 40         ...@Z..@
  105d20:	 a6 53 cc 40 d0 d3 d1 40         .S.@...@
  105d28:	 38 3c d7 40 4a 8b dc 40         8<.@J..@
  105d30:	 72 bf e1 40 21 d7 e6 40         r..@!..@
  105d38:	 d9 d0 eb 40 15 ab f0 40         ...@...@
  105d40:	 60 64 f5 40 55 fb f9 40         `d.@U..@
  105d48:	 89 6e fe 40 52 5e 01 41         .n.@R^.A
  105d50:	 2a 72 03 41 2c 72 05 41         *r.A,r.A
  105d58:	 b5 5d 07 41 3f 34 09 41         .].A?4.A
  105d60:	 1a f5 0a 41 d9 9f 0c 41         ...A...A
  105d68:	 e0 33 0e 41 c0 b0 0f 41         .3.A...A
  105d70:	 f9 15 11 41 19 63 12 41         ...A.c.A
  105d78:	 bb 97 13 41 81 b3 14 41         ...A...A
  105d80:	 f9 b5 15 41 e9 9e 16 41         ...A...A
  105d88:	 f9 6d 17 41 e6 22 18 41         .m.A.".A
  105d90:	 6a bd 18 41 64 3d 19 41         j..Ad=.A
  105d98:	 8f a2 19 41 2a f4 19 41         ...A*..A
  105da0:	 82 af 19 41 dc 47 19 41         ...A.G.A
  105da8:	 78 c5 18 41 80 28 18 41         x..A.(.A
  105db0:	 21 71 17 41 ae 9f 16 41         !q.A...A
  105db8:	 5d b4 15 41 7a af 14 41         ]..Az..A
  105dc0:	 64 91 13 41 72 5a 12 41         d..ArZ.A
  105dc8:	 08 0b 11 41 91 a3 0f 41         ...A...A
  105dd0:	 7a 24 0e 41 3b 8e 0c 41         z$.A;..A
  105dd8:	 5f e1 0a 41 67 1e 09 41         _..Ag..A
  105de0:	 da 45 07 41 4c 58 05 41         .E.ALX.A
  105de8:	 59 56 03 41 9d 40 01 41         YV.A.@.A
  105df0:	 73 2f fe 40 ae b8 f9 40         s/.@...@
  105df8:	 4b 1e f5 40 aa 61 f0 40         K..@.a.@
  105e00:	 3e 84 eb 40 79 87 e6 40         >..@y..@
  105e08:	 db 6c e1 40 e7 35 dc 40         .l.@.5.@
  105e10:	 2e e4 d6 40 40 79 d1 40         ...@@y.@
  105e18:	 b8 f6 cb 40 33 5e c6 40         ...@3^.@
  105e20:	 53 b1 c0 40 c3 f1 ba 40         S..@...@
  105e28:	 29 21 b5 40 35 41 af 40         )!.@5A.@
  105e30:	 97 53 a9 40 06 5a a3 40         .S.@.Z.@
  105e38:	 2e 56 9d 40 c7 49 97 40         .V.@.I.@
  105e40:	 85 36 91 40 1d 1e 8b 40         .6.@...@
  105e48:	 3f 02 85 40 3f c9 7d 40         ?..@?.}@
  105e50:	 da 8d 71 40 a8 55 65 40         ..q@.Ue@
  105e58:	 fb 23 59 40 1e fc 4c 40         .#Y@..L@
  105e60:	 50 e1 40 40 d4 d6 34 40         P.@@..4@
  105e68:	 ce df 28 40 65 ff 1c 40         ..(@e..@
  105e70:	 ac 38 11 40 ac 8e 05 40         .8.@...@
  105e78:	 b7 08 f4 3f 4b 39 dd 3f         ...?K9.?
  105e80:	 c0 b4 c6 3f ae 80 b0 3f         ...?...?
  105e88:	 6e a2 9a 3f 47 1f 85 3f         n..?G..?
  105e90:	 b0 f8 5f 3f 0e 7d 36 3f         .._?.}6?
  105e98:	 42 d5 0d 3f 47 48 cb 3e         B..?GH.>
  105ea0:	 93 2d 84 3e 24 e4 0d 3e         .-.>$..>
  105ea8:	 2b 5b ba 3c 67 b8 b6 bd         +[.<g...
  105eb0:	 33 01 4a be da 49 9a be         3.J..I..
  105eb8:	 b7 82 cd be ca a4 fe be         ........
  105ec0:	 3c d5 16 bf 73 47 2d bf         <...sG-.
  105ec8:	 05 a7 42 bf 43 f2 56 bf         ..B.C.V.
  105ed0:	 ff 27 6a bf 44 47 7c bf         .'j.DG|.
  105ed8:	 ce a7 86 bf 77 a0 8e bf         ....w...
  105ee0:	 b2 0d 96 bf dd ef 9c bf         ........
  105ee8:	 6b 47 a3 bf 16 15 a9 bf         kG......
  105ef0:	 a7 59 ae bf 2b 16 b3 bf         .Y..+...
  105ef8:	 d7 4b b7 bf fc fb ba bf         .K......
  105f00:	 2c 28 be bf 13 d2 c0 bf         ,(......
  105f08:	 8f fb c2 bf 8f a6 c4 bf         ........
  105f10:	 3d d5 c5 bf db 89 c6 bf         =.......
  105f18:	 e7 c6 c6 bf de 8e c6 bf         ........
  105f20:	 71 e4 c5 bf 60 ca c4 bf         q...`...
  105f28:	 b7 43 c3 bf 58 53 c1 bf         .C..XS..
  105f30:	 7a fc be bf 5b 42 bc bf         z...[B..
  105f38:	 52 28 b9 bf af b1 b5 bf         R(......
  105f40:	 15 e2 b1 bf 06 bd ad bf         ........
  105f48:	 24 46 a9 bf 34 81 a4 bf         $F..4...
  105f50:	 f3 71 9f bf 37 1c 9a bf         .q..7...
  105f58:	 d3 83 94 bf c1 ac 8e bf         ........
  105f60:	 ed 9a 88 bf 3f 52 82 bf         ....?R..
  105f68:	 95 ad 77 bf 12 59 6a bf         ..w..Yj.
  105f70:	 ee ae 5c bf 4b b7 4e bf         ..\.K.N.
  105f78:	 1b 7a 40 bf 66 ff 31 bf         .z@.f.1.
  105f80:	 23 4f 23 bf 41 71 14 bf         #O#.Aq..
  105f88:	 a0 6d 05 bf 23 98 ec be         .m..#...
  105f90:	 96 28 ce be ea 9b af be         .(......
  105f98:	 34 01 91 be 9d a8 63 be         4.....c.
  105fa0:	 a1 02 26 be ae a6 01 be         ..&.....
  105fa8:	 8a 7a bb bd 29 60 69 bd         .z..)`i.
  105fb0:	 32 40 bc bc 6d 25 2a 3c         2@..m%*<
  105fb8:	 02 5d 30 3d 1c 8f 99 3d         .]0=...=
  105fc0:	 7d 49 d9 3d 0a a1 0b 3e         }I.=...>
  105fc8:	 41 af 29 3e f7 c2 46 3e         A.)>..F>
  105fd0:	 66 d0 62 3e 7f cc 7d 3e         f.b>..}>
  105fd8:	 84 d6 8b 3e 21 34 98 3e         ...>!4.>
  105fe0:	 b1 fa a3 3e 1b 26 af 3e         ...>.&.>
  105fe8:	 a6 b2 b9 3e fa 9c c3 3e         ...>...>
  105ff0:	 16 e2 cc 3e 5c 7f d5 3e         ...>\..>
  105ff8:	 84 72 dd 3e a6 b9 e4 3e         .r.>...>
  106000:	 35 53 eb 3e fe 3d f1 3e         5S.>.=.>
  106008:	 21 79 f6 3e 22 04 fb 3e         !y.>"..>
  106010:	 d4 de fe 3e af 04 01 3f         ...>...?
  106018:	 24 42 02 3f 2f 28 03 3f         $B.?/(.?
  106020:	 65 b7 03 3f 7b f0 03 3f         e..?{..?
  106028:	 54 d4 03 3f f7 63 03 3f         T..?.c.?
  106030:	 90 a0 02 3f 6b 8b 01 3f         ...?k..?
  106038:	 fa 25 00 3f a9 e3 fc 3e         .%.?...>
  106040:	 50 e1 f8 3e 96 48 f4 3e         P..>.H.>
  106048:	 5a 1d ef 3e b1 63 e9 3e         Z..>.c.>
  106050:	 eb 1f e3 3e 93 56 dc 3e         ...>.V.>
  106058:	 51 0c d5 3e 11 46 cd 3e         Q..>.F.>
  106060:	 db 08 c5 3e e7 59 bc 3e         ...>.Y.>
  106068:	 8a 3e b3 3e 48 bc a9 3e         .>.>H..>
  106070:	 b4 d8 9f 3e 90 99 95 3e         ...>...>
  106078:	 a1 04 8b 3e dd 1f 80 3e         ...>...>
  106080:	 66 e2 69 3e 68 fd 52 3e         f.i>h.R>
  106088:	 ec 9c 3b 3e 3c cd 23 3e         ..;><.#>
  106090:	 a4 9a 0b 3e 07 23 e6 3d         ...>.#.=
  106098:	 87 7c b4 3d 4b 14 81 3d         .|.=K..=
  1060a0:	 0f df f7 3c 24 eb b2 3c         ...<$..<
  1060a8:	 85 64 5c 3c f9 76 a7 3b         .d\<.v.;
  1060b0:	 19 4f 4f bb 0c fa 39 bc         .OO...9.
  1060b8:	 04 35 9f bc 41 6c e0 bc         .5..Al..
  1060c0:	 10 3f 10 bd 99 a3 2f bd         .?..../.
  1060c8:	 96 52 4e bd 7d 3b 6c bd         .RN.};l.
  1060d0:	 30 a7 84 bd 00 be 92 bd         0.......
  1060d8:	 dd 5a a0 bd d4 76 ad bd         .Z...v..
  1060e0:	 3c 0b ba bd e9 11 c6 bd         <.......
  1060e8:	 dd 84 d1 bd 8b 5e dc bd         .....^..
  1060f0:	 e3 99 e6 bd 12 32 f0 bd         .....2..
  1060f8:	 a4 22 f9 bd c7 b3 00 be         ."......
  106100:	 a1 7e 04 be 38 f0 07 be         .~..8...
  106108:	 15 07 0b be 02 c2 0d be         ........
  106110:	 ee 1f 10 be 07 20 12 be         ..... ..
  106118:	 92 c1 13 be 16 04 15 be         ........
  106120:	 50 e7 15 be 1e 6b 16 be         P....k..
  106128:	 95 8f 16 be f1 54 16 be         .....T..
  106130:	 b1 bb 15 be 5c c4 14 be         ....\...
  106138:	 c1 6f 13 be da be 11 be         .o......
  106140:	 b8 b2 0f be a6 4c 0d be         .....L..
  106148:	 0d 8e 0a be 86 78 07 be         .....x..
  106150:	 c7 0d 04 be a4 4f 00 be         .....O..
  106158:	 44 80 f8 bd de c2 ef bd         D.......
  106160:	 61 6b e6 bd bc 7e dc bd         ak...~..
  106168:	 cd 01 d2 bd b6 f9 c6 bd         ........
  106170:	 f0 6b bb bd 01 5e af bd         .k...^..
  106178:	 ac d5 a2 bd d8 d8 95 bd         ........
  106180:	 96 6d 88 bd 2d 34 75 bd         .m..-4u.
  106188:	 5d c9 58 bd 91 a7 3b bd         ].X...;.
  106190:	 e6 db 1d bd 21 e7 fe bc         ....!...
  106198:	 dd f7 c0 bc bd 40 80 bc         


WOLAAnalysisFilter_Float_M256_m4_r1:
  1061a0:	 00 00 00 00 d3 bc 26 b8         ......&.
  1061a8:	 8e 3f 36 b8 9f 6d 46 b8         .?6..mF.
  1061b0:	 c5 4a 57 b8 c4 da 68 b8         .JW...h.
  1061b8:	 5e 21 7b b8 2d 11 87 b8         ^!{.-...
  1061c0:	 be f0 90 b8 49 31 9b b8         ....I1..
  1061c8:	 b1 d4 a5 b8 dc dc b0 b8         ........
  1061d0:	 ad 4b bc b8 09 23 c8 b8         .K...#..
  1061d8:	 d6 64 d4 b8 f9 12 e1 b8         .d......
  1061e0:	 46 2f ee b8 ad bb fb b8         F/......
  1061e8:	 00 dd 04 b9 10 16 0c b9         ........
  1061f0:	 f8 89 13 b9 a1 39 1b b9         .....9..
  1061f8:	 f4 25 23 b9 db 4f 2b b9         .%#..O+.
  106200:	 41 b8 33 b9 07 60 3c b9         A.3..`<.
  106208:	 17 48 45 b9 47 71 4e b9         .HE.GqN.
  106210:	 80 dc 57 b9 9d 8a 61 b9         ..W...a.
  106218:	 7c 7c 6b b9 e9 b2 75 b9         ||k...u.
  106220:	 61 17 80 b9 6d 78 85 b9         a...mx..
  106228:	 00 fd 8a b9 7a a5 90 b9         ....z...
  106230:	 46 72 96 b9 c1 63 9c b9         Fr...c..
  106238:	 4d 7a a2 b9 49 b6 a8 b9         Mz..I...
  106240:	 10 18 af b9 f9 9f b5 b9         ........
  106248:	 61 4e bc b9 99 23 c3 b9         aN...#..
  106250:	 f8 1f ca b9 c5 43 d1 b9         .....C..
  106258:	 58 8f d8 b9 f8 02 e0 b9         X.......
  106260:	 e9 9e e7 b9 74 63 ef b9         ....tc..
  106268:	 dd 50 f7 b9 5c 67 ff b9         .P..\g..
  106270:	 9b d3 03 ba 4e 08 08 ba         ....N...
  106278:	 e4 51 0c ba 75 b0 10 ba         .Q..u...
  106280:	 17 24 15 ba e1 ac 19 ba         .$......
  106288:	 e7 4a 1e ba 38 fe 22 ba         .J..8.".
  106290:	 e5 c6 27 ba fc a4 2c ba         ..'...,.
  106298:	 88 98 31 ba 92 a1 36 ba         ..1...6.
  1062a0:	 24 c0 3b ba 3f f4 40 ba         $.;.?.@.
  1062a8:	 e7 3d 46 ba 20 9d 4b ba         .=F. .K.
  1062b0:	 e4 11 51 ba 32 9c 56 ba         ..Q.2.V.
  1062b8:	 01 3c 5c ba 49 f1 61 ba         .<\.I.a.
  1062c0:	 ff bb 67 ba 16 9c 6d ba         ..g...m.
  1062c8:	 7a 91 73 ba 1a 9c 79 ba         z.s...y.
  1062d0:	 e1 bb 7f ba 5a f8 82 ba         ....Z...
  1062d8:	 3b 1d 86 ba 89 4c 89 ba         ;....L..
  1062e0:	 2d 86 8c ba 1e ca 8f ba         -.......
  1062e8:	 3a 18 93 ba 78 70 96 ba         :...xp..
  1062f0:	 be d2 99 ba f3 3e 9d ba         .....>..
  1062f8:	 06 b5 a0 ba cb 34 a4 ba         .....4..
  106300:	 31 be a7 ba 16 51 ab ba         1....Q..
  106308:	 60 ed ae ba e5 92 b2 ba         `.......
  106310:	 81 41 b6 ba 1c f9 b9 ba         .A......
  106318:	 81 b9 bd ba 86 82 c1 ba         ........
  106320:	 10 54 c5 ba ed 2d c9 ba         .T...-..
  106328:	 e9 0f cd ba d0 f9 d0 ba         ........
  106330:	 7f eb d4 ba c4 e4 d8 ba         ........
  106338:	 5a e5 dc ba 15 ed e0 ba         Z.......
  106340:	 ba fb e4 ba 0c 11 e9 ba         ........
  106348:	 d0 2c ed ba c8 4e f1 ba         .,...N..
  106350:	 ba 76 f5 ba 57 a4 f9 ba         .v..W...
  106358:	 64 d7 fd ba ca 07 01 bb         d.......
  106360:	 54 26 03 bb 27 47 05 bb         T&..'G..
  106368:	 20 6a 07 bb 13 8f 09 bb          j......
  106370:	 db b5 0b bb 54 de 0d bb         ....T...
  106378:	 47 08 10 bb 96 33 12 bb         G....3..
  106380:	 12 60 14 bb 87 8d 16 bb         .`......
  106388:	 ca bb 18 bb b0 ea 1a bb         ........
  106390:	 06 1a 1d bb 9c 49 1f bb         .....I..
  106398:	 3b 79 21 bb b8 a8 23 bb         ;y!...#.
  1063a0:	 d6 d7 25 bb 62 06 28 bb         ..%.b.(.
  1063a8:	 28 34 2a bb f2 60 2c bb         (4*..`,.
  1063b0:	 85 8c 2e bb a8 b6 30 bb         ......0.
  1063b8:	 1d df 32 bb b1 05 35 bb         ..2...5.
  1063c0:	 1f 2a 37 bb 2b 4c 39 bb         .*7.+L9.
  1063c8:	 9a 6b 3b bb 29 88 3d bb         .k;.).=.
  1063d0:	 9a a1 3f bb ac b7 41 bb         ..?...A.
  1063d8:	 1a ca 43 bb 9f d8 45 bb         ..C...E.
  1063e0:	 fb e2 47 bb e4 e8 49 bb         ..G...I.
  1063e8:	 17 ea 4b bb 4a e6 4d bb         ..K.J.M.
  1063f0:	 38 dd 4f bb 90 ce 51 bb         8.O...Q.
  1063f8:	 11 ba 53 bb 6a 9f 55 bb         ..S.j.U.
  106400:	 4e 7e 57 bb 73 56 59 bb         N~W.sVY.
  106408:	 88 27 5b bb 43 f1 5c bb         .'[.C.\.
  106410:	 4c b3 5e bb 57 6d 60 bb         L.^.Wm`.
  106418:	 15 1f 62 bb 2f c8 63 bb         ..b./.c.
  106420:	 53 68 65 bb 31 ff 66 bb         She.1.f.
  106428:	 68 8c 68 bb ad 0f 6a bb         h.h...j.
  106430:	 a9 88 6b bb fe f6 6c bb         ..k...l.
  106438:	 55 5a 6e bb 59 b2 6f bb         UZn.Y.o.
  106440:	 b0 fe 70 bb fc 3e 72 bb         ..p..>r.
  106448:	 e1 72 73 bb 06 9a 74 bb         .rs...t.
  106450:	 0c b4 75 bb 9a c0 76 bb         ..u...v.
  106458:	 50 bf 77 bb cc af 78 bb         P.w...x.
  106460:	 b4 91 79 bb a0 64 7a bb         ..y..dz.
  106468:	 37 28 7b bb 19 dc 7b bb         7({...{.
  106470:	 dd 7f 7c bb 26 13 7d bb         ..|.&.}.
  106478:	 8f 95 7d bb b8 06 7e bb         ..}...~.
  106480:	 3c 66 7e bb b2 b3 7e bb         <f~...~.
  106488:	 c0 ee 7e bb f7 16 7f bb         ..~.....
  106490:	 f4 2b 7f bb 58 2d 7f bb         .+..X-..
  106498:	 b5 1a 7f bb aa f3 7e bb         ......~.
  1064a0:	 ce b7 7e bb b8 66 7e bb         ..~..f~.
  1064a8:	 07 00 7e bb 4e 83 7d bb         ..~.N.}.
  1064b0:	 27 f0 7c bb 2a 46 7c bb         '.|.*F|.
  1064b8:	 f5 84 7b bb 19 ac 7a bb         ..{...z.
  1064c0:	 2d bb 79 bb cf b1 78 bb         -.y...x.
  1064c8:	 95 8f 77 bb 12 54 76 bb         ..w..Tv.
  1064d0:	 e3 fe 74 bb a2 8f 73 bb         ..t...s.
  1064d8:	 df 05 72 bb 38 61 70 bb         ..r.8ap.
  1064e0:	 44 a1 6e bb 9d c5 6c bb         D.n...l.
  1064e8:	 d8 cd 6a bb 8e b9 68 bb         ..j...h.
  1064f0:	 5b 88 66 bb d5 39 64 bb         [.f..9d.
  1064f8:	 99 cd 61 bb 3e 43 5f bb         ..a.>C_.
  106500:	 60 9a 5c bb 9a d2 59 bb         `.\...Y.
  106508:	 81 eb 56 bb b7 e4 53 bb         ..V...S.
  106510:	 d9 bd 50 bb 7c 76 4d bb         ..P.|vM.
  106518:	 45 0e 4a bb ce 84 46 bb         E.J...F.
  106520:	 b3 d9 42 bb 96 0c 3f bb         ..B...?.
  106528:	 15 1d 3b bb cc 0a 37 bb         ..;...7.
  106530:	 66 d5 32 bb 7b 7c 2e bb         f.2.{|..
  106538:	 b6 ff 29 bb b0 5e 25 bb         ..)..^%.
  106540:	 17 99 20 bb 87 ae 1b bb         .. .....
  106548:	 ac 9e 16 bb 27 69 11 bb         ....'i..
  106550:	 a6 0d 0c bb d3 8b 06 bb         ........
  106558:	 51 e3 00 bb 98 27 f6 ba         Q....'..
  106560:	 e7 39 ea ba e5 fc dd ba         .9......
  106568:	 ec 6f d1 ba 63 92 c4 ba         .o..c...
  106570:	 a6 63 b7 ba 13 e3 a9 ba         .c......
  106578:	 1f 10 9c ba 1f ea 8d ba         ........
  106580:	 28 e1 7e ba c1 45 61 ba         (.~..Ea.
  106588:	 ee 00 43 ba 9b 11 24 ba         ..C...$.
  106590:	 b5 76 04 ba 61 5e c8 b9         .v..a^..
  106598:	 0e 74 86 b9 f2 58 06 b9         .t...X..
  1065a0:	 00 00 00 00 87 04 0f 39         .......9
  1065a8:	 26 ed 8e 39 c5 bc d7 39         &..9...9
  1065b0:	 6e f9 10 3a 90 c8 36 3a         n..:..6:
  1065b8:	 94 4c 5d 3a 24 43 82 3a         .L]:$C.:
  1065c0:	 38 3b 96 3a d7 8e aa 3a         8;.:...:
  1065c8:	 6f 3e bf 3a 45 4a d4 3a         o>.:EJ.:
  1065d0:	 ae b2 e9 3a f8 77 ff 3a         ...:.w.:
  1065d8:	 39 cd 0a 3b 2e 0d 16 3b         9..;...;
  1065e0:	 00 7c 21 3b c7 19 2d 3b         .|!;..-;
  1065e8:	 a2 e6 38 3b af e2 44 3b         ..8;..D;
  1065f0:	 03 0e 51 3b b8 68 5d 3b         ..Q;.h];
  1065f8:	 df f2 69 3b 85 ac 76 3b         ..i;..v;
  106600:	 e2 ca 81 3b 50 57 88 3b         ...;PW.;
  106608:	 95 fb 8e 3b b6 b7 95 3b         ...;...;
  106610:	 b2 8b 9c 3b 8d 77 a3 3b         ...;.w.;
  106618:	 4b 7b aa 3b e9 96 b1 3b         K{.;...;
  106620:	 66 ca b8 3b bc 15 c0 3b         f..;...;
  106628:	 ee 78 c7 3b f1 f3 ce 3b         .x.;...;
  106630:	 c0 86 d6 3b 55 31 de 3b         ...;U1.;
  106638:	 a5 f3 e5 3b a6 cd ed 3b         ...;...;
  106640:	 4e bf f5 3b 92 c8 fd 3b         N..;...;
  106648:	 b0 f4 02 3c d5 10 07 3c         ...<...<
  106650:	 b0 38 0b 3c 38 6c 0f 3c         .8.<8l.<
  106658:	 64 ab 13 3c 29 f6 17 3c         d..<)..<
  106660:	 7d 4c 1c 3c 54 ae 20 3c         }L.<T. <
  106668:	 a3 1b 25 3c 59 94 29 3c         ..%<Y.)<
  106670:	 6c 18 2e 3c c8 a7 32 3c         l..<..2<
  106678:	 6c 42 37 3c 39 e8 3b 3c         lB7<9.;<
  106680:	 2d 99 40 3c 29 55 45 3c         -.@<)UE<
  106688:	 23 1c 4a 3c 0f ee 4e 3c         #.J<..N<
  106690:	 ce ca 53 3c 53 b2 58 3c         ..S<S.X<
  106698:	 81 a4 5d 3c 55 a1 62 3c         ..]<U.b<
  1066a0:	 a6 a8 67 3c 68 ba 6c 3c         ..g<h.l<
  1066a8:	 87 d6 71 3c ec fc 76 3c         ..q<..v<
  1066b0:	 6d 2d 7c 3c 00 b4 80 3c         m-|<...<
  1066b8:	 46 56 83 3c 7b fd 85 3c         FV.<{..<
  1066c0:	 92 a9 88 3c 77 5a 8b 3c         ...<wZ.<
  1066c8:	 24 10 8e 3c 88 ca 90 3c         $..<...<
  1066d0:	 90 89 93 3c 34 4d 96 3c         ...<4M.<
  1066d8:	 5b 15 99 3c fe e1 9b 3c         [..<...<
  1066e0:	 0e b3 9e 3c 71 88 a1 3c         ...<q..<
  1066e8:	 20 62 a4 3c 00 40 a7 3c          b.<.@.<
  1066f0:	 08 22 aa 3c 26 08 ad 3c         .".<&..<
  1066f8:	 41 f2 af 3c 4d e0 b2 3c         A..<M..<
  106700:	 3a d2 b5 3c ed c7 b8 3c         :..<...<
  106708:	 57 c1 bb 3c 61 be be 3c         W..<a..<
  106710:	 fd be c1 3c 18 c3 c4 3c         ...<...<
  106718:	 95 ca c7 3c 61 d5 ca 3c         ...<a..<
  106720:	 6d e3 cd 3c a5 f4 d0 3c         m..<...<
  106728:	 ec 08 d4 3c 2d 20 d7 3c         ...<- .<
  106730:	 59 3a da 3c 4e 57 dd 3c         Y:.<NW.<
  106738:	 03 77 e0 3c 57 99 e3 3c         .w.<W..<
  106740:	 35 be e6 3c 87 e5 e9 3c         5..<...<
  106748:	 38 0f ed 3c 2c 3b f0 3c         8..<,;.<
  106750:	 49 69 f3 3c 7a 99 f6 3c         Ii.<z..<
  106758:	 a9 cb f9 3c b5 ff fc 3c         ...<...<
  106760:	 c8 1a 00 3d 8c b6 01 3d         ...=...=
  106768:	 19 53 03 3d 65 f0 04 3d         .S.=e..=
  106770:	 62 8e 06 3d 05 2d 08 3d         b..=.-.=
  106778:	 3c cc 09 3d ff 6b 0b 3d         <..=.k.=
  106780:	 3d 0c 0d 3d e9 ac 0e 3d         =..=...=
  106788:	 f6 4d 10 3d 56 ef 11 3d         .M.=V..=
  106790:	 fc 90 13 3d da 32 15 3d         ...=.2.=
  106798:	 e3 d4 16 3d 07 77 18 3d         ...=.w.=
  1067a0:	 39 19 1a 3d 68 bb 1b 3d         9..=h..=
  1067a8:	 8c 5d 1d 3d 8f ff 1e 3d         .].=...=
  1067b0:	 6b a1 20 3d 0b 43 22 3d         k. =.C"=
  1067b8:	 63 e4 23 3d 66 85 25 3d         c.#=f.%=
  1067c0:	 02 26 27 3d 2a c6 28 3d         .&'=*.(=
  1067c8:	 d2 65 2a 3d e6 04 2c 3d         .e*=..,=
  1067d0:	 5c a3 2d 3d 23 41 2f 3d         \.-=#A/=
  1067d8:	 29 de 30 3d 66 7a 32 3d         ).0=fz2=
  1067e0:	 c7 15 34 3d 3e b0 35 3d         ..4=>.5=
  1067e8:	 bb 49 37 3d 2f e2 38 3d         .I7=/.8=
  1067f0:	 8e 79 3a 3d c3 0f 3c 3d         .y:=..<=
  1067f8:	 c6 a4 3d 3d 85 38 3f 3d         ..==.8?=
  106800:	 ee ca 40 3d f5 5b 42 3d         ..@=.[B=
  106808:	 8d eb 43 3d a4 79 45 3d         ..C=.yE=
  106810:	 29 06 47 3d 13 91 48 3d         ).G=..H=
  106818:	 4d 1a 4a 3d cc a1 4b 3d         M.J=..K=
  106820:	 80 27 4d 3d 59 ab 4e 3d         .'M=Y.N=
  106828:	 4a 2d 50 3d 41 ad 51 3d         J-P=A.Q=
  106830:	 33 2b 53 3d 0e a7 54 3d         3+S=..T=
  106838:	 c6 20 56 3d 4a 98 57 3d         . V=J.W=
  106840:	 8d 0d 59 3d 7f 80 5a 3d         ..Y=..Z=
  106848:	 12 f1 5b 3d 39 5f 5d 3d         ..[=9_]=
  106850:	 e4 ca 5e 3d 02 34 60 3d         ..^=.4`=
  106858:	 8a 9a 61 3d 6a fe 62 3d         ..a=j.b=
  106860:	 96 5f 64 3d fd bd 65 3d         ._d=..e=
  106868:	 95 19 67 3d 4d 72 68 3d         ..g=Mrh=
  106870:	 18 c8 69 3d e9 1a 6b 3d         ..i=..k=
  106878:	 b2 6a 6c 3d 66 b7 6d 3d         .jl=f.m=
  106880:	 f4 00 6f 3d 53 47 70 3d         ..o=SGp=
  106888:	 71 8a 71 3d 48 ca 72 3d         q.q=H.r=
  106890:	 c5 06 74 3d db 3f 75 3d         ..t=.?u=
  106898:	 83 75 76 3d aa a7 77 3d         .uv=..w=
  1068a0:	 43 d6 78 3d 48 01 7a 3d         C.x=H.z=
  1068a8:	 a8 28 7b 3d 57 4c 7c 3d         .({=WL|=
  1068b0:	 4a 6c 7d 3d 74 88 7e 3d         Jl}=t.~=
  1068b8:	 ca a0 7f 3d a0 5a 80 3d         ...=.Z.=
  1068c0:	 e5 e2 80 3d 30 69 81 3d         ...=0i.=
  1068c8:	 78 ed 81 3d bb 6f 82 3d         x..=.o.=
  1068d0:	 f2 ef 82 3d 17 6e 83 3d         ...=.n.=
  1068d8:	 25 ea 83 3d 18 64 84 3d         %..=.d.=
  1068e0:	 ea db 84 3d 96 51 85 3d         ...=.Q.=
  1068e8:	 16 c5 85 3d 67 36 86 3d         ...=g6.=
  1068f0:	 84 a5 86 3d 66 12 87 3d         ...=f..=
  1068f8:	 0a 7d 87 3d 6d e5 87 3d         .}.=m..=
  106900:	 87 4b 88 3d 58 af 88 3d         .K.=X..=
  106908:	 d7 10 89 3d 03 70 89 3d         ...=.p.=
  106910:	 d8 cc 89 3d 51 27 8a 3d         ...=Q'.=
  106918:	 6b 7f 8a 3d 21 d5 8a 3d         k..=!..=
  106920:	 70 28 8b 3d 53 79 8b 3d         p(.=Sy.=
  106928:	 ca c7 8b 3d ce 13 8c 3d         ...=...=
  106930:	 5e 5d 8c 3d 75 a4 8c 3d         ^].=u..=
  106938:	 12 e9 8c 3d 31 2b 8d 3d         ...=1+.=
  106940:	 cf 6a 8d 3d ea a7 8d 3d         .j.=...=
  106948:	 7f e2 8d 3d 8a 1a 8e 3d         ...=...=
  106950:	 0b 50 8e 3d 00 83 8e 3d         .P.=...=
  106958:	 63 b3 8e 3d 36 e1 8e 3d         c..=6..=
  106960:	 74 0c 8f 3d 1e 35 8f 3d         t..=.5.=
  106968:	 2f 5b 8f 3d a8 7e 8f 3d         /[.=.~.=
  106970:	 87 9f 8f 3d c8 bd 8f 3d         ...=...=
  106978:	 6e d9 8f 3d 75 f2 8f 3d         n..=u..=
  106980:	 dc 08 90 3d a3 1c 90 3d         ...=...=
  106988:	 c9 2d 90 3d 4c 3c 90 3d         .-.=L<.=
  106990:	 2e 48 90 3d 6b 51 90 3d         .H.=kQ.=
  106998:	 04 58 90 3d fb 5b 90 3d         .X.=.[.=
  1069a0:	 4d 5d 90 3d fb 5b 90 3d         M].=.[.=
  1069a8:	 04 58 90 3d 6b 51 90 3d         .X.=kQ.=
  1069b0:	 2e 48 90 3d 4c 3c 90 3d         .H.=L<.=
  1069b8:	 c9 2d 90 3d a3 1c 90 3d         .-.=...=
  1069c0:	 dc 08 90 3d 75 f2 8f 3d         ...=u..=
  1069c8:	 6e d9 8f 3d c8 bd 8f 3d         n..=...=
  1069d0:	 87 9f 8f 3d a8 7e 8f 3d         ...=.~.=
  1069d8:	 2f 5b 8f 3d 1e 35 8f 3d         /[.=.5.=
  1069e0:	 74 0c 8f 3d 36 e1 8e 3d         t..=6..=
  1069e8:	 63 b3 8e 3d 00 83 8e 3d         c..=...=
  1069f0:	 0b 50 8e 3d 8a 1a 8e 3d         .P.=...=
  1069f8:	 7f e2 8d 3d ea a7 8d 3d         ...=...=
  106a00:	 cf 6a 8d 3d 31 2b 8d 3d         .j.=1+.=
  106a08:	 12 e9 8c 3d 75 a4 8c 3d         ...=u..=
  106a10:	 5e 5d 8c 3d ce 13 8c 3d         ^].=...=
  106a18:	 ca c7 8b 3d 53 79 8b 3d         ...=Sy.=
  106a20:	 70 28 8b 3d 21 d5 8a 3d         p(.=!..=
  106a28:	 6b 7f 8a 3d 51 27 8a 3d         k..=Q'.=
  106a30:	 d8 cc 89 3d 03 70 89 3d         ...=.p.=
  106a38:	 d7 10 89 3d 58 af 88 3d         ...=X..=
  106a40:	 87 4b 88 3d 6d e5 87 3d         .K.=m..=
  106a48:	 0a 7d 87 3d 66 12 87 3d         .}.=f..=
  106a50:	 84 a5 86 3d 67 36 86 3d         ...=g6.=
  106a58:	 16 c5 85 3d 96 51 85 3d         ...=.Q.=
  106a60:	 ea db 84 3d 18 64 84 3d         ...=.d.=
  106a68:	 25 ea 83 3d 17 6e 83 3d         %..=.n.=
  106a70:	 f2 ef 82 3d bb 6f 82 3d         ...=.o.=
  106a78:	 78 ed 81 3d 30 69 81 3d         x..=0i.=
  106a80:	 e5 e2 80 3d a0 5a 80 3d         ...=.Z.=
  106a88:	 ca a0 7f 3d 74 88 7e 3d         ...=t.~=
  106a90:	 4a 6c 7d 3d 57 4c 7c 3d         Jl}=WL|=
  106a98:	 a8 28 7b 3d 48 01 7a 3d         .({=H.z=
  106aa0:	 43 d6 78 3d aa a7 77 3d         C.x=..w=
  106aa8:	 83 75 76 3d db 3f 75 3d         .uv=.?u=
  106ab0:	 c5 06 74 3d 48 ca 72 3d         ..t=H.r=
  106ab8:	 71 8a 71 3d 53 47 70 3d         q.q=SGp=
  106ac0:	 f4 00 6f 3d 66 b7 6d 3d         ..o=f.m=
  106ac8:	 b2 6a 6c 3d e9 1a 6b 3d         .jl=..k=
  106ad0:	 18 c8 69 3d 4d 72 68 3d         ..i=Mrh=
  106ad8:	 95 19 67 3d fd bd 65 3d         ..g=..e=
  106ae0:	 96 5f 64 3d 6a fe 62 3d         ._d=j.b=
  106ae8:	 8a 9a 61 3d 02 34 60 3d         ..a=.4`=
  106af0:	 e4 ca 5e 3d 39 5f 5d 3d         ..^=9_]=
  106af8:	 12 f1 5b 3d 7f 80 5a 3d         ..[=..Z=
  106b00:	 8d 0d 59 3d 4a 98 57 3d         ..Y=J.W=
  106b08:	 c6 20 56 3d 0e a7 54 3d         . V=..T=
  106b10:	 33 2b 53 3d 41 ad 51 3d         3+S=A.Q=
  106b18:	 4a 2d 50 3d 59 ab 4e 3d         J-P=Y.N=
  106b20:	 80 27 4d 3d cc a1 4b 3d         .'M=..K=
  106b28:	 4d 1a 4a 3d 13 91 48 3d         M.J=..H=
  106b30:	 29 06 47 3d a4 79 45 3d         ).G=.yE=
  106b38:	 8d eb 43 3d f5 5b 42 3d         ..C=.[B=
  106b40:	 ee ca 40 3d 85 38 3f 3d         ..@=.8?=
  106b48:	 c6 a4 3d 3d c3 0f 3c 3d         ..==..<=
  106b50:	 8e 79 3a 3d 2f e2 38 3d         .y:=/.8=
  106b58:	 bb 49 37 3d 3e b0 35 3d         .I7=>.5=
  106b60:	 c7 15 34 3d 66 7a 32 3d         ..4=fz2=
  106b68:	 29 de 30 3d 23 41 2f 3d         ).0=#A/=
  106b70:	 5c a3 2d 3d e6 04 2c 3d         \.-=..,=
  106b78:	 d2 65 2a 3d 2a c6 28 3d         .e*=*.(=
  106b80:	 02 26 27 3d 66 85 25 3d         .&'=f.%=
  106b88:	 63 e4 23 3d 0b 43 22 3d         c.#=.C"=
  106b90:	 6b a1 20 3d 8f ff 1e 3d         k. =...=
  106b98:	 8c 5d 1d 3d 68 bb 1b 3d         .].=h..=
  106ba0:	 39 19 1a 3d 07 77 18 3d         9..=.w.=
  106ba8:	 e3 d4 16 3d da 32 15 3d         ...=.2.=
  106bb0:	 fc 90 13 3d 56 ef 11 3d         ...=V..=
  106bb8:	 f6 4d 10 3d e9 ac 0e 3d         .M.=...=
  106bc0:	 3d 0c 0d 3d ff 6b 0b 3d         =..=.k.=
  106bc8:	 3c cc 09 3d 05 2d 08 3d         <..=.-.=
  106bd0:	 62 8e 06 3d 65 f0 04 3d         b..=e..=
  106bd8:	 19 53 03 3d 8c b6 01 3d         .S.=...=
  106be0:	 c8 1a 00 3d b5 ff fc 3c         ...=...<
  106be8:	 a9 cb f9 3c 7a 99 f6 3c         ...<z..<
  106bf0:	 49 69 f3 3c 2c 3b f0 3c         Ii.<,;.<
  106bf8:	 38 0f ed 3c 87 e5 e9 3c         8..<...<
  106c00:	 35 be e6 3c 57 99 e3 3c         5..<W..<
  106c08:	 03 77 e0 3c 4e 57 dd 3c         .w.<NW.<
  106c10:	 59 3a da 3c 2d 20 d7 3c         Y:.<- .<
  106c18:	 ec 08 d4 3c a5 f4 d0 3c         ...<...<
  106c20:	 6d e3 cd 3c 61 d5 ca 3c         m..<a..<
  106c28:	 95 ca c7 3c 18 c3 c4 3c         ...<...<
  106c30:	 fd be c1 3c 61 be be 3c         ...<a..<
  106c38:	 57 c1 bb 3c ed c7 b8 3c         W..<...<
  106c40:	 3a d2 b5 3c 4d e0 b2 3c         :..<M..<
  106c48:	 41 f2 af 3c 26 08 ad 3c         A..<&..<
  106c50:	 08 22 aa 3c 00 40 a7 3c         .".<.@.<
  106c58:	 20 62 a4 3c 71 88 a1 3c          b.<q..<
  106c60:	 0e b3 9e 3c fe e1 9b 3c         ...<...<
  106c68:	 5b 15 99 3c 34 4d 96 3c         [..<4M.<
  106c70:	 90 89 93 3c 88 ca 90 3c         ...<...<
  106c78:	 24 10 8e 3c 77 5a 8b 3c         $..<wZ.<
  106c80:	 92 a9 88 3c 7b fd 85 3c         ...<{..<
  106c88:	 46 56 83 3c 00 b4 80 3c         FV.<...<
  106c90:	 6d 2d 7c 3c ec fc 76 3c         m-|<..v<
  106c98:	 87 d6 71 3c 68 ba 6c 3c         ..q<h.l<
  106ca0:	 a6 a8 67 3c 55 a1 62 3c         ..g<U.b<
  106ca8:	 81 a4 5d 3c 53 b2 58 3c         ..]<S.X<
  106cb0:	 ce ca 53 3c 0f ee 4e 3c         ..S<..N<
  106cb8:	 23 1c 4a 3c 29 55 45 3c         #.J<)UE<
  106cc0:	 2d 99 40 3c 39 e8 3b 3c         -.@<9.;<
  106cc8:	 6c 42 37 3c c8 a7 32 3c         lB7<..2<
  106cd0:	 6c 18 2e 3c 59 94 29 3c         l..<Y.)<
  106cd8:	 a3 1b 25 3c 54 ae 20 3c         ..%<T. <
  106ce0:	 7d 4c 1c 3c 29 f6 17 3c         }L.<)..<
  106ce8:	 64 ab 13 3c 38 6c 0f 3c         d..<8l.<
  106cf0:	 b0 38 0b 3c d5 10 07 3c         .8.<...<
  106cf8:	 b0 f4 02 3c 92 c8 fd 3b         ...<...;
  106d00:	 4e bf f5 3b a6 cd ed 3b         N..;...;
  106d08:	 a5 f3 e5 3b 55 31 de 3b         ...;U1.;
  106d10:	 c0 86 d6 3b f1 f3 ce 3b         ...;...;
  106d18:	 ee 78 c7 3b bc 15 c0 3b         .x.;...;
  106d20:	 66 ca b8 3b e9 96 b1 3b         f..;...;
  106d28:	 4b 7b aa 3b 8d 77 a3 3b         K{.;.w.;
  106d30:	 b2 8b 9c 3b b6 b7 95 3b         ...;...;
  106d38:	 95 fb 8e 3b 50 57 88 3b         ...;PW.;
  106d40:	 e2 ca 81 3b 85 ac 76 3b         ...;..v;
  106d48:	 df f2 69 3b b8 68 5d 3b         ..i;.h];
  106d50:	 03 0e 51 3b af e2 44 3b         ..Q;..D;
  106d58:	 a2 e6 38 3b c7 19 2d 3b         ..8;..-;
  106d60:	 00 7c 21 3b 2e 0d 16 3b         .|!;...;
  106d68:	 39 cd 0a 3b f8 77 ff 3a         9..;.w.:
  106d70:	 ae b2 e9 3a 45 4a d4 3a         ...:EJ.:
  106d78:	 6f 3e bf 3a d7 8e aa 3a         o>.:...:
  106d80:	 38 3b 96 3a 24 43 82 3a         8;.:$C.:
  106d88:	 94 4c 5d 3a 90 c8 36 3a         .L]:..6:
  106d90:	 6e f9 10 3a c5 bc d7 39         n..:...9
  106d98:	 26 ed 8e 39 87 04 0f 39         &..9...9
  106da0:	 00 00 00 00 f2 58 06 b9         .....X..
  106da8:	 0e 74 86 b9 61 5e c8 b9         .t..a^..
  106db0:	 b5 76 04 ba 9b 11 24 ba         .v....$.
  106db8:	 ee 00 43 ba c1 45 61 ba         ..C..Ea.
  106dc0:	 28 e1 7e ba 1f ea 8d ba         (.~.....
  106dc8:	 1f 10 9c ba 13 e3 a9 ba         ........
  106dd0:	 a6 63 b7 ba 63 92 c4 ba         .c..c...
  106dd8:	 ec 6f d1 ba e5 fc dd ba         .o......
  106de0:	 e7 39 ea ba 98 27 f6 ba         .9...'..
  106de8:	 51 e3 00 bb d3 8b 06 bb         Q.......
  106df0:	 a6 0d 0c bb 27 69 11 bb         ....'i..
  106df8:	 ac 9e 16 bb 87 ae 1b bb         ........
  106e00:	 17 99 20 bb b0 5e 25 bb         .. ..^%.
  106e08:	 b6 ff 29 bb 7b 7c 2e bb         ..).{|..
  106e10:	 66 d5 32 bb cc 0a 37 bb         f.2...7.
  106e18:	 15 1d 3b bb 96 0c 3f bb         ..;...?.
  106e20:	 b3 d9 42 bb ce 84 46 bb         ..B...F.
  106e28:	 45 0e 4a bb 7c 76 4d bb         E.J.|vM.
  106e30:	 d9 bd 50 bb b7 e4 53 bb         ..P...S.
  106e38:	 81 eb 56 bb 9a d2 59 bb         ..V...Y.
  106e40:	 60 9a 5c bb 3e 43 5f bb         `.\.>C_.
  106e48:	 99 cd 61 bb d5 39 64 bb         ..a..9d.
  106e50:	 5b 88 66 bb 8e b9 68 bb         [.f...h.
  106e58:	 d8 cd 6a bb 9d c5 6c bb         ..j...l.
  106e60:	 44 a1 6e bb 38 61 70 bb         D.n.8ap.
  106e68:	 df 05 72 bb a2 8f 73 bb         ..r...s.
  106e70:	 e3 fe 74 bb 12 54 76 bb         ..t..Tv.
  106e78:	 95 8f 77 bb cf b1 78 bb         ..w...x.
  106e80:	 2d bb 79 bb 19 ac 7a bb         -.y...z.
  106e88:	 f5 84 7b bb 2a 46 7c bb         ..{.*F|.
  106e90:	 27 f0 7c bb 4e 83 7d bb         '.|.N.}.
  106e98:	 07 00 7e bb b8 66 7e bb         ..~..f~.
  106ea0:	 ce b7 7e bb aa f3 7e bb         ..~...~.
  106ea8:	 b5 1a 7f bb 58 2d 7f bb         ....X-..
  106eb0:	 f4 2b 7f bb f7 16 7f bb         .+......
  106eb8:	 c0 ee 7e bb b2 b3 7e bb         ..~...~.
  106ec0:	 3c 66 7e bb b8 06 7e bb         <f~...~.
  106ec8:	 8f 95 7d bb 26 13 7d bb         ..}.&.}.
  106ed0:	 dd 7f 7c bb 19 dc 7b bb         ..|...{.
  106ed8:	 37 28 7b bb a0 64 7a bb         7({..dz.
  106ee0:	 b4 91 79 bb cc af 78 bb         ..y...x.
  106ee8:	 50 bf 77 bb 9a c0 76 bb         P.w...v.
  106ef0:	 0c b4 75 bb 06 9a 74 bb         ..u...t.
  106ef8:	 e1 72 73 bb fc 3e 72 bb         .rs..>r.
  106f00:	 b0 fe 70 bb 59 b2 6f bb         ..p.Y.o.
  106f08:	 55 5a 6e bb fe f6 6c bb         UZn...l.
  106f10:	 a9 88 6b bb ad 0f 6a bb         ..k...j.
  106f18:	 68 8c 68 bb 31 ff 66 bb         h.h.1.f.
  106f20:	 53 68 65 bb 2f c8 63 bb         She./.c.
  106f28:	 15 1f 62 bb 57 6d 60 bb         ..b.Wm`.
  106f30:	 4c b3 5e bb 43 f1 5c bb         L.^.C.\.
  106f38:	 88 27 5b bb 73 56 59 bb         .'[.sVY.
  106f40:	 4e 7e 57 bb 6a 9f 55 bb         N~W.j.U.
  106f48:	 11 ba 53 bb 90 ce 51 bb         ..S...Q.
  106f50:	 38 dd 4f bb 4a e6 4d bb         8.O.J.M.
  106f58:	 17 ea 4b bb e4 e8 49 bb         ..K...I.
  106f60:	 fb e2 47 bb 9f d8 45 bb         ..G...E.
  106f68:	 1a ca 43 bb ac b7 41 bb         ..C...A.
  106f70:	 9a a1 3f bb 29 88 3d bb         ..?.).=.
  106f78:	 9a 6b 3b bb 2b 4c 39 bb         .k;.+L9.
  106f80:	 1f 2a 37 bb b1 05 35 bb         .*7...5.
  106f88:	 1d df 32 bb a8 b6 30 bb         ..2...0.
  106f90:	 85 8c 2e bb f2 60 2c bb         .....`,.
  106f98:	 28 34 2a bb 62 06 28 bb         (4*.b.(.
  106fa0:	 d6 d7 25 bb b8 a8 23 bb         ..%...#.
  106fa8:	 3b 79 21 bb 9c 49 1f bb         ;y!..I..
  106fb0:	 06 1a 1d bb b0 ea 1a bb         ........
  106fb8:	 ca bb 18 bb 87 8d 16 bb         ........
  106fc0:	 12 60 14 bb 96 33 12 bb         .`...3..
  106fc8:	 47 08 10 bb 54 de 0d bb         G...T...
  106fd0:	 db b5 0b bb 13 8f 09 bb         ........
  106fd8:	 20 6a 07 bb 27 47 05 bb          j..'G..
  106fe0:	 54 26 03 bb ca 07 01 bb         T&......
  106fe8:	 64 d7 fd ba 57 a4 f9 ba         d...W...
  106ff0:	 ba 76 f5 ba c8 4e f1 ba         .v...N..
  106ff8:	 d0 2c ed ba 0c 11 e9 ba         .,......
  107000:	 ba fb e4 ba 15 ed e0 ba         ........
  107008:	 5a e5 dc ba c4 e4 d8 ba         Z.......
  107010:	 7f eb d4 ba d0 f9 d0 ba         ........
  107018:	 e9 0f cd ba ed 2d c9 ba         .....-..
  107020:	 10 54 c5 ba 86 82 c1 ba         .T......
  107028:	 81 b9 bd ba 1c f9 b9 ba         ........
  107030:	 81 41 b6 ba e5 92 b2 ba         .A......
  107038:	 60 ed ae ba 16 51 ab ba         `....Q..
  107040:	 31 be a7 ba cb 34 a4 ba         1....4..
  107048:	 06 b5 a0 ba f3 3e 9d ba         .....>..
  107050:	 be d2 99 ba 78 70 96 ba         ....xp..
  107058:	 3a 18 93 ba 1e ca 8f ba         :.......
  107060:	 2d 86 8c ba 89 4c 89 ba         -....L..
  107068:	 3b 1d 86 ba 5a f8 82 ba         ;...Z...
  107070:	 e1 bb 7f ba 1a 9c 79 ba         ......y.
  107078:	 7a 91 73 ba 16 9c 6d ba         z.s...m.
  107080:	 ff bb 67 ba 49 f1 61 ba         ..g.I.a.
  107088:	 01 3c 5c ba 32 9c 56 ba         .<\.2.V.
  107090:	 e4 11 51 ba 20 9d 4b ba         ..Q. .K.
  107098:	 e7 3d 46 ba 3f f4 40 ba         .=F.?.@.
  1070a0:	 24 c0 3b ba 92 a1 36 ba         $.;...6.
  1070a8:	 88 98 31 ba fc a4 2c ba         ..1...,.
  1070b0:	 e5 c6 27 ba 38 fe 22 ba         ..'.8.".
  1070b8:	 e7 4a 1e ba e1 ac 19 ba         .J......
  1070c0:	 17 24 15 ba 75 b0 10 ba         .$..u...
  1070c8:	 e4 51 0c ba 4e 08 08 ba         .Q..N...
  1070d0:	 9b d3 03 ba 5c 67 ff b9         ....\g..
  1070d8:	 dd 50 f7 b9 74 63 ef b9         .P..tc..
  1070e0:	 e9 9e e7 b9 f8 02 e0 b9         ........
  1070e8:	 58 8f d8 b9 c5 43 d1 b9         X....C..
  1070f0:	 f8 1f ca b9 99 23 c3 b9         .....#..
  1070f8:	 61 4e bc b9 f9 9f b5 b9         aN......
  107100:	 10 18 af b9 49 b6 a8 b9         ....I...
  107108:	 4d 7a a2 b9 c1 63 9c b9         Mz...c..
  107110:	 46 72 96 b9 7a a5 90 b9         Fr..z...
  107118:	 00 fd 8a b9 6d 78 85 b9         ....mx..
  107120:	 61 17 80 b9 e9 b2 75 b9         a.....u.
  107128:	 7c 7c 6b b9 9d 8a 61 b9         ||k...a.
  107130:	 80 dc 57 b9 47 71 4e b9         ..W.GqN.
  107138:	 17 48 45 b9 07 60 3c b9         .HE..`<.
  107140:	 41 b8 33 b9 db 4f 2b b9         A.3..O+.
  107148:	 f4 25 23 b9 a1 39 1b b9         .%#..9..
  107150:	 f8 89 13 b9 10 16 0c b9         ........
  107158:	 00 dd 04 b9 ad bb fb b8         ........
  107160:	 46 2f ee b8 f9 12 e1 b8         F/......
  107168:	 d6 64 d4 b8 09 23 c8 b8         .d...#..
  107170:	 ad 4b bc b8 dc dc b0 b8         .K......
  107178:	 b1 d4 a5 b8 49 31 9b b8         ....I1..
  107180:	 be f0 90 b8 2d 11 87 b8         ....-...
  107188:	 5e 21 7b b8 c4 da 68 b8         ^!{...h.
  107190:	 c5 4a 57 b8 9f 6d 46 b8         .JW..mF.
  107198:	 8e 3f 36 b8 d3 bc 26 b8         


WOLASynthesisFilter_Float_M256_m4_r1:
  1071a0:	 e8 d3 d0 bc 04 9d fd bc         ........
  1071a8:	 e5 04 15 bd b6 0a 2b bd         ......+.
  1071b0:	 93 dd 40 bd 11 7b 56 bd         ..@..{V.
  1071b8:	 d7 e0 6b bd 44 86 80 bd         ..k.D...
  1071c0:	 eb fd 8a bd 2d 56 95 bd         ....-V..
  1071c8:	 e5 8d 9f bd ee a3 a9 bd         ........
  1071d0:	 22 97 b3 bd 67 66 bd bd         "...gf..
  1071d8:	 98 10 c7 bd a3 94 d0 bd         ........
  1071e0:	 5e f1 d9 bd ba 25 e3 bd         ^....%..
  1071e8:	 b8 30 ec bd 32 11 f5 bd         .0..2...
  1071f0:	 19 c6 fd bd 3f 27 03 be         ....?'..
  1071f8:	 aa 54 07 be cd 6a 0b be         .T...j..
  107200:	 2a 69 0f be 40 4f 13 be         *i..@O..
  107208:	 9e 1c 17 be cb d0 1a be         ........
  107210:	 54 6b 1e be c2 eb 21 be         Tk....!.
  107218:	 a8 51 25 be 9b 9c 28 be         .Q%...(.
  107220:	 29 cc 2b be f5 df 2e be         ).+.....
  107228:	 92 d7 31 be a3 b2 34 be         ..1...4.
  107230:	 c4 70 37 be a3 11 3a be         .p7...:.
  107238:	 d5 94 3c be 18 fa 3e be         ..<...>.
  107240:	 06 41 41 be 5c 69 43 be         .AA.\iC.
  107248:	 ca 72 45 be 00 5d 47 be         .rE..]G.
  107250:	 c7 27 49 be cf d2 4a be         .'I...J.
  107258:	 dc 5d 4c be b8 c8 4d be         .]L...M.
  107260:	 2e 13 4f be fa 3c 50 be         ..O..<P.
  107268:	 f3 45 51 be f3 2d 52 be         .EQ..-R.
  107270:	 cf f4 52 be 5b 9a 53 be         ..R.[.S.
  107278:	 79 1e 54 be 0a 81 54 be         y.T...T.
  107280:	 f2 c1 54 be 2b e1 54 be         ..T.+.T.
  107288:	 8c de 54 be 1c ba 54 be         ..T...T.
  107290:	 c0 73 54 be 7f 0b 54 be         .sT...T.
  107298:	 58 81 53 be 46 d5 52 be         X.S.F.R.
  1072a0:	 55 07 52 be 8d 17 51 be         U.R...Q.
  1072a8:	 01 06 50 be be d2 4e be         ..P...N.
  1072b0:	 e8 7d 4d be 90 07 4c be         .}M...L.
  1072b8:	 e0 6f 4a be fa b6 48 be         .oJ...H.
  1072c0:	 fe dc 46 be 2a e2 44 be         ..F.*.D.
  1072c8:	 a5 c6 42 be a6 8a 40 be         ..B...@.
  1072d0:	 68 2e 3e be 35 b2 3b be         h.>.5.;.
  1072d8:	 3d 16 39 be d7 5a 36 be         =.9..Z6.
  1072e0:	 4c 80 33 be ed 86 30 be         L.3...0.
  1072e8:	 04 6f 2d be fc 38 2a be         .o-..8*.
  1072f0:	 2c e5 26 be f3 73 23 be         ,.&..s#.
  1072f8:	 b5 e5 1f be e4 3a 1c be         .....:..
  107300:	 ec 73 18 be 3e 91 14 be         .s..>...
  107308:	 5a 93 10 be ac 7a 0c be         Z....z..
  107310:	 c0 47 08 be 1c fb 03 be         .G......
  107318:	 83 2a ff bd 76 2d f6 bd         .*..v-..
  107320:	 3c 00 ed bd f9 a3 e3 bd         <.......
  107328:	 d7 19 da bd 25 63 d0 bd         ....%c..
  107330:	 0e 81 c6 bd df 74 bc bd         .....t..
  107338:	 ee 3f b2 bd 8c e3 a7 bd         .?......
  107340:	 18 61 9d bd fb b9 92 bd         .a......
  107348:	 a0 ef 87 bd f7 06 7a bd         ......z.
  107350:	 0e ee 63 bd 90 97 4d bd         ..c...M.
  107358:	 8d 06 37 bd 29 3e 20 bd         ..7.)> .
  107360:	 82 41 09 bd ad 27 e4 bc         .A...'..
  107368:	 e0 70 b5 bc 3a 65 86 bc         .p..:e..
  107370:	 df 16 2e bc 4f a9 9d bb         ....O...
  107378:	 0d 73 87 3a 8a 48 e2 3b         .s.:.H.;
  107380:	 da be 51 3c f0 57 99 3c         ..Q<.W.<
  107388:	 70 f4 c9 3c 9b ad fa 3c         p..<...<
  107390:	 10 be 15 3d 38 2c 2e 3d         ...=8,.=
  107398:	 93 9d 46 3d f6 ef 5b 3d         ..F=..[=
  1073a0:	 f6 a1 d1 3d a8 4a f5 3d         ...=.J.=
  1073a8:	 bc 63 0c 3e ff 09 1e 3e         .c.>...>
  1073b0:	 e9 95 2f 3e 47 05 41 3e         ../>G.A>
  1073b8:	 e6 55 52 3e 98 85 63 3e         .UR>..c>
  1073c0:	 22 92 74 3e ac bc 82 3e         ".t>...>
  1073c8:	 86 1c 8b 3e 86 67 93 3e         ...>.g.>
  1073d0:	 95 9c 9b 3e a0 ba a3 3e         ...>...>
  1073d8:	 93 c0 ab 3e 4b ad b3 3e         ...>K..>
  1073e0:	 d3 7f bb 3e fd 36 c3 3e         ...>.6.>
  1073e8:	 d0 d1 ca 3e 2d 4f d2 3e         ...>-O.>
  1073f0:	 16 ae d9 3e 77 ed e0 3e         ...>w..>
  1073f8:	 55 0c e8 3e a0 09 ef 3e         U..>...>
  107400:	 53 e4 f5 3e 7a 9b fc 3e         S..>z..>
  107408:	 03 97 01 3f 8a cd 04 3f         ...?...?
  107410:	 ca f0 07 3f 51 00 0b 3f         ...?Q..?
  107418:	 9f fb 0d 3f 43 e2 10 3f         ...?C..?
  107420:	 c6 b3 13 3f b5 6f 16 3f         ...?.o.?
  107428:	 9b 15 19 3f 09 a5 1b 3f         ...?...?
  107430:	 8f 1d 1e 3f c6 7e 20 3f         ...?.~ ?
  107438:	 3f c8 22 3f 98 f9 24 3f         ?."?..$?
  107440:	 6d 12 27 3f 52 12 29 3f         m.'?R.)?
  107448:	 eb f8 2a 3f d5 c5 2c 3f         ..*?..,?
  107450:	 bd 78 2e 3f 46 11 30 3f         .x.?F.0?
  107458:	 1a 8f 31 3f dc f1 32 3f         ..1?..2?
  107460:	 4b 39 34 3f 09 65 35 3f         K94?.e5?
  107468:	 d3 74 36 3f 58 68 37 3f         .t6?Xh7?
  107470:	 60 3f 38 3f 9a f9 38 3f         `?8?..8?
  107478:	 c7 96 39 3f b4 16 3a 3f         ..9?..:?
  107480:	 20 79 3a 3f d8 bd 3a 3f          y:?..:?
  107488:	 a1 e4 3a 3f 4d ed 3a 3f         ..:?M.:?
  107490:	 b8 d7 3a 3f af a3 3a 3f         ..:?..:?
  107498:	 13 51 3a 3f bb df 39 3f         .Q:?..9?
  1074a0:	 8b 4f 39 3f 66 a0 38 3f         .O9?f.8?
  1074a8:	 32 d2 37 3f e1 e4 36 3f         2.7?..6?
  1074b0:	 5b d8 35 3f 9c ac 34 3f         [.5?..4?
  1074b8:	 8e 61 33 3f 36 f7 31 3f         .a3?6.1?
  1074c0:	 8e 6d 30 3f 92 c4 2e 3f         .m0?...?
  1074c8:	 55 fc 2c 3f d5 14 2b 3f         U.,?..+?
  1074d0:	 27 0e 29 3f 55 e8 26 3f         '.)?U.&?
  1074d8:	 7b a3 24 3f b5 3f 22 3f         {.$?.?"?
  1074e0:	 11 bd 1f 3f c5 1b 1d 3f         ...?...?
  1074e8:	 e3 5b 1a 3f a4 7d 17 3f         .[.?.}.?
  1074f0:	 2f 81 14 3f b3 66 11 3f         /..?.f.?
  1074f8:	 68 2e 0e 3f 86 d8 0a 3f         h..?...?
  107500:	 4f 65 07 3f 04 d5 03 3f         Oe.?...?
  107508:	 e8 27 00 3f 8c bc f8 3e         .'.?...>
  107510:	 d8 f0 f0 3e 58 ed e8 3e         ...>X..>
  107518:	 c2 b2 e0 3e c9 41 d8 3e         ...>.A.>
  107520:	 21 9b cf 3e 98 bf c6 3e         !..>...>
  107528:	 f9 af bd 3e 1b 6d b4 3e         ...>.m.>
  107530:	 dd f7 aa 3e 1e 51 a1 3e         ...>.Q.>
  107538:	 d9 79 97 3e 00 73 8d 3e         .y.>.s.>
  107540:	 8e 3d 83 3e 20 b5 71 3e         .=.> .q>
  107548:	 1e 96 5c 3e 49 20 47 3e         ..\>I G>
  107550:	 dd 55 31 3e 2d 39 1b 3e         .U1>-9.>
  107558:	 90 cc 04 3e df 24 dc 3d         ...>.$.=
  107560:	 a5 1a ae 3d de fe 7e 3d         ...=..~=
  107568:	 f5 b0 20 3d 58 ac 82 3c         .. =X..<
  107570:	 b2 34 f8 bb 3b 5a 00 bd         .4..;Z..
  107578:	 73 99 62 bd 55 dc a2 bd         s.b.U...
  107580:	 0e d6 d4 bd f6 99 03 be         ........
  107588:	 e5 f7 1c be be 81 36 be         ......6.
  107590:	 5a 34 50 be 79 0c 6a be         Z4P.y.j.
  107598:	 71 03 82 be 30 26 8e be         q...0&..
  1075a0:	 15 c2 b3 be a2 8a c9 be         ........
  1075a8:	 82 53 df be 0a 1a f5 be         .S......
  1075b0:	 ca 6d 05 bf bd 4a 10 bf         .m...J..
  1075b8:	 82 22 1b bf c7 f3 25 bf         ."....%.
  1075c0:	 23 bd 30 bf 45 7d 3b bf         #.0.E};.
  1075c8:	 bf 32 46 bf 38 dc 50 bf         .2F.8.P.
  1075d0:	 4b 78 5b bf 92 05 66 bf         Kx[...f.
  1075d8:	 a7 82 70 bf 1b ee 7a bf         ..p...z.
  1075e0:	 48 a3 82 bf 48 c5 87 bf         H...H...
  1075e8:	 66 dc 8c bf da e7 91 bf         f.......
  1075f0:	 f3 e6 96 bf 02 d9 9b bf         ........
  1075f8:	 45 bd a0 bf 14 93 a5 bf         E.......
  107600:	 b0 59 aa bf 5e 10 af bf         .Y..^...
  107608:	 78 b6 b3 bf 34 4b b8 bf         x...4K..
  107610:	 ea cd bc bf e2 3d c1 bf         .....=..
  107618:	 63 9a c5 bf bd e2 c9 bf         c.......
  107620:	 2f 16 ce bf 1a 34 d2 bf         /....4..
  107628:	 bc 3b d6 bf 6f 2c da bf         .;..o,..
  107630:	 71 05 de bf 22 c6 e1 bf         q..."...
  107638:	 ca 6d e5 bf c2 fb e8 bf         .m......
  107640:	 58 6f ec bf d6 c7 ef bf         Xo......
  107648:	 a3 04 f3 bf 10 25 f6 bf         .....%..
  107650:	 74 28 f9 bf 1f 0e fc bf         t(......
  107658:	 7c d5 fe bf f0 be 00 c0         |.......
  107660:	 58 03 02 c0 a0 37 03 c0         X....7..
  107668:	 7d 5b 04 c0 9c 6e 05 c0         }[...n..
  107670:	 b9 70 06 c0 80 61 07 c0         .p...a..
  107678:	 ab 40 08 c0 e9 0d 09 c0         .@......
  107680:	 fc c8 09 c0 93 71 0a c0         .....q..
  107688:	 68 07 0b c0 3b 8a 0b c0         h...;...
  107690:	 c6 f9 0b c0 c5 55 0c c0         .....U..
  107698:	 f5 9d 0c c0 1c d2 0c c0         ........
  1076a0:	 f1 f1 0c c0 3f fd 0c c0         ....?...
  1076a8:	 c7 f3 0c c0 4e d5 0c c0         ....N...
  1076b0:	 98 a1 0c c0 75 58 0c c0         ....uX..
  1076b8:	 a9 f9 0b c0 01 85 0b c0         ........
  1076c0:	 4c fa 0a c0 58 59 0a c0         L...XY..
  1076c8:	 f5 a1 09 c0 f2 d3 08 c0         ........
  1076d0:	 24 ef 07 c0 62 f3 06 c0         $...b...
  1076d8:	 87 e0 05 c0 63 b6 04 c0         ....c...
  1076e0:	 d6 74 03 c0 bd 1b 02 c0         .t......
  1076e8:	 f3 aa 00 c0 bf 44 fe bf         .....D..
  1076f0:	 b8 03 fb bf a7 92 f7 bf         ........
  1076f8:	 4a f1 f3 bf 7d 1f f0 bf         J...}...
  107700:	 11 1d ec bf d1 e9 e7 bf         ........
  107708:	 ad 85 e3 bf 7c f0 de bf         ....|...
  107710:	 13 2a da bf 72 32 d5 bf         .*..r2..
  107718:	 81 09 d0 bf 1d af ca bf         ........
  107720:	 4f 23 c5 bf fe 65 bf bf         O#...e..
  107728:	 32 77 b9 bf eb 56 b3 bf         2w...V..
  107730:	 29 05 ad bf fe 81 a6 bf         ).......
  107738:	 70 cd 9f bf 92 e7 98 bf         p.......
  107740:	 7d d0 91 bf 48 88 8a bf         }...H...
  107748:	 17 0f 83 bf 11 ca 76 bf         ......v.
  107750:	 90 14 67 bf fc fd 56 bf         ..g...V.
  107758:	 bc 86 46 bf 35 af 35 bf         ..F.5.5.
  107760:	 de 77 24 bf 32 e1 12 bf         .w$.2...
  107768:	 b5 eb 00 bf dd 2f dd be         ...../..
  107770:	 00 cd b7 be f9 af 91 be         ........
  107778:	 4d b4 55 be c1 99 06 be         M.U.....
  107780:	 e3 4c 58 bd 33 e2 de 3c         .LX.3..<
  107788:	 20 63 de 3d 5d e9 43 3e          c.=].C>
  107790:	 1a 00 8d 3e 45 b9 b8 3e         ...>E..>
  107798:	 5a 1e e5 3e 82 75 08 3f         Z..>.u.?
  1077a0:	 40 60 29 3f f6 c8 45 3f         @`)?..E?
  1077a8:	 fe 7f 62 3f b4 83 7f 3f         ..b?...?
  1077b0:	 40 69 8e 3f 4c 35 9d 3f         @i.?L5.?
  1077b8:	 31 25 ac 3f 0d 38 bb 3f         1%.?.8.?
  1077c0:	 f4 6c ca 3f 0d c3 d9 3f         .l.?...?
  1077c8:	 65 39 e9 3f 10 cf f8 3f         e9.?...?
  1077d0:	 92 41 04 40 52 2a 0c 40         .A.@R*.@
  1077d8:	 4f 21 14 40 07 26 1c 40         O!.@.&.@
  1077e0:	 04 38 24 40 bd 56 2c 40         .8$@.V,@
  1077e8:	 b2 81 34 40 5f b8 3c 40         ..4@_.<@
  1077f0:	 44 fa 44 40 d4 46 4d 40         D.D@.FM@
  1077f8:	 84 9d 55 40 e3 fd 5d 40         ..U@..]@
  107800:	 45 67 66 40 34 d9 6e 40         Egf@4.n@
  107808:	 11 53 77 40 67 d4 7f 40         .Sw@g..@
  107810:	 47 2e 84 40 86 75 88 40         G..@.u.@
  107818:	 a3 bf 8c 40 54 0c 91 40         ...@T..@
  107820:	 55 5b 95 40 52 ac 99 40         U[.@R..@
  107828:	 06 ff 9d 40 2e 53 a2 40         ...@.S.@
  107830:	 70 a8 a6 40 8d fe aa 40         p..@...@
  107838:	 32 55 af 40 17 ac b3 40         2U.@...@
  107840:	 ef 02 b8 40 6d 59 bc 40         ...@mY.@
  107848:	 45 af c0 40 27 04 c5 40         E..@'..@
  107850:	 cb 57 c9 40 e3 a9 cd 40         .W.@...@
  107858:	 1e fa d1 40 34 48 d6 40         ...@4H.@
  107860:	 d3 93 da 40 af dc de 40         ...@...@
  107868:	 81 22 e3 40 eb 64 e7 40         .".@.d.@
  107870:	 ad a3 eb 40 7d de ef 40         ...@}..@
  107878:	 03 15 f4 40 f1 46 f8 40         ...@.F.@
  107880:	 0a 74 fc 40 f7 4d 00 41         .t.@.M.A
  107888:	 2f 5f 02 41 82 6d 04 41         /_.A.m.A
  107890:	 cf 78 06 41 ed 80 08 41         .x.A...A
  107898:	 b5 85 0a 41 05 87 0c 41         ...A...A
  1078a0:	 b4 84 0e 41 9f 7e 10 41         ...A.~.A
  1078a8:	 9f 74 12 41 91 66 14 41         .t.A.f.A
  1078b0:	 51 54 16 41 ba 3d 18 41         QT.A.=.A
  1078b8:	 a8 22 1a 41 f4 02 1c 41         .".A...A
  1078c0:	 7d de 1d 41 1f b5 1f 41         }..A...A
  1078c8:	 b8 86 21 41 26 53 23 41         ..!A&S#A
  1078d0:	 4c 1a 25 41 f5 db 26 41         L.%A..&A
  1078d8:	 16 98 28 41 7b 4e 2a 41         ..(A{N*A
  1078e0:	 0f ff 2b 41 b3 a9 2d 41         ..+A..-A
  1078e8:	 3c 4e 2f 41 8b ec 30 41         <N/A..0A
  1078f0:	 8c 84 32 41 1e 16 34 41         ..2A..4A
  1078f8:	 18 a1 35 41 65 25 37 41         ..5Ae%7A
  107900:	 db a2 38 41 70 19 3a 41         ..8Ap.:A
  107908:	 f8 88 3b 41 61 f1 3c 41         ..;Aa.<A
  107910:	 89 52 3e 41 52 ac 3f 41         .R>AR.?A
  107918:	 b0 fe 40 41 7b 49 42 41         ..@A{IBA
  107920:	 93 8c 43 41 ed c7 44 41         ..CA..DA
  107928:	 74 fb 45 41 fe 26 47 41         t.EA.&GA
  107930:	 8c 4a 48 41 e9 65 49 41         .JHA.eIA
  107938:	 1e 79 4a 41 f9 83 4b 41         .yJA..KA
  107940:	 79 86 4c 41 7e 80 4d 41         y.LA~.MA
  107948:	 fe 71 4e 41 e4 5a 4f 41         .qNA.ZOA
  107950:	 10 3b 50 41 84 12 51 41         .;PA..QA
  107958:	 1e e1 51 41 df a6 52 41         ..QA..RA
  107960:	 9d 63 53 41 63 17 54 41         .cSAc.TA
  107968:	 1c c2 54 41 a8 63 55 41         ..TA.cUA
  107970:	 11 fc 55 41 39 8b 56 41         ..UA9.VA
  107978:	 1f 11 57 41 b9 8d 57 41         ..WA..WA
  107980:	 f1 00 58 41 c8 6a 58 41         ..XA.jXA
  107988:	 34 cb 58 41 29 22 59 41         4.XA)"YA
  107990:	 9e 6f 59 41 92 b3 59 41         .oYA..YA
  107998:	 f0 ed 59 41 7e 29 5a 41         ..YA~)ZA
  1079a0:	 cf f7 59 41 8a bc 59 41         ..YA..YA
  1079a8:	 c4 77 59 41 69 29 59 41         .wYAi)YA
  1079b0:	 98 d1 58 41 5a 70 58 41         ..XAZpXA
  1079b8:	 a7 05 58 41 88 91 57 41         ..XA..WA
  1079c0:	 1d 14 57 41 5a 8d 56 41         ..WAZ.VA
  1079c8:	 4c fd 55 41 11 64 55 41         L.UA.dUA
  1079d0:	 a9 c1 54 41 1e 16 54 41         ..TA..TA
  1079d8:	 87 61 53 41 ec a3 52 41         .aSA..RA
  1079e0:	 59 dd 51 41 ed 0d 51 41         Y.QA..QA
  1079e8:	 a8 35 50 41 aa 54 4f 41         .5PA.TOA
  1079f0:	 f2 6a 4e 41 ab 78 4d 41         .jNA.xMA
  1079f8:	 d4 7d 4c 41 8d 7a 4b 41         .}LA.zKA
  107a00:	 e1 6e 4a 41 ee 5a 49 41         .nJA.ZIA
  107a08:	 c0 3e 48 41 76 1a 47 41         .>HAv.GA
  107a10:	 24 ee 45 41 eb b9 44 41         $.EA..DA
  107a18:	 ca 7d 43 41 eb 39 42 41         .}CA.9BA
  107a20:	 6e ee 40 41 5c 9b 3f 41         n.@A\.?A
  107a28:	 e1 40 3e 41 07 df 3c 41         .@>A..<A
  107a30:	 ed 75 3b 41 b2 05 3a 41         .u;A..:A
  107a38:	 75 8e 38 41 4d 10 37 41         u.8AM.7A
  107a40:	 59 8b 35 41 c1 ff 33 41         Y.5A..3A
  107a48:	 91 6d 32 41 e9 d4 30 41         .m2A..0A
  107a50:	 fc 35 2f 41 d6 90 2d 41         .5/A..-A
  107a58:	 9f e5 2b 41 78 34 2a 41         ..+Ax4*A
  107a60:	 80 7d 28 41 d7 c0 26 41         .}(A..&A
  107a68:	 9b fe 24 41 ed 36 23 41         ..$A.6#A
  107a70:	 01 6a 21 41 e3 97 1f 41         .j!A...A
  107a78:	 bf c0 1d 41 bb e4 1b 41         ...A...A
  107a80:	 f3 03 1a 41 94 1e 18 41         ...A...A
  107a88:	 b5 34 16 41 88 46 14 41         .4.A.F.A
  107a90:	 28 54 12 41 bd 5d 10 41         (T.A.].A
  107a98:	 6d 63 0e 41 5c 65 0c 41         mc.A\e.A
  107aa0:	 ae 63 0a 41 87 5e 08 41         .c.A.^.A
  107aa8:	 13 56 06 41 73 4a 04 41         .V.AsJ.A
  107ab0:	 ca 3b 02 41 46 2a 00 41         .;.AF*.A
  107ab8:	 13 2c fc 40 6f fe f7 40         .,.@o..@
  107ac0:	 f1 cb f3 40 ea 94 ef 40         ...@...@
  107ac8:	 a3 59 eb 40 74 1a e7 40         .Y.@t..@
  107ad0:	 95 d7 e2 40 62 91 de 40         ...@b..@
  107ad8:	 2e 48 da 40 37 fc d5 40         .H.@7..@
  107ae0:	 d6 ad d1 40 4c 5d cd 40         ...@L].@
  107ae8:	 f8 0a c9 40 15 b7 c4 40         ...@...@
  107af0:	 04 62 c0 40 fa 0b bc 40         .b.@...@
  107af8:	 5b b5 b7 40 61 5e b3 40         [..@a^.@
  107b00:	 68 07 af 40 b4 b0 aa 40         h..@...@
  107b08:	 90 5a a6 40 47 05 a2 40         .Z.@G..@
  107b10:	 27 b1 9d 40 7f 5e 99 40         '..@.^.@
  107b18:	 91 0d 95 40 b2 be 90 40         ...@...@
  107b20:	 1d 72 8c 40 28 28 88 40         .r.@((.@
  107b28:	 1a e1 83 40 6d 3a 7f 40         ...@m:.@
  107b30:	 95 b9 76 40 31 40 6e 40         ..v@1@n@
  107b38:	 d9 ce 65 40 1b 66 5d 40         ..e@.f]@
  107b40:	 70 06 55 40 75 b0 4c 40         p.U@u.L@
  107b48:	 aa 64 44 40 9a 23 3c 40         .dD@.#<@
  107b50:	 cc ed 33 40 c2 c3 2b 40         ..3@..+@
  107b58:	 01 a6 23 40 0c 95 1b 40         ..#@...@
  107b60:	 60 91 13 40 80 9b 0b 40         `..@...@
  107b68:	 ea b3 03 40 2c b6 f7 3f         ...@,..?
  107b70:	 ff 22 e8 3f 36 af d8 3f         .".?6..?
  107b78:	 cd 5b c9 3f a6 29 ba 3f         .[.?.).?
  107b80:	 a4 19 ab 3f b2 2c 9c 3f         ...?.,.?
  107b88:	 a2 63 8d 3f ae 7e 7d 3f         .c.?.~}?
  107b90:	 52 81 60 3f c6 d0 43 3f         R.`?..C?
  107b98:	 b8 6e 27 3f 6a c7 0a 3f         .n'?j..?
  107ba0:	 28 ce de 3e 3a 78 b2 3e         (..>:x.>
  107ba8:	 72 ce 86 3e 60 a5 37 3e         r..>`.7>
  107bb0:	 db 1a c6 3d f6 87 7d 3c         ...=..}<
  107bb8:	 46 ec 83 bd 53 5b 12 be         F...S[..
  107bc0:	 0e 54 61 be bc 6e 97 be         .Ta..n..
  107bc8:	 6b 7a bd be b5 cb e2 be         kz......
  107bd0:	 bf b0 03 bf 3b 9d 15 bf         ....;...
  107bd8:	 d6 2a 27 bf fe 58 38 bf         .*'..X8.
  107be0:	 3d 27 49 bf 21 95 59 bf         ='I.!.Y.
  107be8:	 47 a2 69 bf 44 4e 79 bf         G.i.DNy.
  107bf0:	 62 4c 84 bf c2 c0 8b bf         bL......
  107bf8:	 14 04 93 bf 48 16 9a bf         ....H...
  107c00:	 34 f7 a0 bf ce a6 a7 bf         4.......
  107c08:	 ff 24 ae bf b4 71 b4 bf         .$...q..
  107c10:	 f8 8c ba bf b0 76 c0 bf         .....v..
  107c18:	 e4 2e c6 bf 9e b5 cb bf         ........
  107c20:	 dd 0a d1 bf ba 2e d6 bf         ........
  107c28:	 2d 21 db bf 69 e2 df bf         -!..i...
  107c30:	 6d 72 e4 bf 63 d1 e8 bf         mr..c...
  107c38:	 6d ff ec bf ad fc f0 bf         m.......
  107c40:	 43 c9 f4 bf 6b 65 f8 bf         C...ke..
  107c48:	 4e d1 fb bf 20 0d ff bf         N... ...
  107c50:	 89 0c 01 c0 b7 7a 02 c0         .....z..
  107c58:	 39 d1 03 c0 30 10 05 c0         9...0...
  107c60:	 b9 37 06 c0 02 48 07 c0         .7...H..
  107c68:	 31 41 08 c0 6c 23 09 c0         1A..l#..
  107c70:	 dd ee 09 c0 b5 a3 0a c0         ........
  107c78:	 20 42 0b c0 4b ca 0b c0          B..K...
  107c80:	 68 3c 0c c0 af 98 0c c0         h<......
  107c88:	 55 df 0c c0 88 10 0d c0         U.......
  107c90:	 88 2c 0d c0 87 33 0d c0         .,...3..
  107c98:	 c8 25 0d c0 82 03 0d c0         .%......
  107ca0:	 f3 cc 0c c0 5a 82 0c c0         ....Z...
  107ca8:	 fb 23 0c c0 10 b2 0b c0         .#......
  107cb0:	 e4 2c 0b c0 b8 94 0a c0         .,......
  107cb8:	 d1 e9 09 c0 77 2c 09 c0         ....w,..
  107cc0:	 ee 5c 08 c0 85 7b 07 c0         .\...{..
  107cc8:	 83 88 06 c0 34 84 05 c0         ....4...
  107cd0:	 e3 6e 04 c0 dc 48 03 c0         .n...H..
  107cd8:	 73 12 02 c0 ef cb 00 c0         s.......
  107ce0:	 4f eb fe bf da 1f fc bf         O.......
  107ce8:	 0d 36 f9 bf a9 2e f6 bf         .6......
  107cf0:	 46 0a f3 bf 93 c9 ef bf         F.......
  107cf8:	 2f 6d ec bf d3 f5 e8 bf         /m......
  107d00:	 17 64 e5 bf c3 b8 e1 bf         .d......
  107d08:	 6f f4 dd bf d3 17 da bf         o.......
  107d10:	 9e 23 d6 bf 8b 18 d2 bf         .#......
  107d18:	 38 f7 cd bf 6e c0 c9 bf         8...n...
  107d20:	 cd 74 c5 bf 1e 15 c1 bf         .t......
  107d28:	 01 a2 bc bf 37 1c b8 bf         ....7...
  107d30:	 6f 84 b3 bf 62 db ae bf         o...b...
  107d38:	 c9 21 aa bf 53 58 a5 bf         .!..SX..
  107d40:	 c3 7f a0 bf c8 98 9b bf         ........
  107d48:	 1a a4 96 bf 6a a2 91 bf         ....j...
  107d50:	 79 94 8c bf ee 7a 87 bf         y....z..
  107d58:	 93 56 82 bf 0d 50 7a bf         .V...Pz.
  107d60:	 1c e0 6f bf b1 5e 65 bf         ..o..^e.
  107d68:	 33 cd 5a bf 0d 2d 50 bf         3.Z..-P.
  107d70:	 a6 7f 45 bf 58 c6 3a bf         ..E.X.:.
  107d78:	 8b 02 30 bf a3 35 25 bf         ..0..5%.
  107d80:	 fb 60 1a bf eb 85 0f bf         .`......
  107d88:	 d0 a5 04 bf 12 84 f3 be         ........
  107d90:	 cd b7 dd be 75 e9 c7 be         ....u...
  107d98:	 ad 1b b2 be f5 7b 9b be         .....{..
  107da0:	 fd 72 7c be bc 72 62 be         .r|..rb.
  107da8:	 44 95 48 be d5 dd 2e be         D.H.....
  107db0:	 a3 4f 15 be b1 db f7 bd         .O......
  107db8:	 14 77 c5 bd 90 77 93 bd         .w...w..
  107dc0:	 36 c6 43 bd 62 fe c2 bc         6.C.b...
  107dc8:	 03 64 16 b8 8d 76 c0 3c         .d...v.<
  107dd0:	 51 98 3f 3d 5f f3 8e 3d         Q.?=_..=
  107dd8:	 f3 8d bd 3d af 96 eb 3d         ...=...=
  107de0:	 44 84 0c 3e 41 ef 22 3e         D..>A.">
  107de8:	 e5 09 39 3e da d1 4e 3e         ..9>..N>
  107df0:	 c6 44 64 3e 81 60 79 3e         .Dd>.`y>
  107df8:	 69 11 87 3e cf 44 91 3e         i..>.D.>
  107e00:	 6b 49 9b 3e 43 1e a5 3e         kI.>C..>
  107e08:	 5c c2 ae 3e cf 34 b8 3e         \..>.4.>
  107e10:	 b4 74 c1 3e 27 81 ca 3e         .t.>'..>
  107e18:	 62 59 d3 3e 83 fc db 3e         bY.>...>
  107e20:	 ca 69 e4 3e 86 a0 ec 3e         .i.>...>
  107e28:	 03 a0 f4 3e 82 67 fc 3e         ...>.g.>
  107e30:	 37 fb 01 3f 19 a6 05 3f         7..?...?
  107e38:	 12 34 09 3f e2 a4 0c 3f         .4.?...?
  107e40:	 4b f8 0f 3f 0d 2e 13 3f         K..?...?
  107e48:	 ef 45 16 3f bd 3f 19 3f         .E.?.?.?
  107e50:	 42 1b 1c 3f 4d d8 1e 3f         B..?M..?
  107e58:	 c5 76 21 3f 75 f6 23 3f         .v!?u.#?
  107e60:	 40 57 26 3f 13 99 28 3f         @W&?..(?
  107e68:	 c8 bb 2a 3f 53 bf 2c 3f         ..*?S.,?
  107e70:	 9b a3 2e 3f 98 68 30 3f         ...?.h0?
  107e78:	 46 0e 32 3f 94 94 33 3f         F.2?..3?
  107e80:	 87 fb 34 3f 26 43 36 3f         ..4?&C6?
  107e88:	 6b 6b 37 3f 6b 74 38 3f         kk7?kt8?
  107e90:	 2c 5e 39 3f c8 28 3a 3f         ,^9?.(:?
  107e98:	 49 d4 3a 3f d0 60 3b 3f         I.:?.`;?
  107ea0:	 78 ce 3b 3f 57 1d 3c 3f         x.;?W.<?
  107ea8:	 9f 4d 3c 3f 6c 5f 3c 3f         .M<?l_<?
  107eb0:	 ec 52 3c 3f 4b 28 3c 3f         .R<?K(<?
  107eb8:	 bb df 3b 3f 73 79 3b 3f         ..;?sy;?
  107ec0:	 a3 f5 3a 3f 82 54 3a 3f         ..:?.T:?
  107ec8:	 59 96 39 3f 65 bb 38 3f         Y.9?e.8?
  107ed0:	 e4 c3 37 3f 27 b0 36 3f         ..7?'.6?
  107ed8:	 6a 80 35 3f 05 35 34 3f         j.5?.54?
  107ee0:	 3c ce 32 3f 6b 4c 31 3f         <.2?kL1?
  107ee8:	 de af 2f 3f f6 f8 2d 3f         ../?..-?
  107ef0:	 02 28 2c 3f 67 3d 2a 3f         .(,?g=*?
  107ef8:	 82 39 28 3f af 1c 26 3f         .9(?..&?
  107f00:	 52 e7 23 3f d6 99 21 3f         R.#?..!?
  107f08:	 a4 34 1f 3f 21 b8 1c 3f         .4.?!..?
  107f10:	 b8 24 1a 3f da 7a 17 3f         .$.?.z.?
  107f18:	 f9 ba 14 3f 88 e5 11 3f         ...?...?
  107f20:	 f5 fa 0e 3f ba fb 0b 3f         ...?...?
  107f28:	 4e e8 08 3f 2d c1 05 3f         N..?-..?
  107f30:	 cd 86 02 3f 53 73 fe 3e         ...?Ss.>
  107f38:	 91 b4 f7 3e 37 d2 f0 3e         ...>7..>
  107f40:	 60 cd e9 3e 08 a7 e2 3e         `..>...>
  107f48:	 2c 60 db 3e e1 f9 d3 3e         ,`.>...>
  107f50:	 24 75 cc 3e 0d d3 c4 3e         $u.>...>
  107f58:	 a1 14 bd 3e ed 3a b5 3e         ...>.:.>
  107f60:	 10 47 ad 3e 0c 3a a5 3e         .G.>.:.>
  107f68:	 02 15 9d 3e 01 d9 94 3e         ...>...>
  107f70:	 23 87 8c 3e 7b 20 84 3e         #..>{ .>
  107f78:	 46 4c 77 3e 64 32 66 3e         FLw>d2f>
  107f80:	 83 f5 54 3e d6 97 43 3e         ..T>..C>
  107f88:	 92 1b 32 3e ea 82 20 3e         ..2>.. >
  107f90:	 12 d0 0e 3e 6d 0a fa 3d         ...>m..=
  107f98:	 25 49 d6 3d 98 8c b0 3d         %I.=...=
  107fa0:	 9f 0c 44 3d 7f 78 2b 3d         ..D=.x+=
  107fa8:	 1d e8 12 3d 99 be f4 3c         ...=...<
  107fb0:	 79 c3 c3 3c 3c e6 92 3c         y..<<..<
  107fb8:	 66 5c 44 3c 46 8a c6 3b         f\D<F..;
  107fc0:	 cf 40 25 39 aa 4b bb bb         .@%9.K..
  107fc8:	 79 5d 3d bc 02 42 8e bc         y]=..B..
  107fd0:	 f8 85 bd bc e1 73 ec bc         .....s..
  107fd8:	 92 82 0d bd 8d 99 24 bd         ......$.
  107fe0:	 bf 7b 3b bd f0 25 52 bd         .{;..%R.
  107fe8:	 ff 94 68 bd db c5 7e bd         ..h...~.
  107ff0:	 ca 5a 8a bd 8d 30 95 bd         .Z...0..
  107ff8:	 cc e2 9f bd 13 70 aa bd         .....p..
  108000:	 02 d7 b4 bd 37 16 bf bd         ....7...
  108008:	 5f 2c c9 bd 26 18 d3 bd         _,..&...
  108010:	 48 d8 dc bd 8a 6b e6 bd         H....k..
  108018:	 a8 d0 ef bd 6f 06 f9 bd         ....o...
  108020:	 e8 05 01 be cd 6f 05 be         .....o..
  108028:	 52 c0 09 be fd f6 0d be         R.......
  108030:	 4a 13 12 be b1 14 16 be         J.......
  108038:	 b9 fa 19 be eb c4 1d be         ........
  108040:	 db 72 21 be 0f 04 25 be         .r!...%.
  108048:	 24 78 28 be b4 ce 2b be         $x(...+.
  108050:	 5b 07 2f be bb 21 32 be         [./..!2.
  108058:	 7d 1d 35 be 49 fa 37 be         }.5.I.7.
  108060:	 d6 b7 3a be cc 55 3d be         ..:..U=.
  108068:	 ef d3 3f be f5 31 42 be         ..?..1B.
  108070:	 a2 6f 44 be c0 8c 46 be         .oD...F.
  108078:	 0d 89 48 be 65 64 4a be         ..H.edJ.
  108080:	 8e 1e 4c be 6b b7 4d be         ..L.k.M.
  108088:	 cf 2e 4f be 9e 84 50 be         ..O...P.
  108090:	 b7 b8 51 be 0d cb 52 be         ..Q...R.
  108098:	 7d bb 53 be 08 8a 54 be         }.S...T.
  1080a0:	 93 36 55 be 25 c1 55 be         .6U.%.U.
  1080a8:	 b7 29 56 be 48 70 56 be         .)V.HpV.
  1080b0:	 e1 94 56 be 87 97 56 be         ..V...V.
  1080b8:	 55 78 56 be 4b 37 56 be         UxV.K7V.
  1080c0:	 8b d4 55 be 29 50 55 be         ..U.)PU.
  1080c8:	 4d aa 54 be 0c e3 53 be         M.T...S.
  1080d0:	 94 fa 52 be 0d f1 51 be         ..R...Q.
  1080d8:	 a0 c6 50 be 8a 7b 4f be         ..P..{O.
  1080e0:	 eb 0f 4e be 0e 84 4c be         ..N...L.
  1080e8:	 28 d8 4a be 7d 0c 49 be         (.J.}.I.
  1080f0:	 48 21 47 be d4 16 45 be         H!G...E.
  1080f8:	 64 ed 42 be 4f a5 40 be         d.B.O.@.
  108100:	 e5 3e 3e be 71 ba 3b be         .>>.q.;.
  108108:	 50 18 39 be d2 58 36 be         P.9..X6.
  108110:	 64 7c 33 be 5c 83 30 be         d|3.\.0.
  108118:	 19 6e 2d be 05 3d 2a be         .n-..=*.
  108120:	 8d f0 26 be 14 89 23 be         ..&...#.
  108128:	 0d 07 20 be dd 6a 1c be         .. ..j..
  108130:	 09 b5 18 be f7 e5 14 be         ........
  108138:	 1f fe 10 be 01 fe 0c be         ........
  108140:	 15 e6 08 be e2 b6 04 be         ........
  108148:	 da 70 00 be 07 29 f8 bd         .p...)..
  108150:	 d4 44 ef bd 10 36 e6 bd         .D...6..
  108158:	 e0 fd dc bd 43 9d d3 bd         ....C...
  108160:	 61 15 ca bd 45 67 c0 bd         a...Eg..
  108168:	 11 94 b6 bd e8 9c ac bd         ........
  108170:	 e4 82 a2 bd 2b 47 98 bd         ....+G..
  108178:	 e7 ea 8d bd 42 6f 83 bd         ....Bo..
  108180:	 bd aa 71 bd dd 3c 5c bd         ..q..<\.
  108188:	 49 97 46 bd 53 bc 30 bd         I.F.S.0.
  108190:	 6f ae 1a bd ec 6f 04 bd         o....o..
  108198:	 8c 06 dc bc 99 58 ac bc         .....X..
  1081a0:	 73 79 73 00 6f 73 63 00         


ack_cmd:
  1081a8:	 55 aa 01 20 22 75 61 72         U.. "uar
  1081b0:	 74 00 00 00                     t...


spi_flash_io_nor:
  1081b4:	 f0 bb 02 00 00 00 00 00         ........
  1081bc:	 00 00 00 00 d6 f9 10 00         


nor_flash_boot_table:
  1081c4:	 00 10 00 00 00 00 01 00         ........
  1081cc:	 00 00 08 00 00 00 10 00         ........
  1081d4:	 28 6e 75 6c 6c 29 00            (


CrcDecode.keylcode:
  1081db:	 c3 cf c0 e8 ce d2 b0 ae         ........
  1081e3:	 c4 e3 a3 ac d3 f1 c1 d6         ........
  1081eb:	 00                              .......


mdct_tab_256:
  1081ec:	 43 ec ff 3f f1 43 32 00         C..?.C2.
  1081f4:	 3a c1 f9 3f f5 54 c4 01         :..?.T..
  1081fc:	 a9 b8 e9 3f 38 20 56 03         ...?8 V.
  108204:	 0b d5 cf 3f c5 67 e7 04         ...?.g..
  10820c:	 5b 1a ac 3f bb ed 77 06         [..?..w.
  108214:	 1e 8e 7e 3f 57 74 07 08         ..~?Wt..
  10821c:	 59 37 47 3f fd bd 95 09         Y7G?....
  108224:	 95 1e 06 3f 42 8d 22 0b         ...?B.".
  10822c:	 db 4d bb 3e f5 a4 ad 0c         .M.>....
  108234:	 b4 d0 66 3e 2a c8 36 0e         ..f>*.6.
  10823c:	 2a b4 08 3e 40 ba bd 0f         *..>@...
  108244:	 bd 06 a1 3d f0 3e 42 11         ...=.>B.
  10824c:	 6c d8 2f 3d 4f 1a c4 12         l./=O...
  108254:	 aa 3a b5 3c dd 10 43 14         .:.<..C.
  10825c:	 60 40 31 3c 8c e7 be 15         `@1<....
  108264:	 e7 fd a3 3b c9 63 37 17         ...;.c7.
  10826c:	 09 89 0d 3b 87 4b ac 18         ...;.K..
  108274:	 f8 f8 6d 3a 44 65 1d 1a         ..m:De..
  10827c:	 4f 66 c5 39 15 78 8a 1b         Of.9.x..
  108284:	 0e eb 13 39 af 4b f3 1c         ...9.K..
  10828c:	 92 a2 59 38 6d a8 57 1e         ..Y8m.W.
  108294:	 96 a9 96 37 5c 57 b7 1f         ...7\W..
  10829c:	 2a 1e cb 36 40 22 12 21         *..6@".!
  1082a4:	 b1 1f f7 35 a0 d3 67 22         ...5..g"
  1082ac:	 dd ce 1a 35 ca 36 b8 23         ...5.6.#
  1082b4:	 a6 4d 36 34 df 17 03 25         .M64...%
  1082bc:	 48 bf 49 33 d9 43 48 26         H.I3.CH&
  1082c4:	 40 48 55 32 93 88 87 27         @HU2...'
  1082cc:	 3e 0e 59 31 d2 b4 c0 28         >.Y1...(
  1082d4:	 28 38 55 30 4c 98 f3 29         (8U0L..)
  1082dc:	 0f ee 49 2f ac 03 20 2b         ..I/.. +
  1082e4:	 2c 59 37 2e a0 c8 45 2c         ,Y7...E,
  1082ec:	 d5 a3 1d 2d da b9 64 2d         ...-..d-
  1082f4:	 7c f9 fc 2b 1c ab 7c 2e         |..+..|.
  1082fc:	 a3 86 d5 2a 3a 71 8d 2f         ...*:q./
  108304:	 db 78 a7 29 23 e2 96 30         .x.)#..0
  10830c:	 b6 fe 72 28 ea d4 98 31         ..r(...1
  108314:	 c8 47 38 27 c7 21 93 32         .G8'.!.2
  10831c:	 97 84 f7 25 22 a2 85 33         ...%"..3
  108324:	 99 e6 b0 24 95 30 70 34         ...$.0p4
  10832c:	 2e a0 64 23 f4 a8 52 35         ..d#..R5
  108334:	 92 e4 12 22 55 e8 2c 36         ..."U.,6
  10833c:	 d8 e7 bb 20 0e cd fe 36         ... ...6
  108344:	 e6 de 5f 1f c2 36 c8 37         .._..6.7
  10834c:	 67 ff fe 1d 63 06 89 38         g...c..8
  108354:	 c4 7f 99 1c 33 1e 41 39         ....3.A9
  10835c:	 1e 97 2f 1b d2 61 f0 39         ../..a.9
  108364:	 44 7d c1 19 36 b6 96 3a         D}..6..:
  10836c:	 ab 6a 4f 18 bb 01 34 3b         .jO...4;
  108374:	 64 98 d9 16 1f 2c c8 3b         d....,.;
  10837c:	 13 40 60 15 88 1e 53 3c         .@`...S<
  108384:	 e9 9b e3 13 8b c3 d4 3c         .......<
  10838c:	 99 e6 63 12 28 07 4d 3d         ..c.(.M=
  108394:	 4e 5b e1 10 d4 d6 bb 3d         N[.....=
  10839c:	 a3 35 5c 0f 79 21 21 3e         .5\.y!!>
  1083a4:	 9a b1 d4 0d 78 d7 7c 3e         ....x.|>
  1083ac:	 94 0b 4b 0c ad ea ce 3e         ..K....>
  1083b4:	 43 80 bf 0a 70 4e 17 3f         C...pN.?
  1083bc:	 a7 4c 32 09 96 f7 55 3f         .L2...U?
  1083c4:	 ff ad a3 07 77 dc 8a 3f         ....w..?
  1083cc:	 c5 e1 13 06 ea f4 b5 3f         .......?
  1083d4:	 9d 25 83 04 4a 3a d7 3f         .%..J:.?
  1083dc:	 55 b7 f1 02 76 a7 ee 3f         U...v..?
  1083e4:	 d2 d4 5f 01 d1 38 fc 3f         


mdct_tab_2048:
  1083ec:	 b1 ff ff 3f 7f 48 06 00         ...?.H..
  1083f4:	 05 e7 ff 3f 6e 8c 38 00         ...?n.8.
  1083fc:	 de a6 ff 3f 3b d0 6a 00         ...?;.j.
  108404:	 3c 3f ff 3f c5 13 9d 00         <?.?....
  10840c:	 21 b0 fe 3f ef 56 cf 00         !..?.V..
  108414:	 8c f9 fd 3f 98 99 01 01         ...?....
  10841c:	 7e 1b fd 3f a3 db 33 01         ~..?..3.
  108424:	 f7 15 fc 3f f0 1c 66 01         ...?..f.
  10842c:	 f9 e8 fa 3f 60 5d 98 01         ...?`]..
  108434:	 83 94 f9 3f d4 9c ca 01         ...?....
  10843c:	 96 18 f8 3f 2e db fc 01         ...?....
  108444:	 34 75 f6 3f 4d 18 2f 02         4u.?M./.
  10844c:	 5d aa f4 3f 14 54 61 02         ]..?.Ta.
  108454:	 13 b8 f2 3f 62 8e 93 02         ...?b...
  10845c:	 56 9e f0 3f 1a c7 c5 02         V..?....
  108464:	 28 5d ee 3f 1c fe f7 02         (].?....
  10846c:	 8b f4 eb 3f 49 33 2a 03         ...?I3*.
  108474:	 80 64 e9 3f 82 66 5c 03         .d.?.f\.
  10847c:	 08 ad e6 3f a9 97 8e 03         ...?....
  108484:	 26 ce e3 3f 9e c6 c0 03         &..?....
  10848c:	 da c7 e0 3f 42 f3 f2 03         ...?B...
  108494:	 27 9a dd 3f 77 1d 25 04         '..?w.%.
  10849c:	 0f 45 da 3f 1d 45 57 04         .E.?.EW.
  1084a4:	 94 c8 d6 3f 16 6a 89 04         ...?.j..
  1084ac:	 b7 24 d3 3f 42 8c bb 04         .$.?B...
  1084b4:	 7c 59 cf 3f 83 ab ed 04         |Y.?....
  1084bc:	 e4 66 cb 3f b9 c7 1f 05         .f.?....
  1084c4:	 f3 4c c7 3f c7 e0 51 05         .L.?..Q.
  1084cc:	 aa 0b c3 3f 8c f6 83 05         ...?....
  1084d4:	 0c a3 be 3f eb 08 b6 05         ...?....
  1084dc:	 1b 13 ba 3f c3 17 e8 05         ...?....
  1084e4:	 dc 5b b5 3f f7 22 1a 06         .[.?."..
  1084ec:	 50 7d b0 3f 67 2a 4c 06         P}.?g*L.
  1084f4:	 7b 77 ab 3f f5 2d 7e 06         {w.?.-~.
  1084fc:	 5f 4a a6 3f 81 2d b0 06         _J.?.-..
  108504:	 00 f6 a0 3f ee 28 e2 06         ...?.(..
  10850c:	 62 7a 9b 3f 1b 20 14 07         bz.?. ..
  108514:	 87 d7 95 3f eb 12 46 07         ...?..F.
  10851c:	 72 0d 90 3f 3d 01 78 07         r..?=.x.
  108524:	 29 1c 8a 3f f5 ea a9 07         )..?....
  10852c:	 ae 03 84 3f f2 cf db 07         ...?....
  108534:	 05 c4 7d 3f 16 b0 0d 08         ..}?....
  10853c:	 31 5d 77 3f 43 8b 3f 08         1]w?C.?.
  108544:	 38 cf 70 3f 59 61 71 08         8.p?Yaq.
  10854c:	 1c 1a 6a 3f 3a 32 a3 08         ..j?:2..
  108554:	 e2 3d 63 3f c6 fd d4 08         .=c?....
  10855c:	 8f 3a 5c 3f e0 c3 06 09         .:\?....
  108564:	 26 10 55 3f 69 84 38 09         &.U?i.8.
  10856c:	 ac be 4d 3f 42 3f 6a 09         ..M?B?j.
  108574:	 26 46 46 3f 4c f4 9b 09         &FF?L...
  10857c:	 97 a6 3e 3f 68 a3 cd 09         ..>?h...
  108584:	 06 e0 36 3f 78 4c ff 09         ..6?xL..
  10858c:	 76 f2 2e 3f 5e ef 30 0a         v..?^.0.
  108594:	 ec dd 26 3f fa 8b 62 0a         ..&?..b.
  10859c:	 6e a2 1e 3f 2f 22 94 0a         n..?/"..
  1085a4:	 01 40 16 3f dc b1 c5 0a         .@.?....
  1085ac:	 a9 b6 0d 3f e5 3a f7 0a         ...?.:..
  1085b4:	 6d 06 05 3f 2a bd 28 0b         m..?*.(.
  1085bc:	 50 2f fc 3e 8d 38 5a 0b         P/.>.8Z.
  1085c4:	 5a 31 f3 3e f0 ac 8b 0b         Z1.>....
  1085cc:	 8e 0c ea 3e 33 1a bd 0b         ...>3...
  1085d4:	 f4 c0 e0 3e 38 80 ee 0b         ...>8...
  1085dc:	 91 4e d7 3e e1 de 1f 0c         .N.>....
  1085e4:	 6a b5 cd 3e 10 36 51 0c         j..>.6Q.
  1085ec:	 85 f5 c3 3e a5 85 82 0c         ...>....
  1085f4:	 e9 0e ba 3e 84 cd b3 0c         ...>....
  1085fc:	 9c 01 b0 3e 8c 0d e5 0c         ...>....
  108604:	 a3 cd a5 3e a0 45 16 0d         ...>.E..
  10860c:	 06 73 9b 3e a1 75 47 0d         .s.>.uG.
  108614:	 ca f1 90 3e 71 9d 78 0d         ...>q.x.
  10861c:	 f5 49 86 3e f2 bc a9 0d         .I.>....
  108624:	 90 7b 7b 3e 06 d4 da 0d         .{{>....
  10862c:	 9f 86 70 3e 8e e2 0b 0e         ..p>....
  108634:	 2b 6b 65 3e 6b e8 3c 0e         +ke>k.<.
  10863c:	 39 29 5a 3e 80 e5 6d 0e         9)Z>..m.
  108644:	 d1 c0 4e 3e af d9 9e 0e         ..N>....
  10864c:	 fa 31 43 3e d9 c4 cf 0e         .1C>....
  108654:	 bb 7c 37 3e df a6 00 0f         .|7>....
  10865c:	 1b a1 2b 3e a5 7f 31 0f         ..+>..1.
  108664:	 21 9f 1f 3e 0c 4f 62 0f         !..>.Ob.
  10866c:	 d5 76 13 3e f5 14 93 0f         .v.>....
  108674:	 3f 28 07 3e 43 d1 c3 0f         ?(.>C...
  10867c:	 65 b3 fa 3d d7 83 f4 0f         e..=....
  108684:	 51 18 ee 3d 94 2c 25 10         Q..=.,%.
  10868c:	 08 57 e1 3d 5b cb 55 10         .W.=[.U.
  108694:	 94 6f d4 3d 0e 60 86 10         .o.=.`..
  10869c:	 fc 61 c7 3d 90 ea b6 10         .a.=....
  1086a4:	 48 2e ba 3d c3 6a e7 10         H..=.j..
  1086ac:	 81 d4 ac 3d 88 e0 17 11         ...=....
  1086b4:	 af 54 9f 3d c2 4b 48 11         .T.=.KH.
  1086bc:	 d9 ae 91 3d 53 ac 78 11         ...=S.x.
  1086c4:	 09 e3 83 3d 1d 02 a9 11         ...=....
  1086cc:	 47 f1 75 3d 02 4d d9 11         G.u=.M..
  1086d4:	 9b d9 67 3d e5 8c 09 12         ..g=....
  1086dc:	 0e 9c 59 3d a7 c1 39 12         ..Y=..9.
  1086e4:	 aa 38 4b 3d 2b eb 69 12         .8K=+.i.
  1086ec:	 76 af 3c 3d 54 09 9a 12         v.<=T...
  1086f4:	 7c 00 2e 3d 03 1c ca 12         |..=....
  1086fc:	 c5 2b 1f 3d 1b 23 fa 12         .+.=.#..
  108704:	 5a 31 10 3d 7e 1e 2a 13         Z1.=~.*.
  10870c:	 45 11 01 3d 0e 0e 5a 13         E..=..Z.
  108714:	 8e cb f1 3c af f1 89 13         ...<....
  10871c:	 3f 60 e2 3c 43 c9 b9 13         ?`.<C...
  108724:	 62 cf d2 3c ab 94 e9 13         b..<....
  10872c:	 ff 18 c3 3c cb 53 19 14         ...<.S..
  108734:	 22 3d b3 3c 85 06 49 14         "=.<..I.
  10873c:	 d3 3b a3 3c bc ac 78 14         .;.<..x.
  108744:	 1d 15 93 3c 52 46 a8 14         ...<RF..
  10874c:	 09 c9 82 3c 2a d3 d7 14         ...<*...
  108754:	 a2 57 72 3c 27 53 07 15         .Wr<'S..
  10875c:	 f1 c0 61 3c 2b c6 36 15         ..a<+.6.
  108764:	 01 05 51 3c 18 2c 66 15         ..Q<.,f.
  10876c:	 dd 23 40 3c d3 84 95 15         .#@<....
  108774:	 8e 1d 2f 3c 3e d0 c4 15         ../<>...
  10877c:	 1f f2 1d 3c 3a 0e f4 15         ...<:...
  108784:	 9b a1 0c 3c ac 3e 23 16         ...<.>#.
  10878c:	 0c 2c fb 3b 76 61 52 16         .,.;vaR.
  108794:	 7e 91 e9 3b 7c 76 81 16         ~..;|v..
  10879c:	 fa d1 d7 3b 9f 7d b0 16         ...;.}..
  1087a4:	 8d ed c5 3b c3 76 df 16         ...;.v..
  1087ac:	 40 e4 b3 3b cc 61 0e 17         @..;.a..
  1087b4:	 20 b6 a1 3b 9b 3e 3d 17          ..;.>=.
  1087bc:	 37 63 8f 3b 15 0d 6c 17         7c.;..l.
  1087c4:	 90 eb 7c 3b 1c cd 9a 17         ..|;....
  1087cc:	 38 4f 6a 3b 93 7e c9 17         8Oj;.~..
  1087d4:	 39 8e 57 3b 5e 21 f8 17         9.W;^!..
  1087dc:	 a0 a8 44 3b 61 b5 26 18         ..D;a.&.
  1087e4:	 77 9e 31 3b 7d 3a 55 18         w.1;}:U.
  1087ec:	 ca 6f 1e 3b 97 b0 83 18         .o.;....
  1087f4:	 a6 1c 0b 3b 91 17 b2 18         ...;....
  1087fc:	 16 a5 f7 3a 50 6f e0 18         ...:Po..
  108804:	 26 09 e4 3a b7 b7 0e 19         &..:....
  10880c:	 e3 48 d0 3a a9 f0 3c 19         .H.:..<.
  108814:	 58 64 bc 3a 09 1a 6b 19         Xd.:..k.
  10881c:	 92 5b a8 3a bb 33 99 19         .[.:.3..
  108824:	 9d 2e 94 3a a3 3d c7 19         ...:.=..
  10882c:	 86 dd 7f 3a a4 37 f5 19         ...:.7..
  108834:	 59 68 6b 3a a2 21 23 1a         Yhk:.!#.
  10883c:	 23 cf 56 3a 81 fb 50 1a         #.V:..P.
  108844:	 f0 11 42 3a 24 c5 7e 1a         ..B:$.~.
  10884c:	 cd 30 2d 3a 6f 7e ac 1a         .0-:o~..
  108854:	 c8 2b 18 3a 46 27 da 1a         .+.:F'..
  10885c:	 ed 02 03 3a 8c bf 07 1b         ...:....
  108864:	 49 b6 ed 39 27 47 35 1b         I..9'G5.
  10886c:	 e9 45 d8 39 f8 bd 62 1b         .E.9..b.
  108874:	 da b1 c2 39 e5 23 90 1b         ...9.#..
  10887c:	 2b fa ac 39 d2 78 bd 1b         +..9.x..
  108884:	 e7 1e 97 39 a1 bc ea 1b         ...9....
  10888c:	 1e 20 81 39 39 ef 17 1c         . .99...
  108894:	 dc fd 6a 39 7c 10 45 1c         ..j9|.E.
  10889c:	 2e b8 54 39 4f 20 72 1c         ..T9O r.
  1088a4:	 23 4f 3e 39 96 1e 9f 1c         #O>9....
  1088ac:	 c9 c2 27 39 35 0b cc 1c         ..'95...
  1088b4:	 2d 13 11 39 11 e6 f8 1c         -..9....
  1088bc:	 5e 40 fa 38 0d af 25 1d         ^@.8..%.
  1088c4:	 69 4a e3 38 0f 66 52 1d         iJ.8.fR.
  1088cc:	 5d 31 cc 38 fb 0a 7f 1d         ]1.8....
  1088d4:	 47 f5 b4 38 b5 9d ab 1d         G..8....
  1088dc:	 37 96 9d 38 21 1e d8 1d         7..8!...
  1088e4:	 3b 14 86 38 24 8c 04 1e         ;..8$...
  1088ec:	 60 6f 6e 38 a4 e7 30 1e         `on8..0.
  1088f4:	 b6 a7 56 38 84 30 5d 1e         ..V8.0].
  1088fc:	 4c bd 3e 38 a8 66 89 1e         L.>8.f..
  108904:	 30 b0 26 38 f7 89 b5 1e         0.&8....
  10890c:	 71 80 0e 38 54 9a e1 1e         q..8T...
  108914:	 1d 2e f6 37 a5 97 0d 1f         ...7....
  10891c:	 45 b9 dd 37 ce 81 39 1f         E..7..9.
  108924:	 f6 21 c5 37 b5 58 65 1f         .!.7.Xe.
  10892c:	 41 68 ac 37 3d 1c 91 1f         Ah.7=...
  108934:	 34 8c 93 37 4d cc bc 1f         4..7M...
  10893c:	 df 8d 7a 37 c8 68 e8 1f         ..z7.h..
  108944:	 51 6d 61 37 96 f1 13 20         Qma7... 
  10894c:	 9a 2a 48 37 99 66 3f 20         .*H7.f? 
  108954:	 c9 c5 2e 37 b8 c7 6a 20         ...7..j 
  10895c:	 ee 3e 15 37 d9 14 96 20         .>.7... 
  108964:	 18 96 fb 36 df 4d c1 20         ...6.M. 
  10896c:	 58 cb e1 36 b1 72 ec 20         X..6.r. 
  108974:	 bd de c7 36 34 83 17 21         ...64..!
  10897c:	 58 d0 ad 36 4d 7f 42 21         X..6M.B!
  108984:	 38 a0 93 36 e2 66 6d 21         8..6.fm!
  10898c:	 6e 4e 79 36 d8 39 98 21         nNy6.9.!
  108994:	 09 db 5e 36 15 f8 c2 21         ..^6...!
  10899c:	 1b 46 44 36 7f a1 ed 21         .FD6...!
  1089a4:	 b4 8f 29 36 fb 35 18 22         ..)6.5."
  1089ac:	 e3 b7 0e 36 6f b5 42 22         ...6o.B"
  1089b4:	 ba be f3 35 c1 1f 6d 22         ...5..m"
  1089bc:	 49 a4 d8 35 d7 74 97 22         I..5.t."
  1089c4:	 a1 68 bd 35 96 b4 c1 22         .h.5..."
  1089cc:	 d3 0b a2 35 e5 de eb 22         ...5..."
  1089d4:	 ef 8d 86 35 a8 f3 15 23         ...5...#
  1089dc:	 08 ef 6a 35 c8 f2 3f 23         ..j5..?#
  1089e4:	 2c 2f 4f 35 29 dc 69 23         ,/O5).i#
  1089ec:	 6f 4e 33 35 b2 af 93 23         oN35...#
  1089f4:	 e0 4c 17 35 48 6d bd 23         .L.5Hm.#
  1089fc:	 92 2a fb 34 d3 14 e7 23         .*.4...#
  108a04:	 95 e7 de 34 39 a6 10 24         ...49..$
  108a0c:	 fb 83 c2 34 5f 21 3a 24         ...4_!:$
  108a14:	 d5 ff a5 34 2c 86 63 24         ...4,.c$
  108a1c:	 36 5b 89 34 87 d4 8c 24         6[.4...$
  108a24:	 2f 96 6c 34 57 0c b6 24         /.l4W..$
  108a2c:	 d1 b0 4f 34 81 2d df 24         ..O4.-.$
  108a34:	 2e ab 32 34 ed 37 08 25         ..24.7.%
  108a3c:	 59 85 15 34 81 2b 31 25         Y..4.+1%
  108a44:	 62 3f f8 33 23 08 5a 25         b?.3#.Z%
  108a4c:	 5e d9 da 33 bc cd 82 25         ^..3...%
  108a54:	 5c 53 bd 33 30 7c ab 25         \S.30|.%
  108a5c:	 70 ad 9f 33 69 13 d4 25         p..3i..%
  108a64:	 ac e7 81 33 4b 93 fc 25         ...3K..%
  108a6c:	 23 02 64 33 bf fb 24 26         #.d3..$&
  108a74:	 e6 fc 45 33 ac 4c 4d 26         ..E3.LM&
  108a7c:	 08 d8 27 33 f8 85 75 26         ..'3..u&
  108a84:	 9c 93 09 33 8b a7 9d 26         ...3...&
  108a8c:	 b5 2f eb 32 4c b1 c5 26         ./.2L..&
  108a94:	 64 ac cc 32 22 a3 ed 26         d..2"..&
  108a9c:	 be 09 ae 32 f5 7c 15 27         ...2.|.'
  108aa4:	 d5 47 8f 32 ac 3e 3d 27         .G.2.>='
  108aac:	 bc 66 70 32 2f e8 64 27         .fp2/.d'
  108ab4:	 86 66 51 32 65 79 8c 27         .fQ2ey.'
  108abc:	 46 47 32 32 35 f2 b3 27         FG225..'
  108ac4:	 0f 09 13 32 88 52 db 27         ...2.R.'
  108acc:	 f5 ab f3 31 45 9a 02 28         ...1E..(
  108ad4:	 0b 30 d4 31 54 c9 29 28         .0.1T.)(
  108adc:	 64 95 b4 31 9d df 50 28         d..1..P(
  108ae4:	 14 dc 94 31 07 dd 77 28         ...1..w(
  108aec:	 2e 04 75 31 7a c1 9e 28         ..u1z..(
  108af4:	 c6 0d 55 31 df 8c c5 28         ..U1...(
  108afc:	 f1 f8 34 31 1e 3f ec 28         ..41.?.(
  108b04:	 c0 c5 14 31 1f d8 12 29         ...1...)
  108b0c:	 49 74 f4 30 c9 57 39 29         It.0.W9)
  108b14:	 a0 04 d4 30 06 be 5f 29         ...0.._)
  108b1c:	 d8 76 b3 30 bd 0a 86 29         .v.0...)
  108b24:	 05 cb 92 30 d7 3d ac 29         ...0.=.)
  108b2c:	 3c 01 72 30 3c 57 d2 29         <.r0<W.)
  108b34:	 91 19 51 30 d5 56 f8 29         ..Q0.V.)
  108b3c:	 18 14 30 30 8a 3c 1e 2a         ..00.<.*
  108b44:	 e5 f0 0e 30 44 08 44 2a         ...0D.D*
  108b4c:	 0d b0 ed 2f ec b9 69 2a         .../..i*
  108b54:	 a5 51 cc 2f 6b 51 8f 2a         .Q./kQ.*
  108b5c:	 c1 d5 aa 2f a9 ce b4 2a         .../...*
  108b64:	 75 3c 89 2f 8e 31 da 2a         u<./.1.*
  108b6c:	 d7 85 67 2f 05 7a ff 2a         ..g/.z.*
  108b74:	 fb b1 45 2f f6 a7 24 2b         ..E/..$+
  108b7c:	 f6 c0 23 2f 4a bb 49 2b         ..#/J.I+
  108b84:	 de b2 01 2f ea b3 6e 2b         .../..n+
  108b8c:	 c6 87 df 2e c0 91 93 2b         .......+
  108b94:	 c4 3f bd 2e b4 54 b8 2b         .?...T.+
  108b9c:	 ee da 9a 2e b0 fc dc 2b         .......+
  108ba4:	 58 59 78 2e 9e 89 01 2c         XYx....,
  108bac:	 17 bb 55 2e 66 fb 25 2c         ..U.f.%,
  108bb4:	 42 00 33 2e f3 51 4a 2c         B.3..QJ,
  108bbc:	 ed 28 10 2e 2e 8d 6e 2c         .(....n,
  108bc4:	 2f 35 ed 2d 01 ad 92 2c         /5.-...,
  108bcc:	 1c 25 ca 2d 55 b1 b6 2c         .%.-U..,
  108bd4:	 ca f8 a6 2d 14 9a da 2c         ...-...,
  108bdc:	 4f b0 83 2d 28 67 fe 2c         O..-(g.,
  108be4:	 c0 4b 60 2d 7a 18 22 2d         .K`-z."-
  108bec:	 34 cb 3c 2d f6 ad 45 2d         4.<-..E-
  108bf4:	 c1 2e 19 2d 84 27 69 2d         ...-.'i-
  108bfc:	 7c 76 f5 2c 10 85 8c 2d         |v.,...-
  108c04:	 7b a2 d1 2c 83 c6 af 2d         {..,...-
  108c0c:	 d5 b2 ad 2c c7 eb d2 2d         ...,...-
  108c14:	 9f a7 89 2c c7 f4 f5 2d         ...,...-
  108c1c:	 f1 80 65 2c 6d e1 18 2e         ..e,m...
  108c24:	 df 3e 41 2c a4 b1 3b 2e         .>A,..;.
  108c2c:	 81 e1 1c 2c 56 65 5e 2e         ...,Ve^.
  108c34:	 ed 68 f8 2b 6e fc 80 2e         .h.+n...
  108c3c:	 3a d5 d3 2b d6 76 a3 2e         :..+.v..
  108c44:	 7d 26 af 2b 79 d4 c5 2e         }&.+y...
  108c4c:	 ce 5c 8a 2b 43 15 e8 2e         .\.+C...
  108c54:	 44 78 65 2b 1d 39 0a 2f         Dxe+.9./
  108c5c:	 f5 78 40 2b f2 3f 2c 2f         .x@+.?,/
  108c64:	 f8 5e 1b 2b af 29 4e 2f         .^.+.)N/
  108c6c:	 63 2a f6 2a 3d f6 6f 2f         c*.*=.o/
  108c74:	 4e db d0 2a 89 a5 91 2f         N..*.../
  108c7c:	 d0 71 ab 2a 7c 37 b3 2f         .q.*|7./
  108c84:	 00 ee 85 2a 04 ac d4 2f         ...*.../
  108c8c:	 f5 4f 60 2a 0a 03 f6 2f         .O`*.../
  108c94:	 c7 97 3a 2a 7a 3c 17 30         ..:*z<.0
  108c9c:	 8b c5 14 2a 40 58 38 30         ...*@X80
  108ca4:	 5b d9 ee 29 48 56 59 30         [..)HVY0
  108cac:	 4d d3 c8 29 7c 36 7a 30         M..)|6z0
  108cb4:	 78 b3 a2 29 ca f8 9a 30         x..)...0
  108cbc:	 f5 79 7c 29 1c 9d bb 30         .y|)...0
  108cc4:	 da 26 56 29 5e 23 dc 30         .&V)^#.0
  108ccc:	 40 ba 2f 29 7d 8b fc 30         @./)}..0
  108cd4:	 3e 34 09 29 64 d5 1c 31         >4.)d..1
  108cdc:	 eb 94 e2 28 ff 00 3d 31         ...(..=1
  108ce4:	 61 dc bb 28 3b 0e 5d 31         a..(;.]1
  108cec:	 b6 0a 95 28 04 fd 7c 31         ...(..|1
  108cf4:	 02 20 6e 28 46 cd 9c 31         . n(F..1
  108cfc:	 5e 1c 47 28 ee 7e bc 31         ^.G(.~.1
  108d04:	 e2 ff 1f 28 e8 11 dc 31         ...(...1
  108d0c:	 a5 ca f8 27 20 86 fb 31         ...' ..1
  108d14:	 c1 7c d1 27 83 db 1a 32         .|.'...2
  108d1c:	 4c 16 aa 27 fe 11 3a 32         L..'..:2
  108d24:	 60 97 82 27 7d 29 59 32         `..'})Y2
  108d2c:	 14 00 5b 27 ee 21 78 32         ..['.!x2
  108d34:	 82 50 33 27 3d fb 96 32         .P3'=..2
  108d3c:	 c2 88 0b 27 57 b5 b5 32         ...'W..2
  108d44:	 ec a8 e3 26 29 50 d4 32         ...&)P.2
  108d4c:	 19 b1 bb 26 a1 cb f2 32         ...&...2
  108d54:	 61 a1 93 26 ab 27 11 33         a..&.'.3
  108d5c:	 dd 79 6b 26 35 64 2f 33         .yk&5d/3
  108d64:	 a7 3a 43 26 2d 81 4d 33         .:C&-.M3
  108d6c:	 d6 e3 1a 26 7e 7e 6b 33         ...&~~k3
  108d74:	 84 75 f2 25 18 5c 89 33         .u.%.\.3
  108d7c:	 ca ef c9 25 e8 19 a7 33         ...%...3
  108d84:	 c0 52 a1 25 db b7 c4 33         .R.%...3
  108d8c:	 80 9e 78 25 df 35 e2 33         ..x%.5.3
  108d94:	 23 d3 4f 25 e2 93 ff 33         #.O%...3
  108d9c:	 c1 f0 26 25 d2 d1 1c 34         ..&%...4
  108da4:	 75 f7 fd 24 9c ef 39 34         u..$..94
  108dac:	 57 e7 d4 24 2f ed 56 34         W..$/.V4
  108db4:	 82 c0 ab 24 79 ca 73 34         ...$y.s4
  108dbc:	 0d 83 82 24 68 87 90 34         ...$h..4
  108dc4:	 13 2f 59 24 eb 23 ad 34         ./Y$.#.4
  108dcc:	 ad c4 2f 24 ef 9f c9 34         ../$...4
  108dd4:	 f4 43 06 24 63 fb e5 34         .C.$c..4
  108ddc:	 03 ad dc 23 36 36 02 35         ...#66.5
  108de4:	 f3 ff b2 23 56 50 1e 35         ...#VP.5
  108dec:	 dd 3c 89 23 b2 49 3a 35         .<.#.I:5
  108df4:	 dc 63 5f 23 39 22 56 35         .c_#9"V5
  108dfc:	 09 75 35 23 d9 d9 71 35         .u5#..q5
  108e04:	 7e 70 0b 23 81 70 8d 35         ~p.#.p.5
  108e0c:	 55 56 e1 22 21 e6 a8 35         UV."!..5
  108e14:	 a8 26 b7 22 a7 3a c4 35         .&.".:.5
  108e1c:	 91 e1 8c 22 03 6e df 35         ...".n.5
  108e24:	 29 87 62 22 23 80 fa 35         ).b"#..5
  108e2c:	 8d 17 38 22 f8 70 15 36         ..8".p.6
  108e34:	 d4 92 0d 22 70 40 30 36         ..."p@06
  108e3c:	 1a f9 e2 21 7b ee 4a 36         ...!{.J6
  108e44:	 79 4a b8 21 08 7b 65 36         yJ.!.{e6
  108e4c:	 0b 87 8d 21 08 e6 7f 36         ...!...6
  108e54:	 ea ae 62 21 69 2f 9a 36         ..b!i/.6
  108e5c:	 32 c2 37 21 1b 57 b4 36         2.7!.W.6
  108e64:	 fc c0 0c 21 10 5d ce 36         ...!.].6
  108e6c:	 63 ab e1 20 35 41 e8 36         c.. 5A.6
  108e74:	 81 81 b6 20 7c 03 02 37         ... |..7
  108e7c:	 72 43 8b 20 d4 a3 1b 37         rC. ...7
  108e84:	 4f f1 5f 20 2f 22 35 37         O._ /"57
  108e8c:	 35 8b 34 20 7b 7e 4e 37         5.4 {~N7
  108e94:	 3c 11 09 20 a9 b8 67 37         <.. ..g7
  108e9c:	 81 83 dd 1f aa d0 80 37         .......7
  108ea4:	 1d e2 b1 1f 6f c6 99 37         ....o..7
  108eac:	 2d 2d 86 1f e7 99 b2 37         --.....7
  108eb4:	 cb 64 5a 1f 04 4b cb 37         .dZ..K.7
  108ebc:	 11 89 2e 1f b7 d9 e3 37         .......7
  108ec4:	 1c 9a 02 1f ef 45 fc 37         .....E.7
  108ecc:	 05 98 d6 1e 9f 8f 14 38         .......8
  108ed4:	 e9 82 aa 1e b7 b6 2c 38         ......,8
  108edc:	 e2 5a 7e 1e 28 bb 44 38         .Z~.(.D8
  108ee4:	 0c 20 52 1e e3 9c 5c 38         . R...\8
  108eec:	 82 d2 25 1e db 5b 74 38         ..%..[t8
  108ef4:	 5f 72 f9 1d ff f7 8b 38         _r.....8
  108efc:	 bf ff cc 1d 42 71 a3 38         ....Bq.8
  108f04:	 bc 7a a0 1d 95 c7 ba 38         .z.....8
  108f0c:	 74 e3 73 1d e9 fa d1 38         t.s....8
  108f14:	 00 3a 47 1d 31 0b e9 38         .:G.1..8
  108f1c:	 7d 7e 1a 1d 5e f8 ff 38         }~..^..8
  108f24:	 06 b1 ed 1c 62 c2 16 39         ....b..9
  108f2c:	 b6 d1 c0 1c 2f 69 2d 39         ..../i-9
  108f34:	 ab e0 93 1c b6 ec 43 39         ......C9
  108f3c:	 fe dd 66 1c eb 4c 5a 39         ..f..LZ9
  108f44:	 cd c9 39 1c bf 89 70 39         ..9...p9
  108f4c:	 32 a4 0c 1c 24 a3 86 39         2...$..9
  108f54:	 4a 6d df 1b 0d 99 9c 39         Jm.....9
  108f5c:	 30 25 b2 1b 6d 6b b2 39         0%..mk.9
  108f64:	 01 cc 84 1b 36 1a c8 39         ....6..9
  108f6c:	 d8 61 57 1b 5a a5 dd 39         .aW.Z..9
  108f74:	 d2 e6 29 1b cc 0c f3 39         ..)....9
  108f7c:	 0a 5b fc 1a 7f 50 08 3a         .[...P.:
  108f84:	 9d be ce 1a 66 70 1d 3a         ....fp.:
  108f8c:	 a6 11 a1 1a 74 6c 32 3a         ....tl2:
  108f94:	 42 54 73 1a 9c 44 47 3a         BTs..DG:
  108f9c:	 8e 86 45 1a d1 f8 5b 3a         ..E...[:
  108fa4:	 a5 a8 17 1a 06 89 70 3a         ......p:
  108fac:	 a3 ba e9 19 2f f5 84 3a         ..../..:
  108fb4:	 a6 bc bb 19 3e 3d 99 3a         ....>=.:
  108fbc:	 c8 ae 8d 19 29 61 ad 3a         ....)a.:
  108fc4:	 28 91 5f 19 e1 60 c1 3a         (._..`.:
  108fcc:	 e1 63 31 19 5b 3c d5 3a         .c1.[<.:
  108fd4:	 0f 27 03 19 8b f3 e8 3a         .'.....:
  108fdc:	 d0 da d4 18 63 86 fc 3a         ....c..:
  108fe4:	 3f 7f a6 18 d9 f4 0f 3b         ?......;
  108fec:	 7a 14 78 18 e1 3e 23 3b         z.x..>#;
  108ff4:	 9d 9a 49 18 6e 64 36 3b         ..I.nd6;
  108ffc:	 c4 11 1b 18 74 65 49 3b         ....teI;
  109004:	 0d 7a ec 17 e8 41 5c 3b         .z...A\;
  10900c:	 94 d3 bd 17 be f9 6e 3b         ......n;
  109014:	 76 1e 8f 17 eb 8c 81 3b         v......;
  10901c:	 d0 5a 60 17 63 fb 93 3b         .Z`.c..;
  109024:	 be 88 31 17 1b 45 a6 3b         ..1..E.;
  10902c:	 5e a8 02 17 08 6a b8 3b         ^....j.;
  109034:	 cc b9 d3 16 1d 6a ca 3b         .....j.;
  10903c:	 25 bd a4 16 52 45 dc 3b         %...RE.;
  109044:	 86 b2 75 16 99 fb ed 3b         ..u....;
  10904c:	 0d 9a 46 16 e8 8c ff 3b         ..F....;
  109054:	 d6 73 17 16 35 f9 10 3c         .s..5..<
  10905c:	 ff 3f e8 15 75 40 22 3c         .?..u@"<
  109064:	 a4 fe b8 15 9d 62 33 3c         .....b3<
  10906c:	 e3 af 89 15 a2 5f 44 3c         ....._D<
  109074:	 d9 53 5a 15 7b 37 55 3c         .SZ.{7U<
  10907c:	 a3 ea 2a 15 1c ea 65 3c         ..*...e<
  109084:	 5e 74 fb 14 7b 77 76 3c         ^t..{wv<
  10908c:	 27 f1 cb 14 8e df 86 3c         '......<
  109094:	 1d 61 9c 14 4c 22 97 3c         .a..L".<
  10909c:	 5c c4 6c 14 a9 3f a7 3c         \.l..?.<
  1090a4:	 02 1b 3d 14 9c 37 b7 3c         ..=..7.<
  1090ac:	 2c 65 0d 14 1c 0a c7 3c         ,e.....<
  1090b4:	 f7 a2 dd 13 1e b7 d6 3c         .......<
  1090bc:	 81 d4 ad 13 98 3e e6 3c         .....>.<
  1090c4:	 e7 f9 7d 13 82 a0 f5 3c         ..}....<
  1090cc:	 48 13 4e 13 d2 dc 04 3d         H.N....=
  1090d4:	 c0 20 1e 13 7e f3 13 3d         . ..~..=
  1090dc:	 6c 22 ee 12 7c e4 22 3d         l"..|."=
  1090e4:	 6c 18 be 12 c5 af 31 3d         l.....1=
  1090ec:	 dc 02 8e 12 4e 55 40 3d         ....NU@=
  1090f4:	 da e1 5d 12 0f d5 4e 3d         ..]...N=
  1090fc:	 83 b5 2d 12 fe 2e 5d 3d         ..-...]=
  109104:	 f6 7d fd 11 13 63 6b 3d         .}...ck=
  10910c:	 50 3b cd 11 45 71 79 3d         P;..Eqy=
  109114:	 af ed 9c 11 8c 59 87 3d         .....Y.=
  10911c:	 31 95 6c 11 de 1b 95 3d         1.l....=
  109124:	 f3 31 3c 11 34 b8 a2 3d         .1<.4..=
  10912c:	 13 c4 0b 11 84 2e b0 3d         .......=
  109134:	 af 4b db 10 c7 7e bd 3d         .K...~.=
  10913c:	 e6 c8 aa 10 f5 a8 ca 3d         .......=
  109144:	 d5 3b 7a 10 05 ad d7 3d         .;z....=
  10914c:	 9a a4 49 10 ef 8a e4 3d         ..I....=
  109154:	 52 03 19 10 ab 42 f1 3d         R....B.=
  10915c:	 1d 58 e8 0f 32 d4 fd 3d         .X..2..=
  109164:	 17 a3 b7 0f 7b 3f 0a 3e         ....{?.>
  10916c:	 60 e4 86 0f 80 84 16 3e         `......>
  109174:	 15 1c 56 0f 38 a3 22 3e         ..V.8.">
  10917c:	 53 4a 25 0f 9c 9b 2e 3e         SJ%....>
  109184:	 3b 6f f4 0e a4 6d 3a 3e         ;o...m:>
  10918c:	 e8 8a c3 0e 4a 19 46 3e         ....J.F>
  109194:	 7a 9d 92 0e 86 9e 51 3e         z.....Q>
  10919c:	 0f a7 61 0e 51 fd 5c 3e         ..a.Q.\>
  1091a4:	 c5 a7 30 0e a4 35 68 3e         ..0..5h>
  1091ac:	 ba 9f ff 0d 78 47 73 3e         ....xGs>
  1091b4:	 0d 8f ce 0d c6 32 7e 3e         .....2~>
  1091bc:	 db 75 9d 0d 88 f7 88 3e         .u.....>
  1091c4:	 43 54 6c 0d b7 95 93 3e         CTl....>
  1091cc:	 64 2a 3b 0d 4c 0d 9e 3e         d*;.L..>
  1091d4:	 5b f8 09 0d 41 5e a8 3e         [...A^.>
  1091dc:	 47 be d8 0c 8f 88 b2 3e         G......>
  1091e4:	 47 7c a7 0c 31 8c bc 3e         G|..1..>
  1091ec:	 78 32 76 0c 20 69 c6 3e         x2v. i.>
  1091f4:	 f9 e0 44 0c 55 1f d0 3e         ..D.U..>
  1091fc:	 e9 87 13 0c cc ae d9 3e         .......>
  109204:	 66 27 e2 0b 7e 17 e3 3e         f'..~..>
  10920c:	 8f bf b0 0b 65 59 ec 3e         ....eY.>
  109214:	 81 50 7f 0b 7b 74 f5 3e         .P..{t.>
  10921c:	 5c da 4d 0b bc 68 fe 3e         \.M..h.>
  109224:	 3d 5d 1c 0b 21 36 07 3f         =]..!6.?
  10922c:	 44 d9 ea 0a a5 dc 0f 3f         D......?
  109234:	 8f 4e b9 0a 43 5c 18 3f         .N..C\.?
  10923c:	 3d bd 87 0a f5 b4 20 3f         =..... ?
  109244:	 6c 25 56 0a b6 e6 28 3f         l%V...(?
  10924c:	 3a 87 24 0a 81 f1 30 3f         :.$...0?
  109254:	 c7 e2 f2 09 52 d5 38 3f         ....R.8?
  10925c:	 31 38 c1 09 23 92 40 3f         18..#.@?
  109264:	 96 87 8f 09 f0 27 48 3f         .....'H?
  10926c:	 16 d1 5d 09 b4 96 4f 3f         ..]...O?
  109274:	 ce 14 2c 09 6a de 56 3f         ..,.j.V?
  10927c:	 de 52 fa 08 0e ff 5d 3f         .R....]?
  109284:	 65 8b c8 08 9b f8 64 3f         e.....d?
  10928c:	 80 be 96 08 0e cb 6b 3f         ......k?
  109294:	 4f ec 64 08 61 76 72 3f         O.d.avr?
  10929c:	 f1 14 33 08 92 fa 78 3f         ..3...x?
  1092a4:	 83 38 01 08 9b 57 7f 3f         .8...W.?
  1092ac:	 26 57 cf 07 79 8d 85 3f         &W..y..?
  1092b4:	 f7 70 9d 07 28 9c 8b 3f         .p..(..?
  1092bc:	 16 86 6b 07 a5 83 91 3f         ..k....?
  1092c4:	 a1 96 39 07 eb 43 97 3f         ..9..C.?
  1092cc:	 b7 a2 07 07 f7 dc 9c 3f         .......?
  1092d4:	 77 aa d5 06 c6 4e a2 3f         w....N.?
  1092dc:	 00 ae a3 06 54 99 a7 3f         ....T..?
  1092e4:	 71 ad 71 06 9f bc ac 3f         q.q....?
  1092ec:	 e7 a8 3f 06 a2 b8 b1 3f         ..?....?
  1092f4:	 83 a0 0d 06 5b 8d b6 3f         ....[..?
  1092fc:	 63 94 db 05 c7 3a bb 3f         c....:.?
  109304:	 a6 84 a9 05 e3 c0 bf 3f         .......?
  10930c:	 6b 71 77 05 ac 1f c4 3f         kqw....?
  109314:	 d1 5a 45 05 1f 57 c8 3f         .ZE..W.?
  10931c:	 f6 40 13 05 3b 67 cc 3f         .@..;g.?
  109324:	 fa 23 e1 04 fc 4f d0 3f         .#...O.?
  10932c:	 fc 03 af 04 5f 11 d4 3f         ...._..?
  109334:	 1a e1 7c 04 64 ab d7 3f         ..|.d..?
  10933c:	 73 bb 4a 04 06 1e db 3f         s.J....?
  109344:	 26 93 18 04 45 69 de 3f         &...Ei.?
  10934c:	 52 68 e6 03 1f 8d e1 3f         Rh.....?
  109354:	 17 3b b4 03 90 89 e4 3f         .;.....?
  10935c:	 93 0b 82 03 98 5e e7 3f         .....^.?
  109364:	 e5 d9 4f 03 35 0c ea 3f         ..O.5..?
  10936c:	 2b a6 1d 03 65 92 ec 3f         +...e..?
  109374:	 86 70 eb 02 26 f1 ee 3f         .p..&..?
  10937c:	 14 39 b9 02 78 28 f1 3f         .9..x(.?
  109384:	 f3 ff 86 02 58 38 f3 3f         ....X8.?
  10938c:	 44 c5 54 02 c5 20 f5 3f         D.T.. .?
  109394:	 24 89 22 02 bf e1 f6 3f         $."....?
  10939c:	 b4 4b f0 01 44 7b f8 3f         .K..D{.?
  1093a4:	 11 0d be 01 53 ed f9 3f         ....S..?
  1093ac:	 5b cd 8b 01 ec 37 fb 3f         [....7.?
  1093b4:	 b1 8c 59 01 0c 5b fc 3f         ..Y..[.?
  1093bc:	 31 4b 27 01 b5 56 fd 3f         1K'..V.?
  1093c4:	 fc 08 f5 00 e5 2a fe 3f         .....*.?
  1093cc:	 2f c6 c2 00 9b d7 fe 3f         /......?
  1093d4:	 ea 82 90 00 d8 5c ff 3f         .....\.?
  1093dc:	 4c 3f 5e 00 9b ba ff 3f         L?^....?
  1093e4:	 74 fb 2b 00 e3 f0 ff 3f         


sine_long_1024:
  1093ec:	 fe 90 0c 00 f7 b2 25 00         ......%.
  1093f4:	 ea d4 3e 00 d4 f6 57 00         ..>...W.
  1093fc:	 b0 18 71 00 7b 3a 8a 00         ..q.{:..
  109404:	 30 5c a3 00 cc 7d bc 00         0\...}..
  10940c:	 4c 9f d5 00 aa c0 ee 00         L.......
  109414:	 e3 e1 07 01 f4 02 21 01         ......!.
  10941c:	 d8 23 3a 01 8c 44 53 01         .#:..DS.
  109424:	 0b 65 6c 01 52 85 85 01         .el.R...
  10942c:	 5d a5 9e 01 28 c5 b7 01         ]...(...
  109434:	 b0 e4 d0 01 ef 03 ea 01         ........
  10943c:	 e3 22 03 02 88 41 1c 02         ."...A..
  109444:	 d9 5f 35 02 d4 7d 4e 02         ._5..}N.
  10944c:	 73 9b 67 02 b3 b8 80 02         s.g.....
  109454:	 90 d5 99 02 07 f2 b2 02         ........
  10945c:	 13 0e cc 02 b0 29 e5 02         .....)..
  109464:	 dc 44 fe 02 91 5f 17 03         .D..._..
  10946c:	 cc 79 30 03 89 93 49 03         .y0...I.
  109474:	 c5 ac 62 03 7b c5 7b 03         ..b.{.{.
  10947c:	 a7 dd 94 03 46 f5 ad 03         ....F...
  109484:	 54 0c c7 03 cc 22 e0 03         T...."..
  10948c:	 ac 38 f9 03 ee 4d 12 04         .8...M..
  109494:	 90 62 2b 04 8d 76 44 04         .b+..vD.
  10949c:	 e2 89 5d 04 8b 9c 76 04         ..]...v.
  1094a4:	 83 ae 8f 04 c7 bf a8 04         ........
  1094ac:	 54 d0 c1 04 24 e0 da 04         T...$...
  1094b4:	 35 ef f3 04 82 fd 0c 05         5.......
  1094bc:	 08 0b 26 05 c3 17 3f 05         ..&...?.
  1094c4:	 ae 23 58 05 c7 2e 71 05         .#X...q.
  1094cc:	 08 39 8a 05 6f 42 a3 05         .9..oB..
  1094d4:	 f8 4a bc 05 9e 52 d5 05         .J...R..
  1094dc:	 5d 59 ee 05 33 5f 07 06         ]Y..3_..
  1094e4:	 1a 64 20 06 10 68 39 06         .d ..h9.
  1094ec:	 10 6b 52 06 16 6d 6b 06         .kR..mk.
  1094f4:	 1f 6e 84 06 27 6e 9d 06         .n..'n..
  1094fc:	 29 6d b6 06 23 6b cf 06         )m..#k..
  109504:	 10 68 e8 06 eb 63 01 07         .h...c..
  10950c:	 b3 5e 1a 07 62 58 33 07         .^..bX3.
  109514:	 f4 50 4c 07 67 48 65 07         .PL.gHe.
  10951c:	 b5 3e 7e 07 dc 33 97 07         .>~..3..
  109524:	 d7 27 b0 07 a3 1a c9 07         .'......
  10952c:	 3b 0c e2 07 9c fc fa 07         ;.......
  109534:	 c2 eb 13 08 a9 d9 2c 08         ......,.
  10953c:	 4d c6 45 08 ab b1 5e 08         M.E...^.
  109544:	 be 9b 77 08 83 84 90 08         ..w.....
  10954c:	 f6 6b a9 08 13 52 c2 08         .k...R..
  109554:	 d6 36 db 08 3c 1a f4 08         .6..<...
  10955c:	 40 fc 0c 09 df dc 25 09         @.....%.
  109564:	 14 bc 3e 09 dd 99 57 09         ..>...W.
  10956c:	 35 76 70 09 18 51 89 09         5vp..Q..
  109574:	 83 2a a2 09 71 02 bb 09         .*..q...
  10957c:	 df d8 d3 09 c9 ad ec 09         ........
  109584:	 2c 81 05 0a 03 53 1e 0a         ,....S..
  10958c:	 4a 23 37 0a fe f1 4f 0a         J#7...O.
  109594:	 1b bf 68 0a 9d 8a 81 0a         ..h.....
  10959c:	 80 54 9a 0a c1 1c b3 0a         .T......
  1095a4:	 5b e3 cb 0a 4b a8 e4 0a         [...K...
  1095ac:	 8d 6b fd 0a 1d 2d 16 0b         .k...-..
  1095b4:	 f8 ec 2e 0b 19 ab 47 0b         ......G.
  1095bc:	 7c 67 60 0b 1f 22 79 0b         |g`.."y.
  1095c4:	 fc da 91 0b 11 92 aa 0b         ........
  1095cc:	 59 47 c3 0b d1 fa db 0b         YG......
  1095d4:	 75 ac f4 0b 41 5c 0d 0c         u...A\..
  1095dc:	 31 0a 26 0c 41 b6 3e 0c         1.&.A.>.
  1095e4:	 6e 60 57 0c b3 08 70 0c         n`W...p.
  1095ec:	 0e af 88 0c 7a 53 a1 0c         ....zS..
  1095f4:	 f3 f5 b9 0c 76 96 d2 0c         ....v...
  1095fc:	 fe 34 eb 0c 89 d1 03 0d         .4......
  109604:	 11 6c 1c 0d 95 04 35 0d         .l....5.
  10960c:	 0e 9b 4d 0d 7b 2f 66 0d         ..M.{/f.
  109614:	 d6 c1 7e 0d 1d 52 97 0d         ..~..R..
  10961c:	 4b e0 af 0d 5d 6c c8 0d         K...]l..
  109624:	 4f f6 e0 0d 1d 7e f9 0d         O....~..
  10962c:	 c3 03 12 0e 3e 87 2a 0e         ....>.*.
  109634:	 89 08 43 0e a2 87 5b 0e         ..C...[.
  10963c:	 83 04 74 0e 2a 7f 8c 0e         ..t.*...
  109644:	 93 f7 a4 0e b9 6d bd 0e         .....m..
  10964c:	 9a e1 d5 0e 31 53 ee 0e         ....1S..
  109654:	 7a c2 06 0f 73 2f 1f 0f         z...s/..
  10965c:	 16 9a 37 0f 60 02 50 0f         ..7.`.P.
  109664:	 4e 68 68 0f dc cb 80 0f         Nhh.....
  10966c:	 06 2d 99 0f c8 8b b1 0f         .-......
  109674:	 1e e8 c9 0f 05 42 e2 0f         .....B..
  10967c:	 79 99 fa 0f 76 ee 12 10         y...v...
  109684:	 f8 40 2b 10 fd 90 43 10         .@+...C.
  10968c:	 7f de 5b 10 7b 29 74 10         ..[.{)t.
  109694:	 ee 71 8c 10 d3 b7 a4 10         .q......
  10969c:	 28 fb bc 10 e7 3b d5 10         (....;..
  1096a4:	 0e 7a ed 10 99 b5 05 11         .z......
  1096ac:	 84 ee 1d 11 cb 24 36 11         .....$6.
  1096b4:	 6a 58 4e 11 5f 89 66 11         jXN._.f.
  1096bc:	 a4 b7 7e 11 37 e3 96 11         ..~.7...
  1096c4:	 13 0c af 11 35 32 c7 11         ....52..
  1096cc:	 99 55 df 11 3c 76 f7 11         .U..<v..
  1096d4:	 1a 94 0f 12 2e af 27 12         ......'.
  1096dc:	 76 c7 3f 12 ed dc 57 12         v.?...W.
  1096e4:	 90 ef 6f 12 5b ff 87 12         ..o.[...
  1096ec:	 4b 0c a0 12 5b 16 b8 12         K...[...
  1096f4:	 89 1d d0 12 cf 21 e8 12         .....!..
  1096fc:	 2c 23 00 13 9a 21 18 13         ,#...!..
  109704:	 16 1d 30 13 9d 15 48 13         ..0...H.
  10970c:	 2a 0b 60 13 bb fd 77 13         *.`...w.
  109714:	 4b ed 8f 13 d7 d9 a7 13         K.......
  10971c:	 5b c3 bf 13 d3 a9 d7 13         [.......
  109724:	 3c 8d ef 13 91 6d 07 14         <....m..
  10972c:	 d1 4a 1f 14 f5 24 37 14         .J...$7.
  109734:	 fc fb 4e 14 e1 cf 66 14         ..N...f.
  10973c:	 a0 a0 7e 14 36 6e 96 14         ..~.6n..
  109744:	 a0 38 ae 14 d9 ff c5 14         .8......
  10974c:	 de c3 dd 14 ac 84 f5 14         ........
  109754:	 3d 42 0d 15 90 fc 24 15         =B....$.
  10975c:	 a0 b3 3c 15 6a 67 54 15         ..<.jgT.
  109764:	 e9 17 6c 15 1b c5 83 15         ..l.....
  10976c:	 fb 6e 9b 15 87 15 b3 15         .n......
  109774:	 ba b8 ca 15 90 58 e2 15         .....X..
  10977c:	 07 f5 f9 15 1a 8e 11 16         ........
  109784:	 c5 23 29 16 06 b6 40 16         .#)...@.
  10978c:	 d8 44 58 16 39 d0 6f 16         .DX.9.o.
  109794:	 23 58 87 16 94 dc 9e 16         #X......
  10979c:	 88 5d b6 16 fb da cd 16         .]......
  1097a4:	 ea 54 e5 16 51 cb fc 16         .T..Q...
  1097ac:	 2d 3e 14 17 7a ad 2b 17         ->..z.+.
  1097b4:	 33 19 43 17 57 81 5a 17         3.C.W.Z.
  1097bc:	 e0 e5 71 17 cc 46 89 17         ..q..F..
  1097c4:	 17 a4 a0 17 bd fd b7 17         ........
  1097cc:	 bb 53 cf 17 0c a6 e6 17         .S......
  1097d4:	 ae f4 fd 17 9d 3f 15 18         .....?..
  1097dc:	 d5 86 2c 18 53 ca 43 18         ..,.S.C.
  1097e4:	 13 0a 5b 18 11 46 72 18         ..[..Fr.
  1097ec:	 4a 7e 89 18 bb b2 a0 18         J~......
  1097f4:	 5f e3 b7 18 34 10 cf 18         _...4...
  1097fc:	 35 39 e6 18 5f 5e fd 18         59.._^..
  109804:	 ae 7f 14 19 1f 9d 2b 19         ......+.
  10980c:	 af b6 42 19 5a cc 59 19         ..B.Z.Y.
  109814:	 1b de 70 19 f0 eb 87 19         ..p.....
  10981c:	 d6 f5 9e 19 c8 fb b5 19         ........
  109824:	 c2 fd cc 19 c3 fb e3 19         ........
  10982c:	 c5 f5 fa 19 c5 eb 11 1a         ........
  109834:	 c0 dd 28 1a b3 cb 3f 1a         ..(...?.
  10983c:	 99 b5 56 1a 70 9b 6d 1a         ..V.p.m.
  109844:	 33 7d 84 1a df 5a 9b 1a         3}...Z..
  10984c:	 71 34 b2 1a e5 09 c9 1a         q4......
  109854:	 37 db df 1a 65 a8 f6 1a         7...e...
  10985c:	 6a 71 0d 1b 43 36 24 1b         jq..C6$.
  109864:	 ec f6 3a 1b 63 b3 51 1b         ..:.c.Q.
  10986c:	 a3 6b 68 1b a9 1f 7f 1b         .kh.....
  109874:	 71 cf 95 1b f9 7a ac 1b         q....z..
  10987c:	 3c 22 c3 1b 37 c5 d9 1b         <"..7...
  109884:	 e6 63 f0 1b 46 fe 06 1c         .c..F...
  10988c:	 54 94 1d 1c 0c 26 34 1c         T....&4.
  109894:	 6b b3 4a 1c 6d 3c 61 1c         k.J.m<a.
  10989c:	 0e c1 77 1c 4b 41 8e 1c         ..w.KA..
  1098a4:	 21 bd a4 1c 8d 34 bb 1c         !....4..
  1098ac:	 8a a7 d1 1c 15 16 e8 1c         ........
  1098b4:	 2b 80 fe 1c c9 e5 14 1d         +.......
  1098bc:	 ea 46 2b 1d 8c a3 41 1d         .F+...A.
  1098c4:	 aa fb 57 1d 43 4f 6e 1d         ..W.COn.
  1098cc:	 51 9e 84 1d d2 e8 9a 1d         Q.......
  1098d4:	 c3 2e b1 1d 1f 70 c7 1d         .....p..
  1098dc:	 e4 ac dd 1d 0d e5 f3 1d         ........
  1098e4:	 98 18 0a 1e 81 47 20 1e         .....G .
  1098ec:	 c5 71 36 1e 60 97 4c 1e         .q6.`.L.
  1098f4:	 4f b8 62 1e 8e d4 78 1e         O.b...x.
  1098fc:	 1b ec 8e 1e f0 fe a4 1e         ........
  109904:	 0d 0d bb 1e 6b 16 d1 1e         ....k...
  10990c:	 0a 1b e7 1e e4 1a fd 1e         ........
  109914:	 f7 15 13 1f 3f 0c 29 1f         ....?.).
  10991c:	 b9 fd 3e 1f 62 ea 54 1f         ..>.b.T.
  109924:	 35 d2 6a 1f 31 b5 80 1f         5.j.1...
  10992c:	 50 93 96 1f 91 6c ac 1f         P....l..
  109934:	 ef 40 c2 1f 67 10 d8 1f         .@..g...
  10993c:	 f6 da ed 1f 99 a0 03 20         ....... 
  109944:	 4c 61 19 20 0b 1d 2f 20         La. ../ 
  10994c:	 d4 d3 44 20 a3 85 5a 20         ..D ..Z 
  109954:	 75 32 70 20 46 da 85 20         u2p F.. 
  10995c:	 13 7d 9b 20 d9 1a b1 20         .}. ... 
  109964:	 95 b3 c6 20 42 47 dc 20         ... BG. 
  10996c:	 de d5 f1 20 65 5f 07 21         ... e_.!
  109974:	 d5 e3 1c 21 29 63 32 21         ...!)c2!
  10997c:	 5f dd 47 21 73 52 5d 21         _.G!sR]!
  109984:	 62 c2 72 21 28 2d 88 21         b.r!(-.!
  10998c:	 c2 92 9d 21 2e f3 b2 21         ...!...!
  109994:	 67 4e c8 21 6a a4 dd 21         gN.!j..!
  10999c:	 34 f5 f2 21 c2 40 08 22         4..!.@."
  1099a4:	 11 87 1d 22 1c c8 32 22         ..."..2"
  1099ac:	 e2 03 48 22 5e 3a 5d 22         ..H"^:]"
  1099b4:	 8e 6b 72 22 6e 97 87 22         .kr"n.."
  1099bc:	 fa bd 9c 22 30 df b1 22         ..."0.."
  1099c4:	 0c fb c6 22 8c 11 dc 22         ..."..."
  1099cc:	 ab 22 f1 22 67 2e 06 23         ."."g..#
  1099d4:	 bc 34 1b 23 a7 35 30 23         .4.#.50#
  1099dc:	 25 31 45 23 33 27 5a 23         %1E#3'Z#
  1099e4:	 cc 17 6f 23 ef 02 84 23         ..o#...#
  1099ec:	 98 e8 98 23 c4 c8 ad 23         ...#...#
  1099f4:	 6f a3 c2 23 96 78 d7 23         o..#.x.#
  1099fc:	 37 48 ec 23 4d 12 01 24         7H.#M..$
  109a04:	 d5 d6 15 24 ce 95 2a 24         ...$..*$
  109a0c:	 32 4f 3f 24 ff 02 54 24         2O?$..T$
  109a14:	 32 b1 68 24 c8 59 7d 24         2.h$.Y}$
  109a1c:	 be fc 91 24 0f 9a a6 24         ...$...$
  109a24:	 ba 31 bb 24 ba c3 cf 24         .1.$...$
  109a2c:	 0e 50 e4 24 b0 d6 f8 24         .P.$...$
  109a34:	 a0 57 0d 25 d8 d2 21 25         .W.%..!%
  109a3c:	 57 48 36 25 18 b8 4a 25         WH6%..J%
  109a44:	 19 22 5f 25 57 86 73 25         ."_%W.s%
  109a4c:	 cf e4 87 25 7c 3d 9c 25         ...%|=.%
  109a54:	 5d 90 b0 25 6e dd c4 25         ]..%n..%
  109a5c:	 ac 24 d9 25 14 66 ed 25         .$.%.f.%
  109a64:	 a2 a1 01 26 54 d7 15 26         ...&T..&
  109a6c:	 27 07 2a 26 17 31 3e 26         '.*&.1>&
  109a74:	 21 55 52 26 42 73 66 26         !UR&Bsf&
  109a7c:	 77 8b 7a 26 bd 9d 8e 26         w.z&...&
  109a84:	 11 aa a2 26 70 b0 b6 26         ...&p..&
  109a8c:	 d6 b0 ca 26 41 ab de 26         ...&A..&
  109a94:	 ad 9f f2 26 18 8e 06 27         ...&...'
  109a9c:	 7e 76 1a 27 dc 58 2e 27         ~v.'.X.'
  109aa4:	 30 35 42 27 76 0b 56 27         05B'v.V'
  109aac:	 aa db 69 27 cb a5 7d 27         ..i'..}'
  109ab4:	 d5 69 91 27 c4 27 a5 27         .i.'.'.'
  109abc:	 97 df b8 27 49 91 cc 27         ...'I..'
  109ac4:	 d8 3c e0 27 41 e2 f3 27         .<.'A..'
  109acc:	 81 81 07 28 94 1a 1b 28         ...(...(
  109ad4:	 78 ad 2e 28 2a 3a 42 28         x..(*:B(
  109adc:	 a6 c0 55 28 ea 40 69 28         ..U(.@i(
  109ae4:	 f3 ba 7c 28 bd 2e 90 28         ..|(...(
  109aec:	 46 9c a3 28 8b 03 b7 28         F..(...(
  109af4:	 88 64 ca 28 3b bf dd 28         .d.(;..(
  109afc:	 a0 13 f1 28 b5 61 04 29         ...(.a.)
  109b04:	 77 a9 17 29 e3 ea 2a 29         w..)..*)
  109b0c:	 f5 25 3e 29 ab 5a 51 29         .%>).ZQ)
  109b14:	 02 89 64 29 f7 b0 77 29         ..d)..w)
  109b1c:	 87 d2 8a 29 af ed 9d 29         ...)...)
  109b24:	 6c 02 b1 29 ba 10 c4 29         l..)...)
  109b2c:	 99 18 d7 29 03 1a ea 29         ...)...)
  109b34:	 f6 14 fd 29 70 09 10 2a         ...)p..*
  109b3c:	 6e f7 22 2a eb de 35 2a         n."*..5*
  109b44:	 e7 bf 48 2a 5d 9a 5b 2a         ..H*].[*
  109b4c:	 4b 6e 6e 2a ae 3b 81 2a         Knn*.;.*
  109b54:	 83 02 94 2a c6 c2 a6 2a         ...*...*
  109b5c:	 77 7c b9 2a 90 2f cc 2a         w|.*./.*
  109b64:	 10 dc de 2a f3 81 f1 2a         ...*...*
  109b6c:	 37 21 04 2b d9 b9 16 2b         7!.+...+
  109b74:	 d5 4b 29 2b 2a d7 3b 2b         .K)+*.;+
  109b7c:	 d4 5b 4e 2b d0 d9 60 2b         .[N+..`+
  109b84:	 1c 51 73 2b b5 c1 85 2b         .Qs+...+
  109b8c:	 97 2b 98 2b c0 8e aa 2b         .+.+...+
  109b94:	 2d eb bc 2b dc 40 cf 2b         -..+.@.+
  109b9c:	 c9 8f e1 2b f2 d7 f3 2b         ...+...+
  109ba4:	 53 19 06 2c eb 53 18 2c         S..,.S.,
  109bac:	 b6 87 2a 2c b1 b4 3c 2c         ..*,..<,
  109bb4:	 da da 4e 2c 2d fa 60 2c         ..N,-.`,
  109bbc:	 a9 12 73 2c 4a 24 85 2c         ..s,J$.,
  109bc4:	 0d 2f 97 2c ef 32 a9 2c         ./.,.2.,
  109bcc:	 ef 2f bb 2c 09 26 cd 2c         ./.,.&.,
  109bd4:	 3a 15 df 2c 80 fd f0 2c         :..,...,
  109bdc:	 d7 de 02 2d 3d b9 14 2d         ...-=..-
  109be4:	 b0 8c 26 2d 2c 59 38 2d         ..&-,Y8-
  109bec:	 af 1e 4a 2d 36 dd 5b 2d         ..J-6.[-
  109bf4:	 bf 94 6d 2d 45 45 7f 2d         ..m-EE.-
  109bfc:	 c8 ee 90 2d 44 91 a2 2d         ...-D..-
  109c04:	 b6 2c b4 2d 1c c1 c5 2d         .,.-...-
  109c0c:	 73 4e d7 2d b8 d4 e8 2d         sN.-...-
  109c14:	 e9 53 fa 2d 03 cc 0b 2e         .S.-....
  109c1c:	 03 3d 1d 2e e6 a6 2e 2e         .=......
  109c24:	 aa 09 40 2e 4c 65 51 2e         ..@.LeQ.
  109c2c:	 ca b9 62 2e 20 07 74 2e         ..b. .t.
  109c34:	 4d 4d 85 2e 4d 8c 96 2e         MM..M...
  109c3c:	 1e c4 a7 2e bc f4 b8 2e         ........
  109c44:	 27 1e ca 2e 5a 40 db 2e         '...Z@..
  109c4c:	 53 5b ec 2e 10 6f fd 2e         S[...o..
  109c54:	 8e 7b 0e 2f ca 80 1f 2f         .{./.../
  109c5c:	 c2 7e 30 2f 73 75 41 2f         .~0/suA/
  109c64:	 da 64 52 2f f5 4c 63 2f         .dR/.Lc/
  109c6c:	 c1 2d 74 2f 3c 07 85 2f         .-t/<../
  109c74:	 63 d9 95 2f 33 a4 a6 2f         c../3../
  109c7c:	 aa 67 b7 2f c5 23 c8 2f         .g./.#./
  109c84:	 82 d8 d8 2f de 85 e9 2f         .../.../
  109c8c:	 d6 2b fa 2f 69 ca 0a 30         .+./i..0
  109c94:	 93 61 1b 30 51 f1 2b 30         .a.0Q.+0
  109c9c:	 a2 79 3c 30 83 fa 4c 30         .y<0..L0
  109ca4:	 f0 73 5d 30 e9 e5 6d 30         .s]0..m0
  109cac:	 69 50 7e 30 6f b3 8e 30         iP~0o..0
  109cb4:	 f8 0e 9f 30 02 63 af 30         ...0.c.0
  109cbc:	 89 af bf 30 8c f4 cf 30         ...0...0
  109cc4:	 08 32 e0 30 fb 67 f0 30         .2.0.g.0
  109ccc:	 61 96 00 31 39 bd 10 31         a..19..1
  109cd4:	 80 dc 20 31 33 f4 30 31         .. 13.01
  109cdc:	 50 04 41 31 d5 0c 51 31         P.A1..Q1
  109ce4:	 bf 0d 61 31 0c 07 71 31         ..a1..q1
  109cec:	 b8 f8 80 31 c3 e2 90 31         ...1...1
  109cf4:	 28 c5 a0 31 e7 9f b0 31         (..1...1
  109cfc:	 fb 72 c0 31 64 3e d0 31         .r.1d>.1
  109d04:	 1e 02 e0 31 27 be ef 31         ...1'..1
  109d0c:	 7c 72 ff 31 1c 1f 0f 32         |r.1...2
  109d14:	 03 c4 1e 32 30 61 2e 32         ...20a.2
  109d1c:	 a0 f6 3d 32 50 84 4d 32         ..=2P.M2
  109d24:	 3e 0a 5d 32 68 88 6c 32         >.]2h.l2
  109d2c:	 cc fe 7b 32 66 6d 8b 32         ..{2fm.2
  109d34:	 35 d4 9a 32 36 33 aa 32         5..263.2
  109d3c:	 67 8a b9 32 c6 d9 c8 32         g..2...2
  109d44:	 50 21 d8 32 02 61 e7 32         P!.2.a.2
  109d4c:	 db 98 f6 32 d7 c8 05 33         ...2...3
  109d54:	 f6 f0 14 33 34 11 24 33         ...34.$3
  109d5c:	 8f 29 33 33 04 3a 42 33         .)33.:B3
  109d64:	 92 42 51 33 36 43 60 33         .BQ36C`3
  109d6c:	 ee 3b 6f 33 b7 2c 7e 33         .;o3.,~3
  109d74:	 90 15 8d 33 75 f6 9b 33         ...3u..3
  109d7c:	 65 cf aa 33 5d a0 b9 33         e..3]..3
  109d84:	 5b 69 c8 33 5d 2a d7 33         [i.3]*.3
  109d8c:	 60 e3 e5 33 62 94 f4 33         `..3b..3
  109d94:	 61 3d 03 34 5b de 11 34         a=.4[..4
  109d9c:	 4d 77 20 34 36 08 2f 34         Mw 46./4
  109da4:	 12 91 3d 34 e0 11 4c 34         ..=4..L4
  109dac:	 9d 8a 5a 34 47 fb 68 34         ..Z4G.h4
  109db4:	 dd 63 77 34 5b c4 85 34         .cw4[..4
  109dbc:	 bf 1c 94 34 08 6d a2 34         ...4.m.4
  109dc4:	 33 b5 b0 34 3d f5 be 34         3..4=..4
  109dcc:	 26 2d cd 34 ea 5c db 34         &-.4.\.4
  109dd4:	 87 84 e9 34 fb a3 f7 34         ...4...4
  109ddc:	 44 bb 05 35 60 ca 13 35         D..5`..5
  109de4:	 4d d1 21 35 08 d0 2f 35         M.!5../5
  109dec:	 8f c6 3d 35 e1 b4 4b 35         ..=5..K5
  109df4:	 fa 9a 59 35 d9 78 67 35         ..Y5.xg5
  109dfc:	 7c 4e 75 35 e0 1b 83 35         |Nu5...5
  109e04:	 04 e1 90 35 e5 9d 9e 35         ...5...5
  109e0c:	 82 52 ac 35 d7 fe b9 35         .R.5...5
  109e14:	 e3 a2 c7 35 a5 3e d5 35         ...5.>.5
  109e1c:	 19 d2 e2 35 3d 5d f0 35         ...5=].5
  109e24:	 11 e0 fd 35 90 5a 0b 36         ...5.Z.6
  109e2c:	 ba cc 18 36 8d 36 26 36         ...6.6&6
  109e34:	 06 98 33 36 23 f1 40 36         ..36#.@6
  109e3c:	 e2 41 4e 36 41 8a 5b 36         .AN6A.[6
  109e44:	 3e ca 68 36 d7 01 76 36         >.h6..v6
  109e4c:	 0b 31 83 36 d6 57 90 36         .1.6.W.6
  109e54:	 37 76 9d 36 2c 8c aa 36         7v.6,..6
  109e5c:	 b3 99 b7 36 c9 9e c4 36         ...6...6
  109e64:	 6e 9b d1 36 9e 8f de 36         n..6...6
  109e6c:	 58 7b eb 36 9a 5e f8 36         X{.6.^.6
  109e74:	 62 39 05 37 ae 0b 12 37         b9.7...7
  109e7c:	 7c d5 1e 37 ca 96 2b 37         |..7..+7
  109e84:	 95 4f 38 37 dd ff 44 37         .O87..D7
  109e8c:	 9e a7 51 37 d8 46 5e 37         ..Q7.F^7
  109e94:	 88 dd 6a 37 ac 6b 77 37         ..j7.kw7
  109e9c:	 43 f1 83 37 49 6e 90 37         C..7In.7
  109ea4:	 be e2 9c 37 a0 4e a9 37         ...7.N.7
  109eac:	 ec b1 b5 37 a1 0c c2 37         ...7...7
  109eb4:	 bd 5e ce 37 3d a8 da 37         .^.7=..7
  109ebc:	 21 e9 e6 37 65 21 f3 37         !..7e!.7
  109ec4:	 09 51 ff 37 0a 78 0b 38         .Q.7.x.8
  109ecc:	 66 96 17 38 1d ac 23 38         f..8..#8
  109ed4:	 2a b9 2f 38 8e bd 3b 38         *./8..;8
  109edc:	 46 b9 47 38 4f ac 53 38         F.G8O.S8
  109ee4:	 a9 96 5f 38 52 78 6b 38         .._8Rxk8
  109eec:	 47 51 77 38 87 21 83 38         GQw8.!.8
  109ef4:	 10 e9 8e 38 e0 a7 9a 38         ...8...8
  109efc:	 f6 5d a6 38 4f 0b b2 38         .].8O..8
  109f04:	 ea af bd 38 c4 4b c9 38         ...8.K.8
  109f0c:	 dd de d4 38 32 69 e0 38         ...82i.8
  109f14:	 c2 ea eb 38 8b 63 f7 38         ...8.c.8
  109f1c:	 8b d3 02 39 c0 3a 0e 39         ...9.:.9
  109f24:	 29 99 19 39 c3 ee 24 39         )..9..$9
  109f2c:	 8e 3b 30 39 86 7f 3b 39         .;09..;9
  109f34:	 ac ba 46 39 fc ec 51 39         ..F9..Q9
  109f3c:	 75 16 5d 39 15 37 68 39         u.]9.7h9
  109f44:	 dc 4e 73 39 c6 5d 7e 39         .Ns9.]~9
  109f4c:	 d2 63 89 39 ff 60 94 39         .c.9.`.9
  109f54:	 4b 55 9f 39 b4 40 aa 39         KU.9.@.9
  109f5c:	 39 23 b5 39 d7 fc bf 39         9#.9...9
  109f64:	 8d cd ca 39 5a 95 d5 39         ...9Z..9
  109f6c:	 3c 54 e0 39 31 0a eb 39         <T.91..9
  109f74:	 37 b7 f5 39 4d 5b 00 3a         7..9M[.:
  109f7c:	 71 f6 0a 3a a2 88 15 3a         q..:...:
  109f84:	 de 11 20 3a 23 92 2a 3a         .. :#.*:
  109f8c:	 70 09 35 3a c3 77 3f 3a         p.5:.w?:
  109f94:	 1a dd 49 3a 74 39 54 3a         ..I:t9T:
  109f9c:	 d0 8c 5e 3a 2b d7 68 3a         ..^:+.h:
  109fa4:	 84 18 73 3a da 50 7d 3a         ..s:.P}:
  109fac:	 2a 80 87 3a 74 a6 91 3a         *..:t..:
  109fb4:	 b6 c3 9b 3a ee d7 a5 3a         ...:...:
  109fbc:	 1b e3 af 3a 3a e5 b9 3a         ...::..:
  109fc4:	 4c de c3 3a 4d ce cd 3a         L..:M..:
  109fcc:	 3d b5 d7 3a 1a 93 e1 3a         =..:...:
  109fd4:	 e3 67 eb 3a 95 33 f5 3a         .g.:.3.:
  109fdc:	 30 f6 fe 3a b2 af 08 3b         0..:...;
  109fe4:	 19 60 12 3b 64 07 1c 3b         .`.;d..;
  109fec:	 91 a5 25 3b a0 3a 2f 3b         ..%;.:/;
  109ff4:	 8e c6 38 3b 5a 49 42 3b         ..8;ZIB;
  109ffc:	 03 c3 4b 3b 86 33 55 3b         ..K;.3U;
  10a004:	 e4 9a 5e 3b 19 f9 67 3b         ..^;..g;
  10a00c:	 25 4e 71 3b 07 9a 7a 3b         %Nq;..z;
  10a014:	 bc dc 83 3b 44 16 8d 3b         ...;D..;
  10a01c:	 9d 46 96 3b c5 6d 9f 3b         .F.;.m.;
  10a024:	 bc 8b a8 3b 80 a0 b1 3b         ...;...;
  10a02c:	 0e ac ba 3b 67 ae c3 3b         ...;g..;
  10a034:	 89 a7 cc 3b 71 97 d5 3b         ...;q..;
  10a03c:	 20 7e de 3b 93 5b e7 3b          ~.;.[.;
  10a044:	 c9 2f f0 3b c0 fa f8 3b         ./.;...;
  10a04c:	 78 bc 01 3c f0 74 0a 3c         x..<.t.<
  10a054:	 24 24 13 3c 16 ca 1b 3c         $$.<...<
  10a05c:	 c2 66 24 3c 28 fa 2c 3c         .f$<(.,<
  10a064:	 46 84 35 3c 1b 05 3e 3c         F.5<..><
  10a06c:	 a6 7c 46 3c e5 ea 4e 3c         .|F<..N<
  10a074:	 d8 4f 57 3c 7c ab 5f 3c         .OW<|._<
  10a07c:	 d1 fd 67 3c d6 46 70 3c         ..g<.Fp<
  10a084:	 88 86 78 3c e7 bc 80 3c         ..x<...<
  10a08c:	 f1 e9 88 3c a5 0d 91 3c         ...<...<
  10a094:	 03 28 99 3c 08 39 a1 3c         .(.<.9.<
  10a09c:	 b3 40 a9 3c 04 3f b1 3c         .@.<.?.<
  10a0a4:	 f9 33 b9 3c 90 1f c1 3c         .3.<...<
  10a0ac:	 c9 01 c9 3c a2 da d0 3c         ...<...<
  10a0b4:	 1b aa d8 3c 31 70 e0 3c         ...<1p.<
  10a0bc:	 e4 2c e8 3c 32 e0 ef 3c         .,.<2..<
  10a0c4:	 1b 8a f7 3c 9d 2a ff 3c         ...<.*.<
  10a0cc:	 b6 c1 06 3d 67 4f 0e 3d         ...=gO.=
  10a0d4:	 ad d3 15 3d 88 4e 1d 3d         ...=.N.=
  10a0dc:	 f6 bf 24 3d f6 27 2c 3d         ..$=.',=
  10a0e4:	 87 86 33 3d a7 db 3a 3d         ..3=..:=
  10a0ec:	 57 27 42 3d 94 69 49 3d         W'B=.iI=
  10a0f4:	 5e a2 50 3d b3 d1 57 3d         ^.P=..W=
  10a0fc:	 93 f7 5e 3d fb 13 66 3d         ..^=..f=
  10a104:	 ec 26 6d 3d 64 30 74 3d         .&m=d0t=
  10a10c:	 61 30 7b 3d e4 26 82 3d         a0{=.&.=
  10a114:	 ea 13 89 3d 72 f7 8f 3d         ...=r..=
  10a11c:	 7d d1 96 3d 08 a2 9d 3d         }..=...=
  10a124:	 12 69 a4 3d 9b 26 ab 3d         .i.=.&.=
  10a12c:	 a2 da b1 3d 24 85 b8 3d         ...=$..=
  10a134:	 22 26 bf 3d 9b bd c5 3d         "&.=...=
  10a13c:	 8d 4b cc 3d f7 cf d2 3d         .K.=...=
  10a144:	 d8 4a d9 3d 30 bc df 3d         .J.=0..=
  10a14c:	 fd 23 e6 3d 3e 82 ec 3d         .#.=>..=
  10a154:	 f3 d6 f2 3d 1a 22 f9 3d         ...=.".=
  10a15c:	 b2 63 ff 3d bb 9b 05 3e         .c.=...>
  10a164:	 34 ca 0b 3e 1b ef 11 3e         4..>...>
  10a16c:	 6f 0a 18 3e 30 1c 1e 3e         o..>0..>
  10a174:	 5d 24 24 3e f4 22 2a 3e         ]$$>."*>
  10a17c:	 f6 17 30 3e 60 03 36 3e         ..0>`.6>
  10a184:	 32 e5 3b 3e 6c bd 41 3e         2.;>l.A>
  10a18c:	 0b 8c 47 3e 10 51 4d 3e         ..G>.QM>
  10a194:	 7a 0c 53 3e 47 be 58 3e         z.S>G.X>
  10a19c:	 76 66 5e 3e 07 05 64 3e         vf^>..d>
  10a1a4:	 fa 99 69 3e 4c 25 6f 3e         ..i>L%o>
  10a1ac:	 fd a6 74 3e 0d 1f 7a 3e         ..t>..z>
  10a1b4:	 7b 8d 7f 3e 45 f2 84 3e         {..>E..>
  10a1bc:	 6a 4d 8a 3e eb 9e 8f 3e         jM.>...>
  10a1c4:	 c6 e6 94 3e fb 24 9a 3e         ...>.$.>
  10a1cc:	 88 59 9f 3e 6c 84 a4 3e         .Y.>l..>
  10a1d4:	 a8 a5 a9 3e 3a bd ae 3e         ...>:..>
  10a1dc:	 21 cb b3 3e 5d cf b8 3e         !..>]..>
  10a1e4:	 ed c9 bd 3e d0 ba c2 3e         ...>...>
  10a1ec:	 05 a2 c7 3e 8b 7f cc 3e         ...>...>
  10a1f4:	 63 53 d1 3e 8a 1d d6 3e         cS.>...>
  10a1fc:	 01 de da 3e c7 94 df 3e         ...>...>
  10a204:	 da 41 e4 3e 3a e5 e8 3e         .A.>:..>
  10a20c:	 e7 7e ed 3e e0 0e f2 3e         .~.>...>
  10a214:	 23 95 f6 3e b1 11 fb 3e         #..>...>
  10a21c:	 89 84 ff 3e a9 ed 03 3f         ...>...?
  10a224:	 12 4d 08 3f c2 a2 0c 3f         .M.?...?
  10a22c:	 b9 ee 10 3f f7 30 15 3f         ...?.0.?
  10a234:	 7a 69 19 3f 42 98 1d 3f         zi.?B..?
  10a23c:	 4e bd 21 3f 9e d8 25 3f         N.!?..%?
  10a244:	 31 ea 29 3f 06 f2 2d 3f         1.)?..-?
  10a24c:	 1d f0 31 3f 76 e4 35 3f         ..1?v.5?
  10a254:	 0e cf 39 3f e7 af 3d 3f         ..9?..=?
  10a25c:	 ff 86 41 3f 56 54 45 3f         ..A?VTE?
  10a264:	 eb 17 49 3f be d1 4c 3f         ..I?..L?
  10a26c:	 cd 81 50 3f 1a 28 54 3f         ..P?.(T?
  10a274:	 a2 c4 57 3f 65 57 5b 3f         ..W?eW[?
  10a27c:	 63 e0 5e 3f 9b 5f 62 3f         c.^?._b?
  10a284:	 0d d5 65 3f b8 40 69 3f         ..e?.@i?
  10a28c:	 9c a2 6c 3f b8 fa 6f 3f         ..l?..o?
  10a294:	 0b 49 73 3f 96 8d 76 3f         .Is?..v?
  10a29c:	 57 c8 79 3f 4e f9 7c 3f         W.y?N.|?
  10a2a4:	 7b 20 80 3f dd 3d 83 3f         { .?.=.?
  10a2ac:	 74 51 86 3f 3e 5b 89 3f         tQ.?>[.?
  10a2b4:	 3d 5b 8c 3f 6e 51 8f 3f         =[.?nQ.?
  10a2bc:	 d2 3d 92 3f 69 20 95 3f         .=.?i .?
  10a2c4:	 32 f9 97 3f 2c c8 9a 3f         2..?,..?
  10a2cc:	 56 8d 9d 3f b2 48 a0 3f         V..?.H.?
  10a2d4:	 3d fa a2 3f f9 a1 a5 3f         =..?...?
  10a2dc:	 e3 3f a8 3f fd d3 aa 3f         .?.?...?
  10a2e4:	 45 5e ad 3f bb de af 3f         E^.?...?
  10a2ec:	 5f 55 b2 3f 31 c2 b4 3f         _U.?1..?
  10a2f4:	 2f 25 b7 3f 5a 7e b9 3f         /%.?Z~.?
  10a2fc:	 b1 cd bb 3f 34 13 be 3f         ...?4..?
  10a304:	 e3 4e c0 3f bc 80 c2 3f         .N.?...?
  10a30c:	 c1 a8 c4 3f f0 c6 c6 3f         ...?...?
  10a314:	 4a db c8 3f cd e5 ca 3f         J..?...?
  10a31c:	 7a e6 cc 3f 50 dd ce 3f         z..?P..?
  10a324:	 4f ca d0 3f 77 ad d2 3f         O..?w..?
  10a32c:	 c7 86 d4 3f 3f 56 d6 3f         ...??V.?
  10a334:	 df 1b d8 3f a7 d7 d9 3f         ...?...?
  10a33c:	 96 89 db 3f ac 31 dd 3f         ...?.1.?
  10a344:	 e8 cf de 3f 4b 64 e0 3f         ...?Kd.?
  10a34c:	 d5 ee e1 3f 84 6f e3 3f         ...?.o.?
  10a354:	 59 e6 e4 3f 54 53 e6 3f         Y..?TS.?
  10a35c:	 74 b6 e7 3f b9 0f e9 3f         t..?...?
  10a364:	 23 5f ea 3f b2 a4 eb 3f         #_.?...?
  10a36c:	 65 e0 ec 3f 3d 12 ee 3f         e..?=..?
  10a374:	 39 3a ef 3f 58 58 f0 3f         9:.?XX.?
  10a37c:	 9c 6c f1 3f 03 77 f2 3f         .l.?.w.?
  10a384:	 8e 77 f3 3f 3c 6e f4 3f         .w.?<n.?
  10a38c:	 0d 5b f5 3f 01 3e f6 3f         .[.?.>.?
  10a394:	 18 17 f7 3f 52 e6 f7 3f         ...?R..?
  10a39c:	 ae ab f8 3f 2d 67 f9 3f         ...?-g.?
  10a3a4:	 cf 18 fa 3f 92 c0 fa 3f         ...?...?
  10a3ac:	 78 5e fb 3f 80 f2 fb 3f         x^.?...?
  10a3b4:	 aa 7c fc 3f f6 fc fc 3f         .|.?...?
  10a3bc:	 64 73 fd 3f f3 df fd 3f         ds.?...?
  10a3c4:	 a4 42 fe 3f 77 9b fe 3f         .B.?w..?
  10a3cc:	 6c ea fe 3f 82 2f ff 3f         l..?./.?
  10a3d4:	 b9 6a ff 3f 12 9c ff 3f         .j.?...?
  10a3dc:	 8c c3 ff 3f 28 e1 ff 3f         ...?(..?
  10a3e4:	 e6 f4 ff 3f c4 fe ff 3f         


sine_short_128:
  10a3ec:	 c4 87 64 00 6c 93 2d 01         ..d.l.-.
  10a3f4:	 73 93 f6 01 1a 80 bf 02         s.......
  10a3fc:	 a2 51 88 03 4d 00 51 04         .Q..M.Q.
  10a404:	 5e 84 19 05 1b d6 e1 05         ^.......
  10a40c:	 c9 ed a9 06 b3 c3 71 07         ......q.
  10a414:	 24 50 39 08 6a 8b 00 09         $P9.j...
  10a41c:	 d8 6d c7 09 c3 ef 8d 0a         .m......
  10a424:	 82 09 54 0b 74 b3 19 0c         ..T.t...
  10a42c:	 f9 e5 de 0c 78 99 a3 0d         ....x...
  10a434:	 5a c6 67 0e 0f 65 2b 0f         Z.g..e+.
  10a43c:	 0d 6e ee 0f d0 d9 b0 10         .n......
  10a444:	 d7 a0 72 11 ac bb 33 12         ..r...3.
  10a44c:	 db 22 f4 12 fa ce b3 13         ."......
  10a454:	 a5 b8 72 14 81 d8 30 15         ..r...0.
  10a45c:	 38 27 ee 15 7e 9d aa 16         8'..~...
  10a464:	 0f 34 66 17 b0 e3 20 18         .4f... .
  10a46c:	 2f a5 da 18 61 71 93 19         /...aq..
  10a474:	 28 41 4b 1a 6c 0d 02 1b         (AK.l...
  10a47c:	 23 cf b7 1b 4a 7f 6c 1c         #...J.l.
  10a484:	 e9 16 20 1d 15 8f d2 1d         .. .....
  10a48c:	 eb e0 83 1e 96 05 34 1f         ......4.
  10a494:	 4c f6 e2 1f 4d ac 90 20         L...M.. 
  10a49c:	 e8 20 3d 21 76 4d e8 21         . =!vM.!
  10a4a4:	 5e 2b 92 22 14 b4 3a 23         ^+."..:#
  10a4ac:	 17 e1 e1 23 f7 ab 87 24         ...#...$
  10a4b4:	 4f 0e 2c 25 c8 01 cf 25         O.,%...%
  10a4bc:	 1a 80 70 26 0c 83 10 27         ..p&...'
  10a4c4:	 72 04 af 27 2f fe 4b 28         r..'/.K(
  10a4cc:	 37 6a e7 28 8c 42 81 29         7j.(.B.)
  10a4d4:	 3f 81 19 2a 71 20 b0 2a         ?..*q .*
  10a4dc:	 55 1a 45 2b 2b 69 d8 2b         U.E++i.+
  10a4e4:	 46 07 6a 2c 09 ef f9 2c         F.j,...,
  10a4ec:	 e8 1a 88 2d 66 85 14 2e         ...-f...
  10a4f4:	 1b 29 9f 2e af 00 28 2f         .)....(/
  10a4fc:	 da 06 af 2f 67 36 34 30         .../g640
  10a504:	 36 8a b7 30 35 fd 38 31         6..05.81
  10a50c:	 66 8a b8 31 e0 2c 36 32         f..1.,62
  10a514:	 c9 df b1 32 5e 9e 2b 33         ...2^.+3
  10a51c:	 ec 63 a3 33 d5 2b 19 34         .c.3.+.4
  10a524:	 90 f1 8c 34 a5 b0 fe 34         ...4...4
  10a52c:	 b2 64 6e 35 68 09 dc 35         .dn5h..5
  10a534:	 8e 9a 47 36 fd 13 b1 36         ..G6...6
  10a53c:	 a5 71 18 37 89 af 7d 37         .q.7..}7
  10a544:	 c3 c9 e0 37 7f bc 41 38         ...7..A8
  10a54c:	 02 84 a0 38 a4 1c fd 38         ...8...8
  10a554:	 d3 82 57 39 13 b3 af 39         ..W9...9
  10a55c:	 fd a9 05 3a 42 64 59 3a         ...:BdY:
  10a564:	 a6 de aa 3a 05 16 fa 3a         ...:...:
  10a56c:	 53 07 47 3b 97 af 91 3b         S.G;...;
  10a574:	 f0 0b da 3b 94 19 20 3c         ...;.. <
  10a57c:	 d1 d5 63 3c 09 3e a5 3c         ..c<.>.<
  10a584:	 b7 4f e4 3c 6c 08 21 3d         .O.<l.!=
  10a58c:	 d2 65 5b 3d a8 65 93 3d         .e[=.e.=
  10a594:	 c5 05 c9 3d 18 44 fc 3d         ...=.D.=
  10a59c:	 a8 1e 2d 3e 92 93 5b 3e         ..->..[>
  10a5a4:	 0c a1 87 3e 63 45 b1 3e         ...>cE.>
  10a5ac:	 fc 7e d8 3e 54 4c fd 3e         .~.>TL.>
  10a5b4:	 ff ab 1f 3f ab 9c 3f 3f         ...?..??
  10a5bc:	 1d 1d 5d 3f 30 2c 78 3f         ..]?0,x?
  10a5c4:	 da c8 90 3f 28 f2 a6 3f         ...?(..?
  10a5cc:	 40 a7 ba 3f 5e e7 cb 3f         @..?^..?
  10a5d4:	 d9 b1 da 3f 1f 06 e7 3f         ...?...?
  10a5dc:	 b6 e3 f0 3f 3c 4a f8 3f         ...?<J.?
  10a5e4:	 69 39 fd 3f 0b b1 ff 3f         


kbd_long_1024:
  10a5ec:	 18 cb 04 00 7e 0b 07 00         ....~...
  10a5f4:	 32 f5 08 00 87 ba 0a 00         2.......
  10a5fc:	 3a 6e 0c 00 97 19 0e 00         :n......
  10a604:	 fa c1 0f 00 cd 6a 11 00         .....j..
  10a60c:	 61 16 13 00 62 c6 14 00         a...b...
  10a614:	 0f 7c 16 00 62 38 18 00         .|..b8..
  10a61c:	 20 fc 19 00 ed c7 1b 00          .......
  10a624:	 50 9c 1d 00 c1 79 1f 00         P....y..
  10a62c:	 a4 60 21 00 54 51 23 00         .`!.TQ#.
  10a634:	 23 4c 25 00 5c 51 27 00         #L%.\Q'.
  10a63c:	 42 61 29 00 15 7c 2b 00         Ba)..|+.
  10a644:	 11 a2 2d 00 6f d3 2f 00         ..-.o./.
  10a64c:	 64 10 32 00 24 59 34 00         d.2.$Y4.
  10a654:	 e2 ad 36 00 cd 0e 39 00         ..6...9.
  10a65c:	 14 7c 3b 00 e5 f5 3d 00         .|;...=.
  10a664:	 6d 7c 40 00 d7 0f 43 00         m|@...C.
  10a66c:	 4f b0 45 00 ff 5d 48 00         O.E..]H.
  10a674:	 12 19 4b 00 b1 e1 4d 00         ..K...M.
  10a67c:	 05 b8 50 00 36 9c 53 00         ..P.6.S.
  10a684:	 6e 8e 56 00 d4 8e 59 00         n.V...Y.
  10a68c:	 91 9d 5c 00 cb ba 5f 00         ..\..._.
  10a694:	 ab e6 62 00 59 21 66 00         ..b.Y!f.
  10a69c:	 fa 6a 69 00 b6 c3 6c 00         .ji...l.
  10a6a4:	 b5 2b 70 00 1c a3 73 00         .+p...s.
  10a6ac:	 13 2a 77 00 c1 c0 7a 00         .*w...z.
  10a6b4:	 4c 67 7e 00 da 1d 82 00         Lg~.....
  10a6bc:	 92 e4 85 00 9a bb 89 00         ........
  10a6c4:	 19 a3 8d 00 35 9b 91 00         ....5...
  10a6cc:	 14 a4 95 00 dc bd 99 00         ........
  10a6d4:	 b4 e8 9d 00 c1 24 a2 00         .....$..
  10a6dc:	 2a 72 a6 00 15 d1 aa 00         *r......
  10a6e4:	 a7 41 af 00 06 c4 b3 00         .A......
  10a6ec:	 59 58 b8 00 c5 fe bc 00         YX......
  10a6f4:	 71 b7 c1 00 80 82 c6 00         q.......
  10a6fc:	 1b 60 cb 00 65 50 d0 00         .`..eP..
  10a704:	 85 53 d5 00 a1 69 da 00         .S...i..
  10a70c:	 dd 92 df 00 5f cf e4 00         ...._...
  10a714:	 4d 1f ea 00 cc 82 ef 00         M.......
  10a71c:	 01 fa f4 00 11 85 fa 00         ........
  10a724:	 22 24 00 01 59 d7 05 01         "$..Y...
  10a72c:	 da 9e 0b 01 cb 7a 11 01         .....z..
  10a734:	 51 6b 17 01 90 70 1d 01         Qk...p..
  10a73c:	 ad 8a 23 01 cc b9 29 01         ..#...).
  10a744:	 13 fe 2f 01 a5 57 36 01         ../..W6.
  10a74c:	 a8 c6 3c 01 3e 4b 43 01         ..<.>KC.
  10a754:	 8e e5 49 01 b9 95 50 01         ..I...P.
  10a75c:	 e6 5b 57 01 37 38 5e 01         .[W.78^.
  10a764:	 d0 2a 65 01 d5 33 6c 01         .*e..3l.
  10a76c:	 69 53 73 01 b1 89 7a 01         iSs...z.
  10a774:	 ce d6 81 01 e5 3a 89 01         .....:..
  10a77c:	 18 b6 90 01 8b 48 98 01         .....H..
  10a784:	 60 f2 9f 01 ba b3 a7 01         `.......
  10a78c:	 bb 8c af 01 86 7d b7 01         .....}..
  10a794:	 3c 86 bf 01 01 a7 c7 01         <.......
  10a79c:	 f6 df cf 01 3d 31 d8 01         ....=1..
  10a7a4:	 f7 9a e0 01 46 1d e9 01         ....F...
  10a7ac:	 4b b8 f1 01 27 6c fa 01         K...'l..
  10a7b4:	 fc 38 03 02 ea 1e 0c 02         .8......
  10a7bc:	 11 1e 15 02 93 36 1e 02         .....6..
  10a7c4:	 8f 68 27 02 25 b4 30 02         .h'.%.0.
  10a7cc:	 76 19 3a 02 a1 98 43 02         v.:...C.
  10a7d4:	 c5 31 4d 02 01 e5 56 02         .1M...V.
  10a7dc:	 76 b2 60 02 41 9a 6a 02         v.`.A.j.
  10a7e4:	 82 9c 74 02 56 b9 7e 02         ..t.V.~.
  10a7ec:	 dc f0 88 02 32 43 93 02         ....2C..
  10a7f4:	 76 b0 9d 02 c5 38 a8 02         v....8..
  10a7fc:	 3d dc b2 02 fb 9a bd 02         =.......
  10a804:	 1b 75 c8 02 bb 6a d3 02         .u...j..
  10a80c:	 f6 7b de 02 e9 a8 e9 02         .{......
  10a814:	 af f1 f4 02 65 56 00 03         ....eV..
  10a81c:	 25 d7 0b 03 0b 74 17 03         %....t..
  10a824:	 32 2d 23 03 b4 02 2f 03         2-#.../.
  10a82c:	 ab f4 3a 03 32 03 47 03         ..:.2.G.
  10a834:	 63 2e 53 03 56 76 5f 03         c.S.Vv_.
  10a83c:	 26 db 6b 03 ea 5c 78 03         &.k..\x.
  10a844:	 bc fb 84 03 b4 b7 91 03         ........
  10a84c:	 ea 90 9e 03 77 87 ab 03         ....w...
  10a854:	 70 9b b8 03 ef cc c5 03         p.......
  10a85c:	 08 1c d3 03 d4 88 e0 03         ........
  10a864:	 68 13 ee 03 da bb fb 03         h.......
  10a86c:	 40 82 09 04 af 66 17 04         @....f..
  10a874:	 3d 69 25 04 fd 89 33 04         =i%...3.
  10a87c:	 05 c9 41 04 67 26 50 04         ..A.g&P.
  10a884:	 39 a2 5e 04 8d 3c 6d 04         9.^..<m.
  10a88c:	 76 f5 7b 04 06 cd 8a 04         v.{.....
  10a894:	 52 c3 99 04 69 d8 a8 04         R...i...
  10a89c:	 5e 0c b8 04 42 5f c7 04         ^...B_..
  10a8a4:	 26 d1 d6 04 1b 62 e6 04         &....b..
  10a8ac:	 30 12 f6 04 76 e1 05 05         0...v...
  10a8b4:	 fc cf 15 05 d1 dd 25 05         ......%.
  10a8bc:	 04 0b 36 05 a4 57 46 05         ..6..WF.
  10a8c4:	 bd c3 56 05 5f 4f 67 05         ..V._Og.
  10a8cc:	 96 fa 77 05 6e c5 88 05         ..w.n...
  10a8d4:	 f5 af 99 05 37 ba aa 05         ....7...
  10a8dc:	 3f e4 bb 05 18 2e cd 05         ?.......
  10a8e4:	 ce 97 de 05 6b 21 f0 05         ....k!..
  10a8ec:	 f9 ca 01 06 81 94 13 06         ........
  10a8f4:	 0e 7e 25 06 a8 87 37 06         .~%...7.
  10a8fc:	 57 b1 49 06 24 fb 5b 06         W.I.$.[.
  10a904:	 16 65 6e 06 34 ef 80 06         .en.4...
  10a90c:	 86 99 93 06 12 64 a6 06         .....d..
  10a914:	 de 4e b9 06 f0 59 cc 06         .N...Y..
  10a91c:	 4c 85 df 06 f7 d0 f2 06         L.......
  10a924:	 f7 3c 06 07 4e c9 19 07         .<..N...
  10a92c:	 00 76 2d 07 10 43 41 07         .v-..CA.
  10a934:	 81 30 55 07 56 3e 69 07         .0U.V>i.
  10a93c:	 8f 6c 7d 07 2e bb 91 07         .l}.....
  10a944:	 34 2a a6 07 a1 b9 ba 07         4*......
  10a94c:	 76 69 cf 07 b2 39 e4 07         vi...9..
  10a954:	 54 2a f9 07 5a 3b 0e 08         T*..Z;..
  10a95c:	 c4 6c 23 08 8e be 38 08         .l#...8.
  10a964:	 b6 30 4e 08 38 c3 63 08         .0N.8.c.
  10a96c:	 12 76 79 08 40 49 8f 08         .vy.@I..
  10a974:	 bc 3c a5 08 81 50 bb 08         .<...P..
  10a97c:	 8b 84 d1 08 d4 d8 e7 08         ........
  10a984:	 54 4d fe 08 06 e2 14 09         TM......
  10a98c:	 e3 96 2b 09 e1 6b 42 09         ..+..kB.
  10a994:	 fa 60 59 09 24 76 70 09         .`Y.$vp.
  10a99c:	 57 ab 87 09 89 00 9f 09         W.......
  10a9a4:	 b0 75 b6 09 c1 0a ce 09         .u......
  10a9ac:	 b2 bf e5 09 77 94 fd 09         ....w...
  10a9b4:	 03 89 15 0a 4c 9d 2d 0a         ....L.-.
  10a9bc:	 44 d1 45 0a dd 24 5e 0a         D.E..$^.
  10a9c4:	 0b 98 76 0a be 2a 8f 0a         ..v..*..
  10a9cc:	 e8 dc a7 0a 7a ae c0 0a         ....z...
  10a9d4:	 64 9f d9 0a 96 af f2 0a         d.......
  10a9dc:	 00 df 0b 0b 90 2d 25 0b         .....-%.
  10a9e4:	 35 9b 3e 0b dc 27 58 0b         5.>..'X.
  10a9ec:	 75 d3 71 0b ea 9d 8b 0b         u.q.....
  10a9f4:	 2a 87 a5 0b 20 8f bf 0b         *... ...
  10a9fc:	 b8 b5 d9 0b dd fa f3 0b         ........
  10aa04:	 79 5e 0e 0c 78 e0 28 0c         y^..x.(.
  10aa0c:	 c2 80 43 0c 41 3f 5e 0c         ..C.A?^.
  10aa14:	 df 1b 79 0c 82 16 94 0c         ..y.....
  10aa1c:	 13 2f af 0c 7a 65 ca 0c         ./..ze..
  10aa24:	 9e b9 e5 0c 64 2b 01 0d         ....d+..
  10aa2c:	 b4 ba 1c 0d 72 67 38 0d         ....rg8.
  10aa34:	 84 31 54 0d ce 18 70 0d         .1T...p.
  10aa3c:	 35 1d 8c 0d 9c 3e a8 0d         5....>..
  10aa44:	 e6 7c c4 0d f6 d7 e0 0d         .|......
  10aa4c:	 b0 4f fd 0d f3 e3 19 0e         .O......
  10aa54:	 a3 94 36 0e 9f 61 53 0e         ..6..aS.
  10aa5c:	 c8 4a 70 0e ff 4f 8d 0e         .Jp..O..
  10aa64:	 23 71 aa 0e 14 ae c7 0e         #q......
  10aa6c:	 af 06 e5 0e d3 7a 02 0f         .....z..
  10aa74:	 5d 0a 20 0f 2d b5 3d 0f         ]. .-.=.
  10aa7c:	 1d 7b 5b 0f 0b 5c 79 0f         .{[..\y.
  10aa84:	 d2 57 97 0f 4f 6e b5 0f         .W..On..
  10aa8c:	 5c 9f d3 0f d5 ea f1 0f         \.......
  10aa94:	 92 50 10 10 6f d0 2e 10         .P..o...
  10aa9c:	 45 6a 4d 10 ec 1d 6c 10         EjM...l.
  10aaa4:	 3d eb 8a 10 11 d2 a9 10         =.......
  10aaac:	 3e d2 c8 10 9d eb e7 10         >.......
  10aab4:	 04 1e 07 11 4a 69 26 11         ....Ji&.
  10aabc:	 44 cd 45 11 c8 49 65 11         D.E..Ie.
  10aac4:	 ac de 84 11 c4 8b a4 11         ........
  10aacc:	 e5 50 c4 11 e2 2d e4 11         .P...-..
  10aad4:	 90 22 04 12 c1 2e 24 12         ."....$.
  10aadc:	 48 52 44 12 f7 8c 64 12         HRD...d.
  10aae4:	 a1 de 84 12 17 47 a5 12         .....G..
  10aaec:	 2b c6 c5 12 ac 5b e6 12         +....[..
  10aaf4:	 6c 07 07 13 3b c9 27 13         l...;.'.
  10aafc:	 e8 a0 48 13 43 8e 69 13         ..H.C.i.
  10ab04:	 1a 91 8a 13 3c a9 ab 13         ....<...
  10ab0c:	 78 d6 cc 13 9b 18 ee 13         x.......
  10ab14:	 72 6f 0f 14 cb da 30 14         ro....0.
  10ab1c:	 73 5a 52 14 35 ee 73 14         sZR.5.s.
  10ab24:	 df 95 95 14 3b 51 b7 14         ....;Q..
  10ab2c:	 15 20 d9 14 38 02 fb 14         . ..8...
  10ab34:	 6f f7 1c 15 84 ff 3e 15         o.....>.
  10ab3c:	 41 1a 61 15 6f 47 83 15         A.a.oG..
  10ab44:	 d9 86 a5 15 48 d8 c7 15         ....H...
  10ab4c:	 83 3b ea 15 53 b0 0c 16         .;..S...
  10ab54:	 81 36 2f 16 d4 cd 51 16         .6/...Q.
  10ab5c:	 14 76 74 16 08 2f 97 16         .vt../..
  10ab64:	 77 f8 b9 16 27 d2 dc 16         w...'...
  10ab6c:	 df bb ff 16 64 b5 22 17         ....d.".
  10ab74:	 7e be 45 17 f0 d6 68 17         ~.E...h.
  10ab7c:	 80 fe 8b 17 f4 34 af 17         .....4..
  10ab84:	 0f 7a d2 17 96 cd f5 17         .z......
  10ab8c:	 4e 2f 19 18 f9 9e 3c 18         N/....<.
  10ab94:	 5d 1c 60 18 3b a7 83 18         ].`.;...
  10ab9c:	 58 3f a7 18 75 e4 ca 18         X?..u...
  10aba4:	 57 96 ee 18 bf 54 12 19         W....T..
  10abac:	 6e 1f 36 19 29 f6 59 19         n.6.).Y.
  10abb4:	 af d8 7d 19 c2 c6 a1 19         ..}.....
  10abbc:	 25 c0 c5 19 97 c4 e9 19         %.......
  10abc4:	 da d3 0d 1a af ed 31 1a         ......1.
  10abcc:	 d6 11 56 1a 0e 40 7a 1a         ..V..@z.
  10abd4:	 1a 78 9e 1a b7 b9 c2 1a         .x......
  10abdc:	 a7 04 e7 1a a8 58 0b 1b         .....X..
  10abe4:	 7a b5 2f 1b dc 1a 54 1b         z./...T.
  10abec:	 8e 88 78 1b 4e fe 9c 1b         ..x.N...
  10abf4:	 db 7b c1 1b f3 00 e6 1b         .{......
  10abfc:	 56 8d 0a 1c c1 20 2f 1c         V.... /.
  10ac04:	 f2 ba 53 1c a8 5b 78 1c         ..S..[x.
  10ac0c:	 a1 02 9d 1c 9a af c1 1c         ........
  10ac14:	 51 62 e6 1c 83 1a 0b 1d         Qb......
  10ac1c:	 ef d7 2f 1d 51 9a 54 1d         ../.Q.T.
  10ac24:	 66 61 79 1d ed 2c 9e 1d         fay..,..
  10ac2c:	 a1 fc c2 1d 41 d0 e7 1d         ....A...
  10ac34:	 88 a7 0c 1e 34 82 31 1e         ....4.1.
  10ac3c:	 01 60 56 1e ac 40 7b 1e         .`V..@{.
  10ac44:	 f2 23 a0 1e 8f 09 c5 1e         .#......
  10ac4c:	 40 f1 e9 1e c1 da 0e 1f         @.......
  10ac54:	 cf c5 33 1f 26 b2 58 1f         ..3.&.X.
  10ac5c:	 82 9f 7d 1f a0 8d a2 1f         ..}.....
  10ac64:	 3c 7c c7 1f 11 6b ec 1f         <|...k..
  10ac6c:	 de 59 11 20 5d 48 36 20         .Y. ]H6 
  10ac74:	 4b 36 5b 20 64 23 80 20         K6[ d#. 
  10ac7c:	 64 0f a5 20 08 fa c9 20         d.. ... 
  10ac84:	 0c e3 ee 20 2c ca 13 21         ... ,..!
  10ac8c:	 24 af 38 21 b1 91 5d 21         $.8!..]!
  10ac94:	 8e 71 82 21 7a 4e a7 21         .q.!zN.!
  10ac9c:	 2e 28 cc 21 6a fe f0 21         .(.!j..!
  10aca4:	 e8 d0 15 22 65 9f 3a 22         ..."e.:"
  10acac:	 9e 69 5f 22 50 2f 84 22         .i_"P/."
  10acb4:	 37 f0 a8 22 10 ac cd 22         7.."..."
  10acbc:	 98 62 f2 22 8d 13 17 23         .b."...#
  10acc4:	 aa be 3b 23 ae 63 60 23         ..;#.c`#
  10accc:	 55 02 85 23 5e 9a a9 23         U..#^..#
  10acd4:	 84 2b ce 23 87 b5 f2 23         .+.#...#
  10acdc:	 23 38 17 24 17 b3 3b 24         #8.$..;$
  10ace4:	 20 26 60 24 fd 90 84 24          &`$...$
  10acec:	 6b f3 a8 24 29 4d cd 24         k..$)M.$
  10acf4:	 f6 9d f1 24 90 e5 15 25         ...$...%
  10acfc:	 b6 23 3a 25 27 58 5e 25         .#:%'X^%
  10ad04:	 a1 82 82 25 e5 a2 a6 25         ...%...%
  10ad0c:	 b2 b8 ca 25 c7 c3 ee 25         ...%...%
  10ad14:	 e4 c3 12 26 c8 b8 36 26         ...&..6&
  10ad1c:	 36 a2 5a 26 eb 7f 7e 26         6.Z&..~&
  10ad24:	 aa 51 a2 26 33 17 c6 26         .Q.&3..&
  10ad2c:	 46 d0 e9 26 a6 7c 0d 27         F..&.|.'
  10ad34:	 13 1c 31 27 4f ae 54 27         ..1'O.T'
  10ad3c:	 1c 33 78 27 3c aa 9b 27         .3x'<..'
  10ad44:	 71 13 bf 27 7e 6e e2 27         q..'~n.'
  10ad4c:	 25 bb 05 28 2a f9 28 28         %..(*.((
  10ad54:	 50 28 4c 28 5a 48 6f 28         P(L(ZHo(
  10ad5c:	 0c 59 92 28 2b 5a b5 28         .Y.(+Z.(
  10ad64:	 7a 4b d8 28 be 2c fb 28         zK.(.,.(
  10ad6c:	 bc fd 1d 29 39 be 40 29         ...)9.@)
  10ad74:	 fb 6d 63 29 c7 0c 86 29         .mc)...)
  10ad7c:	 63 9a a8 29 95 16 cb 29         c..)...)
  10ad84:	 25 81 ed 29 d9 d9 0f 2a         %..)...*
  10ad8c:	 78 20 32 2a c9 54 54 2a         x 2*.TT*
  10ad94:	 96 76 76 2a a4 85 98 2a         .vv*...*
  10ad9c:	 be 81 ba 2a ac 6a dc 2a         ...*.j.*
  10ada4:	 37 40 fe 2a 29 02 20 2b         7@.*). +
  10adac:	 4b b0 41 2b 68 4a 63 2b         K.A+hJc+
  10adb4:	 49 d0 84 2b ba 41 a6 2b         I..+.A.+
  10adbc:	 86 9e c7 2b 79 e6 e8 2b         ...+y..+
  10adc4:	 5e 19 0a 2c 02 37 2b 2c         ^..,.7+,
  10adcc:	 31 3f 4c 2c b9 31 6d 2c         1?L,.1m,
  10add4:	 66 0e 8e 2c 07 d5 ae 2c         f..,...,
  10addc:	 69 85 cf 2c 5b 1f f0 2c         i..,[..,
  10ade4:	 ac a2 10 2d 2b 0f 31 2d         ...-+.1-
  10adec:	 a8 64 51 2d f3 a2 71 2d         .dQ-..q-
  10adf4:	 dd c9 91 2d 36 d9 b1 2d         ...-6..-
  10adfc:	 cf d0 d1 2d 7b b0 f1 2d         ...-{..-
  10ae04:	 0b 78 11 2e 52 27 31 2e         .x..R'1.
  10ae0c:	 22 be 50 2e 50 3c 70 2e         ".P.P<p.
  10ae14:	 ae a1 8f 2e 12 ee ae 2e         ........
  10ae1c:	 4f 21 ce 2e 3b 3b ed 2e         O!..;;..
  10ae24:	 ab 3b 0c 2f 76 22 2b 2f         .;./v"+/
  10ae2c:	 70 ef 49 2f 72 a2 68 2f         p.I/r.h/
  10ae34:	 52 3b 87 2f e9 b9 a5 2f         R;./.../
  10ae3c:	 0e 1e c4 2f 99 67 e2 2f         .../.g./
  10ae44:	 65 96 00 30 4a aa 1e 30         e..0J..0
  10ae4c:	 22 a3 3c 30 c8 80 5a 30         ".<0..Z0
  10ae54:	 16 43 78 30 e9 e9 95 30         .Cx0...0
  10ae5c:	 1b 75 b3 30 89 e4 d0 30         .u.0...0
  10ae64:	 0f 38 ee 30 8c 6f 0b 31         .8.0.o.1
  10ae6c:	 dc 8a 28 31 de 89 45 31         ..(1..E1
  10ae74:	 70 6c 62 31 71 32 7f 31         plb1q2.1
  10ae7c:	 c2 db 9b 31 41 68 b8 31         ...1Ah.1
  10ae84:	 d1 d7 d4 31 51 2a f1 31         ...1Q*.1
  10ae8c:	 a3 5f 0d 32 a9 77 29 32         ._.2.w)2
  10ae94:	 46 72 45 32 5d 4f 61 32         FrE2]Oa2
  10ae9c:	 d1 0e 7d 32 86 b0 98 32         ..}2...2
  10aea4:	 61 34 b4 32 46 9a cf 32         a4.2F..2
  10aeac:	 1c e2 ea 32 c7 0b 06 33         ...2...3
  10aeb4:	 30 17 21 33 3b 04 3c 33         0.!3;.<3
  10aebc:	 d2 d2 56 33 dc 82 71 33         ..V3..q3
  10aec4:	 41 14 8c 33 ea 86 a6 33         A..3...3
  10aecc:	 c2 da c0 33 b1 0f db 33         ...3...3
  10aed4:	 a3 25 f5 33 82 1c 0f 34         .%.3...4
  10aedc:	 3a f4 28 34 b7 ac 42 34         :.(4..B4
  10aee4:	 e6 45 5c 34 b3 bf 75 34         .E\4..u4
  10aeec:	 0c 1a 8f 34 e0 54 a8 34         ...4.T.4
  10aef4:	 1c 70 c1 34 b0 6b da 34         .p.4.k.4
  10aefc:	 8b 47 f3 34 9e 03 0c 35         .G.4...5
  10af04:	 d9 9f 24 35 2d 1c 3d 35         ..$5-.=5
  10af0c:	 8d 78 55 35 e9 b4 6d 35         .xU5..m5
  10af14:	 35 d1 85 35 64 cd 9d 35         5..5d..5
  10af1c:	 6a a9 b5 35 3a 65 cd 35         j..5:e.5
  10af24:	 ca 00 e5 35 0f 7c fc 35         ...5.|.5
  10af2c:	 fe d6 13 36 8d 11 2b 36         ...6..+6
  10af34:	 b5 2b 42 36 6a 25 59 36         .+B6j%Y6
  10af3c:	 a7 fe 6f 36 62 b7 86 36         ..o6b..6
  10af44:	 94 4f 9d 36 38 c7 b3 36         .O.68..6
  10af4c:	 46 1e ca 36 b8 54 e0 36         F..6.T.6
  10af54:	 8b 6a f6 36 b8 5f 0c 37         .j.6._.7
  10af5c:	 3c 34 22 37 13 e8 37 37         <4"7..77
  10af64:	 3a 7b 4d 37 ae ed 62 37         :{M7..b7
  10af6c:	 6d 3f 78 37 75 70 8d 37         m?x7up.7
  10af74:	 c5 80 a2 37 5c 70 b7 37         ...7\p.7
  10af7c:	 3a 3f cc 37 60 ed e0 37         :?.7`..7
  10af84:	 cd 7a f5 37 84 e7 09 38         .z.7...8
  10af8c:	 86 33 1e 38 d5 5e 32 38         .3.8.^28
  10af94:	 74 69 46 38 65 53 5a 38         tiF8eSZ8
  10af9c:	 ae 1c 6e 38 51 c5 81 38         ..n8Q..8
  10afa4:	 54 4d 95 38 bb b4 a8 38         TM.8...8
  10afac:	 8c fb bb 38 cd 21 cf 38         ...8.!.8
  10afb4:	 85 27 e2 38 ba 0c f5 38         .'.8...8
  10afbc:	 75 d1 07 39 bb 75 1a 39         u..9.u.9
  10afc4:	 97 f9 2c 39 11 5d 3f 39         ..,9.]?9
  10afcc:	 32 a0 51 39 04 c3 63 39         2.Q9..c9
  10afd4:	 91 c5 75 39 e4 a7 87 39         ..u9...9
  10afdc:	 07 6a 99 39 06 0c ab 39         .j.9...9
  10afe4:	 ee 8d bc 39 ca ef cd 39         ...9...9
  10afec:	 a7 31 df 39 93 53 f0 39         .1.9.S.9
  10aff4:	 9b 55 01 3a cd 37 12 3a         .U.:.7.:
  10affc:	 38 fa 22 3a eb 9c 33 3a         8.":..3:
  10b004:	 f5 1f 44 3a 66 83 54 3a         ..D:f.T:
  10b00c:	 4e c7 64 3a be eb 74 3a         N.d:..t:
  10b014:	 c6 f0 84 3a 79 d6 94 3a         ...:y..:
  10b01c:	 e8 9c a4 3a 25 44 b4 3a         ...:%D.:
  10b024:	 43 cc c3 3a 54 35 d3 3a         C..:T5.:
  10b02c:	 6d 7f e2 3a a1 aa f1 3a         m..:...:
  10b034:	 05 b7 00 3b ac a4 0f 3b         ...;...;
  10b03c:	 ab 73 1e 3b 19 24 2d 3b         .s.;.$-;
  10b044:	 0b b6 3b 3b 96 29 4a 3b         ..;;.)J;
  10b04c:	 d1 7e 58 3b d3 b5 66 3b         .~X;..f;
  10b054:	 b4 ce 74 3b 89 c9 82 3b         ..t;...;
  10b05c:	 6c a6 90 3b 75 65 9e 3b         l..;ue.;
  10b064:	 bb 06 ac 3b 58 8a b9 3b         ...;X..;
  10b06c:	 65 f0 c6 3b fc 38 d4 3b         e..;.8.;
  10b074:	 36 64 e1 3b 2d 72 ee 3b         6d.;-r.;
  10b07c:	 fc 62 fb 3b bf 36 08 3c         .b.;.6.<
  10b084:	 8e ed 14 3c 87 87 21 3c         ...<..!<
  10b08c:	 c6 04 2e 3c 65 65 3a 3c         ...<ee:<
  10b094:	 81 a9 46 3c 37 d1 52 3c         ..F<7.R<
  10b09c:	 a4 dc 5e 3c e5 cb 6a 3c         ..^<..j<
  10b0a4:	 17 9f 76 3c 59 56 82 3c         ..v<YV.<
  10b0ac:	 c7 f1 8d 3c 81 71 99 3c         ...<.q.<
  10b0b4:	 a5 d5 a4 3c 52 1e b0 3c         ...<R..<
  10b0bc:	 a6 4b bb 3c c2 5d c6 3c         .K.<.].<
  10b0c4:	 c4 54 d1 3c cc 30 dc 3c         .T.<.0.<
  10b0cc:	 fb f1 e6 3c 71 98 f1 3c         ...<q..<
  10b0d4:	 4e 24 fc 3c b3 95 06 3d         N$.<...=
  10b0dc:	 c1 ec 10 3d 99 29 1b 3d         ...=.).=
  10b0e4:	 5c 4c 25 3d 2c 55 2f 3d         \L%=,U/=
  10b0ec:	 2b 44 39 3d 7b 19 43 3d         +D9={.C=
  10b0f4:	 3e d5 4c 3d 96 77 56 3d         >.L=.wV=
  10b0fc:	 a6 00 60 3d 91 70 69 3d         ..`=.pi=
  10b104:	 79 c7 72 3d 83 05 7c 3d         y.r=..|=
  10b10c:	 d0 2a 85 3d 84 37 8e 3d         .*.=.7.=
  10b114:	 c4 2b 97 3d b3 07 a0 3d         .+.=...=
  10b11c:	 74 cb a8 3d 2c 77 b1 3d         t..=,w.=
  10b124:	 ff 0a ba 3d 11 87 c2 3d         ...=...=
  10b12c:	 87 eb ca 3d 86 38 d3 3d         ...=.8.=
  10b134:	 31 6e db 3d af 8c e3 3d         1n.=...=
  10b13c:	 24 94 eb 3d b5 84 f3 3d         $..=...=
  10b144:	 88 5e fb 3d c1 21 03 3e         .^.=.!.>
  10b14c:	 86 ce 0a 3e fc 64 12 3e         ...>.d.>
  10b154:	 4a e5 19 3e 95 4f 21 3e         J..>.O!>
  10b15c:	 03 a4 28 3e b9 e2 2f 3e         ..(>../>
  10b164:	 dd 0b 37 3e 96 1f 3e 3e         ..7>..>>
  10b16c:	 09 1e 45 3e 5e 07 4c 3e         ..E>^.L>
  10b174:	 b8 db 52 3e 40 9b 59 3e         ..R>@.Y>
  10b17c:	 1c 46 60 3e 71 dc 66 3e         .F`>q.f>
  10b184:	 66 5e 6d 3e 22 cc 73 3e         f^m>".s>
  10b18c:	 cb 25 7a 3e 87 6b 80 3e         .%z>.k.>
  10b194:	 7d 9d 86 3e d4 bb 8c 3e         }..>...>
  10b19c:	 b2 c6 92 3e 3d be 98 3e         ...>=..>
  10b1a4:	 9d a2 9e 3e f7 73 a4 3e         ...>.s.>
  10b1ac:	 72 32 aa 3e 36 de af 3e         r2.>6..>
  10b1b4:	 68 77 b5 3e 2e fe ba 3e         hw.>...>
  10b1bc:	 b1 72 c0 3e 15 d5 c5 3e         .r.>...>
  10b1c4:	 82 25 cb 3e 1e 64 d0 3e         .%.>.d.>
  10b1cc:	 0f 91 d5 3e 7c ac da 3e         ...>|..>
  10b1d4:	 8b b6 df 3e 63 af e4 3e         ...>c..>
  10b1dc:	 29 97 e9 3e 04 6e ee 3e         )..>.n.>
  10b1e4:	 1b 34 f3 3e 93 e9 f7 3e         .4.>...>
  10b1ec:	 92 8e fc 3e 3e 23 01 3f         ...>>#.?
  10b1f4:	 be a7 05 3f 37 1c 0a 3f         ...?7..?
  10b1fc:	 ce 80 0e 3f aa d5 12 3f         ...?...?
  10b204:	 f1 1a 17 3f c7 50 1b 3f         ...?.P.?
  10b20c:	 52 77 1f 3f b7 8e 23 3f         Rw.?..#?
  10b214:	 1d 97 27 3f a7 90 2b 3f         ..'?..+?
  10b21c:	 7c 7b 2f 3f bf 57 33 3f         |{/?.W3?
  10b224:	 96 25 37 3f 25 e5 3a 3f         .%7?%.:?
  10b22c:	 92 96 3e 3f 00 3a 42 3f         ..>?.:B?
  10b234:	 95 cf 45 3f 73 57 49 3f         ..E?sWI?
  10b23c:	 c0 d1 4c 3f a0 3e 50 3f         ..L?.>P?
  10b244:	 36 9e 53 3f a6 f0 56 3f         6.S?..V?
  10b24c:	 13 36 5a 3f a2 6e 5d 3f         .6Z?.n]?
  10b254:	 75 9a 60 3f b0 b9 63 3f         u.`?..c?
  10b25c:	 75 cc 66 3f e8 d2 69 3f         u.f?..i?
  10b264:	 2b cd 6c 3f 62 bb 6f 3f         +.l?b.o?
  10b26c:	 ad 9d 72 3f 30 74 75 3f         ..r?0tu?
  10b274:	 0c 3f 78 3f 64 fe 7a 3f         .?x?d.z?
  10b27c:	 5a b2 7d 3f 0e 5b 80 3f         Z.}?.[.?
  10b284:	 a3 f8 82 3f 39 8b 85 3f         ...?9..?
  10b28c:	 f1 12 88 3f ee 8f 8a 3f         ...?...?
  10b294:	 4e 02 8d 3f 33 6a 8f 3f         N..?3j.?
  10b29c:	 bd c7 91 3f 0d 1b 94 3f         ...?...?
  10b2a4:	 42 64 96 3f 7b a3 98 3f         Bd.?{..?
  10b2ac:	 da d8 9a 3f 7c 04 9d 3f         ...?|..?
  10b2b4:	 82 26 9f 3f 09 3f a1 3f         .&.?.?.?
  10b2bc:	 32 4e a3 3f 1a 54 a5 3f         2N.?.T.?
  10b2c4:	 e1 50 a7 3f a3 44 a9 3f         .P.?.D.?
  10b2cc:	 80 2f ab 3f 95 11 ad 3f         ./.?...?
  10b2d4:	 ff ea ae 3f dc bb b0 3f         ...?...?
  10b2dc:	 4a 84 b2 3f 64 44 b4 3f         J..?dD.?
  10b2e4:	 49 fc b5 3f 14 ac b7 3f         I..?...?
  10b2ec:	 e1 53 b9 3f cd f3 ba 3f         .S.?...?
  10b2f4:	 f5 8b bc 3f 72 1c be 3f         ...?r..?
  10b2fc:	 61 a5 bf 3f dd 26 c1 3f         a..?.&.?
  10b304:	 02 a1 c2 3f e9 13 c4 3f         ...?...?
  10b30c:	 ae 7f c5 3f 6a e4 c6 3f         ...?j..?
  10b314:	 39 42 c8 3f 33 99 c9 3f         9B.?3..?
  10b31c:	 73 e9 ca 3f 12 33 cc 3f         s..?.3.?
  10b324:	 29 76 cd 3f d2 b2 ce 3f         )v.?...?
  10b32c:	 24 e9 cf 3f 39 19 d1 3f         $..?9..?
  10b334:	 2a 43 d2 3f 0d 67 d3 3f         *C.?.g.?
  10b33c:	 fb 84 d4 3f 0c 9d d5 3f         ...?...?
  10b344:	 56 af d6 3f f2 bb d7 3f         V..?...?
  10b34c:	 f7 c2 d8 3f 7a c4 d9 3f         ...?z..?
  10b354:	 93 c0 da 3f 57 b7 db 3f         ...?W..?
  10b35c:	 de a8 dc 3f 3c 95 dd 3f         ...?<..?
  10b364:	 87 7c de 3f d6 5e df 3f         .|.?.^.?
  10b36c:	 3c 3c e0 3f cf 14 e1 3f         <<.?...?
  10b374:	 a4 e8 e1 3f ce b7 e2 3f         ...?...?
  10b37c:	 63 82 e3 3f 77 48 e4 3f         c..?wH.?
  10b384:	 1c 0a e5 3f 68 c7 e5 3f         ...?h..?
  10b38c:	 6c 80 e6 3f 3d 35 e7 3f         l..?=5.?
  10b394:	 ed e5 e7 3f 8f 92 e8 3f         ...?...?
  10b39c:	 35 3b e9 3f f2 df e9 3f         5;.?...?
  10b3a4:	 d8 80 ea 3f f8 1d eb 3f         ...?...?
  10b3ac:	 65 b7 eb 3f 2f 4d ec 3f         e..?/M.?
  10b3b4:	 68 df ec 3f 20 6e ed 3f         h..? n.?
  10b3bc:	 69 f9 ed 3f 53 81 ee 3f         i..?S..?
  10b3c4:	 ee 05 ef 3f 4b 87 ef 3f         ...?K..?
  10b3cc:	 79 05 f0 3f 88 80 f0 3f         y..?...?
  10b3d4:	 88 f8 f0 3f 87 6d f1 3f         ...?.m.?
  10b3dc:	 96 df f1 3f c2 4e f2 3f         ...?.N.?
  10b3e4:	 1a bb f2 3f ad 24 f3 3f         ...?.$.?
  10b3ec:	 89 8b f3 3f bc ef f3 3f         ...?...?
  10b3f4:	 55 51 f4 3f 60 b0 f4 3f         UQ.?`..?
  10b3fc:	 eb 0c f5 3f 03 67 f5 3f         ...?.g.?
  10b404:	 b6 be f5 3f 10 14 f6 3f         ...?...?
  10b40c:	 1f 67 f6 3f ed b7 f6 3f         .g.?...?
  10b414:	 89 06 f7 3f fd 52 f7 3f         ...?.R.?
  10b41c:	 56 9d f7 3f a0 e5 f7 3f         V..?...?
  10b424:	 e6 2b f8 3f 33 70 f8 3f         .+.?3p.?
  10b42c:	 94 b2 f8 3f 12 f3 f8 3f         ...?...?
  10b434:	 b8 31 f9 3f 92 6e f9 3f         .1.?.n.?
  10b43c:	 aa a9 f9 3f 09 e3 f9 3f         ...?...?
  10b444:	 bb 1a fa 3f c9 50 fa 3f         ...?.P.?
  10b44c:	 3d 85 fa 3f 21 b8 fa 3f         =..?!..?
  10b454:	 7e e9 fa 3f 5d 19 fb 3f         ~..?]..?
  10b45c:	 c8 47 fb 3f c7 74 fb 3f         .G.?.t.?
  10b464:	 64 a0 fb 3f a7 ca fb 3f         d..?...?
  10b46c:	 98 f3 fb 3f 41 1b fc 3f         ...?A..?
  10b474:	 a8 41 fc 3f d7 66 fc 3f         .A.?.f.?
  10b47c:	 d5 8a fc 3f aa ad fc 3f         ...?...?
  10b484:	 5e cf fc 3f f7 ef fc 3f         ^..?...?
  10b48c:	 7e 0f fd 3f f9 2d fd 3f         ~..?.-.?
  10b494:	 70 4b fd 3f e9 67 fd 3f         pK.?.g.?
  10b49c:	 6c 83 fd 3f fe 9d fd 3f         l..?...?
  10b4a4:	 a7 b7 fd 3f 6d d0 fd 3f         ...?m..?
  10b4ac:	 56 e8 fd 3f 67 ff fd 3f         V..?g..?
  10b4b4:	 a8 15 fe 3f 1e 2b fe 3f         ...?.+.?
  10b4bc:	 cf 3f fe 3f c0 53 fe 3f         .?.?.S.?
  10b4c4:	 f7 66 fe 3f 79 79 fe 3f         .f.?yy.?
  10b4cc:	 4c 8b fe 3f 74 9c fe 3f         L..?t..?
  10b4d4:	 f7 ac fe 3f da bc fe 3f         ...?...?
  10b4dc:	 21 cc fe 3f d1 da fe 3f         !..?...?
  10b4e4:	 ef e8 fe 3f 80 f6 fe 3f         ...?...?
  10b4ec:	 87 03 ff 3f 09 10 ff 3f         ...?...?
  10b4f4:	 0a 1c ff 3f 8e 27 ff 3f         ...?.'.?
  10b4fc:	 9a 32 ff 3f 30 3d ff 3f         .2.?0=.?
  10b504:	 56 47 ff 3f 0e 51 ff 3f         VG.?.Q.?
  10b50c:	 5d 5a ff 3f 45 63 ff 3f         ]Z.?Ec.?
  10b514:	 cb 6b ff 3f f1 73 ff 3f         .k.?.s.?
  10b51c:	 bb 7b ff 3f 2c 83 ff 3f         .{.?,..?
  10b524:	 47 8a ff 3f 0f 91 ff 3f         G..?...?
  10b52c:	 88 97 ff 3f b3 9d ff 3f         ...?...?
  10b534:	 94 a3 ff 3f 2e a9 ff 3f         ...?...?
  10b53c:	 83 ae ff 3f 95 b3 ff 3f         ...?...?
  10b544:	 68 b8 ff 3f fd bc ff 3f         h..?...?
  10b54c:	 57 c1 ff 3f 78 c5 ff 3f         W..?x..?
  10b554:	 63 c9 ff 3f 19 cd ff 3f         c..?...?
  10b55c:	 9d d0 ff 3f f1 d3 ff 3f         ...?...?
  10b564:	 16 d7 ff 3f 0f da ff 3f         ...?...?
  10b56c:	 dd dc ff 3f 83 df ff 3f         ...?...?
  10b574:	 02 e2 ff 3f 5b e4 ff 3f         ...?[..?
  10b57c:	 91 e6 ff 3f a4 e8 ff 3f         ...?...?
  10b584:	 97 ea ff 3f 6b ec ff 3f         ...?k..?
  10b58c:	 21 ee ff 3f bb ef ff 3f         !..?...?
  10b594:	 3a f1 ff 3f 9f f2 ff 3f         :..?...?
  10b59c:	 ec f3 ff 3f 22 f5 ff 3f         ...?"..?
  10b5a4:	 41 f6 ff 3f 4c f7 ff 3f         A..?L..?
  10b5ac:	 43 f8 ff 3f 26 f9 ff 3f         C..?&..?
  10b5b4:	 f8 f9 ff 3f ba fa ff 3f         ...?...?
  10b5bc:	 6b fb ff 3f 0d fc ff 3f         k..?...?
  10b5c4:	 a1 fc ff 3f 27 fd ff 3f         ...?'..?
  10b5cc:	 a1 fd ff 3f 0f fe ff 3f         ...?...?
  10b5d4:	 72 fe ff 3f cb fe ff 3f         r..?...?
  10b5dc:	 1a ff ff 3f 60 ff ff 3f         ...?`..?
  10b5e4:	 9d ff ff 3f d2 ff ff 3f         


kbd_short_128:
  10b5ec:	 b1 b7 00 00 c1 f1 01 00         ........
  10b5f4:	 b2 c7 03 00 91 61 06 00         .....a..
  10b5fc:	 f6 ec 09 00 4e 9d 0e 00         ....N...
  10b604:	 0f ac 14 00 df 58 1c 00         .....X..
  10b60c:	 a6 e9 25 00 9c aa 31 00         ..%...1.
  10b614:	 32 ee 3f 00 f9 0c 51 00         2.?...Q.
  10b61c:	 68 65 65 00 96 5b 7d 00         hee..[}.
  10b624:	 d7 58 99 00 44 cb b9 00         .X..D...
  10b62c:	 31 25 df 00 87 dc 09 01         1%......
  10b634:	 0e 6a 3a 01 9c 48 71 01         .j:..Hq.
  10b63c:	 35 f4 ae 01 18 e9 f3 01         5.......
  10b644:	 bc a2 40 02 bc 9a 95 02         ..@.....
  10b64c:	 ba 47 f3 02 36 1c 5a 03         .G..6.Z.
  10b654:	 63 85 ca 03 f5 e9 44 04         c.....D.
  10b65c:	 ed a8 c9 04 6d 18 59 05         ....m.Y.
  10b664:	 8f 84 f3 05 47 2e 99 06         ....G...
  10b66c:	 54 4a 4a 07 3f 00 07 08         TJJ.?...
  10b674:	 74 69 cf 08 69 90 a3 09         ti..i...
  10b67c:	 eb 6f 83 0a 82 f2 6e 0b         .o....n.
  10b684:	 f8 f1 65 0c 00 37 68 0d         ..e..7h.
  10b68c:	 07 79 75 0e 24 5e 8d 0f         .yu.$^..
  10b694:	 38 7b af 10 30 54 db 11         8{..0T..
  10b69c:	 73 5c 10 13 77 f7 4d 14         s\..w.M.
  10b6a4:	 82 79 93 15 8d 28 e0 16         .y...(..
  10b6ac:	 4e 3d 33 18 6c e4 8b 19         N=3.l...
  10b6b4:	 c9 3f e9 1a f7 67 4a 1c         .?...gJ.
  10b6bc:	 bb 6d ae 1d b6 5b 14 1f         .m...[..
  10b6c4:	 13 38 7b 20 53 06 e2 21         .8{ S..!
  10b6cc:	 17 c9 47 23 f9 83 ab 24         ..G#...$
  10b6d4:	 63 3d 0c 26 62 00 69 27         c=.&b.i'
  10b6dc:	 74 de c0 28 47 f1 12 2a         t..(G..*
  10b6e4:	 61 5c 5e 2b bb 4e a2 2c         a\^+.N.,
  10b6ec:	 3b 04 de 2d 0b c7 10 2f         ;..-.../
  10b6f4:	 d8 f0 39 30 dc eb 58 31         ..90..X1
  10b6fc:	 cc 33 6d 32 8f 56 76 33         .3m2.Vv3
  10b704:	 cb f4 73 34 43 c2 65 35         ..s4C.e5
  10b70c:	 ff 85 4b 36 4a 1a 25 37         ..K6J.%7
  10b714:	 75 6c f2 37 74 7c b3 38         ul.7t|.8
  10b71c:	 45 5c 68 39 29 2f 11 3a         E\h9)/.:
  10b724:	 bd 28 ae 3a e1 8b 3f 3b         .(.:..?;
  10b72c:	 83 a9 c5 3b 4c df 40 3c         ...;L.@<
  10b734:	 2e 96 b1 3c e9 40 18 3d         ...<.@.=
  10b73c:	 77 5a 75 3d 76 64 c9 3d         wZu=vd.=
  10b744:	 91 e5 14 3e e7 67 58 3e         ...>.gX>
  10b74c:	 82 77 94 3e db a0 c9 3e         .w.>...>
  10b754:	 72 6f f8 3e 84 6c 21 3f         ro.>.l!?
  10b75c:	 d4 1d 45 3f a5 04 64 3f         ..E?..d?
  10b764:	 cc 9c 7e 3f e8 5b 95 3f         ..~?.[.?
  10b76c:	 cb b0 a8 3f fc 02 b9 3f         ...?...?
  10b774:	 6c b2 c6 3f 44 17 d2 3f         l..?D..?
  10b77c:	 df 81 db 3f da 3a e3 3f         ...?.:.?
  10b784:	 4a 83 e9 3f 01 95 ee 3f         J..?...?
  10b78c:	 ea a2 f2 3f 79 d9 f5 3f         ...?y..?
  10b794:	 1f 5f f8 3f cd 54 fa 3f         ._.?.T.?
  10b79c:	 79 d6 fb 3f 9d fb fc 3f         y..?...?
  10b7a4:	 c2 d7 fd 3f f8 7a fe 3f         ...?.z.?
  10b7ac:	 4f f2 fe 3f 48 48 ff 3f         O..?HH.?
  10b7b4:	 3a 85 ff 3f ad af ff 3f         :..?...?
  10b7bc:	 ad cc ff 3f 12 e0 ff 3f         ...?...?
  10b7c4:	 ba ec ff 3f c5 f4 ff 3f         ...?...?
  10b7cc:	 b9 f9 ff 3f a9 fc ff 3f         ...?...?
  10b7d4:	 55 fe ff 3f 3b ff ff 3f         U..?;..?
  10b7dc:	 af ff ff 3f e3 ff ff 3f         ...?...?
  10b7e4:	 f8 ff ff 3f ff ff ff 3f         


Huffmancb_SCL:
  10b7ec:	 f3 00 f3 00 04 00 08 00         ........
  10b7f4:	 ef 00 ef 00 f5 00 e9 00         ........
  10b7fc:	 f9 00 0c 00 10 00 14 00         ........
  10b804:	 e7 00 e7 00 ff 00 ff 00         ........
  10b80c:	 e1 00 01 01 dd 00 05 01         ........
  10b814:	 18 00 1c 00 20 00 28 00         .... .(.
  10b81c:	 0b 01 0b 01 db 00 db 00         ........
  10b824:	 0f 01 0f 01 d5 00 11 01         ........
  10b82c:	 d1 00 15 01 cd 00 24 00         ......$.
  10b834:	 1b 01 1b 01 cb 00 cb 00         ........
  10b83c:	 2c 00 30 00 34 00 40 00         ,.0.4.@.
  10b844:	 c7 00 c7 00 1f 01 1f 01         ........
  10b84c:	 21 01 c1 00 25 01 bd 00         !...%...
  10b854:	 29 01 b9 00 38 00 3c 00         )...8.<.
  10b85c:	 33 01 33 01 2f 01 2f 01         3.3././.
  10b864:	 37 01 37 01 3b 01 3b 01         7.7.;.;.
  10b86c:	 44 00 48 00 4c 00 58 00         D.H.L.X.
  10b874:	 b7 00 b7 00 af 00 af 00         ........
  10b87c:	 b1 00 3d 01 a9 00 a5 00         ..=.....
  10b884:	 41 01 a1 00 50 00 54 00         A...P.T.
  10b88c:	 47 01 47 01 9f 00 9f 00         G.G.....
  10b894:	 4b 01 4b 01 9b 00 9b 00         K.K.....
  10b89c:	 5c 00 60 00 64 00 70 00         \.`.d.p.
  10b8a4:	 4f 01 4f 01 95 00 8d 00         O.O.....
  10b8ac:	 55 01 85 00 91 00 89 00         U.......
  10b8b4:	 51 01 81 00 68 00 6c 00         Q...h.l.
  10b8bc:	 5f 01 5f 01 67 01 67 01         _._.g.g.
  10b8c4:	 7b 00 7b 00 7f 00 7f 00         {.{.....
  10b8cc:	 74 00 78 00 80 00 b0 00         t.x.....
  10b8d4:	 59 01 75 00 69 00 6d 00         Y.u.i.m.
  10b8dc:	 71 00 61 00 61 01 7c 00         q.a.a.|.
  10b8e4:	 67 00 67 00 5b 00 5b 00         g.g.[.[.
  10b8ec:	 84 00 88 00 8c 00 9c 00         ........
  10b8f4:	 5f 00 5f 00 69 01 55 00         _._.i.U.
  10b8fc:	 4d 00 0d 00 05 00 09 00         M.......
  10b904:	 01 00 90 00 94 00 98 00         ........
  10b90c:	 8b 01 8b 01 8f 01 8f 01         ........
  10b914:	 93 01 93 01 97 01 97 01         ........
  10b91c:	 9b 01 9b 01 d7 01 d7 01         ........
  10b924:	 a0 00 a4 00 a8 00 ac 00         ........
  10b92c:	 87 01 87 01 6f 01 6f 01         ....o.o.
  10b934:	 73 01 73 01 77 01 77 01         s.s.w.w.
  10b93c:	 7b 01 7b 01 7f 01 7f 01         {.{.....
  10b944:	 83 01 83 01 a3 01 a3 01         ........
  10b94c:	 b4 00 c8 00 dc 00 f0 00         ........
  10b954:	 b8 00 bc 00 c0 00 c4 00         ........
  10b95c:	 bf 01 bf 01 c3 01 c3 01         ........
  10b964:	 c7 01 c7 01 cb 01 cb 01         ........
  10b96c:	 cf 01 cf 01 d3 01 d3 01         ........
  10b974:	 bb 01 bb 01 a7 01 a7 01         ........
  10b97c:	 cc 00 d0 00 d4 00 d8 00         ........
  10b984:	 ab 01 ab 01 af 01 af 01         ........
  10b98c:	 b3 01 b3 01 b7 01 b7 01         ........
  10b994:	 db 01 db 01 1b 00 1b 00         ........
  10b99c:	 23 00 23 00 27 00 27 00         #.#.'.'.
  10b9a4:	 e0 00 e4 00 e8 00 ec 00         ........
  10b9ac:	 2b 00 2b 00 17 00 17 00         +.+.....
  10b9b4:	 9f 01 9f 01 e3 01 e3 01         ........
  10b9bc:	 df 01 df 01 13 00 13 00         ........
  10b9c4:	 1f 00 1f 00 3f 00 3f 00         ....?.?.
  10b9cc:	 f4 00 f8 00 fc 00 00 01         ........
  10b9d4:	 43 00 43 00 4b 00 4b 00         C.C.K.K.
  10b9dc:	 53 00 53 00 47 00 47 00         S.S.G.G.
  10b9e4:	 2f 00 2f 00 33 00 33 00         /./.3.3.
  10b9ec:	 3b 00 3b 00 37 00 37 00         


AAC_SFHUFF_TAB:
  10b9f4:	 ec b7 10 00 01 08 3c 00         


num_swb_960_window:
  10b9fc:	 28 28 2d 31 31 31 2e 2e         ((-111..
  10ba04:	 2a 2a 2a 28                     ***(


num_swb_1024_window:
  10ba08:	 29 29 2f 31 31 33 2f 2f         ))/113//
  10ba10:	 2b 2b 2b 28                     +++(


num_swb_128_window:
  10ba14:	 0c 0c 0c 0e 0e 0e 0f 0f         ........
  10ba1c:	 0f 0f 0f 0f                     ....


swb_offset_1024_96:
  10ba20:	 00 00 04 00 08 00 0c 00         ........
  10ba28:	 10 00 14 00 18 00 1c 00         ........
  10ba30:	 20 00 24 00 28 00 2c 00          .$.(.,.
  10ba38:	 30 00 34 00 38 00 40 00         0.4.8.@.
  10ba40:	 48 00 50 00 58 00 60 00         H.P.X.`.
  10ba48:	 6c 00 78 00 84 00 90 00         l.x.....
  10ba50:	 9c 00 ac 00 bc 00 d4 00         ........
  10ba58:	 f0 00 14 01 40 01 80 01         ....@...
  10ba60:	 c0 01 00 02 40 02 80 02         ....@...
  10ba68:	 c0 02 00 03 40 03 80 03         ....@...
  10ba70:	 c0 03 00 04                     ....


swb_offset_128_96:
  10ba74:	 00 00 04 00 08 00 0c 00         ........
  10ba7c:	 10 00 14 00 18 00 20 00         ...... .
  10ba84:	 28 00 30 00 40 00 5c 00         (.0.@.\.
  10ba8c:	 80 00                           ..0.@.


swb_offset_1024_64:
  10ba8e:	 00 00 04 00 08 00 0c 00         ........
  10ba96:	 10 00 14 00 18 00 1c 00         ........
  10ba9e:	 20 00 24 00 28 00 2c 00          .$.(.,.
  10baa6:	 30 00 34 00 38 00 40 00         0.4.8.@.
  10baae:	 48 00 50 00 58 00 64 00         H.P.X.d.
  10bab6:	 70 00 7c 00 8c 00 9c 00         p.|.....
  10babe:	 ac 00 c0 00 d8 00 f0 00         ........
  10bac6:	 0c 01 30 01 58 01 80 01         ..0.X...
  10bace:	 a8 01 d0 01 f8 01 20 02         ...... .
  10bad6:	 48 02 70 02 98 02 c0 02         H.p.....
  10bade:	 e8 02 10 03 38 03 60 03         ....8.`.
  10bae6:	 88 03 b0 03 d8 03 00 04         


swb_offset_128_64:
  10baee:	 00 00 04 00 08 00 0c 00         ........
  10baf6:	 10 00 14 00 18 00 20 00         ...... .
  10bafe:	 28 00 30 00 40 00 5c 00         (.0.@.\.
  10bb06:	 80 00                           ..0.@.


swb_offset_1024_48:
  10bb08:	 00 00 04 00 08 00 0c 00         ........
  10bb10:	 10 00 14 00 18 00 1c 00         ........
  10bb18:	 20 00 24 00 28 00 30 00          .$.(.0.
  10bb20:	 38 00 40 00 48 00 50 00         8.@.H.P.
  10bb28:	 58 00 60 00 6c 00 78 00         X.`.l.x.
  10bb30:	 84 00 90 00 a0 00 b0 00         ........
  10bb38:	 c4 00 d8 00 f0 00 08 01         ........
  10bb40:	 24 01 40 01 60 01 80 01         $.@.`...
  10bb48:	 a0 01 c0 01 e0 01 00 02         ........
  10bb50:	 20 02 40 02 60 02 80 02          .@.`...
  10bb58:	 a0 02 c0 02 e0 02 00 03         ........
  10bb60:	 20 03 40 03 60 03 80 03          .@.`...
  10bb68:	 a0 03 00 04                     ....


swb_offset_128_48:
  10bb6c:	 00 00 04 00 08 00 0c 00         ........
  10bb74:	 10 00 14 00 1c 00 24 00         ......$.
  10bb7c:	 2c 00 38 00 44 00 50 00         ,.8.D.P.
  10bb84:	 60 00 70 00 80 00               `.


swb_offset_1024_32:
  10bb8a:	 00 00 04 00 08 00 0c 00         ........
  10bb92:	 10 00 14 00 18 00 1c 00         ........
  10bb9a:	 20 00 24 00 28 00 30 00          .$.(.0.
  10bba2:	 38 00 40 00 48 00 50 00         8.@.H.P.
  10bbaa:	 58 00 60 00 6c 00 78 00         X.`.l.x.
  10bbb2:	 84 00 90 00 a0 00 b0 00         ........
  10bbba:	 c4 00 d8 00 f0 00 08 01         ........
  10bbc2:	 24 01 40 01 60 01 80 01         $.@.`...
  10bbca:	 a0 01 c0 01 e0 01 00 02         ........
  10bbd2:	 20 02 40 02 60 02 80 02          .@.`...
  10bbda:	 a0 02 c0 02 e0 02 00 03         ........
  10bbe2:	 20 03 40 03 60 03 80 03          .@.`...
  10bbea:	 a0 03 c0 03 e0 03 00 04         


swb_offset_1024_24:
  10bbf2:	 00 00 04 00 08 00 0c 00         ........
  10bbfa:	 10 00 14 00 18 00 1c 00         ........
  10bc02:	 20 00 24 00 28 00 2c 00          .$.(.,.
  10bc0a:	 34 00 3c 00 44 00 4c 00         4.<.D.L.
  10bc12:	 54 00 5c 00 64 00 6c 00         T.\.d.l.
  10bc1a:	 74 00 7c 00 88 00 94 00         t.|.....
  10bc22:	 a0 00 ac 00 bc 00 cc 00         ........
  10bc2a:	 dc 00 f0 00 04 01 1c 01         ........
  10bc32:	 34 01 50 01 6c 01 8c 01         4.P.l...
  10bc3a:	 b0 01 d4 01 fc 01 28 02         ......(.
  10bc42:	 58 02 8c 02 c0 02 00 03         X.......
  10bc4a:	 40 03 80 03 c0 03 00 04         


swb_offset_128_24:
  10bc52:	 00 00 04 00 08 00 0c 00         ........
  10bc5a:	 10 00 14 00 18 00 1c 00         ........
  10bc62:	 24 00 2c 00 34 00 40 00         $.,.4.@.
  10bc6a:	 4c 00 5c 00 6c 00 80 00         


swb_offset_1024_16:
  10bc72:	 00 00 08 00 10 00 18 00         ........
  10bc7a:	 20 00 28 00 30 00 38 00          .(.0.8.
  10bc82:	 40 00 48 00 50 00 58 00         @.H.P.X.
  10bc8a:	 64 00 70 00 7c 00 88 00         d.p.|...
  10bc92:	 94 00 a0 00 ac 00 b8 00         ........
  10bc9a:	 c4 00 d4 00 e4 00 f4 00         ........
  10bca2:	 04 01 18 01 2c 01 40 01         ....,.@.
  10bcaa:	 58 01 70 01 8c 01 a8 01         X.p.....
  10bcb2:	 c8 01 ec 01 14 02 3c 02         ......<.
  10bcba:	 68 02 98 02 cc 02 04 03         h.......
  10bcc2:	 40 03 80 03 c0 03 00 04         


swb_offset_128_16:
  10bcca:	 00 00 04 00 08 00 0c 00         ........
  10bcd2:	 10 00 14 00 18 00 1c 00         ........
  10bcda:	 20 00 28 00 30 00 3c 00          .(.0.<.
  10bce2:	 48 00 58 00 6c 00 80 00         


swb_offset_1024_8:
  10bcea:	 00 00 0c 00 18 00 24 00         ......$.
  10bcf2:	 30 00 3c 00 48 00 54 00         0.<.H.T.
  10bcfa:	 60 00 6c 00 78 00 84 00         `.l.x...
  10bd02:	 90 00 9c 00 ac 00 bc 00         ........
  10bd0a:	 cc 00 dc 00 ec 00 fc 00         ........
  10bd12:	 0c 01 20 01 34 01 48 01         .. .4.H.
  10bd1a:	 5c 01 74 01 8c 01 a4 01         \.t.....
  10bd22:	 c0 01 dc 01 fc 01 20 02         ...... .
  10bd2a:	 44 02 6c 02 98 02 c8 02         D.l.....
  10bd32:	 fc 02 34 03 70 03 b0 03         ..4.p...
  10bd3a:	 00 04                           ..4.p.


swb_offset_128_8:
  10bd3c:	 00 00 04 00 08 00 0c 00         ........
  10bd44:	 10 00 14 00 18 00 1c 00         ........
  10bd4c:	 24 00 2c 00 34 00 3c 00         $.,.4.<.
  10bd54:	 48 00 58 00 6c 00 80 00         


swb_offset_1024_window:
  10bd5c:	 20 ba 10 00 20 ba 10 00          ... ...
  10bd64:	 8e ba 10 00 08 bb 10 00         ........
  10bd6c:	 08 bb 10 00 8a bb 10 00         ........
  10bd74:	 f2 bb 10 00 f2 bb 10 00         ........
  10bd7c:	 72 bc 10 00 72 bc 10 00         r...r...
  10bd84:	 72 bc 10 00 ea bc 10 00         


swb_offset_128_window:
  10bd8c:	 74 ba 10 00 74 ba 10 00         t...t...
  10bd94:	 ee ba 10 00 6c bb 10 00         ....l...
  10bd9c:	 6c bb 10 00 6c bb 10 00         l...l...
  10bda4:	 52 bc 10 00 52 bc 10 00         R...R...
  10bdac:	 ca bc 10 00 ca bc 10 00         ........
  10bdb4:	 ca bc 10 00 3c bd 10 00         


iq_table:
  10bdbc:	 00 00 00 00 00 08 00 00         ........
  10bdc4:	 29 14 00 00 9d 22 00 00         )...."..
  10bdcc:	 cc 32 00 00 66 44 00 00         .2..fD..
  10bdd4:	 39 57 00 00 20 6b 00 00         9W.. k..
  10bddc:	 00 80 00 00 c4 95 00 00         ........
  10bde4:	 5b ac 00 00 b6 c3 00 00         [.......
  10bdec:	 c9 db 00 00 8a f4 00 00         ........
  10bdf4:	 f0 0d 01 00 f2 27 01 00         .....'..
  10bdfc:	 8a 42 01 00 b2 5d 01 00         .B...]..
  10be04:	 63 79 01 00 99 95 01 00         cy......
  10be0c:	 4f b2 01 00 80 cf 01 00         O.......
  10be14:	 29 ed 01 00 46 0b 02 00         )...F...
  10be1c:	 d3 29 02 00 ce 48 02 00         .)...H..
  10be24:	 33 68 02 00 00 88 02 00         3h......
  10be2c:	 32 a8 02 00 c7 c8 02 00         2.......
  10be34:	 bc e9 02 00 10 0b 03 00         ........
  10be3c:	 c0 2c 03 00 ca 4e 03 00         .,...N..
  10be44:	 2d 71 03 00 e6 93 03 00         -q......
  10be4c:	 f4 b6 03 00 56 da 03 00         ....V...
  10be54:	 0a fe 03 00 0f 22 04 00         ....."..
  10be5c:	 62 46 04 00 04 6b 04 00         bF...k..
  10be64:	 f2 8f 04 00 2b b5 04 00         ....+...
  10be6c:	 af da 04 00 7b 00 05 00         ....{...
  10be74:	 90 26 05 00 eb 4c 05 00         .&...L..
  10be7c:	 8c 73 05 00 73 9a 05 00         .s..s...
  10be84:	 9d c1 05 00 0a e9 05 00         ........
  10be8c:	 ba 10 06 00 aa 38 06 00         .....8..
  10be94:	 dc 60 06 00 4d 89 06 00         .`..M...
  10be9c:	 fd b1 06 00 eb da 06 00         ........
  10bea4:	 16 04 07 00 7f 2d 07 00         .....-..
  10beac:	 23 57 07 00 03 81 07 00         #W......
  10beb4:	 1d ab 07 00 72 d5 07 00         ....r...
  10bebc:	 00 00 08 00 c7 2a 08 00         .....*..
  10bec4:	 c6 55 08 00 fd 80 08 00         .U......
  10becc:	 6c ac 08 00 10 d8 08 00         l.......
  10bed4:	 eb 03 09 00 fc 2f 09 00         ...../..
  10bedc:	 42 5c 09 00 bc 88 09 00         B\......
  10bee4:	 6a b5 09 00 4c e2 09 00         j...L...
  10beec:	 61 0f 0a 00 a9 3c 0a 00         a....<..
  10bef4:	 24 6a 0a 00 d0 97 0a 00         $j......
  10befc:	 ad c5 0a 00 bc f3 0a 00         ........
  10bf04:	 fb 21 0b 00 6a 50 0b 00         .!..jP..
  10bf0c:	 09 7f 0b 00 d8 ad 0b 00         ........
  10bf14:	 d6 dc 0b 00 02 0c 0c 00         ........
  10bf1c:	 5d 3b 0c 00 e6 6a 0c 00         ];...j..
  10bf24:	 9d 9a 0c 00 80 ca 0c 00         ........
  10bf2c:	 91 fa 0c 00 cf 2a 0d 00         .....*..
  10bf34:	 38 5b 0d 00 ce 8b 0d 00         8[......
  10bf3c:	 90 bc 0d 00 7d ed 0d 00         ....}...
  10bf44:	 95 1e 0e 00 d8 4f 0e 00         .....O..
  10bf4c:	 45 81 0e 00 dd b2 0e 00         E.......
  10bf54:	 9f e4 0e 00 8a 16 0f 00         ........
  10bf5c:	 9f 48 0f 00 dd 7a 0f 00         .H...z..
  10bf64:	 44 ad 0f 00 d3 df 0f 00         D.......
  10bf6c:	 8b 12 10 00 6b 45 10 00         ....kE..
  10bf74:	 73 78 10 00 a3 ab 10 00         sx......
  10bf7c:	 fa de 10 00 78 12 11 00         ....x...
  10bf84:	 1d 46 11 00 e9 79 11 00         .F...y..
  10bf8c:	 db ad 11 00 f3 e1 11 00         ........
  10bf94:	 32 16 12 00 96 4a 12 00         2....J..
  10bf9c:	 21 7f 12 00 d0 b3 12 00         !.......
  10bfa4:	 a5 e8 12 00 9e 1d 13 00         ........
  10bfac:	 bd 52 13 00 00 88 13 00         .R......
  10bfb4:	 68 bd 13 00 f3 f2 13 00         h.......
  10bfbc:	 a3 28 14 00 77 5e 14 00         .(..w^..
  10bfc4:	 6e 94 14 00 89 ca 14 00         n.......
  10bfcc:	 c7 00 15 00 28 37 15 00         ....(7..
  10bfd4:	 ac 6d 15 00 52 a4 15 00         .m..R...
  10bfdc:	 1c db 15 00 08 12 16 00         ........
  10bfe4:	 16 49 16 00 46 80 16 00         .I..F...
  10bfec:	 98 b7 16 00 0c ef 16 00         ........
  10bff4:	 a1 26 17 00 58 5e 17 00         .&..X^..
  10bffc:	 30 96 17 00 29 ce 17 00         0...)...
  10c004:	 44 06 18 00 7f 3e 18 00         D....>..
  10c00c:	 db 76 18 00 57 af 18 00         .v..W...
  10c014:	 f4 e7 18 00 b0 20 19 00         ..... ..
  10c01c:	 8e 59 19 00 8b 92 19 00         .Y......
  10c024:	 a7 cb 19 00 e4 04 1a 00         ........
  10c02c:	 40 3e 1a 00 bb 77 1a 00         @>...w..
  10c034:	 56 b1 1a 00 10 eb 1a 00         V.......
  10c03c:	 e9 24 1b 00 e0 5e 1b 00         .$...^..
  10c044:	 f7 98 1b 00 2c d3 1b 00         ....,...
  10c04c:	 80 0d 1c 00 f2 47 1c 00         .....G..
  10c054:	 82 82 1c 00 31 bd 1c 00         ....1...
  10c05c:	 fd f7 1c 00 e7 32 1d 00         .....2..
  10c064:	 ef 6d 1d 00 15 a9 1d 00         .m......
  10c06c:	 59 e4 1d 00 b9 1f 1e 00         Y.......
  10c074:	 37 5b 1e 00 d3 96 1e 00         7[......
  10c07c:	 8b d2 1e 00 60 0e 1f 00         ....`...
  10c084:	 53 4a 1f 00 61 86 1f 00         SJ..a...
  10c08c:	 8d c2 1f 00 d5 fe 1f 00         ........
  10c094:	 3a 3b 20 00 bb 77 20 00         :; ..w .
  10c09c:	 58 b4 20 00 12 f1 20 00         X. ... .
  10c0a4:	 e7 2d 21 00 d8 6a 21 00         .-!..j!.
  10c0ac:	 e5 a7 21 00 0e e5 21 00         ..!...!.
  10c0b4:	 53 22 22 00 b3 5f 22 00         S"".._".
  10c0bc:	 2e 9d 22 00 c5 da 22 00         .."...".
  10c0c4:	 77 18 23 00 45 56 23 00         w.#.EV#.
  10c0cc:	 2d 94 23 00 30 d2 23 00         -.#.0.#.
  10c0d4:	 4f 10 24 00 88 4e 24 00         O.$..N$.
  10c0dc:	 db 8c 24 00 4a cb 24 00         ..$.J.$.
  10c0e4:	 d3 09 25 00 76 48 25 00         ..%.vH%.
  10c0ec:	 33 87 25 00 0b c6 25 00         3.%...%.
  10c0f4:	 fd 04 26 00 0a 44 26 00         ..&..D&.
  10c0fc:	 30 83 26 00 70 c2 26 00         0.&.p.&.
  10c104:	 ca 01 27 00 3e 41 27 00         ..'.>A'.
  10c10c:	 cb 80 27 00 72 c0 27 00         ..'.r.'.
  10c114:	 33 00 28 00 0d 40 28 00         3.(..@(.
  10c11c:	 00 80 28 00 0d c0 28 00         ..(...(.
  10c124:	 32 00 29 00 71 40 29 00         2.).q@).
  10c12c:	 c9 80 29 00 3a c1 29 00         ..).:.).
  10c134:	 c4 01 2a 00 67 42 2a 00         ..*.gB*.
  10c13c:	 23 83 2a 00 f7 c3 2a 00         #.*...*.
  10c144:	 e3 04 2b 00 e9 45 2b 00         ..+..E+.
  10c14c:	 06 87 2b 00 3d c8 2b 00         ..+.=.+.
  10c154:	 8b 09 2c 00 f2 4a 2c 00         ..,..J,.
  10c15c:	 71 8c 2c 00 08 ce 2c 00         q.,...,.
  10c164:	 b7 0f 2d 00 7e 51 2d 00         ..-.~Q-.
  10c16c:	 5d 93 2d 00 53 d5 2d 00         ].-.S.-.
  10c174:	 62 17 2e 00 88 59 2e 00         b....Y..
  10c17c:	 c6 9b 2e 00 1b de 2e 00         ........
  10c184:	 88 20 2f 00 0d 63 2f 00         . /..c/.
  10c18c:	 a8 a5 2f 00 5b e8 2f 00         ../.[./.
  10c194:	 26 2b 30 00 07 6e 30 00         &+0..n0.
  10c19c:	 00 b1 30 00 0f f4 30 00         ..0...0.
  10c1a4:	 36 37 31 00 73 7a 31 00         671.sz1.
  10c1ac:	 c8 bd 31 00 33 01 32 00         ..1.3.2.
  10c1b4:	 b5 44 32 00 4e 88 32 00         .D2.N.2.
  10c1bc:	 fd cb 32 00                     ..2.


tns_coef_0_3:
  10c1c0:	 00 00 00 00 05 4c bc 01         .....L..
  10c1c8:	 6f 98 20 03 81 53 e6 03         o. ..S..
  10c1d0:	 8e 8e 0f fc a3 30 89 fc         .....0..
  10c1d8:	 16 c9 6d fd 79 c5 a1 fe         ..m.y...
  10c1e0:	 fb b3 43 fe 91 67 df fc         ..C..g..
  10c1e8:	 7f ac 19 fc 7f ac 19 fc         ........
  10c1f0:	 8e 8e 0f fc a3 30 89 fc         .....0..
  10c1f8:	 16 c9 6d fd 79 c5 a1 fe         


tns_coef_0_4:
  10c200:	 00 00 00 00 cd e6 d4 00         ........
  10c208:	 92 7f a0 01 61 e4 59 02         ....a.Y.
  10c210:	 f5 fa f8 02 5d cf 76 03         ....].v.
  10c218:	 c2 e1 cd 03 f3 63 fa 03         .....c..
  10c220:	 43 5e 04 fc 2e 17 27 fc         C^....'.
  10c228:	 50 5a 6b fc 92 d4 ce fc         PZk.....
  10c230:	 bb 22 4e fd f8 ee e4 fd         ."N.....
  10c238:	 aa 16 8e fe 2b d7 43 ff         


tns_coef_1_3:
  10c240:	 00 00 00 00 05 4c bc 01         .....L..
  10c248:	 16 c9 6d fd 79 c5 a1 fe         ..m.y...
  10c250:	 81 53 e6 03 6f 98 20 03         .S..o. .
  10c258:	 16 c9 6d fd 79 c5 a1 fe         ..m.y...
  10c260:	 fb b3 43 fe 91 67 df fc         ..C..g..
  10c268:	 16 c9 6d fd 79 c5 a1 fe         ..m.y...
  10c270:	 91 67 df fc fb b3 43 fe         .g....C.
  10c278:	 16 c9 6d fd 79 c5 a1 fe         


tns_coef_1_4:
  10c280:	 00 00 00 00 cd e6 d4 00         ........
  10c288:	 92 7f a0 01 61 e4 59 02         ....a.Y.
  10c290:	 bb 22 4e fd f8 ee e4 fd         ."N.....
  10c298:	 aa 16 8e fe 2b d7 43 ff         ....+.C.
  10c2a0:	 f3 63 fa 03 c2 e1 cd 03         .c......
  10c2a8:	 5d cf 76 03 f5 fa f8 02         ].v.....
  10c2b0:	 bb 22 4e fd f8 ee e4 fd         ."N.....
  10c2b8:	 aa 16 8e fe 2b d7 43 ff         


pow05_table:
  10c2c0:	 99 9f e8 1a 66 9e a0 16         ....f...
  10c2c8:	 0a fe 06 13 00 00 00 10         ........
  10c2d0:	 cd 4f 74 0d 33 4f 50 0b         .Ot.3OP.
  10c2d8:	 05 7f 83 09                     ....


sample_rates:
  10c2dc:	 00 77 01 00 88 58 01 00         .w...X..
  10c2e4:	 00 fa 00 00 80 bb 00 00         ........
  10c2ec:	 44 ac 00 00 00 7d 00 00         D....}..
  10c2f4:	 c0 5d 00 00 22 56 00 00         .].."V..
  10c2fc:	 80 3e 00 00 e0 2e 00 00         .>......
  10c304:	 11 2b 00 00 40 1f 00 00         


pred_sfb_max:
  10c30c:	 21 21 26 28 28 28 29 29         !!&((())
  10c314:	 25 25 25 22                     %%%"


tns_sbf_max:
  10c318:	 1f 09 1c 07 1f 09 1c 07         ........
  10c320:	 22 0a 1b 07 28 0e 1a 06         "...(...
  10c328:	 2a 0e 1a 06 33 0e 1a 06         *...3...
  10c330:	 2e 0e 1d 07 2e 0e 1d 07         ........
  10c338:	 2a 0e 17 08 2a 0e 17 08         *...*...
  10c340:	 2a 0e 17 08 27 0e 13 07         *...'...
  10c348:	 27 0e 13 07 00 00 00 00         '.......
  10c350:	 00 00 00 00 00 00 00 00         


Huffmancb_1:
  10c358:	 57 01 57 01 04 00 18 00         W.W.....
  10c360:	 08 00 0c 00 10 00 14 00         ........
  10c368:	 5b 01 5b 01 53 01 53 01         [.[.S.S.
  10c370:	 57 00 57 00 67 01 67 01         W.W.g.g.
  10c378:	 57 02 57 02 17 01 17 01         W.W.....
  10c380:	 97 01 97 01 47 01 47 01         ....G.G.
  10c388:	 1c 00 30 00 44 00 58 00         ..0.D.X.
  10c390:	 20 00 24 00 28 00 2c 00          .$.(.,.
  10c398:	 4b 01 4b 01 63 01 63 01         K.K.c.c.
  10c3a0:	 17 02 17 02 27 01 27 01         ....'.'.
  10c3a8:	 87 01 87 01 97 00 97 00         ........
  10c3b0:	 6b 01 6b 01 17 00 17 00         k.k.....
  10c3b8:	 34 00 38 00 3c 00 40 00         4.8.<.@.
  10c3c0:	 43 01 43 01 07 01 07 01         C.C.....
  10c3c8:	 1b 01 1b 01 67 00 67 00         ....g.g.
  10c3d0:	 93 01 93 01 97 02 97 02         ........
  10c3d8:	 9b 01 9b 01 47 02 47 02         ....G.G.
  10c3e0:	 48 00 4c 00 50 00 54 00         H.L.P.T.
  10c3e8:	 a7 01 a7 01 67 02 67 02         ....g.g.
  10c3f0:	 13 01 13 01 5b 02 5b 02         ....[.[.
  10c3f8:	 53 00 53 00 5b 00 5b 00         S.S.[.[.
  10c400:	 53 02 53 02 47 00 47 00         S.S.G.G.
  10c408:	 5c 00 70 00 84 00 98 00         \.p.....
  10c410:	 60 00 64 00 68 00 6c 00         `.d.h.l.
  10c418:	 2b 01 2b 01 23 01 23 01         +.+.#.#.
  10c420:	 8b 01 8b 01 a7 00 a7 00         ........
  10c428:	 27 02 27 02 87 02 87 02         '.'.....
  10c430:	 87 00 87 00 0b 01 0b 01         ........
  10c438:	 74 00 78 00 7c 00 80 00         t.x.|...
  10c440:	 1b 02 1b 02 27 00 27 00         ....'.'.
  10c448:	 a3 01 a3 01 93 00 93 00         ........
  10c450:	 83 01 83 01 07 02 07 02         ........
  10c458:	 4b 02 4b 02 4b 00 4b 00         K.K.K.K.
  10c460:	 88 00 8c 00 90 00 94 00         ........
  10c468:	 63 00 63 00 03 01 03 01         c.c.....
  10c470:	 07 00 07 00 a7 02 a7 02         ........
  10c478:	 9b 00 9b 00 6b 02 6b 02         ....k.k.
  10c480:	 63 02 63 02 ab 01 ab 01         c.c.....
  10c488:	 9c 00 a0 00 a4 00 b8 00         ........
  10c490:	 41 02 11 00 69 00 19 00         A...i...
  10c498:	 11 02 41 00 91 02 99 02         ..A.....
  10c4a0:	 a8 00 ac 00 b0 00 b4 00         ........
  10c4a8:	 8b 00 8b 00 23 02 23 02         ....#.#.
  10c4b0:	 a3 00 a3 00 0b 02 0b 02         ........
  10c4b8:	 ab 02 ab 02 83 02 83 02         ........
  10c4c0:	 2b 00 2b 00 83 00 83 00         +.+.....
  10c4c8:	 bc 00 c0 00 c4 00 c8 00         ........
  10c4d0:	 03 00 03 00 2b 02 2b 02         ....+.+.
  10c4d8:	 8b 02 8b 02 a3 02 a3 02         ........
  10c4e0:	 23 00 23 00 03 02 03 02         #.#.....
  10c4e8:	 0b 00 0b 00 ab 00 ab 00         


Huffmancb_2:
  10c4f0:	 04 00 0c 00 20 00 34 00         .... .4.
  10c4f8:	 57 01 57 01 59 01 08 00         W.W.Y...
  10c500:	 53 01 53 01 57 02 57 02         S.S.W.W.
  10c508:	 10 00 14 00 18 00 1c 00         ........
  10c510:	 17 01 17 01 57 00 57 00         ....W.W.
  10c518:	 47 01 47 01 97 01 97 01         G.G.....
  10c520:	 67 01 67 01 85 01 61 01         g.g...a.
  10c528:	 25 01 95 00 65 00 15 02         %...e...
  10c530:	 24 00 28 00 2c 00 30 00         $.(.,.0.
  10c538:	 51 00 49 01 19 01 41 01         Q.I...A.
  10c540:	 15 00 99 01 59 02 45 02         ....Y.E.
  10c548:	 91 01 65 02 05 01 51 02         ..e...Q.
  10c550:	 45 00 11 01 69 01 a5 01         E...i...
  10c558:	 38 00 44 00 58 00 6c 00         8.D.X.l.
  10c560:	 95 02 59 00 3c 00 40 00         ..Y.<.@.
  10c568:	 27 02 27 02 1b 02 1b 02         '.'.....
  10c570:	 23 01 23 01 87 00 87 00         #.#.....
  10c578:	 48 00 4c 00 50 00 54 00         H.L.P.T.
  10c580:	 8b 01 8b 01 6b 00 6b 00         ....k.k.
  10c588:	 9b 02 9b 02 a3 01 a3 01         ........
  10c590:	 07 02 07 02 ab 01 ab 01         ........
  10c598:	 93 00 93 00 03 01 03 01         ........
  10c5a0:	 5c 00 60 00 64 00 68 00         \.`.d.h.
  10c5a8:	 13 02 13 02 0b 01 0b 01         ........
  10c5b0:	 2b 01 2b 01 49 02 61 00         +.+.I.a.
  10c5b8:	 81 01 91 02 41 02 41 00         ....A.A.
  10c5c0:	 05 00 99 00 19 00 25 00         ......%.
  10c5c8:	 70 00 74 00 78 00 88 00         p.t.x...
  10c5d0:	 a5 02 61 02 11 00 a5 00         ..a.....
  10c5d8:	 49 00 85 02 69 02 89 00         I...i...
  10c5e0:	 21 02 7c 00 80 00 84 00         !.|.....
  10c5e8:	 0b 02 0b 02 03 00 03 00         ........
  10c5f0:	 a3 00 a3 00 a3 02 a3 02         ........
  10c5f8:	 ab 02 ab 02 83 00 83 00         ........
  10c600:	 8c 00 90 00 94 00 98 00         ........
  10c608:	 8b 02 8b 02 23 00 23 00         ....#.#.
  10c610:	 83 02 83 02 2b 00 2b 00         ....+.+.
  10c618:	 0b 00 0b 00 03 02 03 02         ........
  10c620:	 2b 02 2b 02 ab 00 ab 00         


Huffmancb_3:
  10c628:	 03 00 03 00 04 00 08 00         ........
  10c630:	 05 00 01 01 11 00 41 00         ......A.
  10c638:	 0c 00 10 00 14 00 20 00         ...... .
  10c640:	 17 00 17 00 43 01 43 01         ....C.C.
  10c648:	 51 00 11 01 45 00 51 01         Q...E.Q.
  10c650:	 05 01 55 00 18 00 1c 00         ..U.....
  10c658:	 57 01 57 01 47 01 47 01         W.W.G.G.
  10c660:	 17 01 17 01 09 00 01 02         ........
  10c668:	 24 00 2c 00 40 00 54 00         $.,.@.T.
  10c670:	 41 02 19 00 65 00 28 00         A...e.(.
  10c678:	 83 01 83 01 93 01 93 01         ........
  10c680:	 30 00 34 00 38 00 3c 00         0.4.8.<.
  10c688:	 27 00 27 00 53 02 53 02         '.'.S.S.
  10c690:	 5b 00 5b 00 83 00 83 00         [.[.....
  10c698:	 63 00 63 00 93 00 93 00         c.c.....
  10c6a0:	 23 00 23 00 13 02 13 02         #.#.....
  10c6a8:	 44 00 48 00 4c 00 50 00         D.H.L.P.
  10c6b0:	 4b 00 4b 00 67 01 67 01         K.K.g.g.
  10c6b8:	 63 01 63 01 97 00 97 00         c.c.....
  10c6c0:	 97 01 97 01 25 01 85 00         ....%...
  10c6c8:	 85 01 21 01 59 01 55 02         ..!.Y.U.
  10c6d0:	 58 00 5c 00 60 00 70 00         X.\.`.p.
  10c6d8:	 19 01 45 02 81 02 91 02         ..E.....
  10c6e0:	 69 00 a5 00 05 02 09 01         i.......
  10c6e8:	 a1 01 64 00 68 00 6c 00         ..d.h.l.
  10c6f0:	 2b 00 2b 00 a7 01 a7 01         +.+.....
  10c6f8:	 17 02 17 02 4b 01 4b 01         ....K.K.
  10c700:	 97 02 97 02 6b 01 6b 01         ....k.k.
  10c708:	 74 00 78 00 7c 00 80 00         t.x.|...
  10c710:	 a3 00 a3 00 63 02 63 02         ....c.c.
  10c718:	 85 02 29 01 99 00 a9 00         ..).....
  10c720:	 a1 02 a9 01 99 01 65 02         ......e.
  10c728:	 a5 02 84 00 88 00 8c 00         ........
  10c730:	 23 02 23 02 8b 00 8b 00         #.#.....
  10c738:	 27 02 27 02 89 01 59 02         '.'...Y.
  10c740:	 19 02 90 00 94 00 98 00         ........
  10c748:	 ab 02 ab 02 6b 02 6b 02         ....k.k.
  10c750:	 9b 02 9b 02 4b 02 4b 02         ....K.K.
  10c758:	 0b 02 0b 02 29 02 89 02         


Huffmancb_4:
  10c760:	 04 00 08 00 0c 00 18 00         ........
  10c768:	 55 01 51 01 15 01 55 00         U.Q...U.
  10c770:	 45 01 05 00 15 00 01 00         E.......
  10c778:	 41 01 45 00 10 00 14 00         A.E.....
  10c780:	 07 01 07 01 53 00 53 00         ....S.S.
  10c788:	 03 01 03 01 13 01 13 01         ........
  10c790:	 1c 00 20 00 34 00 48 00         .. .4.H.
  10c798:	 43 00 43 00 13 00 13 00         C.C.....
  10c7a0:	 24 00 28 00 2c 00 30 00         $.(.,.0.
  10c7a8:	 5b 01 5b 01 97 01 97 01         [.[.....
  10c7b0:	 67 01 67 01 57 02 57 02         g.g.W.W.
  10c7b8:	 5b 00 5b 00 1b 01 1b 01         [.[.....
  10c7c0:	 67 00 67 00 4b 01 4b 01         g.g.K.K.
  10c7c8:	 38 00 3c 00 40 00 44 00         8.<.@.D.
  10c7d0:	 93 01 93 01 51 02 95 00         ....Q...
  10c7d8:	 61 01 45 02 25 01 15 02         a.E.%...
  10c7e0:	 85 01 19 00 49 00 25 00         ....I.%.
  10c7e8:	 09 01 11 02 61 00 41 02         ....a.A.
  10c7f0:	 4c 00 50 00 58 00 6c 00         L.P.X.l.
  10c7f8:	 91 00 21 01 05 02 81 01         ..!.....
  10c800:	 85 00 09 00 01 02 54 00         ......T.
  10c808:	 23 00 23 00 83 00 83 00         #.#.....
  10c810:	 5c 00 60 00 64 00 68 00         \.`.d.h.
  10c818:	 a7 01 a7 01 6b 01 6b 01         ....k.k.
  10c820:	 9b 01 9b 01 97 02 97 02         ........
  10c828:	 67 02 67 02 5b 02 5b 02         g.g.[.[.
  10c830:	 a5 00 69 00 99 00 a1 01         ..i.....
  10c838:	 70 00 74 00 78 00 84 00         p.t.x...
  10c840:	 91 02 29 01 61 02 89 01         ..).a...
  10c848:	 85 02 a9 01 25 02 49 02         ....%.I.
  10c850:	 19 02 a5 02 7c 00 80 00         ....|...
  10c858:	 9b 02 9b 02 6b 02 6b 02         ....k.k.
  10c860:	 a3 00 a3 00 2b 00 2b 00         ....+.+.
  10c868:	 88 00 8c 00 90 00 94 00         ........
  10c870:	 83 02 83 02 8b 00 8b 00         ........
  10c878:	 23 02 23 02 0b 02 0b 02         #.#.....
  10c880:	 ab 02 ab 02 a3 02 a3 02         ........
  10c888:	 ab 00 ab 00 29 02 89 02         


Huffmancb_5:
  10c890:	 13 01 13 01 04 00 08 00         ........
  10c898:	 0d 01 15 01 51 01 d1 00         ....Q...
  10c8a0:	 0c 00 10 00 14 00 28 00         ......(.
  10c8a8:	 d7 00 d7 00 4f 01 4f 01         ....O.O.
  10c8b0:	 cf 00 cf 00 57 01 57 01         ....W.W.
  10c8b8:	 18 00 1c 00 20 00 24 00         .... .$.
  10c8c0:	 0b 01 0b 01 93 01 93 01         ........
  10c8c8:	 1b 01 1b 01 93 00 93 00         ........
  10c8d0:	 c9 00 59 01 8d 00 95 01         ..Y.....
  10c8d8:	 49 01 d9 00 8d 01 95 00         I.......
  10c8e0:	 2c 00 30 00 44 00 58 00         ,.0.D.X.
  10c8e8:	 05 01 1d 01 51 00 d1 01         ....Q...
  10c8f0:	 34 00 38 00 3c 00 40 00         4.8.<.@.
  10c8f8:	 c7 00 c7 00 d7 01 d7 01         ........
  10c900:	 5f 01 5f 01 4f 00 4f 00         _._.O.O.
  10c908:	 47 01 47 01 df 00 df 00         G.G.....
  10c910:	 57 00 57 00 cf 01 cf 01         W.W.....
  10c918:	 48 00 4c 00 50 00 54 00         H.L.P.T.
  10c920:	 8b 01 8b 01 9b 01 9b 01         ........
  10c928:	 8b 00 8b 00 9b 00 9b 00         ........
  10c930:	 85 00 9d 00 c9 01 59 00         ......Y.
  10c938:	 9d 01 d9 01 85 01 49 00         ......I.
  10c940:	 5c 00 60 00 74 00 88 00         \.`.t...
  10c948:	 11 00 01 01 61 01 21 01         ....a.!.
  10c950:	 64 00 68 00 6c 00 70 00         d.h.l.p.
  10c958:	 c3 00 c3 00 13 02 13 02         ........
  10c960:	 e3 00 e3 00 0f 00 0f 00         ........
  10c968:	 17 02 17 02 0f 02 0f 02         ........
  10c970:	 43 01 43 01 17 00 17 00         C.C.....
  10c978:	 78 00 7c 00 80 00 84 00         x.|.....
  10c980:	 5f 00 5f 00 47 00 47 00         _._.G.G.
  10c988:	 c7 01 c7 01 0b 02 0b 02         ........
  10c990:	 83 00 83 00 a3 01 a3 01         ........
  10c998:	 1b 00 1b 00 1b 02 1b 02         ........
  10c9a0:	 8c 00 90 00 94 00 98 00         ........
  10c9a8:	 df 01 df 01 83 01 83 01         ........
  10c9b0:	 09 00 a1 00 1d 00 41 00         ......A.
  10c9b8:	 c1 01 1d 02 05 02 e1 01         ........
  10c9c0:	 61 00 05 00 9c 00 a0 00         a.......
  10c9c8:	 23 00 23 00 03 02 03 02         #.#.....
  10c9d0:	 23 02 23 02 03 00 03 00         


Huffmancb_6:
  10c9d8:	 04 00 08 00 0c 00 1c 00         ........
  10c9e0:	 11 01 15 01 d1 00 51 01         ......Q.
  10c9e8:	 0d 01 55 01 4d 01 d5 00         ..U.M...
  10c9f0:	 cd 00 10 00 14 00 18 00         ........
  10c9f8:	 d9 00 59 01 49 01 c9 00         ..Y.I...
  10ca00:	 09 01 8d 01 19 01 95 00         ........
  10ca08:	 95 01 91 00 8d 00 91 01         ........
  10ca10:	 20 00 24 00 38 00 4c 00          .$.8.L.
  10ca18:	 99 00 89 01 89 00 99 01         ........
  10ca20:	 28 00 2c 00 30 00 34 00         (.,.0.4.
  10ca28:	 47 01 47 01 5f 01 5f 01         G.G._._.
  10ca30:	 df 00 df 00 cf 01 cf 01         ........
  10ca38:	 c7 00 c7 00 d7 01 d7 01         ........
  10ca40:	 57 00 57 00 4f 00 4f 00         W.W.O.O.
  10ca48:	 3c 00 40 00 44 00 48 00         <.@.D.H.
  10ca50:	 1f 01 1f 01 07 01 07 01         ........
  10ca58:	 53 00 53 00 d3 01 d3 01         S.S.....
  10ca60:	 9f 01 9f 01 85 00 c9 01         ........
  10ca68:	 d9 01 9d 00 59 00 49 00         ....Y.I.
  10ca70:	 50 00 5c 00 70 00 84 00         P.\.p...
  10ca78:	 85 01 dd 01 54 00 58 00         ....T.X.
  10ca80:	 5f 00 5f 00 47 00 47 00         _._.G.G.
  10ca88:	 c7 01 c7 01 17 00 17 00         ........
  10ca90:	 60 00 64 00 68 00 6c 00         `.d.h.l.
  10ca98:	 0f 00 0f 00 63 01 63 01         ....c.c.
  10caa0:	 43 01 43 01 c3 00 c3 00         C.C.....
  10caa8:	 17 02 17 02 e3 00 e3 00         ........
  10cab0:	 0f 02 0f 02 13 00 13 00         ........
  10cab8:	 74 00 78 00 7c 00 80 00         t.x.|...
  10cac0:	 83 01 83 01 83 00 83 00         ........
  10cac8:	 1b 02 1b 02 0b 00 0b 00         ........
  10cad0:	 03 01 03 01 a3 01 a3 01         ........
  10cad8:	 a3 00 a3 00 0b 02 0b 02         ........
  10cae0:	 88 00 8c 00 90 00 94 00         ........
  10cae8:	 23 01 23 01 1b 00 1b 00         #.#.....
  10caf0:	 13 02 13 02 05 00 05 02         ........
  10caf8:	 1d 00 61 00 1d 02 e1 01         ..a.....
  10cb00:	 c1 01 41 00 98 00 9c 00         ..A.....
  10cb08:	 23 02 23 02 03 02 03 02         #.#.....
  10cb10:	 03 00 03 00 23 00 23 00         


Huffmancb_7:
  10cb18:	 03 00 03 00 04 00 08 00         ........
  10cb20:	 07 00 07 00 43 00 43 00         ....C.C.
  10cb28:	 45 00 0c 00 10 00 24 00         E.....$.
  10cb30:	 49 00 85 00 09 00 81 00         I.......
  10cb38:	 14 00 18 00 1c 00 20 00         ...... .
  10cb40:	 4f 00 4f 00 c7 00 c7 00         O.O.....
  10cb48:	 8b 00 8b 00 0f 00 0f 00         ........
  10cb50:	 c3 00 c3 00 c9 00 8d 00         ........
  10cb58:	 05 01 51 00 45 01 55 00         ..Q.E.U.
  10cb60:	 28 00 2c 00 40 00 54 00         (.,.@.T.
  10cb68:	 cd 00 09 01 01 01 11 00         ........
  10cb70:	 30 00 34 00 38 00 3c 00         0.4.8.<.
  10cb78:	 93 00 93 00 4b 01 4b 01         ....K.K.
  10cb80:	 97 00 97 00 43 01 43 01         ....C.C.
  10cb88:	 5b 00 5b 00 17 00 17 00         [.[.....
  10cb90:	 87 01 87 01 d3 00 d3 00         ........
  10cb98:	 44 00 48 00 4c 00 50 00         D.H.L.P.
  10cba0:	 4f 01 4f 01 0f 01 0f 01         O.O.....
  10cba8:	 d7 00 d7 00 8b 01 8b 01         ........
  10cbb0:	 9b 00 9b 00 c7 01 c7 01         ........
  10cbb8:	 8d 01 81 01 19 00 11 01         ........
  10cbc0:	 58 00 5c 00 60 00 68 00         X.\.`.h.
  10cbc8:	 5d 00 51 01 9d 00 15 01         ].Q.....
  10cbd0:	 d9 00 c9 01 dd 00 19 01         ........
  10cbd8:	 55 01 91 01 cd 01 64 00         U.....d.
  10cbe0:	 1f 00 1f 00 c3 01 c3 01         ........
  10cbe8:	 6c 00 70 00 74 00 78 00         l.p.t.x.
  10cbf0:	 5b 01 5b 01 97 01 97 01         [.[.....
  10cbf8:	 1f 01 1f 01 d3 01 d3 01         ........
  10cc00:	 d7 01 d7 01 5f 01 5f 01         ...._._.
  10cc08:	 9d 01 99 01 d9 01 dd 01         


Huffmancb_8:
  10cc10:	 04 00 08 00 10 00 24 00         ......$.
  10cc18:	 47 00 47 00 49 00 05 00         G.G.I...
  10cc20:	 85 00 41 00 89 00 0c 00         ..A.....
  10cc28:	 03 00 03 00 0b 00 0b 00         ........
  10cc30:	 14 00 18 00 1c 00 20 00         ...... .
  10cc38:	 83 00 83 00 4f 00 4f 00         ....O.O.
  10cc40:	 c7 00 c7 00 8f 00 8f 00         ........
  10cc48:	 cb 00 cb 00 cd 00 51 00         ......Q.
  10cc50:	 05 01 91 00 09 01 0d 00         ........
  10cc58:	 28 00 2c 00 40 00 54 00         (.,.@.T.
  10cc60:	 c1 00 d1 00 0d 01 95 00         ........
  10cc68:	 30 00 34 00 38 00 3c 00         0.4.8.<.
  10cc70:	 57 00 57 00 4b 01 4b 01         W.W.K.K.
  10cc78:	 47 01 47 01 d7 00 d7 00         G.G.....
  10cc80:	 4f 01 4f 01 13 01 13 01         O.O.....
  10cc88:	 17 01 17 01 03 01 03 01         ........
  10cc90:	 44 00 48 00 4c 00 50 00         D.H.L.P.
  10cc98:	 53 01 53 01 13 00 13 00         S.S.....
  10cca0:	 8b 01 8b 01 9b 00 9b 00         ........
  10cca8:	 5b 00 5b 00 87 01 87 01         [.[.....
  10ccb0:	 8d 01 d9 00 55 01 15 00         ....U...
  10ccb8:	 58 00 5c 00 60 00 68 00         X.\.`.h.
  10ccc0:	 19 01 41 01 91 01 5d 00         ..A...].
  10ccc8:	 9d 00 c9 01 59 01 dd 00         ....Y...
  10ccd0:	 c5 01 95 01 cd 01 64 00         ......d.
  10ccd8:	 9b 01 9b 01 1f 01 1f 01         ........
  10cce0:	 6c 00 70 00 74 00 78 00         l.p.t.x.
  10cce8:	 1b 00 1b 00 d3 01 d3 01         ........
  10ccf0:	 83 01 83 01 5f 01 5f 01         ...._._.
  10ccf8:	 9f 01 9f 01 db 01 db 01         ........
  10cd00:	 d5 01 1d 00 c1 01 dd 01         


Huffmancb_9:
  10cd08:	 03 00 03 00 04 00 08 00         ........
  10cd10:	 07 00 07 00 43 00 43 00         ....C.C.
  10cd18:	 45 00 0c 00 10 00 2c 00         E.....,.
  10cd20:	 49 00 85 00 09 00 81 00         I.......
  10cd28:	 14 00 18 00 1c 00 20 00         ...... .
  10cd30:	 4f 00 4f 00 8b 00 8b 00         O.O.....
  10cd38:	 c7 00 c7 00 0d 00 c1 00         ........
  10cd40:	 c9 00 8d 00 05 01 51 00         ......Q.
  10cd48:	 09 01 45 01 24 00 28 00         ..E.$.(.
  10cd50:	 93 00 93 00 cf 00 cf 00         ........
  10cd58:	 03 01 03 01 13 00 13 00         ........
  10cd60:	 30 00 44 00 58 00 a4 00         0.D.X...
  10cd68:	 34 00 38 00 3c 00 40 00         4.8.<.@.
  10cd70:	 57 00 57 00 4b 01 4b 01         W.W.K.K.
  10cd78:	 87 01 87 01 0f 01 0f 01         ........
  10cd80:	 97 00 97 00 5b 00 5b 00         ....[.[.
  10cd88:	 d3 00 d3 00 41 01 89 01         ....A...
  10cd90:	 48 00 4c 00 50 00 54 00         H.L.P.T.
  10cd98:	 15 00 c5 01 4d 01 05 02         ....M...
  10cda0:	 61 00 11 01 d5 00 99 00         a.......
  10cda8:	 5d 00 81 01 a1 00 09 02         ].......
  10cdb0:	 8d 01 c9 01 51 01 65 00         ....Q.e.
  10cdb8:	 5c 00 68 00 7c 00 90 00         \.h.|...
  10cdc0:	 45 02 9d 00 60 00 64 00         E...`.d.
  10cdc8:	 1b 00 1b 00 17 01 17 01         ........
  10cdd0:	 db 00 db 00 e3 00 e3 00         ........
  10cdd8:	 6c 00 70 00 74 00 78 00         l.p.t.x.
  10cde0:	 c3 01 c3 01 a7 00 a7 00         ........
  10cde8:	 0f 02 0f 02 93 01 93 01         ........
  10cdf0:	 cf 01 cf 01 03 02 03 02         ........
  10cdf8:	 6b 00 6b 00 1b 01 1b 01         k.k.....
  10ce00:	 80 00 84 00 88 00 8c 00         ........
  10ce08:	 4b 02 4b 02 57 01 57 01         K.K.W.W.
  10ce10:	 23 00 23 00 1f 00 1f 00         #.#.....
  10ce18:	 df 00 df 00 ab 00 ab 00         ........
  10ce20:	 e7 00 e7 00 23 01 23 01         ....#.#.
  10ce28:	 94 00 98 00 9c 00 a0 00         ........
  10ce30:	 87 02 87 02 1f 01 1f 01         ........
  10ce38:	 5b 01 5b 01 97 01 97 01         [.[.....
  10ce40:	 13 02 13 02 d3 01 d3 01         ........
  10ce48:	 4f 02 4f 02 6f 00 6f 00         O.O.o.o.
  10ce50:	 a8 00 bc 00 d0 00 f4 00         ........
  10ce58:	 ac 00 b0 00 b4 00 b8 00         ........
  10ce60:	 17 02 17 02 27 00 27 00         ....'.'.
  10ce68:	 63 01 63 01 e9 00 89 02         c.c.....
  10ce70:	 41 02 ad 00 25 01 99 01         A...%...
  10ce78:	 71 00 51 02 a1 01 c5 02         q.Q.....
  10ce80:	 c0 00 c4 00 c8 00 cc 00         ........
  10ce88:	 65 01 29 01 d5 01 5d 01         e.)...].
  10ce90:	 c9 02 05 03 b1 00 ed 00         ........
  10ce98:	 8d 02 55 02 d9 01 e1 01         ..U.....
  10cea0:	 2d 01 81 02 9d 01 f1 00         -.......
  10cea8:	 d4 00 d8 00 dc 00 e0 00         ........
  10ceb0:	 29 00 69 01 91 02 19 02         ).i.....
  10ceb8:	 09 03 a5 01 e5 01 d1 02         ........
  10cec0:	 2d 00 59 02 cd 02 95 02         -.Y.....
  10cec8:	 e4 00 e8 00 ec 00 f0 00         ........
  10ced0:	 23 02 23 02 1f 02 1f 02         #.#.....
  10ced8:	 73 01 73 01 0f 03 0f 03         s.s.....
  10cee0:	 6f 01 6f 01 df 01 df 01         o.o.....
  10cee8:	 33 01 33 01 af 01 af 01         3.3.....
  10cef0:	 f8 00 0c 01 20 01 34 01         .... .4.
  10cef8:	 fc 00 00 01 04 01 08 01         ........
  10cf00:	 ab 01 ab 01 13 03 13 03         ........
  10cf08:	 5f 02 5f 02 d7 02 d7 02         _._.....
  10cf10:	 c3 02 c3 02 b3 01 b3 01         ........
  10cf18:	 9b 02 9b 02 33 00 33 00         ....3.3.
  10cf20:	 10 01 14 01 18 01 1c 01         ........
  10cf28:	 eb 01 eb 01 17 03 17 03         ........
  10cf30:	 9f 02 9f 02 27 02 27 02         ....'.'.
  10cf38:	 03 03 03 03 ef 01 ef 01         ........
  10cf40:	 63 02 63 02 67 02 67 02         c.c.g.g.
  10cf48:	 24 01 28 01 2c 01 30 01         $.(.,.0.
  10cf50:	 2b 02 2b 02 df 02 df 02         +.+.....
  10cf58:	 f3 01 f3 01 db 02 db 02         ........
  10cf60:	 e3 02 e3 02 2f 02 2f 02         ...././.
  10cf68:	 1f 03 1f 03 1b 03 1b 03         ........
  10cf70:	 38 01 3c 01 40 01 44 01         8.<.@.D.
  10cf78:	 a1 02 69 02 21 03 a5 02         ..i.!...
  10cf80:	 e5 02 25 03 e9 02 71 02         ..%...q.
  10cf88:	 a9 02 6d 02 31 02 ad 02         ..m.1...
  10cf90:	 b1 02 f1 02 48 01 4c 01         ....H.L.
  10cf98:	 2b 03 2b 03 ef 02 ef 02         +.+.....
  10cfa0:	 2f 03 2f 03 33 03 33 03         


Huffmancb_10:
  10cfa8:	 04 00 0c 00 20 00 4c 00         .... .L.
  10cfb0:	 45 00 85 00 49 00 08 00         E...I...
  10cfb8:	 8b 00 8b 00 07 00 07 00         ........
  10cfc0:	 10 00 14 00 18 00 1c 00         ........
  10cfc8:	 43 00 43 00 c7 00 c7 00         C.C.....
  10cfd0:	 8f 00 8f 00 4f 00 4f 00         ....O.O.
  10cfd8:	 cb 00 cb 00 cf 00 cf 00         ........
  10cfe0:	 09 00 81 00 09 01 91 00         ........
  10cfe8:	 24 00 28 00 2c 00 38 00         $.(.,.8.
  10cff0:	 05 01 51 00 01 00 d1 00         ..Q.....
  10cff8:	 0d 01 0d 00 c1 00 11 01         ........
  10d000:	 49 01 95 00 30 00 34 00         I...0.4.
  10d008:	 47 01 47 01 57 00 57 00         G.G.W.W.
  10d010:	 d7 00 d7 00 4f 01 4f 01         ....O.O.
  10d018:	 3c 00 40 00 44 00 48 00         <.@.D.H.
  10d020:	 17 01 17 01 53 01 53 01         ....S.S.
  10d028:	 9b 00 9b 00 8b 01 8b 01         ........
  10d030:	 db 00 db 00 13 00 13 00         ........
  10d038:	 5b 00 5b 00 03 01 03 01         [.[.....
  10d040:	 50 00 64 00 78 00 c0 00         P.d.x...
  10d048:	 54 00 58 00 5c 00 60 00         T.X.\.`.
  10d050:	 87 01 87 01 8f 01 8f 01         ........
  10d058:	 57 01 57 01 1b 01 1b 01         W.W.....
  10d060:	 93 01 93 01 59 01 9d 00         ....Y...
  10d068:	 cd 01 c9 01 95 01 a1 00         ........
  10d070:	 68 00 6c 00 70 00 74 00         h.l.p.t.
  10d078:	 dd 00 15 00 5d 00 41 01         ....].A.
  10d080:	 61 00 c5 01 e1 00 1d 01         a.......
  10d088:	 d1 01 09 02 99 01 5d 01         ......].
  10d090:	 05 02 0d 02 21 01 11 02         ....!...
  10d098:	 7c 00 84 00 98 00 ac 00         |.......
  10d0a0:	 d5 01 61 01 15 02 80 00         ..a.....
  10d0a8:	 9f 01 9f 01 db 01 db 01         ........
  10d0b0:	 88 00 8c 00 90 00 94 00         ........
  10d0b8:	 a7 00 a7 00 1b 00 1b 00         ........
  10d0c0:	 1b 02 1b 02 e7 00 e7 00         ........
  10d0c8:	 4f 02 4f 02 67 00 67 00         O.O.g.g.
  10d0d0:	 4b 02 4b 02 83 01 83 01         K.K.....
  10d0d8:	 9c 00 a0 00 a4 00 a8 00         ........
  10d0e0:	 a3 01 a3 01 27 01 27 01         ....'.'.
  10d0e8:	 53 02 53 02 ab 00 ab 00         S.S.....
  10d0f0:	 47 02 47 02 df 01 df 01         G.G.....
  10d0f8:	 e3 01 e3 01 67 01 67 01         ....g.g.
  10d100:	 b0 00 b4 00 b8 00 bc 00         ........
  10d108:	 1f 02 1f 02 eb 00 eb 00         ........
  10d110:	 57 02 57 02 2b 01 2b 01         W.W.+.+.
  10d118:	 8b 02 8b 02 6b 00 6b 00         ....k.k.
  10d120:	 8f 02 8f 02 a7 01 a7 01         ........
  10d128:	 c4 00 d8 00 ec 00 00 01         ........
  10d130:	 c8 00 cc 00 d0 00 d4 00         ........
  10d138:	 5b 02 5b 02 23 00 23 00         [.[.#.#.
  10d140:	 93 02 93 02 1f 00 1f 00         ........
  10d148:	 af 00 af 00 5d 02 ed 00         ....]...
  10d150:	 a9 01 85 02 6d 00 e5 01         ....m...
  10d158:	 dc 00 e0 00 e4 00 e8 00         ........
  10d160:	 c1 01 21 02 69 01 cd 02         ..!.i...
  10d168:	 95 02 61 02 6d 01 01 02         ..a.m...
  10d170:	 2d 01 c9 02 9d 02 99 02         -.......
  10d178:	 e9 01 d1 02 c5 02 b1 00         ........
  10d180:	 f0 00 f4 00 f8 00 fc 00         ........
  10d188:	 25 02 f1 00 ad 01 d5 02         %.......
  10d190:	 31 01 ed 01 71 01 0d 03         1...q...
  10d198:	 d9 02 25 00 29 02 29 00         ..%.).).
  10d1a0:	 71 00 41 02 11 03 65 02         q.A...e.
  10d1a8:	 04 01 0c 01 20 01 34 01         .... .4.
  10d1b0:	 b1 01 09 03 a1 02 08 01         ........
  10d1b8:	 a7 02 a7 02 07 03 07 03         ........
  10d1c0:	 10 01 14 01 18 01 1c 01         ........
  10d1c8:	 2f 02 2f 02 f3 01 f3 01         /./.....
  10d1d0:	 df 02 df 02 17 03 17 03         ........
  10d1d8:	 1b 03 1b 03 6b 02 6b 02         ....k.k.
  10d1e0:	 e3 02 e3 02 33 02 33 02         ....3.3.
  10d1e8:	 24 01 28 01 2c 01 30 01         $.(.,.0.
  10d1f0:	 83 02 83 02 1f 03 1f 03         ........
  10d1f8:	 2f 00 2f 00 ab 02 ab 02         /./.....
  10d200:	 6f 02 6f 02 af 02 af 02         o.o.....
  10d208:	 c3 02 c3 02 ef 02 ef 02         ........
  10d210:	 38 01 3c 01 40 01 44 01         8.<.@.D.
  10d218:	 e7 02 e7 02 eb 02 eb 02         ........
  10d220:	 33 00 33 00 23 03 23 03         3.3.#.#.
  10d228:	 71 02 29 03 25 03 2d 03         q.).%.-.
  10d230:	 f1 02 01 03 b1 02 31 03         


Huffmancb_11:
  10d238:	 04 00 10 00 38 00 8c 00         ....8...
  10d240:	 01 00 85 00 08 00 0c 00         ........
  10d248:	 43 08 43 08 07 00 07 00         C.C.....
  10d250:	 83 00 83 00 8b 00 8b 00         ........
  10d258:	 14 00 18 00 1c 00 24 00         ......$.
  10d260:	 07 01 07 01 0b 01 0b 01         ........
  10d268:	 85 01 8d 00 0d 01 09 00         ........
  10d270:	 89 01 01 01 8d 01 20 00         ...... .
  10d278:	 93 00 93 00 07 02 07 02         ........
  10d280:	 28 00 2c 00 30 00 34 00         (.,.0.4.
  10d288:	 13 01 13 01 0b 02 0b 02         ........
  10d290:	 93 01 93 01 0f 02 0f 02         ........
  10d298:	 0f 00 0f 00 83 01 83 01         ........
  10d2a0:	 97 00 97 00 17 01 17 01         ........
  10d2a8:	 3c 00 50 00 64 00 78 00         <.P.d.x.
  10d2b0:	 40 00 44 00 48 00 4c 00         @.D.H.L.
  10d2b8:	 8b 02 8b 02 13 02 13 02         ........
  10d2c0:	 87 02 87 02 97 01 97 01         ........
  10d2c8:	 8f 02 8f 02 17 02 17 02         ........
  10d2d0:	 91 02 19 01 09 03 99 00         ........
  10d2d8:	 54 00 58 00 5c 00 60 00         T.X.\.`.
  10d2e0:	 99 01 0d 03 05 03 11 08         ........
  10d2e8:	 0d 08 c1 02 c1 01 41 02         ......A.
  10d2f0:	 19 02 41 03 11 00 11 03         ..A.....
  10d2f8:	 01 02 09 08 95 02 15 08         ........
  10d300:	 68 00 6c 00 70 00 74 00         h.l.p.t.
  10d308:	 c1 03 41 01 41 04 89 03         ..A.A...
  10d310:	 1d 01 8d 03 99 02 15 03         ........
  10d318:	 19 08 41 05 9d 01 9d 00         ..A.....
  10d320:	 c1 04 1d 08 05 08 85 03         ........
  10d328:	 7c 00 80 00 84 00 88 00         |.......
  10d330:	 91 03 c1 05 1d 02 41 06         ......A.
  10d338:	 21 08 c1 00 19 03 25 08         !.....%.
  10d340:	 09 04 95 03 29 08 c1 06         ....)...
  10d348:	 a1 01 21 01 0d 04 15 00         ..!.....
  10d350:	 90 00 c8 00 1c 01 70 01         ......p.
  10d358:	 94 00 98 00 a0 00 b4 00         ........
  10d360:	 41 07 2d 08 9d 02 11 04         A.-.....
  10d368:	 99 03 1d 03 81 02 9c 00         ........
  10d370:	 23 02 23 02 c3 07 c3 07         #.#.....
  10d378:	 a4 00 a8 00 ac 00 b0 00         ........
  10d380:	 33 08 33 08 07 04 07 04         3.3.....
  10d388:	 a3 00 a3 00 3b 08 3b 08         ....;.;.
  10d390:	 17 04 17 04 37 08 37 08         ....7.7.
  10d398:	 8f 04 8f 04 a3 02 a3 02         ........
  10d3a0:	 b8 00 bc 00 c0 00 c4 00         ........
  10d3a8:	 9f 03 9f 03 8b 04 8b 04         ........
  10d3b0:	 23 03 23 03 27 01 27 01         #.#.'.'.
  10d3b8:	 a7 01 a7 01 3f 08 3f 08         ....?.?.
  10d3c0:	 93 04 93 04 1b 04 1b 04         ........
  10d3c8:	 cc 00 e0 00 f4 00 08 01         ........
  10d3d0:	 d0 00 d4 00 d8 00 dc 00         ........
  10d3d8:	 1b 00 1b 00 27 02 27 02         ....'.'.
  10d3e0:	 97 04 97 04 a3 03 a3 03         ........
  10d3e8:	 1f 04 1f 04 87 04 87 04         ........
  10d3f0:	 ab 01 ab 01 03 03 03 03         ........
  10d3f8:	 e4 00 e8 00 ec 00 f0 00         ........
  10d400:	 2b 01 2b 01 a7 00 a7 00         +.+.....
  10d408:	 a7 02 a7 02 13 05 13 05         ........
  10d410:	 0b 05 0b 05 27 03 27 03         ....'.'.
  10d418:	 0f 05 0f 05 9b 04 9b 04         ........
  10d420:	 f8 00 fc 00 00 01 04 01         ........
  10d428:	 2b 02 2b 02 23 04 23 04         +.+.#.#.
  10d430:	 ab 02 ab 02 a7 03 a7 03         ........
  10d438:	 af 01 af 01 07 05 07 05         ........
  10d440:	 1f 00 1f 00 2b 03 2b 03         ....+.+.
  10d448:	 0c 01 10 01 14 01 18 01         ........
  10d450:	 9f 04 9f 04 8f 05 8f 05         ........
  10d458:	 17 05 17 05 ab 00 ab 00         ........
  10d460:	 93 05 93 05 2f 01 2f 01         ...././.
  10d468:	 37 01 37 01 1b 05 1b 05         7.7.....
  10d470:	 20 01 34 01 48 01 5c 01          .4.H.\.
  10d478:	 24 01 28 01 2c 01 30 01         $.(.,.0.
  10d480:	 b7 01 b7 01 8b 05 8b 05         ........
  10d488:	 43 00 43 00 97 05 97 05         C.C.....
  10d490:	 af 02 af 02 2d 02 25 04         ....-.%.
  10d498:	 1d 05 a1 04 01 08 91 06         ........
  10d4a0:	 38 01 3c 01 40 01 44 01         8.<.@.D.
  10d4a8:	 81 03 8d 06 2d 03 b5 00         ....-...
  10d4b0:	 35 02 b1 01 89 06 b5 02         5.......
  10d4b8:	 21 05 99 05 29 04 a9 03         !...)...
  10d4c0:	 39 01 31 02 85 05 11 06         9.1.....
  10d4c8:	 4c 01 50 01 54 01 58 01         L.P.T.X.
  10d4d0:	 ad 00 0d 06 85 06 31 01         ......1.
  10d4d8:	 9d 05 0d 07 15 06 95 06         ........
  10d4e0:	 39 02 11 07 ad 03 b9 01         9.......
  10d4e8:	 b1 02 35 03 31 03 21 00         ..5.1.!.
  10d4f0:	 60 01 64 01 68 01 6c 01         `.d.h.l.
  10d4f8:	 2d 04 09 06 a5 04 b9 02         -.......
  10d500:	 99 06 29 05 3d 01 a1 05         ..).=...
  10d508:	 25 05 39 03 a9 04 15 07         %.9.....
  10d510:	 ad 04 b9 00 09 07 19 06         ........
  10d518:	 74 01 88 01 9c 01 cc 01         t.......
  10d520:	 78 01 7c 01 80 01 84 01         x.|.....
  10d528:	 05 06 35 04 01 04 b5 03         ..5.....
  10d530:	 1d 06 b1 03 9d 06 bd 01         ........
  10d538:	 b1 00 19 07 89 07 bd 02         ........
  10d540:	 3d 02 05 07 a5 05 91 07         =.......
  10d548:	 8c 01 90 01 94 01 98 01         ........
  10d550:	 b9 03 a1 06 b5 04 21 06         ......!.
  10d558:	 95 07 8d 07 a9 05 2d 05         ......-.
  10d560:	 31 04 3d 03 bd 03 21 07         1.=...!.
  10d568:	 bd 00 1d 07 25 00 81 04         ....%...
  10d570:	 a0 01 a4 01 a8 01 b8 01         ........
  10d578:	 a5 06 25 06 b1 04 39 04         ..%...9.
  10d580:	 a9 06 b9 04 31 05 99 07         ....1...
  10d588:	 9d 07 ac 01 b0 01 b4 01         ........
  10d590:	 27 07 27 07 3f 04 3f 04         '.'.?.?.
  10d598:	 af 05 af 05 2f 07 2f 07         ...././.
  10d5a0:	 87 07 87 07 2b 06 2b 06         ....+.+.
  10d5a8:	 bc 01 c0 01 c4 01 c8 01         ........
  10d5b0:	 2b 07 2b 07 b7 05 b7 05         +.+.....
  10d5b8:	 37 05 37 05 af 06 af 06         7.7.....
  10d5c0:	 2f 06 2f 06 a3 07 a3 07         /./.....
  10d5c8:	 bb 05 bb 05 37 06 37 06         ....7.7.
  10d5d0:	 d0 01 e4 01 f8 01 0c 02         ........
  10d5d8:	 d4 01 d8 01 dc 01 e0 01         ........
  10d5e0:	 b3 06 b3 06 bf 04 bf 04         ........
  10d5e8:	 3b 05 3b 05 2b 00 2b 00         ;.;.+.+.
  10d5f0:	 b3 05 b3 05 a7 07 a7 07         ........
  10d5f8:	 03 05 03 05 33 06 33 06         ....3.3.
  10d600:	 e8 01 ec 01 f0 01 f4 01         ........
  10d608:	 2f 00 2f 00 33 07 33 07         /./.3.3.
  10d610:	 ab 07 ab 07 b7 06 b7 06         ........
  10d618:	 83 06 83 06 3b 06 3b 06         ....;.;.
  10d620:	 3f 05 3f 05 bf 05 bf 05         ?.?.....
  10d628:	 fc 01 00 02 04 02 08 02         ........
  10d630:	 af 07 af 07 bb 06 bb 06         ........
  10d638:	 37 00 37 00 83 05 83 05         7.7.....
  10d640:	 37 07 37 07 3f 06 3f 06         7.7.?.?.
  10d648:	 bf 06 bf 06 b3 07 b3 07         ........
  10d650:	 10 02 14 02 18 02 1c 02         ........
  10d658:	 3b 00 3b 00 3b 07 3b 07         ;.;.;.;.
  10d660:	 b7 07 b7 07 33 00 33 00         ....3.3.
  10d668:	 bb 07 bb 07 01 07 01 06         ........
  10d670:	 3d 07 3d 00 81 07 bd 07         =.=.....
  10d678:	 18 01 17 01 00 01 09 01         ........
  10d680:	 a5 05 a1 05 b7 05 13 05         ........
  10d688:	 f9 08 ff 08 21 08 ff 08         ....!...
  10d690:	 4f 08 ff 08 bc 08 ff 08         O.......
  10d698:	 15 08 ff 08 37 08 ff 08         ....7...
  10d6a0:	 0d 08 ff 08 5f 08 ff 08         ...._...
  10d6a8:	 4a 08 ff 08 7d 08 ff 08         J...}...
  10d6b0:	 ff 08 ff 08 a8 08 ff 08         ........
  10d6b8:	 15 08 ff 08 3f 08 ff 08         ....?...
  10d6c0:	 30 08 ff 08 94 08 ff 08         0.......
  10d6c8:	 d4 08 ff 08 25 08 ff 08         ....%...
  10d6d0:	 ef 08 ff 08 3f 08 ff 08         ....?...
  10d6d8:	 09 08 ff 08 fc 08 ff 08         ........
  10d6e0:	 42 08 ff 08 b3 08 ff 08         B.......
  10d6e8:	 0d 07 a9 07 0e 06 e2 06         ........
  10d6f0:	 c7 06 d0 06 b2 04 07 04         


AACcodeBookDTable:
  10d6f8:	 00 00 00 00 00 00 00 00         ........
  10d700:	 58 c3 10 00 04 02 01 00         X.......
  10d708:	 f0 c4 10 00 04 02 01 00         ........
  10d710:	 28 c6 10 00 04 02 00 00         (.......
  10d718:	 60 c7 10 00 04 02 00 00         `.......
  10d720:	 90 c8 10 00 02 04 04 00         ........
  10d728:	 d8 c9 10 00 02 04 04 00         ........
  10d730:	 18 cb 10 00 02 04 00 00         ........
  10d738:	 10 cc 10 00 02 04 00 00         ........
  10d740:	 08 cd 10 00 02 04 00 00         ........
  10d748:	 a8 cf 10 00 02 04 00 00         ........
  10d750:	 38 d2 10 00 02 05 00 00         8.......
  10d758:	 ec b7 10 00 01 08 3c 00         


quantize_intervals_LF:
  10d760:	 24 d9 ff ff dc 26 00 00         $....&..
  10d768:	 a4 74 00 00 90 c2 00 00         .t......
  10d770:	 be 10 01 00 46 5f 01 00         ....F_..
  10d778:	 40 ae 01 00 c6 fd 01 00         @.......
  10d780:	 f2 4d 02 00 da 9e 02 00         .M......
  10d788:	 9a f0 02 00 48 43 03 00         ....HC..
  10d790:	 00 97 03 00 d6 eb 03 00         ........
  10d798:	 e6 41 04 00 48 99 04 00         .A..H...
  10d7a0:	 16 f2 04 00 6c 4c 05 00         ....lL..
  10d7a8:	 66 a8 05 00 1e 06 06 00         f.......
  10d7b0:	 b2 65 06 00 42 c7 06 00         .e..B...
  10d7b8:	 ee 2a 07 00 d8 90 07 00         .*......
  10d7c0:	 28 f9 07 00 02 64 08 00         (....d..
  10d7c8:	 90 d1 08 00 00 42 09 00         .....B..
  10d7d0:	 82 b5 09 00 4c 2c 0a 00         ....L,..
  10d7d8:	 96 a6 0a 00 9e 24 0b 00         .....$..
  10d7e0:	 aa a6 0b 00 06 2d 0c 00         .....-..
  10d7e8:	 02 b8 0c 00 fe 47 0d 00         .....G..
  10d7f0:	 60 dd 0d 00 98 78 0e 00         `....x..
  10d7f8:	 2c 1a 0f 00 aa c2 0f 00         ,.......
  10d800:	 bc 72 10 00 1e 2b 11 00         .r...+..
  10d808:	 ac ec 11 00 62 b8 12 00         ....b...
  10d810:	 6c 8f 13 00 24 73 14 00         l...$s..
  10d818:	 2c 65 15 00 7a 67 16 00         ,e..zg..
  10d820:	 6e 7c 17 00 fa a6 18 00         n|......
  10d828:	 d2 ea 19 00 aa 4c 1b 00         .....L..
  10d830:	 b0 d2 1c 00 28 85 1e 00         ....(...
  10d838:	 84 6f 20 00 36 a2 22 00         .o .6.".
  10d840:	 0e 36 25 00 e4 52 28 00         .6%..R(.
  10d848:	 06 3e 2c 00 e8 7c 31 00         .>,..|1.
  10d850:	 1e 29 39 00 62 33 45 00         .)9.b3E.
  10d858:	 62 6d 56 00 d8 5f 6c 00         bmV.._l.
  10d860:	 b6 c3 87 00                     ....


invert_quantize_dither_factors_LF:
  10d864:	 dc 26 00 00 dc 26 00 00         .&...&..
  10d86c:	 ea 26 00 00 04 27 00 00         .&...'..
  10d874:	 2a 27 00 00 5e 27 00 00         *'..^'..
  10d87c:	 9e 27 00 00 ea 27 00 00         .'...'..
  10d884:	 42 28 00 00 a8 28 00 00         B(...(..
  10d88c:	 18 29 00 00 96 29 00 00         .)...)..
  10d894:	 20 2a 00 00 b6 2a 00 00          *...*..
  10d89c:	 5a 2b 00 00 0a 2c 00 00         Z+...,..
  10d8a4:	 c6 2c 00 00 90 2d 00 00         .,...-..
  10d8ac:	 68 2e 00 00 50 2f 00 00         h...P/..
  10d8b4:	 46 30 00 00 4a 31 00 00         F0..J1..
  10d8bc:	 62 32 00 00 8a 33 00 00         b2...3..
  10d8c4:	 c6 34 00 00 14 36 00 00         .4...6..
  10d8cc:	 7a 37 00 00 f6 38 00 00         z7...8..
  10d8d4:	 8c 3a 00 00 3e 3c 00 00         .:..><..
  10d8dc:	 0c 3e 00 00 fc 3f 00 00         .>...?..
  10d8e4:	 10 42 00 00 4c 44 00 00         .B..LD..
  10d8ec:	 b2 46 00 00 4a 49 00 00         .F..JI..
  10d8f4:	 18 4c 00 00 22 4f 00 00         .L.."O..
  10d8fc:	 72 52 00 00 0e 56 00 00         rR...V..
  10d904:	 04 5a 00 00 5e 5e 00 00         .Z..^^..
  10d90c:	 2e 63 00 00 88 68 00 00         .c...h..
  10d914:	 82 6e 00 00 38 75 00 00         .n..8u..
  10d91c:	 d2 7c 00 00 7c 85 00 00         .|..|...
  10d924:	 78 8f 00 00 14 9b 00 00         x.......
  10d92c:	 c2 a8 00 00 16 b9 00 00         ........
  10d934:	 ee cc 00 00 8a e5 00 00         ........
  10d93c:	 d2 04 01 00 e0 2d 01 00         .....-..
  10d944:	 fa 65 01 00 dc b6 01 00         .e......
  10d94c:	 44 34 02 00 9e 0a 03 00         D4......
  10d954:	 98 a1 04 00 aa 68 07 00         .....h..
  10d95c:	 56 d1 09 00 22 21 0c 00         V..."!..
  10d964:	 bc 42 0f 00                     .B..


quantize_dither_factors_LF:
  10d968:	 00 00 00 00 04 00 00 00         ........
  10d970:	 07 00 00 00 0a 00 00 00         ........
  10d978:	 0d 00 00 00 10 00 00 00         ........
  10d980:	 13 00 00 00 16 00 00 00         ........
  10d988:	 1a 00 00 00 1c 00 00 00         ........
  10d990:	 20 00 00 00 23 00 00 00          ...#...
  10d998:	 26 00 00 00 29 00 00 00         &...)...
  10d9a0:	 2c 00 00 00 2f 00 00 00         ,.../...
  10d9a8:	 33 00 00 00 36 00 00 00         3...6...
  10d9b0:	 3a 00 00 00 3e 00 00 00         :...>...
  10d9b8:	 41 00 00 00 46 00 00 00         A...F...
  10d9c0:	 4a 00 00 00 4f 00 00 00         J...O...
  10d9c8:	 54 00 00 00 5a 00 00 00         T...Z...
  10d9d0:	 5f 00 00 00 66 00 00 00         _...f...
  10d9d8:	 6d 00 00 00 74 00 00 00         m...t...
  10d9e0:	 7c 00 00 00 85 00 00 00         |.......
  10d9e8:	 8f 00 00 00 9a 00 00 00         ........
  10d9f0:	 a6 00 00 00 b4 00 00 00         ........
  10d9f8:	 c3 00 00 00 d4 00 00 00         ........
  10da00:	 e7 00 00 00 fe 00 00 00         ........
  10da08:	 17 01 00 00 34 01 00 00         ....4...
  10da10:	 57 01 00 00 7f 01 00 00         W.......
  10da18:	 ae 01 00 00 e7 01 00 00         ........
  10da20:	 2b 02 00 00 7f 02 00 00         +.......
  10da28:	 e7 02 00 00 6c 03 00 00         ....l...
  10da30:	 15 04 00 00 f6 04 00 00         ........
  10da38:	 27 06 00 00 d2 07 00 00         '.......
  10da40:	 44 0a 00 00 07 0e 00 00         D.......
  10da48:	 39 14 00 00 5a 1f 00 00         9...Z...
  10da50:	 97 35 00 00 bf 65 00 00         .5...e..
  10da58:	 c5 b1 00 00 2b 9a 00 00         ....+...
  10da60:	 f3 93 00 00 67 c8 00 00         ....g...
  10da68:	 00 00 00 00                     ....


quantize_factor_select_offset_LF:
  10da6c:	 00 00 eb ff ed ff ef ff         ........
  10da74:	 f1 ff f4 ff f6 ff f8 ff         ........
  10da7c:	 fa ff fc ff ff ff 01 00         ........
  10da84:	 03 00 06 00 08 00 0a 00         ........
  10da8c:	 0d 00 0f 00 12 00 14 00         ........
  10da94:	 17 00 1a 00 1d 00 1f 00         ........
  10da9c:	 22 00 25 00 28 00 2b 00         ".%.(.+.
  10daa4:	 2f 00 32 00 35 00 39 00         /.2.5.9.
  10daac:	 3c 00 40 00 44 00 48 00         <.@.D.H.
  10dab4:	 4c 00 50 00 55 00 59 00         L.P.U.Y.
  10dabc:	 5e 00 63 00 69 00 6e 00         ^.c.i.n.
  10dac4:	 74 00 7b 00 81 00 88 00         t.{.....
  10dacc:	 90 00 98 00 a1 00 ab 00         ........
  10dad4:	 b6 00 c2 00 cf 00 df 00         ........
  10dadc:	 f1 00 07 01 23 01 48 01         ....#.H.
  10dae4:	 7e 01 d3 01 0a 02 0a 02         ~.......
  10daec:	 0a 02 00 00                     ....


hd_quantize_intervals_LF:
  10daf0:	 7c f6 ff ff 84 09 00 00         |.......
  10daf8:	 8c 1c 00 00 94 2f 00 00         ...../..
  10db00:	 9e 42 00 00 aa 55 00 00         .B...U..
  10db08:	 b6 68 00 00 c6 7b 00 00         .h...{..
  10db10:	 d6 8e 00 00 ea a1 00 00         ........
  10db18:	 02 b5 00 00 1e c8 00 00         ........
  10db20:	 3c db 00 00 60 ee 00 00         <...`...
  10db28:	 88 01 01 00 b4 14 01 00         ........
  10db30:	 e6 27 01 00 1e 3b 01 00         .'...;..
  10db38:	 5e 4e 01 00 a2 61 01 00         ^N...a..
  10db40:	 ee 74 01 00 42 88 01 00         .t..B...
  10db48:	 9c 9b 01 00 00 af 01 00         ........
  10db50:	 6c c2 01 00 e0 d5 01 00         l.......
  10db58:	 5e e9 01 00 e4 fc 01 00         ^.......
  10db60:	 76 10 02 00 10 24 02 00         v....$..
  10db68:	 b6 37 02 00 66 4b 02 00         .7..fK..
  10db70:	 22 5f 02 00 ea 72 02 00         "_...r..
  10db78:	 be 86 02 00 9e 9a 02 00         ........
  10db80:	 8c ae 02 00 86 c2 02 00         ........
  10db88:	 8e d6 02 00 a2 ea 02 00         ........
  10db90:	 c6 fe 02 00 fa 12 03 00         ........
  10db98:	 3a 27 03 00 8a 3b 03 00         :'...;..
  10dba0:	 ec 4f 03 00 5c 64 03 00         .O..\d..
  10dba8:	 dc 78 03 00 6e 8d 03 00         .x..n...
  10dbb0:	 10 a2 03 00 c4 b6 03 00         ........
  10dbb8:	 8a cb 03 00 62 e0 03 00         ....b...
  10dbc0:	 4e f5 03 00 4a 0a 04 00         N...J...
  10dbc8:	 5c 1f 04 00 80 34 04 00         \....4..
  10dbd0:	 ba 49 04 00 06 5f 04 00         .I..._..
  10dbd8:	 68 74 04 00 e0 89 04 00         ht......
  10dbe0:	 6c 9f 04 00 10 b5 04 00         l.......
  10dbe8:	 c8 ca 04 00 98 e0 04 00         ........
  10dbf0:	 80 f6 04 00 7e 0c 05 00         ....~...
  10dbf8:	 94 22 05 00 c4 38 05 00         ."...8..
  10dc00:	 0c 4f 05 00 6c 65 05 00         .O..le..
  10dc08:	 e6 7b 05 00 7a 92 05 00         .{..z...
  10dc10:	 2a a9 05 00 f4 bf 05 00         *.......
  10dc18:	 d8 d6 05 00 d8 ed 05 00         ........
  10dc20:	 f6 04 06 00 2e 1c 06 00         ........
  10dc28:	 84 33 06 00 f8 4a 06 00         .3...J..
  10dc30:	 8a 62 06 00 3a 7a 06 00         .b..:z..
  10dc38:	 08 92 06 00 f6 a9 06 00         ........
  10dc40:	 04 c2 06 00 32 da 06 00         ....2...
  10dc48:	 82 f2 06 00 f2 0a 07 00         ........
  10dc50:	 84 23 07 00 38 3c 07 00         .#..8<..
  10dc58:	 10 55 07 00 0a 6e 07 00         .U...n..
  10dc60:	 2a 87 07 00 6c a0 07 00         *...l...
  10dc68:	 d4 b9 07 00 62 d3 07 00         ....b...
  10dc70:	 16 ed 07 00 f0 06 08 00         ........
  10dc78:	 f2 20 08 00 1c 3b 08 00         . ...;..
  10dc80:	 70 55 08 00 ec 6f 08 00         pU...o..
  10dc88:	 90 8a 08 00 60 a5 08 00         ....`...
  10dc90:	 5c c0 08 00 82 db 08 00         \.......
  10dc98:	 d6 f6 08 00 58 12 09 00         ....X...
  10dca0:	 06 2e 09 00 e4 49 09 00         .....I..
  10dca8:	 f0 65 09 00 2c 82 09 00         .e..,...
  10dcb0:	 9a 9e 09 00 3a bb 09 00         ....:...
  10dcb8:	 0c d8 09 00 10 f5 09 00         ........
  10dcc0:	 4a 12 0a 00 b8 2f 0a 00         J..../..
  10dcc8:	 5c 4d 0a 00 38 6b 0a 00         \M..8k..
  10dcd0:	 4a 89 0a 00 96 a7 0a 00         J.......
  10dcd8:	 1a c6 0a 00 da e4 0a 00         ........
  10dce0:	 d4 03 0b 00 0c 23 0b 00         .....#..
  10dce8:	 80 42 0b 00 34 62 0b 00         .B..4b..
  10dcf0:	 28 82 0b 00 5c a2 0b 00         (...\...
  10dcf8:	 d2 c2 0b 00 8c e3 0b 00         ........
  10dd00:	 8a 04 0c 00 cc 25 0c 00         .....%..
  10dd08:	 56 47 0c 00 2a 69 0c 00         VG..*i..
  10dd10:	 46 8b 0c 00 ac ad 0c 00         F.......
  10dd18:	 5e d0 0c 00 60 f3 0c 00         ^...`...
  10dd20:	 b0 16 0d 00 50 3a 0d 00         ....P:..
  10dd28:	 44 5e 0d 00 8a 82 0d 00         D^......
  10dd30:	 26 a7 0d 00 1a cc 0d 00         &.......
  10dd38:	 66 f1 0d 00 0e 17 0e 00         f.......
  10dd40:	 12 3d 0e 00 74 63 0e 00         .=..tc..
  10dd48:	 36 8a 0e 00 5c b1 0e 00         6...\...
  10dd50:	 e6 d8 0e 00 d6 00 0f 00         ........
  10dd58:	 2e 29 0f 00 f4 51 0f 00         .)...Q..
  10dd60:	 26 7b 0f 00 c8 a4 0f 00         &{......
  10dd68:	 dc ce 0f 00 66 f9 0f 00         ....f...
  10dd70:	 66 24 10 00 e2 4f 10 00         f$...O..
  10dd78:	 dc 7b 10 00 56 a8 10 00         .{..V...
  10dd80:	 52 d5 10 00 d6 02 11 00         R.......
  10dd88:	 e4 30 11 00 7e 5f 11 00         .0..~_..
  10dd90:	 aa 8e 11 00 6a be 11 00         ....j...
  10dd98:	 c4 ee 11 00 b8 1f 12 00         ........
  10dda0:	 4e 51 12 00 88 83 12 00         NQ......
  10dda8:	 6a b6 12 00 fc e9 12 00         j.......
  10ddb0:	 40 1e 13 00 3a 53 13 00         @...:S..
  10ddb8:	 f2 88 13 00 6c bf 13 00         ....l...
  10ddc0:	 ae f6 13 00 c0 2e 14 00         ........
  10ddc8:	 a4 67 14 00 62 a1 14 00         .g..b...
  10ddd0:	 04 dc 14 00 8c 17 15 00         ........
  10ddd8:	 06 54 15 00 76 91 15 00         .T..v...
  10dde0:	 e6 cf 15 00 60 0f 16 00         ....`...
  10dde8:	 ec 4f 16 00 92 91 16 00         .O......
  10ddf0:	 5e d4 16 00 5a 18 17 00         ^...Z...
  10ddf8:	 90 5d 17 00 0e a4 17 00         .]......
  10de00:	 de eb 17 00 0e 35 18 00         .....5..
  10de08:	 ae 7f 18 00 ca cb 18 00         ........
  10de10:	 72 19 19 00 b8 68 19 00         r....h..
  10de18:	 ac b9 19 00 64 0c 1a 00         ....d...
  10de20:	 f2 60 1a 00 6a b7 1a 00         .`..j...
  10de28:	 e6 0f 1b 00 7c 6a 1b 00         ....|j..
  10de30:	 48 c7 1b 00 68 26 1c 00         H...h&..
  10de38:	 f8 87 1c 00 1c ec 1c 00         ........
  10de40:	 f4 52 1d 00 aa bc 1d 00         .R......
  10de48:	 68 29 1e 00 5a 99 1e 00         h)..Z...
  10de50:	 b4 0c 1f 00 aa 83 1f 00         ........
  10de58:	 7e fe 1f 00 6c 7d 20 00         ~...l} .
  10de60:	 c0 00 21 00 cc 88 21 00         ..!...!.
  10de68:	 e8 15 22 00 78 a8 22 00         ..".x.".
  10de70:	 f0 40 23 00 ca df 23 00         .@#...#.
  10de78:	 9a 85 24 00 fe 32 25 00         ..$..2%.
  10de80:	 b4 e8 25 00 8e a7 26 00         ..%...&.
  10de88:	 86 70 27 00 bc 44 28 00         .p'..D(.
  10de90:	 82 25 29 00 6a 14 2a 00         .%).j.*.
  10de98:	 56 13 2b 00 8c 24 2c 00         V.+..$,.
  10dea0:	 d6 4a 2d 00 a8 89 2e 00         .J-.....
  10dea8:	 60 e5 2f 00 98 63 31 00         `./..c1.
  10deb0:	 a0 0b 33 00 3c e7 34 00         ..3.<.4.
  10deb8:	 ba 03 37 00 a2 73 39 00         ..7..s9.
  10dec0:	 08 51 3c 00 2a c0 3f 00         .Q<.*.?.
  10dec8:	 52 ef 43 00 be 0b 49 00         R.C...I.
  10ded0:	 da 26 4f 00 18 2b 56 00         .&O..+V.
  10ded8:	 10 fb 5d 00 06 8c 66 00         ..]...f.
  10dee0:	 28 e4 6f 00 20 12 7a 00         (.o. .z.
  10dee8:	 88 28 85 00 48 3c 91 00         .(..H<..
  10def0:	 54 64 9e 00                     Td..


write_32:
  10def4:    42 20             	r2 = 0x0			  ## boot_poweroff.c:39:0
  10def6:    04 84             	goto 0x8 <write_32+0xC : 10df00 >			  ## boot_poweroff.c:39:0
  10def8:    d8 ee 01 12       	b[r0+r2] = r1			  ## boot_poweroff.c:41:14
  10defc:    c2 21             	r2 += 0x1			  ## boot_poweroff.c:40:29
  10defe:    91 a8             	r1 = r1 >> 0x8			  ## boot_poweroff.c:42:11
  10df00:    82 f8 fa 09       	if (r2 != 0x4) goto -0xc <write_32+0x4 : 10def8 >			  ## boot_poweroff.c:40:5
  10df04:    80 00             	rts			  ## boot_poweroff.c:44:1


lp_signature_set:
  10df06:    76 04             	[--sp] = {rets, r6-r4}			  ## boot_poweroff.c:57:0
  10df08:    25 16             	r5 = r2			  ## boot_poweroff.c:57:0
  10df0a:    16 16             	r6 = r1			  ## boot_poweroff.c:57:0
  10df0c:    04 16             	r4 = r0			  ## boot_poweroff.c:57:0
  10df0e:    c0 ff fc 0f 1a 00 	r0 = 0x1a0ffc <__stub_LZ4_decompress_safe_usingDict+0x91000 : 1a0ffc >			  ## boot_poweroff.c:65:5
  10df14:    41 16             	r1 = r4			  ## boot_poweroff.c:65:5
  10df16:    71 8e             	call -0x24 <write_32 : 10def4 >			  ## boot_poweroff.c:65:5
  10df18:    f8 3c             	r0 += -0x4			  ## boot_poweroff.c:66:5
  10df1a:    61 16             	r1 = r6			  ## boot_poweroff.c:66:5
  10df1c:    71 8b             	call -0x2a <write_32 : 10def4 >			  ## boot_poweroff.c:66:5
  10df1e:    f8 3c             	r0 += -0x4			  ## boot_poweroff.c:67:5
  10df20:    51 16             	r1 = r5			  ## boot_poweroff.c:67:5
  10df22:    71 88             	call -0x30 <write_32 : 10def4 >			  ## boot_poweroff.c:67:5
  10df24:    f8 3c             	r0 += -0x4			  ## boot_poweroff.c:68:5
  10df26:    31 16             	r1 = r3			  ## boot_poweroff.c:68:5
  10df28:    71 85             	call -0x36 <write_32 : 10def4 >			  ## boot_poweroff.c:68:5
  10df2a:    f8 3c             	r0 += -0x4			  ## boot_poweroff.c:69:5
  10df2c:    c1 ff ef 27 12 ab 	r1 = 0xab1227ef <__stub_LZ4_decompress_safe_usingDict+0xAB0127F2 : ab1227ee >			  ## boot_poweroff.c:69:5
  10df32:    71 80             	call -0x40 <write_32 : 10def4 >			  ## boot_poweroff.c:69:5
  10df34:    68 2f             	r0 = 0xaf			  ## boot_poweroff.c:71:5
  10df36:    c8 47             	b[r4+0x7] = r0			  ## boot_poweroff.c:71:5
  10df38:    68 36             	r0 = 0xb6			  ## boot_poweroff.c:71:5
  10df3a:    c8 46             	b[r4+0x6] = r0			  ## boot_poweroff.c:71:5
  10df3c:    78 34             	r0 = 0xf4			  ## boot_poweroff.c:71:5
  10df3e:    c8 45             	b[r4+0x5] = r0			  ## boot_poweroff.c:71:5
  10df40:    70 26             	r0 = 0xc6			  ## boot_poweroff.c:71:5
  10df42:    c8 44             	b[r4+0x4] = r0			  ## boot_poweroff.c:71:5
  10df44:    70 39             	r0 = 0xd9			  ## boot_poweroff.c:71:5
  10df46:    c8 43             	b[r4+0x3] = r0			  ## boot_poweroff.c:71:5
  10df48:    70 2b             	r0 = 0xcb			  ## boot_poweroff.c:71:5
  10df4a:    c8 42             	b[r4+0x2] = r0			  ## boot_poweroff.c:71:5
  10df4c:    78 2c             	r0 = 0xec			  ## boot_poweroff.c:71:5
  10df4e:    c8 41             	b[r4+0x1] = r0			  ## boot_poweroff.c:71:5
  10df50:    68 3f             	r0 = 0xbf			  ## boot_poweroff.c:71:5
  10df52:    c8 40             	b[r4+0x0] = r0			  ## boot_poweroff.c:71:5
  10df54:    56 04             	{pc, r6-r4} = [sp++]			  ## boot_poweroff.c:72:1


boot_poweroff:
  10df56:    74 04             	[--sp] = {rets, r4}			  ## boot_poweroff.c:74:0
  10df58:    c0 ff ec 0f 1a 00 	r0 = 0x1a0fec <__stub_LZ4_decompress_safe_usingDict+0x90FF0 : 1a0fec >			  ## boot_poweroff.c:75:9
  10df5e:    80 ea 4b 0e       	call 0x1c96 <read_32 : 10fbf8 >			  ## boot_poweroff.c:75:9
  10df62:    c1 ff ef 27 12 ab 	r1 = 0xab1227ef <__stub_LZ4_decompress_safe_usingDict+0xAB0127F2 : ab1227ee >			  ## boot_poweroff.c:75:33
  10df68:    81 e8 21 00       	if (r0 != r1) goto 0x42 <boot_poweroff+0x58 : 10dfae >			  ## boot_poweroff.c:75:33
  10df6c:    c0 ff c0 00 1e 00 	r0 = 0x1e00c0 <__stub_LZ4_decompress_safe_usingDict+0xD00C4 : 1e00c0 >			  ## boot_poweroff.c:78:17
  10df72:    00 60             	r0 = [r0+0x0] 			  ## boot_poweroff.c:78:17
  10df74:    80 f8 1b 80       	if (r0 != 0x40) goto 0x36 <boot_poweroff+0x58 : 10dfae >			  ## boot_poweroff.c:78:17
  10df78:    c0 ff 38 18 1a 00 	r0 = 0x1a1838 <__stub_LZ4_decompress_safe_usingDict+0x9183C : 1a1838 >			  ## boot_poweroff.c:82:11
  10df7e:    08 40             	r0 = b[r0+0x0] (u)			  ## boot_poweroff.c:82:11
  10df80:    50 e8 15 08       	if ((r0 & 0x2) == 0) goto 0x2a <boot_poweroff+0x58 : 10dfae >			  ## boot_poweroff.c:82:11
  10df84:    c0 ff fc 0f 1a 00 	r0 = 0x1a0ffc <__stub_LZ4_decompress_safe_usingDict+0x91000 : 1a0ffc >			  ## boot_poweroff.c:85:32
  10df8a:    80 ea 35 0e       	call 0x1c6a <read_32 : 10fbf8 >			  ## boot_poweroff.c:85:32
  10df8e:    04 16             	r4 = r0			  ## boot_poweroff.c:85:32
  10df90:    c1 ff 98 40 10 00 	r1 = 0x104098 <nvram_boot_tag : 104098 >			  ## boot_poweroff.c:87:9
  10df96:    42 28             	r2 = 0x8			  ## boot_poweroff.c:87:9
  10df98:    bf ea 75 92       	call -0xdb16 <memcmp : 100486 >			  ## boot_poweroff.c:87:9
  10df9c:    80 48             	if (r0 != 0) goto 0x10 <boot_poweroff+0x58 : 10dfae >			  ## boot_poweroff.c:87:9
  10df9e:    50 35             	r0 = 0x55			  ## boot_poweroff.c:91:23
  10dfa0:    c8 40             	b[r4+0x0] = r0			  ## boot_poweroff.c:91:23
  10dfa2:    c0 ff f8 0f 1a 00 	r0 = 0x1a0ff8 <__stub_LZ4_decompress_safe_usingDict+0x90FFC : 1a0ff8 >			  ## boot_poweroff.c:92:21
  10dfa8:    80 ea 26 0e       	call 0x1c4c <read_32 : 10fbf8 >			  ## boot_poweroff.c:92:21
  10dfac:    c0 00             	call r0			  ## boot_poweroff.c:93:5
  10dfae:    54 04             	{pc, r4} = [sp++]			  ## boot_poweroff.c:94:1


lp_enter:
  10dfb0:    77 04             	[--sp] = {rets, r7-r4}			  ## boot_poweroff.c:118:0
  10dfb2:    c3 ff 04 00 1b 00 	r3 = 0x1b0004 <__stub_LZ4_decompress_safe_usingDict+0xA0008 : 1b0004 >			  ## boot_poweroff.c:118:0
  10dfb8:    34 60             	r4 = [r3+0x0] 			  ## boot_poweroff.c:120:31
  10dfba:    35 61             	r5 = [r3+0x4] 			  ## boot_poweroff.c:121:31
  10dfbc:    c7 ff 07 07 07 00 	r7 = 0x70707 <RAM_LIMIT_H+0x44706 : 70706 >			  ## boot_poweroff.c:124:20
  10dfc2:    f1 d9             	r1 &= r7  #			  ## boot_poweroff.c:124:20
  10dfc4:    36 60             		 r6 = [r3+0x0] 			  ## boot_poweroff.c:125:31
  10dfc6:    c7 ff f8 f8 f8 ff 	r7 = 0xfff8f8f8 <__stub_LZ4_decompress_safe_usingDict+0xFFE7F8FC : fff8f8f8 >			  ## boot_poweroff.c:125:36
  10dfcc:    f6 19             	r6 &= r7			  ## boot_poweroff.c:125:36
  10dfce:    61 19             	r1 |= r6			  ## boot_poweroff.c:125:49
  10dfd0:    b1 60             	[r3+0x0] = r1			  ## boot_poweroff.c:125:19
  10dfd2:    b2 61             	[r3+0x4] = r2			  ## boot_poweroff.c:126:19
  10dfd4:    41 24             	r1 = 0x4			  ## boot_poweroff.c:129:9
  10dfd6:    b0 e8 01 00       	if (r0 != 0x1) {			  ## boot_poweroff.c:129:9
  10dfda:    41 22             		r1 = 0x2
                               	}			  ## boot_poweroff.c:129:9
  10dfdc:    20 00             	csync			  ## boot_poweroff.c:128:5
  10dfde:    60 e0 f0 09       	r0 = 0x1E0000			  ## boot_poweroff.c:128:5
  10dfe2:    64 e8 00 01       	[r0+0x0] |= r1
  10dfe6:    20 00             	csync			  ## boot_poweroff.c:134:5
  10dfe8:    b4 60             	[r3+0x0] = r4			  ## boot_poweroff.c:136:19
  10dfea:    b5 61             	[r3+0x4] = r5			  ## boot_poweroff.c:137:19
  10dfec:    20 00             	csync			  ## boot_poweroff.c:138:5
  10dfee:    20 00             	csync			  ## boot_poweroff.c:139:5
  10dff0:    20 00             	csync			  ## boot_poweroff.c:140:5
  10dff2:    20 00             	csync			  ## boot_poweroff.c:141:5
  10dff4:    20 00             	csync			  ## boot_poweroff.c:142:5
  10dff6:    20 00             	csync			  ## boot_poweroff.c:143:5
  10dff8:    20 00             	csync			  ## boot_poweroff.c:144:5
  10dffa:    57 04             	{pc, r7-r4} = [sp++]			  ## boot_poweroff.c:145:1


exception_analyze:
  10dffc:    c1 ff ec bc 02 00 	r1 = 0x2bcec <exception_irq_hook : 2bcec >			  ## boot_init.c:41:0
  10e002:    11 60             	r1 = [r1+0x0] 			  ## boot_init.c:42:9
  10e004:    b1 e8 00 00       	if (r1 != 0x0) {			  ## boot_init.c:42:9
  10e008:    c1 00             		call r1
                               	}			  ## boot_init.c:43:9
  10e00a:    bf ea 01 93       	call -0xd9fe <chip_reset : 100610 >			  ## boot_init.c:47:5


HWI_Install:
  10e00e:    74 04             	[--sp] = {rets, r4}			  ## irq.c:15:0
  10e010:    c3 ff 00 bf 02 00 	r3 = 0x2bf00 <_IRQ_MEM_ADDR : 2bf00 >			  ## irq.c:19:5
  10e016:    d8 ec 3b 10       	[r3+r0<<2] = r1			  ## irq.c:19:20
  10e01a:    01 a2             	r1 = r0 << 0x2			  ## irq.c:17:41
  10e01c:    61 e1 1c 10       	r1 = r1 & 0x1C			  ## irq.c:17:41
  10e020:    43 2f             	r3 = 0xf			  ## irq.c:17:41
  10e022:    13 1a             	r3 <<= r1			  ## irq.c:24:35
  10e024:    80 a3             	r0 = r0 >> 0x3			  ## irq.c:16:36
  10e026:    c4 ff 00 e1 1b 00 	r4 = 0x1be100 <__stub_LZ4_decompress_safe_usingDict+0xAE104 : 1be100 >			  ## irq.c:28:27
  10e02c:    a4 e1 14 01       	r4 <= insert(r0, p:0x2, l:0x5)			  ## irq.c:28:27
  10e030:    bf ea 3c 96       	call -0xd388 <local_irq_disable : 100cac >			  ## irq.c:22:5
  10e034:    40 60             	r0 = [r4+0x0] 			  ## irq.c:28:27
  10e036:    90 e1 03 03       	r0 = r0 & ~r3			  ## irq.c:28:46
  10e03a:    22 a1             	r2 = r2 << 0x1			  ## irq.c:23:49
  10e03c:    62 e1 0e 20       	r2 = r2 & 0xE			  ## irq.c:23:49
  10e040:    32 20             	r2 |= 0x1			  ## irq.c:23:55
  10e042:    c8 e1 20 11       	r1 = r2 << r1			  ## irq.c:25:39
  10e046:    10 19             	r0 |= r1			  ## irq.c:28:58
  10e048:    c0 60             	[r4+0x0] = r0			  ## irq.c:28:24
  10e04a:    bf ea 36 96       	call -0xd394 <local_irq_enable : 100cba >			  ## irq.c:30:5
  10e04e:    54 04             	{pc, r4} = [sp++]			  ## irq.c:31:1


io_cfg:
  10e050:    02 fc 41 14       	if (r2 > 0xa) goto 0x82 <.GJTIE10_0_0_+0x74 : 10e0d6 >			  ## boot_init.c:82:0
  10e054:    02 01             	tbb [r2]			  ## boot_init.c:82:0


.GJTIS10_0_0_:
  10e056:    06     < 6 : 0x6 >
  10e057:    0d     < 13 : 0xD >
  10e058:    14     < 20 : 0x14 >
  10e059:    1b     < 27 : 0x1B >
  10e05a:    1e     < 30 : 0x1E >
  10e05b:    21     < 33 : 0x21 >
  10e05c:    24     < 36 : 0x24 >
  10e05d:    27     < 39 : 0x27 >
  10e05e:    2c     < 44 : 0x2C >
  10e05f:    33     < 51 : 0x33 >
  10e060:    38     < 56 : 0x38 >
  10e061:    00     < 0 : 0x0 >
  10e062:    66 e8 08 01       	[r0+0x8] |= 1 << r1			  ## boot_init.c:85:19
  10e066:    66 e8 13 01       	[r0+0x10] &= ~(1 << r1)			  ## boot_init.c:86:19
  10e06a:    66 e8 17 01       	[r0+0x14] &= ~(1 << r1)			  ## boot_init.c:87:19
  10e06e:    80 00             	rts			  ## boot_init.c:148:1
  10e070:    66 e8 10 01       	[r0+0x10] |= 1 << r1			  ## boot_init.c:90:19
  10e074:    66 e8 17 01       	[r0+0x14] &= ~(1 << r1)			  ## boot_init.c:91:19
  10e078:    66 e8 08 01       	[r0+0x8] |= 1 << r1			  ## boot_init.c:92:19
  10e07c:    80 00             	rts			  ## boot_init.c:148:1
  10e07e:    66 e8 14 01       	[r0+0x14] |= 1 << r1			  ## boot_init.c:95:19
  10e082:    66 e8 13 01       	[r0+0x10] &= ~(1 << r1)			  ## boot_init.c:96:19
  10e086:    66 e8 08 01       	[r0+0x8] |= 1 << r1			  ## boot_init.c:97:19
  10e08a:    80 00             	rts			  ## boot_init.c:148:1
  10e08c:    66 e8 03 01       	[r0+0x0] &= ~(1 << r1)			  ## boot_init.c:100:19
  10e090:    04 8b             	goto 0x16 <.GJTIE10_0_0_+0x46 : 10e0a8 >			  ## boot_init.c:100:19
  10e092:    66 e8 03 01       	[r0+0x0] &= ~(1 << r1)			  ## boot_init.c:106:19
  10e096:    04 8d             	goto 0x1a <.GJTIE10_0_0_+0x50 : 10e0b2 >			  ## boot_init.c:106:19
  10e098:    66 e8 03 01       	[r0+0x0] &= ~(1 << r1)			  ## boot_init.c:112:19
  10e09c:    04 91             	goto 0x22 <.GJTIE10_0_0_+0x5E : 10e0c0 >			  ## boot_init.c:112:19
  10e09e:    66 e8 03 01       	[r0+0x0] &= ~(1 << r1)			  ## boot_init.c:118:19
  10e0a2:    04 93             	goto 0x26 <.GJTIE10_0_0_+0x68 : 10e0ca >			  ## boot_init.c:118:19
  10e0a4:    66 e8 00 01       	[r0+0x0] |= 1 << r1			  ## boot_init.c:124:19
  10e0a8:    66 e8 1b 01       	[r0+0x18] &= ~(1 << r1)
  10e0ac:    04 84             	goto 0x8 <.GJTIE10_0_0_+0x54 : 10e0b6 >
  10e0ae:    66 e8 00 01       	[r0+0x0] |= 1 << r1			  ## boot_init.c:130:19
  10e0b2:    66 e8 18 01       	[r0+0x18] |= 1 << r1
  10e0b6:    66 e8 1f 01       	[r0+0x1c] &= ~(1 << r1)
  10e0ba:    04 8b             	goto 0x16 <.GJTIE10_0_0_+0x70 : 10e0d2 >
  10e0bc:    66 e8 00 01       	[r0+0x0] |= 1 << r1			  ## boot_init.c:136:19
  10e0c0:    66 e8 1b 01       	[r0+0x18] &= ~(1 << r1)
  10e0c4:    04 84             	goto 0x8 <.GJTIE10_0_0_+0x6C : 10e0ce >
  10e0c6:    66 e8 00 01       	[r0+0x0] |= 1 << r1			  ## boot_init.c:142:19
  10e0ca:    66 e8 18 01       	[r0+0x18] |= 1 << r1
  10e0ce:    66 e8 1c 01       	[r0+0x1c] |= 1 << r1
  10e0d2:    66 e8 0b 01       	[r0+0x8] &= ~(1 << r1)
  10e0d6:    80 00             	rts			  ## boot_init.c:148:1


spi_cs_pu:
  10e0d8:    74 04             	[--sp] = {rets, r4}			  ## spi0.c:217:0
  10e0da:    c2 ff 10 53 1e 00 	r2 = 0x1e5310 <__stub_LZ4_decompress_safe_usingDict+0xD5314 : 1e5310 >			  ## spi0.c:217:0
  10e0e0:    23 60             	r3 = [r2+0x0] 			  ## spi0.c:217:0
  10e0e2:    b0 e8 01 60       	if (r0 != 0x1) {			  ## spi0.c:217:0
  10e0e6:    40 21             		r0 = 0x1			  ## spi0.c:217:0
  10e0e8:    14 3e             		r4 = -0x2
                               	} else {			  ## spi0.c:217:0
  10e0ea:    40 28             		r0 = 0x8			  ## spi0.c:217:0
  10e0ec:    14 37             		r4 = -0x9
                               	}			  ## spi0.c:217:0
  10e0ee:    b4 19             	r4 &= r3			  ## spi0.c:217:0
  10e0f0:    30 19             	r0 |= r3			  ## spi0.c:217:0
  10e0f2:    31 e8 00 00       	if (r1 == 0x0) {			  ## spi0.c:217:0
  10e0f6:    40 16             		r0 = r4
                               	}			  ## spi0.c:217:0
  10e0f8:    a0 60             	[r2+0x0] = r0			  ## spi0.c:217:0
  10e0fa:    54 04             	{pc, r4} = [sp++]			  ## spi0.c:231:1


udelay:
  10e0fc:    c1 ff 00 04 1e 00 	r1 = 0x1e0400 <__stub_LZ4_decompress_safe_usingDict+0xD0404 : 1e0400 >			  ## timer.c:11:0
  10e102:    40 ea 80 1c       	[r1+0x0] = 0x4000			  ## timer.c:17:20
  10e106:    41 ea 00 10       	[r1+0x4] = 0x0			  ## timer.c:18:20
  10e10a:    e0 e1 14 00       	r0 = r0 * 0x14			  ## timer.c:19:40
  10e10e:    90 62             	[r1+0x8] = r0			  ## timer.c:19:20
  10e110:    40 ea 0d 10       	[r1+0x0] = 0xD			  ## timer.c:20:20
  10e114:    10 60             	r0 = [r1+0x0] 			  ## timer.c:21:24
  10e116:    50 e8 fd 79       	if ((r0 & 0x8000) == 0) goto -0x6 <udelay+0x18 : 10e114 >			  ## timer.c:21:5
  10e11a:    40 ea 80 1c       	[r1+0x0] = 0x4000			  ## timer.c:22:20
  10e11e:    80 00             	rts			  ## timer.c:24:1


mdelay:
  10e120:    10 04             	[--sp] = rets			  ## timer.c:27:0
  10e122:    02 16             	r2 = r0			  ## timer.c:27:0
  10e124:    04 84             	goto 0x8 <mdelay+0xE : 10e12e >			  ## timer.c:27:0
  10e126:    40 e0 e8 03       	r0 = 0x3e8			  ## timer.c:29:9
  10e12a:    71 88             	call -0x30 <udelay : 10e0fc >			  ## timer.c:29:9
  10e12c:    fa 3f             	r2 += -0x1			  ## timer.c:28:5
  10e12e:    f2 5b             	if (r2 != 0) goto -0xa <mdelay+0x6 : 10e126 >			  ## timer.c:28:5
  10e130:    00 04             	pc = [sp++]			  ## timer.c:31:1


flash_poweron:
  10e132:    76 04             	[--sp] = {rets, r6-r4}			  ## norflash.c:388:0
  10e134:    14 16             	r4 = r1			  ## norflash.c:388:0
  10e136:    05 16             	r5 = r0			  ## norflash.c:388:0
  10e138:    c6 ff 00 53 1e 00 	r6 = 0x1e5300 <__stub_LZ4_decompress_safe_usingDict+0xD5304 : 1e5300 >			  ## norflash.c:388:0
  10e13e:    55 e8 1c 00       	if ((r5 & 0x1) == 0) goto 0x38 <flash_poweron+0x48 : 10e17a >			  ## norflash.c:388:0
  10e142:    60 60             	r0 = [r6+0x0] 			  ## norflash.c:394:23
  10e144:    50 e8 37 22       	if ((r0 & 0x10) != 0) goto 0x6e <flash_poweron+0x84 : 10e1b6 >			  ## norflash.c:394:23
  10e148:    40 21             	r0 = 0x1			  ## norflash.c:397:9
  10e14a:    41 21             	r1 = 0x1			  ## norflash.c:397:9
  10e14c:    61 85             	call -0x76 <spi_cs_pu : 10e0d8 >			  ## norflash.c:397:9
  10e14e:    c5 ef 10 60       	[r6+0x14] &= 0xFFFFFFEF			  ## norflash.c:399:23
  10e152:    04 ef 10 60       	[r6+0x10] |= 0x10			  ## norflash.c:400:23
  10e156:    02 ef 10 60       	[r6+0x8] |= 0x10			  ## norflash.c:401:23
  10e15a:    c7 ef 10 60       	[r6+0x1c] &= 0xFFFFFFEF			  ## norflash.c:403:23
  10e15e:    c6 ef 10 60       	[r6+0x18] &= 0xFFFFFFEF			  ## norflash.c:404:23
  10e162:    00 ef 10 60       	[r6+0x0] |= 0x10			  ## norflash.c:405:23
  10e166:    c2 ef 10 60       	[r6+0x8] &= 0xFFFFFFEF			  ## norflash.c:406:23
  10e16a:    40 34             	r0 = 0x14			  ## norflash.c:408:9
  10e16c:    61 87             	call -0x72 <udelay : 10e0fc >			  ## norflash.c:408:9
  10e16e:    07 ef 10 60       	[r6+0x1c] |= 0x10			  ## norflash.c:410:23
  10e172:    06 ef 10 60       	[r6+0x18] |= 0x10			  ## norflash.c:411:23
  10e176:    40 16             	r0 = r4			  ## norflash.c:412:9
  10e178:    61 93             	call -0x5a <mdelay : 10e120 >			  ## norflash.c:412:9
  10e17a:    55 e8 1c 08       	if ((r5 & 0x2) == 0) goto 0x38 <flash_poweron+0x84 : 10e1b6 >
  10e17e:    60 60             	r0 = [r6+0x0] 			  ## norflash.c:417:23
  10e180:    50 e8 19 2a       	if ((r0 & 0x20) != 0) goto 0x32 <flash_poweron+0x84 : 10e1b6 >			  ## norflash.c:417:23
  10e184:    40 22             	r0 = 0x2			  ## norflash.c:420:9
  10e186:    41 21             	r1 = 0x1			  ## norflash.c:420:9
  10e188:    51 87             	call -0xb2 <spi_cs_pu : 10e0d8 >			  ## norflash.c:420:9
  10e18a:    c5 ef 20 60       	[r6+0x14] &= 0xFFFFFFDF			  ## norflash.c:422:23
  10e18e:    04 ef 20 60       	[r6+0x10] |= 0x20			  ## norflash.c:423:23
  10e192:    02 ef 20 60       	[r6+0x8] |= 0x20			  ## norflash.c:424:23
  10e196:    c7 ef 20 60       	[r6+0x1c] &= 0xFFFFFFDF			  ## norflash.c:426:23
  10e19a:    c6 ef 20 60       	[r6+0x18] &= 0xFFFFFFDF			  ## norflash.c:427:23
  10e19e:    00 ef 20 60       	[r6+0x0] |= 0x20			  ## norflash.c:428:23
  10e1a2:    c2 ef 20 60       	[r6+0x8] &= 0xFFFFFFDF			  ## norflash.c:429:23
  10e1a6:    40 34             	r0 = 0x14			  ## norflash.c:431:9
  10e1a8:    51 89             	call -0xae <udelay : 10e0fc >			  ## norflash.c:431:9
  10e1aa:    07 ef 20 60       	[r6+0x1c] |= 0x20			  ## norflash.c:433:23
  10e1ae:    06 ef 20 60       	[r6+0x18] |= 0x20			  ## norflash.c:434:23
  10e1b2:    40 16             	r0 = r4			  ## norflash.c:435:9
  10e1b4:    51 95             	call -0x96 <mdelay : 10e120 >			  ## norflash.c:435:9
  10e1b6:    56 04             	{pc, r6-r4} = [sp++]			  ## norflash.c:437:1


p33_softflag_boot:
  10e1b8:    77 04             	[--sp] = {rets, r7-r4}			  ## boot_init.c:196:0
  10e1ba:    64 e0 00 0b       	r0 = icfg			  ## boot_init.c:198:5
  10e1be:    30 29             	r0 |= 0x200			  ## boot_init.c:199:9
  10e1c0:    64 e0 80 0b       	icfg = r0			  ## boot_init.c:200:5
  10e1c4:    bf ea 6c 95       	call -0xd528 <os_code_begin : 100ca0 >			  ## boot_init.c:202:5
  10e1c8:    bf ea 70 95       	call -0xd520 <local_irq_disable : 100cac >			  ## boot_init.c:203:5
  10e1cc:    bf ea 75 95       	call -0xd516 <local_irq_enable : 100cba >			  ## boot_init.c:204:5
  10e1d0:    c0 ff 04 bc 02 00 	r0 = 0x2bc04 <boot_arg_list : 2bc04 >			  ## clock.c:264:27
  10e1d6:    45 23             	r5 = 0x3			  ## clock.c:258:28
  10e1d8:    8d 41             	b[r0+0x1] = r5			  ## clock.c:258:28
  10e1da:    c1 ff 00 2d 31 01 	r1 = 0x1312d00 <__stub_LZ4_decompress_safe_usingDict+0x1202D04 : 1312d00 >			  ## clock.c:262:28
  10e1e0:    81 61             	[r0+0x4] = r1			  ## clock.c:262:28
  10e1e2:    81 62             	[r0+0x8] = r1			  ## clock.c:264:27
  10e1e4:    c0 ff ec bc 02 00 	r0 = 0x2bcec <exception_irq_hook : 2bcec >			  ## boot_init.c:53:24
  10e1ea:    46 20             	r6 = 0x0			  ## boot_init.c:53:24
  10e1ec:    86 60             	[r0+0x0] = r6			  ## boot_init.c:53:24
  10e1ee:    c1 ff 04 00 10 00 	r1 = 0x100004 <exception_irq_handler : 100004 >			  ## boot_init.c:54:5
  10e1f4:    40 21             	r0 = 0x1			  ## boot_init.c:54:5
  10e1f6:    42 27             	r2 = 0x7			  ## boot_init.c:54:5
  10e1f8:    47 21             	r7 = 0x1			  ## boot_init.c:54:5
  10e1fa:    bf ea 08 ff       	call -0x1f0 <HWI_Install : 10e00e >			  ## boot_init.c:54:5
  10e1fe:    c0 ff 00 e2 1b 00 	r0 = 0x1be200 <__stub_LZ4_decompress_safe_usingDict+0xAE204 : 1be200 >			  ## boot_init.c:55:24
  10e204:    86 60             	[r0+0x0] = r6			  ## boot_init.c:55:24
  10e206:    c4 ff 05 18 1a 00 	r4 = 0x1a1805 <__stub_LZ4_decompress_safe_usingDict+0x91808 : 1a1804 >			  ## boot_init.c:55:24
  10e20c:    54 ee 4b 22       	r2 = b[r4+0x2b] (s)			  ## boot_init.c:212:9
  10e210:    c3 ff f8 bb 02 00 	r3 = 0x2bbf8 <g_boot_soft_flag : 2bbf8 >			  ## boot_init.c:212:9
  10e216:    c1 ff 00 bc 02 00 	r1 = 0x2bc00 <g_spi_boot_port : 2bc00 >			  ## boot_init.c:212:9
  10e21c:    00 e1 43 40       	r0 = r4 + 0x43			  ## boot_init.c:212:9
  10e220:    f2 fe 12 fe       	ifs (r2 <= -0x1) goto 0x24 <p33_softflag_boot+0x90 : 10e248 >			  ## boot_init.c:212:9
  10e224:    32 f1 f0 0f       	r2 = r0 + -0x10  #
  10e228:    b6 61             		 [r3+0x4] = r6			  ## boot_init.c:219:34
  10e22a:    2d 40             	r5 = b[r2+0x0] (u)			  ## boot_init.c:220:40
  10e22c:    bd 40             	b[r3+0x0] = r5			  ## boot_init.c:220:38
  10e22e:    2a 41             	r2 = b[r2+0x1] (u)			  ## boot_init.c:221:40
  10e230:    ba 41             	b[r3+0x1] = r2			  ## boot_init.c:221:38
  10e232:    0a 42             	r2 = b[r0+0x2] (u)			  ## boot_init.c:222:40
  10e234:    ba 42             	b[r3+0x2] = r2			  ## boot_init.c:222:38
  10e236:    0a 43             	r2 = b[r0+0x3] (u)			  ## boot_init.c:223:40
  10e238:    b2 f1 04 51       	r2 = uextra(r5, p:0x2, l:0x1)  #			  ## boot_init.c:71:9
  10e23c:    ba 43             		 b[r3+0x3] = r2			  ## boot_init.c:71:9
  10e23e:    c2 21             	r2 += 0x1			  ## boot_init.c:71:9
  10e240:    9a 40             	b[r1+0x0] = r2			  ## boot_init.c:66:21
  10e242:    55 e8 07 00       	if ((r5 & 0x1) == 0) goto 0xe <p33_softflag_boot+0x9C : 10e254 >			  ## boot_init.c:66:21
  10e246:    04 98             	goto 0x30 <p33_softflag_boot+0xC0 : 10e278 >			  ## boot_init.c:66:21
  10e248:    b7 61             	[r3+0x4] = r7			  ## boot_init.c:213:34
  10e24a:    be 40             	b[r3+0x0] = r6			  ## boot_init.c:214:38
  10e24c:    be 41             	b[r3+0x1] = r6			  ## boot_init.c:215:38
  10e24e:    be 42             	b[r3+0x2] = r6			  ## boot_init.c:216:38
  10e250:    be 43             	b[r3+0x3] = r6			  ## boot_init.c:216:38
  10e252:    9d 40             	b[r1+0x0] = r5			  ## boot_init.c:66:21
  10e254:    41 3c             	r1 = 0x1c			  ## wdt.c:5:18
  10e256:    02 e1 40 07       	r2 = r0 + 0x740			  ## wdt.c:5:18
  10e25a:    a9 40             	b[r2+0x0] = r1			  ## wdt.c:5:18
  10e25c:    41 20             	r1 = 0x0			  ## wdt.c:5:18
  10e25e:    a9 41             	b[r2+0x1] = r1			  ## wdt.c:6:18
  10e260:    31 61             	r1 = [r3+0x4] 			  ## wdt.c:6:18
  10e262:    01 4a             	if (r1 == 0) goto 0x14 <p33_softflag_boot+0xC0 : 10e278 >			  ## wdt.c:6:18
  10e264:    09 40             	r1 = b[r0+0x0] (u)			  ## boot_init.c:244:21
  10e266:    b9 20             	r1 &= 0xfffffffe			  ## boot_init.c:244:21
  10e268:    89 40             	b[r0+0x0] = r1			  ## boot_init.c:244:21
  10e26a:    49 32             	r1 = 0x32			  ## boot_init.c:245:21
  10e26c:    89 40             	b[r0+0x0] = r1			  ## boot_init.c:245:21
  10e26e:    09 40             	r1 = b[r0+0x0] (u)			  ## boot_init.c:247:21
  10e270:    31 20             	r1 |= 0x1			  ## boot_init.c:247:21
  10e272:    89 40             	b[r0+0x0] = r1			  ## boot_init.c:247:21
  10e274:    30 61             	r0 = [r3+0x4] 			  ## boot_init.c:251:26
  10e276:    a0 57             	if (r0 != 0) goto 0xae <p33_softflag_boot+0x16E : 10e326 >			  ## boot_init.c:251:26
  10e278:    38 42             	r0 = b[r3+0x2] (u)			  ## boot_init.c:152:56
  10e27a:    72 e1 f0 00       	r2 = r0 & 0xFFFFFF0F			  ## boot_init.c:152:25
  10e27e:    c0 ff 00 50 1e 00 	r0 = 0x1e5000 <__stub_LZ4_decompress_safe_usingDict+0xD5004 : 1e5000 >			  ## boot_init.c:152:5
  10e284:    41 27             	r1 = 0x7			  ## boot_init.c:152:5
  10e286:    bf ea e3 fe       	call -0x23a <io_cfg : 10e050 >			  ## boot_init.c:152:5
  10e28a:    38 42             	r0 = b[r3+0x2] (u)			  ## boot_init.c:153:56
  10e28c:    82 a4             	r2 = r0 >> 0x4			  ## boot_init.c:153:56
  10e28e:    c0 ff 00 51 1e 00 	r0 = 0x1e5100 <__stub_LZ4_decompress_safe_usingDict+0xD5104 : 1e5100 >			  ## boot_init.c:153:5
  10e294:    41 24             	r1 = 0x4			  ## boot_init.c:153:5
  10e296:    bf ea db fe       	call -0x24a <io_cfg : 10e050 >			  ## boot_init.c:153:5
  10e29a:    38 43             	r0 = b[r3+0x3] (u)			  ## boot_init.c:154:56
  10e29c:    72 e1 f0 00       	r2 = r0 & 0xFFFFFF0F			  ## boot_init.c:154:25
  10e2a0:    c0 ff 00 52 1e 00 	r0 = 0x1e5200 <__stub_LZ4_decompress_safe_usingDict+0xD5204 : 1e5200 >			  ## boot_init.c:154:5
  10e2a6:    41 23             	r1 = 0x3			  ## boot_init.c:154:5
  10e2a8:    bf ea d2 fe       	call -0x25c <io_cfg : 10e050 >			  ## boot_init.c:154:5
  10e2ac:    39 43             	r1 = b[r3+0x3] (u)			  ## boot_init.c:155:56
  10e2ae:    92 a4             	r2 = r1 >> 0x4			  ## boot_init.c:155:56
  10e2b0:    41 25             	r1 = 0x5			  ## boot_init.c:155:5
  10e2b2:    bf ea cd fe       	call -0x266 <io_cfg : 10e050 >			  ## boot_init.c:155:5
  10e2b6:    38 41             	r0 = b[r3+0x1] (u)			  ## boot_init.c:156:53
  10e2b8:    82 a5             	r2 = r0 >> 0x5			  ## boot_init.c:156:53
  10e2ba:    c0 ff 00 59 1e 00 	r0 = 0x1e5900 <__stub_LZ4_decompress_safe_usingDict+0xD5904 : 1e5900 >			  ## boot_init.c:156:5
  10e2c0:    41 20             	r1 = 0x0			  ## boot_init.c:156:5
  10e2c2:    bf ea c5 fe       	call -0x276 <io_cfg : 10e050 >			  ## boot_init.c:156:5
  10e2c6:    39 41             	r1 = b[r3+0x1] (u)			  ## boot_init.c:158:41
  10e2c8:    72 e1 fc 10       	r2 = r1 & 0xFFFFFF03			  ## boot_init.c:158:5
  10e2cc:    30 e1 00 0b       	r0 = r0 + -0x500			  ## boot_init.c:158:5
  10e2d0:    02 f8 06 04       	if (r2 == 0x2) goto 0xc <p33_softflag_boot+0x128 : 10e2e0 >			  ## boot_init.c:158:5
  10e2d4:    02 f8 09 02       	if (r2 == 0x1) goto 0x12 <p33_softflag_boot+0x132 : 10e2ea >
  10e2d8:    82 50             	if (r2 != 0) goto 0x20 <p33_softflag_boot+0x142 : 10e2fa >
  10e2da:    c0 ef 10 00       	[r0+0x0] &= 0xFFFFFFEF			  ## boot_init.c:160:9
  10e2de:    04 87             	goto 0xe <p33_softflag_boot+0x136 : 10e2ee >			  ## boot_init.c:160:9
  10e2e0:    c0 ef 10 00       	[r0+0x0] &= 0xFFFFFFEF			  ## boot_init.c:170:9
  10e2e4:    01 60             	r1 = [r0+0x0] 			  ## boot_init.c:171:9
  10e2e6:    31 26             	r1 |= 0x40			  ## boot_init.c:171:9
  10e2e8:    04 84             	goto 0x8 <p33_softflag_boot+0x13A : 10e2f2 >			  ## boot_init.c:171:9
  10e2ea:    00 ef 10 00       	[r0+0x0] |= 0x10			  ## boot_init.c:165:9
  10e2ee:    01 60             	r1 = [r0+0x0] 
  10e2f0:    b9 26             	r1 &= 0xffffffbf
  10e2f2:    81 60             	[r0+0x0] = r1
  10e2f4:    00 ef 04 00       	[r0+0x0] |= 0x4
  10e2f8:    39 41             	r1 = b[r3+0x1] (u)
  10e2fa:    b1 e1 08 11       	r1 = uextra(r1, p:0x2, l:0x2)			  ## boot_init.c:176:5
  10e2fe:    01 f8 06 04       	if (r1 == 0x2) goto 0xc <p33_softflag_boot+0x156 : 10e30e >			  ## boot_init.c:176:5
  10e302:    01 f8 09 02       	if (r1 == 0x1) goto 0x12 <p33_softflag_boot+0x160 : 10e318 >
  10e306:    81 4f             	if (r1 != 0) goto 0x1e <p33_softflag_boot+0x16E : 10e326 >
  10e308:    c0 ef 20 00       	[r0+0x0] &= 0xFFFFFFDF			  ## boot_init.c:178:9
  10e30c:    04 87             	goto 0xe <p33_softflag_boot+0x164 : 10e31c >			  ## boot_init.c:178:9
  10e30e:    c0 ef 20 00       	[r0+0x0] &= 0xFFFFFFDF			  ## boot_init.c:188:9
  10e312:    01 60             	r1 = [r0+0x0] 			  ## boot_init.c:189:9
  10e314:    31 27             	r1 |= 0x80			  ## boot_init.c:189:9
  10e316:    04 84             	goto 0x8 <p33_softflag_boot+0x168 : 10e320 >			  ## boot_init.c:189:9
  10e318:    00 ef 20 00       	[r0+0x0] |= 0x20			  ## boot_init.c:183:9
  10e31c:    01 60             	r1 = [r0+0x0] 
  10e31e:    b9 27             	r1 &= 0xffffff7f
  10e320:    81 60             	[r0+0x0] = r1
  10e322:    00 ef 08 00       	[r0+0x0] |= 0x8
  10e326:    48 40             	r0 = b[r4+0x0] (u)			  ## boot_init.c:256:17
  10e328:    70 e1 38 00       	r0 = r0 & 0xFFFFFFC7			  ## boot_init.c:256:17
  10e32c:    c8 40             	b[r4+0x0] = r0			  ## boot_init.c:256:17
  10e32e:    30 61             	r0 = [r3+0x4] 			  ## boot_init.c:258:27
  10e330:    80 45             	if (r0 != 0) goto 0xa <p33_softflag_boot+0x184 : 10e33c >			  ## boot_init.c:258:27
  10e332:    38 40             	r0 = b[r3+0x0] (u)			  ## boot_init.c:258:78
  10e334:    50 e8 02 12       	if ((r0 & 0x4) != 0) goto 0x4 <p33_softflag_boot+0x184 : 10e33c >			  ## boot_init.c:258:78
  10e338:    40 21             	r0 = 0x1			  ## boot_init.c:259:9
  10e33a:    04 81             	goto 0x2 <p33_softflag_boot+0x186 : 10e33e >			  ## boot_init.c:259:9
  10e33c:    40 22             	r0 = 0x2			  ## boot_init.c:261:9
  10e33e:    41 20             	r1 = 0x0
  10e340:    bf ea f7 fe       	call -0x212 <flash_poweron : 10e132 >
  10e344:    48 93             	r0 = r4 + 0x13
  10e346:    09 40             	r1 = b[r0+0x0] (u)			  ## boot_init.c:265:16
  10e348:    b9 21             	r1 &= 0xfffffffd			  ## boot_init.c:265:16
  10e34a:    89 40             	b[r0+0x0] = r1			  ## boot_init.c:265:16
  10e34c:    c0 ff 00 41 1e 00 	r0 = 0x1e4100 <__stub_LZ4_decompress_safe_usingDict+0xD4104 : 1e4100 >
  10e352:    42 ea 00 00       	[r0+0x8] = 0x0			  ## boot_flash.c:61:24
  10e356:    c1 ff ff ff 00 00 	r1 = 0xffff <os_code_size+0xDEC7 : fffe >			  ## boot_flash.c:62:24
  10e35c:    81 61             	[r0+0x4] = r1			  ## boot_flash.c:62:24
  10e35e:    40 ea 80 00       	[r0+0x0] = 0x80			  ## boot_flash.c:63:24
  10e362:    57 04             	{pc, r7-r4} = [sp++]			  ## boot_init.c:269:1


change_capture_mode:
  10e364:    c1 ff 00 05 1e 00 	r1 = 0x1e0500 <__stub_LZ4_decompress_safe_usingDict+0xD0504 : 1e0500 >			  ## uart_key.c:68:0
  10e36a:    40 ef 01 10       	[r1+0x0] ^= 0x1			  ## uart_key.c:69:18
  10e36e:    41 21             	r1 = 0x1			  ## uart_key.c:69:18
  10e370:    b0 e8 02 00       	if (r0 != 0x2) {			  ## uart_key.c:69:18
  10e374:    41 22             		r1 = 0x2
                               	}			  ## uart_key.c:71:14
  10e376:    c0 ff c0 93 02 00 	r0 = 0x293c0 <var_bss_begin : 293c0 >			  ## uart_key.c:71:14
  10e37c:    81 63             	[r0+0xc] = r1
  10e37e:    80 00             	rts			  ## uart_key.c:76:1


reset_status:
  10e380:    c0 ff c0 93 02 00 	r0 = 0x293c0 <var_bss_begin : 293c0 >			  ## uart_key.c:91:0
  10e386:    41 20             	r1 = 0x0			  ## uart_key.c:95:17
  10e388:    89 60             	h[r0+0x0] = r1			  ## uart_key.c:92:13
  10e38a:    42 20             	r2 = 0x0			  ## uart_key.c:93:14
  10e38c:    43 20             	r3 = 0x0			  ## uart_key.c:93:14
  10e38e:    50 ec 01 21       	d[r0+0x10] = r3_r2			  ## uart_key.c:93:14
  10e392:    81 66             	[r0+0x18] = r1			  ## uart_key.c:95:17
  10e394:    80 00             	rts			  ## uart_key.c:96:1


clk_get:
  10e396:    76 04             	[--sp] = {rets, r6-r4}			  ## clock.c:269:0
  10e398:    04 16             	r4 = r0			  ## clock.c:269:0
  10e39a:    c5 ff a0 81 10 00 	r5 = 0x1081a0 <WOLASynthesisFilter_Float_M256_m4_r1+0x1000 : 1081a0 >			  ## clock.c:269:0
  10e3a0:    51 16             	r1 = r5			  ## clock.c:270:9
  10e3a2:    bf ea a0 90       	call -0xdec0 <strcmp : 1004e6 >			  ## clock.c:270:9
  10e3a6:    c6 ff 04 bc 02 00 	r6 = 0x2bc04 <boot_arg_list : 2bc04 >			  ## clock.c:270:9
  10e3ac:    00 50             	if (r0 == 0) goto 0x20 <clk_get+0x38 : 10e3ce >			  ## clock.c:270:9
  10e3ae:    59 84             	r1 = r5 + 0x4			  ## clock.c:272:16
  10e3b0:    40 16             	r0 = r4			  ## clock.c:272:16
  10e3b2:    bf ea 98 90       	call -0xded0 <strcmp : 1004e6 >			  ## clock.c:272:16
  10e3b6:    00 4d             	if (r0 == 0) goto 0x1a <clk_get+0x3C : 10e3d2 >			  ## clock.c:272:16
  10e3b8:    59 8d             	r1 = r5 + 0xd			  ## clock.c:274:16
  10e3ba:    40 16             	r0 = r4			  ## clock.c:274:16
  10e3bc:    bf ea 93 90       	call -0xdeda <strcmp : 1004e6 >			  ## clock.c:274:16
  10e3c0:    b0 e8 00 10       	if (r0 != 0x0) {			  ## clock.c:274:16
  10e3c4:    60 62             		r0 = [r6+0x8] 
                               	} else {			  ## clock.c:280:26
  10e3c6:    c0 ff 00 36 6e 01 		r0 = 0x16e3600
                               	} <__stub_LZ4_decompress_safe_usingDict+0x15D3604 : 16e3600 >			  ## clock.c:274:16
  10e3cc:    56 04             	{pc, r6-r4} = [sp++]			  ## clock.c:274:16
  10e3ce:    68 88             	r0 = r6 + 0x8
  10e3d0:    04 81             	goto 0x2 <clk_get+0x3E : 10e3d4 >
  10e3d2:    68 84             	r0 = r6 + 0x4
  10e3d4:    00 60             	r0 = [r0+0x0] 
  10e3d6:    56 04             	{pc, r6-r4} = [sp++]			  ## clock.c:281:1


set_cap_timeout:
  10e3d8:    74 04             	[--sp] = {rets, r4}			  ## boot_mode.c:32:0
  10e3da:    c4 ff 00 06 1e 00 	r4 = 0x1e0600 <__stub_LZ4_decompress_safe_usingDict+0xD0604 : 1e0600 >			  ## boot_mode.c:32:0
  10e3e0:    40 ea 80 4c       	[r4+0x0] = 0x4000			  ## boot_mode.c:33:17
  10e3e4:    41 ea 00 40       	[r4+0x4] = 0x0			  ## boot_mode.c:34:17
  10e3e8:    c0 ff a0 81 10 00 	r0 = 0x1081a0 <WOLASynthesisFilter_Float_M256_m4_r1+0x1000 : 1081a0 >			  ## boot_mode.c:35:26
  10e3ee:    61 93             	call -0x5a <clk_get : 10e396 >			  ## boot_mode.c:35:26
  10e3f0:    60 e0 7a 1c       	r1 = 0xFA00			  ## boot_mode.c:35:46
  10e3f4:    f4 e1 00 01       	r0 = r0 / r1 (u)			  ## boot_mode.c:35:46
  10e3f8:    e0 e1 0a 00       	r0 = r0 * 0xA			  ## boot_mode.c:35:22
  10e3fc:    c0 62             	[r4+0x8] = r0			  ## boot_mode.c:35:17
  10e3fe:    00 ef 31 40       	[r4+0x0] |= 0x31			  ## boot_mode.c:36:17
  10e402:    54 04             	{pc, r4} = [sp++]			  ## boot_mode.c:37:1


capture_isr:
  10e404:    e9 04             	[--sp] = {psr, rets, reti}			  ## uart_key.c:106:0
  10e406:    d8 e8 ff 03       	[--sp] = {r9-r0}			  ## uart_key.c:106:0
  10e40a:    c3 ff 00 05 1e 00 	r3 = 0x1e0500 <__stub_LZ4_decompress_safe_usingDict+0xD0504 : 1e0500 >			  ## uart_key.c:106:0
  10e410:    00 ef 80 3c       	[r3+0x0] |= 0x4000			  ## uart_key.c:107:5
  10e414:    31 62             	r1 = [r3+0x8] 			  ## uart_key.c:110:15
  10e416:    c4 ff c0 93 02 00 	r4 = 0x293c0 <var_bss_begin : 293c0 >
  10e41c:    42 62             	r2 = [r4+0x8] 			  ## uart_key.c:113:21
  10e41e:    95 de             	r5 = r1 - r2  #			  ## uart_key.c:113:19
  10e420:    c1 62             		 [r4+0x8] = r1			  ## uart_key.c:114:13
  10e422:    40 63             	r0 = [r4+0xc] 			  ## uart_key.c:121:27
  10e424:    00 f8 28 04       	if (r0 == 0x2) goto 0x50 <capture_isr+0x74 : 10e478 >			  ## uart_key.c:121:9
  10e428:    80 f8 29 02       	if (r0 != 0x1) goto 0x52 <capture_isr+0x7A : 10e47e >
  10e42c:    40 23             	r0 = 0x3			  ## uart_key.c:122:9
  10e42e:    41 9a             	call -0xcc <change_capture_mode : 10e364 >			  ## uart_key.c:122:9
  10e430:    40 64             	r0 = [r4+0x10] 			  ## uart_key.c:123:13
  10e432:    10 45             	if (r0 == 0) goto 0x4a <capture_isr+0x7A : 10e47e >			  ## uart_key.c:123:13
  10e434:    09 1d             	r1 = r0 + r5			  ## uart_key.c:128:25
  10e436:    32 e1 30 18       	r2 = r1 + -0x7d0			  ## uart_key.c:131:39
  10e43a:    46 e0 31 75       	r6 = 0x7531			  ## uart_key.c:131:39
  10e43e:    06 e9 19 20       	if (r2 >= r6) goto 0x32 <capture_isr+0x70 : 10e474 >			  ## uart_key.c:131:39
  10e442:    42 65             	r2 = [r4+0x14] 			  ## uart_key.c:139:13
  10e444:    12 41             	if (r2 == 0) goto 0x42 <capture_isr+0x84 : 10e488 >
  10e446:    46 66             	r6 = [r4+0x18] 			  ## uart_key.c:144:21
  10e448:    16 18             	r6 += r1			  ## uart_key.c:144:21
  10e44a:    c6 66             	[r4+0x18] = r6			  ## uart_key.c:144:21
  10e44c:    4f 60             	r7 = h[r4+0x0] (u)			  ## uart_key.c:145:17
  10e44e:    c7 21             	r7 += 0x1			  ## uart_key.c:145:17
  10e450:    b4 f0 12 92       	r9 = r1 - r2  #			  ## uart_key.c:31:18
  10e454:    cf 60             		 h[r4+0x0] = r7			  ## uart_key.c:145:17
  10e456:    b4 e0 22 81       	r8 = r2 - r1			  ## uart_key.c:29:18
  10e45a:    92 ec 00 01       	if (r2 <= r1) {			  ## uart_key.c:29:18
  10e45e:    98 16             		r8 = r9
                               	}			  ## uart_key.c:28:9
  10e460:    f1 17             	r1 = r7.l (u)			  ## uart_key.c:148:58
  10e462:    f4 e1 60 11       	r1 = r6 / r1 (u)			  ## uart_key.c:148:56
  10e466:    e1 e1 0a 10       	r1 = r1 * 0xA			  ## uart_key.c:148:67
  10e46a:    5a 24             	r2 = 0x64			  ## uart_key.c:148:72
  10e46c:    f4 e1 10 12       	r1 = r1 / r2 (u)			  ## uart_key.c:148:72
  10e470:    81 ec 0c 80       	if (r8 <= r1) goto 0x18 <capture_isr+0x88 : 10e48c >			  ## uart_key.c:148:72
  10e474:    41 85             	call -0xf6 <reset_status : 10e380 >
  10e476:    04 84             	goto 0x8 <capture_isr+0x7C : 10e480 >
  10e478:    40 22             	r0 = 0x2			  ## uart_key.c:184:9
  10e47a:    bf ea 73 ff       	call -0x11a <change_capture_mode : 10e364 >			  ## uart_key.c:184:9
  10e47e:    c5 64             	[r4+0x10] = r5
  10e480:    d4 e8 ff 03       	{r9-r0} = [sp++]			  ## uart_key.c:189:1
  10e484:    a9 04             	{psr, rets, reti} = [sp++]			  ## uart_key.c:189:1
  10e486:    81 00             	rti			  ## uart_key.c:189:1
  10e488:    c1 65             	[r4+0x14] = r1			  ## uart_key.c:140:24
  10e48a:    f7 9a             	goto -0xc <capture_isr+0x7C : 10e480 >			  ## uart_key.c:140:24
  10e48c:    e1 e1 03 50       	r1 = r5 * 0x3			  ## uart_key.c:155:28
  10e490:    81 ec 09 00       	if (r0 <= r1) goto 0x12 <capture_isr+0xA2 : 10e4a6 >			  ## uart_key.c:155:28
  10e494:    e1 e1 05 50       	r1 = r5 * 0x5			  ## uart_key.c:156:28
  10e498:    01 e9 05 00       	if (r0 >= r1) goto 0xa <capture_isr+0xA2 : 10e4a6 >			  ## uart_key.c:156:28
  10e49c:    49 61             	r1 = h[r4+0x2] (u)			  ## uart_key.c:158:28
  10e49e:    40 21             	r0 = 0x1			  ## uart_key.c:158:28
  10e4a0:    a0 e1 fc 10       	r0 <= insert(r1, p:0x1, l:0x1f)			  ## uart_key.c:158:46
  10e4a4:    04 8a             	goto 0x14 <capture_isr+0xB6 : 10e4ba >			  ## uart_key.c:158:46
  10e4a6:    e1 e1 03 00       	r1 = r0 * 0x3			  ## uart_key.c:159:31
  10e4aa:    05 e9 e3 11       	if (r1 >= r5) goto -0x3a <capture_isr+0x70 : 10e474 >			  ## uart_key.c:159:31
  10e4ae:    e0 e1 05 00       	r0 = r0 * 0x5			  ## uart_key.c:160:30
  10e4b2:    85 ec df 01       	if (r0 <= r5) goto -0x42 <capture_isr+0x70 : 10e474 >			  ## uart_key.c:160:30
  10e4b6:    48 61             	r0 = h[r4+0x2] (u)			  ## uart_key.c:162:28
  10e4b8:    00 a1             	r0 = r0 << 0x1			  ## uart_key.c:162:40
  10e4ba:    c8 61             	h[r4+0x2] = r0
  10e4bc:    41 f0 af 68       	r1 = 0x68af  #			  ## uart_key.c:168:20
  10e4c0:    48 61             		 r0 = h[r4+0x2] (u)			  ## uart_key.c:168:23
  10e4c2:    81 e8 15 00       	if (r0 != r1) goto 0x2a <capture_isr+0xEC : 10e4f0 >			  ## uart_key.c:168:13
  10e4c6:    c0 ff 88 56 1e 00 	r0 = 0x1e5688 <__stub_LZ4_decompress_safe_usingDict+0xD568C : 1e5688 >			  ## uart_key.c:170:58
  10e4cc:    44 20             	r4 = 0x0			  ## uart_key.c:170:58
  10e4ce:    00 f1 78 02       	r0 = r0 + 0x278  #			  ## uart_key.c:170:58
  10e4d2:    84 60             		 [r0+0x0] = r4			  ## uart_key.c:170:58
  10e4d4:    00 ef 01 00       	[r0+0x0] |= 0x1			  ## uart_key.c:171:51
  10e4d8:    c2 ef 01 00       	[r0+0x8] &= 0xFFFFFFFE			  ## uart_key.c:172:51
  10e4dc:    40 22             	r0 = 0x2			  ## uart_key.c:173:13
  10e4de:    bf ea 1f fe       	call -0x3c2 <mdelay : 10e120 >			  ## uart_key.c:173:13
  10e4e2:    40 ea 80 3c       	[r3+0x0] = 0x4000			  ## uart_key.c:80:18
  10e4e6:    c0 ff 2c 57 1e 00 	r0 = 0x1e572c <__stub_LZ4_decompress_safe_usingDict+0xD5730 : 1e572c >			  ## uart_key.c:81:26
  10e4ec:    84 60             	[r0+0x0] = r4			  ## uart_key.c:81:26
  10e4ee:    e7 88             	goto -0x70 <capture_isr+0x7C : 10e480 >			  ## uart_key.c:81:26
  10e4f0:    40 67             	r0 = [r4+0x1c] 			  ## uart_key.c:178:19
  10e4f2:    09 81             	r1 = r0 + 0x1			  ## uart_key.c:178:19
  10e4f4:    c1 67             	[r4+0x1c] = r1			  ## uart_key.c:178:19
  10e4f6:    00 fc c2 c7       	if (r0 > 0x63) goto -0x7c <capture_isr+0x7A : 10e47e >			  ## uart_key.c:178:19
  10e4fa:    bf ea 6d ff       	call -0x126 <set_cap_timeout : 10e3d8 >			  ## uart_key.c:179:13
  10e4fe:    d7 9f             	goto -0x82 <capture_isr+0x7A : 10e47e >			  ## uart_key.c:179:13


set_timer3_captrue_dp:
  10e500:    c1 ff 00 54 1e 00 	r1 = 0x1e5400 <__stub_LZ4_decompress_safe_usingDict+0xD5404 : 1e5400 >			  ## clock.c:329:0
  10e506:    00 ef 80 1d       	[r1+0x0] |= 0x1000			  ## clock.c:330:5
  10e50a:    c2 ff 00 18 1e 00 	r2 = 0x1e1800 <__stub_LZ4_decompress_safe_usingDict+0xD1804 : 1e1800 >			  ## clock.c:331:5
  10e510:    00 ef 01 20       	[r2+0x0] |= 0x1			  ## clock.c:331:5
  10e514:    00 50             	if (r0 == 0) goto 0x20 <set_timer3_captrue_dp+0x36 : 10e536 >			  ## clock.c:331:5
  10e516:    00 ef 80 1f       	[r1+0x0] |= 0x100			  ## clock.c:333:9
  10e51a:    00 ef 00 1f       	[r1+0x0] |= 0x200			  ## clock.c:334:9
  10e51e:    00 ef 04 10       	[r1+0x0] |= 0x4			  ## clock.c:335:9
  10e522:    00 ef 08 10       	[r1+0x0] |= 0x8			  ## clock.c:336:9
  10e526:    c0 ef 40 10       	[r1+0x0] &= 0xFFFFFFBF			  ## clock.c:337:9
  10e52a:    c0 ef 80 10       	[r1+0x0] &= 0xFFFFFF7F			  ## clock.c:338:9
  10e52e:    00 ef 10 10       	[r1+0x0] |= 0x10			  ## clock.c:339:9
  10e532:    c0 ef 20 10       	[r1+0x0] &= 0xFFFFFFDF			  ## clock.c:340:9
  10e536:    48 21             	r0 = 0x21			  ## clock.c:343:26
  10e538:    d3 ec 1d 03       	[r1+0x33c] = r0			  ## clock.c:343:26
  10e53c:    20 e1 00 2f       	r0 = r2 + -0x1100			  ## clock.c:345:20
  10e540:    40 ea 80 0c       	[r0+0x0] = 0x4000			  ## clock.c:345:20
  10e544:    80 00             	rts			  ## clock.c:346:1


check_key_type:
  10e546:    41 e0 ef 16       	r1 = 0x16ef			  ## boot_mode.c:49:0
  10e54a:    10 e8 00 41       	if (r0 == r1) {			  ## boot_mode.c:50:9
  10e54e:    40 21             		r0 = 0x1			  ## boot_mode.c:50:9
  10e550:    80 00             		rts
                               	}			  ## boot_mode.c:58:1
  10e552:    41 e0 af 68       	r1 = 0x68af			  ## boot_mode.c:58:1
  10e556:    01 e8 07 00       	if (r0 == r1) goto 0xe <check_key_type+0x22 : 10e568 >			  ## boot_mode.c:58:1
  10e55a:    41 e0 7c 6b       	r1 = 0x6b7c
  10e55e:    90 e8 00 11       	if (r0 != r1) {
  10e562:    40 20             		r0 = 0x0
                               	} else {
  10e564:    40 25             		r0 = 0x5
                               	}
  10e566:    80 00             	rts			  ## boot_mode.c:58:1
  10e568:    40 24             	r0 = 0x4
  10e56a:    80 00             	rts			  ## boot_mode.c:58:1


set_timer3_captrue_dp_disable:
  10e56c:    c1 ff 00 54 1e 00 	r1 = 0x1e5400 <__stub_LZ4_decompress_safe_usingDict+0xD5404 : 1e5400 >			  ## clock.c:348:0
  10e572:    b0 e8 00 00       	if (r0 != 0x0) {			  ## clock.c:348:0
  10e576:    c0 ef 10 10       		[r1+0x0] &= 0xFFFFFFEF
                               	}			  ## clock.c:350:9
  10e57a:    c0 ff 00 07 1e 00 	r0 = 0x1e0700 <__stub_LZ4_decompress_safe_usingDict+0xD0704 : 1e0700 >			  ## clock.c:353:20
  10e580:    40 ea 80 0c       	[r0+0x0] = 0x4000			  ## clock.c:353:20
  10e584:    c6 ef 00 14       	[r1+0x18] &= 0x7FFFFFFF			  ## clock.c:354:20
  10e588:    80 00             	rts			  ## clock.c:355:1


wdt_clr:
  10e58a:    c0 ff 88 1f 1a 00 	r0 = 0x1a1f88 <__stub_LZ4_decompress_safe_usingDict+0x91F8C : 1a1f88 >			  ## wdt.c:10:0
  10e590:    09 40             	r1 = b[r0+0x0] (u)			  ## wdt.c:11:18
  10e592:    31 26             	r1 |= 0x40			  ## wdt.c:11:18
  10e594:    89 40             	b[r0+0x0] = r1			  ## wdt.c:11:18
  10e596:    80 00             	rts			  ## wdt.c:12:1


uart_set_dma_dir:
  10e598:    75 04             	[--sp] = {rets, r5, r4}			  ## uart_upgrade.c:23:0
  10e59a:    00 4b             	if (r0 == 0) goto 0x16 <uart_set_dma_dir+0x1A : 10e5b2 >			  ## uart_upgrade.c:23:0
  10e59c:    10 2f             	r0 = -0x11			  ## uart_upgrade.c:23:0
  10e59e:    c1 ff 04 20 1e 00 	r1 = 0x1e2004 <__stub_LZ4_decompress_safe_usingDict+0xD2008 : 1e2004 >			  ## uart_upgrade.c:23:0
  10e5a4:    42 20             	r2 = 0x0			  ## uart_upgrade.c:23:0
  10e5a6:    4b 23             	r3 = 0x23			  ## uart_upgrade.c:23:0
  10e5a8:    44 21             	r4 = 0x1			  ## uart_upgrade.c:23:0
  10e5aa:    c5 ff 08 59 1e 00 	r5 = 0x1e5908 <__stub_LZ4_decompress_safe_usingDict+0xD590C : 1e5908 >			  ## uart_upgrade.c:23:0
  10e5b0:    04 8a             	goto 0x14 <uart_set_dma_dir+0x2E : 10e5c6 >			  ## uart_upgrade.c:23:0
  10e5b2:    10 3e             	r0 = -0x2			  ## uart_upgrade.c:23:0
  10e5b4:    c1 ff 08 59 1e 00 	r1 = 0x1e5908 <__stub_LZ4_decompress_safe_usingDict+0xD590C : 1e5908 >			  ## uart_upgrade.c:23:0
  10e5ba:    62 37             	r2 = 0x97			  ## uart_upgrade.c:23:0
  10e5bc:    43 20             	r3 = 0x0			  ## uart_upgrade.c:23:0
  10e5be:    44 30             	r4 = 0x10			  ## uart_upgrade.c:23:0
  10e5c0:    c5 ff 04 20 1e 00 	r5 = 0x1e2004 <__stub_LZ4_decompress_safe_usingDict+0xD2008 : 1e2004 >			  ## uart_upgrade.c:23:0
  10e5c6:    64 e8 00 54       	[r5+0x0] |= r4			  ## uart_upgrade.c:23:0
  10e5ca:    c4 ff 88 56 1e 00 	r4 = 0x1e5688 <__stub_LZ4_decompress_safe_usingDict+0xD568C : 1e5688 >			  ## uart_upgrade.c:23:0
  10e5d0:    d1 ec 41 32       	[r4+0x120] = r3			  ## uart_upgrade.c:23:0
  10e5d4:    c2 60             	[r4+0x0] = r2			  ## uart_upgrade.c:23:0
  10e5d6:    64 e8 02 10       	[r1+0x0] &= r0			  ## uart_upgrade.c:23:0
  10e5da:    55 04             	{pc, r5, r4} = [sp++]			  ## uart_upgrade.c:41:1


uart_rx_data:
  10e5dc:    75 04             	[--sp] = {rets, r5, r4}			  ## uart_upgrade.c:61:0
  10e5de:    14 16             	r4 = r1			  ## uart_upgrade.c:61:0
  10e5e0:    05 16             	r5 = r0			  ## uart_upgrade.c:61:0
  10e5e2:    61 93             	call -0x5a <wdt_clr : 10e58a >			  ## uart_upgrade.c:62:5
  10e5e4:    40 21             	r0 = 0x1			  ## uart_upgrade.c:63:5
  10e5e6:    61 98             	call -0x50 <uart_set_dma_dir : 10e598 >			  ## uart_upgrade.c:63:5
  10e5e8:    60 e0 f1 09       	r0 = 0x1E2000			  ## uart_upgrade.c:63:5
  10e5ec:    51 dd             	r1 = r5 + r4  #			  ## uart_upgrade.c:66:33
  10e5ee:    85 67             		 [r0+0x1c] = r5			  ## uart_upgrade.c:65:18
  10e5f0:    c1 23             	r1 += 0x3			  ## uart_upgrade.c:66:40
  10e5f2:    71 e1 03 10       	r1 = r1 & 0xFFFFFFFC			  ## uart_upgrade.c:66:49
  10e5f6:    81 68             	[r0+0x20] = r1			  ## uart_upgrade.c:66:18
  10e5f8:    84 69             	[r0+0x24] = r4			  ## uart_upgrade.c:68:17
  10e5fa:    20 00             	csync			  ## uart_upgrade.c:69:5
  10e5fc:    01 60             	r1 = [r0+0x0] 			  ## uart_upgrade.c:73:19
  10e5fe:    51 e8 fd 71       	if ((r1 & 0x4000) == 0) goto -0x6 <uart_rx_data+0x20 : 10e5fc >			  ## uart_upgrade.c:73:13
  10e602:    00 ef a0 0d       	[r0+0x0] |= 0x1400			  ## uart_upgrade.c:77:16
  10e606:    55 04             	{pc, r5, r4} = [sp++]			  ## uart_upgrade.c:79:1


chip_crc16:
  10e608:    c2 ff 00 35 1e 00 	r2 = 0x1e3500 <__stub_LZ4_decompress_safe_usingDict+0xD3504 : 1e3500 >			  ## crc.c:3:0
  10e60e:    41 ea 00 20       	[r2+0x4] = 0x0			  ## crc.c:5:17
  10e612:    04 84             	goto 0x8 <chip_crc16+0x14 : 10e61c >			  ## crc.c:5:17
  10e614:    0b 40             	r3 = b[r0+0x0] (u)			  ## crc.c:8:24
  10e616:    a3 60             	[r2+0x0] = r3			  ## crc.c:8:22
  10e618:    c0 21             	r0 += 0x1			  ## crc.c:8:26
  10e61a:    f9 3f             	r1 += -0x1			  ## crc.c:7:15
  10e61c:    f1 5b             	if (r1 != 0) goto -0xa <chip_crc16+0xC : 10e614 >
  10e61e:    20 00             	csync			  ## crc.c:10:5
  10e620:    20 61             	r0 = [r2+0x4] 			  ## crc.c:12:20
  10e622:    80 17             	r0 = r0.l (u)			  ## crc.c:12:5
  10e624:    80 00             	rts			  ## crc.c:12:5


uart_cmd_verify:
  10e626:    74 04             	[--sp] = {rets, r4}			  ## uart_upgrade.c:114:0
  10e628:    c0 ff 40 93 02 00 	r0 = 0x29340 <ut_cmd : 29340 >			  ## uart_upgrade.c:114:0
  10e62e:    50 ee 00 11       	r1 = b[r0+0x10] (u)			  ## uart_upgrade.c:115:18
  10e632:    0c 4f             	r4 = b[r0+0xf] (u)			  ## uart_upgrade.c:115:18
  10e634:    a4 e1 20 14       	r4 <= insert(r1, p:0x8, l:0x8)			  ## uart_upgrade.c:115:18
  10e638:    34 e8 00 40       	if (r4 == 0x0) {			  ## uart_upgrade.c:115:18
  10e63c:    40 20             		r0 = 0x0			  ## uart_upgrade.c:120:1
  10e63e:    54 04             		{pc, r4} = [sp++]
                               	}			  ## uart_upgrade.c:120:1
  10e640:    c0 25             	r0 += 0x5			  ## uart_upgrade.c:116:30
  10e642:    41 2a             	r1 = 0xa			  ## uart_upgrade.c:116:30
  10e644:    71 81             	call -0x3e <chip_crc16 : 10e608 >			  ## uart_upgrade.c:116:30
  10e646:    01 16             	r1 = r0			  ## uart_upgrade.c:116:30
  10e648:    40 21             	r0 = 0x1			  ## uart_upgrade.c:116:27
  10e64a:    94 e8 00 01       	if (r4 != r1) {			  ## uart_upgrade.c:116:27
  10e64e:    40 20             		r0 = 0x0
                               	}			  ## uart_upgrade.c:116:27
  10e650:    54 04             	{pc, r4} = [sp++]			  ## uart_upgrade.c:115:9


CrcDecode:
  10e652:    77 04             	[--sp] = {rets, r7-r4}			  ## crc.c:28:0
  10e654:    c3 ff ff ff 00 00 	r3 = 0xffff <os_code_size+0xDEC7 : fffe >			  ## crc.c:36:17
  10e65a:    c2 ff 00 35 1e 00 	r2 = 0x1e3500 <__stub_LZ4_decompress_safe_usingDict+0xD3504 : 1e3500 >
  10e660:    a3 61             	[r2+0x4] = r3			  ## crc.c:36:17
  10e662:    7b 3f             	r3 = 0xff			  ## crc.c:38:18
  10e664:    a3 60             	[r2+0x0] = r3			  ## crc.c:38:18
  10e666:    a3 60             	[r2+0x0] = r3			  ## crc.c:39:18
  10e668:    44 20             	r4 = 0x0			  ## crc.c:39:18
  10e66a:    c3 ff db 81 10 00 	r3 = 0x1081db <nor_flash_boot_table+0x16 : 1081da >			  ## crc.c:39:18
  10e670:    04 90             	goto 0x20 <CrcDecode+0x40 : 10e692 >			  ## crc.c:39:18
  10e672:    46 17             	r6 = r4.b0 (u)			  ## crc.c:43:24
  10e674:    d8 ee 60 53       	r5 = b[r6+r3] (u)			  ## crc.c:43:24
  10e678:    a5 60             	[r2+0x0] = r5			  ## crc.c:43:22
  10e67a:    20 00             	csync			  ## crc.c:49:9
  10e67c:    0d 40             	r5 = b[r0+0x0] (u)			  ## crc.c:50:24
  10e67e:    27 61             	r7 = [r2+0x4] 			  ## crc.c:50:51
  10e680:    7d 19             	r5 ^= r7			  ## crc.c:50:37
  10e682:    8d 40             	b[r0+0x0] = r5			  ## crc.c:50:22
  10e684:    4d 81             	r5 = r4 + 0x1			  ## crc.c:45:14
  10e686:    44 20             	r4 = 0x0			  ## crc.c:45:13
  10e688:    b6 ec 0e 00       	if (r6 <= 0xe) {			  ## crc.c:45:13
  10e68c:    54 16             		r4 = r5
                               	}			  ## crc.c:45:13
  10e68e:    c0 21             	r0 += 0x1			  ## crc.c:52:27
  10e690:    f9 3f             	r1 += -0x1			  ## crc.c:42:15
  10e692:    95 17             	r5 = r1.l (u)			  ## crc.c:42:5
  10e694:    f5 4e             	if (r5 != 0) goto -0x24 <CrcDecode+0x20 : 10e672 >			  ## crc.c:42:5
  10e696:    57 04             	{pc, r7-r4} = [sp++]			  ## crc.c:56:1


uart_recv_loader:
  10e698:    e2 9e             	sp += -0x8			  ## uart_upgrade.c:143:0
  10e69a:    40 25             	r0 = 0x5			  ## uart_upgrade.c:146:5
  10e69c:    44 25             	r4 = 0x5			  ## uart_upgrade.c:146:5
  10e69e:    bf ea 3f fd       	call -0x582 <mdelay : 10e120 >			  ## uart_upgrade.c:146:5
  10e6a2:    c6 ff a0 81 10 00 	r6 = 0x1081a0 <WOLASynthesisFilter_Float_M256_m4_r1+0x1000 : 1081a0 >			  ## uart_upgrade.c:146:5
  10e6a8:    68 4c             	r0 = b[r6+0xc] (u)			  ## uart_upgrade.c:57:5
  10e6aa:    61 62             	r1 = [r6+0x8] 			  ## uart_upgrade.c:57:5
  10e6ac:    de e9 04 00       	b[sp+4] = r0			  ## uart_upgrade.c:57:5
  10e6b0:    81 20             	[sp] = r1			  ## uart_upgrade.c:57:5
  10e6b2:    40 20             	r0 = 0x0			  ## uart_upgrade.c:45:5
  10e6b4:    bf ea 70 ff       	call -0x120 <uart_set_dma_dir : 10e598 >			  ## uart_upgrade.c:45:5
  10e6b8:    88 80             	r0 = sp + 0			  ## uart_upgrade.c:45:5
  10e6ba:    60 e0 f1 59       	r5 = 0x1E2000			  ## uart_upgrade.c:45:5
  10e6be:    d0 65             	[r5+0x14] = r0			  ## uart_upgrade.c:47:17
  10e6c0:    d4 66             	[r5+0x18] = r4			  ## uart_upgrade.c:48:17
  10e6c2:    20 00             	csync			  ## uart_upgrade.c:49:5
  10e6c4:    50 60             	r0 = [r5+0x0] 			  ## uart_upgrade.c:50:19
  10e6c6:    50 e8 fd 79       	if ((r0 & 0x8000) == 0) goto -0x6 <uart_recv_loader+0x2C : 10e6c4 >			  ## uart_upgrade.c:50:5
  10e6ca:    00 ef 00 5d       	[r5+0x0] |= 0x2000			  ## uart_upgrade.c:52:16
  10e6ce:    40 22             	r0 = 0x2			  ## uart_upgrade.c:149:5
  10e6d0:    bf ea 26 fd       	call -0x5b4 <mdelay : 10e120 >			  ## uart_upgrade.c:149:5
  10e6d4:    c4 ff 40 93 02 00 	r4 = 0x29340 <ut_cmd : 29340 >			  ## uart_upgrade.c:149:5
  10e6da:    50 ee 42 01       	r0 = b[r4+0x12] (u)			  ## uart_upgrade.c:151:16
  10e6de:    30 e8 00 40       	if (r0 == 0x0) {			  ## uart_upgrade.c:151:16
  10e6e2:    40 2a             		r0 = 0xa			  ## uart_upgrade.c:151:16
  10e6e4:    52 ee 42 01       		b[r4+0x12] = r0
                               	}			  ## uart_upgrade.c:152:21
  10e6e8:    41 e0 10 27       	r1 = 0x2710			  ## uart_upgrade.c:155:43
  10e6ec:    f0 e1 00 71       	r7 = r0 * r1			  ## uart_upgrade.c:155:43
  10e6f0:    68 8d             	r0 = r6 + 0xd			  ## uart_upgrade.c:155:19
  10e6f2:    bf ea 50 fe       	call -0x360 <clk_get : 10e396 >			  ## uart_upgrade.c:155:19
  10e6f6:    f4 e1 00 07       	r0 = r0 / r7 (u)			  ## uart_upgrade.c:155:28
  10e6fa:    80 a2             	r0 = r0 >> 0x2			  ## uart_upgrade.c:155:53
  10e6fc:    f8 3f             	r0 += -0x1			  ## uart_upgrade.c:155:57
  10e6fe:    d0 62             	[r5+0x8] = r0			  ## uart_upgrade.c:155:16
  10e700:    bf ea 43 ff       	call -0x17a <wdt_clr : 10e58a >			  ## uart_upgrade.c:156:5
  10e704:    48 48             	r0 = b[r4+0x8] (u)			  ## uart_upgrade.c:157:25
  10e706:    4a 47             	r2 = b[r4+0x7] (u)			  ## uart_upgrade.c:157:25
  10e708:    a2 f1 20 04       	r2 <= insert(r0, p:0x8, l:0x8)  #			  ## uart_upgrade.c:157:25
  10e70c:    48 45             		 r0 = b[r4+0x5] (u)			  ## uart_upgrade.c:157:25
  10e70e:    50 ee 46 80       	r8 = b[r4+0x6] (u)			  ## uart_upgrade.c:157:25
  10e712:    a0 f1 20 84       	r0 <= insert(r8, p:0x8, l:0x8)  #			  ## uart_upgrade.c:157:25
  10e716:    4e 4c             		 r6 = b[r4+0xc] (u)			  ## uart_upgrade.c:157:38
  10e718:    a0 f1 40 28       	r0 <= insert(r2, p:0x10, l:0x10)  #			  ## uart_upgrade.c:157:25
  10e71c:    4f 4b             		 r7 = b[r4+0xb] (u)			  ## uart_upgrade.c:157:38
  10e71e:    a7 f1 20 64       	r7 <= insert(r6, p:0x8, l:0x8)  #			  ## uart_upgrade.c:157:38
  10e722:    4b 4a             		 r3 = b[r4+0xa] (u)			  ## uart_upgrade.c:157:38
  10e724:    49 49             	r1 = b[r4+0x9] (u)			  ## uart_upgrade.c:157:38
  10e726:    a1 e1 20 34       	r1 <= insert(r3, p:0x8, l:0x8)			  ## uart_upgrade.c:157:38
  10e72a:    a1 e1 40 78       	r1 <= insert(r7, p:0x10, l:0x10)			  ## uart_upgrade.c:157:38
  10e72e:    bf ea 55 ff       	call -0x156 <uart_rx_data : 10e5dc >			  ## uart_upgrade.c:157:5
  10e732:    40 ea 00 50       	[r5+0x0] = 0x0			  ## uart_upgrade.c:159:16
  10e736:    49 48             	r1 = b[r4+0x8] (u)			  ## uart_upgrade.c:161:57
  10e738:    4a 47             	r2 = b[r4+0x7] (u)			  ## uart_upgrade.c:161:57
  10e73a:    a2 f1 20 14       	r2 <= insert(r1, p:0x8, l:0x8)  #			  ## uart_upgrade.c:161:57
  10e73e:    4b 46             		 r3 = b[r4+0x6] (u)			  ## uart_upgrade.c:161:57
  10e740:    48 45             	r0 = b[r4+0x5] (u)			  ## uart_upgrade.c:161:57
  10e742:    a0 f1 20 34       	r0 <= insert(r3, p:0x8, l:0x8)  #			  ## uart_upgrade.c:161:57
  10e746:    4b 4b             		 r3 = b[r4+0xb] (u)			  ## uart_upgrade.c:161:70
  10e748:    a0 f1 40 28       	r0 <= insert(r2, p:0x10, l:0x10)  #			  ## uart_upgrade.c:161:57
  10e74c:    4a 4c             		 r2 = b[r4+0xc] (u)			  ## uart_upgrade.c:161:70
  10e74e:    a3 f1 20 24       	r3 <= insert(r2, p:0x8, l:0x8)  #			  ## uart_upgrade.c:161:70
  10e752:    4d 4a             		 r5 = b[r4+0xa] (u)			  ## uart_upgrade.c:161:70
  10e754:    49 49             	r1 = b[r4+0x9] (u)			  ## uart_upgrade.c:161:70
  10e756:    a1 f1 20 54       	r1 <= insert(r5, p:0x8, l:0x8)  #			  ## uart_upgrade.c:161:70
  10e75a:    4e 4e             		 r6 = b[r4+0xe] (u)			  ## uart_upgrade.c:161:16
  10e75c:    a1 f1 40 38       	r1 <= insert(r3, p:0x10, l:0x10)  #			  ## uart_upgrade.c:161:70
  10e760:    4f 4d             		 r7 = b[r4+0xd] (u)			  ## uart_upgrade.c:161:16
  10e762:    bf ea 51 ff       	call -0x15e <chip_crc16 : 10e608 >			  ## uart_upgrade.c:161:31
  10e766:    a7 e1 20 64       	r7 <= insert(r6, p:0x8, l:0x8)			  ## uart_upgrade.c:161:16
  10e76a:    80 e8 20 70       	if (r7 != r0) goto 0x40 <uart_recv_loader+0x116 : 10e7ae >			  ## uart_upgrade.c:161:16
  10e76e:    50 ee 41 01       	r0 = b[r4+0x11] (u)			  ## uart_upgrade.c:173:16
  10e772:    50 e8 10 08       	if ((r0 & 0x2) == 0) goto 0x20 <uart_recv_loader+0xFE : 10e796 >			  ## uart_upgrade.c:173:16
  10e776:    4a 48             	r2 = b[r4+0x8] (u)			  ## uart_upgrade.c:174:34
  10e778:    4b 47             	r3 = b[r4+0x7] (u)			  ## uart_upgrade.c:174:34
  10e77a:    a3 f1 20 24       	r3 <= insert(r2, p:0x8, l:0x8)  #			  ## uart_upgrade.c:174:34
  10e77e:    4d 46             		 r5 = b[r4+0x6] (u)			  ## uart_upgrade.c:174:34
  10e780:    48 45             	r0 = b[r4+0x5] (u)			  ## uart_upgrade.c:174:34
  10e782:    a0 f1 20 54       	r0 <= insert(r5, p:0x8, l:0x8)  #			  ## uart_upgrade.c:174:34
  10e786:    4e 4a             		 r6 = b[r4+0xa] (u)			  ## uart_upgrade.c:174:9
  10e788:    a0 f1 40 38       	r0 <= insert(r3, p:0x10, l:0x10)  #			  ## uart_upgrade.c:174:34
  10e78c:    49 49             		 r1 = b[r4+0x9] (u)			  ## uart_upgrade.c:174:9
  10e78e:    a1 e1 20 64       	r1 <= insert(r6, p:0x8, l:0x8)			  ## uart_upgrade.c:174:9
  10e792:    bf ea 5e ff       	call -0x144 <CrcDecode : 10e652 >			  ## uart_upgrade.c:174:9
  10e796:    48 48             	r0 = b[r4+0x8] (u)			  ## uart_upgrade.c:177:30
  10e798:    49 47             	r1 = b[r4+0x7] (u)			  ## uart_upgrade.c:177:30
  10e79a:    a1 f1 20 04       	r1 <= insert(r0, p:0x8, l:0x8)  #			  ## uart_upgrade.c:177:30
  10e79e:    4a 46             		 r2 = b[r4+0x6] (u)			  ## uart_upgrade.c:177:30
  10e7a0:    40 d6             	r0 = r4  #			  ## uart_upgrade.c:177:5
  10e7a2:    4b 45             		 r3 = b[r4+0x5] (u)			  ## uart_upgrade.c:177:30
  10e7a4:    a3 e1 20 24       	r3 <= insert(r2, p:0x8, l:0x8)			  ## uart_upgrade.c:177:30
  10e7a8:    a3 e1 40 18       	r3 <= insert(r1, p:0x10, l:0x10)			  ## uart_upgrade.c:177:30
  10e7ac:    c3 00             	call r3			  ## uart_upgrade.c:177:5
  10e7ae:    bf ea 2f 8f       	call -0xe1a2 <chip_reset : 100610 >			  ## uart_upgrade.c:180:5


uart_upgrade_init:
  10e7b2:    76 04             	[--sp] = {rets, r6-r4}			  ## uart_upgrade.c:207:0
  10e7b4:    c1 ff 08 59 1e 00 	r1 = 0x1e5908 <__stub_LZ4_decompress_safe_usingDict+0xD590C : 1e5908 >			  ## uart_upgrade.c:207:0
  10e7ba:    05 ef 01 10       	[r1+0x14] |= 0x1			  ## uart_upgrade.c:210:43
  10e7be:    02 ef 01 10       	[r1+0x8] |= 0x1			  ## uart_upgrade.c:211:43
  10e7c2:    c3 ef 01 10       	[r1+0xc] &= 0xFFFFFFFE			  ## uart_upgrade.c:212:43
  10e7c6:    00 ef 01 10       	[r1+0x0] |= 0x1			  ## uart_upgrade.c:213:43
  10e7ca:    31 e1 a0 1e       	r1 = r1 + -0x160			  ## uart_upgrade.c:214:26
  10e7ce:    40 ea 23 10       	[r1+0x0] = 0x23			  ## uart_upgrade.c:214:26
  10e7d2:    c1 ff 10 00 1e 00 	r1 = 0x1e0010 <__stub_LZ4_decompress_safe_usingDict+0xD0014 : 1e0010 >			  ## uart_upgrade.c:214:26
  10e7d8:    c0 ef 40 1e       	[r1+0x0] &= 0xFFFFF3FF			  ## uart_upgrade.c:217:24
  10e7dc:    00 ef 80 1e       	[r1+0x0] |= 0x400			  ## uart_upgrade.c:218:24
  10e7e0:    60 e0 f1 69       	r6 = 0x1E2000			  ## uart_upgrade.c:218:24
  10e7e4:    40 ea 50 6d       	[r6+0x0] = 0x3400			  ## uart_upgrade.c:220:16
  10e7e8:    05 16             	r5 = r0			  ## uart_upgrade.c:220:16
  10e7ea:    c4 ff ad 81 10 00 	r4 = 0x1081ad <ack_cmd+0x4 : 1081ac >
  10e7f0:    40 16             	r0 = r4			  ## uart_upgrade.c:222:19
  10e7f2:    bf ea d0 fd       	call -0x460 <clk_get : 10e396 >			  ## uart_upgrade.c:222:19
  10e7f6:    60 e0 16 1c       	r1 = 0x9600			  ## uart_upgrade.c:222:36
  10e7fa:    f4 e1 00 01       	r0 = r0 / r1 (u)			  ## uart_upgrade.c:222:36
  10e7fe:    f8 3f             	r0 += -0x1			  ## uart_upgrade.c:222:40
  10e800:    e0 62             	[r6+0x8] = r0			  ## uart_upgrade.c:222:16
  10e802:    40 ea 43 60       	[r6+0x0] = 0x43			  ## uart_upgrade.c:224:16
  10e806:    00 ef 50 6d       	[r6+0x0] |= 0x3400			  ## uart_upgrade.c:225:16
  10e80a:    15 41             	if (r5 == 0) goto 0x42 <uart_upgrade_init+0x9C : 10e84e >			  ## uart_upgrade.c:225:16
  10e80c:    c1 ff 46 fa 10 00 	r1 = 0x10fa46 <uart_isr : 10fa46 >			  ## uart_upgrade.c:234:9
  10e812:    40 32             	r0 = 0x12			  ## uart_upgrade.c:234:9
  10e814:    42 23             	r2 = 0x3			  ## uart_upgrade.c:234:9
  10e816:    bf ea fa fb       	call -0x80c <HWI_Install : 10e00e >			  ## uart_upgrade.c:234:9
  10e81a:    40 16             	r0 = r4			  ## uart_upgrade.c:236:28
  10e81c:    bf ea bb fd       	call -0x48a <clk_get : 10e396 >			  ## uart_upgrade.c:236:28
  10e820:    41 e0 e8 03       	r1 = 0x3e8			  ## uart_upgrade.c:236:37
  10e824:    f4 e1 00 01       	r0 = r0 / r1 (u)			  ## uart_upgrade.c:236:37
  10e828:    e0 e1 05 00       	r0 = r0 * 0x5			  ## uart_upgrade.c:236:25
  10e82c:    e0 64             	[r6+0x10] = r0			  ## uart_upgrade.c:236:21
  10e82e:    40 21             	r0 = 0x1			  ## uart_upgrade.c:238:9
  10e830:    bf ea b2 fe       	call -0x29c <uart_set_dma_dir : 10e598 >			  ## uart_upgrade.c:238:9
  10e834:    00 ef 20 60       	[r6+0x0] |= 0x20			  ## uart_upgrade.c:240:20
  10e838:    c0 ff 80 93 02 00 	r0 = 0x29380 <uart_dma_buffer : 29380 >			  ## uart_upgrade.c:110:18
  10e83e:    e0 67             	[r6+0x1c] = r0			  ## uart_upgrade.c:109:18
  10e840:    d0 23             	r0 += 0x43			  ## uart_upgrade.c:110:18
  10e842:    70 e1 03 00       	r0 = r0 & 0xFFFFFFFC			  ## uart_upgrade.c:110:18
  10e846:    e0 68             	[r6+0x20] = r0			  ## uart_upgrade.c:110:18
  10e848:    49 ea 40 60       	[r6+0x24] = 0x40			  ## uart_upgrade.c:111:17
  10e84c:    56 04             	{pc, r6-r4} = [sp++]			  ## uart_upgrade.c:265:1
  10e84e:    c0 ff 40 93 02 00 	r0 = 0x29340 <ut_cmd : 29340 >			  ## uart_upgrade.c:251:5
  10e854:    41 35             	r1 = 0x15			  ## uart_upgrade.c:251:5
  10e856:    bf ea c1 fe       	call -0x27e <uart_rx_data : 10e5dc >			  ## uart_upgrade.c:251:5
  10e85a:    bf ea e4 fe       	call -0x238 <uart_cmd_verify : 10e626 >			  ## uart_upgrade.c:253:9
  10e85e:    80 42             	if (r0 != 0) goto 0x4 <uart_upgrade_init+0xB2 : 10e864 >			  ## uart_upgrade.c:253:9
  10e860:    bf ea d6 8e       	call -0xe254 <chip_reset : 100610 >			  ## uart_upgrade.c:264:5
  10e864:    bf ea 18 ff       	call -0x1d0 <uart_recv_loader : 10e698 >			  ## uart_upgrade.c:262:5


check_usb_sof:
  10e868:    7d 04             	[--sp] = {rets, r13-r4}			  ## clock.c:358:0
  10e86a:    c6 ff c0 93 02 00 	r6 = 0x293c0 <var_bss_begin : 293c0 >			  ## clock.c:358:0
  10e870:    47 20             	r7 = 0x0			  ## clock.c:358:0
  10e872:    c0 14             	r8 = 0			  ## clock.c:358:0
  10e874:    c1 14             	r9 = 0			  ## clock.c:358:0
  10e876:    ca ff 36 f4 10 00 	r10 = 0x10f436 <tmr3_isr : 10f436 >			  ## clock.c:358:0
  10e87c:    c4 ff 00 07 1e 00 	r4 = 0x1e0700 <__stub_LZ4_decompress_safe_usingDict+0xD0704 : 1e0700 >			  ## clock.c:358:0
  10e882:    cb ff a0 81 10 00 	r11 = 0x1081a0 <WOLASynthesisFilter_Float_M256_m4_r1+0x1000 : 1081a0 >			  ## clock.c:358:0
  10e888:    35 e1 00 4f       	r5 = r4 + -0x100			  ## clock.c:358:0
  10e88c:    4c e0 01 40       	r12 = 0x4001			  ## clock.c:358:0
  10e890:    0d 16             	r13 = r0			  ## clock.c:358:0
  10e892:    bf ea 7a fe       	call -0x30c <wdt_clr : 10e58a >			  ## clock.c:362:9
  10e896:    e7 68             	[r6+0x20] = r7			  ## clock.c:367:25
  10e898:    a1 d6             	r1 = r10  #			  ## clock.c:379:9
  10e89a:    e7 6c             		 [r6+0x30] = r7			  ## clock.c:368:22
  10e89c:    50 ec 65 82       	d[r6+0x24] = r9_r8			  ## clock.c:369:18
  10e8a0:    e7 6b             	[r6+0x2c] = r7			  ## clock.c:371:19
  10e8a2:    40 27             	r0 = 0x7			  ## clock.c:379:9
  10e8a4:    42 20             	r2 = 0x0			  ## clock.c:379:9
  10e8a6:    bf ea b2 fb       	call -0x89c <HWI_Install : 10e00e >			  ## clock.c:379:9
  10e8aa:    40 21             	r0 = 0x1			  ## clock.c:380:9
  10e8ac:    bf ea 28 fe       	call -0x3b0 <set_timer3_captrue_dp : 10e500 >			  ## clock.c:380:9
  10e8b0:    c7 61             	[r4+0x4] = r7			  ## clock.c:383:24
  10e8b2:    c7 62             	[r4+0x8] = r7			  ## clock.c:384:24
  10e8b4:    40 ea 1a 40       	[r4+0x0] = 0x1A			  ## clock.c:385:24
  10e8b8:    b0 16             	r0 = r11			  ## clock.c:386:26
  10e8ba:    bf ea 6c fd       	call -0x528 <clk_get : 10e396 >			  ## clock.c:386:26
  10e8be:    41 e0 e8 03       	r1 = 0x3e8			  ## clock.c:386:26
  10e8c2:    f4 e1 00 01       	r0 = r0 / r1 (u)			  ## clock.c:386:41
  10e8c6:    d0 62             	[r5+0x8] = r0			  ## clock.c:386:24
  10e8c8:    d7 61             	[r5+0x4] = r7			  ## clock.c:387:24
  10e8ca:    d0 ec 51 c0       	[r5+0x0] = r12			  ## clock.c:388:24
  10e8ce:    90 17             	r0 = r1.l (u)			  ## clock.c:391:9
  10e8d0:    00 4a             	if (r0 == 0) goto 0x14 <check_usb_sof+0x7E : 10e8e6 >			  ## clock.c:391:9
  10e8d2:    00 ef 80 5c       	[r5+0x0] |= 0x4000			  ## clock.c:392:28
  10e8d6:    f9 3f             	r1 += -0x1			  ## clock.c:391:23
  10e8d8:    50 60             	r0 = [r5+0x0] 			  ## clock.c:395:32
  10e8da:    88 17             	r0 = r0.l (s)			  ## clock.c:395:47
  10e8dc:    80 fd f7 01       	ifs (r0 < 0x0) goto -0x12 <check_usb_sof+0x66 : 10e8ce >			  ## clock.c:395:47
  10e8e0:    60 6c             	r0 = [r6+0x30] 			  ## clock.c:396:21
  10e8e2:    70 5a             	if (r0 == 0) goto -0xc <check_usb_sof+0x70 : 10e8d8 >			  ## clock.c:396:21
  10e8e4:    04 8d             	goto 0x1a <check_usb_sof+0x98 : 10e900 >			  ## clock.c:396:21
  10e8e6:    40 21             	r0 = 0x1			  ## clock.c:405:9
  10e8e8:    bf ea 40 fe       	call -0x380 <set_timer3_captrue_dp_disable : 10e56c >			  ## clock.c:405:9
  10e8ec:    70 28             	r0 = 0xc8			  ## clock.c:407:9
  10e8ee:    bf ea 17 fc       	call -0x7d2 <mdelay : 10e120 >			  ## clock.c:407:9
  10e8f2:    30 e1 ff df       	r0 = r13 + -0x1			  ## clock.c:417:19
  10e8f6:    61 ff ff d0 ca ff 	if ((r13 & 0xFF) != 0) goto -0x6c <check_usb_sof+0x28 : 10e890 >			  ## clock.c:417:19
  10e8fc:    42 20             	r2 = 0x0
  10e8fe:    04 83             	goto 0x6 <check_usb_sof+0x9E : 10e906 >
  10e900:    40 ea 80 5c       	[r5+0x0] = 0x4000			  ## clock.c:397:36
  10e904:    42 21             	r2 = 0x1			  ## clock.c:397:36
  10e906:    40 21             	r0 = 0x1			  ## clock.c:428:5
  10e908:    bf ea 30 fe       	call -0x3a0 <set_timer3_captrue_dp_disable : 10e56c >			  ## clock.c:428:5
  10e90c:    20 16             	r0 = r2			  ## clock.c:430:1
  10e90e:    5d 04             	{pc, r13-r4} = [sp++]			  ## clock.c:430:1


spi_get_port:
  10e910:    c0 ff 04 bc 02 00 	r0 = 0x2bc04 <boot_arg_list : 2bc04 >			  ## spi0.c:12:0
  10e916:    08 42             	r0 = b[r0+0x2] (u)			  ## spi0.c:14:12
  10e918:    80 00             	rts			  ## spi0.c:14:5


SPI0_cs:
  10e91a:    75 04             	[--sp] = {rets, r5, r4}			  ## spi0.c:195:0
  10e91c:    01 16             	r1 = r0			  ## spi0.c:195:0
  10e91e:    71 98             	call -0x10 <spi_get_port : 10e910 >			  ## spi0.c:196:16
  10e920:    c2 ff 00 53 1e 00 	r2 = 0x1e5300 <__stub_LZ4_decompress_safe_usingDict+0xD5304 : 1e5300 >			  ## spi0.c:196:16
  10e926:    23 60             	r3 = [r2+0x0] 			  ## spi0.c:196:16
  10e928:    b0 e8 00 60       	if (r0 != 0x0) {
  10e92c:    44 21             		r4 = 0x1
  10e92e:    10 3e             		r0 = -0x2
                               	} else {
  10e930:    44 28             		r4 = 0x8
  10e932:    10 37             		r0 = -0x9
                               	}
  10e934:    90 e1 02 53       	r5 = r0 & r3
  10e938:    43 19             	r3 |= r4
  10e93a:    31 e8 00 00       	if (r1 == 0x0) {
  10e93e:    53 16             		r3 = r5
                               	}
  10e940:    a3 60             	[r2+0x0] = r3
  10e942:    64 e8 0a 20       	[r2+0x8] &= r0
  10e946:    55 04             	{pc, r5, r4} = [sp++]			  ## spi0.c:213:1


spi0_wait_ok:
  10e948:    c0 ff 00 1c 1e 00 	r0 = 0x1e1c00 <__stub_LZ4_decompress_safe_usingDict+0xD1C04 : 1e1c00 >			  ## spi0.c:256:0
  10e94e:    01 60             	r1 = [r0+0x0] 			  ## spi0.c:257:23
  10e950:    51 e8 fd 79       	if ((r1 & 0x8000) == 0) goto -0x6 <spi0_wait_ok+0x6 : 10e94e >			  ## spi0.c:257:5
  10e954:    00 ef 80 0c       	[r0+0x0] |= 0x4000			  ## spi0.c:259:18
  10e958:    80 00             	rts			  ## spi0.c:259:18


SPI0_WriteByte:
  10e95a:    c1 ff 00 1c 1e 00 	r1 = 0x1e1c00 <__stub_LZ4_decompress_safe_usingDict+0xD1C04 : 1e1c00 >			  ## spi0.c:279:0
  10e960:    c0 ef 80 1d       	[r1+0x0] &= 0xFFFFEFFF			  ## spi0.c:280:18
  10e964:    90 62             	[r1+0x8] = r0			  ## spi0.c:281:18
  10e966:    f7 90             	goto -0x20 <spi0_wait_ok : 10e948 >			  ## spi0.c:282:5


SPI0_ReadByte:
  10e968:    10 04             	[--sp] = rets			  ## spi0.c:299:0
  10e96a:    c2 ff 00 1c 1e 00 	r2 = 0x1e1c00 <__stub_LZ4_decompress_safe_usingDict+0xD1C04 : 1e1c00 >			  ## spi0.c:299:0
  10e970:    00 ef 80 2d       	[r2+0x0] |= 0x1000			  ## spi0.c:301:18
  10e974:    40 2a             	r0 = 0xa			  ## spi0.c:302:5
  10e976:    bf ea c1 fb       	call -0x87e <udelay : 10e0fc >			  ## spi0.c:302:5
  10e97a:    42 ea ff 20       	[r2+0x8] = 0xFF			  ## spi0.c:303:18
  10e97e:    71 84             	call -0x38 <spi0_wait_ok : 10e948 >			  ## spi0.c:304:5
  10e980:    20 62             	r0 = [r2+0x8] 			  ## spi0.c:305:25
  10e982:    00 17             	r0 = r0.b0 (u)			  ## spi0.c:307:5
  10e984:    00 04             	pc = [sp++]			  ## spi0.c:307:5


LZ4_decompress_generic:
  10e986:    7f 04             	[--sp] = {rets, r15-r4}			  ## lz4.c:421:0
  10e988:    e2 95             	sp += -0x2c			  ## lz4.c:421:0
  10e98a:    d4 e9 78 d0       	r13 = [sp+120]			  ## lz4.c:421:0
  10e98e:    49 e0 01 00       	r9 = 0x1			  ## lz4.c:421:0
  10e992:    2d e9 80 0b       	if (r13 >= 0x10000) {			  ## lz4.c:421:0
  10e996:    c1 14             		r9 = 0
                               	}			  ## lz4.c:435:56
  10e998:    d4 e9 60 c0       	r12 = [sp+96]			  ## lz4.c:435:56
  10e99c:    c6 16             	r6 = r12			  ## lz4.c:434:40
  10e99e:    b6 e8 01 00       	if (r6 != 0x1) {			  ## lz4.c:434:40
  10e9a2:    46 20             		r6 = 0x0
                               	}			  ## lz4.c:434:40
  10e9a4:    04 3a             	r4 = [sp+104]			  ## lz4.c:434:40
  10e9a6:    b4 f0 10 84       	r8 = r1 + r4  #			  ## lz4.c:428:22
  10e9aa:    05 39             		 r5 = [sp+100]			  ## lz4.c:428:22
  10e9ac:    9f 1c             	r7 = r1 + r3			  ## lz4.c:426:27
  10e9ae:    b5 e8 00 40       	if (r5 != 0x0) {
  10e9b2:    34 e1 f4 7f       		r4 = r7 + -0xc			  ## lz4.c:439:44
  10e9b6:    35 e4 80 84       		r8 = umin(r8, r4)
                               	}			  ## lz4.c:439:9
  10e9ba:    83 43             	if (r3 != 0) goto 0x6 <LZ4_decompress_generic+0x3C : 10e9c2 >			  ## lz4.c:439:9
  10e9bc:    01 ff 00 c0 0b 01 	if (r12 != 0x0) goto 0x216 <LZ4_decompress_generic+0x252 : 10ebd8 >
  10e9c2:    90 f1 62 69       	r6 = r6 & r9  #			  ## lz4.c:435:43
  10e9c6:    04 3d             		 r4 = [sp+116]			  ## lz4.c:435:43
  10e9c8:    d4 d8             	r4 += r13  #			  ## lz4.c:430:57
  10e9ca:    86 2a             		 [sp+40] = r6			  ## lz4.c:430:57
  10e9cc:    84 dc             	r4 = r0 + r2  #			  ## lz4.c:423:33
  10e9ce:    84 24             		 [sp+16] = r4			  ## lz4.c:423:33
  10e9d0:    4f e0 01 00       	r15 = 0x1			  ## lz4.c:445:23
  10e9d4:    bc e8 00 00       	if (r12 != 0x0) {			  ## lz4.c:445:23
  10e9d8:    c7 14             		r15 = 0
                               	}			  ## lz4.c:445:23
  10e9da:    83 43             	if (r3 != 0) goto 0x6 <LZ4_decompress_generic+0x5C : 10e9e2 >			  ## lz4.c:445:23
  10e9dc:    01 ff 00 f0 05 01 	if (r15 != 0x0) goto 0x20a <LZ4_decompress_generic+0x266 : 10ebec >
  10e9e2:    32 f1 f4 7f       	r2 = r7 + -0xc  #
  10e9e6:    85 22             		 [sp+8] = r5
  10e9e8:    35 e8 00 00       	if (r5 == 0x0) {
  10e9ec:    28 16             		r8 = r2
                               	}
  10e9ee:    d4 e9 70 a0       	r10 = [sp+112]
  10e9f2:    39 f1 f1 4f       	r9 = r4 + -0xf  #
  10e9f6:    02 3b             		 r2 = [sp+108]
  10e9f8:    32 f1 f8 7f       	r2 = r7 + -0x8  #
  10e9fc:    82 29             		 [sp+36] = r2
  10e9fe:    3e f1 fb 4f       	r14 = r4 + -0x5  #
  10ea02:    82 26             		 [sp+24] = r2
  10ea04:    32 f1 fb 7f       	r2 = r7 + -0x5  #
  10ea08:    87 23             		 [sp+12] = r7
  10ea0a:    32 f1 f8 4f       	r2 = r4 + -0x8  #
  10ea0e:    82 28             		 [sp+32] = r2
  10ea10:    14 d6             	r4 = r1  #
  10ea12:    84 21             		 [sp+4] = r4
  10ea14:    06 d6             	r6 = r0  #
  10ea16:    82 27             		 [sp+28] = r2
  10ea18:    81 20             	[sp] = r1
  10ea1a:    80 25             	[sp+20] = r0
  10ea1c:    04 93             	goto 0x26 <LZ4_decompress_generic+0xBE : 10ea44 >
  10ea1e:    17 03             	rep 0x4 r7 {			  ## lz4.c:323:5
  10ea20:    10 07             		r0 = b[r1++=0x1] (u)			  ## lz4.c:323:5
  10ea22:    d0 07             		b[r5++=0x1] = r0
                               	}			  ## lz4.c:323:5
  10ea24:    f7 5c             	if (r7 != 0) goto -0x8 <LZ4_decompress_generic+0x98 : 10ea1e >			  ## lz4.c:323:5
  10ea26:    04 8e             	goto 0x1c <LZ4_decompress_generic+0xBE : 10ea44 >			  ## lz4.c:323:5
  10ea28:    72 d6             	r2 = r7  #			  ## lz4.c:534:17
  10ea2a:    00 24             		 r0 = [sp+16]			  ## lz4.c:534:37
  10ea2c:    b4 e0 02 1b       	r1 = r0 - r11			  ## lz4.c:534:37
  10ea30:    50 16             	r0 = r5			  ## lz4.c:534:17
  10ea32:    bf ea b1 8c       	call -0xe69e <memmove : 100398 >			  ## lz4.c:534:17
  10ea36:    04 86             	goto 0xc <LZ4_decompress_generic+0xBE : 10ea44 >
  10ea38:    40 16             	r0 = r4			  ## lz4.c:549:21
  10ea3a:    a1 16             	r1 = r10			  ## lz4.c:549:21
  10ea3c:    72 16             	r2 = r7			  ## lz4.c:549:21
  10ea3e:    bf ea ab 8c       	call -0xe6aa <memmove : 100398 >			  ## lz4.c:549:21
  10ea42:    74 18             	r4 += r7			  ## lz4.c:550:24
  10ea44:    50 ee 60 b0       	r11 = b[r6+0x0] (u)			  ## lz4.c:456:32
  10ea48:    c0 e1 b4 78       	r7 = r11 >> 0x4			  ## lz4.c:457:30
  10ea4c:    69 81             	r1 = r6 + 0x1			  ## lz4.c:456:35
  10ea4e:    87 f8 1d 1e       	if (r7 != 0xf) goto 0x3a <LZ4_decompress_generic+0x106 : 10ea8c >
  10ea52:    47 2f             	r7 = 0xf
  10ea54:    1e 81             	r6 = r1 + 0x1			  ## lz4.c:460:24
  10ea56:    42 21             	r2 = 0x1
  10ea58:    16 e9 00 09       	if (r6 >= r9) {
  10ea5c:    42 20             		r2 = 0x0
                               	}			  ## lz4.c:462:22
  10ea5e:    19 40             	r1 = b[r1+0x0] (u)			  ## lz4.c:460:21
  10ea60:    17 18             	r7 += r1			  ## lz4.c:461:24
  10ea62:    91 f8 04 fe       	if (r1 != 0xff) goto 0x8 <LZ4_decompress_generic+0xE8 : 10ea6e >
  10ea66:    90 e1 20 2f       	r2 = r2 | r15			  ## lz4.c:462:22
  10ea6a:    61 16             	r1 = r6			  ## lz4.c:462:22
  10ea6c:    f2 53             	if (r2 != 0) goto -0x1a <LZ4_decompress_generic+0xCE : 10ea54 >
  10ea6e:    8c f8 0e 02       	if (r12 != 0x1) goto 0x1c <LZ4_decompress_generic+0x108 : 10ea8e >
  10ea72:    72 1d             	r2 = r7 + r4
  10ea74:    41 21             	r1 = 0x1
  10ea76:    12 e9 00 07       	if (r2 >= r7) {
  10ea7a:    41 20             		r1 = 0x0
                               	}
  10ea7c:    b1 54             	if (r1 != 0) goto 0xe8 <LZ4_decompress_generic+0x1E0 : 10eb66 >
  10ea7e:    f2 1d             	r2 = r7 + r6
  10ea80:    41 21             	r1 = 0x1
  10ea82:    12 e9 00 07       	if (r2 >= r7) {
  10ea86:    41 20             		r1 = 0x0
                               	}
  10ea88:    01 42             	if (r1 == 0) goto 0x4 <LZ4_decompress_generic+0x108 : 10ea8e >
  10ea8a:    34 8d             	goto 0xda <LZ4_decompress_generic+0x1E0 : 10eb66 >
  10ea8c:    16 16             	r6 = r1
  10ea8e:    cd 1d             	r5 = r4 + r7			  ## lz4.c:472:18
  10ea90:    0c f8 07 00       	if (r12 == 0x0) goto 0xe <LZ4_decompress_generic+0x11C : 10eaa2 >			  ## lz4.c:473:27
  10ea94:    08 ec 6c 50       	if (r5 > r8) goto 0xd8 <LZ4_decompress_generic+0x1EA : 10eb70 >
  10ea98:    e9 dd             	r1 = r6 + r7  #			  ## lz4.c:473:89
  10ea9a:    00 27             		 r0 = [sp+28]			  ## lz4.c:473:89
  10ea9c:    80 ec 05 10       	if (r1 <= r0) goto 0xa <LZ4_decompress_generic+0x124 : 10eaaa >
  10eaa0:    34 87             	goto 0xce <LZ4_decompress_generic+0x1EA : 10eb70 >
  10eaa2:    00 26             	r0 = [sp+24]			  ## lz4.c:473:13
  10eaa4:    00 ec 64 50       	if (r5 > r0) goto 0xc8 <LZ4_decompress_generic+0x1EA : 10eb70 >
  10eaa8:    e9 1d             	r1 = r6 + r7			  ## lz4.c:496:12
  10eaaa:    72 16             	r2 = r7			  ## lz4.c:323:5
  10eaac:    63 16             	r3 = r6			  ## lz4.c:323:5
  10eaae:    12 03             	rep 0x4 r2 {			  ## lz4.c:323:5
  10eab0:    30 07             		r0 = b[r3++=0x1] (u)			  ## lz4.c:323:5
  10eab2:    c0 07             		b[r4++=0x1] = r0
                               	}			  ## lz4.c:323:5
  10eab4:    f2 5c             	if (r2 != 0) goto -0x8 <LZ4_decompress_generic+0x128 : 10eaae >			  ## lz4.c:323:5
  10eab6:    18 41             	r0 = b[r1+0x1] (u)			  ## lz4.c:500:18
  10eab8:    1a 40             	r2 = b[r1+0x0] (u)			  ## lz4.c:500:18
  10eaba:    a2 e1 20 04       	r2 <= insert(r0, p:0x8, l:0x8)			  ## lz4.c:500:18
  10eabe:    d1 1e             	r1 = r5 - r2			  ## lz4.c:502:20
  10eac0:    b4 e0 10 0d       	r0 = r1 + r13			  ## lz4.c:503:31
  10eac4:    43 21             	r3 = 0x1			  ## lz4.c:503:31
  10eac6:    10 e9 00 0a       	if (r0 >= r10) {			  ## lz4.c:503:31
  10eaca:    43 20             		r3 = 0x0
                               	}			  ## lz4.c:503:31
  10eacc:    e8 1d             	r0 = r6 + r7			  ## lz4.c:496:12
  10eace:    0e 82             	r6 = r0 + 0x2			  ## lz4.c:501:12
  10ead0:    00 2a             	r0 = [sp+40]
  10ead2:    30 fb 48 00       	if ((r0 & r3) != 0) goto 0x90 <LZ4_decompress_generic+0x1E0 : 10eb66 >
  10ead6:    40 20             	r0 = 0x0
  10ead8:    d8 43             	b[r5+0x3] = r0			  ## lz4.c:234:30
  10eada:    d8 42             	b[r5+0x2] = r0			  ## lz4.c:234:30
  10eadc:    da 40             	b[r5+0x0] = r2			  ## lz4.c:234:30
  10eade:    a2 a8             	r2 = r2 >> 0x8			  ## lz4.c:234:30
  10eae0:    70 f1 f0 b0       	r0 = r11 & 0xFFFFFF0F  #			  ## lz4.c:509:24
  10eae4:    da 41             		 b[r5+0x1] = r2			  ## lz4.c:234:30
  10eae6:    80 f8 13 1e       	if (r0 != 0xf) goto 0x26 <LZ4_decompress_generic+0x18A : 10eb10 >
  10eaea:    40 2f             	r0 = 0xf
  10eaec:    63 16             	r3 = r6
  10eaee:    3e 81             	r6 = r3 + 0x1			  ## lz4.c:513:24
  10eaf0:    32 07             	r2 = b[r3++=0x1] (u)			  ## lz4.c:513:21
  10eaf2:    0c f8 02 00       	if (r12 == 0x0) goto 0x4 <LZ4_decompress_generic+0x174 : 10eafa >			  ## lz4.c:513:21
  10eaf6:    0e ec 35 60       	if (r6 > r14) goto 0x6a <LZ4_decompress_generic+0x1DE : 10eb64 >
  10eafa:    20 18             	r0 += r2			  ## lz4.c:517:24
  10eafc:    12 f8 f6 ff       	if (r2 == 0xff) goto -0x14 <LZ4_decompress_generic+0x166 : 10eaec >
  10eb00:    0b 1d             	r3 = r0 + r5
  10eb02:    42 21             	r2 = 0x1
  10eb04:    13 e9 00 00       	if (r3 >= r0) {
  10eb08:    42 20             		r2 = 0x0
                               	}
  10eb0a:    8c f8 01 02       	if (r12 != 0x1) goto 0x2 <LZ4_decompress_generic+0x18A : 10eb10 >
  10eb0e:    92 4b             	if (r2 != 0) goto 0x56 <LZ4_decompress_generic+0x1E0 : 10eb66 >
  10eb10:    0f 84             	r7 = r0 + 0x4			  ## lz4.c:523:16
  10eb12:    00 29             	r0 = [sp+36]			  ## lz4.c:526:36
  10eb14:    80 f8 21 04       	if (r0 != 0x2) goto 0x42 <LZ4_decompress_generic+0x1D4 : 10eb5a >			  ## lz4.c:526:36
  10eb18:    0a ed 1f 10       	ifs (r1 >= r10) goto 0x3e <LZ4_decompress_generic+0x1D4 : 10eb5a >
  10eb1c:    dc dd             	r4 = r5 + r7  #			  ## lz4.c:528:17
  10eb1e:    00 28             		 r0 = [sp+32]			  ## lz4.c:528:17
  10eb20:    00 ec 21 40       	if (r4 > r0) goto 0x42 <LZ4_decompress_generic+0x1E0 : 10eb66 >
  10eb24:    b4 e0 a2 b1       	r11 = r10 - r1			  ## lz4.c:532:46
  10eb28:    8b ec 7e 71       	if (r7 <= r11) goto -0x104 <LZ4_decompress_generic+0xA2 : 10ea28 >
  10eb2c:    b2 d6             	r2 = r11  #			  ## lz4.c:540:17
  10eb2e:    00 24             		 r0 = [sp+16]			  ## lz4.c:540:36
  10eb30:    b4 e0 02 1b       	r1 = r0 - r11			  ## lz4.c:540:36
  10eb34:    50 16             	r0 = r5			  ## lz4.c:540:17
  10eb36:    bf ea 2f 8c       	call -0xe7a2 <memmove : 100398 >			  ## lz4.c:540:17
  10eb3a:    b4 e0 72 7b       	r7 = r7 - r11			  ## lz4.c:539:48
  10eb3e:    b4 e0 50 4b       	r4 = r5 + r11			  ## lz4.c:541:20
  10eb42:    b4 e0 42 0a       	r0 = r4 - r10			  ## lz4.c:542:44
  10eb46:    80 ec 77 71       	if (r7 <= r0) goto -0x112 <LZ4_decompress_generic+0xB2 : 10ea38 >			  ## lz4.c:542:21
  10eb4a:    c8 1d             	r0 = r4 + r7			  ## lz4.c:543:49
  10eb4c:    a1 16             	r1 = r10
  10eb4e:    04 82             	goto 0x4 <LZ4_decompress_generic+0x1CE : 10eb54 >
  10eb50:    12 07             	r2 = b[r1++=0x1] (u)			  ## lz4.c:546:33
  10eb52:    c2 07             	b[r4++=0x1] = r2			  ## lz4.c:546:31
  10eb54:    80 e9 fc 41       	if (r4 < r0) goto -0x8 <LZ4_decompress_generic+0x1CA : 10eb50 >
  10eb58:    b7 95             	goto -0x116 <LZ4_decompress_generic+0xBE : 10ea44 >
  10eb5a:    dc dd             	r4 = r5 + r7  #			  ## lz4.c:557:18
  10eb5c:    00 28             		 r0 = [sp+32]			  ## lz4.c:557:18
  10eb5e:    80 ec 5e 41       	if (r4 <= r0) goto -0x144 <LZ4_decompress_generic+0x98 : 10ea1e >
  10eb62:    04 81             	goto 0x2 <LZ4_decompress_generic+0x1E0 : 10eb66 >
  10eb64:    36 16             	r6 = r3
  10eb66:    00 25             	r0 = [sp+20]			  ## lz4.c:612:18
  10eb68:    f8 3f             	r0 += -0x1			  ## lz4.c:612:18
  10eb6a:    80 1f             	r0 = r0 - r6			  ## lz4.c:612:47
  10eb6c:    02 8b             	sp += 0x2c
  10eb6e:    5f 04             	{pc, r15-r4} = [sp++]			  ## lz4.c:613:1
  10eb70:    00 22             	r0 = [sp+8]			  ## lz4.c:475:17
  10eb72:    00 52             	if (r0 == 0) goto 0x24 <LZ4_decompress_generic+0x212 : 10eb98 >			  ## lz4.c:475:17
  10eb74:    00 23             	r0 = [sp+12]
  10eb76:    00 ec f6 51       	if (r5 > r0) goto -0x14 <LZ4_decompress_generic+0x1E0 : 10eb66 >
  10eb7a:    b4 e0 60 87       	r8 = r6 + r7			  ## lz4.c:479:41
  10eb7e:    0c f8 03 00       	if (r12 == 0x0) goto 0x6 <LZ4_decompress_generic+0x202 : 10eb88 >			  ## lz4.c:479:41
  10eb82:    00 21             	r0 = [sp+4]
  10eb84:    00 ec ef 81       	if (r8 > r0) goto -0x22 <LZ4_decompress_generic+0x1E0 : 10eb66 >
  10eb88:    40 16             	r0 = r4			  ## lz4.c:490:13
  10eb8a:    61 16             	r1 = r6			  ## lz4.c:490:13
  10eb8c:    72 16             	r2 = r7			  ## lz4.c:490:13
  10eb8e:    bf ea 03 8c       	call -0xe7fa <memmove : 100398 >			  ## lz4.c:490:13
  10eb92:    8c f8 13 00       	if (r12 != 0x0) goto 0x26 <LZ4_decompress_generic+0x236 : 10ebbc >
  10eb96:    04 9c             	goto 0x38 <LZ4_decompress_generic+0x24A : 10ebd0 >
  10eb98:    00 23             	r0 = [sp+12]
  10eb9a:    8c f8 02 00       	if (r12 != 0x0) goto 0x4 <LZ4_decompress_generic+0x21C : 10eba2 >
  10eb9e:    80 e8 e2 51       	if (r5 != r0) goto -0x3c <LZ4_decompress_generic+0x1E0 : 10eb66 >
  10eba2:    0c f8 0e 00       	if (r12 == 0x0) goto 0x1c <LZ4_decompress_generic+0x23C : 10ebc2 >
  10eba6:    00 ec de 51       	if (r5 > r0) goto -0x44 <LZ4_decompress_generic+0x1E0 : 10eb66 >
  10ebaa:    e8 dd             	r0 = r6 + r7  #			  ## lz4.c:486:42
  10ebac:    01 21             		 r1 = [sp+4]			  ## lz4.c:486:42
  10ebae:    81 e8 da 01       	if (r0 != r1) goto -0x4c <LZ4_decompress_generic+0x1E0 : 10eb66 >			  ## lz4.c:486:42
  10ebb2:    40 16             	r0 = r4			  ## lz4.c:490:13
  10ebb4:    61 16             	r1 = r6			  ## lz4.c:490:13
  10ebb6:    72 16             	r2 = r7			  ## lz4.c:490:13
  10ebb8:    bf ea ee 8b       	call -0xe824 <memmove : 100398 >			  ## lz4.c:490:13
  10ebbc:    00 20             	r0 = [sp]			  ## lz4.c:605:35
  10ebbe:    50 1e             	r0 = r5 - r0			  ## lz4.c:605:35
  10ebc0:    e7 95             	goto -0x56 <LZ4_decompress_generic+0x1E6 : 10eb6c >			  ## lz4.c:605:35
  10ebc2:    40 16             	r0 = r4			  ## lz4.c:490:13
  10ebc4:    61 16             	r1 = r6			  ## lz4.c:490:13
  10ebc6:    72 16             	r2 = r7			  ## lz4.c:490:13
  10ebc8:    bf ea e6 8b       	call -0xe834 <memmove : 100398 >			  ## lz4.c:490:13
  10ebcc:    b4 e0 60 87       	r8 = r6 + r7			  ## lz4.c:491:16
  10ebd0:    00 25             	r0 = [sp+20]			  ## lz4.c:607:41
  10ebd2:    b4 e0 82 00       	r0 = r8 - r0			  ## lz4.c:607:41
  10ebd6:    e7 8a             	goto -0x6c <LZ4_decompress_generic+0x1E6 : 10eb6c >			  ## lz4.c:607:41
  10ebd8:    43 21             	r3 = 0x1
  10ebda:    82 f8 04 02       	if (r2 != 0x1) goto 0x8 <LZ4_decompress_generic+0x260 : 10ebe6 >
  10ebde:    09 40             	r1 = b[r0+0x0] (u)			  ## lz4.c:443:36
  10ebe0:    31 e8 00 00       	if (r1 == 0x0) {
  10ebe4:    13 16             		r3 = r1
                               	}
  10ebe6:    a0 e0 00 30       	r0 = 0x0 - r3			  ## lz4.c:443:16
  10ebea:    e7 80             	goto -0x80 <LZ4_decompress_generic+0x1E6 : 10eb6c >
  10ebec:    09 40             	r1 = b[r0+0x0] (u)			  ## lz4.c:446:17
  10ebee:    40 21             	r0 = 0x1			  ## lz4.c:446:17
  10ebf0:    b1 e8 00 00       	if (r1 != 0x0) {
  10ebf4:    10 3f             		r0 = -0x1
                               	}			  ## lz4.c:446:17
  10ebf6:    d7 9a             	goto -0x8c <LZ4_decompress_generic+0x1E6 : 10eb6c >			  ## lz4.c:446:17


LZ4_decompress_safe_continue:
  10ebf8:    77 04             	[--sp] = {rets, r7-r4}			  ## lz4.c:660:0
  10ebfa:    e2 99             	sp += -0x1c			  ## lz4.c:660:0
  10ebfc:    04 d6             	r4 = r0  #			  ## lz4.c:660:0
  10ebfe:    06 2c             		 r6 = [sp+48]			  ## lz4.c:660:0
  10ec00:    25 d6             	r5 = r2  #			  ## lz4.c:660:0
  10ec02:    40 63             		 r0 = [r4+0xc] 			  ## lz4.c:660:0
  10ec04:    47 62             	r7 = [r4+0x8] 			  ## lz4.c:664:16
  10ec06:    05 e8 18 70       	if (r7 == r5) goto 0x30 <LZ4_decompress_safe_continue+0x42 : 10ec3a >
  10ec0a:    72 de             	r2 = r7 - r0  #			  ## lz4.c:675:48
  10ec0c:    c0 61             		 [r4+0x4] = r0			  ## lz4.c:674:28
  10ec0e:    c2 60             	[r4+0x0] = r2			  ## lz4.c:675:29
  10ec10:    80 26             	[sp+24] = r0			  ## lz4.c:676:18
  10ec12:    32 d6             	r2 = r3  #			  ## lz4.c:676:18
  10ec14:    82 25             		 [sp+20] = r2			  ## lz4.c:676:18
  10ec16:    63 d6             	r3 = r6  #			  ## lz4.c:676:18
  10ec18:    85 24             		 [sp+16] = r5			  ## lz4.c:676:18
  10ec1a:    40 22             	r0 = 0x2			  ## lz4.c:676:18
  10ec1c:    80 23             	[sp+12] = r0			  ## lz4.c:676:18
  10ec1e:    40 20             	r0 = 0x0			  ## lz4.c:676:18
  10ec20:    80 22             	[sp+8] = r0			  ## lz4.c:676:18
  10ec22:    80 21             	[sp+4] = r0			  ## lz4.c:676:18
  10ec24:    40 21             	r0 = 0x1			  ## lz4.c:676:18
  10ec26:    10 d6             	r0 = r1  #			  ## lz4.c:676:18
  10ec28:    80 20             		 [sp] = r0			  ## lz4.c:676:18
  10ec2a:    51 16             	r1 = r5			  ## lz4.c:676:18
  10ec2c:    bf ea ab fe       	call -0x2aa <LZ4_decompress_generic : 10e986 >			  ## lz4.c:676:18
  10ec30:    80 fd 1d 02       	ifs (r0 < 0x1) goto 0x3a <LZ4_decompress_safe_continue+0x76 : 10ec6e >
  10ec34:    51 dc             	r1 = r5 + r0  #			  ## lz4.c:683:42
  10ec36:    c0 63             		 [r4+0xc] = r0			  ## lz4.c:682:27
  10ec38:    04 99             	goto 0x32 <LZ4_decompress_safe_continue+0x74 : 10ec6c >			  ## lz4.c:682:27
  10ec3a:    04 eb 84 00       	{r7, r2} = [r4+]			  ## lz4.c:667:100
  10ec3e:    50 de             	r0 = r5 - r0  #			  ## lz4.c:667:72
  10ec40:    87 26             		 [sp+24] = r7			  ## lz4.c:665:18
  10ec42:    32 d6             	r2 = r3  #			  ## lz4.c:665:18
  10ec44:    82 25             		 [sp+20] = r2			  ## lz4.c:665:18
  10ec46:    63 d6             	r3 = r6  #			  ## lz4.c:665:18
  10ec48:    80 24             		 [sp+16] = r0			  ## lz4.c:665:18
  10ec4a:    40 22             	r0 = 0x2			  ## lz4.c:665:18
  10ec4c:    80 23             	[sp+12] = r0			  ## lz4.c:665:18
  10ec4e:    40 20             	r0 = 0x0			  ## lz4.c:665:18
  10ec50:    80 22             	[sp+8] = r0			  ## lz4.c:665:18
  10ec52:    80 21             	[sp+4] = r0			  ## lz4.c:665:18
  10ec54:    40 21             	r0 = 0x1			  ## lz4.c:665:18
  10ec56:    10 d6             	r0 = r1  #			  ## lz4.c:665:18
  10ec58:    80 20             		 [sp] = r0			  ## lz4.c:665:18
  10ec5a:    51 16             	r1 = r5			  ## lz4.c:665:18
  10ec5c:    bf ea 93 fe       	call -0x2da <LZ4_decompress_generic : 10e986 >			  ## lz4.c:665:18
  10ec60:    80 fd 05 02       	ifs (r0 < 0x1) goto 0xa <LZ4_decompress_safe_continue+0x76 : 10ec6e >
  10ec64:    68 e8 0c 40       	[r4+0xc] += r0			  ## lz4.c:671:27
  10ec68:    41 62             	r1 = [r4+0x8] 			  ## lz4.c:672:27
  10ec6a:    01 18             	r1 += r0			  ## lz4.c:672:27
  10ec6c:    c1 62             	[r4+0x8] = r1			  ## lz4.c:672:27
  10ec6e:    02 87             	sp += 0x1c
  10ec70:    57 04             	{pc, r7-r4} = [sp++]			  ## lz4.c:687:1


Run_App:
  10ec72:    7e 04             	[--sp] = {rets, r14-r4}			  ## bankSwitch.c:15:0
  10ec74:    c2 9f             	sp += -0x84			  ## bankSwitch.c:15:0
  10ec76:    04 16             	r4 = r0			  ## bankSwitch.c:15:0
  10ec78:    04 eb 05 00       	{r2, r0} = [r4+]			  ## sdfile.c:29:60
  10ec7c:    ed 84             	r5 = sp + 100			  ## sdfile.c:29:60
  10ec7e:    4b 20             	r3 = 0x20			  ## sdfile.c:29:5
  10ec80:    51 d6             	r1 = r5  #			  ## sdfile.c:29:5
  10ec82:    46 63             		 r6 = [r4+0xc] 			  ## sdfile.c:29:11
  10ec84:    c6 00             	call r6			  ## sdfile.c:29:5
  10ec86:    40 e1 02 50       	r0 = r5 | 0x2			  ## sdfile.c:31:24
  10ec8a:    41 3e             	r1 = 0x1e			  ## sdfile.c:31:12
  10ec8c:    bf ea bc fc       	call -0x688 <chip_crc16 : 10e608 >			  ## sdfile.c:31:12
  10ec90:    00 f8 82 00       	if (r0 == 0x0) goto 0x104 <Run_App+0x126 : 10ed98 >			  ## sdfile.c:31:12
  10ec94:    d8 e9 64 10       	r1 = h[sp+100] (u)			  ## sdfile.c:34:29
  10ec98:    80 e8 7e 10       	if (r1 != r0) goto 0xfc <Run_App+0x126 : 10ed98 >			  ## sdfile.c:34:29
  10ec9c:    50 ec 40 00       	r1_r0 = d[r4+0x0]			  ## sdfile.c:35:31
  10eca0:    02 f1 20 10       	r2 = r1 + 0x20  #			  ## sdfile.c:36:64
  10eca4:    46 63             		 r6 = [r4+0xc] 			  ## sdfile.c:35:15
  10eca6:    cd 84             	r5 = sp + 68			  ## sdfile.c:35:15
  10eca8:    4b 20             	r3 = 0x20			  ## sdfile.c:35:9
  10ecaa:    51 16             	r1 = r5			  ## sdfile.c:35:9
  10ecac:    c6 00             	call r6			  ## sdfile.c:35:9
  10ecae:    f8 e8 34 80       	r8 = sp + 52			  ## sdfile.c:35:9
  10ecb2:    17 3c             	r7 = -0x4			  ## sdfile.c:35:9
  10ecb4:    04 93             	goto 0x26 <Run_App+0x6A : 10ecdc >			  ## sdfile.c:35:9
  10ecb6:    50 ec 40 00       	r1_r0 = d[r4+0x0]			  ## bankSwitch.c:32:57
  10ecba:    52 61             	r2 = [r5+0x4] 			  ## bankSwitch.c:32:75
  10ecbc:    12 d8             	r2 += r1  #			  ## bankSwitch.c:32:68
  10ecbe:    46 63             		 r6 = [r4+0xc] 			  ## bankSwitch.c:32:19
  10ecc0:    a9 94             	r1 = sp + 52			  ## bankSwitch.c:32:19
  10ecc2:    43 30             	r3 = 0x10			  ## bankSwitch.c:32:13
  10ecc4:    c6 00             	call r6			  ## bankSwitch.c:32:13
  10ecc6:    00 49             	if (r0 == 0) goto 0x12 <Run_App+0x68 : 10ecda >			  ## bankSwitch.c:32:13
  10ecc8:    a8 94             	r0 = sp + 52
  10ecca:    41 2e             	r1 = 0xe			  ## bankSwitch.c:33:19
  10eccc:    bf ea 9c fc       	call -0x6c8 <chip_crc16 : 10e608 >			  ## bankSwitch.c:33:19
  10ecd0:    00 44             	if (r0 == 0) goto 0x8 <Run_App+0x68 : 10ecda >			  ## bankSwitch.c:33:19
  10ecd2:    50 ed 8e 10       	r1 = h[r8+0xe] (u)			  ## bankSwitch.c:35:32
  10ecd6:    00 e8 03 10       	if (r1 == r0) goto 0x6 <Run_App+0x6E : 10ece0 >			  ## bankSwitch.c:35:32
  10ecda:    c7 21             	r7 += 0x1			  ## bankSwitch.c:30:9
  10ecdc:    f7 4c             	if (r7 != 0) goto -0x28 <Run_App+0x44 : 10ecb6 >
  10ecde:    24 9c             	goto 0xb8 <Run_App+0x126 : 10ed98 >
  10ece0:    50 61             	r0 = [r5+0x4] 			  ## bankSwitch.c:36:35
  10ece2:    01 2f             	r1 = [sp+60]			  ## bankSwitch.c:36:49
  10ece4:    d4 e9 38 80       	r8 = [sp+56]			  ## bankSwitch.c:38:35
  10ece8:    dc e9 50 20       	r2 = b[sp+80] (u)			  ## bankSwitch.c:50:14
  10ecec:    d8 e9 36 a0       	r10 = h[sp+54] (u)			  ## bankSwitch.c:37:29
  10ecf0:    b4 e0 10 c0       	r12 = r1 + r0			  ## bankSwitch.c:36:40
  10ecf4:    f8 e8 44 90       	r9 = sp + 68
  10ecf8:    8e 16             	r14 = r8
  10ecfa:    52 e8 0a 30       	if ((r2 & 0x40) == 0) goto 0x14 <Run_App+0xA0 : 10ed12 >
  10ecfe:    50 ec 40 00       	r1_r0 = d[r4+0x0]			  ## bankSwitch.c:51:68
  10ed02:    b4 f0 10 2c       	r2 = r1 + r12  #			  ## bankSwitch.c:51:79
  10ed06:    46 63             		 r6 = [r4+0xc] 			  ## bankSwitch.c:51:15
  10ed08:    a9 84             	r1 = sp + 36			  ## bankSwitch.c:51:15
  10ed0a:    43 30             	r3 = 0x10			  ## bankSwitch.c:51:9
  10ed0c:    c6 00             	call r6			  ## bankSwitch.c:51:9
  10ed0e:    d4 e9 2c e0       	r14 = [sp+44]			  ## bankSwitch.c:52:35
  10ed12:    f8 e8 34 b0       	r11 = sp + 52
  10ed16:    17 3c             	r7 = -0x4
  10ed18:    cd ff 04 35 1e 00 	r13 = 0x1e3504 <__stub_LZ4_decompress_safe_usingDict+0xD3508 : 1e3504 >
  10ed1e:    04 92             	goto 0x24 <Run_App+0xD2 : 10ed44 >
  10ed20:    50 ec 40 00       	r1_r0 = d[r4+0x0]			  ## bankSwitch.c:58:67
  10ed24:    b4 f0 10 2c       	r2 = r1 + r12  #			  ## bankSwitch.c:58:78
  10ed28:    46 63             		 r6 = [r4+0xc] 			  ## bankSwitch.c:58:19
  10ed2a:    e1 16             	r1 = r14			  ## bankSwitch.c:58:13
  10ed2c:    a3 16             	r3 = r10			  ## bankSwitch.c:58:13
  10ed2e:    c6 00             	call r6			  ## bankSwitch.c:58:13
  10ed30:    00 48             	if (r0 == 0) goto 0x10 <Run_App+0xD0 : 10ed42 >			  ## bankSwitch.c:58:13
  10ed32:    d0 ec d0 00       	r0 = [r13+0x0]			  ## bankSwitch.c:67:27
  10ed36:    50 ed bc 10       	r1 = h[r11+0xc] (u)			  ## bankSwitch.c:70:24
  10ed3a:    80 17             	r0 = r0.l (u)			  ## bankSwitch.c:70:28
  10ed3c:    80 e8 01 10       	if (r1 != r0) goto 0x2 <Run_App+0xD0 : 10ed42 >			  ## bankSwitch.c:70:28
  10ed40:    80 43             	if (r0 != 0) goto 0x6 <Run_App+0xD6 : 10ed48 >
  10ed42:    c7 21             	r7 += 0x1			  ## bankSwitch.c:30:9
  10ed44:    f7 4d             	if (r7 != 0) goto -0x26 <Run_App+0xAE : 10ed20 >
  10ed46:    14 88             	goto 0x50 <Run_App+0x126 : 10ed98 >
  10ed48:    50 ee 9c 00       	r0 = b[r9+0xc] (u)			  ## bankSwitch.c:82:14
  10ed4c:    50 e8 18 30       	if ((r0 & 0x40) == 0) goto 0x30 <Run_App+0x10E : 10ed80 >			  ## bankSwitch.c:82:14
  10ed50:    d0 e9 24 00       	r1_r0 = d[sp+36]			  ## bankSwitch.c:85:82
  10ed54:    10 d8             	r0 += r1  #			  ## lz4.c:645:50
  10ed56:    80 24             		 [sp+16] = r0			  ## lz4.c:644:23
  10ed58:    01 2b             	r1 = [sp+44]			  ## bankSwitch.c:88:91
  10ed5a:    80 23             	[sp+12] = r0			  ## lz4.c:645:22
  10ed5c:    42 20             	r2 = 0x0			  ## lz4.c:646:25
  10ed5e:    43 20             	r3 = 0x0			  ## lz4.c:646:25
  10ed60:    d0 e9 05 20       	d[sp+4] = r3_r2			  ## lz4.c:646:25
  10ed64:    b4 e0 12 28       	r2 = r1 - r8			  ## bankSwitch.c:88:101
  10ed68:    01 f1 10 e0       	r1 = r14 + 0x10  #			  ## bankSwitch.c:87:77
  10ed6c:    82 20             		 [sp] = r2			  ## bankSwitch.c:87:24
  10ed6e:    33 e1 f0 af       	r3 = r10 + -0x10			  ## bankSwitch.c:88:52
  10ed72:    88 84             	r0 = sp + 4			  ## bankSwitch.c:88:52
  10ed74:    82 16             	r2 = r8			  ## bankSwitch.c:87:24
  10ed76:    bf ea 3f ff       	call -0x182 <LZ4_decompress_safe_continue : 10ebf8 >			  ## bankSwitch.c:87:24
  10ed7a:    01 2c             	r1 = [sp+48]			  ## bankSwitch.c:90:39
  10ed7c:    81 e8 0c 00       	if (r0 != r1) goto 0x18 <Run_App+0x126 : 10ed98 >
  10ed80:    64 e0 00 0b       	r0 = icfg			  ## bankSwitch.c:104:5
  10ed84:    b8 28             	r0 &= 0xfffffeff			  ## bankSwitch.c:105:9
  10ed86:    64 e0 80 0b       	icfg = r0			  ## bankSwitch.c:106:5
  10ed8a:    60 00             	cli			  ## bankSwitch.c:107:5
  10ed8c:    40 d6             	r0 = r4  #			  ## bankSwitch.c:110:5
  10ed8e:    51 61             		 r1 = [r5+0x4] 			  ## bankSwitch.c:110:57
  10ed90:    c2 ff 04 bc 02 00 	r2 = 0x2bc04 <boot_arg_list : 2bc04 >			  ## bankSwitch.c:110:5
  10ed96:    c8 00             	call r8			  ## bankSwitch.c:110:5
  10ed98:    22 81             	sp += 0x84
  10ed9a:    5e 04             	{pc, r14-r4} = [sp++]			  ## bankSwitch.c:113:1


run_flash:
  10ed9c:    7f 04             	[--sp] = {rets, r15-r4}			  ## boot_flash.c:74:0
  10ed9e:    e2 9f             	sp += -0x4			  ## boot_flash.c:74:0
  10eda0:    c7 ff b4 81 10 00 	r7 = 0x1081b4 <spi_flash_io_nor : 1081b4 >			  ## boot_flash.c:74:0
  10eda6:    c4 ff e0 bb 02 00 	r4 = 0x2bbe0 <spi_flash_io : 2bbe0 >			  ## boot_flash.c:74:0
  10edac:    40 16             	r0 = r4			  ## boot_flash.c:78:5
  10edae:    71 16             	r1 = r7			  ## boot_flash.c:78:5
  10edb0:    10 83             	rep 0x4 0x4 {			  ## boot_flash.c:78:5
  10edb2:    12 05             		r2 = [r1++=0x4] 			  ## boot_flash.c:78:5
  10edb4:    82 05             		[r0++=0x4] = r2
                               	}			  ## boot_flash.c:78:5
  10edb6:    c0 ff f0 bb 02 00 	r0 = 0x2bbf0 <spi_port : 2bbf0 >			  ## boot_flash.c:80:27
  10edbc:    00 60             	r0 = [r0+0x0] 			  ## boot_flash.c:80:27
  10edbe:    c1 ff 00 02 1f 00 	r1 = 0x1f0200 <__stub_LZ4_decompress_safe_usingDict+0xE0204 : 1f0200 >			  ## spi0.c:234:17
  10edc4:    40 ea 00 10       	[r1+0x0] = 0x0			  ## spi0.c:234:17
  10edc8:    49 20             	r1 = 0x20			  ## spi0.c:234:17
  10edca:    c3 ff 00 1c 1e 00 	r3 = 0x1e1c00 <__stub_LZ4_decompress_safe_usingDict+0xD1C04 : 1e1c00 >			  ## spi0.c:234:17
  10edd0:    b1 60             	[r3+0x0] = r1			  ## spi0.c:235:18
  10edd2:    0a 41             	r2 = b[r0+0x1] (u)			  ## spi0.c:236:28
  10edd4:    b2 61             	[r3+0x4] = r2			  ## spi0.c:236:19
  10edd6:    0a 60             	r2 = h[r0+0x0] (u)			  ## spi0.c:238:29
  10edd8:    a2 a3             	r2 = r2 >> 0x3			  ## spi0.c:238:29
  10edda:    63 e1 1f 20       	r3 = r2 & 0x1F			  ## spi0.c:238:29
  10edde:    c5 ff 04 bc 02 00 	r5 = 0x2bc04 <boot_arg_list : 2bc04 >			  ## spi0.c:19:29
  10ede4:    db 42             	b[r5+0x2] = r3			  ## spi0.c:19:29
  10ede6:    c9 ff 00 53 1e 00 	r9 = 0x1e5300 <__stub_LZ4_decompress_safe_usingDict+0xD5304 : 1e5300 >			  ## spi0.c:19:29
  10edec:    d0 ec 90 60       	r6 = [r9+0x0]			  ## spi0.c:19:29
  10edf0:    60 ff 1f 20 15 00 	if ((r2 & 0x1F) == 0) goto 0x2a <run_flash+0x84 : 10ee20 >			  ## spi0.c:19:29
  10edf6:    42 3a             	r2 = 0x1a
  10edf8:    0b f1 64 93       	r11 = r9 + 0x364  #
  10edfc:    82 20             		 [sp] = r2
  10edfe:    4c e0 fd ff       	r12 = -0x3
  10ee02:    42 22             	r2 = 0x2
  10ee04:    0d e1 7c 93       	r13 = r9 + 0x37c
  10ee08:    4e e0 7f ff       	r14 = -0x81
  10ee0c:    65 20             	r5 = 0x80
  10ee0e:    0f e1 78 93       	r15 = r9 + 0x378
  10ee12:    43 e0 bf ff       	r3 = -0x41
  10ee16:    48 e0 fe ff       	r8 = -0x2
  10ee1a:    4a e0 01 00       	r10 = 0x1
  10ee1e:    04 94             	goto 0x28 <run_flash+0xAC : 10ee48 >
  10ee20:    41 3b             	r1 = 0x1b
  10ee22:    0b f1 68 93       	r11 = r9 + 0x368  #
  10ee26:    81 20             		 [sp] = r1
  10ee28:    4c e0 fb ff       	r12 = -0x5
  10ee2c:    42 24             	r2 = 0x4
  10ee2e:    41 3a             	r1 = 0x1a
  10ee30:    0d e1 64 93       	r13 = r9 + 0x364
  10ee34:    4e e0 fd ff       	r14 = -0x3
  10ee38:    45 22             	r5 = 0x2
  10ee3a:    0f e1 60 93       	r15 = r9 + 0x360
  10ee3e:    13 3e             	r3 = -0x2
  10ee40:    48 e0 f7 ff       	r8 = -0x9
  10ee44:    4a e0 08 00       	r10 = 0x8
  10ee48:    90 e1 60 6a       	r6 = r6 | r10
  10ee4c:    d0 ec 91 60       	[r9+0x0] = r6
  10ee50:    64 e8 0a 98       	[r9+0x8] &= r8
  10ee54:    64 e8 12 98       	[r9+0x10] &= r8
  10ee58:    64 e8 16 98       	[r9+0x14] &= r8
  10ee5c:    64 e8 12 93       	[r9+0x10] &= r3
  10ee60:    64 e8 16 93       	[r9+0x14] &= r3
  10ee64:    64 e8 0a 93       	[r9+0x8] &= r3
  10ee68:    40 ea 3b f0       	[r15+0x0] = 0x3B
  10ee6c:    64 e8 10 95       	[r9+0x10] |= r5
  10ee70:    64 e8 16 9e       	[r9+0x14] &= r14
  10ee74:    64 e8 08 95       	[r9+0x8] |= r5
  10ee78:    40 ea 3f d0       	[r13+0x0] = 0x3F
  10ee7c:    0f e1 54 94       	r15 = r9 + 0x454
  10ee80:    d0 ec f1 10       	[r15+0x0] = r1
  10ee84:    64 e8 10 92       	[r9+0x10] |= r2
  10ee88:    64 e8 16 9c       	[r9+0x14] &= r12
  10ee8c:    64 e8 08 92       	[r9+0x8] |= r2
  10ee90:    40 ea 43 b0       	[r11+0x0] = 0x43
  10ee94:    01 20             	r1 = [sp]
  10ee96:    d0 ec f5 10       	[r15+0x4] = r1
  10ee9a:    0a 60             	r2 = h[r0+0x0] (u)			  ## spi0.c:242:16
  10ee9c:    c8 ff 00 1c 1e 00 	r8 = 0x1e1c00 <__stub_LZ4_decompress_safe_usingDict+0xD1C04 : 1e1c00 >			  ## spi0.c:242:16
  10eea2:    d0 ec 80 10       	r1 = [r8+0x0]			  ## spi0.c:242:16
  10eea6:    00 e1 14 91       	r0 = r9 + 0x114			  ## spi0.c:242:16
  10eeaa:    60 ff 07 20 06 00 	if ((r2 & 0x7) == 0) goto 0xc <run_flash+0x120 : 10eebc >			  ## spi0.c:242:9
  10eeb0:    31 23             	r1 |= 0x8			  ## spi0.c:243:22
  10eeb2:    d0 ec 81 10       	[r8+0x0] = r1			  ## spi0.c:243:22
  10eeb6:    01 60             	r1 = [r0+0x0] 			  ## spi0.c:244:24
  10eeb8:    b9 33             	r1 &= 0xfff7ffff			  ## spi0.c:244:24
  10eeba:    04 85             	goto 0xa <run_flash+0x12A : 10eec6 >			  ## spi0.c:244:24
  10eebc:    b9 23             	r1 &= 0xfffffff7			  ## spi0.c:247:22
  10eebe:    d0 ec 81 10       	[r8+0x0] = r1			  ## spi0.c:247:22
  10eec2:    01 60             	r1 = [r0+0x0] 			  ## spi0.c:248:24
  10eec4:    31 33             	r1 |= 0x80000			  ## spi0.c:248:24
  10eec6:    81 60             	[r0+0x0] = r1
  10eec8:    00 ef 01 80       	[r8+0x0] |= 0x1			  ## spi0.c:251:18
  10eecc:    40 21             	r0 = 0x1			  ## spi0.c:252:5
  10eece:    bf ea 24 fd       	call -0x5b8 <SPI0_cs : 10e91a >			  ## spi0.c:252:5
  10eed2:    40 20             	r0 = 0x0			  ## norflash.c:221:5
  10eed4:    bf ea 21 fd       	call -0x5be <SPI0_cs : 10e91a >			  ## norflash.c:221:5
  10eed8:    68 2b             	r0 = 0xab			  ## norflash.c:223:5
  10eeda:    bf ea 3e fd       	call -0x584 <SPI0_WriteByte : 10e95a >			  ## norflash.c:223:5
  10eede:    78 3f             	r0 = 0xff			  ## norflash.c:226:5
  10eee0:    bf ea 3b fd       	call -0x58a <SPI0_WriteByte : 10e95a >			  ## norflash.c:226:5
  10eee4:    78 3f             	r0 = 0xff			  ## norflash.c:227:5
  10eee6:    bf ea 38 fd       	call -0x590 <SPI0_WriteByte : 10e95a >			  ## norflash.c:227:5
  10eeea:    78 3f             	r0 = 0xff			  ## norflash.c:228:5
  10eeec:    bf ea 35 fd       	call -0x596 <SPI0_WriteByte : 10e95a >			  ## norflash.c:228:5
  10eef0:    bf ea 3a fd       	call -0x58c <SPI0_ReadByte : 10e968 >			  ## norflash.c:230:5
  10eef4:    40 21             	r0 = 0x1			  ## norflash.c:231:5
  10eef6:    bf ea 10 fd       	call -0x5e0 <SPI0_cs : 10e91a >			  ## norflash.c:231:5
  10eefa:    46 e0 6a ff       	r6 = -0x96
  10eefe:    04 92             	goto 0x24 <run_flash+0x188 : 10ef24 >
  10ef00:    40 20             	r0 = 0x0			  ## norflash.c:58:9
  10ef02:    bf ea 0a fd       	call -0x5ec <SPI0_cs : 10e91a >			  ## norflash.c:58:9
  10ef06:    40 25             	r0 = 0x5			  ## norflash.c:59:9
  10ef08:    bf ea 27 fd       	call -0x5b2 <SPI0_WriteByte : 10e95a >			  ## norflash.c:59:9
  10ef0c:    bf ea 2c fd       	call -0x5a8 <SPI0_ReadByte : 10e968 >			  ## norflash.c:60:19
  10ef10:    05 16             	r5 = r0			  ## norflash.c:60:19
  10ef12:    40 21             	r0 = 0x1			  ## norflash.c:61:9
  10ef14:    bf ea 01 fd       	call -0x5fe <SPI0_cs : 10e91a >			  ## norflash.c:61:9
  10ef18:    55 e8 05 00       	if ((r5 & 0x1) == 0) goto 0xa <run_flash+0x18A : 10ef26 >			  ## norflash.c:61:9
  10ef1c:    40 21             	r0 = 0x1			  ## norflash.c:66:9
  10ef1e:    bf ea ff f8       	call -0xe02 <mdelay : 10e120 >			  ## norflash.c:66:9
  10ef22:    c6 21             	r6 += 0x1			  ## norflash.c:66:9
  10ef24:    f6 4d             	if (r6 != 0) goto -0x26 <run_flash+0x164 : 10ef00 >
  10ef26:    40 20             	r0 = 0x0			  ## norflash.c:254:5
  10ef28:    45 20             	r5 = 0x0			  ## norflash.c:254:5
  10ef2a:    bf ea f6 fc       	call -0x614 <SPI0_cs : 10e91a >			  ## norflash.c:254:5
  10ef2e:    58 26             	r0 = 0x66			  ## norflash.c:255:5
  10ef30:    bf ea 13 fd       	call -0x5da <SPI0_WriteByte : 10e95a >			  ## norflash.c:255:5
  10ef34:    40 21             	r0 = 0x1			  ## norflash.c:257:5
  10ef36:    bf ea f0 fc       	call -0x620 <SPI0_cs : 10e91a >			  ## norflash.c:257:5
  10ef3a:    40 20             	r0 = 0x0			  ## norflash.c:259:5
  10ef3c:    bf ea ed fc       	call -0x626 <SPI0_cs : 10e91a >			  ## norflash.c:259:5
  10ef40:    60 39             	r0 = 0x99			  ## norflash.c:261:5
  10ef42:    bf ea 0a fd       	call -0x5ec <SPI0_WriteByte : 10e95a >			  ## norflash.c:261:5
  10ef46:    40 21             	r0 = 0x1			  ## norflash.c:263:5
  10ef48:    bf ea e7 fc       	call -0x632 <SPI0_cs : 10e91a >			  ## norflash.c:263:5
  10ef4c:    40 22             	r0 = 0x2			  ## norflash.c:264:5
  10ef4e:    bf ea e7 f8       	call -0xe32 <mdelay : 10e120 >			  ## norflash.c:264:5
  10ef52:    c5 61             	[r4+0x4] = r5			  ## boot_flash.c:82:29
  10ef54:    04 88             	goto 0x10 <run_flash+0x1CA : 10ef66 >			  ## boot_flash.c:82:29
  10ef56:    40 16             	r0 = r4			  ## boot_flash.c:85:9
  10ef58:    bf ea 8b fe       	call -0x2ea <Run_App : 10ec72 >			  ## boot_flash.c:85:9
  10ef5c:    78 90             	r0 = r7 + 0x10			  ## boot_flash.c:86:35
  10ef5e:    d8 ec 0a 05       	r0 = [r0+r5<<2]			  ## boot_flash.c:86:35
  10ef62:    c0 61             	[r4+0x4] = r0			  ## boot_flash.c:86:33
  10ef64:    c5 21             	r5 += 0x1			  ## boot_flash.c:84:37
  10ef66:    85 f8 f6 0b       	if (r5 != 0x5) goto -0x14 <run_flash+0x1BA : 10ef56 >
  10ef6a:    41 20             	r1 = 0x0
  10ef6c:    d0 ec 81 10       	[r8+0x0] = r1			  ## spi0.c:115:18
  10ef70:    bf ea ce fc       	call -0x664 <spi_get_port : 10e910 >			  ## spi0.c:119:16
  10ef74:    d0 ec 90 c1       	r12 = [r9+0x10]			  ## spi0.c:119:16
  10ef78:    00 54             	if (r0 == 0) goto 0x28 <run_flash+0x206 : 10efa2 >
  10ef7a:    40 21             	r0 = 0x1
  10ef7c:    48 e0 fe ff       	r8 = -0x2
  10ef80:    0a e1 64 93       	r10 = r9 + 0x364
  10ef84:    4b e0 02 00       	r11 = 0x2
  10ef88:    17 3d             	r7 = -0x3
  10ef8a:    0d e1 7c 93       	r13 = r9 + 0x37c
  10ef8e:    4e e0 80 00       	r14 = 0x80
  10ef92:    44 e0 7f ff       	r4 = -0x81
  10ef96:    05 e1 78 93       	r5 = r9 + 0x378
  10ef9a:    52 20             	r2 = 0x40
  10ef9c:    43 e0 bf ff       	r3 = -0x41
  10efa0:    04 91             	goto 0x22 <run_flash+0x228 : 10efc4 >
  10efa2:    40 28             	r0 = 0x8
  10efa4:    48 e0 f7 ff       	r8 = -0x9
  10efa8:    0a e1 68 93       	r10 = r9 + 0x368
  10efac:    4b e0 04 00       	r11 = 0x4
  10efb0:    17 3b             	r7 = -0x5
  10efb2:    0d e1 64 93       	r13 = r9 + 0x364
  10efb6:    4e e0 02 00       	r14 = 0x2
  10efba:    14 3d             	r4 = -0x3
  10efbc:    05 e1 60 93       	r5 = r9 + 0x360
  10efc0:    42 21             	r2 = 0x1
  10efc2:    13 3e             	r3 = -0x2
  10efc4:    90 e1 32 6c       	r6 = r3 & r12
  10efc8:    d0 ec 91 61       	[r9+0x10] = r6
  10efcc:    64 e8 16 93       	[r9+0x14] &= r3
  10efd0:    64 e8 08 92       	[r9+0x8] |= r2
  10efd4:    d1 60             	[r5+0x0] = r1
  10efd6:    64 e8 12 94       	[r9+0x10] &= r4
  10efda:    64 e8 16 94       	[r9+0x14] &= r4
  10efde:    64 e8 08 9e       	[r9+0x8] |= r14
  10efe2:    d0 ec d1 10       	[r13+0x0] = r1
  10efe6:    d0 ec f1 10       	[r15+0x0] = r1
  10efea:    64 e8 12 97       	[r9+0x10] &= r7
  10efee:    64 e8 16 97       	[r9+0x14] &= r7
  10eff2:    64 e8 08 9b       	[r9+0x8] |= r11
  10eff6:    d0 ec a1 10       	[r10+0x0] = r1
  10effa:    d0 ec f5 10       	[r15+0x4] = r1
  10effe:    64 e8 16 98       	[r9+0x14] &= r8
  10f002:    64 e8 10 90       	[r9+0x10] |= r0
  10f006:    64 e8 08 90       	[r9+0x8] |= r0
  10f00a:    02 81             	sp += 0x4
  10f00c:    5f 04             	{pc, r15-r4} = [sp++]			  ## boot_flash.c:90:1


flash_poweroff:
  10f00e:    75 04             	[--sp] = {rets, r5, r4}			  ## norflash.c:439:0
  10f010:    04 16             	r4 = r0			  ## norflash.c:439:0
  10f012:    c5 ff 00 53 1e 00 	r5 = 0x1e5300 <__stub_LZ4_decompress_safe_usingDict+0xD5304 : 1e5300 >			  ## norflash.c:439:0
  10f018:    54 e8 13 00       	if ((r4 & 0x1) == 0) goto 0x26 <flash_poweroff+0x34 : 10f042 >			  ## norflash.c:439:0
  10f01c:    c7 ef 10 50       	[r5+0x1c] &= 0xFFFFFFEF			  ## norflash.c:441:23
  10f020:    c6 ef 10 50       	[r5+0x18] &= 0xFFFFFFEF			  ## norflash.c:442:23
  10f024:    02 ef 10 50       	[r5+0x8] |= 0x10			  ## norflash.c:443:23
  10f028:    c4 ef 10 50       	[r5+0x10] &= 0xFFFFFFEF			  ## norflash.c:444:23
  10f02c:    05 ef 10 50       	[r5+0x14] |= 0x10			  ## norflash.c:445:23
  10f030:    c0 ef 10 50       	[r5+0x0] &= 0xFFFFFFEF			  ## norflash.c:446:23
  10f034:    40 21             	r0 = 0x1			  ## norflash.c:447:9
  10f036:    bf ea 73 f8       	call -0xf1a <mdelay : 10e120 >			  ## norflash.c:447:9
  10f03a:    40 21             	r0 = 0x1			  ## norflash.c:448:9
  10f03c:    41 20             	r1 = 0x0			  ## norflash.c:448:9
  10f03e:    bf ea 4b f8       	call -0xf6a <spi_cs_pu : 10e0d8 >			  ## norflash.c:448:9
  10f042:    54 e8 13 08       	if ((r4 & 0x2) == 0) goto 0x26 <flash_poweroff+0x5E : 10f06c >
  10f046:    c7 ef 20 50       	[r5+0x1c] &= 0xFFFFFFDF			  ## norflash.c:452:23
  10f04a:    c6 ef 20 50       	[r5+0x18] &= 0xFFFFFFDF			  ## norflash.c:453:23
  10f04e:    02 ef 20 50       	[r5+0x8] |= 0x20			  ## norflash.c:454:23
  10f052:    c4 ef 20 50       	[r5+0x10] &= 0xFFFFFFDF			  ## norflash.c:455:23
  10f056:    05 ef 20 50       	[r5+0x14] |= 0x20			  ## norflash.c:456:23
  10f05a:    c0 ef 20 50       	[r5+0x0] &= 0xFFFFFFDF			  ## norflash.c:457:23
  10f05e:    40 21             	r0 = 0x1			  ## norflash.c:458:9
  10f060:    bf ea 5e f8       	call -0xf44 <mdelay : 10e120 >			  ## norflash.c:458:9
  10f064:    40 22             	r0 = 0x2			  ## norflash.c:459:9
  10f066:    41 20             	r1 = 0x0			  ## norflash.c:459:9
  10f068:    bf ea 36 f8       	call -0xf94 <spi_cs_pu : 10e0d8 >			  ## norflash.c:459:9
  10f06c:    55 04             	{pc, r5, r4} = [sp++]			  ## norflash.c:461:1


delay:
  10f06e:    e2 9f             	sp += -0x4			  ## timer.c:34:0
  10f070:    80 20             	[sp] = r0			  ## timer.c:34:0
  10f072:    04 81             	goto 0x2 <delay+0x8 : 10f076 >			  ## timer.c:34:0
  10f074:    00 00             	nop			  ## timer.c:39:9
  10f076:    00 20             	r0 = [sp]			  ## timer.c:38:16
  10f078:    31 e1 ff 0f       	r1 = r0 + -0x1			  ## timer.c:38:16
  10f07c:    81 20             	[sp] = r1			  ## timer.c:38:16
  10f07e:    f0 5a             	if (r0 != 0) goto -0xc <delay+0x6 : 10f074 >			  ## timer.c:38:16
  10f080:    02 81             	sp += 0x4
  10f082:    80 00             	rts			  ## timer.c:42:1


_pll_init:
  10f084:    74 04             	[--sp] = {rets, r4}			  ## clock.c:158:0
  10f086:    c0 ff 00 cc 7e 04 	r0 = 0x47ecc00 <__stub_LZ4_decompress_safe_usingDict+0x46DCC04 : 47ecc00 >			  ## clock.c:117:23
  10f08c:    c3 ff 00 47 1e 00 	r3 = 0x1e4700 <__stub_LZ4_decompress_safe_usingDict+0xD4704 : 1e4700 >			  ## clock.c:117:23
  10f092:    b0 62             	[r3+0x8] = r0			  ## clock.c:117:23
  10f094:    c0 ff 5e 30 40 8a 	r0 = 0x8a40305e <__stub_LZ4_decompress_safe_usingDict+0x8A2F3062 : 8a40305e >			  ## clock.c:118:23
  10f09a:    e1 f0 76 3d       	r1 = r3 + 0x3D80  #			  ## clock.c:119:25
  10f09e:    b0 61             		 [r3+0x4] = r0			  ## clock.c:118:23
  10f0a0:    c2 ff 04 bc 02 00 	r2 = 0x2bc04 <boot_arg_list : 2bc04 >			  ## clock.c:191:27
  10f0a6:    20 61             	r0 = [r2+0x4] 			  ## clock.c:119:25
  10f0a8:    f4 e1 00 01       	r0 = r0 / r1 (u)			  ## clock.c:119:25
  10f0ac:    00 a2             	r0 = r0 << 0x2			  ## clock.c:119:25
  10f0ae:    f8 38             	r0 += -0x8			  ## clock.c:119:25
  10f0b0:    40 e1 31 05       	r0 = r0 | 0x2C400000			  ## clock.c:119:25
  10f0b4:    b0 60             	[r3+0x0] = r0			  ## clock.c:119:23
  10f0b6:    00 ef 01 30       	[r3+0x0] |= 0x1			  ## clock.c:120:22
  10f0ba:    40 2a             	r0 = 0xa			  ## clock.c:121:5
  10f0bc:    bf ea 1e f8       	call -0xfc4 <udelay : 10e0fc >			  ## clock.c:121:5
  10f0c0:    00 ef 02 30       	[r3+0x0] |= 0x2			  ## clock.c:122:22
  10f0c4:    68 20             	r0 = 0xa0			  ## clock.c:123:5
  10f0c6:    bf ea 19 f8       	call -0xfce <udelay : 10e0fc >			  ## clock.c:123:5
  10f0ca:    c4 ff 0c 00 1e 00 	r4 = 0x1e000c <__stub_LZ4_decompress_safe_usingDict+0xD0010 : 1e000c >			  ## clock.c:123:5
  10f0d0:    c1 ef 03 40       	[r4+0x4] &= 0xFFFFFFFC			  ## clock.c:168:24
  10f0d4:    02 ef 03 30       	[r3+0x8] |= 0x3			  ## clock.c:174:22
  10f0d8:    c2 ef 30 30       	[r3+0x8] &= 0xFFFFFFCF			  ## clock.c:175:22
  10f0dc:    02 ef 80 30       	[r3+0x8] |= 0x80			  ## clock.c:176:22
  10f0e0:    02 ef 03 40       	[r4+0x8] |= 0x3			  ## clock.c:178:24
  10f0e4:    c2 ef 3c 40       	[r4+0x8] &= 0xFFFFFFC3			  ## clock.c:179:24
  10f0e8:    02 ef 20 40       	[r4+0x8] |= 0x20			  ## clock.c:180:24
  10f0ec:    00 ef c0 40       	[r4+0x0] |= 0xC0			  ## clock.c:183:24
  10f0f0:    40 2a             	r0 = 0xa			  ## clock.c:186:5
  10f0f2:    51 9d             	call -0x86 <delay : 10f06e >			  ## clock.c:186:5
  10f0f4:    00 ef 80 4f       	[r4+0x0] |= 0x100			  ## clock.c:187:24
  10f0f8:    40 2a             	r0 = 0xa			  ## clock.c:188:5
  10f0fa:    51 99             	call -0x8e <delay : 10f06e >			  ## clock.c:188:5
  10f0fc:    c0 ff 00 6c dc 02 	r0 = 0x2dc6c00 <__stub_LZ4_decompress_safe_usingDict+0x2CB6C04 : 2dc6c00 >			  ## clock.c:191:27
  10f102:    a0 62             	[r2+0x8] = r0			  ## clock.c:191:27
  10f104:    54 04             	{pc, r4} = [sp++]			  ## clock.c:207:1


main:
  10f106:    c0 ff 17 18 1a 00 	r0 = 0x1a1817 <__stub_LZ4_decompress_safe_usingDict+0x9181A : 1a1816 >			  ## main.c:77:0
  10f10c:    09 40             	r1 = b[r0+0x0] (u)			  ## p33.c:49:17
  10f10e:    31 20             	r1 |= 0x1			  ## p33.c:49:17
  10f110:    89 40             	b[r0+0x0] = r1			  ## p33.c:49:17
  10f112:    c0 ff e6 a1 7f 00 	r0 = 0x7fa1e6 <__stub_LZ4_decompress_safe_usingDict+0x6EA1EA : 7fa1e6 >			  ## clock.c:61:23
  10f118:    c1 ff 20 19 1e 00 	r1 = 0x1e1920 <__stub_LZ4_decompress_safe_usingDict+0xD1924 : 1e1920 >			  ## clock.c:61:23
  10f11e:    90 61             	[r1+0x4] = r0			  ## clock.c:61:23
  10f120:    c0 ff d2 9c 19 33 	r0 = 0x33199cd2 <__stub_LZ4_decompress_safe_usingDict+0x33089CD6 : 33199cd2 >			  ## clock.c:62:23
  10f126:    90 60             	[r1+0x0] = r0			  ## clock.c:62:23
  10f128:    00 ef 01 10       	[r1+0x0] |= 0x1			  ## clock.c:63:22
  10f12c:    c0 ff e4 bc 02 00 	r0 = 0x2bce4 <mask_putchar : 2bce4 >			  ## uart.c:38:18
  10f132:    c1 ff 10 f4 10 00 	r1 = 0x10f410 <ut_empty : 10f410 >			  ## uart.c:38:18
  10f138:    81 60             	[r0+0x0] = r1			  ## uart.c:38:18
  10f13a:    bf ea 70 8a       	call -0xeb20 <nvram_boot_state : 10061e >			  ## boot_mode.c:108:25
  10f13e:    02 16             	r2 = r0			  ## boot_mode.c:108:25
  10f140:    c9 ff c0 93 02 00 	r9 = 0x293c0 <var_bss_begin : 293c0 >
  10f146:    c5 ff 00 06 1e 00 	r5 = 0x1e0600 <__stub_LZ4_decompress_safe_usingDict+0xD0604 : 1e0600 >
  10f14c:    06 e1 00 51       	r6 = r5 + 0x100
  10f150:    b2 5e             	if (r2 != 0) goto 0xfc <main+0x148 : 10f24e >
  10f152:    c0 ff ff ff 00 00 	r0 = 0xffff <os_code_size+0xDEC7 : fffe >			  ## usb_key.c:46:16
  10f158:    50 ed 95 00       	h[r9+0x4] = r0			  ## usb_key.c:46:16
  10f15c:    e4 e0 9c 5c       	r4 = r5 + 0x4E00			  ## usb_key.c:46:16
  10f160:    00 ef 04 40       	[r4+0x0] |= 0x4			  ## usb_key.c:73:5
  10f164:    00 ef 08 40       	[r4+0x0] |= 0x8			  ## usb_key.c:74:5
  10f168:    00 ef 80 4f       	[r4+0x0] |= 0x100			  ## usb_key.c:76:5
  10f16c:    00 ef 00 4f       	[r4+0x0] |= 0x200			  ## usb_key.c:77:5
  10f170:    c1 ff b0 f3 10 00 	r1 = 0x10f3b0 <usb_key_isr : 10f3b0 >			  ## usb_key.c:80:5
  10f176:    40 27             	r0 = 0x7			  ## usb_key.c:80:5
  10f178:    42 20             	r2 = 0x0			  ## usb_key.c:80:5
  10f17a:    47 20             	r7 = 0x0
  10f17c:    bf ea 47 f7       	call -0x1172 <HWI_Install : 10e00e >			  ## usb_key.c:80:5
  10f180:    40 20             	r0 = 0x0			  ## usb_key.c:81:5
  10f182:    bf ea bd f9       	call -0xc86 <set_timer3_captrue_dp : 10e500 >			  ## usb_key.c:81:5
  10f186:    e7 62             	[r6+0x8] = r7			  ## usb_key.c:83:20
  10f188:    e7 61             	[r6+0x4] = r7			  ## usb_key.c:84:20
  10f18a:    40 ea 02 60       	[r6+0x0] = 0x2			  ## usb_key.c:85:20
  10f18e:    c8 ff f8 bb 02 00 	r8 = 0x2bbf8 <g_boot_soft_flag : 2bbf8 >			  ## usb_key.c:85:20
  10f194:    50 ee 81 00       	r0 = b[r8+0x1] (u)			  ## uart_key.c:213:38
  10f198:    0b e1 08 45       	r11 = r4 + 0x508			  ## uart_key.c:213:38
  10f19c:    20 ea 10 c0       	if ((r0 & 0x10) == 0) {			  ## uart_key.c:213:38
  10f1a0:    c2 ef 01 b0       		[r11+0x8] &= 0xFFFFFFFE			  ## uart_key.c:214:46
  10f1a4:    03 ef 01 b0       		[r11+0xc] |= 0x1			  ## uart_key.c:215:46
  10f1a8:    00 ef 01 b0       		[r11+0x0] |= 0x1			  ## uart_key.c:216:47
  10f1ac:    01 ef 01 b0       		[r11+0x4] |= 0x1
                               	}			  ## uart_key.c:217:47
  10f1b0:    d0 ec 99 70       	[r9+0x8] = r7			  ## uart_key.c:195:13
  10f1b4:    bf ea e4 f8       	call -0xe38 <reset_status : 10e380 >			  ## uart_key.c:196:5
  10f1b8:    c5 ef 00 4f       	[r4+0x14] &= 0xFFFFFDFF			  ## uart_key.c:198:5
  10f1bc:    0a e1 2c 43       	r10 = r4 + 0x32c			  ## uart_key.c:198:5
  10f1c0:    40 ea 23 a0       	[r10+0x0] = 0x23			  ## uart_key.c:201:26
  10f1c4:    3c e1 00 5f       	r12 = r5 + -0x100			  ## uart_key.c:201:26
  10f1c8:    40 ea 80 cc       	[r12+0x0] = 0x4000			  ## uart_key.c:203:18
  10f1cc:    c1 ff 04 e4 10 00 	r1 = 0x10e404 <capture_isr : 10e404 >			  ## uart_key.c:204:5
  10f1d2:    40 25             	r0 = 0x5			  ## uart_key.c:204:5
  10f1d4:    42 20             	r2 = 0x0			  ## uart_key.c:204:5
  10f1d6:    bf ea 1a f7       	call -0x11cc <HWI_Install : 10e00e >			  ## uart_key.c:204:5
  10f1da:    43 ea 01 90       	[r9+0xc] = 0x1			  ## uart_key.c:205:15
  10f1de:    d0 ec c5 70       	[r12+0x4] = r7			  ## uart_key.c:206:18
  10f1e2:    d0 ec c9 70       	[r12+0x8] = r7			  ## uart_key.c:207:18
  10f1e6:    00 ef 02 c0       	[r12+0x0] |= 0x2			  ## uart_key.c:208:18
  10f1ea:    bf ea f5 f8       	call -0xe16 <set_cap_timeout : 10e3d8 >			  ## boot_mode.c:72:5
  10f1ee:    50 60             	r0 = [r5+0x0] 			  ## boot_mode.c:40:21
  10f1f0:    88 17             	r0 = r0.l (s)			  ## boot_mode.c:73:12
  10f1f2:    80 fd 10 00       	ifs (r0 < 0x0) goto 0x20 <main+0x110 : 10f216 >			  ## boot_mode.c:73:12
  10f1f6:    50 ed 94 00       	r0 = h[r9+0x4] (u)			  ## boot_mode.c:76:35
  10f1fa:    bf ea a4 f9       	call -0xcb8 <check_key_type : 10e546 >			  ## boot_mode.c:76:20
  10f1fe:    00 f8 09 02       	if (r0 == 0x1) goto 0x12 <main+0x10E : 10f214 >
  10f202:    50 ed 92 00       	r0 = h[r9+0x2] (u)			  ## boot_mode.c:83:35
  10f206:    bf ea 9e f9       	call -0xcc4 <check_key_type : 10e546 >			  ## boot_mode.c:83:20
  10f20a:    02 16             	r2 = r0			  ## boot_mode.c:83:20
  10f20c:    82 f8 ef 09       	if (r2 != 0x4) goto -0x22 <main+0xE8 : 10f1ee >
  10f210:    42 24             	r2 = 0x4
  10f212:    04 81             	goto 0x2 <main+0x110 : 10f216 >
  10f214:    42 21             	r2 = 0x1
  10f216:    43 e0 00 40       	r3 = 0x4000			  ## boot_mode.c:44:17
  10f21a:    d3 60             	[r5+0x0] = r3			  ## boot_mode.c:44:17
  10f21c:    40 20             	r0 = 0x0			  ## usb_key.c:90:5
  10f21e:    bf ea a5 f9       	call -0xcb6 <set_timer3_captrue_dp_disable : 10e56c >			  ## usb_key.c:90:5
  10f222:    00 ef 04 40       	[r4+0x0] |= 0x4			  ## usb_key.c:91:5
  10f226:    00 ef 08 40       	[r4+0x0] |= 0x8			  ## usb_key.c:92:5
  10f22a:    c0 ef 40 40       	[r4+0x0] &= 0xFFFFFFBF			  ## usb_key.c:94:5
  10f22e:    c0 ef 80 40       	[r4+0x0] &= 0xFFFFFF7F			  ## usb_key.c:95:5
  10f232:    c0 ef 10 40       	[r4+0x0] &= 0xFFFFFFEF			  ## usb_key.c:97:5
  10f236:    c0 ef 20 40       	[r4+0x0] &= 0xFFFFFFDF			  ## usb_key.c:98:5
  10f23a:    50 ee 81 00       	r0 = b[r8+0x1] (u)			  ## uart_key.c:229:38
  10f23e:    20 ea 10 00       	if ((r0 & 0x10) == 0) {			  ## uart_key.c:229:38
  10f242:    c3 ef 01 b0       		[r11+0xc] &= 0xFFFFFFFE
                               	}			  ## uart_key.c:230:46
  10f246:    d0 ec c1 30       	[r12+0x0] = r3			  ## uart_key.c:80:18
  10f24a:    d0 ec a1 70       	[r10+0x0] = r7			  ## uart_key.c:81:26
  10f24e:    30 e1 ff 2f       	r0 = r2 + -0x1			  ## main.c:105:5
  10f252:    c1 ff 04 bc 02 00 	r1 = 0x2bc04 <boot_arg_list : 2bc04 >
  10f258:    80 f9 08 04       	if (r0 < 0x2) goto 0x10 <main+0x166 : 10f26c >			  ## main.c:105:5
  10f25c:    30 e1 fd 2f       	r0 = r2 + -0x3
  10f260:    00 fc 08 02       	if (r0 > 0x1) goto 0x10 <main+0x16E : 10f274 >
  10f264:    40 20             	r0 = 0x0			  ## main.c:110:9
  10f266:    bf ea a4 fa       	call -0xab8 <uart_upgrade_init : 10e7b2 >			  ## main.c:110:9
  10f26a:    34 8d             	goto 0xda <main+0x240 : 10f346 >
  10f26c:    40 23             	r0 = 0x3			  ## main.c:117:9
  10f26e:    bf ea fb fa       	call -0xa0a <check_usb_sof : 10e868 >			  ## main.c:117:9
  10f272:    34 89             	goto 0xd2 <main+0x240 : 10f346 >
  10f274:    c2 14             	r10 = 0
  10f276:    52 ee 10 a0       	b[r1+0x0] = r10			  ## main.c:34:31
  10f27a:    cb ff 00 bc 02 00 	r11 = 0x2bc00 <g_spi_boot_port : 2bc00 >			  ## main.c:34:31
  10f280:    c7 ff f0 bb 02 00 	r7 = 0x2bbf0 <spi_port : 2bbf0 >			  ## main.c:34:31
  10f286:    48 e0 00 40       	r8 = 0x4000			  ## main.c:34:31
  10f28a:    4f e0 01 00       	r15 = 0x1			  ## main.c:34:31
  10f28e:    cc ff 90 40 10 00 	r12 = 0x104090 <norflash_check_in.spi0_portb_config : 104090 >			  ## main.c:34:31
  10f294:    c6 14             	r14 = 0			  ## main.c:34:31
  10f296:    04 83             	goto 0x6 <main+0x198 : 10f29e >			  ## main.c:34:31
  10f298:    bf ea 77 f9       	call -0xd12 <wdt_clr : 10e58a >			  ## main.c:63:9
  10f29c:    de 16             	r14 = r13			  ## main.c:63:9
  10f29e:    50 ee b0 40       	r4 = b[r11+0x0] (u)			  ## boot_init.c:79:12
  10f2a2:    54 e8 0d 08       	if ((r4 & 0x2) == 0) goto 0x1a <main+0x1BA : 10f2c0 >
  10f2a6:    52 ee 74 f0       	b[r7+0x4] = r15			  ## boot_flash.c:106:24
  10f2aa:    d0 ec 71 c0       	[r7+0x0] = r12			  ## boot_flash.c:107:32
  10f2ae:    40 22             	r0 = 0x2			  ## boot_flash.c:109:9
  10f2b0:    41 2a             	r1 = 0xa			  ## boot_flash.c:109:9
  10f2b2:    bf ea 3e f7       	call -0x1184 <flash_poweron : 10e132 >			  ## boot_flash.c:109:9
  10f2b6:    bf ea 71 fd       	call -0x51e <run_flash : 10ed9c >			  ## boot_flash.c:111:9
  10f2ba:    40 22             	r0 = 0x2			  ## boot_flash.c:113:9
  10f2bc:    bf ea a7 fe       	call -0x2b2 <flash_poweroff : 10f00e >			  ## boot_flash.c:113:9
  10f2c0:    54 e8 0f 00       	if ((r4 & 0x1) == 0) goto 0x1e <main+0x1DC : 10f2e2 >
  10f2c4:    52 ee 74 f0       	b[r7+0x4] = r15			  ## boot_flash.c:124:24
  10f2c8:    c0 ff 94 40 10 00 	r0 = 0x104094 <norflash_check_in.spi0_porta_config : 104094 >			  ## boot_flash.c:125:32
  10f2ce:    f0 60             	[r7+0x0] = r0			  ## boot_flash.c:125:32
  10f2d0:    40 21             	r0 = 0x1			  ## boot_flash.c:127:9
  10f2d2:    41 2a             	r1 = 0xa			  ## boot_flash.c:127:9
  10f2d4:    bf ea 2d f7       	call -0x11a6 <flash_poweron : 10e132 >			  ## boot_flash.c:127:9
  10f2d8:    bf ea 60 fd       	call -0x540 <run_flash : 10ed9c >			  ## boot_flash.c:129:9
  10f2dc:    40 21             	r0 = 0x1			  ## boot_flash.c:131:9
  10f2de:    bf ea 96 fe       	call -0x2d4 <flash_poweroff : 10f00e >			  ## boot_flash.c:131:9
  10f2e2:    8e f8 2b 00       	if (r14 != 0x0) goto 0x56 <main+0x236 : 10f33c >
  10f2e6:    d0 ec 51 80       	[r5+0x0] = r8			  ## clock.c:216:20
  10f2ea:    d0 ec 61 80       	[r6+0x0] = r8			  ## clock.c:217:20
  10f2ee:    30 e1 0c 5a       	r0 = r5 + -0x5f4			  ## clock.c:220:24
  10f2f2:    c0 ef 30 00       	[r0+0x0] &= 0xFFFFFFCF			  ## clock.c:220:24
  10f2f6:    42 ea ff 63       	[r6+0x8] = 0xFFFFFFFF			  ## clock.c:221:20
  10f2fa:    d0 ec 65 a0       	[r6+0x4] = r10			  ## clock.c:222:20
  10f2fe:    40 e0 89 40       	r0 = 0x4089			  ## clock.c:223:20
  10f302:    e0 60             	[r6+0x0] = r0			  ## clock.c:223:20
  10f304:    42 ea fa 5c       	[r5+0x8] = 0x7D00			  ## clock.c:225:20
  10f308:    d0 ec 55 a0       	[r5+0x4] = r10			  ## clock.c:226:20
  10f30c:    40 e0 01 40       	r0 = 0x4001			  ## clock.c:227:20
  10f310:    d0 60             	[r5+0x0] = r0			  ## clock.c:227:20
  10f312:    c5 d4             	r13 = 0  #
  10f314:    50 60             		 r0 = [r5+0x0] 			  ## clock.c:231:24
  10f316:    88 17             	r0 = r0.l (s)			  ## clock.c:231:28
  10f318:    80 fd 06 00       	ifs (r0 < 0x0) goto 0xc <main+0x222 : 10f328 >			  ## clock.c:231:28
  10f31c:    60 61             	r0 = [r6+0x4] 			  ## clock.c:235:24
  10f31e:    80 f9 f8 17       	if (r0 < 0xb) goto -0x10 <main+0x20C : 10f312 >			  ## clock.c:235:24
  10f322:    4e e0 01 00       	r14 = 0x1
  10f326:    04 81             	goto 0x2 <main+0x224 : 10f32a >
  10f328:    c6 14             	r14 = 0
  10f32a:    d0 ec 61 80       	[r6+0x0] = r8			  ## clock.c:241:20
  10f32e:    d0 ec 51 80       	[r5+0x0] = r8			  ## clock.c:242:20
  10f332:    40 21             	r0 = 0x1			  ## main.c:50:13
  10f334:    bf ea 3d fa       	call -0xb86 <uart_upgrade_init : 10e7b2 >			  ## main.c:50:13
  10f338:    0e f8 ae 01       	if (r14 == 0x0) goto -0xa4 <main+0x192 : 10f298 >
  10f33c:    40 20             	r0 = 0x0			  ## main.c:57:23
  10f33e:    bf ea 93 fa       	call -0xada <check_usb_sof : 10e868 >			  ## main.c:57:23
  10f342:    ed 16             	r13 = r14
  10f344:    50 49             	if (r0 == 0) goto -0xae <main+0x192 : 10f298 >
  10f346:    c0 ff 05 18 1a 00 	r0 = 0x1a1805 <__stub_LZ4_decompress_safe_usingDict+0x91808 : 1a1804 >
  10f34c:    09 40             	r1 = b[r0+0x0] (u)			  ## main.c:129:5
  10f34e:    71 e1 07 10       	r1 = r1 & 0xFFFFFFF8			  ## main.c:129:5
  10f352:    41 e1 06 10       	r1 = r1 | 0x6			  ## main.c:129:5
  10f356:    43 f0 a0 0f       	r3 = 0xfa0  #			  ## main.c:129:5
  10f35a:    89 40             		 b[r0+0x0] = r1			  ## main.c:129:5
  10f35c:    d0 ec 90 12       	r1 = [r9+0x20]			  ## main.c:129:5
  10f360:    c7 ff 04 bc 02 00 	r7 = 0x2bc04 <boot_arg_list : 2bc04 >			  ## main.c:129:5
  10f366:    41 ea 00 70       	[r7+0x4] = 0x0			  ## clock.c:142:28
  10f36a:    30 e1 60 10       	r0 = r1 + -0xfa0			  ## clock.c:144:10
  10f36e:    a2 e0 00 10       	r2 = 0x0 - r1			  ## clock.c:144:10
  10f372:    c1 ff 00 09 3d 00 	r1 = 0x3d0900 <__stub_LZ4_decompress_safe_usingDict+0x2C0904 : 3d0900 >			  ## clock.c:144:10
  10f378:    c4 ff 80 bb 00 00 	r4 = 0xbb80 <os_code_size+0x9A49 : bb80 >			  ## clock.c:144:10
  10f37e:    e5 e0 fd 5c       	r5 = r5 + 0x7E80			  ## clock.c:144:10
  10f382:    04 85             	goto 0xa <main+0x288 : 10f38e >			  ## clock.c:144:10
  10f384:    51 18             	r1 += r5			  ## clock.c:144:5
  10f386:    30 e1 30 08       	r0 = r0 + -0x7d0			  ## clock.c:144:5
  10f38a:    03 e1 d0 37       	r3 = r3 + 0x7d0			  ## clock.c:144:44
  10f38e:    04 ec 08 30       	if (r3 > r4) goto 0x10 <main+0x29C : 10f3a2 >
  10f392:    ae 1c             	r6 = r2 + r3			  ## clock.c:146:13
  10f394:    b6 ee ff 0f       	ifs (r6 <= -0x1) {			  ## clock.c:146:13
  10f398:    06 16             		r6 = r0
                               	}			  ## clock.c:146:13
  10f39a:    0c ff e8 63 f2 ff 	ifs (r6 > 0x3e8) goto -0x1c <main+0x27E : 10f384 >			  ## clock.c:146:13
  10f3a0:    f1 61             	[r7+0x4] = r1			  ## clock.c:147:36
  10f3a2:    bf ea 6f fe       	call -0x322 <_pll_init : 10f084 >			  ## clock.c:211:5
  10f3a6:    48 32             	r0 = 0x32			  ## clock.c:212:5
  10f3a8:    bf ea ba f6       	call -0x128c <mdelay : 10e120 >			  ## clock.c:212:5
  10f3ac:    bf ea 78 a1       	call -0xbd10 <usb_slave_mode : 1036a0 >			  ## main.c:135:5


usb_key_isr:
  10f3b0:    e9 04             	[--sp] = {psr, rets, reti}			  ## usb_key.c:17:0
  10f3b2:    d8 e8 07 00       	[--sp] = {r2-r0}			  ## usb_key.c:20:20
  10f3b6:    c0 ff 00 07 1e 00 	r0 = 0x1e0700 <__stub_LZ4_decompress_safe_usingDict+0xD0704 : 1e0700 >			  ## usb_key.c:20:20
  10f3bc:    00 ef 80 0c       	[r0+0x0] |= 0x4000			  ## usb_key.c:20:20
  10f3c0:    10 e1 00 01       	r0 = r0 + 0x1100			  ## usb_key.c:22:9
  10f3c4:    00 60             	r0 = [r0+0x0] 			  ## usb_key.c:22:9
  10f3c6:    c1 ff c0 93 02 00 	r1 = 0x293c0 <var_bss_begin : 293c0 >			  ## usb_key.c:22:9
  10f3cc:    b0 f1 04 08       	r0 = uextra(r0, p:0x10, l:0x1)  #			  ## usb_key.c:22:9
  10f3d0:    1a 62             		 r2 = h[r1+0x4] (u)			  ## usb_key.c:22:9
  10f3d2:    a0 e1 fc 20       	r0 <= insert(r2, p:0x1, l:0x1f)			  ## usb_key.c:22:9
  10f3d6:    98 62             	h[r1+0x4] = r0			  ## usb_key.c:22:9
  10f3d8:    41 f0 ef 16       	r1 = 0x16ef  #			  ## usb_key.c:28:20
  10f3dc:    18 62             		 r0 = h[r1+0x4] (u)			  ## usb_key.c:28:9
  10f3de:    81 e8 13 00       	if (r0 != r1) goto 0x26 <usb_key_isr+0x58 : 10f408 >			  ## usb_key.c:28:9
  10f3e2:    40 20             	r0 = 0x0
  10f3e4:    c1 ff 00 54 1e 00 	r1 = 0x1e5400 <__stub_LZ4_decompress_safe_usingDict+0xD5404 : 1e5400 >
  10f3ea:    d2 ec 15 08       	[r1+0x284] = r0			  ## usb_key.c:30:28
  10f3ee:    d2 ec 11 08       	[r1+0x280] = r0			  ## usb_key.c:31:28
  10f3f2:    c0 ef 01 10       	[r1+0x0] &= 0xFFFFFFFE			  ## usb_key.c:32:9
  10f3f6:    c0 ef 02 10       	[r1+0x0] &= 0xFFFFFFFD			  ## usb_key.c:33:9
  10f3fa:    c0 ef 04 10       	[r1+0x0] &= 0xFFFFFFFB			  ## usb_key.c:34:9
  10f3fe:    c0 ef 08 10       	[r1+0x0] &= 0xFFFFFFF7			  ## usb_key.c:35:9
  10f402:    40 22             	r0 = 0x2			  ## usb_key.c:36:9
  10f404:    bf ea 8c f6       	call -0x12e8 <mdelay : 10e120 >			  ## usb_key.c:36:9
  10f408:    d4 e8 07 00       	{r2-r0} = [sp++]			  ## usb_key.c:38:1
  10f40c:    a9 04             	{psr, rets, reti} = [sp++]			  ## usb_key.c:38:1
  10f40e:    81 00             	rti			  ## usb_key.c:38:1


ut_empty:
  10f410:    80 00             	rts			  ## uart.c:19:0


putchar:
  10f412:    c1 ff e4 bc 02 00 	r1 = 0x2bce4 <mask_putchar : 2bce4 >			  ## uart.c:44:0
  10f418:    11 60             	r1 = [r1+0x0] 			  ## uart.c:45:5
  10f41a:    d1 00             	goto r1			  ## uart.c:45:5


switch_to_hrc_asm:
  10f41c:    c0 ff 0c 00 1e 00 	r0 = 0x1e000c <__stub_LZ4_decompress_safe_usingDict+0xD0010 : 1e000c >			  ## clock.c:248:0
  10f422:    00 ef 01 00       	[r0+0x0] |= 0x1			  ## clock.c:249:24
  10f426:    00 ef 02 00       	[r0+0x0] |= 0x2			  ## clock.c:250:24
  10f42a:    00 00             	nop			  ## clock.c:251:5
  10f42c:    00 00             	nop			  ## clock.c:252:5
  10f42e:    00 00             	nop			  ## clock.c:253:5
  10f430:    c0 ef 80 0f       	[r0+0x0] &= 0xFFFFFEFF			  ## clock.c:254:24
  10f434:    80 00             	rts			  ## clock.c:255:1


tmr3_isr:
  10f436:    e9 04             	[--sp] = {psr, rets, reti}			  ## clock.c:293:0
  10f438:    d8 e8 1f 00       	[--sp] = {r4-r0}			  ## clock.c:299:5
  10f43c:    58 24             	r0 = 0x64			  ## clock.c:299:5
  10f43e:    bf ea 16 fe       	call -0x3d4 <delay : 10f06e >			  ## clock.c:299:5
  10f442:    c2 ff 00 07 1e 00 	r2 = 0x1e0700 <__stub_LZ4_decompress_safe_usingDict+0xD0704 : 1e0700 >			  ## clock.c:299:5
  10f448:    00 ef 80 2c       	[r2+0x0] |= 0x4000			  ## clock.c:300:20
  10f44c:    21 62             	r1 = [r2+0x8] 			  ## clock.c:302:30
  10f44e:    c0 ff c0 93 02 00 	r0 = 0x293c0 <var_bss_begin : 293c0 >			  ## clock.c:302:30
  10f454:    04 69             	r4 = [r0+0x24] 			  ## clock.c:302:36
  10f456:    11 df             	r1 = r1 - r4  #			  ## clock.c:302:34
  10f458:    23 62             		 r3 = [r2+0x8] 			  ## clock.c:303:27
  10f45a:    83 69             	[r0+0x24] = r3			  ## clock.c:303:14
  10f45c:    03 6a             	r3 = [r0+0x28] 			  ## clock.c:310:21
  10f45e:    34 e1 fc 3e       	r4 = r3 + -0x104			  ## clock.c:310:30
  10f462:    84 ec 10 10       	if (r1 <= r4) goto 0x20 <tmr3_isr+0x50 : 10f486 >			  ## clock.c:310:30
  10f466:    03 e1 04 31       	r3 = r3 + 0x104			  ## clock.c:310:62
  10f46a:    03 e9 0c 10       	if (r1 >= r3) goto 0x18 <tmr3_isr+0x50 : 10f486 >			  ## clock.c:310:62
  10f46e:    68 e8 20 01       	[r0+0x20] += r1			  ## clock.c:311:23
  10f472:    03 6b             	r3 = [r0+0x2c] 			  ## clock.c:313:16
  10f474:    c3 21             	r3 += 0x1			  ## clock.c:313:16
  10f476:    83 6b             	[r0+0x2c] = r3			  ## clock.c:313:16
  10f478:    33 e8 04 40       	if (r3 == 0x4) {			  ## clock.c:313:16
  10f47c:    40 ea 80 2c       		[r2+0x0] = 0x4000			  ## clock.c:316:28
  10f480:    4c ea 01 00       		[r0+0x30] = 0x1
                               	}			  ## clock.c:318:26
  10f484:    04 83             	goto 0x6 <tmr3_isr+0x56 : 10f48c >			  ## clock.c:318:26
  10f486:    42 20             	r2 = 0x0
  10f488:    82 6b             	[r0+0x2c] = r2			  ## clock.c:321:17
  10f48a:    82 68             	[r0+0x20] = r2			  ## clock.c:322:23
  10f48c:    81 6a             	[r0+0x28] = r1			  ## clock.c:325:14
  10f48e:    d4 e8 1f 00       	{r4-r0} = [sp++]			  ## clock.c:326:1
  10f492:    a9 04             	{psr, rets, reti} = [sp++]			  ## clock.c:326:1
  10f494:    81 00             	rti			  ## clock.c:326:1


sfc_suspend:
  10f496:    20 00             	csync			  ## sfc.c:7:0
  10f498:    c1 ff 00 e4 1b 00 	r1 = 0x1be400 <__stub_LZ4_decompress_safe_usingDict+0xAE404 : 1be400 >			  ## sfc.c:9:5
  10f49e:    12 60             	r2 = [r1+0x0] 			  ## sfc.c:9:5
  10f4a0:    72 fe fd ff       	ifs (r2 > -0x1) goto -0x6 <sfc_suspend+0x8 : 10f49e >			  ## sfc.c:9:5
  10f4a4:    20 00             	csync			  ## sfc.c:10:5
  10f4a6:    c1 ff 00 05 1b 00 	r1 = 0x1b0500 <__stub_LZ4_decompress_safe_usingDict+0xA0504 : 1b0500 >			  ## sfc.c:10:5
  10f4ac:    12 60             	r2 = [r1+0x0] 			  ## sfc.c:10:5
  10f4ae:    72 fe fd ff       	ifs (r2 > -0x1) goto -0x6 <sfc_suspend+0x16 : 10f4ac >			  ## sfc.c:10:5
  10f4b2:    c1 ff 00 02 1f 00 	r1 = 0x1f0200 <__stub_LZ4_decompress_safe_usingDict+0xE0204 : 1f0200 >
  10f4b8:    12 60             	r2 = [r1+0x0] 			  ## sfc.c:13:20
  10f4ba:    82 fd fd 01       	ifs (r2 < 0x0) goto -0x6 <sfc_suspend+0x22 : 10f4b8 >			  ## sfc.c:13:5
  10f4be:    c0 ef 01 10       	[r1+0x0] &= 0xFFFFFFFE			  ## sfc.c:15:17
  10f4c2:    b0 e8 00 40       	if (r0 != 0x0) {			  ## sfc.c:15:17
  10f4c6:    c0 ff 00 1c 1e 00 		r0 = 0x1e1c00 <__stub_LZ4_decompress_safe_usingDict+0xD1C04 : 1e1c00 >			  ## sfc.c:17:22
  10f4cc:    00 ef 01 00       		[r0+0x0] |= 0x1
                               	}			  ## sfc.c:17:22
  10f4d0:    80 00             	rts			  ## sfc.c:19:1


sfc_resume:
  10f4d2:    b0 e8 00 40       	if (r0 != 0x0) {			  ## sfc.c:22:0
  10f4d6:    c0 ff 00 1c 1e 00 		r0 = 0x1e1c00 <__stub_LZ4_decompress_safe_usingDict+0xD1C04 : 1e1c00 >			  ## sfc.c:25:22
  10f4dc:    c0 ef 01 00       		[r0+0x0] &= 0xFFFFFFFE
                               	}			  ## sfc.c:25:22
  10f4e0:    c0 ff 00 02 1f 00 	r0 = 0x1f0200 <__stub_LZ4_decompress_safe_usingDict+0xE0204 : 1f0200 >			  ## sfc.c:27:17
  10f4e6:    00 ef 01 00       	[r0+0x0] |= 0x1			  ## sfc.c:27:17
  10f4ea:    80 00             	rts			  ## sfc.c:30:1


IcuCmdKst:
  10f4ec:    e1 00             	cli r1			  ## cache.c:90:0
  10f4ee:    20 00             	csync			  ## cache.c:92:5
  10f4f0:    c2 ff 00 e4 1b 00 	r2 = 0x1be400 <__stub_LZ4_decompress_safe_usingDict+0xAE404 : 1be400 >			  ## cache.c:92:5
  10f4f6:    23 60             	r3 = [r2+0x0] 			  ## cache.c:92:5
  10f4f8:    73 fe fd ff       	ifs (r3 > -0x1) goto -0x6 <IcuCmdKst+0xA : 10f4f6 >			  ## cache.c:92:5
  10f4fc:    60 e0 4a 34       	r3 = 0xCA000000			  ## cache.c:93:50
  10f500:    94 e1 30 00       	r0 = r3 | (1 << r0)			  ## cache.c:93:50
  10f504:    a0 64             	[r2+0x10] = r0			  ## cache.c:93:37
  10f506:    20 00             	csync			  ## cache.c:94:5
  10f508:    20 60             	r0 = [r2+0x0] 			  ## cache.c:94:5
  10f50a:    70 fe fd ff       	ifs (r0 > -0x1) goto -0x6 <IcuCmdKst+0x1C : 10f508 >			  ## cache.c:94:5
  10f50e:    f1 00             	sti r1			  ## hwi.h:107:5
  10f510:    80 00             	rts			  ## cache.c:96:1


IcuCmdSend:
  10f512:    74 04             	[--sp] = {rets, r4}			  ## cache.c:108:0
  10f514:    e4 00             	cli r4			  ## hwi.h:101:5
  10f516:    c3 ff 14 e4 1b 00 	r3 = 0x1be414 <__stub_LZ4_decompress_safe_usingDict+0xAE418 : 1be414 >
  10f51c:    10 d8             	r0 += r1  #			  ## cache.c:111:48
  10f51e:    b0 60             		 [r3+0x0] = r0			  ## cache.c:110:37
  10f520:    f8 3f             	r0 += -0x1			  ## cache.c:111:54
  10f522:    b0 61             	[r3+0x4] = r0			  ## cache.c:111:37
  10f524:    40 21             	r0 = 0x1			  ## cache.c:113:19
  10f526:    21 ed 80 0d       	ifs (r1 >= 0x1000) {			  ## cache.c:113:19
  10f52a:    40 20             		r0 = 0x0
                               	}			  ## cache.c:113:19
  10f52c:    20 18             	r0 += r2			  ## cache.c:113:19
  10f52e:    61 9e             	call -0x44 <IcuCmdKst : 10f4ec >			  ## cache.c:114:5
  10f530:    f4 00             	sti r4			  ## hwi.h:107:5
  10f532:    54 04             	{pc, r4} = [sp++]			  ## cache.c:116:1


DcuCmdKst:
  10f534:    e1 00             	cli r1			  ## cache.c:99:0
  10f536:    20 00             	csync			  ## cache.c:101:5
  10f538:    c2 ff 00 05 1b 00 	r2 = 0x1b0500 <__stub_LZ4_decompress_safe_usingDict+0xA0504 : 1b0500 >			  ## cache.c:101:5
  10f53e:    23 60             	r3 = [r2+0x0] 			  ## cache.c:101:5
  10f540:    73 fe fd ff       	ifs (r3 > -0x1) goto -0x6 <DcuCmdKst+0xA : 10f53e >			  ## cache.c:101:5
  10f544:    60 e0 4a 34       	r3 = 0xCA000000			  ## cache.c:102:34
  10f548:    94 e1 30 00       	r0 = r3 | (1 << r0)			  ## cache.c:102:34
  10f54c:    a0 64             	[r2+0x10] = r0			  ## cache.c:102:21
  10f54e:    20 00             	csync			  ## cache.c:103:5
  10f550:    20 60             	r0 = [r2+0x0] 			  ## cache.c:103:5
  10f552:    70 fe fd ff       	ifs (r0 > -0x1) goto -0x6 <DcuCmdKst+0x1C : 10f550 >			  ## cache.c:103:5
  10f556:    f1 00             	sti r1			  ## hwi.h:107:5
  10f558:    80 00             	rts			  ## cache.c:105:1


DcuCmdSend:
  10f55a:    74 04             	[--sp] = {rets, r4}			  ## cache.c:119:0
  10f55c:    e4 00             	cli r4			  ## hwi.h:101:5
  10f55e:    c3 ff 14 05 1b 00 	r3 = 0x1b0514 <__stub_LZ4_decompress_safe_usingDict+0xA0518 : 1b0514 >
  10f564:    10 d8             	r0 += r1  #			  ## cache.c:122:32
  10f566:    b0 60             		 [r3+0x0] = r0			  ## cache.c:121:21
  10f568:    f8 3f             	r0 += -0x1			  ## cache.c:122:38
  10f56a:    b0 61             	[r3+0x4] = r0			  ## cache.c:122:21
  10f56c:    40 21             	r0 = 0x1			  ## cache.c:124:19
  10f56e:    21 ed 00 0e       	ifs (r1 >= 0x800) {			  ## cache.c:124:19
  10f572:    40 20             		r0 = 0x0
                               	}			  ## cache.c:124:19
  10f574:    20 18             	r0 += r2			  ## cache.c:124:19
  10f576:    61 9e             	call -0x44 <DcuCmdKst : 10f534 >			  ## cache.c:125:5
  10f578:    f4 00             	sti r4			  ## hwi.h:107:5
  10f57a:    54 04             	{pc, r4} = [sp++]			  ## cache.c:127:1


DcuFlushinvRegion:
  10f57c:    42 25             	r2 = 0x5			  ## cache.c:173:0
  10f57e:    f7 8d             	goto -0x26 <DcuCmdSend : 10f55a >			  ## cache.c:174:5


sfc_drop_cache:
  10f580:    75 04             	[--sp] = {rets, r5, r4}			  ## sfc.c:32:0
  10f582:    14 16             	r4 = r1			  ## sfc.c:32:0
  10f584:    05 16             	r5 = r0			  ## sfc.c:32:0
  10f586:    42 25             	r2 = 0x5			  ## cache.c:146:5
  10f588:    61 84             	call -0x78 <IcuCmdSend : 10f512 >			  ## cache.c:146:5
  10f58a:    50 16             	r0 = r5			  ## sfc.c:34:5
  10f58c:    41 16             	r1 = r4			  ## sfc.c:34:5
  10f58e:    35 04             	{rets, r5, r4} = [sp++]			  ## sfc.c:34:5
  10f590:    f7 95             	goto -0x16 <DcuFlushinvRegion : 10f57c >			  ## sfc.c:34:5


flush_dcache:
  10f592:    80 00             	rts			  ## sfc.c:38:0


flushinv_dcache:
  10f594:    f7 93             	goto -0x1a <DcuFlushinvRegion : 10f57c >			  ## sfc.c:43:0


skip_atoi:
  10f596:    02 60             	r2 = [r0+0x0] 			  ## printf-stdarg.c:18:0
  10f598:    41 20             	r1 = 0x0			  ## printf-stdarg.c:18:0
  10f59a:    04 89             	goto 0x12 <skip_atoi+0x18 : 10f5ae >			  ## printf-stdarg.c:18:0
  10f59c:    2b 81             	r3 = r2 + 0x1			  ## printf-stdarg.c:21:29
  10f59e:    e1 f1 0a 10       	r1 = r1 * 0xA  #			  ## printf-stdarg.c:21:15
  10f5a2:    83 60             		 [r0+0x0] = r3			  ## printf-stdarg.c:21:29
  10f5a4:    54 ee 20 20       	r2 = b[r2+0x0] (s)			  ## printf-stdarg.c:21:22
  10f5a8:    21 18             	r1 += r2			  ## printf-stdarg.c:21:20
  10f5aa:    f1 30             	r1 += -0x30			  ## printf-stdarg.c:21:33
  10f5ac:    32 16             	r2 = r3			  ## printf-stdarg.c:20:12
  10f5ae:    2b 40             	r3 = b[r2+0x0] (u)			  ## printf-stdarg.c:20:12
  10f5b0:    f3 30             	r3 += -0x30			  ## printf-stdarg.c:20:12
  10f5b2:    33 17             	r3 = r3.b0 (u)			  ## printf-stdarg.c:20:12
  10f5b4:    83 fc f2 13       	if (r3 <= 0x9) goto -0x1c <skip_atoi+0x6 : 10f59c >			  ## printf-stdarg.c:20:12
  10f5b8:    10 16             	r0 = r1			  ## printf-stdarg.c:23:5
  10f5ba:    80 00             	rts			  ## printf-stdarg.c:23:5


printchar:
  10f5bc:    74 04             	[--sp] = {rets, r4}			  ## printf-stdarg.c:29:0
  10f5be:    00 49             	if (r0 == 0) goto 0x12 <printchar+0x16 : 10f5d2 >			  ## printf-stdarg.c:30:9
  10f5c0:    04 60             	r4 = [r0+0x0] 
  10f5c2:    01 43             	if (r1 == 0) goto 0x6 <printchar+0xE : 10f5ca >
  10f5c4:    43 20             	r3 = 0x0
  10f5c6:    01 e9 0b 40       	if (r4 >= r1) goto 0x16 <printchar+0x24 : 10f5e0 >
  10f5ca:    ca 40             	b[r4+0x0] = r2			  ## printf-stdarg.c:34:15
  10f5cc:    c0 eb 01 00       	[r0+0x0] += 0x1			  ## printf-stdarg.c:35:9
  10f5d0:    04 86             	goto 0xc <printchar+0x22 : 10f5de >			  ## printf-stdarg.c:35:9
  10f5d2:    c0 ff e4 bc 02 00 	r0 = 0x2bce4 <mask_putchar : 2bce4 >			  ## uart.c:45:5
  10f5d8:    28 d7             	r0 = r2.b0 (s)  #			  ## uart.c:45:5
  10f5da:    01 60             		 r1 = [r0+0x0] 			  ## uart.c:45:5
  10f5dc:    c1 00             	call r1			  ## uart.c:45:5
  10f5de:    43 21             	r3 = 0x1
  10f5e0:    30 16             	r0 = r3			  ## printf-stdarg.c:45:1
  10f5e2:    54 04             	{pc, r4} = [sp++]			  ## printf-stdarg.c:45:1


prints:
  10f5e4:    79 04             	[--sp] = {rets, r9-r4}			  ## printf-stdarg.c:57:0
  10f5e6:    36 16             	r6 = r3			  ## printf-stdarg.c:57:0
  10f5e8:    27 16             	r7 = r2			  ## printf-stdarg.c:57:0
  10f5ea:    19 16             	r9 = r1			  ## printf-stdarg.c:57:0
  10f5ec:    05 16             	r5 = r0			  ## printf-stdarg.c:57:0
  10f5ee:    86 fd 22 02       	ifs (r6 < 0x1) goto 0x44 <prints+0x52 : 10f636 >			  ## printf-stdarg.c:57:0
  10f5f2:    01 27             	r1 = [sp+28]			  ## printf-stdarg.c:57:0
  10f5f4:    40 20             	r0 = 0x0			  ## printf-stdarg.c:57:0
  10f5f6:    04 81             	goto 0x2 <prints+0x16 : 10f5fa >			  ## printf-stdarg.c:57:0
  10f5f8:    c0 21             	r0 += 0x1			  ## printf-stdarg.c:64:13
  10f5fa:    d8 ee 70 20       	r2 = b[r7+r0] (u)			  ## printf-stdarg.c:63:28
  10f5fe:    f2 5c             	if (r2 != 0) goto -0x8 <prints+0x14 : 10f5f8 >			  ## printf-stdarg.c:63:28
  10f600:    34 e4 61 20       	r2 = smax(r6, r0)			  ## printf-stdarg.c:71:13
  10f604:    22 1e             	r2 = r2 - r0			  ## printf-stdarg.c:71:13
  10f606:    13 a3             	r3 = r1 << 0x3			  ## printf-stdarg.c:71:13
  10f608:    63 e1 10 30       	r3 = r3 & 0x10			  ## printf-stdarg.c:71:13
  10f60c:    48 e1 20 30       	r8 = r3 | 0x20			  ## printf-stdarg.c:71:13
  10f610:    44 20             	r4 = 0x0
  10f612:    51 e8 14 02       	if ((r1 & 0x1) != 0) goto 0x28 <prints+0x5A : 10f63e >
  10f616:    82 fd 12 02       	ifs (r2 < 0x1) goto 0x24 <prints+0x5A : 10f63e >
  10f61a:    60 1e             	r0 = r6 - r0			  ## printf-stdarg.c:69:19
  10f61c:    06 16             	r6 = r0
  10f61e:    50 16             	r0 = r5			  ## printf-stdarg.c:77:17
  10f620:    91 16             	r1 = r9			  ## printf-stdarg.c:77:17
  10f622:    82 16             	r2 = r8			  ## printf-stdarg.c:77:17
  10f624:    61 8b             	call -0x6a <printchar : 10f5bc >			  ## printf-stdarg.c:77:17
  10f626:    00 52             	if (r0 == 0) goto 0x24 <prints+0x68 : 10f64c >			  ## printf-stdarg.c:77:17
  10f628:    30 e1 ff 6f       	r0 = r6 + -0x1			  ## printf-stdarg.c:76:27
  10f62c:    c4 21             	r4 += 0x1			  ## printf-stdarg.c:80:13
  10f62e:    06 fe f5 03       	ifs (r6 > 0x1) goto -0x16 <prints+0x38 : 10f61c >
  10f632:    06 16             	r6 = r0
  10f634:    04 8b             	goto 0x16 <prints+0x68 : 10f64c >
  10f636:    44 20             	r4 = 0x0
  10f638:    48 e0 20 00       	r8 = 0x20
  10f63c:    04 87             	goto 0xe <prints+0x68 : 10f64c >
  10f63e:    26 16             	r6 = r2
  10f640:    04 85             	goto 0xa <prints+0x68 : 10f64c >
  10f642:    50 16             	r0 = r5			  ## printf-stdarg.c:84:13
  10f644:    91 16             	r1 = r9			  ## printf-stdarg.c:84:13
  10f646:    51 9a             	call -0x8c <printchar : 10f5bc >			  ## printf-stdarg.c:84:13
  10f648:    00 44             	if (r0 == 0) goto 0x8 <prints+0x6E : 10f652 >			  ## printf-stdarg.c:84:13
  10f64a:    c4 21             	r4 += 0x1			  ## printf-stdarg.c:87:9
  10f64c:    d4 ee 71 20       	r2 = b[r7++=0x1] (s)			  ## printf-stdarg.c:83:12
  10f650:    f2 58             	if (r2 != 0) goto -0x10 <prints+0x5E : 10f642 >
  10f652:    47 20             	r7 = 0x0
  10f654:    04 86             	goto 0xc <prints+0x7E : 10f662 >
  10f656:    50 16             	r0 = r5			  ## printf-stdarg.c:90:13
  10f658:    91 16             	r1 = r9			  ## printf-stdarg.c:90:13
  10f65a:    82 16             	r2 = r8			  ## printf-stdarg.c:90:13
  10f65c:    51 8f             	call -0xa2 <printchar : 10f5bc >			  ## printf-stdarg.c:90:13
  10f65e:    00 44             	if (r0 == 0) goto 0x8 <prints+0x84 : 10f668 >			  ## printf-stdarg.c:90:13
  10f660:    ff 3f             	r7 += -0x1			  ## printf-stdarg.c:89:5
  10f662:    e8 1d             	r0 = r6 + r7			  ## printf-stdarg.c:89:18
  10f664:    00 fd f7 03       	ifs (r0 >= 0x1) goto -0x12 <prints+0x72 : 10f656 >			  ## printf-stdarg.c:89:18
  10f668:    c8 1f             	r0 = r4 - r7			  ## printf-stdarg.c:96:5
  10f66a:    59 04             	{pc, r9-r4} = [sp++]			  ## printf-stdarg.c:96:5


printi:
  10f66c:    7a 04             	[--sp] = {rets, r10-r4}			  ## printf-stdarg.c:103:0
  10f66e:    e2 9c             	sp += -0x10			  ## printf-stdarg.c:103:0
  10f670:    d4 e9 38 a0       	r10 = [sp+56]			  ## printf-stdarg.c:103:0
  10f674:    18 d6             	r8 = r1  #			  ## printf-stdarg.c:103:0
  10f676:    04 2d             		 r4 = [sp+52]			  ## printf-stdarg.c:103:0
  10f678:    09 16             	r9 = r0			  ## printf-stdarg.c:103:0
  10f67a:    12 5a             	if (r2 == 0) goto 0x74 <printi+0x84 : 10f6f0 >			  ## printf-stdarg.c:103:0
  10f67c:    00 2c             	r0 = [sp+48]			  ## printf-stdarg.c:103:0
  10f67e:    41 20             	r1 = 0x0			  ## printf-stdarg.c:103:0
  10f680:    de e9 0f 10       	b[sp+15] = r1			  ## printf-stdarg.c:121:8
  10f684:    41 21             	r1 = 0x1			  ## printf-stdarg.c:121:8
  10f686:    46 21             	r6 = 0x1			  ## printf-stdarg.c:115:17
  10f688:    b3 e8 0a 00       	if (r3 != 0xa) {			  ## printf-stdarg.c:115:17
  10f68c:    46 20             		r6 = 0x0
                               	}			  ## printf-stdarg.c:115:17
  10f68e:    30 e8 00 00       	if (r0 == 0x0) {			  ## printf-stdarg.c:115:17
  10f692:    01 16             		r1 = r0
                               	}			  ## printf-stdarg.c:115:9
  10f694:    90 f1 62 01       	r0 = r6 & r1  #			  ## printf-stdarg.c:115:12
  10f698:    07 2f             		 r7 = [sp+60]
  10f69a:    a6 e0 00 20       	r6 = 0x0 - r2			  ## printf-stdarg.c:117:13
  10f69e:    a1 bf             	r1 = r2 >> 0x1f			  ## printf-stdarg.c:115:28
  10f6a0:    11 ea 00 00       	if ((r1 & r0) == 0) {			  ## printf-stdarg.c:115:28
  10f6a4:    26 16             		r6 = r2
                               	}			  ## printf-stdarg.c:115:28
  10f6a6:    81 19             	r1 &= r0			  ## printf-stdarg.c:115:12
  10f6a8:    88 84             	r0 = sp + 4			  ## printf-stdarg.c:115:12
  10f6aa:    c0 2a             	r0 += 0xa			  ## printf-stdarg.c:115:12
  10f6ac:    05 e1 c6 70       	r5 = r7 + 0xc6			  ## printf-stdarg.c:115:12
  10f6b0:    04 8d             	goto 0x1a <printi+0x60 : 10f6cc >			  ## printf-stdarg.c:115:12
  10f6b2:    f4 e1 60 73       	r7 = r6 / r3 (u)			  ## printf-stdarg.c:124:15
  10f6b6:    f0 e1 70 23       	r2 = r7 * r3			  ## printf-stdarg.c:124:15
  10f6ba:    e6 1e             	r6 = r6 - r2			  ## printf-stdarg.c:124:15
  10f6bc:    52 16             	r2 = r5			  ## printf-stdarg.c:125:13
  10f6be:    b6 ee 09 00       	ifs (r6 <= 0x9) {			  ## printf-stdarg.c:125:13
  10f6c2:    42 20             		r2 = 0x0
                               	}			  ## printf-stdarg.c:125:13
  10f6c4:    62 18             	r2 += r6			  ## printf-stdarg.c:125:13
  10f6c6:    ca 30             	r2 += 0x30			  ## printf-stdarg.c:128:18
  10f6c8:    76 d6             	r6 = r7  #			  ## printf-stdarg.c:128:18
  10f6ca:    8a 07             		 b[r0++=-0x1] = r2			  ## printf-stdarg.c:128:14
  10f6cc:    f6 52             	if (r6 != 0) goto -0x1c <printi+0x46 : 10f6b2 >
  10f6ce:    0f 81             	r7 = r0 + 0x1			  ## printf-stdarg.c:132:9
  10f6d0:    46 20             	r6 = 0x0
  10f6d2:    01 5f             	if (r1 == 0) goto 0x3e <printi+0xA6 : 10f712 >
  10f6d4:    04 5b             	if (r4 == 0) goto 0x36 <printi+0xA0 : 10f70c >
  10f6d6:    5a e8 19 08       	if ((r10 & 0x2) == 0) goto 0x32 <printi+0xA0 : 10f70c >
  10f6da:    4a 2d             	r2 = 0x2d			  ## printf-stdarg.c:134:17
  10f6dc:    90 16             	r0 = r9			  ## printf-stdarg.c:134:17
  10f6de:    81 16             	r1 = r8			  ## printf-stdarg.c:134:17
  10f6e0:    bf ea 6c ff       	call -0x128 <printchar : 10f5bc >			  ## printf-stdarg.c:134:17
  10f6e4:    46 21             	r6 = 0x1			  ## printf-stdarg.c:134:17
  10f6e6:    30 e8 00 00       	if (r0 == 0x0) {
  10f6ea:    06 16             		r6 = r0
                               	}			  ## printf-stdarg.c:134:17
  10f6ec:    c4 1f             	r4 = r4 - r6			  ## printf-stdarg.c:134:17
  10f6ee:    04 91             	goto 0x22 <printi+0xA6 : 10f712 >
  10f6f0:    48 30             	r0 = 0x30			  ## printf-stdarg.c:110:22
  10f6f2:    de e9 04 00       	b[sp+4] = r0			  ## printf-stdarg.c:110:22
  10f6f6:    40 20             	r0 = 0x0			  ## printf-stdarg.c:110:22
  10f6f8:    de e9 05 00       	b[sp+5] = r0			  ## printf-stdarg.c:111:22
  10f6fc:    8a 84             	r2 = sp + 4			  ## printf-stdarg.c:111:22
  10f6fe:    d4 e9 01 a0       	[sp] = r10			  ## printf-stdarg.c:112:16
  10f702:    90 16             	r0 = r9			  ## printf-stdarg.c:112:16
  10f704:    43 16             	r3 = r4			  ## printf-stdarg.c:112:16
  10f706:    bf ea 6d ff       	call -0x126 <prints : 10f5e4 >			  ## printf-stdarg.c:112:16
  10f70a:    04 8c             	goto 0x18 <printi+0xB8 : 10f724 >			  ## printf-stdarg.c:112:16
  10f70c:    49 2d             	r1 = 0x2d			  ## printf-stdarg.c:139:18
  10f70e:    07 d6             	r7 = r0  #			  ## printf-stdarg.c:139:18
  10f710:    89 40             		 b[r0+0x0] = r1			  ## printf-stdarg.c:139:18
  10f712:    d4 e9 01 a0       	[sp] = r10			  ## printf-stdarg.c:143:17
  10f716:    90 16             	r0 = r9			  ## printf-stdarg.c:143:17
  10f718:    81 16             	r1 = r8			  ## printf-stdarg.c:143:17
  10f71a:    72 16             	r2 = r7			  ## printf-stdarg.c:143:17
  10f71c:    43 16             	r3 = r4			  ## printf-stdarg.c:143:17
  10f71e:    bf ea 61 ff       	call -0x13e <prints : 10f5e4 >			  ## printf-stdarg.c:143:17
  10f722:    60 18             	r0 += r6			  ## printf-stdarg.c:143:15
  10f724:    02 84             	sp += 0x10
  10f726:    5a 04             	{pc, r10-r4} = [sp++]			  ## printf-stdarg.c:144:1


print:
  10f728:    7e 04             	[--sp] = {rets, r14-r4}			  ## printf-stdarg.c:147:0
  10f72a:    e2 99             	sp += -0x1c			  ## printf-stdarg.c:147:0
  10f72c:    1e d6             	r14 = r1  #			  ## printf-stdarg.c:147:0
  10f72e:    82 26             		 [sp+24] = r2			  ## printf-stdarg.c:147:0
  10f730:    04 d6             	r4 = r0  #			  ## printf-stdarg.c:147:0
  10f732:    83 25             		 [sp+20] = r3			  ## printf-stdarg.c:147:0
  10f734:    f8 e8 12 80       	r8 = sp + 18			  ## printf-stdarg.c:147:0
  10f738:    c1 14             	r9 = 0			  ## printf-stdarg.c:147:0
  10f73a:    4a e0 41 00       	r10 = 0x41			  ## printf-stdarg.c:147:0
  10f73e:    4b e0 61 00       	r11 = 0x61			  ## printf-stdarg.c:147:0
  10f742:    4c e0 01 00       	r12 = 0x1			  ## printf-stdarg.c:147:0
  10f746:    cd ff d4 81 10 00 	r13 = 0x1081d4 <nor_flash_boot_table+0x10 : 1081d4 >			  ## printf-stdarg.c:147:0
  10f74c:    46 20             	r6 = 0x0			  ## printf-stdarg.c:147:0
  10f74e:    84 80             	goto 0x200 <.GJTIE78_0_0_+0x12C : 10f950 >			  ## printf-stdarg.c:147:0
  10f750:    29 81             	r1 = r2 + 0x1			  ## printf-stdarg.c:154:13
  10f752:    81 26             	[sp+24] = r1			  ## printf-stdarg.c:154:13
  10f754:    28 41             	r0 = b[r2+0x1] (u)			  ## printf-stdarg.c:156:17
  10f756:    00 f8 05 4a       	if (r0 == 0x25) goto 0xa <print+0x3C : 10f764 >			  ## printf-stdarg.c:156:17
  10f75a:    00 f8 0b 5a       	if (r0 == 0x2d) goto 0x16 <print+0x4C : 10f774 >
  10f75e:    45 20             	r5 = 0x0
  10f760:    80 50             	if (r0 != 0) goto 0x20 <print+0x5A : 10f782 >
  10f762:    74 9c             	goto 0x1f8 <.GJTIE78_0_0_+0x138 : 10f95c >
  10f764:    48 25             	r0 = 0x25
  10f766:    0a 17             	r2 = r0.b0 (s)			  ## printf-stdarg.c:276:39
  10f768:    40 16             	r0 = r4			  ## printf-stdarg.c:276:19
  10f76a:    e1 16             	r1 = r14			  ## printf-stdarg.c:276:19
  10f76c:    bf ea 26 ff       	call -0x1b4 <printchar : 10f5bc >			  ## printf-stdarg.c:276:19
  10f770:    06 18             	r6 += r0
  10f772:    24 98             	goto 0xb0 <.GJTIE78_0_0_ : 10f824 >
  10f774:    29 82             	r1 = r2 + 0x2			  ## printf-stdarg.c:163:17
  10f776:    81 26             	[sp+24] = r1			  ## printf-stdarg.c:163:17
  10f778:    45 21             	r5 = 0x1
  10f77a:    04 83             	goto 0x6 <print+0x5A : 10f782 >
  10f77c:    c1 21             	r1 += 0x1			  ## printf-stdarg.c:167:17
  10f77e:    81 26             	[sp+24] = r1			  ## printf-stdarg.c:167:17
  10f780:    35 21             	r5 |= 0x2			  ## printf-stdarg.c:168:21
  10f782:    1a 40             	r2 = b[r1+0x0] (u)			  ## printf-stdarg.c:166:20
  10f784:    02 f8 fa 61       	if (r2 == 0x30) goto -0xc <print+0x54 : 10f77c >			  ## printf-stdarg.c:166:20
  10f788:    30 e1 d0 2f       	r0 = r2 + -0x30			  ## printf-stdarg.c:172:17
  10f78c:    00 17             	r0 = r0.b0 (u)			  ## printf-stdarg.c:172:17
  10f78e:    17 3f             	r7 = -0x1			  ## printf-stdarg.c:172:17
  10f790:    00 fc 06 12       	if (r0 > 0x9) goto 0xc <print+0x78 : 10f7a0 >			  ## printf-stdarg.c:172:17
  10f794:    88 98             	r0 = sp + 24
  10f796:    bf ea fe fe       	call -0x204 <skip_atoi : 10f596 >			  ## printf-stdarg.c:173:25
  10f79a:    07 d6             	r7 = r0  #			  ## printf-stdarg.c:173:25
  10f79c:    01 26             		 r1 = [sp+24]			  ## printf-stdarg.c:173:25
  10f79e:    1a 40             	r2 = b[r1+0x0] (u)			  ## printf-stdarg.c:173:25
  10f7a0:    82 f8 0d 5c       	if (r2 != 0x2e) goto 0x1a <print+0x96 : 10f7be >
  10f7a4:    18 81             	r0 = r1 + 0x1			  ## printf-stdarg.c:178:17
  10f7a6:    80 26             	[sp+24] = r0			  ## printf-stdarg.c:178:17
  10f7a8:    1a 41             	r2 = b[r1+0x1] (u)			  ## printf-stdarg.c:179:21
  10f7aa:    33 e1 d0 2f       	r3 = r2 + -0x30			  ## printf-stdarg.c:179:21
  10f7ae:    33 17             	r3 = r3.b0 (u)			  ## printf-stdarg.c:179:21
  10f7b0:    03 fc 07 12       	if (r3 > 0x9) goto 0xe <print+0x9A : 10f7c2 >			  ## printf-stdarg.c:179:21
  10f7b4:    88 98             	r0 = sp + 24
  10f7b6:    bf ea ee fe       	call -0x224 <skip_atoi : 10f596 >			  ## printf-stdarg.c:180:33
  10f7ba:    00 26             	r0 = [sp+24]
  10f7bc:    04 89             	goto 0x12 <print+0xA8 : 10f7d0 >
  10f7be:    10 16             	r0 = r1			  ## printf-stdarg.c:250:18
  10f7c0:    04 87             	goto 0xe <print+0xA8 : 10f7d0 >			  ## printf-stdarg.c:250:18
  10f7c2:    32 e8 2a c0       	if (r2 == 0x2a) {
  10f7c6:    88 94             		r0 = sp + 20
  10f7c8:    c0 eb 04 00       		[r0+0x0] += 0x4			  ## printf-stdarg.c:183:33
  10f7cc:    18 82             		r0 = r1 + 0x2			  ## printf-stdarg.c:182:21
  10f7ce:    80 26             		[sp+24] = r0
                               	}			  ## printf-stdarg.c:182:21
  10f7d0:    09 40             	r1 = b[r0+0x0] (u)
  10f7d2:    32 e1 90 1f       	r2 = r1 + -0x70			  ## printf-stdarg.c:193:17
  10f7d6:    82 fc 1f 10       	if (r2 <= 0x8) goto 0x3e <print+0xF0 : 10f818 >			  ## printf-stdarg.c:193:17
  10f7da:    01 f8 41 98       	if (r1 == 0x4c) goto 0x82 <.GJTIE78_0_0_+0x3C : 10f860 >
  10f7de:    01 f8 49 b0       	if (r1 == 0x58) goto 0x92 <.GJTIE78_0_0_+0x50 : 10f874 >
  10f7e2:    01 f8 57 c6       	if (r1 == 0x63) goto 0xae <.GJTIE78_0_0_+0x70 : 10f894 >
  10f7e6:    01 f8 65 c8       	if (r1 == 0x64) goto 0xca <.GJTIE78_0_0_+0x90 : 10f8b4 >
  10f7ea:    81 f8 1b d8       	if (r1 != 0x6c) goto 0x36 <.GJTIE78_0_0_ : 10f824 >
  10f7ee:    09 41             	r1 = b[r0+0x1] (u)			  ## printf-stdarg.c:202:39
  10f7f0:    01 f8 6c f0       	if (r1 == 0x78) goto 0xd8 <.GJTIE78_0_0_+0xA8 : 10f8cc >			  ## printf-stdarg.c:202:39
  10f7f4:    01 f8 74 d8       	if (r1 == 0x6c) goto 0xe8 <.GJTIE78_0_0_+0xBC : 10f8e0 >
  10f7f8:    01 f8 81 ea       	if (r1 == 0x75) goto 0x102 <.GJTIE78_0_0_+0xDA : 10f8fe >
  10f7fc:    81 f8 12 c8       	if (r1 != 0x64) goto 0x24 <.GJTIE78_0_0_ : 10f824 >
  10f800:    00 25             	r0 = [sp+20]			  ## printf-stdarg.c:203:40
  10f802:    09 84             	r1 = r0 + 0x4			  ## printf-stdarg.c:203:40
  10f804:    81 25             	[sp+20] = r1			  ## printf-stdarg.c:203:40
  10f806:    02 60             	r2 = [r0+0x0] 			  ## printf-stdarg.c:203:40
  10f808:    d4 e9 0d b0       	[sp+12] = r11			  ## printf-stdarg.c:203:23
  10f80c:    85 22             	[sp+8] = r5			  ## printf-stdarg.c:203:23
  10f80e:    87 21             	[sp+4] = r7			  ## printf-stdarg.c:203:23
  10f810:    43 2a             	r3 = 0xa			  ## printf-stdarg.c:203:23
  10f812:    d4 e9 01 c0       	[sp] = r12			  ## printf-stdarg.c:203:23
  10f816:    34 9e             	goto 0xfc <.GJTIE78_0_0_+0xF0 : 10f914 >			  ## printf-stdarg.c:203:23
  10f818:    02 01             	tbb [r2]


.GJTIS78_0_0_:
  10f81a:    09     < 9 : 0x9 >
  10f81b:    05     < 5 : 0x5 >
  10f81c:    05     < 5 : 0x5 >
  10f81d:    10     < 16 : 0x10 >
  10f81e:    05     < 5 : 0x5 >
  10f81f:    19     < 25 : 0x19 >
  10f820:    05     < 5 : 0x5 >
  10f821:    05     < 5 : 0x5 >
  10f822:    09     < 9 : 0x9 >
  10f823:    00     < 0 : 0x0 >
  10f824:    00 26             	r0 = [sp+24]			  ## printf-stdarg.c:152:26
  10f826:    0a 81             	r2 = r0 + 0x1			  ## printf-stdarg.c:152:26
  10f828:    82 26             	[sp+24] = r2			  ## printf-stdarg.c:152:26
  10f82a:    44 92             	goto 0x124 <.GJTIE78_0_0_+0x12C : 10f950 >			  ## printf-stdarg.c:152:26
  10f82c:    00 25             	r0 = [sp+20]
  10f82e:    09 84             	r1 = r0 + 0x4
  10f830:    81 25             	[sp+20] = r1
  10f832:    02 60             	r2 = [r0+0x0] 
  10f834:    d4 e9 0d b0       	[sp+12] = r11
  10f838:    14 83             	goto 0x46 <.GJTIE78_0_0_+0x5C : 10f880 >
  10f83a:    00 25             	r0 = [sp+20]			  ## printf-stdarg.c:194:44
  10f83c:    09 84             	r1 = r0 + 0x4			  ## printf-stdarg.c:194:44
  10f83e:    81 25             	[sp+20] = r1			  ## printf-stdarg.c:194:44
  10f840:    02 60             	r2 = [r0+0x0] 			  ## printf-stdarg.c:194:44
  10f842:    85 20             	[sp] = r5			  ## printf-stdarg.c:195:23
  10f844:    32 e8 00 00       	if (r2 == 0x0) {			  ## printf-stdarg.c:195:23
  10f848:    d2 16             		r2 = r13
                               	}			  ## printf-stdarg.c:195:40
  10f84a:    14 8e             	goto 0x5c <.GJTIE78_0_0_+0x84 : 10f8a8 >
  10f84c:    00 25             	r0 = [sp+20]			  ## printf-stdarg.c:236:40
  10f84e:    09 84             	r1 = r0 + 0x4			  ## printf-stdarg.c:236:40
  10f850:    81 25             	[sp+20] = r1			  ## printf-stdarg.c:236:40
  10f852:    02 60             	r2 = [r0+0x0] 			  ## printf-stdarg.c:236:40
  10f854:    d4 e9 0d b0       	[sp+12] = r11			  ## printf-stdarg.c:236:23
  10f858:    85 22             	[sp+8] = r5			  ## printf-stdarg.c:236:23
  10f85a:    87 21             	[sp+4] = r7			  ## printf-stdarg.c:236:23
  10f85c:    43 2a             	r3 = 0xa			  ## printf-stdarg.c:236:23
  10f85e:    04 93             	goto 0x26 <.GJTIE78_0_0_+0x62 : 10f886 >			  ## printf-stdarg.c:236:23
  10f860:    08 41             	r0 = b[r0+0x1] (u)			  ## printf-stdarg.c:230:39
  10f862:    80 f8 df b1       	if (r0 != 0x58) goto -0x42 <.GJTIE78_0_0_ : 10f824 >
  10f866:    00 25             	r0 = [sp+20]			  ## printf-stdarg.c:231:40
  10f868:    09 84             	r1 = r0 + 0x4			  ## printf-stdarg.c:231:40
  10f86a:    81 25             	[sp+20] = r1			  ## printf-stdarg.c:231:40
  10f86c:    02 60             	r2 = [r0+0x0] 			  ## printf-stdarg.c:231:40
  10f86e:    d4 e9 0d a0       	[sp+12] = r10			  ## printf-stdarg.c:231:23
  10f872:    14 92             	goto 0x64 <.GJTIE78_0_0_+0xB4 : 10f8d8 >			  ## printf-stdarg.c:231:23
  10f874:    00 25             	r0 = [sp+20]			  ## printf-stdarg.c:227:40
  10f876:    09 84             	r1 = r0 + 0x4			  ## printf-stdarg.c:227:40
  10f878:    81 25             	[sp+20] = r1			  ## printf-stdarg.c:227:40
  10f87a:    02 60             	r2 = [r0+0x0] 			  ## printf-stdarg.c:227:40
  10f87c:    d4 e9 0d a0       	[sp+12] = r10			  ## printf-stdarg.c:227:23
  10f880:    85 22             	[sp+8] = r5
  10f882:    87 21             	[sp+4] = r7
  10f884:    43 30             	r3 = 0x10
  10f886:    d4 e9 01 90       	[sp] = r9
  10f88a:    40 16             	r0 = r4
  10f88c:    e1 16             	r1 = r14
  10f88e:    bf ea ed fe       	call -0x226 <printi : 10f66c >
  10f892:    b7 8e             	goto -0x124 <print+0x48 : 10f770 >
  10f894:    00 25             	r0 = [sp+20]			  ## printf-stdarg.c:252:32
  10f896:    09 84             	r1 = r0 + 0x4			  ## printf-stdarg.c:252:32
  10f898:    81 25             	[sp+20] = r1			  ## printf-stdarg.c:252:32
  10f89a:    00 60             	r0 = [r0+0x0] 			  ## printf-stdarg.c:252:32
  10f89c:    de e9 12 00       	b[sp+18] = r0			  ## printf-stdarg.c:252:24
  10f8a0:    52 ee 81 90       	b[r8+0x1] = r9			  ## printf-stdarg.c:253:24
  10f8a4:    8a 92             	r2 = sp + 18
  10f8a6:    85 20             	[sp] = r5			  ## printf-stdarg.c:254:23
  10f8a8:    40 16             	r0 = r4
  10f8aa:    e1 16             	r1 = r14
  10f8ac:    73 16             	r3 = r7
  10f8ae:    bf ea 99 fe       	call -0x2ce <prints : 10f5e4 >
  10f8b2:    a7 9e             	goto -0x144 <print+0x48 : 10f770 >
  10f8b4:    00 25             	r0 = [sp+20]			  ## printf-stdarg.c:199:40
  10f8b6:    09 84             	r1 = r0 + 0x4			  ## printf-stdarg.c:199:40
  10f8b8:    81 25             	[sp+20] = r1			  ## printf-stdarg.c:199:40
  10f8ba:    02 60             	r2 = [r0+0x0] 			  ## printf-stdarg.c:199:40
  10f8bc:    d4 e9 0d b0       	[sp+12] = r11			  ## printf-stdarg.c:199:23
  10f8c0:    85 22             	[sp+8] = r5			  ## printf-stdarg.c:199:23
  10f8c2:    87 21             	[sp+4] = r7			  ## printf-stdarg.c:199:23
  10f8c4:    43 2a             	r3 = 0xa			  ## printf-stdarg.c:199:23
  10f8c6:    d4 e9 01 c0       	[sp] = r12			  ## printf-stdarg.c:199:23
  10f8ca:    e7 9f             	goto -0x42 <.GJTIE78_0_0_+0x66 : 10f88a >			  ## printf-stdarg.c:199:23
  10f8cc:    00 25             	r0 = [sp+20]			  ## printf-stdarg.c:222:40
  10f8ce:    09 84             	r1 = r0 + 0x4			  ## printf-stdarg.c:222:40
  10f8d0:    81 25             	[sp+20] = r1			  ## printf-stdarg.c:222:40
  10f8d2:    02 60             	r2 = [r0+0x0] 			  ## printf-stdarg.c:222:40
  10f8d4:    d4 e9 0d b0       	[sp+12] = r11			  ## printf-stdarg.c:222:23
  10f8d8:    85 22             	[sp+8] = r5
  10f8da:    87 21             	[sp+4] = r7
  10f8dc:    43 30             	r3 = 0x10
  10f8de:    04 98             	goto 0x30 <.GJTIE78_0_0_+0xEC : 10f910 >
  10f8e0:    09 42             	r1 = b[r0+0x2] (u)			  ## printf-stdarg.c:207:67
  10f8e2:    81 f8 1f c8       	if (r1 != 0x64) goto 0x3e <.GJTIE78_0_0_+0x100 : 10f924 >			  ## printf-stdarg.c:207:17
  10f8e6:    00 25             	r0 = [sp+20]			  ## printf-stdarg.c:208:40
  10f8e8:    09 88             	r1 = r0 + 0x8			  ## printf-stdarg.c:208:40
  10f8ea:    81 25             	[sp+20] = r1			  ## printf-stdarg.c:208:40
  10f8ec:    02 60             	r2 = [r0+0x0] 			  ## printf-stdarg.c:208:40
  10f8ee:    d4 e9 0d b0       	[sp+12] = r11			  ## printf-stdarg.c:208:23
  10f8f2:    85 22             	[sp+8] = r5			  ## printf-stdarg.c:208:23
  10f8f4:    87 21             	[sp+4] = r7			  ## printf-stdarg.c:208:23
  10f8f6:    43 2a             	r3 = 0xa			  ## printf-stdarg.c:208:23
  10f8f8:    d4 e9 01 c0       	[sp] = r12			  ## printf-stdarg.c:208:23
  10f8fc:    14 81             	goto 0x42 <.GJTIE78_0_0_+0x11C : 10f940 >			  ## printf-stdarg.c:208:23
  10f8fe:    00 25             	r0 = [sp+20]			  ## printf-stdarg.c:240:40
  10f900:    09 84             	r1 = r0 + 0x4			  ## printf-stdarg.c:240:40
  10f902:    81 25             	[sp+20] = r1			  ## printf-stdarg.c:240:40
  10f904:    02 60             	r2 = [r0+0x0] 			  ## printf-stdarg.c:240:40
  10f906:    d4 e9 0d b0       	[sp+12] = r11			  ## printf-stdarg.c:240:23
  10f90a:    85 22             	[sp+8] = r5			  ## printf-stdarg.c:240:23
  10f90c:    87 21             	[sp+4] = r7			  ## printf-stdarg.c:240:23
  10f90e:    43 2a             	r3 = 0xa			  ## printf-stdarg.c:240:23
  10f910:    d4 e9 01 90       	[sp] = r9
  10f914:    40 16             	r0 = r4
  10f916:    e1 16             	r1 = r14
  10f918:    bf ea a8 fe       	call -0x2b0 <printi : 10f66c >
  10f91c:    89 98             	r1 = sp + 24
  10f91e:    c0 eb 01 10       	[r1+0x0] += 0x1
  10f922:    97 86             	goto -0x1b4 <print+0x48 : 10f770 >
  10f924:    08 42             	r0 = b[r0+0x2] (u)			  ## printf-stdarg.c:244:67
  10f926:    80 f8 7d eb       	if (r0 != 0x75) goto -0x106 <.GJTIE78_0_0_ : 10f824 >
  10f92a:    00 25             	r0 = [sp+20]			  ## printf-stdarg.c:245:40
  10f92c:    09 88             	r1 = r0 + 0x8			  ## printf-stdarg.c:245:40
  10f92e:    81 25             	[sp+20] = r1			  ## printf-stdarg.c:245:40
  10f930:    02 60             	r2 = [r0+0x0] 			  ## printf-stdarg.c:245:40
  10f932:    d4 e9 0d b0       	[sp+12] = r11			  ## printf-stdarg.c:245:23
  10f936:    85 22             	[sp+8] = r5			  ## printf-stdarg.c:245:23
  10f938:    87 21             	[sp+4] = r7			  ## printf-stdarg.c:245:23
  10f93a:    43 2a             	r3 = 0xa			  ## printf-stdarg.c:245:23
  10f93c:    d4 e9 01 90       	[sp] = r9			  ## printf-stdarg.c:245:23
  10f940:    40 16             	r0 = r4
  10f942:    e1 16             	r1 = r14
  10f944:    bf ea 92 fe       	call -0x2dc <printi : 10f66c >
  10f948:    89 98             	r1 = sp + 24
  10f94a:    c0 eb 02 10       	[r1+0x0] += 0x2
  10f94e:    87 90             	goto -0x1e0 <print+0x48 : 10f770 >
  10f950:    28 40             	r0 = b[r2+0x0] (u)			  ## printf-stdarg.c:152:12
  10f952:    00 ff 25 00 fc fe 	if (r0 == 0x25) goto -0x208 <print+0x28 : 10f750 >			  ## printf-stdarg.c:152:5
  10f958:    80 f8 05 01       	if (r0 != 0x0) goto -0x1f6 <print+0x3E : 10f766 >
  10f95c:    b4 e8 00 80       	if (r4 != 0x0) {
  10f960:    40 60             		r0 = [r4+0x0] 			  ## printf-stdarg.c:280:10
  10f962:    41 20             		r1 = 0x0			  ## printf-stdarg.c:280:15
  10f964:    89 40             		b[r0+0x0] = r1
                               	}			  ## printf-stdarg.c:280:15
  10f966:    60 16             	r0 = r6			  ## printf-stdarg.c:283:5
  10f968:    02 87             	sp += 0x1c			  ## printf-stdarg.c:283:5
  10f96a:    5e 04             	{pc, r14-r4} = [sp++]			  ## printf-stdarg.c:283:5


puts:
  10f96c:    75 04             	[--sp] = {rets, r5, r4}			  ## printf-stdarg.c:288:0
  10f96e:    04 16             	r4 = r0			  ## printf-stdarg.c:288:0
  10f970:    c5 ff e4 bc 02 00 	r5 = 0x2bce4 <mask_putchar : 2bce4 >			  ## printf-stdarg.c:288:0
  10f976:    04 82             	goto 0x4 <puts+0x10 : 10f97c >			  ## printf-stdarg.c:288:0
  10f978:    08 17             	r0 = r0.b0 (s)			  ## uart.c:45:5
  10f97a:    c1 00             	call r1			  ## uart.c:45:5
  10f97c:    51 60             	r1 = [r5+0x0] 			  ## uart.c:45:5
  10f97e:    40 07             	r0 = b[r4++=0x1] (u)			  ## printf-stdarg.c:318:12
  10f980:    f0 5b             	if (r0 != 0) goto -0xa <puts+0xC : 10f978 >
  10f982:    40 2a             	r0 = 0xa			  ## uart.c:45:5
  10f984:    c1 00             	call r1			  ## uart.c:45:5
  10f986:    40 20             	r0 = 0x0			  ## printf-stdarg.c:326:5
  10f988:    55 04             	{pc, r5, r4} = [sp++]			  ## printf-stdarg.c:326:5


printf:
  10f98a:    61 04             	[--sp] = {r3-r1}			  ## printf-stdarg.c:331:0
  10f98c:    74 04             	[--sp] = {rets, r4}			  ## printf-stdarg.c:331:0
  10f98e:    e2 9f             	sp += -0x4			  ## printf-stdarg.c:331:0
  10f990:    8b 8c             	r3 = sp + 12			  ## printf-stdarg.c:331:0
  10f992:    04 d6             	r4 = r0  #			  ## printf-stdarg.c:331:0
  10f994:    83 20             		 [sp] = r3			  ## printf-stdarg.c:335:5
  10f996:    80 14             	r1_r0 = 0			  ## printf-stdarg.c:365:11
  10f998:    42 16             	r2 = r4			  ## printf-stdarg.c:365:11
  10f99a:    bf ea c5 fe       	call -0x276 <print : 10f728 >			  ## printf-stdarg.c:365:11
  10f99e:    02 81             	sp += 0x4
  10f9a0:    34 04             	{rets, r4} = [sp++]			  ## printf-stdarg.c:368:5
  10f9a2:    02 83             	sp += 0xc			  ## printf-stdarg.c:368:5
  10f9a4:    80 00             	rts			  ## printf-stdarg.c:368:5


sprintf:
  10f9a6:    62 04             	[--sp] = {r3, r2}			  ## printf-stdarg.c:373:0
  10f9a8:    74 04             	[--sp] = {rets, r4}			  ## printf-stdarg.c:373:0
  10f9aa:    e2 9e             	sp += -0x8			  ## printf-stdarg.c:373:0
  10f9ac:    14 d6             	r4 = r1  #			  ## printf-stdarg.c:373:0
  10f9ae:    80 21             		 [sp+4] = r0			  ## printf-stdarg.c:373:0
  10f9b0:    8b 90             	r3 = sp + 16			  ## printf-stdarg.c:373:0
  10f9b2:    42 d6             	r2 = r4  #			  ## printf-stdarg.c:378:12
  10f9b4:    83 20             		 [sp] = r3			  ## printf-stdarg.c:376:5
  10f9b6:    88 84             	r0 = sp + 4			  ## printf-stdarg.c:376:5
  10f9b8:    41 20             	r1 = 0x0			  ## printf-stdarg.c:378:12
  10f9ba:    bf ea b5 fe       	call -0x296 <print : 10f728 >			  ## printf-stdarg.c:378:12
  10f9be:    02 82             	sp += 0x8
  10f9c0:    34 04             	{rets, r4} = [sp++]			  ## printf-stdarg.c:378:5
  10f9c2:    02 82             	sp += 0x8			  ## printf-stdarg.c:378:5
  10f9c4:    80 00             	rts			  ## printf-stdarg.c:378:5


vprintf:
  10f9c6:    10 04             	[--sp] = rets			  ## printf-stdarg.c:382:0
  10f9c8:    02 15             	r3_r2 = r1_r0			  ## printf-stdarg.c:382:0
  10f9ca:    80 14             	r1_r0 = 0			  ## printf-stdarg.c:385:12
  10f9cc:    bf ea ac fe       	call -0x2a8 <print : 10f728 >			  ## printf-stdarg.c:385:12
  10f9d0:    00 04             	pc = [sp++]			  ## printf-stdarg.c:387:5


perror:
  10f9d2:    40 20             	r0 = 0x0			  ## printf-stdarg.c:391:0
  10f9d4:    80 00             	rts			  ## printf-stdarg.c:392:5


norflash_read:
  10f9d6:    78 04             	[--sp] = {rets, r8-r4}			  ## norflash.c:314:0
  10f9d8:    34 d6             	r4 = r3  #			  ## norflash.c:314:0
  10f9da:    08 44             		 r0 = b[r0+0x4] (u)			  ## norflash.c:318:19
  10f9dc:    26 16             	r6 = r2
  10f9de:    15 16             	r5 = r1
  10f9e0:    c8 ff 00 41 1e 00 	r8 = 0x1e4100 <__stub_LZ4_decompress_safe_usingDict+0xD4104 : 1e4100 >
  10f9e6:    b0 e8 00 40       	if (r0 != 0x0) {
  10f9ea:    42 ea 00 80       		[r8+0x8] = 0x0			  ## norflash.c:319:28
  10f9ee:    40 ea 83 80       		[r8+0x0] = 0x83
                               	}			  ## norflash.c:320:28
  10f9f2:    40 20             	r0 = 0x0			  ## norflash.c:324:5
  10f9f4:    47 20             	r7 = 0x0			  ## norflash.c:324:5
  10f9f6:    bf ea 90 f7       	call -0x10e0 <SPI0_cs : 10e91a >			  ## norflash.c:324:5
  10f9fa:    40 23             	r0 = 0x3			  ## norflash.c:326:5
  10f9fc:    bf ea ad f7       	call -0x10a6 <SPI0_WriteByte : 10e95a >			  ## norflash.c:326:5
  10fa00:    b0 e1 20 68       	r0 = uextra(r6, p:0x10, l:0x8)			  ## norflash.c:111:5
  10fa04:    bf ea a9 f7       	call -0x10ae <SPI0_WriteByte : 10e95a >			  ## norflash.c:111:5
  10fa08:    b0 e1 20 64       	r0 = uextra(r6, p:0x8, l:0x8)			  ## norflash.c:112:5
  10fa0c:    bf ea a5 f7       	call -0x10b6 <SPI0_WriteByte : 10e95a >			  ## norflash.c:112:5
  10fa10:    60 17             	r0 = r6.b0 (u)			  ## norflash.c:113:5
  10fa12:    bf ea a2 f7       	call -0x10bc <SPI0_WriteByte : 10e95a >			  ## norflash.c:113:5
  10fa16:    30 e1 04 84       	r0 = r8 + -0xbfc			  ## norflash.c:330:17
  10fa1a:    22 f1 fc 06       	r2 = r0 + -0x1904  #			  ## norflash.c:330:17
  10fa1e:    87 60             		 [r0+0x0] = r7			  ## norflash.c:330:17
  10fa20:    00 ef 80 2d       	[r2+0x0] |= 0x1000			  ## spi0.c:326:18
  10fa24:    40 2a             	r0 = 0xa			  ## spi0.c:327:5
  10fa26:    bf ea 69 f3       	call -0x192e <udelay : 10e0fc >			  ## spi0.c:327:5
  10fa2a:    c0 ef 40 2e       	[r2+0x0] &= 0xFFFFF3FF			  ## spi0.c:328:18
  10fa2e:    c0 d7             	r0 = r4.l (u)  #			  ## spi0.c:331:20
  10fa30:    a5 63             		 [r2+0xc] = r5			  ## spi0.c:330:18
  10fa32:    a0 64             	[r2+0x10] = r0			  ## spi0.c:331:18
  10fa34:    bf ea 88 f7       	call -0x10f0 <spi0_wait_ok : 10e948 >			  ## spi0.c:333:5
  10fa38:    40 21             	r0 = 0x1			  ## norflash.c:335:5
  10fa3a:    bf ea 6e f7       	call -0x1124 <SPI0_cs : 10e91a >			  ## norflash.c:335:5
  10fa3e:    40 21             	r0 = 0x1			  ## norflash.c:341:5
  10fa40:    d0 ec 81 70       	[r8+0x0] = r7			  ## norflash.c:338:24
  10fa44:    58 04             	{pc, r8-r4} = [sp++]			  ## norflash.c:341:5


uart_isr:
  10fa46:    e9 04             	[--sp] = {psr, rets, reti}			  ## uart_upgrade.c:185:0
  10fa48:    d8 e8 3f 00       	[--sp] = {r5-r0}			  ## uart_upgrade.c:185:0
  10fa4c:    60 e0 f1 49       	r4 = 0x1E2000			  ## uart_upgrade.c:185:0
  10fa50:    40 60             	r0 = [r4+0x0] 			  ## uart_upgrade.c:186:16
  10fa52:    50 e8 29 58       	if ((r0 & 0x800) == 0) goto 0x52 <uart_isr+0x62 : 10faa8 >			  ## uart_upgrade.c:186:16
  10fa56:    00 ef 80 40       	[r4+0x0] |= 0x80			  ## uart_upgrade.c:187:20
  10fa5a:    00 ef a0 4d       	[r4+0x0] |= 0x1400			  ## uart_upgrade.c:188:20
  10fa5e:    20 00             	csync			  ## uart_upgrade.c:189:9
  10fa60:    40 6a             	r0 = [r4+0x28] 			  ## uart_upgrade.c:190:28
  10fa62:    42 20             	r2 = 0x0
  10fa64:    c0 ff 80 93 02 00 	r0 = 0x29380 <uart_dma_buffer : 29380 >
  10fa6a:    21 16             	r1 = r2
  10fa6c:    01 fc 1c 7a       	if (r1 > 0x3d) goto 0x38 <uart_isr+0x62 : 10faa8 >
  10fa70:    d8 ee 10 30       	r3 = b[r1+r0] (u)			  ## uart_upgrade.c:125:14
  10fa74:    1a 81             	r2 = r1 + 0x1			  ## uart_upgrade.c:125:14
  10fa76:    83 f8 f8 ab       	if (r3 != 0x55) goto -0x10 <uart_isr+0x24 : 10fa6a >			  ## uart_upgrade.c:125:14
  10fa7a:    13 1c             	r3 = r1 + r0			  ## uart_upgrade.c:125:37
  10fa7c:    3b 41             	r3 = b[r3+0x1] (u)			  ## uart_upgrade.c:125:37
  10fa7e:    93 f8 f4 55       	if (r3 != 0xaa) goto -0x18 <uart_isr+0x24 : 10fa6a >			  ## uart_upgrade.c:125:37
  10fa82:    42 20             	r2 = 0x0
  10fa84:    c3 ff 40 93 02 00 	r3 = 0x29340 <ut_cmd : 29340 >
  10fa8a:    04 89             	goto 0x12 <uart_isr+0x58 : 10fa9e >
  10fa8c:    95 1c             	r5 = r1 + r2			  ## uart_upgrade.c:129:45
  10fa8e:    cd 3f             	r5 += 0x3f			  ## uart_upgrade.c:129:45
  10fa90:    65 e1 3f 50       	r5 = r5 & 0x3F			  ## uart_upgrade.c:129:45
  10fa94:    d8 ee 50 50       	r5 = b[r5+r0] (u)			  ## uart_upgrade.c:129:30
  10fa98:    d8 ee 21 53       	b[r2+r3] = r5			  ## uart_upgrade.c:129:28
  10fa9c:    c2 21             	r2 += 0x1			  ## uart_upgrade.c:128:50
  10fa9e:    82 f8 f5 2b       	if (r2 != 0x15) goto -0x16 <uart_isr+0x46 : 10fa8c >
  10faa2:    bf ea c0 f5       	call -0x1480 <uart_cmd_verify : 10e626 >			  ## uart_upgrade.c:137:20
  10faa6:    80 44             	if (r0 != 0) goto 0x8 <uart_isr+0x6A : 10fab0 >
  10faa8:    d4 e8 3f 00       	{r5-r0} = [sp++]
  10faac:    a9 04             	{psr, rets, reti} = [sp++]
  10faae:    81 00             	rti
  10fab0:    c0 ef 20 40       	[r4+0x0] &= 0xFFFFFFDF			  ## uart_upgrade.c:194:24
  10fab4:    bf ea f0 f5       	call -0x1420 <uart_recv_loader : 10e698 >			  ## uart_upgrade.c:195:13


LZ4_setStreamDecode:
  10fab8:    75 04             	[--sp] = {rets, r5, r4}			  ## lz4.c:642:0
  10faba:    03 16             	r3 = r0			  ## lz4.c:642:0
  10fabc:    90 dc             	r0 = r1 + r2  #			  ## lz4.c:645:50
  10fabe:    b2 63             		 [r3+0xc] = r2			  ## lz4.c:644:23
  10fac0:    b0 62             	[r3+0x8] = r0			  ## lz4.c:645:22
  10fac2:    44 20             	r4 = 0x0			  ## lz4.c:646:25
  10fac4:    45 20             	r5 = 0x0			  ## lz4.c:646:25
  10fac6:    40 21             	r0 = 0x1			  ## lz4.c:648:5
  10fac8:    50 ec 31 40       	d[r3+0x0] = r5_r4			  ## lz4.c:646:25
  10facc:    55 04             	{pc, r5, r4} = [sp++]			  ## lz4.c:648:5


LZ4_decompress_safe_usingDict:
  10face:    76 04             	[--sp] = {rets, r6-r4}			  ## lz4.c:742:0
  10fad0:    e2 99             	sp += -0x1c			  ## lz4.c:742:0
  10fad2:    04 2c             	r4 = [sp+48]			  ## lz4.c:742:0
  10fad4:    04 4b             	if (r4 == 0) goto 0x16 <LZ4_decompress_safe_usingDict+0x1E : 10faec >			  ## lz4.c:742:0
  10fad6:    05 2b             	r5 = [sp+44]			  ## lz4.c:742:0
  10fad8:    56 1d             	r6 = r5 + r4			  ## lz4.c:732:19
  10fada:    01 e8 14 60       	if (r6 == r1) goto 0x28 <LZ4_decompress_safe_usingDict+0x38 : 10fb06 >			  ## lz4.c:732:19
  10fade:    84 26             	[sp+24] = r4			  ## lz4.c:738:12
  10fae0:    85 25             	[sp+20] = r5			  ## lz4.c:738:12
  10fae2:    81 24             	[sp+16] = r1			  ## lz4.c:738:12
  10fae4:    44 22             	r4 = 0x2			  ## lz4.c:738:12
  10fae6:    84 23             	[sp+12] = r4			  ## lz4.c:738:12
  10fae8:    44 20             	r4 = 0x0			  ## lz4.c:738:12
  10faea:    04 85             	goto 0xa <LZ4_decompress_safe_usingDict+0x28 : 10faf6 >			  ## lz4.c:738:12
  10faec:    44 20             	r4 = 0x0			  ## lz4.c:730:16
  10faee:    84 26             	[sp+24] = r4			  ## lz4.c:730:16
  10faf0:    84 25             	[sp+20] = r4			  ## lz4.c:730:16
  10faf2:    81 24             	[sp+16] = r1			  ## lz4.c:730:16
  10faf4:    84 23             	[sp+12] = r4			  ## lz4.c:730:16
  10faf6:    84 22             	[sp+8] = r4
  10faf8:    84 21             	[sp+4] = r4
  10fafa:    44 21             	r4 = 0x1
  10fafc:    84 20             	[sp] = r4
  10fafe:    bf ea 42 f7       	call -0x117c <LZ4_decompress_generic : 10e986 >
  10fb02:    02 87             	sp += 0x1c
  10fb04:    56 04             	{pc, r6-r4} = [sp++]			  ## lz4.c:743:5
  10fb06:    c5 ff ff ff 00 00 	r5 = 0xffff <os_code_size+0xDEC7 : fffe >			  ## lz4.c:733:13
  10fb0c:    85 ed 0c 40       	ifs (r4 < r5) goto 0x18 <LZ4_decompress_safe_usingDict+0x5A : 10fb28 >			  ## lz4.c:733:13
  10fb10:    44 20             	r4 = 0x0			  ## lz4.c:734:20
  10fb12:    f5 f0 80 1b       	r5 = r1 - 0x10000  #			  ## lz4.c:734:131
  10fb16:    84 26             		 [sp+24] = r4			  ## lz4.c:734:20
  10fb18:    84 25             	[sp+20] = r4			  ## lz4.c:734:20
  10fb1a:    85 24             	[sp+16] = r5			  ## lz4.c:734:20
  10fb1c:    45 21             	r5 = 0x1			  ## lz4.c:734:20
  10fb1e:    d0 e9 09 40       	d[sp+8] = r5_r4			  ## lz4.c:734:20
  10fb22:    84 21             	[sp+4] = r4			  ## lz4.c:734:20
  10fb24:    85 20             	[sp] = r5			  ## lz4.c:734:20
  10fb26:    f7 8b             	goto -0x2a <LZ4_decompress_safe_usingDict+0x30 : 10fafe >			  ## lz4.c:734:20
  10fb28:    45 20             	r5 = 0x0
  10fb2a:    14 df             	r4 = r1 - r4  #			  ## lz4.c:736:120
  10fb2c:    85 26             		 [sp+24] = r5			  ## lz4.c:736:16
  10fb2e:    d0 e9 11 40       	d[sp+16] = r5_r4			  ## lz4.c:736:16
  10fb32:    85 23             	[sp+12] = r5			  ## lz4.c:736:16
  10fb34:    85 22             	[sp+8] = r5			  ## lz4.c:736:16
  10fb36:    85 21             	[sp+4] = r5			  ## lz4.c:736:16
  10fb38:    f7 80             	goto -0x40 <LZ4_decompress_safe_usingDict+0x2C : 10fafa >			  ## lz4.c:736:16


doe:
  10fb3a:    76 04             	[--sp] = {rets, r6-r4}			  ## crc.c:116:0
  10fb3c:    b3 e8 00 40       	if (r3 != 0x0) {			  ## crc.c:116:0
  10fb40:    b3 a2             		r3 = r3 >> 0x2			  ## crc.c:106:19
  10fb42:    38 19             		r0 ^= r3
                               	}			  ## crc.c:106:25
  10fb44:    a2 e0 01 20       	r2 = 0x1 - r2
  10fb48:    43 e0 de ef       	r3 = -0x1022
  10fb4c:    04 16             	r4 = r0
  10fb4e:    04 93             	goto 0x26 <doe+0x3C : 10fb76 >
  10fb50:    04 a1             	r4 = r0 << 0x1			  ## crc.c:91:24
  10fb52:    b4 19             	r4 &= r3			  ## crc.c:92:19
  10fb54:    80 17             	r0 = r0.l (u)			  ## crc.c:89:33
  10fb56:    85 af             	r5 = r0 >> 0xf			  ## crc.c:89:33
  10fb58:    54 19             	r4 |= r5			  ## crc.c:92:19
  10fb5a:    86 ab             	r6 = r0 >> 0xb			  ## crc.c:92:30
  10fb5c:    5e 19             	r6 ^= r5			  ## crc.c:92:34
  10fb5e:    66 ac             	r6 = r6 << 0xc			  ## crc.c:92:19
  10fb60:    66 e1 80 6d       	r6 = r6 & 0x1000			  ## crc.c:92:19
  10fb64:    64 19             	r4 |= r6			  ## crc.c:93:18
  10fb66:    80 a4             	r0 = r0 >> 0x4			  ## crc.c:93:29
  10fb68:    58 19             	r0 ^= r5			  ## crc.c:93:32
  10fb6a:    00 a5             	r0 = r0 << 0x5			  ## crc.c:93:18
  10fb6c:    60 e1 20 00       	r0 = r0 & 0x20			  ## crc.c:93:18
  10fb70:    40 19             	r0 |= r4			  ## crc.c:94:18
  10fb72:    04 17             	r4 = r0.b0 (u)			  ## crc.c:98:21
  10fb74:    c2 21             	r2 += 0x1			  ## crc.c:110:5
  10fb76:    1d 40             	r5 = b[r1+0x0] (u)
  10fb78:    5c 19             	r4 ^= r5
  10fb7a:    94 07             	b[r1++=0x1] = r4
  10fb7c:    f2 49             	if (r2 != 0) goto -0x2e <doe+0x16 : 10fb50 >
  10fb7e:    56 04             	{pc, r6-r4} = [sp++]			  ## crc.c:119:1


p11_boot:
  10fb80:    64 e0 00 e3       	r14 = rets			  ## p11.S:7:0
  10fb84:    c0 ff 04 3e 1e 00 	r0 = 0x1e3e04 <__stub_LZ4_decompress_safe_usingDict+0xD3E08 : 1e3e04 >			  ## p11.S:8:0
  10fb8a:    01 60             	r1 = [r0+0x0] 			  ## p11.S:10:0
  10fb8c:    51 e8 fd 29       	if ((r1 & 0x20) == 0) goto -0x6 <p11_boot+0xA : 10fb8a >			  ## p11.S:11:0
  10fb90:    79 3f             	r1 = 0xff			  ## p11.S:13:0
  10fb92:    7a 2e             	r2 = 0xee			  ## p11.S:14:0
  10fb94:    6b 2b             	r3 = 0xab			  ## p11.S:15:0
  10fb96:    44 2e             	r4 = 0xe			  ## p11.S:16:0
  10fb98:    55 35             	r5 = 0x55			  ## p11.S:17:0
  10fb9a:    c6 ff ff 1f 1a 00 	r6 = 0x1a1fff <__stub_LZ4_decompress_safe_usingDict+0x92002 : 1a1ffe >			  ## p11.S:19:0
  10fba0:    04 88             	goto 0x10 <p11_boot+0x32 : 10fbb2 >			  ## p11.S:21:0
  10fba2:    e9 40             	b[r6+0x0] = r1			  ## p11.S:23:0
  10fba4:    ea 40             	b[r6+0x0] = r2			  ## p11.S:24:0
  10fba6:    eb 40             	b[r6+0x0] = r3			  ## p11.S:25:0
  10fba8:    ec 40             	b[r6+0x0] = r4			  ## p11.S:26:0
  10fbaa:    ed 40             	b[r6+0x0] = r5			  ## p11.S:27:0
  10fbac:    20 00             	csync			  ## p11.S:28:0
  10fbae:    00 00             	nop			  ## p11.S:29:0
  10fbb0:    00 00             	nop			  ## p11.S:30:0
  10fbb2:    07 60             	r7 = [r0+0x0] 			  ## p11.S:32:0
  10fbb4:    57 e8 f5 01       	if ((r7 & 0x1) == 0) goto -0x16 <p11_boot+0x22 : 10fba2 >			  ## p11.S:33:0
  10fbb8:    c0 ff 8a 1f 1a 00 	r0 = 0x1a1f8a <__stub_LZ4_decompress_safe_usingDict+0x91F8E : 1a1f8a >			  ## p11.S:44:0
  10fbbe:    08 40             	r0 = b[r0+0x0] (u)			  ## p11.S:45:0
  10fbc0:    50 e8 17 3a       	if ((r0 & 0x80) != 0) goto 0x2e <p11_boot+0x72 : 10fbf2 >			  ## p11.S:46:0
  10fbc4:    c0 ff ec 0f 1a 00 	r0 = 0x1a0fec <__stub_LZ4_decompress_safe_usingDict+0x90FF0 : 1a0fec >			  ## p11.S:49:0
  10fbca:    01 96             	call 0x2c <read_32 : 10fbf8 >			  ## p11.S:50:0
  10fbcc:    c2 ff ef 27 12 ab 	r2 = 0xab1227ef <__stub_LZ4_decompress_safe_usingDict+0xAB0127F2 : ab1227ee >			  ## p11.S:51:0
  10fbd2:    82 e8 0e 00       	if (r0 != r2) goto 0x1c <p11_boot+0x72 : 10fbf2 >			  ## p11.S:52:0
  10fbd6:    c0 ff f0 0f 1a 00 	r0 = 0x1a0ff0 <__stub_LZ4_decompress_safe_usingDict+0x90FF4 : 1a0ff0 >			  ## p11.S:54:0
  10fbdc:    01 8d             	call 0x1a <read_32 : 10fbf8 >			  ## p11.S:55:0
  10fbde:    64 e0 80 0d       	ssp = r0			  ## p11.S:56:0
  10fbe2:    c0 ff f4 0f 1a 00 	r0 = 0x1a0ff4 <__stub_LZ4_decompress_safe_usingDict+0x90FF8 : 1a0ff4 >			  ## p11.S:58:0
  10fbe8:    01 87             	call 0xe <read_32 : 10fbf8 >			  ## p11.S:59:0
  10fbea:    64 e0 80 0c       	usp = r0			  ## p11.S:60:0
  10fbee:    64 e0 80 0e       	sp = r0			  ## p11.S:61:0
  10fbf2:    64 e0 80 e3       	rets = r14			  ## p11.S:63:0
  10fbf6:    80 00             	rts			  ## p11.S:64:0


read_32:
  10fbf8:    09 43             	r1 = b[r0+0x3] (u)			  ## p11.S:70:0
  10fbfa:    0a 42             	r2 = b[r0+0x2] (u)			  ## p11.S:71:0
  10fbfc:    a2 f1 20 14       	r2 <= insert(r1, p:0x8, l:0x8)  #			  ## p11.S:72:0
  10fc00:    0b 41             		 r3 = b[r0+0x1] (u)			  ## p11.S:72:0
  10fc02:    08 40             	r0 = b[r0+0x0] (u)			  ## p11.S:73:0
  10fc04:    a0 e1 20 34       	r0 <= insert(r3, p:0x8, l:0x8)			  ## p11.S:74:0
  10fc08:    a0 e1 40 28       	r0 <= insert(r2, p:0x10, l:0x10)			  ## p11.S:75:0
  10fc0c:    80 00             	rts			  ## p11.S:76:0


strchr:
  10fc0e:    11 17             	r1 = r1.b0 (u)
  10fc10:    02 07             	r2 = b[r0++=0x1] (u)
  10fc12:    01 e8 01 20       	if (r2 == r1) goto 0x2 <strchr+0xA : 10fc18 >
  10fc16:    f2 5c             	if (r2 != 0) goto -0x8 <strchr+0x2 : 10fc10 >
  10fc18:    f8 3f             	r0 += -0x1
  10fc1a:    92 e8 00 01       	if (r2 != r1) {
  10fc1e:    40 20             		r0 = 0x0
                               	}
  10fc20:    80 00             	rts


strncmp:
  10fc22:    74 04             	[--sp] = {rets, r4}
  10fc24:    02 4c             	if (r2 == 0) goto 0x18 <strncmp+0x1C : 10fc3e >
  10fc26:    a2 e0 01 20       	r2 = 0x1 - r2
  10fc2a:    04 84             	goto 0x8 <strncmp+0x12 : 10fc34 >
  10fc2c:    02 46             	if (r2 == 0) goto 0xc <strncmp+0x18 : 10fc3a >
  10fc2e:    83 e8 04 40       	if (r4 != r3) goto 0x8 <strncmp+0x18 : 10fc3a >
  10fc32:    c2 21             	r2 += 0x1
  10fc34:    13 07             	r3 = b[r1++=0x1] (u)
  10fc36:    04 07             	r4 = b[r0++=0x1] (u)
  10fc38:    f4 59             	if (r4 != 0) goto -0xe <strncmp+0xA : 10fc2c >
  10fc3a:    c8 1e             	r0 = r4 - r3
  10fc3c:    54 04             	{pc, r4} = [sp++]
  10fc3e:    40 20             	r0 = 0x0
  10fc40:    54 04             	{pc, r4} = [sp++]


strstr:
  10fc42:    74 04             	[--sp] = {rets, r4}
  10fc44:    0a 40             	r2 = b[r0+0x0] (u)
  10fc46:    82 4f             	if (r2 != 0) goto 0x1e <strstr+0x24 : 10fc66 >
  10fc48:    19 40             	r1 = b[r1+0x0] (u)
  10fc4a:    01 4f             	if (r1 == 0) goto 0x1e <strstr+0x28 : 10fc6a >
  10fc4c:    40 20             	r0 = 0x0
  10fc4e:    54 04             	{pc, r4} = [sp++]
  10fc50:    42 20             	r2 = 0x0
  10fc52:    d8 ee 10 32       	r3 = b[r1+r2] (u)
  10fc56:    03 49             	if (r3 == 0) goto 0x12 <strstr+0x28 : 10fc6a >
  10fc58:    d8 ee 00 42       	r4 = b[r0+r2] (u)
  10fc5c:    c2 21             	r2 += 0x1
  10fc5e:    04 e8 f8 31       	if (r3 == r4) goto -0x10 <strstr+0x10 : 10fc52 >
  10fc62:    58 ee 01 20       	r2 = b[++r0=0x1] (u)
  10fc66:    f2 54             	if (r2 != 0) goto -0x18 <strstr+0xE : 10fc50 >
  10fc68:    f7 91             	goto -0x1e <strstr+0xA : 10fc4c >
  10fc6a:    54 04             	{pc, r4} = [sp++]


rom_size:
  10fc6c:    00 00             	nop
  10fc6e:    00 00             	nop
  10fc70:    00 00             	nop
  10fc72:    00 00             	nop
  10fc74:    00 00             	nop
  10fc76:    00 00             	nop
  10fc78:    00 00             	nop
  10fc7a:    00 00             	nop
  10fc7c:    00 00             	nop
  10fc7e:    00 00             	nop
  10fc80:    00 00             	nop
  10fc82:    00 00             	nop
  10fc84:    00 00             	nop
  10fc86:    00 00             	nop
  10fc88:    00 00             	nop
  10fc8a:    00 00             	nop
  10fc8c:    00 00             	nop
  10fc8e:    00 00             	nop
  10fc90:    00 00             	nop
  10fc92:    00 00             	nop
  10fc94:    00 00             	nop
  10fc96:    00 00             	nop
  10fc98:    00 00             	nop
  10fc9a:    00 00             	nop
  10fc9c:    00 00             	nop
  10fc9e:    00 00             	nop
  10fca0:    00 00             	nop
  10fca2:    00 00             	nop
  10fca4:    00 00             	nop
  10fca6:    00 00             	nop
  10fca8:    00 00             	nop
  10fcaa:    00 00             	nop
  10fcac:    00 00             	nop
  10fcae:    00 00             	nop
  10fcb0:    00 00             	nop
  10fcb2:    00 00             	nop
  10fcb4:    00 00             	nop
  10fcb6:    00 00             	nop
  10fcb8:    00 00             	nop
  10fcba:    00 00             	nop
  10fcbc:    00 00             	nop
  10fcbe:    00 00             	nop
  10fcc0:    00 00             	nop
  10fcc2:    00 00             	nop
  10fcc4:    00 00             	nop
  10fcc6:    00 00             	nop
  10fcc8:    00 00             	nop
  10fcca:    00 00             	nop
  10fccc:    00 00             	nop
  10fcce:    00 00             	nop
  10fcd0:    00 00             	nop
  10fcd2:    00 00             	nop
  10fcd4:    00 00             	nop
  10fcd6:    00 00             	nop
  10fcd8:    00 00             	nop
  10fcda:    00 00             	nop
  10fcdc:    00 00             	nop
  10fcde:    00 00             	nop
  10fce0:    00 00             	nop
  10fce2:    00 00             	nop
  10fce4:    00 00             	nop
  10fce6:    00 00             	nop
  10fce8:    00 00             	nop
  10fcea:    00 00             	nop
  10fcec:    00 00             	nop
  10fcee:    00 00             	nop
  10fcf0:    00 00             	nop
  10fcf2:    00 00             	nop
  10fcf4:    00 00             	nop
  10fcf6:    00 00             	nop
  10fcf8:    00 00             	nop
  10fcfa:    00 00             	nop
  10fcfc:    00 00             	nop
  10fcfe:    00 00             	nop
  10fd00:    00 00             	nop
  10fd02:    00 00             	nop
  10fd04:    00 00             	nop
  10fd06:    00 00             	nop
  10fd08:    00 00             	nop
  10fd0a:    00 00             	nop
  10fd0c:    00 00             	nop
  10fd0e:    00 00             	nop
  10fd10:    00 00             	nop
  10fd12:    00 00             	nop
  10fd14:    00 00             	nop
  10fd16:    00 00             	nop
  10fd18:    00 00             	nop
  10fd1a:    00 00             	nop
  10fd1c:    00 00             	nop
  10fd1e:    00 00             	nop
  10fd20:    00 00             	nop
  10fd22:    00 00             	nop
  10fd24:    00 00             	nop
  10fd26:    00 00             	nop
  10fd28:    00 00             	nop
  10fd2a:    00 00             	nop
  10fd2c:    00 00             	nop
  10fd2e:    00 00             	nop
  10fd30:    00 00             	nop
  10fd32:    00 00             	nop
  10fd34:    00 00             	nop
  10fd36:    00 00             	nop
  10fd38:    00 00             	nop
  10fd3a:    00 00             	nop
  10fd3c:    00 00             	nop
  10fd3e:    00 00             	nop
  10fd40:    00 00             	nop
  10fd42:    00 00             	nop
  10fd44:    00 00             	nop
  10fd46:    00 00             	nop
  10fd48:    00 00             	nop
  10fd4a:    00 00             	nop
  10fd4c:    00 00             	nop
  10fd4e:    00 00             	nop
  10fd50:    00 00             	nop
  10fd52:    00 00             	nop
  10fd54:    00 00             	nop
  10fd56:    00 00             	nop
  10fd58:    00 00             	nop
  10fd5a:    00 00             	nop
  10fd5c:    00 00             	nop
  10fd5e:    00 00             	nop
  10fd60:    00 00             	nop
  10fd62:    00 00             	nop
  10fd64:    00 00             	nop
  10fd66:    00 00             	nop
  10fd68:    00 00             	nop
  10fd6a:    00 00             	nop
  10fd6c:    00 00             	nop
  10fd6e:    00 00             	nop
  10fd70:    00 00             	nop
  10fd72:    00 00             	nop
  10fd74:    00 00             	nop
  10fd76:    00 00             	nop
  10fd78:    00 00             	nop
  10fd7a:    00 00             	nop
  10fd7c:    00 00             	nop
  10fd7e:    00 00             	nop
  10fd80:    00 00             	nop
  10fd82:    00 00             	nop
  10fd84:    00 00             	nop
  10fd86:    00 00             	nop
  10fd88:    00 00             	nop
  10fd8a:    00 00             	nop
  10fd8c:    00 00             	nop
  10fd8e:    00 00             	nop
  10fd90:    00 00             	nop
  10fd92:    00 00             	nop
  10fd94:    00 00             	nop
  10fd96:    00 00             	nop
  10fd98:    00 00             	nop
  10fd9a:    00 00             	nop
  10fd9c:    00 00             	nop
  10fd9e:    00 00             	nop
  10fda0:    00 00             	nop
  10fda2:    00 00             	nop
  10fda4:    00 00             	nop
  10fda6:    00 00             	nop
  10fda8:    00 00             	nop
  10fdaa:    00 00             	nop
  10fdac:    00 00             	nop
  10fdae:    00 00             	nop
  10fdb0:    00 00             	nop
  10fdb2:    00 00             	nop
  10fdb4:    00 00             	nop
  10fdb6:    00 00             	nop
  10fdb8:    00 00             	nop
  10fdba:    00 00             	nop
  10fdbc:    00 00             	nop
  10fdbe:    00 00             	nop
  10fdc0:    00 00             	nop
  10fdc2:    00 00             	nop
  10fdc4:    00 00             	nop
  10fdc6:    00 00             	nop
  10fdc8:    00 00             	nop
  10fdca:    00 00             	nop
  10fdcc:    00 00             	nop
  10fdce:    00 00             	nop
  10fdd0:    00 00             	nop
  10fdd2:    00 00             	nop
  10fdd4:    00 00             	nop
  10fdd6:    00 00             	nop
  10fdd8:    00 00             	nop
  10fdda:    00 00             	nop
  10fddc:    00 00             	nop
  10fdde:    00 00             	nop
  10fde0:    00 00             	nop
  10fde2:    00 00             	nop
  10fde4:    00 00             	nop
  10fde6:    00 00             	nop
  10fde8:    00 00             	nop
  10fdea:    00 00             	nop
  10fdec:    00 00             	nop
  10fdee:    00 00             	nop
  10fdf0:    00 00             	nop
  10fdf2:    00 00             	nop
  10fdf4:    00 00             	nop
  10fdf6:    00 00             	nop


__stub_local_irq_enable:
  10fdf8:    ff ea 5f 87       	goto -0xf142 <local_irq_enable : 100cba >			  ## entry_list.S:7:0


__stub_local_irq_disable:
  10fdfc:    ff ea 56 87       	goto -0xf154 <local_irq_disable : 100cac >			  ## entry_list.S:14:0


__stub_lp_enter:
  10fe00:    ff ea d6 f0       	goto -0x1e54 <lp_enter : 10dfb0 >			  ## entry_list.S:21:0


__stub_lp_signature_set:
  10fe04:    ff ea 7f f0       	goto -0x1f02 <lp_signature_set : 10df06 >			  ## entry_list.S:28:0


__stub_os_init:
  10fe08:    ff ea c3 91       	goto -0xdc7a <os_init : 102192 >			  ## entry_list.S:35:0


__stub_os_start:
  10fe0c:    ff ea e2 91       	goto -0xdc3c <os_start : 1021d4 >			  ## entry_list.S:42:0


__stub_os_get_curr_tcb_var:
  10fe10:    ff ea c5 91       	goto -0xdc76 <os_get_curr_tcb_var : 10219e >			  ## entry_list.S:49:0


__stub_os_task_create:
  10fe14:    ff ea 19 92       	goto -0xdbce <os_task_create : 10224a >			  ## entry_list.S:56:0


__stub_os_current_task:
  10fe18:    ff ea 4e 92       	goto -0xdb64 <os_current_task : 1022b8 >			  ## entry_list.S:63:0


__stub_os_time_dly:
  10fe1c:    ff ea 52 92       	goto -0xdb5c <os_time_dly : 1022c4 >			  ## entry_list.S:70:0


__stub_os_time_get:
  10fe20:    ff ea 5f 92       	goto -0xdb42 <os_time_get : 1022e2 >			  ## entry_list.S:77:0


__stub_os_task_del_req:
  10fe24:    ff ea 9a 92       	goto -0xdacc <os_task_del_req : 10235c >			  ## entry_list.S:84:0


__stub_os_task_del_res:
  10fe28:    ff ea c0 92       	goto -0xda80 <os_task_del_res : 1023ac >			  ## entry_list.S:91:0


__stub_os_task_del:
  10fe2c:    ff ea c8 92       	goto -0xda70 <os_task_del : 1023c0 >			  ## entry_list.S:98:0


__stub___os_taskq_pend:
  10fe30:    ff ea 2a 93       	goto -0xd9ac <__os_taskq_pend : 102488 >			  ## entry_list.S:105:0


__stub_os_taskq_pend:
  10fe34:    ff ea aa 93       	goto -0xd8ac <os_taskq_pend : 10258c >			  ## entry_list.S:112:0


__stub_os_task_pend:
  10fe38:    ff ea ab 93       	goto -0xd8aa <os_task_pend : 102592 >			  ## entry_list.S:119:0


__stub___os_taskq_post:
  10fe3c:    ff ea ac 93       	goto -0xd8a8 <__os_taskq_post : 102598 >			  ## entry_list.S:126:0


__stub_os_taskq_post:
  10fe40:    ff ea e4 93       	goto -0xd838 <os_taskq_post : 10260c >			  ## entry_list.S:133:0


__stub_os_taskq_post_type:
  10fe44:    ff ea fd 93       	goto -0xd806 <os_taskq_post_type : 102642 >			  ## entry_list.S:140:0


__stub_os_taskq_flush:
  10fe48:    ff ea fc 93       	goto -0xd808 <os_taskq_flush : 102644 >			  ## entry_list.S:147:0


__stub_task_queue_post_event:
  10fe4c:    ff ea 59 94       	goto -0xd74e <task_queue_post_event : 102702 >			  ## entry_list.S:154:0


__stub_os_taskq_post_msg:
  10fe50:    ff ea 5b 94       	goto -0xd74a <os_taskq_post_msg : 10270a >			  ## entry_list.S:161:0


__stub_os_taskq_post_event:
  10fe54:    ff ea 75 94       	goto -0xd716 <os_taskq_post_event : 102742 >			  ## entry_list.S:168:0


__stub_os_taskq_accept:
  10fe58:    ff ea 8f 94       	goto -0xd6e2 <os_taskq_accept : 10277a >			  ## entry_list.S:175:0


__stub_os_taskq_del:
  10fe5c:    ff ea 90 94       	goto -0xd6e0 <os_taskq_del : 102780 >			  ## entry_list.S:182:0


__stub_os_taskq_del_type:
  10fe60:    ff ea f9 94       	goto -0xd60e <os_taskq_del_type : 102856 >			  ## entry_list.S:189:0


__stub_os_sem_create:
  10fe64:    ff ea f8 94       	goto -0xd610 <os_sem_create : 102858 >			  ## entry_list.S:196:0


__stub_os_sem_del:
  10fe68:    ff ea 17 95       	goto -0xd5d2 <os_sem_del : 10289a >			  ## entry_list.S:203:0


__stub_os_sem_pend:
  10fe6c:    ff ea 1a 95       	goto -0xd5cc <os_sem_pend : 1028a4 >			  ## entry_list.S:210:0


__stub_os_sem_post:
  10fe70:    ff ea b8 92       	goto -0xda90 <os_sem_post : 1023e4 >			  ## entry_list.S:217:0


__stub_os_sem_set:
  10fe74:    ff ea 2b 95       	goto -0xd5aa <os_sem_set : 1028ce >			  ## entry_list.S:224:0


__stub_os_sem_valid:
  10fe78:    ff ea 42 95       	goto -0xd57c <os_sem_valid : 102900 >			  ## entry_list.S:231:0


__stub_os_sem_query:
  10fe7c:    ff ea 47 95       	goto -0xd572 <os_sem_query : 10290e >			  ## entry_list.S:238:0


__stub_os_mutex_create:
  10fe80:    ff ea 51 95       	goto -0xd55e <os_mutex_create : 102926 >			  ## entry_list.S:245:0


__stub_os_mutex_del:
  10fe84:    ff ea 65 95       	goto -0xd536 <os_mutex_del : 102952 >			  ## entry_list.S:252:0


__stub_os_mutex_pend:
  10fe88:    ff ea 71 95       	goto -0xd51e <os_mutex_pend : 10296e >			  ## entry_list.S:259:0


__stub_os_mutex_post:
  10fe8c:    ff ea af 95       	goto -0xd4a2 <os_mutex_post : 1029ee >			  ## entry_list.S:266:0


__stub_os_mutex_valid:
  10fe90:    ff ea e0 95       	goto -0xd440 <os_mutex_valid : 102a54 >			  ## entry_list.S:273:0


__stub_xTaskCreate:
  10fe94:    ff ea a1 8e       	goto -0xe2be <xTaskCreate : 101bda >			  ## entry_list.S:280:0


__stub_xTaskGetCurrentTaskHandle:
  10fe98:    ff ea 6f 91       	goto -0xdd22 <xTaskGetCurrentTaskHandle : 10217a >			  ## entry_list.S:287:0


__stub_xTaskGetTickCount:
  10fe9c:    ff ea 82 90       	goto -0xdefc <xTaskGetTickCount : 101fa4 >			  ## entry_list.S:294:0


__stub_xTaskGetHandle:
  10fea0:    ff ea c9 90       	goto -0xde6e <xTaskGetHandle : 102036 >			  ## entry_list.S:301:0


__stub_vTaskDelete:
  10fea4:    ff ea 97 8f       	goto -0xe0d2 <vTaskDelete : 101dd6 >			  ## entry_list.S:308:0


__stub_xTaskGetApplicationTaskTag:
  10fea8:    ff ea 37 91       	goto -0xdd92 <xTaskGetApplicationTaskTag : 10211a >			  ## entry_list.S:315:0


__stub_vTaskSetApplicationTaskTag:
  10feac:    ff ea 20 91       	goto -0xddc0 <vTaskSetApplicationTaskTag : 1020f0 >			  ## entry_list.S:322:0


__stub_xQueueGenericCreateStatic:
  10feb0:    ff ea 76 88       	goto -0xef14 <xQueueGenericCreateStatic : 100fa0 >			  ## entry_list.S:329:0


__stub_xQueueGenericReset:
  10feb4:    ff ea 3d 88       	goto -0xef86 <xQueueGenericReset : 100f32 >			  ## entry_list.S:336:0


__stub_xQueueGenericSend:
  10feb8:    ff ea 9b 8b       	goto -0xe8ca <xQueueGenericSend : 1015f2 >			  ## entry_list.S:343:0


__stub_xQueueGenericSendFromISR:
  10febc:    ff ea 96 8d       	goto -0xe4d4 <xQueueGenericSendFromISR : 1019ec >			  ## entry_list.S:350:0


__stub_xQueueGenericReceive:
  10fec0:    ff ea 6c 8c       	goto -0xe728 <xQueueGenericReceive : 10179c >			  ## entry_list.S:357:0


__stub_xQueueReceiveFromISR:
  10fec4:    ff ea e7 8d       	goto -0xe432 <xQueueReceiveFromISR : 101a96 >			  ## entry_list.S:364:0


__stub_vQueueDelete:
  10fec8:    ff ea 6a 8e       	goto -0xe32c <vQueueDelete : 101ba0 >			  ## entry_list.S:371:0


__stub_uxQueueMessagesWaiting:
  10fecc:    ff ea 24 8e       	goto -0xe3b8 <uxQueueMessagesWaiting : 101b18 >			  ## entry_list.S:378:0


__stub_uxQueueMessagesWaitingFromISR:
  10fed0:    ff ea 54 8e       	goto -0xe358 <uxQueueMessagesWaitingFromISR : 101b7c >			  ## entry_list.S:385:0


__stub_uxQueueSpacesAvailable:
  10fed4:    ff ea 38 8e       	goto -0xe390 <uxQueueSpacesAvailable : 101b48 >			  ## entry_list.S:392:0


__stub_pcTaskGetName:
  10fed8:    ff ea 69 90       	goto -0xdf2e <pcTaskGetName : 101fae >			  ## entry_list.S:399:0


__stub_prvGetExpectedIdleTime:
  10fedc:    ff ea e1 8f       	goto -0xe03e <prvGetExpectedIdleTime : 101ea2 >			  ## entry_list.S:406:0


__stub_eTaskConfirmSleepModeStatus:
  10fee0:    ff ea 30 91       	goto -0xdda0 <eTaskConfirmSleepModeStatus : 102144 >			  ## entry_list.S:413:0


__stub_vTaskStepTick:
  10fee4:    ff ea e7 90       	goto -0xde32 <vTaskStepTick : 1020b6 >			  ## entry_list.S:420:0


__stub_pxPortInitialiseStack:
  10fee8:    ff ea ba 95       	goto -0xd48c <pxPortInitialiseStack : 102a60 >			  ## entry_list.S:427:0


__stub_xPortStartScheduler:
  10feec:    ff ea 60 91       	goto -0xdd40 <xPortStartScheduler : 1021b0 >			  ## entry_list.S:434:0


__stub_vPortEndScheduler:
  10fef0:    ff ea bd 95       	goto -0xd486 <vPortEndScheduler : 102a6e >			  ## entry_list.S:441:0


__stub_vPortYield:
  10fef4:    ff ea f6 87       	goto -0xf014 <vPortYield : 100ee4 >			  ## entry_list.S:448:0


__stub_vPortExitCritical:
  10fef8:    ff ea cf 95       	goto -0xd462 <vPortExitCritical : 102a9a >			  ## entry_list.S:455:0


__stub_OS_ClrPending:
  10fefc:    ff ea e8 95       	goto -0xd430 <OS_ClrPending : 102ad0 >			  ## entry_list.S:462:0


__stub_vTickISR:
  10ff00:    ff ea f4 95       	goto -0xd418 <vTickISR : 102aec >			  ## entry_list.S:469:0


__stub_pmalloc_init:
  10ff04:    ff ea 68 97       	goto -0xd130 <pmalloc_init : 102dd8 >			  ## entry_list.S:476:0


__stub_pmalloc:
  10ff08:    ff ea a9 97       	goto -0xd0ae <pmalloc : 102e5e >			  ## entry_list.S:483:0


__stub_pfree:
  10ff0c:    ff ea ec 97       	goto -0xd028 <pfree : 102ee8 >			  ## entry_list.S:490:0


__stub_pmalloc_get_unused_pages:
  10ff10:    ff ea 9c 97       	goto -0xd0c8 <pmalloc_get_unused_pages : 102e4c >			  ## entry_list.S:497:0


__stub_get_physic_address:
  10ff14:    ff ea dd 97       	goto -0xd046 <get_physic_address : 102ed2 >			  ## entry_list.S:504:0


__stub_pmm_get_var:
  10ff18:    ff ea 94 97       	goto -0xd0d8 <pmm_get_var : 102e44 >			  ## entry_list.S:511:0


__stub_vmm_init_:
  10ff1c:    ff ea 1a 98       	goto -0xcfcc <vmm_init_ : 102f54 >			  ## entry_list.S:518:0


__stub_vmalloc_:
  10ff20:    ff ea 3f 98       	goto -0xcf82 <vmalloc_ : 102fa2 >			  ## entry_list.S:525:0


__stub_vfree_:
  10ff24:    ff ea d7 98       	goto -0xce52 <vfree_ : 1030d6 >			  ## entry_list.S:532:0


__stub_vmem_get_phy_adr:
  10ff28:    ff ea 23 9a       	goto -0xcbba <vmem_get_phy_adr : 103372 >			  ## entry_list.S:539:0


__stub_vmem_start:
  10ff2c:    ff ea 3c 9a       	goto -0xcb88 <vmem_start : 1033a8 >			  ## entry_list.S:546:0


__stub_vmem_end:
  10ff30:    ff ea 41 9a       	goto -0xcb7e <vmem_end : 1033b6 >			  ## entry_list.S:553:0


__stub_vmm_get_var:
  10ff34:    ff ea 31 98       	goto -0xcf9e <vmm_get_var : 102f9a >			  ## entry_list.S:560:0


__stub_vmalloc_v2:
  10ff38:    ff ea 36 99       	goto -0xcd94 <vmalloc_v2 : 1031a8 >			  ## entry_list.S:567:0


__stub_vfree_v2:
  10ff3c:    ff ea a1 99       	goto -0xccbe <vfree_v2 : 103282 >			  ## entry_list.S:574:0


__stub_vcopy_:
  10ff40:    ff ea f8 99       	goto -0xcc10 <vcopy_ : 103334 >			  ## entry_list.S:581:0


__stub_get_cvsd_codec_ops:
  10ff44:    ff ea 14 86       	goto -0xf3d8 <get_cvsd_codec_ops : 100b70 >			  ## entry_list.S:588:0


__stub_B_fir_cal_s:
  10ff48:    ff ea 47 86       	goto -0xf372 <B_fir_cal_s : 100bda >			  ## entry_list.S:595:0


__stub_B_array_vol:
  10ff4c:    ff ea 6e 86       	goto -0xf324 <B_array_vol : 100c2c >			  ## entry_list.S:602:0


__stub_B_Syn_filt:
  10ff50:    ff ea 74 86       	goto -0xf318 <B_Syn_filt : 100c3c >			  ## entry_list.S:609:0


__stub_B_Residu:
  10ff54:    ff ea 8b 86       	goto -0xf2ea <B_Residu : 100c6e >			  ## entry_list.S:616:0


__stub_B_comput_correlataionS:
  10ff58:    ff ea 33 86       	goto -0xf39a <B_comput_correlataionS : 100bc2 >			  ## entry_list.S:623:0


__stub_B_iircal:
  10ff5c:    ff ea 16 86       	goto -0xf3d4 <B_iircal : 100b8c >			  ## entry_list.S:630:0


__stub_memmem:
  10ff60:    ff ea ad 82       	goto -0xfaa6 <memmem : 1004be >			  ## entry_list.S:637:0


__stub_memcpy:
  10ff64:    ff ea 18 82       	goto -0xfbd0 <memmove : 100398 >			  ## entry_list.S:644:0


__stub_memmove:
  10ff68:    ff ea 16 82       	goto -0xfbd4 <memmove : 100398 >			  ## entry_list.S:651:0


__stub_memcmp:
  10ff6c:    ff ea 8b 82       	goto -0xfaea <memcmp : 100486 >			  ## entry_list.S:658:0


__stub_memset:
  10ff70:    ff ea 73 82       	goto -0xfb1a <memset : 10045a >			  ## entry_list.S:665:0


__stub_strcmp:
  10ff74:    ff ea b7 82       	goto -0xfa92 <strcmp : 1004e6 >			  ## entry_list.S:672:0


__stub_strcpy:
  10ff78:    ff ea 05 83       	goto -0xf9f6 <strcpy : 100586 >			  ## entry_list.S:679:0


__stub_strlen:
  10ff7c:    ff ea 3a 83       	goto -0xf98c <strlen : 1005f4 >			  ## entry_list.S:686:0


__stub_strncmp:
  10ff80:    ff ea 4f fe       	goto -0x362 <strncmp : 10fc22 >			  ## entry_list.S:693:0


__stub_strstr:
  10ff84:    ff ea 5d fe       	goto -0x346 <strstr : 10fc42 >			  ## entry_list.S:700:0


__stub_strchr:
  10ff88:    ff ea 41 fe       	goto -0x37e <strchr : 10fc0e >			  ## entry_list.S:707:0


__stub_IcuCmdKst:
  10ff8c:    ff ea ae fa       	goto -0xaa4 <IcuCmdKst : 10f4ec >			  ## entry_list.S:714:0


__stub_DcuCmdKst:
  10ff90:    ff ea d0 fa       	goto -0xa60 <DcuCmdKst : 10f534 >			  ## entry_list.S:721:0


__stub_IcuCmdSend:
  10ff94:    ff ea bd fa       	goto -0xa86 <IcuCmdSend : 10f512 >			  ## entry_list.S:728:0


__stub_DcuCmdSend:
  10ff98:    ff ea df fa       	goto -0xa42 <DcuCmdSend : 10f55a >			  ## entry_list.S:735:0


__stub_flush_dcache:
  10ff9c:    ff ea f9 fa       	goto -0xa0e <flush_dcache : 10f592 >			  ## entry_list.S:742:0


__stub_flushinv_dcache:
  10ffa0:    ff ea f8 fa       	goto -0xa10 <flushinv_dcache : 10f594 >			  ## entry_list.S:749:0


__stub_sfc_suspend:
  10ffa4:    ff ea 77 fa       	goto -0xb12 <sfc_suspend : 10f496 >			  ## entry_list.S:756:0


__stub_sfc_resume:
  10ffa8:    ff ea 93 fa       	goto -0xada <sfc_resume : 10f4d2 >			  ## entry_list.S:763:0


__stub_sfc_drop_cache:
  10ffac:    ff ea e8 fa       	goto -0xa30 <sfc_drop_cache : 10f580 >			  ## entry_list.S:770:0


__stub_chip_crc16:
  10ffb0:    ff ea 2a f3       	goto -0x19ac <chip_crc16 : 10e608 >			  ## entry_list.S:777:0


__stub_CrcDecode:
  10ffb4:    ff ea 4d f3       	goto -0x1966 <CrcDecode : 10e652 >			  ## entry_list.S:784:0


__stub_mask_init:
  10ffb8:    ff ea 92 86       	goto -0xf2dc <mask_init : 100ce0 >			  ## entry_list.S:791:0


__stub_wdt_clr:
  10ffbc:    ff ea e5 f2       	goto -0x1a36 <wdt_clr : 10e58a >			  ## entry_list.S:798:0


__stub_nvram_set_boot_state:
  10ffc0:    ff ea 50 83       	goto -0xf960 <nvram_set_boot_state : 100664 >			  ## entry_list.S:805:0


__stub_chip_reset:
  10ffc4:    ff ea 24 83       	goto -0xf9b8 <chip_reset : 100610 >			  ## entry_list.S:812:0


__stub_the_debug_isr:
  10ffc8:    ff ea 25 80       	goto -0xffb6 <the_debug_isr : 100016 >			  ## entry_list.S:819:0


__stub_exception_irq_handler:
  10ffcc:    ff ea 1a 80       	goto -0xffcc <exception_irq_handler : 100004 >			  ## entry_list.S:826:0


__stub_print:
  10ffd0:    ff ea aa fb       	goto -0x8ac <print : 10f728 >			  ## entry_list.S:833:0


__stub_sprintf:
  10ffd4:    ff ea e7 fc       	goto -0x632 <sprintf : 10f9a6 >			  ## entry_list.S:840:0


__stub_printf:
  10ffd8:    ff ea d7 fc       	goto -0x652 <printf : 10f98a >			  ## entry_list.S:847:0


__stub_puts:
  10ffdc:    ff ea c6 fc       	goto -0x674 <puts : 10f96c >			  ## entry_list.S:854:0


__stub_doe:
  10ffe0:    ff ea ab fd       	goto -0x4aa <doe : 10fb3a >			  ## entry_list.S:861:0


__stub_spi_get_port:
  10ffe4:    ff ea 94 f4       	goto -0x16d8 <spi_get_port : 10e910 >			  ## entry_list.S:868:0


__stub__pll_init:
  10ffe8:    ff ea 4c f8       	goto -0xf68 <_pll_init : 10f084 >			  ## entry_list.S:875:0


__stub_flash_poweron:
  10ffec:    ff ea a1 f0       	goto -0x1ebe <flash_poweron : 10e132 >			  ## entry_list.S:882:0


__stub_LZ4_setStreamDecode:
  10fff0:    ff ea 62 fd       	goto -0x53c <LZ4_setStreamDecode : 10fab8 >			  ## entry_list.S:889:0


__stub_LZ4_decompress_safe_continue:
  10fff4:    ff ea 00 f6       	goto -0x1400 <LZ4_decompress_safe_continue : 10ebf8 >			  ## entry_list.S:896:0


__stub_LZ4_decompress_generic:
  10fff8:    ff ea c5 f4       	goto -0x1676 <LZ4_decompress_generic : 10e986 >			  ## entry_list.S:903:0


__stub_LZ4_decompress_safe_usingDict:
  10fffc:    ff ea 67 fd       	goto -0x532 <LZ4_decompress_safe_usingDict : 10face >			  ## entry_list.S:910:0

Disassembly of section .nul_space:
.nul_space:
   f4240:    ec 81             	r4 = sp + 97
   f4242:    10 00              <unkown instruction>
   f4244:    ec 83             	r4 = sp + 99
   f4246:    10 00              <unkown instruction>
   f4248:    ec 93             	r4 = sp + 115
   f424a:    10 00              <unkown instruction>
   f424c:    ec a3             	r4 = r6 >>> 0x3
   f424e:    10 00              <unkown instruction>
   f4250:    ec a5             	r4 = r6 >>> 0x5
   f4252:    10 00              <unkown instruction>
   f4254:    ec b5             	r4 = r6 >>> 0x15
   f4256:    10 00              <unkown instruction>
   f4258:    ec b7             	r4 = r6 >>> 0x17
   f425a:    10 00              <unkown instruction>
   f425c:    fc b9             	r4 = r7 >>> 0x19
   f425e:    10 00              <unkown instruction>
   f4260:    08 ba             	r0 = r0 <<< 0x1a
   f4262:    10 00              <unkown instruction>
   f4264:    14 ba             	r4 = r1 << 0x1a
   f4266:    10 00              <unkown instruction>
   f4268:    20 ba             	r0 = r2 << 0x1a
   f426a:    10 00              <unkown instruction>
   f426c:    74 ba             	r4 = r7 << 0x1a
   f426e:    10 00              <unkown instruction>
   f4270:    8e ba             	r6 = r0 >>> 0x1a
   f4272:    10 00              <unkown instruction>
   f4274:    ee ba             	r6 = r6 >>> 0x1a
   f4276:    10 00              <unkown instruction>
   f4278:    08 bb             	r0 = r0 <<< 0x1b
   f427a:    10 00              <unkown instruction>
   f427c:    6c bb             	r4 = r6 <<< 0x1b
   f427e:    10 00              <unkown instruction>
   f4280:    8a bb             	r2 = r0 >>> 0x1b
   f4282:    10 00              <unkown instruction>
   f4284:    f2 bb             	r2 = r7 >> 0x1b
   f4286:    10 00              <unkown instruction>
   f4288:    52 bc             	r2 = r5 << 0x1c
   f428a:    10 00              <unkown instruction>
   f428c:    72 bc             	r2 = r7 << 0x1c
   f428e:    10 00              <unkown instruction>
   f4290:    ca bc             	r2 = r4 >>> 0x1c
   f4292:    10 00              <unkown instruction>
   f4294:    ea bc             	r2 = r6 >>> 0x1c
   f4296:    10 00              <unkown instruction>
   f4298:    3c bd             	r4 = r3 <<< 0x1d
   f429a:    10 00              <unkown instruction>
   f429c:    5c bd             	r4 = r5 <<< 0x1d
   f429e:    10 00              <unkown instruction>
   f42a0:    8c bd             	r4 = r0 >>> 0x1d
   f42a2:    10 00              <unkown instruction>
   f42a4:    bc bd             	r4 = r3 >>> 0x1d
   f42a6:    10 00              <unkown instruction>
   f42a8:    c0 c1              <unkown instruction>
   f42aa:    10 00              <unkown instruction>
   f42ac:    00 c2              <unkown instruction>
   f42ae:    10 00              <unkown instruction>
   f42b0:    40 c2              <unkown instruction>
   f42b2:    10 00              <unkown instruction>
   f42b4:    80 c2              <unkown instruction>
   f42b6:    10 00              <unkown instruction>
   f42b8:    c0 c2              <unkown instruction>
   f42ba:    10 00              <unkown instruction>
   f42bc:    dc c2              <unkown instruction>
   f42be:    10 00              <unkown instruction>
   f42c0:    0c c3              <unkown instruction>
   f42c2:    10 00              <unkown instruction>
   f42c4:    18 c3              <unkown instruction>
   f42c6:    10 00              <unkown instruction>
   f42c8:    58 c3              <unkown instruction>
   f42ca:    10 00              <unkown instruction>
   f42cc:    f0 c4              <unkown instruction>
   f42ce:    10 00              <unkown instruction>
   f42d0:    28 c6              <unkown instruction>
   f42d2:    10 00              <unkown instruction>
   f42d4:    60 c7              <unkown instruction>
   f42d6:    10 00              <unkown instruction>
   f42d8:    90 c8              <unkown instruction>
   f42da:    10 00              <unkown instruction>
   f42dc:    d8 c9              <unkown instruction>
   f42de:    10 00              <unkown instruction>
   f42e0:    18 cb              <unkown instruction>
   f42e2:    10 00              <unkown instruction>
   f42e4:    10 cc              <unkown instruction>
   f42e6:    10 00              <unkown instruction>
   f42e8:    08 cd              <unkown instruction>
   f42ea:    10 00              <unkown instruction>
   f42ec:    a8 cf              <unkown instruction>
   f42ee:    10 00              <unkown instruction>
   f42f0:    38 d2              <unkown instruction>
   f42f2:    10 00              <unkown instruction>
   f42f4:    f8 d6             	r8 = r15  #
   f42f6:    10 00              <unkown instruction>
   f42f8:    f4 b9             		 r4 = r7 >> 0x19
   f42fa:    10 00              <unkown instruction>
   f42fc:    a0 40             	if (r0 != 0) goto 0x80 <RAM_LIMIT_H+0xC837E : f437e >
   f42fe:    10 00              <unkown instruction>
   f4300:    a0 44             	if (r0 != 0) goto 0x88 <RAM_LIMIT_H+0xC838A : f438a >
   f4302:    10 00              <unkown instruction>
   f4304:    a0 46             	if (r0 != 0) goto 0x8c <RAM_LIMIT_H+0xC8392 : f4392 >
   f4306:    10 00              <unkown instruction>
   f4308:    a0 48             	if (r0 != 0) goto 0x90 <RAM_LIMIT_H+0xC839A : f439a >
   f430a:    10 00              <unkown instruction>
   f430c:    a0 49             	if (r0 != 0) goto 0x92 <RAM_LIMIT_H+0xC83A0 : f43a0 >
   f430e:    10 00              <unkown instruction>
   f4310:    a0 4d             	if (r0 != 0) goto 0x9a <RAM_LIMIT_H+0xC83AC : f43ac >
   f4312:    10 00              <unkown instruction>
   f4314:    a0 51             	if (r0 != 0) goto 0xa2 <RAM_LIMIT_H+0xC83B8 : f43b8 >
   f4316:    10 00              <unkown instruction>
   f4318:    a0 59             	if (r0 != 0) goto 0xb2 <RAM_LIMIT_H+0xC83CC : f43cc >
   f431a:    10 00              <unkown instruction>
   f431c:    a0 61             	[r2+0x4] = r0
   f431e:    10 00              <unkown instruction>
   f4320:    a0 71             	[r2+-0x3c] = r0
   f4322:    10 00              <unkown instruction>
   f4324:    60 d7             	r0 = r6.b0 (u)  #
   f4326:    10 00              <unkown instruction>
   f4328:    64 d8             		 r4 += r6  #
   f432a:    10 00              <unkown instruction>
   f432c:    68 d9             		 r0 ^= r6  #
   f432e:    10 00              <unkown instruction>
   f4330:    6c da             		 r4 <<<= r6  #
   f4332:    10 00              <unkown instruction>
   f4334:    f0 da             		 r0 >>= r7  #
   f4336:    10 00              <unkown instruction>

